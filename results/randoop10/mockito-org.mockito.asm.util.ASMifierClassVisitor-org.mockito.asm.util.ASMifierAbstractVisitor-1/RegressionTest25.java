import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest25 {

    public static boolean debug = false;

    @Test
    public void test12501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12501");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        aSMifierMethodVisitor0.visitMethodInsn(10, "", "hi!", "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label17, label18, (int) (short) -1);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label25, label26, (int) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.junit.Assert.assertNotNull(annotationVisitor29);
    }

    @Test
    public void test12502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12502");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitSource("hi!", "");
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.write((-1));
        printWriter39.flush();
        java.util.Locale locale43 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray50 = null;
        aSMifierMethodVisitor45.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray48, (int) (short) 1, objArray50);
        java.io.PrintWriter printWriter52 = printWriter39.printf(locale43, "", (java.lang.Object[]) strArray48);
        org.mockito.asm.MethodVisitor methodVisitor53 = aSMifierClassVisitor15.visitMethod((int) (byte) 0, "", "", "hi!", strArray48);
        methodVisitor53.visitMultiANewArrayInsn("", 1);
        methodVisitor53.visitTypeInsn((int) ' ', "hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(methodVisitor53);
    }

    @Test
    public void test12503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12503");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj40 = null;
        aSMifierMethodVisitor31.visitLdcInsn(obj40);
        aSMifierMethodVisitor31.visitInsn((int) ' ');
        aSMifierMethodVisitor31.visitIincInsn((int) (byte) 100, (int) (short) 1);
        aSMifierMethodVisitor31.visitTypeInsn((int) (byte) 0, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor31.visitAnnotationDefault();
        org.mockito.asm.FieldVisitor fieldVisitor51 = aSMifierClassVisitor15.visitField((int) (short) 10, "hi!", "", "", (java.lang.Object) aSMifierMethodVisitor31);
        aSMifierClassVisitor15.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor51);
    }

    @Test
    public void test12504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12504");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor9 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "hi!", true);
        aSMifierMethodVisitor0.visitIincInsn((int) ' ', (int) (byte) 10);
        org.junit.Assert.assertNotNull(annotationVisitor9);
        org.junit.Assert.assertNotNull(annotationVisitor13);
    }

    @Test
    public void test12505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12505");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println((long) (short) 100);
        printWriter1.write((int) '4');
        printWriter1.println(10L);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter11 = printWriter1.append((java.lang.CharSequence) "hi!", 1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12506");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        java.util.List list33 = aSMifierClassVisitor28.getText();
        org.mockito.asm.FieldVisitor fieldVisitor39 = aSMifierClassVisitor28.visitField((int) (short) -1, "", "hi!", "", (java.lang.Object) 10.0f);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = fieldVisitor39.visitAnnotation("hi!", true);
        annotationVisitor42.visitEnd();
        annotationVisitor42.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = annotationVisitor42.visitArray("");
        java.lang.Class<?> wildcardClass47 = annotationVisitor42.getClass();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test12507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12507");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor0.visitInsn(1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 0);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, (int) '4');
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 1, (int) ' ');
        java.util.List list21 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(list21);
    }

    @Test
    public void test12508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12508");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor0.visitInsn(100);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray24 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray26 = null;
        aSMifierMethodVisitor21.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray24, (int) (short) 1, objArray26);
        aSMifierMethodVisitor21.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor21.visitMaxs((int) (short) 100, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor21.visitParameterAnnotation((int) (short) 1, "", false);
        java.lang.Class<?> wildcardClass40 = aSMifierMethodVisitor21.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass40);
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label43);
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "hi!", false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(annotationVisitor48);
    }

    @Test
    public void test12509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12509");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter16 = printWriter12.append((java.lang.CharSequence) "");
        printWriter8.println((java.lang.Object) printWriter16);
        printWriter16.print((long) (byte) 10);
        printWriter16.println(10.0d);
        java.io.PrintWriter printWriter23 = printWriter16.append((java.lang.CharSequence) "");
        printWriter23.print((-1));
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        java.util.Locale locale29 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray34 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray36 = null;
        aSMifierMethodVisitor31.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray34, (int) (short) 1, objArray36);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray50 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor39, strArray48, 1.0f };
        java.io.PrintWriter printWriter51 = printWriter28.printf(locale29, "", (java.lang.Object[]) strArray48);
        printWriter51.print("hi!");
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter((java.io.Writer) printWriter51);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter54);
        aSMifierClassVisitor55.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierClassVisitor55.visitAnnotation("hi!", true);
        aSMifierClassVisitor55.visitEnd();
        java.lang.String[] strArray68 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierClassVisitor55.visit(0, (int) (short) 100, "hi!", "hi!", "", strArray68);
        java.io.PrintWriter printWriter70 = printWriter23.printf("hi!", (java.lang.Object[]) strArray68);
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter((java.io.Writer) printWriter70);
        printWriter71.write(10);
        printWriter71.write("hi!", (int) (byte) 0, (int) (short) -1);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(printWriter70);
    }

    @Test
    public void test12510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12510");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label14);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "hi!");
    }

    @Test
    public void test12511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12511");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        printWriter34.println((int) (byte) 1);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor38 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor43.visitTryCatchBlock(label44, label45, label46, "");
        aSMifierMethodVisitor43.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj52 = null;
        aSMifierMethodVisitor43.visitLdcInsn(obj52);
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor43.visitJumpInsn((int) (short) 1, label55);
        aSMifierMethodVisitor43.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor43.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor43.visitTypeInsn((int) (short) 10, "hi!");
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor43.visitJumpInsn((int) (short) 0, label69);
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label[] labelArray75 = new org.mockito.asm.Label[] { label74 };
        aSMifierMethodVisitor43.visitTableSwitchInsn(0, (-1), label73, labelArray75);
        aSMifierMethodVisitor43.visitMultiANewArrayInsn("hi!", 100);
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        aSMifierMethodVisitor43.visitTryCatchBlock(label80, label81, label82, "");
        org.mockito.asm.FieldVisitor fieldVisitor85 = aSMifierClassVisitor38.visitField((int) 'a', "hi!", "hi!", "", (java.lang.Object) label82);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(labelArray75);
        org.junit.Assert.assertNotNull(fieldVisitor85);
    }

    @Test
    public void test12512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12512");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list13 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list21 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((-1), 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list21);
    }

    @Test
    public void test12513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12513");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", false);
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter("hi!");
        printWriter20.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter24 = printWriter20.append((java.lang.CharSequence) "");
        printWriter24.close();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter24);
        aSMifierMethodVisitor0.visitIincInsn(1, (int) (byte) 0);
        java.util.List list30 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(annotationVisitor34);
    }

    @Test
    public void test12514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12514");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor0.visitMaxs(100, (int) '4');
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 10, label15);
        aSMifierMethodVisitor0.visitMethodInsn(100, "", "", "");
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 100, label23);
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "");
    }

    @Test
    public void test12515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12515");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        char[] charArray56 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter49.println(charArray56);
        printWriter24.print(charArray56);
        printWriter24.print(true);
        java.io.PrintWriter printWriter62 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter64 = printWriter62.append((java.lang.CharSequence) "hi!");
        printWriter64.println('4');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(printWriter64);
    }

    @Test
    public void test12516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12516");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "", "hi!", (int) 'a');
        java.util.List list34 = aSMifierClassVisitor28.getText();
        aSMifierClassVisitor28.visitOuterClass("", "", "hi!");
        java.lang.String[] strArray44 = null;
        aSMifierClassVisitor28.visit((-1), 10, "", "", "", strArray44);
        aSMifierClassVisitor28.visitEnd();
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        printWriter48.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter52 = printWriter48.append((java.lang.CharSequence) "");
        printWriter48.print((double) 1);
        java.io.PrintWriter printWriter56 = printWriter48.append((java.lang.CharSequence) "hi!");
        printWriter48.print(false);
        java.lang.CharSequence charSequence59 = null;
        java.io.PrintWriter printWriter60 = printWriter48.append(charSequence59);
        printWriter48.print(' ');
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter66 = printWriter64.append('a');
        printWriter66.print(0);
        printWriter48.println((java.lang.Object) printWriter66);
        printWriter66.close();
        aSMifierClassVisitor28.print(printWriter66);
        printWriter66.print("");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(printWriter66);
    }

    @Test
    public void test12517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12517");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, (int) (short) 0);
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter("hi!");
        printWriter67.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter71 = printWriter67.append((java.lang.CharSequence) "");
        printWriter71.close();
        printWriter71.println(true);
        printWriter71.println((double) '#');
        java.io.PrintWriter printWriter77 = new java.io.PrintWriter((java.io.Writer) printWriter71);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter71);
        printWriter71.print((int) (short) 1);
        printWriter71.print((-1L));
        java.io.PrintWriter printWriter84 = new java.io.PrintWriter((java.io.Writer) printWriter71, false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(printWriter71);
    }

    @Test
    public void test12518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12518");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.print('a');
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter28.flush();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        aSMifierClassVisitor30.visitSource("hi!", "");
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.write((-1));
        printWriter39.flush();
        java.util.Locale locale43 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray50 = null;
        aSMifierMethodVisitor45.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray48, (int) (short) 1, objArray50);
        java.io.PrintWriter printWriter52 = printWriter39.printf(locale43, "", (java.lang.Object[]) strArray48);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor53 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter39);
        aSMifierClassVisitor53.visitEnd();
        aSMifierClassVisitor53.visitSource("", "hi!");
        java.lang.String[] strArray63 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor53.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray63);
        aSMifierClassVisitor53.visitInnerClass("", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor53.visitEnd();
        aSMifierClassVisitor53.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor72 = aSMifierClassVisitor30.visitField(100, "hi!", "hi!", "hi!", (java.lang.Object) aSMifierClassVisitor53);
        aSMifierClassVisitor30.visitSource("hi!", "hi!");
        aSMifierClassVisitor30.visitSource("", "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(fieldVisitor72);
    }

    @Test
    public void test12519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12519");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 10, 0);
        aSMifierMethodVisitor0.visitFieldInsn(100, "", "hi!", "");
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
    }

    @Test
    public void test12520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12520");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.io.PrintWriter printWriter33 = printWriter26.append('4');
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter26);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter26, false);
        boolean boolean37 = printWriter36.checkError();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor38.visitTryCatchBlock(label39, label40, label41, "");
        aSMifierMethodVisitor38.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj47 = null;
        aSMifierMethodVisitor38.visitLdcInsn(obj47);
        aSMifierMethodVisitor38.visitInsn((int) ' ');
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor38.visitJumpInsn(100, label52);
        aSMifierMethodVisitor38.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor38.visitCode();
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor38.visitTryCatchBlock(label58, label59, label60, "hi!");
        aSMifierMethodVisitor38.visitIntInsn((int) (short) 10, (int) (byte) 0);
        aSMifierMethodVisitor38.visitEnd();
        aSMifierMethodVisitor38.visitMethodInsn((int) ' ', "", "", "hi!");
        printWriter36.println((java.lang.Object) "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test12521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12521");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.print('#');
    }

    @Test
    public void test12522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12522");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitLineNumber(100, label19);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitTypeInsn((int) '#', "");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor16);
    }

    @Test
    public void test12523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12523");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label27 = null;
        int[] intArray34 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        aSMifierMethodVisitor16.visitLookupSwitchInsn(label27, intArray34, labelArray48);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) '4', (int) '#', label15, labelArray48);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (byte) 0);
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 0, label56);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 1, "hi!", "", "hi!");
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label66, label67, (int) (byte) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 0, "hi!", true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor73);
    }

    @Test
    public void test12524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12524");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label17, label18, 1);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 0, (int) (byte) 1);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "", false);
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 100, "", "hi!", "");
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test12525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12525");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor15.visitAnnotation("", true);
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitInnerClass("hi!", "hi!", "", (int) (short) 1);
        aSMifierClassVisitor15.visitSource("", "");
        aSMifierClassVisitor15.visitInnerClass("", "", "", (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor57);
    }

    @Test
    public void test12526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12526");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        printWriter14.println((double) (-1.0f));
        printWriter14.print("hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
    }

    @Test
    public void test12527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12527");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter5.print("");
        printWriter5.print((float) (short) -1);
        printWriter5.println(false);
        java.util.Locale locale12 = null;
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        printWriter15.write((-1));
        printWriter15.flush();
        java.util.Locale locale19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray24 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray26 = null;
        aSMifierMethodVisitor21.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray24, (int) (short) 1, objArray26);
        java.io.PrintWriter printWriter28 = printWriter15.printf(locale19, "", (java.lang.Object[]) strArray24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter15);
        aSMifierClassVisitor29.visitEnd();
        aSMifierClassVisitor29.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor29.visitEnd();
        aSMifierClassVisitor29.visitOuterClass("", "", "hi!");
        aSMifierClassVisitor29.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj54 = null;
        aSMifierMethodVisitor45.visitLdcInsn(obj54);
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor45.visitJumpInsn((int) (short) 1, label57);
        aSMifierMethodVisitor45.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor45.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierMethodVisitor45.visitAnnotationDefault();
        aSMifierMethodVisitor45.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor45.visitLabel(label69);
        java.util.List list71 = aSMifierMethodVisitor45.getText();
        aSMifierMethodVisitor45.visitMultiANewArrayInsn("", (int) (short) 0);
        java.io.PrintWriter printWriter78 = new java.io.PrintWriter("hi!");
        printWriter78.write((-1));
        printWriter78.flush();
        java.util.Locale locale82 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor84 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray87 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray89 = null;
        aSMifierMethodVisitor84.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray87, (int) (short) 1, objArray89);
        java.io.PrintWriter printWriter91 = printWriter78.printf(locale82, "", (java.lang.Object[]) strArray87);
        java.lang.Object[] objArray93 = null;
        aSMifierMethodVisitor45.visitFrame((int) (short) 1, 10, (java.lang.Object[]) strArray87, (int) (short) -1, objArray93);
        org.mockito.asm.MethodVisitor methodVisitor95 = aSMifierClassVisitor29.visitMethod(0, "hi!", "", "hi!", strArray87);
        java.io.PrintWriter printWriter96 = printWriter5.format(locale12, "hi!", (java.lang.Object[]) strArray87);
        printWriter5.close();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(printWriter91);
        org.junit.Assert.assertNotNull(methodVisitor95);
        org.junit.Assert.assertNotNull(printWriter96);
    }

    @Test
    public void test12528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12528");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 100, 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMaxs((int) ' ', 1);
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 0, label24);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test12529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12529");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        java.util.Locale locale9 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor11.visitTryCatchBlock(label12, label13, label14, "");
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor11.visitLocalVariable("hi!", "hi!", "hi!", label20, label21, (int) (byte) 10);
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor27.visitTryCatchBlock(label28, label29, label30, "");
        aSMifierMethodVisitor27.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj36 = null;
        aSMifierMethodVisitor27.visitLdcInsn(obj36);
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor27.visitJumpInsn((int) (short) 1, label39);
        aSMifierMethodVisitor27.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor27.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierMethodVisitor27.visitAnnotationDefault();
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        printWriter51.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor55.visitTryCatchBlock(label56, label57, label58, "");
        aSMifierMethodVisitor55.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] { label67 };
        aSMifierMethodVisitor55.visitTableSwitchInsn(0, (int) (byte) 10, label66, labelArray68);
        java.io.PrintWriter printWriter70 = printWriter51.printf("hi!", (java.lang.Object[]) labelArray68);
        java.lang.String[] strArray72 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor27.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray68, 1, (java.lang.Object[]) strArray72);
        aSMifierMethodVisitor11.visitTableSwitchInsn((int) (byte) 1, (int) (byte) 100, label26, labelArray68);
        java.io.PrintWriter printWriter75 = printWriter5.format(locale9, "", (java.lang.Object[]) labelArray68);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor76 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter75);
        printWriter75.println((double) 0.0f);
        printWriter75.print((float) (short) 1);
        printWriter75.println((double) (short) 0);
        printWriter75.print('a');
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(printWriter75);
    }

    @Test
    public void test12530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12530");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        printWriter32.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray36 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter37 = printWriter32.format("", (java.lang.Object[]) strArray36);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter((java.io.Writer) printWriter32, true);
        org.mockito.asm.FieldVisitor fieldVisitor40 = aSMifierClassVisitor15.visitField((int) '#', "", "", "hi!", (java.lang.Object) printWriter39);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (short) 0);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        aSMifierClassVisitor15.visitSource("hi!", "");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(fieldVisitor40);
    }

    @Test
    public void test12531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12531");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 10);
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label27, label28, (int) (short) 1);
        aSMifierMethodVisitor0.visitVarInsn(10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitInsn(0);
        aSMifierMethodVisitor0.visitCode();
    }

    @Test
    public void test12532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12532");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label18);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor16);
    }

    @Test
    public void test12533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12533");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.print('a');
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter28.println();
        printWriter28.println("hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test12534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12534");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label23, label24, (int) 'a');
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 10, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 10, (int) '4');
        org.junit.Assert.assertNotNull(annotationVisitor33);
    }

    @Test
    public void test12535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12535");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        printWriter1.println((long) (-1));
        java.util.Locale locale8 = null;
        java.lang.Object[] objArray10 = null;
        java.io.PrintWriter printWriter11 = printWriter1.format(locale8, "", objArray10);
        java.io.PrintWriter printWriter13 = printWriter11.append((java.lang.CharSequence) "");
        // The following exception was thrown during execution in test generation
        try {
            printWriter11.write("", 10, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 20");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter11);
        org.junit.Assert.assertNotNull(printWriter13);
    }

    @Test
    public void test12536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12536");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, (-1));
        aSMifierMethodVisitor0.visitInsn((int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = annotationVisitor17.visitAnnotation("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = annotationVisitor17.visitArray("hi!");
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test12537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12537");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test12538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12538");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "", "hi!", (int) 'a');
        java.util.List list34 = aSMifierClassVisitor28.getText();
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        java.util.Locale locale41 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = null;
        aSMifierMethodVisitor43.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray46, (int) (short) 1, objArray48);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor51.visitTryCatchBlock(label52, label53, label54, "");
        aSMifierMethodVisitor51.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray60 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray62 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor51, strArray60, 1.0f };
        java.io.PrintWriter printWriter63 = printWriter40.printf(locale41, "", (java.lang.Object[]) strArray60);
        printWriter63.println();
        printWriter63.println((long) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter("hi!");
        printWriter69.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter73 = printWriter69.append((java.lang.CharSequence) "");
        printWriter69.print((int) (byte) -1);
        printWriter69.write("", (int) (byte) 1, (int) (short) 0);
        printWriter69.print((double) (byte) -1);
        aSMifierMethodVisitor67.print(printWriter69);
        printWriter69.write((int) (byte) 100);
        printWriter63.println((java.lang.Object) (byte) 100);
        org.mockito.asm.FieldVisitor fieldVisitor86 = aSMifierClassVisitor28.visitField((int) '#', "", "", "", (java.lang.Object) printWriter63);
        aSMifierClassVisitor28.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor90 = aSMifierClassVisitor28.visitAnnotation("hi!", false);
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitSource("", "");
        aSMifierClassVisitor28.visitEnd();
        java.util.List list97 = aSMifierClassVisitor28.getText();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(fieldVisitor86);
        org.junit.Assert.assertNotNull(annotationVisitor90);
        org.junit.Assert.assertNotNull(list97);
    }

    @Test
    public void test12539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12539");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitInsn((int) (byte) 100);
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor0.visitLabel(label13);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 10, "");
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, (int) (short) 0);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 100, label22);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        org.junit.Assert.assertNotNull(annotationVisitor26);
    }

    @Test
    public void test12540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12540");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter6.println();
        printWriter6.print((float) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor11.visitTryCatchBlock(label12, label13, label14, "");
        aSMifierMethodVisitor11.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj20 = null;
        aSMifierMethodVisitor11.visitLdcInsn(obj20);
        aSMifierMethodVisitor11.visitInsn((int) ' ');
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor11.visitJumpInsn(100, label25);
        aSMifierMethodVisitor11.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label30 = null;
        int[] intArray31 = new int[] {};
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter37 = printWriter33.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor39.visitJumpInsn((int) (short) 1, label51);
        aSMifierMethodVisitor39.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label[] labelArray59 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label58, labelArray59);
        java.io.PrintWriter printWriter61 = printWriter37.printf("", (java.lang.Object[]) labelArray59);
        aSMifierMethodVisitor11.visitLookupSwitchInsn(label30, intArray31, labelArray59);
        java.io.PrintWriter printWriter63 = printWriter6.printf("", (java.lang.Object[]) labelArray59);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter6, true);
        java.io.PrintWriter printWriter67 = printWriter6.append(' ');
        printWriter67.println();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(labelArray59);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(printWriter67);
    }

    @Test
    public void test12541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12541");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println((double) (-1L));
        printWriter1.print((long) (short) -1);
        java.io.PrintWriter printWriter12 = printWriter1.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter14 = printWriter12.append('#');
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(printWriter14);
    }

    @Test
    public void test12542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12542");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) -1, "hi!", true);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor23);
    }

    @Test
    public void test12543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12543");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor28.visitLocalVariable("hi!", "hi!", "hi!", label37, label38, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor28.visitAnnotation("", true);
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj54 = null;
        aSMifierMethodVisitor45.visitLdcInsn(obj54);
        org.mockito.asm.Label label56 = null;
        int[] intArray63 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] { label76 };
        aSMifierMethodVisitor64.visitTableSwitchInsn(0, (int) (byte) 10, label75, labelArray77);
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label56, intArray63, labelArray77);
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label44, intArray63, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter26.printf("hi!", (java.lang.Object[]) labelArray80);
        printWriter82.print((int) (byte) 10);
        printWriter82.println(10);
        java.io.PrintWriter printWriter88 = printWriter82.append('4');
        java.io.PrintWriter printWriter90 = printWriter82.append('a');
        printWriter82.println((double) (byte) 1);
        printWriter82.println('a');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test12544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12544");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("hi!");
        printWriter2.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter6 = printWriter2.append((java.lang.CharSequence) "");
        printWriter2.print((int) (byte) -1);
        printWriter2.write("", (int) (byte) 1, (int) (short) 0);
        printWriter2.print((double) (byte) -1);
        aSMifierMethodVisitor0.print(printWriter2);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        printWriter18.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label[] labelArray35 = new org.mockito.asm.Label[] { label34 };
        aSMifierMethodVisitor22.visitTableSwitchInsn(0, (int) (byte) 10, label33, labelArray35);
        java.io.PrintWriter printWriter37 = printWriter18.printf("hi!", (java.lang.Object[]) labelArray35);
        java.io.PrintWriter printWriter38 = printWriter2.printf("", (java.lang.Object[]) labelArray35);
        printWriter2.print((float) (-1L));
        printWriter2.println((double) (short) 0);
        printWriter2.print((-1.0d));
        // The following exception was thrown during execution in test generation
        try {
            printWriter2.write("", 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(labelArray35);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(printWriter38);
    }

    @Test
    public void test12545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12545");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter5.println((-1));
        printWriter5.println();
        java.io.PrintWriter printWriter10 = printWriter5.append('a');
        printWriter5.println('4');
        printWriter5.write("");
        java.io.PrintWriter printWriter16 = printWriter5.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter18 = printWriter5.append((java.lang.CharSequence) "hi!");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(printWriter18);
    }

    @Test
    public void test12546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12546");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.println(false);
        printWriter24.println(0);
        printWriter24.close();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor32 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        printWriter24.print("");
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        java.util.Locale locale37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray44 = null;
        aSMifierMethodVisitor39.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray42, (int) (short) 1, objArray44);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label48, label49, label50, "");
        aSMifierMethodVisitor47.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray56 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray58 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor47, strArray56, 1.0f };
        java.io.PrintWriter printWriter59 = printWriter36.printf(locale37, "", (java.lang.Object[]) strArray56);
        java.io.PrintWriter printWriter61 = printWriter59.append((java.lang.CharSequence) "");
        printWriter61.print('#');
        printWriter24.print((java.lang.Object) printWriter61);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(printWriter61);
    }

    @Test
    public void test12547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12547");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter38 = printWriter34.append((java.lang.CharSequence) "");
        printWriter38.close();
        printWriter38.println(true);
        printWriter38.println((double) '#');
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter((java.io.Writer) printWriter38);
        printWriter38.println('a');
        printWriter38.println();
        printWriter38.println("hi!");
        printWriter38.print("");
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("hi!");
        java.util.Locale locale54 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray59 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray61 = null;
        aSMifierMethodVisitor56.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray59, (int) (short) 1, objArray61);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray73 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray75 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor64, strArray73, 1.0f };
        java.io.PrintWriter printWriter76 = printWriter53.printf(locale54, "", (java.lang.Object[]) strArray73);
        char[] charArray83 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter76.println(charArray83);
        char[] charArray85 = new char[] {};
        printWriter76.print(charArray85);
        printWriter38.print(charArray85);
        // The following exception was thrown during execution in test generation
        try {
            printWriter24.write(charArray85, (int) (byte) 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertNotNull(printWriter76);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[]");
    }

    @Test
    public void test12548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12548");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 0, "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = annotationVisitor15.visitAnnotation("", "");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test12549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12549");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label27 = null;
        int[] intArray34 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        aSMifierMethodVisitor16.visitLookupSwitchInsn(label27, intArray34, labelArray48);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) '4', (int) '#', label15, labelArray48);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label55, label56, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "hi!");
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label65, label66, 1);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn((-1), "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray48);
    }

    @Test
    public void test12550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12550");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label74, label75, label76, "hi!");
        java.util.List list79 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label81 = null;
        aSMifierMethodVisitor0.visitJumpInsn(0, label81);
        org.mockito.asm.Label label85 = null;
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 1, 0, label85, labelArray86);
        org.mockito.asm.AnnotationVisitor annotationVisitor90 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        annotationVisitor90.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(list79);
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertNotNull(annotationVisitor90);
    }

    @Test
    public void test12551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12551");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "");
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.Object obj28 = null;
        org.mockito.asm.FieldVisitor fieldVisitor29 = aSMifierClassVisitor15.visitField(1, "", "", "", obj28);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        printWriter35.write((-1));
        printWriter35.flush();
        java.util.Locale locale39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = null;
        aSMifierMethodVisitor41.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray44, (int) (short) 1, objArray46);
        java.io.PrintWriter printWriter48 = printWriter35.printf(locale39, "", (java.lang.Object[]) strArray44);
        org.mockito.asm.MethodVisitor methodVisitor49 = aSMifierClassVisitor15.visitMethod(1, "hi!", "", "", strArray44);
        methodVisitor49.visitInsn((int) (byte) 1);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertNotNull(methodVisitor49);
    }

    @Test
    public void test12552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12552");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitMaxs(0, (-1));
        aSMifierMethodVisitor9.visitCode();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor9);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", 0);
        aSMifierMethodVisitor0.visitInsn(1);
        aSMifierMethodVisitor0.visitInsn(100);
    }

    @Test
    public void test12553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12553");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) ' ');
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 100, label18);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) (short) 1);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label23, label24, label25, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 10, "", "hi!", "");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) -1);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, 0);
        org.junit.Assert.assertNotNull(annotationVisitor13);
    }

    @Test
    public void test12554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12554");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.println(0.0f);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        aSMifierClassVisitor29.visitSource("", "");
        aSMifierClassVisitor29.visitOuterClass("", "hi!", "");
        aSMifierClassVisitor29.visitInnerClass("", "", "", 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierClassVisitor29.visitAnnotation("", false);
        aSMifierClassVisitor29.visitOuterClass("hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierClassVisitor29.visitAnnotation("hi!", false);
        aSMifierClassVisitor29.visitInnerClass("hi!", "", "hi!", (int) (byte) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierClassVisitor29.visitAnnotation("", true);
        java.util.List list60 = aSMifierClassVisitor29.getText();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(list60);
    }

    @Test
    public void test12555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12555");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", true);
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label26);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label30);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 100, "hi!");
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label38, label39, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = annotationVisitor42.visitArray("");
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor44);
    }

    @Test
    public void test12556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12556");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 1, (int) (byte) 0);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 100, label27);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj44 = null;
        aSMifierMethodVisitor35.visitLdcInsn(obj44);
        aSMifierMethodVisitor35.visitTypeInsn(0, "hi!");
        aSMifierMethodVisitor35.visitInsn((int) (short) 1);
        aSMifierMethodVisitor35.visitMultiANewArrayInsn("", (int) (short) 10);
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor35.visitLabel(label54);
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) 10);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (byte) 10);
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label63, label64, (int) (short) 0);
        java.util.List list67 = aSMifierMethodVisitor0.text;
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label71, label72, 0);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(list67);
    }

    @Test
    public void test12557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12557");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        boolean boolean36 = printWriter34.checkError();
        printWriter34.println();
        printWriter34.print(100L);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test12558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12558");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor27.visitTryCatchBlock(label28, label29, label30, "");
        aSMifierMethodVisitor27.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj36 = null;
        aSMifierMethodVisitor27.visitLdcInsn(obj36);
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor27.visitJumpInsn((int) (short) 1, label39);
        aSMifierMethodVisitor27.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label48, label49, label50, "");
        aSMifierMethodVisitor47.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj56 = null;
        aSMifierMethodVisitor47.visitLdcInsn(obj56);
        org.mockito.asm.Label label58 = null;
        int[] intArray65 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor66.visitTryCatchBlock(label67, label68, label69, "");
        aSMifierMethodVisitor66.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label[] labelArray79 = new org.mockito.asm.Label[] { label78 };
        aSMifierMethodVisitor66.visitTableSwitchInsn(0, (int) (byte) 10, label77, labelArray79);
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label58, intArray65, labelArray79);
        aSMifierMethodVisitor27.visitTableSwitchInsn((int) 'a', 10, label46, labelArray79);
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = aSMifierMethodVisitor27.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = aSMifierMethodVisitor27.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor27);
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = aSMifierMethodVisitor27.visitAnnotation("hi!", true);
        aSMifierMethodVisitor27.visitCode();
        aSMifierMethodVisitor27.visitEnd();
        aSMifierMethodVisitor27.visitEnd();
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray79);
        org.junit.Assert.assertNotNull(annotationVisitor85);
        org.junit.Assert.assertNotNull(annotationVisitor88);
        org.junit.Assert.assertNotNull(annotationVisitor92);
    }

    @Test
    public void test12559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12559");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor0.visitInsn(100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list20 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label24, label25, (int) (short) 1);
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 0, label29);
        aSMifierMethodVisitor0.visitInsn((int) (short) 1);
        java.util.List list33 = aSMifierMethodVisitor0.getText();
        java.util.List list34 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
    }

    @Test
    public void test12560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12560");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, (int) (short) 10);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 0, "hi!", "", "");
        aSMifierMethodVisitor0.visitTypeInsn((int) ' ', "");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIincInsn((int) 'a', (int) (short) 10);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '#', (int) (byte) 1);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
    }

    @Test
    public void test12561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12561");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append((java.lang.CharSequence) "hi!");
        printWriter28.print("hi!");
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        java.util.Locale locale34 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = null;
        aSMifierMethodVisitor36.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray39, (int) (short) 1, objArray41);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray53 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray55 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor44, strArray53, 1.0f };
        java.io.PrintWriter printWriter56 = printWriter33.printf(locale34, "", (java.lang.Object[]) strArray53);
        java.io.PrintWriter printWriter57 = printWriter28.printf("", (java.lang.Object[]) strArray53);
        boolean boolean58 = printWriter57.checkError();
        printWriter57.print((int) ' ');
        printWriter57.print("hi!");
        printWriter57.print("hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test12562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12562");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor17.visitTryCatchBlock(label18, label19, label20, "");
        aSMifierMethodVisitor17.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj26 = null;
        aSMifierMethodVisitor17.visitLdcInsn(obj26);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor17.print(printWriter29);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor34.visitTryCatchBlock(label35, label36, label37, "");
        aSMifierMethodVisitor34.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj43 = null;
        aSMifierMethodVisitor34.visitLdcInsn(obj43);
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor34.visitJumpInsn((int) (short) 1, label46);
        aSMifierMethodVisitor34.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label[] labelArray54 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor34.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label53, labelArray54);
        java.io.PrintWriter printWriter56 = printWriter29.printf("", (java.lang.Object[]) labelArray54);
        printWriter29.write((int) '4');
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter29);
        aSMifierMethodVisitor0.print(printWriter29);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 10, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(labelArray54);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(annotationVisitor66);
    }

    @Test
    public void test12563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12563");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.println((float) (short) 0);
        printWriter1.print(true);
        java.io.PrintWriter printWriter9 = printWriter1.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor10.visitTryCatchBlock(label11, label12, label13, "");
        aSMifierMethodVisitor10.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj19 = null;
        aSMifierMethodVisitor10.visitLdcInsn(obj19);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor10.visitJumpInsn((int) (short) 1, label22);
        aSMifierMethodVisitor10.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj39 = null;
        aSMifierMethodVisitor30.visitLdcInsn(obj39);
        org.mockito.asm.Label label41 = null;
        int[] intArray48 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label[] labelArray62 = new org.mockito.asm.Label[] { label61 };
        aSMifierMethodVisitor49.visitTableSwitchInsn(0, (int) (byte) 10, label60, labelArray62);
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label41, intArray48, labelArray62);
        aSMifierMethodVisitor10.visitTableSwitchInsn((int) 'a', 10, label29, labelArray62);
        aSMifierMethodVisitor10.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor10.visitMaxs(1, 10);
        org.mockito.asm.Label label75 = null;
        aSMifierMethodVisitor10.visitJumpInsn(1, label75);
        aSMifierMethodVisitor10.visitFieldInsn(0, "hi!", "hi!", "");
        aSMifierMethodVisitor10.visitMaxs((int) ' ', (int) (short) -1);
        org.mockito.asm.Label label86 = null;
        aSMifierMethodVisitor10.visitJumpInsn((int) '#', label86);
        org.mockito.asm.AnnotationVisitor annotationVisitor91 = aSMifierMethodVisitor10.visitParameterAnnotation((int) (short) 0, "", false);
        printWriter1.println((java.lang.Object) annotationVisitor91);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray62);
        org.junit.Assert.assertNotNull(annotationVisitor91);
    }

    @Test
    public void test12564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12564");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter8 = printWriter6.append((java.lang.CharSequence) "");
        printWriter8.println(true);
        printWriter8.println((int) (short) -1);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter((java.io.Writer) printWriter8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor14 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter8);
        aSMifierClassVisitor14.visitOuterClass("", "", "");
        aSMifierClassVisitor14.visitEnd();
        org.mockito.asm.Attribute attribute20 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor14.visitAttribute(attribute20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter8);
    }

    @Test
    public void test12565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12565");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitLabel(label4);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 10, "", "", "");
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 1, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = annotationVisitor15.visitAnnotation("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = annotationVisitor18.visitAnnotation("hi!", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(annotationVisitor21);
    }

    @Test
    public void test12566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12566");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs(0, 1);
        aSMifierMethodVisitor0.visitTypeInsn(0, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) '4');
        aSMifierMethodVisitor0.visitInsn((int) (short) 10);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, (int) (short) 0);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        java.util.Locale locale29 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray34 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray36 = null;
        aSMifierMethodVisitor31.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray34, (int) (short) 1, objArray36);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray50 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor39, strArray48, 1.0f };
        java.io.PrintWriter printWriter51 = printWriter28.printf(locale29, "", (java.lang.Object[]) strArray48);
        java.io.PrintWriter printWriter53 = printWriter51.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter55 = printWriter51.append((java.lang.CharSequence) "hi!");
        printWriter51.write("");
        java.io.PrintWriter printWriter59 = printWriter51.append('a');
        aSMifierMethodVisitor0.print(printWriter59);
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label61, label62, label63, "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs((int) (short) 1, (int) (short) 0);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(printWriter59);
    }

    @Test
    public void test12567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12567");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(annotationVisitor36);
    }

    @Test
    public void test12568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12568");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        printWriter36.write((-1));
        printWriter36.flush();
        java.util.Locale locale40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray47 = null;
        aSMifierMethodVisitor42.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray45, (int) (short) 1, objArray47);
        java.io.PrintWriter printWriter49 = printWriter36.printf(locale40, "", (java.lang.Object[]) strArray45);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor50 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter36);
        aSMifierClassVisitor50.visitEnd();
        aSMifierClassVisitor50.visitSource("", "hi!");
        java.lang.String[] strArray60 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor50.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray60);
        aSMifierClassVisitor50.visitInnerClass("", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor71 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray74 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray76 = null;
        aSMifierMethodVisitor71.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray74, (int) (short) 1, objArray76);
        org.mockito.asm.MethodVisitor methodVisitor78 = aSMifierClassVisitor50.visitMethod((int) (short) 0, "", "", "hi!", strArray74);
        org.mockito.asm.MethodVisitor methodVisitor79 = aSMifierClassVisitor15.visitMethod((int) '4', "hi!", "", "", strArray74);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "");
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitInnerClass("hi!", "", "", 100);
        aSMifierClassVisitor15.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(methodVisitor78);
        org.junit.Assert.assertNotNull(methodVisitor79);
    }

    @Test
    public void test12569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12569");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        char[] charArray56 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter49.println(charArray56);
        printWriter24.print(charArray56);
        printWriter24.print(true);
        printWriter24.println(false);
        printWriter24.write("");
        printWriter24.write(0);
        java.io.PrintWriter printWriter68 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.write(0);
        printWriter24.print('a');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter68);
    }

    @Test
    public void test12570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12570");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 1, "", "", "");
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label24, label25, (int) ' ');
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 10, "", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor0.visitJumpInsn(0, label34);
    }

    @Test
    public void test12571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12571");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        aSMifierMethodVisitor4.visitTryCatchBlock(label5, label6, label7, "");
        aSMifierMethodVisitor4.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj13 = null;
        aSMifierMethodVisitor4.visitLdcInsn(obj13);
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor4.visitJumpInsn((int) (short) 1, label16);
        aSMifierMethodVisitor4.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor4.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor4.visitAnnotationDefault();
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        printWriter28.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] { label44 };
        aSMifierMethodVisitor32.visitTableSwitchInsn(0, (int) (byte) 10, label43, labelArray45);
        java.io.PrintWriter printWriter47 = printWriter28.printf("hi!", (java.lang.Object[]) labelArray45);
        java.lang.String[] strArray49 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor4.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray45, 1, (java.lang.Object[]) strArray49);
        printWriter3.println((java.lang.Object) strArray49);
        printWriter3.write("hi!", 100, (int) (byte) -1);
        printWriter3.println((int) 'a');
        printWriter3.println('#');
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray49);
    }

    @Test
    public void test12572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12572");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        java.io.PrintWriter printWriter10 = printWriter5.append(' ');
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter15 = printWriter13.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter15);
        java.lang.String[] strArray22 = null;
        aSMifierClassVisitor16.visit((int) (short) 1, (int) '#', "hi!", "hi!", "", strArray22);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor28.visitLocalVariable("hi!", "hi!", "hi!", label37, label38, (int) (byte) 10);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        printWriter42.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter47 = printWriter42.format("", (java.lang.Object[]) strArray46);
        aSMifierMethodVisitor28.visitLdcInsn((java.lang.Object) strArray46);
        org.mockito.asm.MethodVisitor methodVisitor49 = aSMifierClassVisitor16.visitMethod((int) (byte) 1, "hi!", "hi!", "hi!", strArray46);
        java.io.PrintWriter printWriter50 = printWriter5.format("hi!", (java.lang.Object[]) strArray46);
        java.io.PrintWriter printWriter52 = printWriter50.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter54 = printWriter52.append((java.lang.CharSequence) "hi!");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(methodVisitor49);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(printWriter54);
    }

    @Test
    public void test12573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12573");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitLabel(label4);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) 10);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) (byte) 10);
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 1, label13);
        java.util.List list15 = aSMifierMethodVisitor0.text;
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("hi!");
        printWriter17.print(false);
        printWriter17.println(false);
        printWriter17.print(0L);
        printWriter17.close();
        printWriter17.println();
        java.io.PrintWriter printWriter27 = printWriter17.append('a');
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print((java.lang.Object) (short) -1);
        printWriter29.flush();
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter((java.io.Writer) printWriter29);
        printWriter33.write("");
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter("hi!");
        java.util.Locale locale38 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray43 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray45 = null;
        aSMifierMethodVisitor40.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray43, (int) (short) 1, objArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor48.visitTryCatchBlock(label49, label50, label51, "");
        aSMifierMethodVisitor48.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray57 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray59 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor48, strArray57, 1.0f };
        java.io.PrintWriter printWriter60 = printWriter37.printf(locale38, "", (java.lang.Object[]) strArray57);
        char[] charArray67 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter60.println(charArray67);
        printWriter33.print(charArray67);
        printWriter17.println(charArray67);
        printWriter17.println();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter17);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test12574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12574");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitTypeInsn(10, "");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 1, "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test12575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12575");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        aSMifierMethodVisitor0.visitMethodInsn(10, "", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label14, label15, label16, "hi!");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitIntInsn(1, (int) (short) -1);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test12576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12576");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor21.visitTryCatchBlock(label22, label23, label24, "");
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor21.visitLocalVariable("hi!", "hi!", "hi!", label30, label31, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor21.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor21);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor21.visitAnnotationDefault();
        aSMifierMethodVisitor21.visitCode();
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor21.visitLabel(label40);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor38);
    }

    @Test
    public void test12577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12577");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        java.util.List list12 = aSMifierMethodVisitor0.getText();
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        java.util.Locale locale15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray20 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray22 = null;
        aSMifierMethodVisitor17.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray20, (int) (short) 1, objArray22);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor25.visitTryCatchBlock(label26, label27, label28, "");
        aSMifierMethodVisitor25.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray34 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray36 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor25, strArray34, 1.0f };
        java.io.PrintWriter printWriter37 = printWriter14.printf(locale15, "", (java.lang.Object[]) strArray34);
        char[] charArray44 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter37.println(charArray44);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.Writer) printWriter37, true);
        java.io.PrintWriter printWriter49 = printWriter37.append((java.lang.CharSequence) "");
        printWriter37.println(false);
        aSMifierMethodVisitor0.print(printWriter37);
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitInsn((int) (short) 10);
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter("hi!");
        printWriter59.println((float) '#');
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter((java.io.Writer) printWriter59, true);
        printWriter59.print((float) 1);
        printWriter59.println((int) (byte) 100);
        printWriter59.println((int) '4');
        printWriter59.println('4');
        printWriter59.println("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter59);
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(annotationVisitor75);
    }

    @Test
    public void test12578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12578");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        aSMifierMethodVisitor0.visitMethodInsn(10, "", "hi!", "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label17, label18, (int) (short) -1);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label25, label26, (int) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "hi!", true);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 100, label38);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 100, (int) (short) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor45);
    }

    @Test
    public void test12579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12579");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.println((float) (short) 0);
        printWriter1.println((float) 1L);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter8);
        printWriter8.close();
        printWriter8.write((int) (byte) -1);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter((java.io.Writer) printWriter8);
    }

    @Test
    public void test12580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12580");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        printWriter1.print(0L);
        printWriter1.close();
        printWriter1.println();
        printWriter1.print((float) (-1));
        printWriter1.println((float) (short) 100);
        printWriter1.write("hi!", 100, 10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor18 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter22 = printWriter1.append((java.lang.CharSequence) "hi!", (int) (short) 10, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -11");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12581");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list14 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list16 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitInsn((int) '4');
        aSMifierMethodVisitor0.visitMaxs((int) (short) 100, (int) (byte) 10);
        java.util.List list22 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list22);
    }

    @Test
    public void test12582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12582");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, 0);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "hi!", "");
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label72);
        java.util.List list74 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitFieldInsn(1, "hi!", "", "hi!");
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label80, label81, label82, "");
        org.mockito.asm.Label label85 = null;
        org.mockito.asm.Label label86 = null;
        org.mockito.asm.Label label87 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label85, label86, label87, "");
        org.mockito.asm.Label label91 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label91);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(list74);
    }

    @Test
    public void test12583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12583");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        java.util.List list6 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor7.visitLocalVariable("hi!", "hi!", "hi!", label16, label17, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor7.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) annotationVisitor20);
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitLineNumber(0, label23);
        aSMifierMethodVisitor0.visitMethodInsn(0, "", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 100, "hi!", false);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, (int) (byte) 100);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor33);
    }

    @Test
    public void test12584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12584");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", true);
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label26);
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLabel(label28);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, (int) 'a');
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor34.visitTryCatchBlock(label35, label36, label37, "");
        aSMifierMethodVisitor34.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor34.visitMaxs(100, (int) (short) -1);
        java.util.List list46 = aSMifierMethodVisitor34.getText();
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        java.util.Locale locale49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray56 = null;
        aSMifierMethodVisitor51.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray54, (int) (short) 1, objArray56);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor59.visitTryCatchBlock(label60, label61, label62, "");
        aSMifierMethodVisitor59.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray68 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray70 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor59, strArray68, 1.0f };
        java.io.PrintWriter printWriter71 = printWriter48.printf(locale49, "", (java.lang.Object[]) strArray68);
        char[] charArray78 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter71.println(charArray78);
        java.io.PrintWriter printWriter81 = new java.io.PrintWriter((java.io.Writer) printWriter71, true);
        java.io.PrintWriter printWriter83 = printWriter71.append((java.lang.CharSequence) "");
        printWriter71.println(false);
        aSMifierMethodVisitor34.print(printWriter71);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor34);
        aSMifierMethodVisitor34.visitEnd();
        org.mockito.asm.Label label89 = null;
        org.mockito.asm.Label label90 = null;
        org.mockito.asm.Label label91 = null;
        aSMifierMethodVisitor34.visitTryCatchBlock(label89, label90, label91, "hi!");
        org.mockito.asm.Label label94 = null;
        aSMifierMethodVisitor34.visitLabel(label94);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter83);
    }

    @Test
    public void test12585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12585");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 1, "", true);
        aSMifierMethodVisitor0.visitInsn((int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "");
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitParameterAnnotation(100, "", true);
        aSMifierMethodVisitor0.visitFieldInsn(10, "hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor29);
    }

    @Test
    public void test12586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12586");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor7.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor7.visitAnnotationDefault();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        java.io.PrintWriter printWriter50 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray48);
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor7.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray48, 1, (java.lang.Object[]) strArray52);
        java.io.PrintWriter printWriter54 = printWriter1.format("hi!", (java.lang.Object[]) strArray52);
        java.util.Locale locale55 = null;
        java.lang.String[] strArray57 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter58 = printWriter1.format(locale55, "hi!", (java.lang.Object[]) strArray57);
        printWriter1.println((float) 'a');
        printWriter1.print(false);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(printWriter58);
    }

    @Test
    public void test12587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12587");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        java.lang.String[] strArray36 = null;
        org.mockito.asm.MethodVisitor methodVisitor37 = aSMifierClassVisitor28.visitMethod((int) '4', "hi!", "", "", strArray36);
        aSMifierClassVisitor28.visitInnerClass("", "", "hi!", 100);
        aSMifierClassVisitor28.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(methodVisitor37);
    }

    @Test
    public void test12588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12588");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label18);
        aSMifierMethodVisitor0.visitFieldInsn(1, "", "", "");
        aSMifierMethodVisitor0.visitIincInsn((-1), 10);
        aSMifierMethodVisitor0.visitInsn((int) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitInsn(10);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test12589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12589");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 1, "hi!", true);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) ' ', label19);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label22);
        aSMifierMethodVisitor0.visitFieldInsn((int) 'a', "", "", "");
        aSMifierMethodVisitor0.visitMaxs((int) '#', 1);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
    }

    @Test
    public void test12590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12590");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label21, label22, label23, "");
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label29, label30, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", false);
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label40, label41, (int) 'a');
        aSMifierMethodVisitor0.visitInsn((int) (short) 10);
        aSMifierMethodVisitor0.visitTypeInsn(0, "");
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 1, (int) (byte) 0);
        org.mockito.asm.Attribute attribute52 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor36);
    }

    @Test
    public void test12591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12591");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append(' ');
        printWriter28.println((float) '4');
        java.lang.Object[] objArray32 = null;
        java.io.PrintWriter printWriter33 = printWriter28.format("hi!", objArray32);
        printWriter33.println(0);
        printWriter33.write(10);
        java.util.Locale locale38 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj49 = null;
        aSMifierMethodVisitor40.visitLdcInsn(obj49);
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        printWriter52.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor40.print(printWriter52);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor57.visitTryCatchBlock(label58, label59, label60, "");
        aSMifierMethodVisitor57.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj66 = null;
        aSMifierMethodVisitor57.visitLdcInsn(obj66);
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor57.visitJumpInsn((int) (short) 1, label69);
        aSMifierMethodVisitor57.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor57.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label76, labelArray77);
        java.io.PrintWriter printWriter79 = printWriter52.printf("", (java.lang.Object[]) labelArray77);
        java.io.PrintWriter printWriter80 = printWriter33.printf(locale38, "", (java.lang.Object[]) labelArray77);
        printWriter33.print((double) 10L);
        printWriter33.println('a');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertNotNull(printWriter80);
    }

    @Test
    public void test12592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12592");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter1.println();
        java.util.Locale locale9 = null;
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        java.util.Locale locale13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray20 = null;
        aSMifierMethodVisitor15.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray18, (int) (short) 1, objArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor23, strArray32, 1.0f };
        java.io.PrintWriter printWriter35 = printWriter12.printf(locale13, "", (java.lang.Object[]) strArray32);
        printWriter35.print("hi!");
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.Writer) printWriter35);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor39 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter38);
        aSMifierClassVisitor39.visitOuterClass("hi!", "hi!", "hi!");
        java.util.List list44 = aSMifierClassVisitor39.getText();
        aSMifierClassVisitor39.visitOuterClass("hi!", "", "hi!");
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter("hi!");
        java.util.Locale locale56 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray61 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray63 = null;
        aSMifierMethodVisitor58.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray61, (int) (short) 1, objArray63);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor66.visitTryCatchBlock(label67, label68, label69, "");
        aSMifierMethodVisitor66.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray75 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray77 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor66, strArray75, 1.0f };
        java.io.PrintWriter printWriter78 = printWriter55.printf(locale56, "", (java.lang.Object[]) strArray75);
        printWriter78.print("hi!");
        java.io.PrintWriter printWriter81 = new java.io.PrintWriter((java.io.Writer) printWriter78);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor82 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter81);
        aSMifierClassVisitor82.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = aSMifierClassVisitor82.visitAnnotation("hi!", true);
        aSMifierClassVisitor82.visitEnd();
        java.lang.String[] strArray95 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierClassVisitor82.visit(0, (int) (short) 100, "hi!", "hi!", "", strArray95);
        aSMifierClassVisitor39.visit((int) (byte) 1, (int) (byte) 1, "hi!", "", "", strArray95);
        java.io.PrintWriter printWriter98 = printWriter1.format(locale9, "hi!", (java.lang.Object[]) strArray95);
        boolean boolean99 = printWriter98.checkError();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(annotationVisitor88);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertNotNull(printWriter98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test12593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12593");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "hi!", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label14);
        org.junit.Assert.assertNotNull(annotationVisitor12);
    }

    @Test
    public void test12594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12594");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label[] labelArray27 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor7.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label26, labelArray27);
        java.io.PrintWriter printWriter29 = printWriter5.printf("", (java.lang.Object[]) labelArray27);
        printWriter29.println('a');
        printWriter29.print(false);
        java.io.PrintWriter printWriter35 = printWriter29.append('4');
        printWriter35.flush();
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.Writer) printWriter35, false);
        printWriter35.print((float) (byte) 10);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(labelArray27);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(printWriter35);
    }

    @Test
    public void test12595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12595");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 1, label22);
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 1, 100);
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test12596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12596");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        printWriter34.println("");
        printWriter34.print((int) ' ');
        printWriter34.print((double) 10);
        java.util.Locale locale43 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj54 = null;
        aSMifierMethodVisitor45.visitLdcInsn(obj54);
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor45.visitJumpInsn((int) (short) 1, label57);
        aSMifierMethodVisitor45.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor45.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierMethodVisitor45.visitAnnotationDefault();
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter("hi!");
        printWriter69.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor73 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor73.visitTryCatchBlock(label74, label75, label76, "");
        aSMifierMethodVisitor73.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label84 = null;
        org.mockito.asm.Label label85 = null;
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] { label85 };
        aSMifierMethodVisitor73.visitTableSwitchInsn(0, (int) (byte) 10, label84, labelArray86);
        java.io.PrintWriter printWriter88 = printWriter69.printf("hi!", (java.lang.Object[]) labelArray86);
        java.lang.String[] strArray90 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor45.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray86, 1, (java.lang.Object[]) strArray90);
        java.io.PrintWriter printWriter92 = printWriter34.printf(locale43, "hi!", (java.lang.Object[]) labelArray86);
        printWriter34.print("");
        printWriter34.print((float) (byte) 10);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(printWriter92);
    }

    @Test
    public void test12597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12597");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj44 = null;
        aSMifierMethodVisitor35.visitLdcInsn(obj44);
        aSMifierMethodVisitor35.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list48 = aSMifierMethodVisitor35.getText();
        org.mockito.asm.FieldVisitor fieldVisitor49 = aSMifierClassVisitor15.visitField((int) (byte) -1, "", "", "", (java.lang.Object) list48);
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        java.util.Locale locale52 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray57 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray59 = null;
        aSMifierMethodVisitor54.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray57, (int) (short) 1, objArray59);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor62.visitTryCatchBlock(label63, label64, label65, "");
        aSMifierMethodVisitor62.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray71 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray73 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor62, strArray71, 1.0f };
        java.io.PrintWriter printWriter74 = printWriter51.printf(locale52, "", (java.lang.Object[]) strArray71);
        java.io.PrintWriter printWriter76 = printWriter74.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter78 = printWriter74.append(' ');
        printWriter78.println((float) '4');
        aSMifierClassVisitor15.print(printWriter78);
        printWriter78.write((int) (short) 1);
        printWriter78.println('a');
        java.lang.Object[] objArray87 = null;
        java.io.PrintWriter printWriter88 = printWriter78.format("", objArray87);
        // The following exception was thrown during execution in test generation
        try {
            printWriter88.write("", (-1), 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(fieldVisitor49);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(printWriter74);
        org.junit.Assert.assertNotNull(printWriter76);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(printWriter88);
    }

    @Test
    public void test12598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12598");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label22);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.util.List list25 = aSMifierMethodVisitor0.getText();
        java.util.List list26 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', 0);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
    }

    @Test
    public void test12599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12599");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println((int) (short) 10);
        printWriter24.print('#');
        printWriter24.print(false);
        printWriter24.println();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor32 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        printWriter24.flush();
        printWriter24.println(false);
        printWriter24.close();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test12600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12600");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        java.util.List list26 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 0);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 100, label33);
        java.util.List list35 = aSMifierMethodVisitor0.getText();
        java.lang.Object obj36 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj36);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list35);
    }

    @Test
    public void test12601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12601");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLabel(label22);
        aSMifierMethodVisitor0.visitVarInsn(100, (int) (byte) 100);
        aSMifierMethodVisitor0.visitIincInsn(10, 10);
        org.junit.Assert.assertNotNull(annotationVisitor15);
    }

    @Test
    public void test12602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12602");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label14, label15, label16, "hi!");
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label20);
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(list12);
    }

    @Test
    public void test12603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12603");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = printWriter1.append((java.lang.CharSequence) "");
        printWriter22.close();
        java.io.PrintWriter printWriter25 = printWriter22.append(' ');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj35 = null;
        aSMifierMethodVisitor26.visitLdcInsn(obj35);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor26.visitJumpInsn((int) (short) 1, label38);
        aSMifierMethodVisitor26.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor26.visitParameterAnnotation((int) (byte) 1, "", true);
        aSMifierMethodVisitor26.visitInsn((int) (short) 1);
        printWriter22.print((java.lang.Object) aSMifierMethodVisitor26);
        printWriter22.print(false);
        printWriter22.close();
        java.io.PrintWriter printWriter54 = printWriter22.append((java.lang.CharSequence) "");
        printWriter22.write("hi!", (int) ' ', 0);
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(printWriter54);
    }

    @Test
    public void test12604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12604");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        java.util.List list16 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitVarInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, (int) (byte) 1);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) '4');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj35 = null;
        aSMifierMethodVisitor26.visitLdcInsn(obj35);
        aSMifierMethodVisitor26.visitInsn((int) ' ');
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor42.visitTryCatchBlock(label43, label44, label45, "");
        aSMifierMethodVisitor42.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj51 = null;
        aSMifierMethodVisitor42.visitLdcInsn(obj51);
        org.mockito.asm.Label label53 = null;
        int[] intArray60 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor61.visitTryCatchBlock(label62, label63, label64, "");
        aSMifierMethodVisitor61.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label[] labelArray74 = new org.mockito.asm.Label[] { label73 };
        aSMifierMethodVisitor61.visitTableSwitchInsn(0, (int) (byte) 10, label72, labelArray74);
        aSMifierMethodVisitor42.visitLookupSwitchInsn(label53, intArray60, labelArray74);
        aSMifierMethodVisitor26.visitTableSwitchInsn((int) '4', (int) '#', label41, labelArray74);
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        aSMifierMethodVisitor26.visitLocalVariable("hi!", "hi!", "", label81, label82, (int) (short) 0);
        aSMifierMethodVisitor26.visitCode();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor26);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray74);
    }

    @Test
    public void test12605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12605");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        boolean boolean6 = printWriter1.checkError();
        printWriter1.println((double) 0);
        printWriter1.println();
        java.lang.Object[] objArray11 = null;
        java.io.PrintWriter printWriter12 = printWriter1.format("", objArray11);
        printWriter12.print((long) (short) -1);
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print(false);
        java.io.PrintWriter printWriter20 = printWriter16.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.Writer) printWriter20, true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter((java.io.Writer) printWriter20);
        printWriter23.write("");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        printWriter27.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter31 = printWriter27.append((java.lang.CharSequence) "");
        printWriter23.println((java.lang.Object) printWriter31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        java.util.Locale locale35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray40 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray42 = null;
        aSMifierMethodVisitor37.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray40, (int) (short) 1, objArray42);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray56 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor45, strArray54, 1.0f };
        java.io.PrintWriter printWriter57 = printWriter34.printf(locale35, "", (java.lang.Object[]) strArray54);
        printWriter57.print('#');
        printWriter57.println(false);
        printWriter57.write("hi!");
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter("hi!");
        java.util.Locale locale66 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray71 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray73 = null;
        aSMifierMethodVisitor68.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray71, (int) (short) 1, objArray73);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor76 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        aSMifierMethodVisitor76.visitTryCatchBlock(label77, label78, label79, "");
        aSMifierMethodVisitor76.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray85 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray87 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor76, strArray85, 1.0f };
        java.io.PrintWriter printWriter88 = printWriter65.printf(locale66, "", (java.lang.Object[]) strArray85);
        char[] charArray95 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter88.println(charArray95);
        printWriter57.println(charArray95);
        printWriter23.print(charArray95);
        printWriter12.print(charArray95);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(charArray95);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray95), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray95), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray95), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test12606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12606");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs((int) 'a', (int) (short) -1);
        aSMifierMethodVisitor0.visitInsn((int) (short) 10);
        aSMifierMethodVisitor0.visitMaxs(1, (int) (byte) 10);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (short) 100);
    }

    @Test
    public void test12607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12607");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter3);
        java.io.PrintWriter printWriter6 = printWriter3.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        printWriter8.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter12 = printWriter8.append((java.lang.CharSequence) "");
        printWriter8.print((double) 1);
        java.io.PrintWriter printWriter16 = printWriter8.append((java.lang.CharSequence) "hi!");
        printWriter8.print(false);
        printWriter8.print('#');
        printWriter8.println("");
        printWriter6.print((java.lang.Object) printWriter8);
        printWriter6.write((int) (byte) 100);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(printWriter16);
    }

    @Test
    public void test12608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12608");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj45 = null;
        aSMifierMethodVisitor36.visitLdcInsn(obj45);
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor36.visitJumpInsn((int) (short) 1, label48);
        aSMifierMethodVisitor36.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor36.visitParameterAnnotation((int) (byte) 1, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor57 = aSMifierClassVisitor31.visitField((int) (byte) 0, "", "", "", (java.lang.Object) aSMifierMethodVisitor36);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierClassVisitor31.visitAnnotation("", false);
        aSMifierClassVisitor31.visitInnerClass("hi!", "", "hi!", (int) (byte) -1);
        aSMifierClassVisitor31.visitInnerClass("", "", "", 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierClassVisitor31.visitAnnotation("hi!", false);
        annotationVisitor73.visitEnum("hi!", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = annotationVisitor73.visitArray("hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = annotationVisitor73.visitAnnotation("hi!", "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(annotationVisitor79);
        org.junit.Assert.assertNotNull(annotationVisitor82);
    }

    @Test
    public void test12609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12609");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor0.visitMaxs(100, (int) '4');
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitTypeInsn(0, "");
        java.util.List list17 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 1, "", false);
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label22, label23, label24, "hi!");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(annotationVisitor21);
    }

    @Test
    public void test12610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12610");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) ' ', label20);
        aSMifierMethodVisitor0.visitIincInsn(100, 10);
        aSMifierMethodVisitor0.visitMaxs(10, 10);
        aSMifierMethodVisitor0.visitVarInsn((int) '#', 100);
        aSMifierMethodVisitor0.visitVarInsn(0, 0);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", 0);
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test12611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12611");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label74, label75, label76, "hi!");
        java.util.List list79 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label81 = null;
        aSMifierMethodVisitor0.visitJumpInsn(0, label81);
        aSMifierMethodVisitor0.visitTypeInsn((int) '4', "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 1, "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, (int) (byte) 1);
        aSMifierMethodVisitor0.visitFieldInsn(1, "", "hi!", "");
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(list79);
    }

    @Test
    public void test12612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12612");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((int) (byte) -1);
        printWriter1.print((double) (byte) 1);
        printWriter1.close();
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter11.println();
        java.io.PrintWriter printWriter14 = printWriter11.append('#');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor15.visitTryCatchBlock(label16, label17, label18, "");
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor15.visitLocalVariable("hi!", "hi!", "hi!", label24, label25, (int) (byte) 10);
        aSMifierMethodVisitor15.visitCode();
        aSMifierMethodVisitor15.visitCode();
        printWriter14.print((java.lang.Object) aSMifierMethodVisitor15);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter((java.io.Writer) printWriter14, true);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter14);
    }

    @Test
    public void test12613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12613");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label13, label14, (int) (short) 10);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        java.util.Locale locale19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray24 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray26 = null;
        aSMifierMethodVisitor21.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray24, (int) (short) 1, objArray26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor29.visitTryCatchBlock(label30, label31, label32, "");
        aSMifierMethodVisitor29.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray40 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor29, strArray38, 1.0f };
        java.io.PrintWriter printWriter41 = printWriter18.printf(locale19, "", (java.lang.Object[]) strArray38);
        boolean boolean42 = printWriter41.checkError();
        printWriter41.println(false);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter((java.io.Writer) printWriter41);
        printWriter41.println((float) 'a');
        printWriter41.print((long) '4');
        aSMifierMethodVisitor0.print(printWriter41);
        java.util.Locale locale51 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor53.visitTryCatchBlock(label54, label55, label56, "");
        aSMifierMethodVisitor53.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor53.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label65 = null;
        int[] intArray67 = new int[] { (byte) 0 };
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter("hi!");
        printWriter69.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor73 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor73.visitTryCatchBlock(label74, label75, label76, "");
        aSMifierMethodVisitor73.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label84 = null;
        org.mockito.asm.Label label85 = null;
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] { label85 };
        aSMifierMethodVisitor73.visitTableSwitchInsn(0, (int) (byte) 10, label84, labelArray86);
        java.io.PrintWriter printWriter88 = printWriter69.printf("hi!", (java.lang.Object[]) labelArray86);
        aSMifierMethodVisitor53.visitLookupSwitchInsn(label65, intArray67, labelArray86);
        java.io.PrintWriter printWriter90 = printWriter41.format(locale51, "", (java.lang.Object[]) labelArray86);
        printWriter41.close();
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0]");
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test12614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12614");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter1.print('a');
        printWriter1.println('#');
        printWriter1.print((int) (byte) -1);
        printWriter1.print(0);
        printWriter1.print(' ');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test12615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12615");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label18);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 0, "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 1, label29);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
    }

    @Test
    public void test12616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12616");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) -1, (int) (byte) 1);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitVarInsn(1, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((int) (byte) -1, "hi!", "", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor16);
    }

    @Test
    public void test12617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12617");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((int) (byte) -1);
        printWriter1.print((double) (byte) 1);
        printWriter1.close();
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter13 = printWriter11.append('a');
        java.io.PrintWriter printWriter15 = printWriter11.append((java.lang.CharSequence) "hi!");
        printWriter15.println();
        printWriter15.println("hi!");
        printWriter15.print((float) (short) 1);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(printWriter15);
    }

    @Test
    public void test12618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12618");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor28.visitSource("", "hi!");
        java.lang.String[] strArray41 = null;
        org.mockito.asm.MethodVisitor methodVisitor42 = aSMifierClassVisitor28.visitMethod((int) (short) 0, "hi!", "hi!", "hi!", strArray41);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = methodVisitor42.visitParameterAnnotation((int) '4', "hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = annotationVisitor46.visitArray("");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(methodVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(annotationVisitor48);
    }

    @Test
    public void test12619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12619");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label28, label29, (int) (short) 1);
        aSMifierMethodVisitor0.visitIntInsn((int) '#', (int) 'a');
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 100, (int) (byte) 0);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, (int) '#');
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 10, "", "hi!", "");
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor0.visitJumpInsn(0, label47);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 0, "hi!", "", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test12620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12620");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        printWriter8.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter12 = printWriter8.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor14.visitJumpInsn((int) (short) 1, label26);
        aSMifierMethodVisitor14.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label[] labelArray34 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor14.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label33, labelArray34);
        java.io.PrintWriter printWriter36 = printWriter12.printf("", (java.lang.Object[]) labelArray34);
        printWriter36.println('a');
        aSMifierMethodVisitor0.print(printWriter36);
        printWriter36.println((int) (byte) 100);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor42.visitTryCatchBlock(label43, label44, label45, "");
        aSMifierMethodVisitor42.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj51 = null;
        aSMifierMethodVisitor42.visitLdcInsn(obj51);
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor42.visitJumpInsn((int) (short) 1, label54);
        aSMifierMethodVisitor42.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor42.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierMethodVisitor42.visitAnnotationDefault();
        aSMifierMethodVisitor42.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor42.visitAnnotationDefault();
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor42.visitLocalVariable("hi!", "hi!", "", label70, label71, (int) (short) 1);
        aSMifierMethodVisitor42.visitIntInsn((int) '#', (int) 'a');
        aSMifierMethodVisitor42.visitIntInsn((int) (short) 100, (int) (byte) 0);
        aSMifierMethodVisitor42.visitMaxs((int) (byte) 100, (int) '#');
        aSMifierMethodVisitor42.visitIincInsn(1, (int) (byte) 100);
        aSMifierMethodVisitor42.visitInsn(100);
        aSMifierMethodVisitor42.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = aSMifierMethodVisitor42.visitParameterAnnotation((int) (byte) 0, "hi!", false);
        printWriter36.println((java.lang.Object) (byte) 0);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(labelArray34);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(annotationVisitor92);
    }

    @Test
    public void test12621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12621");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor28.visitLocalVariable("hi!", "hi!", "hi!", label37, label38, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor28.visitAnnotation("", true);
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj54 = null;
        aSMifierMethodVisitor45.visitLdcInsn(obj54);
        org.mockito.asm.Label label56 = null;
        int[] intArray63 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] { label76 };
        aSMifierMethodVisitor64.visitTableSwitchInsn(0, (int) (byte) 10, label75, labelArray77);
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label56, intArray63, labelArray77);
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label44, intArray63, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter26.printf("hi!", (java.lang.Object[]) labelArray80);
        printWriter82.print((int) (byte) 10);
        printWriter82.println(10);
        java.io.PrintWriter printWriter88 = printWriter82.append('4');
        java.io.PrintWriter printWriter90 = printWriter82.append('a');
        // The following exception was thrown during execution in test generation
        try {
            printWriter90.write("", (int) '#', (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 45");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test12622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12622");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        printWriter12.println("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor18 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter12);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.write((-1));
        printWriter24.flush();
        java.util.Locale locale28 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray33 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray35 = null;
        aSMifierMethodVisitor30.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray33, (int) (short) 1, objArray35);
        java.io.PrintWriter printWriter37 = printWriter24.printf(locale28, "", (java.lang.Object[]) strArray33);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor38 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        aSMifierClassVisitor38.visitEnd();
        aSMifierClassVisitor38.visitSource("", "hi!");
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor38.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray48);
        org.mockito.asm.MethodVisitor methodVisitor50 = aSMifierClassVisitor18.visitMethod(0, "", "hi!", "hi!", strArray48);
        aSMifierClassVisitor18.visitEnd();
        aSMifierClassVisitor18.visitInnerClass("hi!", "", "", (int) (short) 10);
        java.lang.String[] strArray62 = null;
        aSMifierClassVisitor18.visit((int) '4', 10, "", "hi!", "", strArray62);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierClassVisitor18.visitAnnotation("hi!", false);
        aSMifierClassVisitor18.visitOuterClass("hi!", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierClassVisitor18.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(methodVisitor50);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(annotationVisitor73);
    }

    @Test
    public void test12623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12623");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.println((long) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        printWriter30.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter34 = printWriter30.append((java.lang.CharSequence) "");
        printWriter30.print((int) (byte) -1);
        printWriter30.write("", (int) (byte) 1, (int) (short) 0);
        printWriter30.print((double) (byte) -1);
        aSMifierMethodVisitor28.print(printWriter30);
        printWriter30.write((int) (byte) 100);
        printWriter24.println((java.lang.Object) (byte) 100);
        printWriter24.println((int) 'a');
        java.io.PrintWriter printWriter50 = printWriter24.append('#');
        printWriter24.println((double) 1.0f);
        printWriter24.flush();
        printWriter24.println((long) (short) -1);
        printWriter24.print('4');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(printWriter50);
    }

    @Test
    public void test12624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12624");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        aSMifierMethodVisitor0.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 0, label21);
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 1, (int) (byte) 0);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 0, "hi!", "hi!", "");
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label34, label35, (int) ' ');
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label41, label42, (int) (byte) 0);
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor0.visitLabel(label45);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label56, label57, 0);
        org.junit.Assert.assertNotNull(annotationVisitor52);
    }

    @Test
    public void test12625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12625");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.print((double) (byte) 10);
        java.util.Locale locale6 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label14 = null;
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label[] labelArray33 = new org.mockito.asm.Label[] { label32 };
        aSMifierMethodVisitor20.visitTableSwitchInsn(0, (int) (byte) 10, label31, labelArray33);
        java.io.PrintWriter printWriter35 = printWriter16.printf("hi!", (java.lang.Object[]) labelArray33);
        aSMifierMethodVisitor8.visitTableSwitchInsn(1, (int) (short) 10, label14, labelArray33);
        java.io.PrintWriter printWriter37 = printWriter1.format(locale6, "hi!", (java.lang.Object[]) labelArray33);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor38 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        java.io.PrintWriter printWriter42 = printWriter40.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter((java.io.Writer) printWriter40);
        boolean boolean44 = printWriter43.checkError();
        java.util.Locale locale45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label48, label49, label50, "");
        aSMifierMethodVisitor47.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj56 = null;
        aSMifierMethodVisitor47.visitLdcInsn(obj56);
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor47.visitJumpInsn((int) (short) 1, label59);
        aSMifierMethodVisitor47.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label[] labelArray67 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label66, labelArray67);
        java.io.PrintWriter printWriter69 = printWriter43.format(locale45, "hi!", (java.lang.Object[]) labelArray67);
        org.junit.Assert.assertNotNull(labelArray33);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(labelArray67);
        org.junit.Assert.assertNotNull(printWriter69);
    }

    @Test
    public void test12626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12626");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        printWriter7.print(0.0d);
        java.util.Locale locale10 = null;
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter15 = printWriter13.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor16.visitJumpInsn((int) (short) 1, label28);
        aSMifierMethodVisitor16.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor16.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor16.visitAnnotationDefault();
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] { label56 };
        aSMifierMethodVisitor44.visitTableSwitchInsn(0, (int) (byte) 10, label55, labelArray57);
        java.io.PrintWriter printWriter59 = printWriter40.printf("hi!", (java.lang.Object[]) labelArray57);
        java.lang.String[] strArray61 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor16.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray57, 1, (java.lang.Object[]) strArray61);
        printWriter15.println((java.lang.Object) strArray61);
        java.io.PrintWriter printWriter64 = printWriter7.printf(locale10, "hi!", (java.lang.Object[]) strArray61);
        java.io.PrintWriter printWriter66 = printWriter7.append('#');
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter((java.io.Writer) printWriter66);
        java.io.PrintWriter printWriter68 = new java.io.PrintWriter((java.io.Writer) printWriter67);
        org.mockito.asm.Attribute[] attributeArray70 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        java.io.PrintWriter printWriter71 = printWriter67.printf("hi!", (java.lang.Object[]) attributeArray70);
        printWriter67.print((double) (short) 10);
        printWriter67.close();
        java.lang.String[] strArray76 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter77 = printWriter67.format("", (java.lang.Object[]) strArray76);
        java.io.PrintWriter printWriter78 = new java.io.PrintWriter((java.io.Writer) printWriter77);
        printWriter77.flush();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(labelArray57);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(attributeArray70);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(printWriter77);
    }

    @Test
    public void test12627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12627");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 1, "hi!", true);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) '#');
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 10, "");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn((int) (byte) -1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
    }

    @Test
    public void test12628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12628");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label17, label18, 10);
        java.lang.Object obj21 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj21);
        org.junit.Assert.assertNotNull(annotationVisitor13);
    }

    @Test
    public void test12629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12629");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        aSMifierMethodVisitor24.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj33 = null;
        aSMifierMethodVisitor24.visitLdcInsn(obj33);
        aSMifierMethodVisitor24.visitInsn((int) ' ');
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor24.visitJumpInsn(100, label38);
        aSMifierMethodVisitor24.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label43 = null;
        int[] intArray44 = new int[] {};
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        printWriter46.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter50 = printWriter46.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor52.visitTryCatchBlock(label53, label54, label55, "");
        aSMifierMethodVisitor52.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj61 = null;
        aSMifierMethodVisitor52.visitLdcInsn(obj61);
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor52.visitJumpInsn((int) (short) 1, label64);
        aSMifierMethodVisitor52.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label[] labelArray72 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor52.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label71, labelArray72);
        java.io.PrintWriter printWriter74 = printWriter50.printf("", (java.lang.Object[]) labelArray72);
        aSMifierMethodVisitor24.visitLookupSwitchInsn(label43, intArray44, labelArray72);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 100, (-1), label23, labelArray72);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 0, "hi!", "hi!", "hi!");
        org.mockito.asm.Attribute attribute82 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(labelArray72);
        org.junit.Assert.assertNotNull(printWriter74);
    }

    @Test
    public void test12630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12630");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        org.mockito.asm.Label label29 = null;
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "");
        printWriter31.print((double) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor39.visitJumpInsn((int) (short) 1, label51);
        aSMifierMethodVisitor39.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor39.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor39.visitAnnotationDefault();
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter("hi!");
        printWriter63.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor67.visitTryCatchBlock(label68, label69, label70, "");
        aSMifierMethodVisitor67.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] { label79 };
        aSMifierMethodVisitor67.visitTableSwitchInsn(0, (int) (byte) 10, label78, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter63.printf("hi!", (java.lang.Object[]) labelArray80);
        java.lang.String[] strArray84 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor39.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray80, 1, (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter86 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray80);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (short) 100, (int) (short) 1, label29, labelArray80);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label90 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label90);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter86);
    }

    @Test
    public void test12631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12631");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = null;
        aSMifierMethodVisitor36.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray39, (int) (short) 1, objArray41);
        org.mockito.asm.MethodVisitor methodVisitor43 = aSMifierClassVisitor15.visitMethod((int) (short) 0, "", "", "hi!", strArray39);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        java.util.List list47 = aSMifierClassVisitor15.text;
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierClassVisitor15.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test12632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12632");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        aSMifierClassVisitor15.visitInnerClass("hi!", "hi!", "", (int) (byte) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        aSMifierClassVisitor15.visitOuterClass("", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierClassVisitor15.visitAnnotation("", false);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "hi!", (int) (byte) 0);
        aSMifierClassVisitor15.visitInnerClass("hi!", "hi!", "", (int) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray57 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray59 = null;
        aSMifierMethodVisitor54.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray57, (int) (short) 1, objArray59);
        aSMifierMethodVisitor54.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor54.visitEnd();
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor54.visitLocalVariable("", "hi!", "hi!", label70, label71, (int) 'a');
        aSMifierMethodVisitor54.visitIntInsn((int) (byte) 0, 1);
        java.util.List list77 = aSMifierMethodVisitor54.getText();
        aSMifierMethodVisitor54.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.FieldVisitor fieldVisitor81 = aSMifierClassVisitor15.visitField((-1), "hi!", "hi!", "hi!", (java.lang.Object) "");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(list77);
        org.junit.Assert.assertNotNull(fieldVisitor81);
    }

    @Test
    public void test12633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12633");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        aSMifierClassVisitor15.visitInnerClass("hi!", "hi!", "", (int) (byte) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        aSMifierClassVisitor15.visitOuterClass("", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierClassVisitor15.visitAnnotation("", false);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "hi!", (int) (byte) 0);
        aSMifierClassVisitor15.visitInnerClass("hi!", "", "", 10);
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj67 = null;
        aSMifierMethodVisitor58.visitLdcInsn(obj67);
        aSMifierMethodVisitor58.visitInsn((int) ' ');
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor58.visitJumpInsn(100, label72);
        aSMifierMethodVisitor58.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor58.visitCode();
        org.mockito.asm.Label label79 = null;
        aSMifierMethodVisitor58.visitLineNumber((int) (byte) 0, label79);
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = aSMifierMethodVisitor58.visitParameterAnnotation(1, "hi!", true);
        org.mockito.asm.FieldVisitor fieldVisitor85 = aSMifierClassVisitor15.visitField(0, "", "", "", (java.lang.Object) "hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor84);
        org.junit.Assert.assertNotNull(fieldVisitor85);
    }

    @Test
    public void test12634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12634");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 0, label60);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor0.visitLabel(label63);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) -1);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
    }

    @Test
    public void test12635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12635");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "");
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "hi!");
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("hi!", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierClassVisitor15.visitAnnotation("", false);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", 100);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test12636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12636");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (byte) 0);
        java.util.List list32 = aSMifierClassVisitor15.getText();
        aSMifierClassVisitor15.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor15.visitAnnotation("", true);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "", "");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(annotationVisitor38);
    }

    @Test
    public void test12637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12637");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitOuterClass("hi!", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj53 = null;
        aSMifierMethodVisitor44.visitLdcInsn(obj53);
        aSMifierMethodVisitor44.visitEnd();
        aSMifierMethodVisitor44.visitCode();
        org.mockito.asm.FieldVisitor fieldVisitor57 = aSMifierClassVisitor28.visitField((int) ' ', "", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor44);
        aSMifierMethodVisitor44.visitVarInsn((int) (short) 1, (int) (short) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor44.visitAnnotation("hi!", false);
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor44.visitJumpInsn((int) (byte) 100, label65);
        aSMifierMethodVisitor44.visitIntInsn(0, (int) (short) -1);
        aSMifierMethodVisitor44.visitCode();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(annotationVisitor63);
    }

    @Test
    public void test12638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12638");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label23, label24, label25, "hi!");
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLabel(label28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj39 = null;
        aSMifierMethodVisitor30.visitLdcInsn(obj39);
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor30.visitJumpInsn((int) (short) 1, label42);
        aSMifierMethodVisitor30.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor30.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor30.visitJumpInsn((int) '#', label51);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor30.visitParameterAnnotation(10, "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor30.visitParameterAnnotation(0, "hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = annotationVisitor60.visitAnnotation("", "hi!");
        annotationVisitor60.visitEnum("hi!", "hi!", "");
        annotationVisitor60.visitEnum("hi!", "", "");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "");
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor63);
    }

    @Test
    public void test12639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12639");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor17.visitTryCatchBlock(label18, label19, label20, "");
        aSMifierMethodVisitor17.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj26 = null;
        aSMifierMethodVisitor17.visitLdcInsn(obj26);
        org.mockito.asm.Label label28 = null;
        int[] intArray35 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] { label48 };
        aSMifierMethodVisitor36.visitTableSwitchInsn(0, (int) (byte) 10, label47, labelArray49);
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label28, intArray35, labelArray49);
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label16, intArray35, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn(0, (int) '#');
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor0.visitLabel(label58);
        aSMifierMethodVisitor0.visitInsn(100);
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 0, label63);
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "", true);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(annotationVisitor68);
    }

    @Test
    public void test12640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12640");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.print((int) ' ');
        java.lang.Object obj29 = null;
        printWriter24.print(obj29);
        printWriter24.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor33 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        printWriter24.println((long) (byte) 100);
        printWriter24.print((int) (short) 1);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter((java.io.Writer) printWriter24, false);
        printWriter39.println(true);
        printWriter39.print('a');
        printWriter39.print((double) 1L);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test12641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12641");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label23, label24, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 10, "hi!", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj40 = null;
        aSMifierMethodVisitor31.visitLdcInsn(obj40);
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor31.visitJumpInsn((int) (short) 1, label43);
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor31.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor46.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor46.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor31.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor46);
        java.util.List list52 = aSMifierMethodVisitor46.getText();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor46);
        aSMifierMethodVisitor46.visitMaxs(10, (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor46.visitAnnotation("hi!", true);
        aSMifierMethodVisitor46.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(annotationVisitor59);
    }

    @Test
    public void test12642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12642");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) -1, "hi!", false);
        annotationVisitor17.visitEnum("hi!", "hi!", "");
        annotationVisitor17.visitEnum("hi!", "", "hi!");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
    }

    @Test
    public void test12643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12643");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.print('a');
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter28.flush();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter((java.io.Writer) printWriter28, true);
        printWriter32.println('a');
        printWriter32.write("", (int) (byte) 100, (int) (byte) -1);
        java.io.PrintWriter printWriter40 = printWriter32.append(' ');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter40);
    }

    @Test
    public void test12644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12644");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        aSMifierMethodVisitor6.visitTryCatchBlock(label7, label8, label9, "");
        aSMifierMethodVisitor6.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj15 = null;
        aSMifierMethodVisitor6.visitLdcInsn(obj15);
        aSMifierMethodVisitor6.visitInsn((int) ' ');
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj31 = null;
        aSMifierMethodVisitor22.visitLdcInsn(obj31);
        org.mockito.asm.Label label33 = null;
        int[] intArray40 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label[] labelArray54 = new org.mockito.asm.Label[] { label53 };
        aSMifierMethodVisitor41.visitTableSwitchInsn(0, (int) (byte) 10, label52, labelArray54);
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label33, intArray40, labelArray54);
        aSMifierMethodVisitor6.visitTableSwitchInsn((int) '4', (int) '#', label21, labelArray54);
        java.io.PrintWriter printWriter58 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray54);
        printWriter1.close();
        printWriter1.println("");
        printWriter1.write("");
        printWriter1.write("hi!", (int) (byte) 1, (int) '#');
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray54);
        org.junit.Assert.assertNotNull(printWriter58);
    }

    @Test
    public void test12645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12645");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println((float) 10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor9.visitLocalVariable("hi!", "hi!", "hi!", label18, label19, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor9.visitAnnotationDefault();
        aSMifierMethodVisitor9.visitFieldInsn(100, "hi!", "", "hi!");
        aSMifierMethodVisitor9.visitMaxs((int) (short) -1, (int) (short) 10);
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor9.visitLocalVariable("", "", "", label34, label35, (int) '4');
        java.lang.Object[] objArray40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor42.visitTryCatchBlock(label43, label44, label45, "");
        aSMifierMethodVisitor42.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj51 = null;
        aSMifierMethodVisitor42.visitLdcInsn(obj51);
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor42.visitJumpInsn((int) (short) 1, label54);
        aSMifierMethodVisitor42.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor42.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierMethodVisitor42.visitAnnotationDefault();
        java.io.PrintWriter printWriter66 = new java.io.PrintWriter("hi!");
        printWriter66.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor70 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor70.visitTryCatchBlock(label71, label72, label73, "");
        aSMifierMethodVisitor70.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        org.mockito.asm.Label[] labelArray83 = new org.mockito.asm.Label[] { label82 };
        aSMifierMethodVisitor70.visitTableSwitchInsn(0, (int) (byte) 10, label81, labelArray83);
        java.io.PrintWriter printWriter85 = printWriter66.printf("hi!", (java.lang.Object[]) labelArray83);
        java.lang.String[] strArray87 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor42.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray83, 1, (java.lang.Object[]) strArray87);
        aSMifierMethodVisitor9.visitFrame(100, 100, objArray40, (int) (short) 100, (java.lang.Object[]) labelArray83);
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = aSMifierMethodVisitor9.visitAnnotation("hi!", true);
        printWriter1.println((java.lang.Object) aSMifierMethodVisitor9);
        aSMifierMethodVisitor9.visitTypeInsn((int) '#', "");
        org.mockito.asm.Label label97 = null;
        aSMifierMethodVisitor9.visitLabel(label97);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(labelArray83);
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(annotationVisitor92);
    }

    @Test
    public void test12646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12646");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        printWriter1.write("hi!");
        printWriter1.write("hi!", (int) (short) -1, (-1));
        java.io.PrintWriter printWriter28 = printWriter1.append((java.lang.CharSequence) "");
        printWriter28.println((long) (short) -1);
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter28);
    }

    @Test
    public void test12647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12647");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor14.visitLocalVariable("hi!", "hi!", "hi!", label23, label24, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor14.visitAnnotation("", true);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj40 = null;
        aSMifierMethodVisitor31.visitLdcInsn(obj40);
        org.mockito.asm.Label label42 = null;
        int[] intArray49 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor50.visitTryCatchBlock(label51, label52, label53, "");
        aSMifierMethodVisitor50.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label[] labelArray63 = new org.mockito.asm.Label[] { label62 };
        aSMifierMethodVisitor50.visitTableSwitchInsn(0, (int) (byte) 10, label61, labelArray63);
        aSMifierMethodVisitor31.visitLookupSwitchInsn(label42, intArray49, labelArray63);
        org.mockito.asm.Label[] labelArray66 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor14.visitLookupSwitchInsn(label30, intArray49, labelArray66);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor69.visitTryCatchBlock(label70, label71, label72, "");
        aSMifierMethodVisitor69.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label[] labelArray82 = new org.mockito.asm.Label[] { label81 };
        aSMifierMethodVisitor69.visitTableSwitchInsn(0, (int) (byte) 10, label80, labelArray82);
        aSMifierMethodVisitor11.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray66, (int) (short) 100, (java.lang.Object[]) labelArray82);
        java.io.PrintWriter printWriter85 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray66);
        java.io.PrintWriter printWriter87 = printWriter85.append((java.lang.CharSequence) "");
        printWriter87.print(100);
        printWriter87.println(false);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray63);
        org.junit.Assert.assertNotNull(labelArray66);
        org.junit.Assert.assertNotNull(labelArray82);
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(printWriter87);
    }

    @Test
    public void test12648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12648");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitLabel(label4);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 10, "", "", "");
        aSMifierMethodVisitor0.visitInsn((int) (short) 10);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 1, "", "", "");
        org.mockito.asm.Label label20 = null;
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter24 = printWriter22.append('a');
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        java.util.Locale locale27 = null;
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        printWriter30.print(false);
        java.util.Locale locale33 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj44 = null;
        aSMifierMethodVisitor35.visitLdcInsn(obj44);
        aSMifierMethodVisitor35.visitInsn((int) ' ');
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor51.visitTryCatchBlock(label52, label53, label54, "");
        aSMifierMethodVisitor51.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj60 = null;
        aSMifierMethodVisitor51.visitLdcInsn(obj60);
        org.mockito.asm.Label label62 = null;
        int[] intArray69 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor70 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor70.visitTryCatchBlock(label71, label72, label73, "");
        aSMifierMethodVisitor70.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        org.mockito.asm.Label[] labelArray83 = new org.mockito.asm.Label[] { label82 };
        aSMifierMethodVisitor70.visitTableSwitchInsn(0, (int) (byte) 10, label81, labelArray83);
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label62, intArray69, labelArray83);
        aSMifierMethodVisitor35.visitTableSwitchInsn((int) '4', (int) '#', label50, labelArray83);
        java.io.PrintWriter printWriter87 = printWriter30.format(locale33, "hi!", (java.lang.Object[]) labelArray83);
        java.io.PrintWriter printWriter88 = printWriter26.printf(locale27, "", (java.lang.Object[]) labelArray83);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (short) 0, (int) '#', label20, labelArray83);
        org.mockito.asm.AnnotationVisitor annotationVisitor90 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn((int) '4', (int) (short) 100);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, 10);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray83);
        org.junit.Assert.assertNotNull(printWriter87);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(annotationVisitor90);
    }

    @Test
    public void test12649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12649");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println((int) (short) -1);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        java.util.Locale locale11 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray16 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray18 = null;
        aSMifierMethodVisitor13.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray16, (int) (short) 1, objArray18);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor21.visitTryCatchBlock(label22, label23, label24, "");
        aSMifierMethodVisitor21.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor21, strArray30, 1.0f };
        java.io.PrintWriter printWriter33 = printWriter10.printf(locale11, "", (java.lang.Object[]) strArray30);
        printWriter33.print("hi!");
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter33);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor37 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter36);
        aSMifierClassVisitor37.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierClassVisitor37.visitAnnotation("hi!", true);
        aSMifierClassVisitor37.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierClassVisitor37.visitAnnotation("hi!", true);
        annotationVisitor49.visitEnum("", "", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor54 = aSMifierClassVisitor4.visitField((int) (short) 10, "", "", "hi!", (java.lang.Object) "");
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = fieldVisitor54.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = fieldVisitor54.visitAnnotation("hi!", true);
        fieldVisitor54.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = fieldVisitor54.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(annotationVisitor57);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test12650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12650");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, 0);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "hi!", "");
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label72);
        org.mockito.asm.Attribute attribute74 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test12651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12651");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor21.visitTryCatchBlock(label22, label23, label24, "");
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor21.visitLocalVariable("hi!", "hi!", "hi!", label30, label31, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor21.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor21);
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor21.visitLineNumber((int) (short) 10, label39);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor21.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor21.visitAnnotationDefault();
        aSMifierMethodVisitor21.visitInsn((int) (byte) 1);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor42);
    }

    @Test
    public void test12652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12652");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) ' ');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 10, "", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj31 = null;
        aSMifierMethodVisitor22.visitLdcInsn(obj31);
        aSMifierMethodVisitor22.visitInsn((int) ' ');
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor22.visitJumpInsn(100, label36);
        aSMifierMethodVisitor22.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor22.visitCode();
        aSMifierMethodVisitor22.visitVarInsn(0, (int) (byte) 100);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor22);
        aSMifierMethodVisitor22.visitCode();
        aSMifierMethodVisitor22.visitMaxs((int) (byte) 0, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor22.visitAnnotationDefault();
        aSMifierMethodVisitor22.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(annotationVisitor50);
    }

    @Test
    public void test12653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12653");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 100, label14);
        aSMifierMethodVisitor0.visitMaxs(10, (int) ' ');
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, (int) (byte) 1);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 1, "hi!");
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (byte) 1);
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test12654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12654");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label19, label20, (int) '4');
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label26, label27, (int) (byte) 1);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label31, label32, label33, "hi!");
        aSMifierMethodVisitor0.visitVarInsn(10, (int) (short) 10);
    }

    @Test
    public void test12655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12655");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter1.print(false);
        printWriter1.print((double) 1.0f);
        printWriter1.close();
        printWriter1.print((long) (short) -1);
        java.io.PrintWriter printWriter18 = printWriter1.append('#');
        printWriter18.print("hi!");
        printWriter18.print((long) (short) 10);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter18);
    }

    @Test
    public void test12656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12656");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        java.io.PrintWriter printWriter10 = printWriter5.append(' ');
        java.io.PrintWriter printWriter12 = printWriter10.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        printWriter14.print(false);
        java.io.PrintWriter printWriter18 = printWriter14.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter14);
        printWriter19.println();
        printWriter19.write("hi!");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print(false);
        java.io.PrintWriter printWriter28 = printWriter24.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.Writer) printWriter28, true);
        printWriter30.print(0.0d);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.write((-1));
        printWriter34.print((double) (byte) 10);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        java.util.Locale locale41 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = null;
        aSMifierMethodVisitor43.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray46, (int) (short) 1, objArray48);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor51.visitTryCatchBlock(label52, label53, label54, "");
        aSMifierMethodVisitor51.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray60 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray62 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor51, strArray60, 1.0f };
        java.io.PrintWriter printWriter63 = printWriter40.printf(locale41, "", (java.lang.Object[]) strArray60);
        char[] charArray70 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter63.println(charArray70);
        printWriter34.print(charArray70);
        printWriter30.print(charArray70);
        printWriter19.println(charArray70);
        // The following exception was thrown during execution in test generation
        try {
            printWriter10.write(charArray70, (int) '4', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test12657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12657");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] { label40 };
        aSMifierMethodVisitor28.visitTableSwitchInsn(0, (int) (byte) 10, label39, labelArray41);
        java.io.PrintWriter printWriter43 = printWriter24.printf("hi!", (java.lang.Object[]) labelArray41);
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray41, 1, (java.lang.Object[]) strArray45);
        aSMifierMethodVisitor0.visitIntInsn((int) '#', 10);
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor0.visitLabel(label50);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 1, "hi!");
        aSMifierMethodVisitor0.visitMaxs((int) ' ', (int) (short) 10);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(strArray45);
    }

    @Test
    public void test12658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12658");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        aSMifierMethodVisitor0.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label20, label21, label22, "hi!");
        java.util.List list25 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMethodInsn(10, "", "", "");
        aSMifierMethodVisitor0.visitTypeInsn((int) '4', "");
        org.junit.Assert.assertNotNull(list25);
    }

    @Test
    public void test12659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12659");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitOuterClass("", "", "hi!");
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter("hi!");
        java.util.Locale locale46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray51 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray53 = null;
        aSMifierMethodVisitor48.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray51, (int) (short) 1, objArray53);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor56.visitTryCatchBlock(label57, label58, label59, "");
        aSMifierMethodVisitor56.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray65 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray67 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor56, strArray65, 1.0f };
        java.io.PrintWriter printWriter68 = printWriter45.printf(locale46, "", (java.lang.Object[]) strArray65);
        char[] charArray75 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter68.println(charArray75);
        java.io.PrintWriter printWriter78 = new java.io.PrintWriter((java.io.Writer) printWriter68, true);
        printWriter78.print((float) (byte) 10);
        org.mockito.asm.FieldVisitor fieldVisitor81 = aSMifierClassVisitor28.visitField((int) ' ', "hi!", "", "", (java.lang.Object) printWriter78);
        aSMifierClassVisitor28.visitOuterClass("hi!", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = aSMifierClassVisitor28.visitAnnotation("", false);
        java.util.List list89 = aSMifierClassVisitor28.getText();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(fieldVisitor81);
        org.junit.Assert.assertNotNull(annotationVisitor88);
        org.junit.Assert.assertNotNull(list89);
    }

    @Test
    public void test12660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12660");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor29.visitTryCatchBlock(label30, label31, label32, "");
        aSMifierMethodVisitor29.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj38 = null;
        aSMifierMethodVisitor29.visitLdcInsn(obj38);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        printWriter41.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor29.print(printWriter41);
        printWriter41.println("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor47 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter41);
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("hi!");
        printWriter53.write((-1));
        printWriter53.flush();
        java.util.Locale locale57 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray62 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray64 = null;
        aSMifierMethodVisitor59.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray62, (int) (short) 1, objArray64);
        java.io.PrintWriter printWriter66 = printWriter53.printf(locale57, "", (java.lang.Object[]) strArray62);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor67 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter53);
        aSMifierClassVisitor67.visitEnd();
        aSMifierClassVisitor67.visitSource("", "hi!");
        java.lang.String[] strArray77 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor67.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray77);
        org.mockito.asm.MethodVisitor methodVisitor79 = aSMifierClassVisitor47.visitMethod(0, "", "hi!", "hi!", strArray77);
        org.mockito.asm.MethodVisitor methodVisitor80 = aSMifierClassVisitor15.visitMethod((int) (byte) 0, "", "", "", strArray77);
        methodVisitor80.visitMultiANewArrayInsn("", 10);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(methodVisitor79);
        org.junit.Assert.assertNotNull(methodVisitor80);
    }

    @Test
    public void test12661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12661");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter3.println();
        java.util.Locale locale5 = null;
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        printWriter8.write((-1));
        printWriter8.flush();
        java.util.Locale locale12 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray17 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray19 = null;
        aSMifierMethodVisitor14.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray17, (int) (short) 1, objArray19);
        java.io.PrintWriter printWriter21 = printWriter8.printf(locale12, "", (java.lang.Object[]) strArray17);
        printWriter8.print('4');
        printWriter8.print((int) (byte) 10);
        java.util.Locale locale26 = null;
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.write((-1));
        printWriter29.flush();
        java.util.Locale locale33 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray40 = null;
        aSMifierMethodVisitor35.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray38, (int) (short) 1, objArray40);
        java.io.PrintWriter printWriter42 = printWriter29.printf(locale33, "", (java.lang.Object[]) strArray38);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor43 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter29);
        aSMifierClassVisitor43.visitEnd();
        aSMifierClassVisitor43.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor52.visitTryCatchBlock(label53, label54, label55, "");
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor52.visitLocalVariable("hi!", "hi!", "hi!", label61, label62, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor52.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor52.visitAnnotationDefault();
        annotationVisitor68.visitEnum("", "hi!", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor73 = aSMifierClassVisitor43.visitField((int) '#', "", "", "", (java.lang.Object) "hi!");
        aSMifierClassVisitor43.visitSource("", "");
        aSMifierClassVisitor43.visitInnerClass("hi!", "", "", (int) ' ');
        java.lang.String[] strArray88 = new java.lang.String[] { "", "hi!" };
        org.mockito.asm.MethodVisitor methodVisitor89 = aSMifierClassVisitor43.visitMethod((int) (byte) 0, "hi!", "hi!", "", strArray88);
        java.io.PrintWriter printWriter90 = printWriter8.format(locale26, "", (java.lang.Object[]) strArray88);
        java.io.PrintWriter printWriter91 = printWriter3.printf(locale5, "hi!", (java.lang.Object[]) strArray88);
        printWriter91.println('a');
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(fieldVisitor73);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(methodVisitor89);
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertNotNull(printWriter91);
    }

    @Test
    public void test12662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12662");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label6, label7, label8, "");
        java.util.List list11 = aSMifierMethodVisitor0.text;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor15.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor15.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj24 = null;
        aSMifierMethodVisitor15.visitLdcInsn(obj24);
        aSMifierMethodVisitor15.visitEnd();
        aSMifierMethodVisitor15.visitMaxs((int) (byte) 0, (int) (short) 1);
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label[] labelArray33 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitTableSwitchInsn((-1), (int) (byte) 0, label32, labelArray33);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', (int) (byte) 1, label14, labelArray33);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor0.visitParameterAnnotation((int) ' ', "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = annotationVisitor39.visitAnnotation("", "hi!");
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(labelArray33);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor42);
    }

    @Test
    public void test12663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12663");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        java.lang.Object obj13 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj13);
        aSMifierMethodVisitor0.visitCode();
    }

    @Test
    public void test12664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12664");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        java.util.List list6 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitFieldInsn((int) '#', "", "", "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "", "", "hi!");
        org.mockito.asm.Label label19 = null;
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((java.lang.Object) (short) -1);
        printWriter21.flush();
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor27.visitTryCatchBlock(label28, label29, label30, "");
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor27.visitLocalVariable("hi!", "hi!", "hi!", label36, label37, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor27.visitAnnotation("", true);
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj53 = null;
        aSMifierMethodVisitor44.visitLdcInsn(obj53);
        org.mockito.asm.Label label55 = null;
        int[] intArray62 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor63.visitTryCatchBlock(label64, label65, label66, "");
        aSMifierMethodVisitor63.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label[] labelArray76 = new org.mockito.asm.Label[] { label75 };
        aSMifierMethodVisitor63.visitTableSwitchInsn(0, (int) (byte) 10, label74, labelArray76);
        aSMifierMethodVisitor44.visitLookupSwitchInsn(label55, intArray62, labelArray76);
        org.mockito.asm.Label[] labelArray79 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label43, intArray62, labelArray79);
        java.io.PrintWriter printWriter81 = printWriter21.format(locale25, "hi!", (java.lang.Object[]) labelArray79);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (short) -1, (int) (byte) 10, label19, labelArray79);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, (int) (short) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor89 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "", true);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray76);
        org.junit.Assert.assertNotNull(labelArray79);
        org.junit.Assert.assertNotNull(printWriter81);
        org.junit.Assert.assertNotNull(annotationVisitor89);
    }

    @Test
    public void test12665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12665");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append(' ');
        java.io.PrintWriter printWriter30 = printWriter28.append('4');
        printWriter30.print(false);
        printWriter30.write("", 100, (-1));
        printWriter30.print(0.0f);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(printWriter30);
    }

    @Test
    public void test12666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12666");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) ' ');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 10, "", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj31 = null;
        aSMifierMethodVisitor22.visitLdcInsn(obj31);
        aSMifierMethodVisitor22.visitInsn((int) ' ');
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor22.visitJumpInsn(100, label36);
        aSMifierMethodVisitor22.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor22.visitCode();
        aSMifierMethodVisitor22.visitVarInsn(0, (int) (byte) 100);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor22);
        aSMifierMethodVisitor22.visitCode();
        aSMifierMethodVisitor22.visitMaxs((int) (byte) 0, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor22.visitAnnotationDefault();
        aSMifierMethodVisitor22.visitMultiANewArrayInsn("", (int) (byte) 1);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(annotationVisitor50);
    }

    @Test
    public void test12667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12667");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (byte) 0);
        java.util.List list32 = aSMifierClassVisitor15.getText();
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter("hi!");
        printWriter38.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter43 = printWriter38.format("", (java.lang.Object[]) strArray42);
        org.mockito.asm.MethodVisitor methodVisitor44 = aSMifierClassVisitor15.visitMethod(0, "", "hi!", "hi!", strArray42);
        aSMifierClassVisitor15.visitOuterClass("hi!", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(methodVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test12668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12668");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "hi!", "hi!", (int) (byte) 1);
        aSMifierClassVisitor28.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor28.visitAnnotation("", true);
        org.mockito.asm.FieldVisitor fieldVisitor43 = aSMifierClassVisitor28.visitField((int) (byte) 10, "", "", "", (java.lang.Object) 10.0d);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierClassVisitor28.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierClassVisitor28.visitAnnotation("", false);
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitInnerClass("", "hi!", "", (int) 'a');
        aSMifierClassVisitor28.visitOuterClass("", "hi!", "");
        aSMifierClassVisitor28.visitInnerClass("", "", "", (int) (byte) -1);
        aSMifierClassVisitor28.visitOuterClass("", "hi!", "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(annotationVisitor49);
    }

    @Test
    public void test12669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12669");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) ' ');
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 100, label18);
        aSMifierMethodVisitor0.visitVarInsn((int) 'a', (int) (short) 100);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor26.visitFieldInsn((int) ' ', "hi!", "", "");
        aSMifierMethodVisitor26.visitEnd();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] { label48 };
        aSMifierMethodVisitor36.visitTableSwitchInsn(0, (int) (byte) 10, label47, labelArray49);
        aSMifierMethodVisitor26.visitTableSwitchInsn((int) (byte) 100, 0, label35, labelArray49);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 1, (int) '#', label25, labelArray49);
        aSMifierMethodVisitor0.visitTypeInsn((int) '#', "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(labelArray49);
    }

    @Test
    public void test12670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12670");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 1, "hi!", "", "hi!");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.write((-1));
        printWriter12.print((-1));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter12);
        printWriter12.println();
        printWriter12.println((double) 0.0f);
        java.io.PrintWriter printWriter22 = printWriter12.append((java.lang.CharSequence) "hi!");
        printWriter12.print('#');
        org.junit.Assert.assertNotNull(printWriter22);
    }

    @Test
    public void test12671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12671");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        char[] charArray56 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter49.println(charArray56);
        printWriter24.print(charArray56);
        printWriter24.print(true);
        java.io.PrintWriter printWriter62 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter((java.io.Writer) printWriter62);
        printWriter62.println();
        java.io.PrintWriter printWriter66 = printWriter62.append('#');
        printWriter62.print(true);
        printWriter62.println((long) (short) 100);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(printWriter66);
    }

    @Test
    public void test12672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12672");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label10);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 10);
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label15);
        java.util.List list17 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(list17);
    }

    @Test
    public void test12673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12673");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println((float) '#');
        printWriter1.print((long) (byte) -1);
        printWriter1.print((double) 100L);
        java.util.Locale locale8 = null;
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter("hi!");
        java.util.Locale locale12 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray17 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray19 = null;
        aSMifierMethodVisitor14.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray17, (int) (short) 1, objArray19);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray31 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray33 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor22, strArray31, 1.0f };
        java.io.PrintWriter printWriter34 = printWriter11.printf(locale12, "", (java.lang.Object[]) strArray31);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter34, true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor38.visitTryCatchBlock(label39, label40, label41, "");
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor38.visitLocalVariable("hi!", "hi!", "hi!", label47, label48, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor38.visitAnnotation("", true);
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor55.visitTryCatchBlock(label56, label57, label58, "");
        aSMifierMethodVisitor55.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj64 = null;
        aSMifierMethodVisitor55.visitLdcInsn(obj64);
        org.mockito.asm.Label label66 = null;
        int[] intArray73 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor74 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        aSMifierMethodVisitor74.visitTryCatchBlock(label75, label76, label77, "");
        aSMifierMethodVisitor74.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label85 = null;
        org.mockito.asm.Label label86 = null;
        org.mockito.asm.Label[] labelArray87 = new org.mockito.asm.Label[] { label86 };
        aSMifierMethodVisitor74.visitTableSwitchInsn(0, (int) (byte) 10, label85, labelArray87);
        aSMifierMethodVisitor55.visitLookupSwitchInsn(label66, intArray73, labelArray87);
        org.mockito.asm.Label[] labelArray90 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label54, intArray73, labelArray90);
        java.io.PrintWriter printWriter92 = printWriter36.printf("hi!", (java.lang.Object[]) labelArray90);
        java.io.PrintWriter printWriter93 = printWriter1.printf(locale8, "", (java.lang.Object[]) labelArray90);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray87);
        org.junit.Assert.assertNotNull(labelArray90);
        org.junit.Assert.assertNotNull(printWriter92);
        org.junit.Assert.assertNotNull(printWriter93);
    }

    @Test
    public void test12674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12674");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        java.util.List list6 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitFieldInsn((int) '#', "", "", "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "", "", "hi!");
        org.mockito.asm.Label label19 = null;
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((java.lang.Object) (short) -1);
        printWriter21.flush();
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor27.visitTryCatchBlock(label28, label29, label30, "");
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor27.visitLocalVariable("hi!", "hi!", "hi!", label36, label37, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor27.visitAnnotation("", true);
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj53 = null;
        aSMifierMethodVisitor44.visitLdcInsn(obj53);
        org.mockito.asm.Label label55 = null;
        int[] intArray62 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor63.visitTryCatchBlock(label64, label65, label66, "");
        aSMifierMethodVisitor63.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label[] labelArray76 = new org.mockito.asm.Label[] { label75 };
        aSMifierMethodVisitor63.visitTableSwitchInsn(0, (int) (byte) 10, label74, labelArray76);
        aSMifierMethodVisitor44.visitLookupSwitchInsn(label55, intArray62, labelArray76);
        org.mockito.asm.Label[] labelArray79 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label43, intArray62, labelArray79);
        java.io.PrintWriter printWriter81 = printWriter21.format(locale25, "hi!", (java.lang.Object[]) labelArray79);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (short) -1, (int) (byte) 10, label19, labelArray79);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, (int) (short) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor86 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 100, 100);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray76);
        org.junit.Assert.assertNotNull(labelArray79);
        org.junit.Assert.assertNotNull(printWriter81);
        org.junit.Assert.assertNotNull(annotationVisitor86);
    }

    @Test
    public void test12675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12675");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj45 = null;
        aSMifierMethodVisitor36.visitLdcInsn(obj45);
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor36.visitJumpInsn((int) (short) 1, label48);
        aSMifierMethodVisitor36.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor36.visitParameterAnnotation((int) (byte) 1, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor57 = aSMifierClassVisitor31.visitField((int) (byte) 0, "", "", "", (java.lang.Object) aSMifierMethodVisitor36);
        fieldVisitor57.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = fieldVisitor57.visitAnnotation("hi!", true);
        fieldVisitor57.visitEnd();
        fieldVisitor57.visitEnd();
        org.mockito.asm.Attribute attribute64 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor57.visitAttribute(attribute64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(annotationVisitor61);
    }

    @Test
    public void test12676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12676");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "", "");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor10.visitTryCatchBlock(label11, label12, label13, "");
        aSMifierMethodVisitor10.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label[] labelArray23 = new org.mockito.asm.Label[] { label22 };
        aSMifierMethodVisitor10.visitTableSwitchInsn(0, (int) (byte) 10, label21, labelArray23);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 100, 0, label9, labelArray23);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 0, "hi!", false);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 0, "");
        org.junit.Assert.assertNotNull(labelArray23);
        org.junit.Assert.assertNotNull(annotationVisitor35);
    }

    @Test
    public void test12677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12677");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label28, label29, (int) (short) 1);
        aSMifierMethodVisitor0.visitIntInsn((int) '#', (int) 'a');
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 100, (int) (byte) 0);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, (int) '#');
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 1, label42);
        java.util.List list44 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) -1, label46);
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 1, (int) '#');
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor0.visitLabel(label51);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(list44);
    }

    @Test
    public void test12678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12678");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label22);
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label27, label28, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitParameterAnnotation(1, "hi!", true);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 1, "", "hi!", "");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn((int) (byte) -1, "", "hi!", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor34);
    }

    @Test
    public void test12679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12679");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor0.visitMaxs((int) (short) -1, (int) (short) 0);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 1, "", "hi!", "");
    }

    @Test
    public void test12680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12680");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("hi!");
        printWriter2.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter6 = printWriter2.append((java.lang.CharSequence) "");
        printWriter2.print((int) (byte) -1);
        printWriter2.write("", (int) (byte) 1, (int) (short) 0);
        printWriter2.print((double) (byte) -1);
        aSMifierMethodVisitor0.print(printWriter2);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn(100, 10);
        org.junit.Assert.assertNotNull(printWriter6);
    }

    @Test
    public void test12681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12681");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 1, "hi!", "", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn((int) (byte) -1, "", "", "");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list13);
    }

    @Test
    public void test12682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12682");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj40 = null;
        aSMifierMethodVisitor31.visitLdcInsn(obj40);
        aSMifierMethodVisitor31.visitInsn((int) ' ');
        aSMifierMethodVisitor31.visitIincInsn((int) (byte) 100, (int) (short) 1);
        aSMifierMethodVisitor31.visitTypeInsn((int) (byte) 0, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor31.visitAnnotationDefault();
        org.mockito.asm.FieldVisitor fieldVisitor51 = aSMifierClassVisitor15.visitField((int) (short) 10, "hi!", "", "", (java.lang.Object) aSMifierMethodVisitor31);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = fieldVisitor51.visitAnnotation("hi!", false);
        fieldVisitor51.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = fieldVisitor51.visitAnnotation("", false);
        fieldVisitor51.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = fieldVisitor51.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = fieldVisitor51.visitAnnotation("hi!", true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(annotationVisitor65);
    }

    @Test
    public void test12683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12683");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLabel(label17);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        java.util.Locale locale22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray27 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray29 = null;
        aSMifierMethodVisitor24.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray27, (int) (short) 1, objArray29);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray41 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray43 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor32, strArray41, 1.0f };
        java.io.PrintWriter printWriter44 = printWriter21.printf(locale22, "", (java.lang.Object[]) strArray41);
        java.io.PrintWriter printWriter46 = printWriter44.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter48 = printWriter44.append(' ');
        printWriter48.print(1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter48);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, (int) (short) 1);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(printWriter48);
    }

    @Test
    public void test12684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12684");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        aSMifierClassVisitor15.visitInnerClass("hi!", "hi!", "", (int) (byte) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter43 = printWriter39.append((java.lang.CharSequence) "");
        printWriter43.close();
        java.util.Locale locale45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label48, label49, label50, "");
        aSMifierMethodVisitor47.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj56 = null;
        aSMifierMethodVisitor47.visitLdcInsn(obj56);
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor47.visitJumpInsn((int) (short) 1, label59);
        aSMifierMethodVisitor47.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor47.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor47.visitAnnotationDefault();
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter("hi!");
        printWriter71.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor75 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor75.visitTryCatchBlock(label76, label77, label78, "");
        aSMifierMethodVisitor75.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label86 = null;
        org.mockito.asm.Label label87 = null;
        org.mockito.asm.Label[] labelArray88 = new org.mockito.asm.Label[] { label87 };
        aSMifierMethodVisitor75.visitTableSwitchInsn(0, (int) (byte) 10, label86, labelArray88);
        java.io.PrintWriter printWriter90 = printWriter71.printf("hi!", (java.lang.Object[]) labelArray88);
        java.lang.String[] strArray92 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor47.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray88, 1, (java.lang.Object[]) strArray92);
        java.io.PrintWriter printWriter94 = printWriter43.format(locale45, "", (java.lang.Object[]) strArray92);
        aSMifierClassVisitor15.visit((int) (short) 1, (int) (byte) 100, "", "hi!", "", strArray92);
        org.mockito.asm.AnnotationVisitor annotationVisitor98 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        aSMifierClassVisitor15.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(labelArray88);
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(printWriter94);
        org.junit.Assert.assertNotNull(annotationVisitor98);
    }

    @Test
    public void test12685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12685");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        printWriter34.println("");
        printWriter34.print((int) ' ');
        printWriter34.print("");
        printWriter34.println("hi!");
        java.io.PrintWriter printWriter46 = printWriter34.append((java.lang.CharSequence) "");
        printWriter46.print((float) (short) 0);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(printWriter46);
    }

    @Test
    public void test12686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12686");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs((int) '#', (int) '#');
        aSMifierMethodVisitor0.visitVarInsn((int) 'a', (-1));
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label11, label12, (int) 'a');
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) ' ', label16);
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label21, label22, (int) (byte) 1);
    }

    @Test
    public void test12687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12687");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor15);
        java.util.List list21 = aSMifierMethodVisitor15.getText();
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor15.visitLineNumber((int) (byte) 10, label23);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor15.visitAnnotationDefault();
        java.util.List list26 = aSMifierMethodVisitor15.getText();
        aSMifierMethodVisitor15.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(list26);
    }

    @Test
    public void test12688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12688");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label22);
        aSMifierMethodVisitor0.visitVarInsn(100, (-1));
        aSMifierMethodVisitor0.visitFieldInsn(100, "", "", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn(0, "", "hi!", "hi!");
        java.util.List list37 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor0.visitLineNumber(0, label40);
        aSMifierMethodVisitor0.visitIincInsn(100, (int) (byte) 10);
        org.junit.Assert.assertNotNull(list37);
    }

    @Test
    public void test12689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12689");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor23);
    }

    @Test
    public void test12690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12690");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label74, label75, label76, "hi!");
        java.util.List list79 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label81 = null;
        aSMifierMethodVisitor0.visitJumpInsn(0, label81);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(list79);
    }

    @Test
    public void test12691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12691");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, 0);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitMaxs(0, 0);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitVarInsn((int) ' ', (int) (byte) 100);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationVisitor73);
    }

    @Test
    public void test12692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12692");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        aSMifierMethodVisitor6.visitTryCatchBlock(label7, label8, label9, "");
        aSMifierMethodVisitor6.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj15 = null;
        aSMifierMethodVisitor6.visitLdcInsn(obj15);
        aSMifierMethodVisitor6.visitTypeInsn(0, "hi!");
        printWriter1.print((java.lang.Object) 0);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.print(false);
        java.io.PrintWriter printWriter26 = printWriter22.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        printWriter28.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter32 = printWriter28.append((java.lang.CharSequence) "");
        printWriter28.println(10);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter38 = printWriter36.append('a');
        printWriter36.println(100.0f);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter44 = printWriter42.append('a');
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        printWriter46.println((-1.0d));
        printWriter42.print((java.lang.Object) (-1.0d));
        java.io.PrintWriter printWriter51 = printWriter42.append('a');
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("hi!");
        java.util.Locale locale54 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray59 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray61 = null;
        aSMifierMethodVisitor56.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray59, (int) (short) 1, objArray61);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray73 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray75 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor64, strArray73, 1.0f };
        java.io.PrintWriter printWriter76 = printWriter53.printf(locale54, "", (java.lang.Object[]) strArray73);
        char[] charArray83 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter76.println(charArray83);
        printWriter76.write(1);
        printWriter51.print((java.lang.Object) 1);
        char[] charArray88 = new char[] {};
        printWriter51.print(charArray88);
        printWriter36.println(charArray88);
        printWriter28.write(charArray88);
        printWriter22.write(charArray88);
        printWriter1.print(charArray88);
        printWriter1.println((float) (byte) 10);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertNotNull(printWriter76);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[]");
    }

    @Test
    public void test12693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12693");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label10);
        aSMifierMethodVisitor0.visitFieldInsn(10, "hi!", "", "hi!");
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '4', label18);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) -1, "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor27);
    }

    @Test
    public void test12694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12694");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        aSMifierMethodVisitor39.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor39.visitLocalVariable("hi!", "hi!", "hi!", label56, label57, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor39.visitParameterAnnotation(0, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor64 = aSMifierClassVisitor28.visitField((int) ' ', "hi!", "hi!", "", (java.lang.Object) aSMifierMethodVisitor39);
        java.lang.String[] strArray69 = null;
        org.mockito.asm.MethodVisitor methodVisitor70 = aSMifierClassVisitor28.visitMethod(0, "hi!", "hi!", "", strArray69);
        methodVisitor70.visitMethodInsn(0, "", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = methodVisitor70.visitAnnotationDefault();
        org.mockito.asm.Label label78 = null;
        methodVisitor70.visitLineNumber((int) (byte) 1, label78);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(methodVisitor70);
        org.junit.Assert.assertNotNull(annotationVisitor76);
    }

    @Test
    public void test12695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12695");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        aSMifierClassVisitor15.visitSource("hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter("hi!");
        printWriter45.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter49 = printWriter45.append((java.lang.CharSequence) "");
        printWriter45.print((int) (byte) -1);
        printWriter45.print("hi!");
        org.mockito.asm.FieldVisitor fieldVisitor54 = aSMifierClassVisitor15.visitField((int) (short) 1, "hi!", "", "", (java.lang.Object) printWriter45);
        org.mockito.asm.Attribute attribute55 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor15.visitAttribute(attribute55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(fieldVisitor54);
    }

    @Test
    public void test12696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12696");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println((int) (short) 10);
        printWriter24.print('#');
        printWriter24.print(false);
        java.io.PrintWriter printWriter32 = printWriter24.append('#');
        java.io.PrintWriter printWriter34 = printWriter24.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor36.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label48 = null;
        int[] intArray50 = new int[] { (byte) 0 };
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        printWriter52.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor56.visitTryCatchBlock(label57, label58, label59, "");
        aSMifierMethodVisitor56.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label[] labelArray69 = new org.mockito.asm.Label[] { label68 };
        aSMifierMethodVisitor56.visitTableSwitchInsn(0, (int) (byte) 10, label67, labelArray69);
        java.io.PrintWriter printWriter71 = printWriter52.printf("hi!", (java.lang.Object[]) labelArray69);
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label48, intArray50, labelArray69);
        java.io.PrintWriter printWriter73 = printWriter24.printf("hi!", (java.lang.Object[]) labelArray69);
        printWriter73.print((long) '4');
        printWriter73.println(false);
        printWriter73.println(10L);
        printWriter73.println((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter85 = printWriter73.append((java.lang.CharSequence) "hi!", (int) '#', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0]");
        org.junit.Assert.assertNotNull(labelArray69);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(printWriter73);
    }

    @Test
    public void test12697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12697");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter3, true);
        printWriter3.println(10);
        printWriter3.close();
        java.io.PrintWriter printWriter12 = printWriter3.append((java.lang.CharSequence) "", 0, 0);
        printWriter12.print('a');
        printWriter12.print('#');
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter12);
    }

    @Test
    public void test12698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12698");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor32.visitLocalVariable("hi!", "hi!", "hi!", label41, label42, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierMethodVisitor32.visitAnnotation("", true);
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj58 = null;
        aSMifierMethodVisitor49.visitLdcInsn(obj58);
        org.mockito.asm.Label label60 = null;
        int[] intArray67 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor68.visitTryCatchBlock(label69, label70, label71, "");
        aSMifierMethodVisitor68.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label[] labelArray81 = new org.mockito.asm.Label[] { label80 };
        aSMifierMethodVisitor68.visitTableSwitchInsn(0, (int) (byte) 10, label79, labelArray81);
        aSMifierMethodVisitor49.visitLookupSwitchInsn(label60, intArray67, labelArray81);
        org.mockito.asm.Label[] labelArray84 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label48, intArray67, labelArray84);
        java.io.PrintWriter printWriter86 = printWriter26.format("hi!", (java.lang.Object[]) labelArray84);
        java.lang.Object obj87 = null;
        printWriter26.print(obj87);
        printWriter26.println();
        printWriter26.println(false);
        printWriter26.println((double) 0.0f);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray81);
        org.junit.Assert.assertNotNull(labelArray84);
        org.junit.Assert.assertNotNull(printWriter86);
    }

    @Test
    public void test12699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12699");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter3, true);
        java.util.Locale locale6 = null;
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("hi!");
        printWriter9.print(false);
        java.util.Locale locale12 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitInsn((int) ' ');
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj39 = null;
        aSMifierMethodVisitor30.visitLdcInsn(obj39);
        org.mockito.asm.Label label41 = null;
        int[] intArray48 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label[] labelArray62 = new org.mockito.asm.Label[] { label61 };
        aSMifierMethodVisitor49.visitTableSwitchInsn(0, (int) (byte) 10, label60, labelArray62);
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label41, intArray48, labelArray62);
        aSMifierMethodVisitor14.visitTableSwitchInsn((int) '4', (int) '#', label29, labelArray62);
        java.io.PrintWriter printWriter66 = printWriter9.format(locale12, "hi!", (java.lang.Object[]) labelArray62);
        java.io.PrintWriter printWriter67 = printWriter5.printf(locale6, "", (java.lang.Object[]) labelArray62);
        printWriter5.close();
        java.io.PrintWriter printWriter70 = printWriter5.append(' ');
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray62);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(printWriter70);
    }

    @Test
    public void test12700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12700");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.print('a');
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter28.flush();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        aSMifierClassVisitor30.visitSource("hi!", "");
        aSMifierClassVisitor30.visitOuterClass("hi!", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierClassVisitor30.visitAnnotation("", true);
        aSMifierClassVisitor30.visitSource("", "");
        java.util.List list44 = aSMifierClassVisitor30.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierClassVisitor30.visitAnnotation("hi!", false);
        aSMifierClassVisitor30.visitOuterClass("hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(annotationVisitor47);
    }

    @Test
    public void test12701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12701");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '#', label21);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLabel(label30);
        java.util.List list32 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 1, "", true);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 1, label38);
        java.lang.Class<?> wildcardClass40 = aSMifierMethodVisitor0.getClass();
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test12702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12702");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label21, label22, label23, "");
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label29, label30, (int) (byte) 1);
        aSMifierMethodVisitor0.visitIntInsn(10, (int) (short) 10);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label37);
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 10, "", "hi!", "hi!");
    }

    @Test
    public void test12703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12703");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        char[] charArray33 = new char[] {};
        printWriter24.print(charArray33);
        java.util.Locale locale35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj46 = null;
        aSMifierMethodVisitor37.visitLdcInsn(obj46);
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor37.visitJumpInsn((int) (short) 1, label49);
        aSMifierMethodVisitor37.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor37.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierMethodVisitor37.visitAnnotationDefault();
        aSMifierMethodVisitor37.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor37.visitLabel(label61);
        java.util.List list63 = aSMifierMethodVisitor37.getText();
        aSMifierMethodVisitor37.visitMultiANewArrayInsn("", (int) (short) 0);
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter("hi!");
        printWriter70.write((-1));
        printWriter70.flush();
        java.util.Locale locale74 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor76 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray79 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray81 = null;
        aSMifierMethodVisitor76.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray79, (int) (short) 1, objArray81);
        java.io.PrintWriter printWriter83 = printWriter70.printf(locale74, "", (java.lang.Object[]) strArray79);
        java.lang.Object[] objArray85 = null;
        aSMifierMethodVisitor37.visitFrame((int) (short) 1, 10, (java.lang.Object[]) strArray79, (int) (short) -1, objArray85);
        java.io.PrintWriter printWriter87 = printWriter24.printf(locale35, "", (java.lang.Object[]) strArray79);
        // The following exception was thrown during execution in test generation
        try {
            printWriter87.write("hi!", (int) (short) -1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[]");
        org.junit.Assert.assertNotNull(annotationVisitor57);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertNotNull(printWriter87);
    }

    @Test
    public void test12704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12704");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        aSMifierClassVisitor15.visitSource("", "");
        aSMifierClassVisitor15.visitInnerClass("hi!", "hi!", "", 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray40 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray42 = null;
        aSMifierMethodVisitor37.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray40, (int) (short) 1, objArray42);
        aSMifierMethodVisitor37.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor37.visitEnd();
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor37.visitLocalVariable("", "hi!", "hi!", label53, label54, (int) 'a');
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label57, label58, label59, "hi!");
        aSMifierMethodVisitor37.visitEnd();
        aSMifierMethodVisitor37.visitTypeInsn((int) (short) 10, "");
        aSMifierMethodVisitor37.visitInsn(0);
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor37.visitLocalVariable("hi!", "", "", label71, label72, (int) (byte) -1);
        java.util.List list75 = aSMifierMethodVisitor37.getText();
        org.mockito.asm.FieldVisitor fieldVisitor76 = aSMifierClassVisitor15.visitField(0, "hi!", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor37);
        org.mockito.asm.Attribute attribute77 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor76.visitAttribute(attribute77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(fieldVisitor76);
    }

    @Test
    public void test12705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12705");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter6.println((double) 10);
        java.io.PrintWriter printWriter10 = printWriter6.append((java.lang.CharSequence) "hi!");
        printWriter6.print(false);
        java.io.PrintWriter printWriter14 = printWriter6.append('4');
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(printWriter14);
    }

    @Test
    public void test12706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12706");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter1.checkError();
        printWriter1.print((double) 1L);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter28.write((int) '#');
        printWriter28.print((long) '4');
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        java.util.Locale locale36 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray41 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray43 = null;
        aSMifierMethodVisitor38.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray41, (int) (short) 1, objArray43);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor46.visitTryCatchBlock(label47, label48, label49, "");
        aSMifierMethodVisitor46.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray55 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray57 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor46, strArray55, 1.0f };
        java.io.PrintWriter printWriter58 = printWriter35.printf(locale36, "", (java.lang.Object[]) strArray55);
        printWriter58.print('#');
        printWriter58.println();
        java.io.PrintWriter printWriter63 = printWriter58.append((java.lang.CharSequence) "");
        printWriter58.flush();
        printWriter58.println("");
        java.util.Locale locale67 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor69.visitFieldInsn((int) ' ', "hi!", "", "");
        aSMifierMethodVisitor69.visitEnd();
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor79 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        aSMifierMethodVisitor79.visitTryCatchBlock(label80, label81, label82, "");
        aSMifierMethodVisitor79.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label90 = null;
        org.mockito.asm.Label label91 = null;
        org.mockito.asm.Label[] labelArray92 = new org.mockito.asm.Label[] { label91 };
        aSMifierMethodVisitor79.visitTableSwitchInsn(0, (int) (byte) 10, label90, labelArray92);
        aSMifierMethodVisitor69.visitTableSwitchInsn((int) (byte) 100, 0, label78, labelArray92);
        java.io.PrintWriter printWriter95 = printWriter58.format(locale67, "hi!", (java.lang.Object[]) labelArray92);
        java.io.PrintWriter printWriter96 = printWriter28.format("hi!", (java.lang.Object[]) labelArray92);
        printWriter96.print((int) (byte) 10);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(labelArray92);
        org.junit.Assert.assertNotNull(printWriter95);
        org.junit.Assert.assertNotNull(printWriter96);
    }

    @Test
    public void test12707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12707");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj45 = null;
        aSMifierMethodVisitor36.visitLdcInsn(obj45);
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor36.visitJumpInsn((int) (short) 1, label48);
        aSMifierMethodVisitor36.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor36.visitParameterAnnotation((int) (byte) 1, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor57 = aSMifierClassVisitor31.visitField((int) (byte) 0, "", "", "", (java.lang.Object) aSMifierMethodVisitor36);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierClassVisitor31.visitAnnotation("", false);
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter("hi!");
        printWriter67.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray71 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter72 = printWriter67.format("", (java.lang.Object[]) strArray71);
        aSMifierClassVisitor31.visit(1, (int) (byte) 0, "", "hi!", "hi!", strArray71);
        aSMifierClassVisitor31.visitOuterClass("hi!", "", "");
        aSMifierClassVisitor31.visitInnerClass("hi!", "hi!", "hi!", (int) (byte) 100);
        aSMifierClassVisitor31.visitInnerClass("hi!", "", "hi!", (int) ' ');
        aSMifierClassVisitor31.visitSource("", "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(printWriter72);
    }

    @Test
    public void test12708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12708");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs(1, 10);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter("hi!");
        printWriter65.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor69.visitTryCatchBlock(label70, label71, label72, "");
        aSMifierMethodVisitor69.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label[] labelArray82 = new org.mockito.asm.Label[] { label81 };
        aSMifierMethodVisitor69.visitTableSwitchInsn(0, (int) (byte) 10, label80, labelArray82);
        java.io.PrintWriter printWriter84 = printWriter65.printf("hi!", (java.lang.Object[]) labelArray82);
        printWriter65.print((float) 1L);
        aSMifierMethodVisitor0.print(printWriter65);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.AnnotationVisitor annotationVisitor90 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((int) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray82);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(annotationVisitor90);
    }

    @Test
    public void test12709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12709");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println((int) (short) 10);
        printWriter24.print('#');
        printWriter24.print(false);
        java.io.PrintWriter printWriter32 = printWriter24.append('#');
        java.io.PrintWriter printWriter34 = printWriter24.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor36.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label48 = null;
        int[] intArray50 = new int[] { (byte) 0 };
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        printWriter52.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor56.visitTryCatchBlock(label57, label58, label59, "");
        aSMifierMethodVisitor56.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label[] labelArray69 = new org.mockito.asm.Label[] { label68 };
        aSMifierMethodVisitor56.visitTableSwitchInsn(0, (int) (byte) 10, label67, labelArray69);
        java.io.PrintWriter printWriter71 = printWriter52.printf("hi!", (java.lang.Object[]) labelArray69);
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label48, intArray50, labelArray69);
        java.io.PrintWriter printWriter73 = printWriter24.printf("hi!", (java.lang.Object[]) labelArray69);
        java.lang.Class<?> wildcardClass74 = printWriter24.getClass();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0]");
        org.junit.Assert.assertNotNull(labelArray69);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test12710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12710");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '#', label21);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLabel(label30);
        java.util.List list32 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "hi!", label38, label39, (int) '#');
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(list32);
    }

    @Test
    public void test12711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12711");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor8.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierClassVisitor8.visitAnnotation("", false);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        printWriter18.print(false);
        printWriter18.println(false);
        printWriter18.print(0L);
        java.io.PrintWriter printWriter26 = printWriter18.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray33 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter34 = printWriter29.format("", (java.lang.Object[]) strArray33);
        java.io.PrintWriter printWriter35 = printWriter18.printf("hi!", (java.lang.Object[]) strArray33);
        org.mockito.asm.MethodVisitor methodVisitor36 = aSMifierClassVisitor8.visitMethod((-1), "hi!", "", "", strArray33);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(methodVisitor36);
    }

    @Test
    public void test12712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12712");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitIincInsn((int) '#', (int) (byte) -1);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIincInsn((int) '4', 100);
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (int) '#');
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 10, label13);
    }

    @Test
    public void test12713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12713");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("hi!");
        printWriter2.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter6 = printWriter2.append((java.lang.CharSequence) "");
        printWriter2.print((int) (byte) -1);
        printWriter2.write("", (int) (byte) 1, (int) (short) 0);
        printWriter2.print((double) (byte) -1);
        aSMifierMethodVisitor0.print(printWriter2);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "");
        aSMifierMethodVisitor0.visitMaxs((int) ' ', (int) (short) 1);
        aSMifierMethodVisitor0.visitVarInsn(100, (int) (short) -1);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        java.io.PrintWriter printWriter51 = printWriter49.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter53 = printWriter49.append(' ');
        printWriter53.println((float) '4');
        printWriter53.println(0);
        printWriter53.println((float) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor60.visitTryCatchBlock(label61, label62, label63, "");
        aSMifierMethodVisitor60.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj69 = null;
        aSMifierMethodVisitor60.visitLdcInsn(obj69);
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor60.visitJumpInsn((int) (short) 1, label72);
        aSMifierMethodVisitor60.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor60.visitJumpInsn((int) (short) 1, label78);
        aSMifierMethodVisitor60.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor60.visitMaxs((int) (short) 1, (int) '#');
        aSMifierMethodVisitor60.visitCode();
        printWriter53.println((java.lang.Object) aSMifierMethodVisitor60);
        org.mockito.asm.AnnotationVisitor annotationVisitor93 = aSMifierMethodVisitor60.visitParameterAnnotation(100, "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor95 = annotationVisitor93.visitArray("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(annotationVisitor93);
        org.junit.Assert.assertNotNull(annotationVisitor95);
    }

    @Test
    public void test12714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12714");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitIincInsn(0, 1);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "hi!", "hi!", "");
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
    }

    @Test
    public void test12715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12715");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        aSMifierMethodVisitor0.visitMethodInsn(10, "", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label14, label15, label16, "hi!");
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter("hi!");
        java.util.Locale locale21 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray26 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray28 = null;
        aSMifierMethodVisitor23.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray26, (int) (short) 1, objArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray40 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray42 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor31, strArray40, 1.0f };
        java.io.PrintWriter printWriter43 = printWriter20.printf(locale21, "", (java.lang.Object[]) strArray40);
        printWriter43.println();
        printWriter43.print('a');
        printWriter43.println((float) 1);
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter((java.io.Writer) printWriter43, true);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) true);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 100, (int) (short) 1);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(printWriter43);
    }

    @Test
    public void test12716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12716");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        java.util.Locale locale35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray40 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray42 = null;
        aSMifierMethodVisitor37.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray40, (int) (short) 1, objArray42);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray56 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor45, strArray54, 1.0f };
        java.io.PrintWriter printWriter57 = printWriter34.printf(locale35, "", (java.lang.Object[]) strArray54);
        printWriter57.print("hi!");
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor61 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter60);
        aSMifierClassVisitor61.visitOuterClass("hi!", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierClassVisitor61.visitAnnotation("hi!", true);
        org.mockito.asm.FieldVisitor fieldVisitor69 = aSMifierClassVisitor28.visitField((int) (short) 1, "", "", "hi!", (java.lang.Object) aSMifierClassVisitor61);
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierClassVisitor28.visitAnnotation("hi!", false);
        aSMifierClassVisitor28.visitSource("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(fieldVisitor69);
        org.junit.Assert.assertNotNull(annotationVisitor72);
    }

    @Test
    public void test12717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12717");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitEnd();
        java.lang.String[] strArray41 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierClassVisitor28.visit(0, (int) (short) 100, "hi!", "hi!", "", strArray41);
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        java.util.Locale locale49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray56 = null;
        aSMifierMethodVisitor51.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray54, (int) (short) 1, objArray56);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor59.visitTryCatchBlock(label60, label61, label62, "");
        aSMifierMethodVisitor59.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray68 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray70 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor59, strArray68, 1.0f };
        java.io.PrintWriter printWriter71 = printWriter48.printf(locale49, "", (java.lang.Object[]) strArray68);
        java.io.PrintWriter printWriter73 = new java.io.PrintWriter((java.io.Writer) printWriter71, true);
        printWriter71.print("");
        java.io.PrintWriter printWriter77 = printWriter71.append('#');
        printWriter71.print((long) (short) -1);
        org.mockito.asm.FieldVisitor fieldVisitor80 = aSMifierClassVisitor28.visitField((-1), "", "", "hi!", (java.lang.Object) (short) -1);
        org.mockito.asm.Attribute attribute81 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor28.visitAttribute(attribute81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(fieldVisitor80);
    }

    @Test
    public void test12718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12718");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor15);
        java.util.List list21 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list21);
    }

    @Test
    public void test12719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12719");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label22);
        aSMifierMethodVisitor0.visitInsn(100);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) -1);
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor35);
    }

    @Test
    public void test12720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12720");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor9 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "hi!", true);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor9);
        org.junit.Assert.assertNotNull(annotationVisitor13);
    }

    @Test
    public void test12721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12721");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        aSMifierMethodVisitor0.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 1, label21);
        aSMifierMethodVisitor0.visitVarInsn((int) '4', 1);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 10, "hi!", "", "");
        aSMifierMethodVisitor0.visitMethodInsn(0, "hi!", "", "hi!");
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label37);
    }

    @Test
    public void test12722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12722");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.print((int) ' ');
        java.lang.Object obj29 = null;
        printWriter24.print(obj29);
        printWriter24.println(false);
        printWriter24.print('#');
        printWriter24.println("");
        printWriter24.println("hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor39.visitJumpInsn((int) (short) 1, label51);
        aSMifierMethodVisitor39.visitTypeInsn((int) (byte) 100, "hi!");
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor39.visitLineNumber((int) (byte) 1, label57);
        printWriter24.println((java.lang.Object) aSMifierMethodVisitor39);
        printWriter24.println((float) (-1L));
        java.io.PrintWriter printWriter62 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter24.print(' ');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test12723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12723");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "", "");
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label22);
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "", "", "hi!");
    }

    @Test
    public void test12724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12724");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter5.close();
        printWriter5.println(true);
        printWriter5.println((double) '#');
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter5.println('a');
        printWriter5.println();
        printWriter5.println("hi!");
        printWriter5.print("");
        printWriter5.println((float) (byte) 0);
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test12725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12725");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitTypeInsn((int) '#', "");
        aSMifierMethodVisitor0.visitVarInsn(1, 0);
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 1, label30);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor32.visitJumpInsn(1, label42);
        aSMifierMethodVisitor32.visitInsn((int) (short) 10);
        aSMifierMethodVisitor32.visitIntInsn(0, (-1));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor32);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "hi!", "");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test12726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12726");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '#', label21);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLabel(label30);
        java.util.List list32 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 10, "hi!", false);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(annotationVisitor42);
    }

    @Test
    public void test12727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12727");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println((float) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor8.visitLabel(label12);
        aSMifierMethodVisitor8.visitFieldInsn((int) (byte) 10, "", "", "");
        aSMifierMethodVisitor8.visitTypeInsn((int) (byte) 1, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor8.visitAnnotation("", false);
        annotationVisitor24.visitEnd();
        printWriter1.println((java.lang.Object) annotationVisitor24);
        printWriter1.println((double) 100);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test12728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12728");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter6.println();
        printWriter6.print((float) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor11.visitTryCatchBlock(label12, label13, label14, "");
        aSMifierMethodVisitor11.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj20 = null;
        aSMifierMethodVisitor11.visitLdcInsn(obj20);
        aSMifierMethodVisitor11.visitInsn((int) ' ');
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor11.visitJumpInsn(100, label25);
        aSMifierMethodVisitor11.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label30 = null;
        int[] intArray31 = new int[] {};
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter37 = printWriter33.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor39.visitJumpInsn((int) (short) 1, label51);
        aSMifierMethodVisitor39.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label[] labelArray59 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label58, labelArray59);
        java.io.PrintWriter printWriter61 = printWriter37.printf("", (java.lang.Object[]) labelArray59);
        aSMifierMethodVisitor11.visitLookupSwitchInsn(label30, intArray31, labelArray59);
        java.io.PrintWriter printWriter63 = printWriter6.printf("", (java.lang.Object[]) labelArray59);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter6, true);
        java.io.PrintWriter printWriter67 = printWriter6.append(' ');
        printWriter67.println(0.0f);
        printWriter67.flush();
        java.io.PrintWriter printWriter72 = printWriter67.append('#');
        java.io.PrintWriter printWriter74 = new java.io.PrintWriter((java.io.Writer) printWriter72, false);
        java.io.PrintWriter printWriter76 = printWriter72.append((java.lang.CharSequence) "");
        printWriter76.print("");
        java.io.PrintWriter printWriter79 = new java.io.PrintWriter((java.io.Writer) printWriter76);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(labelArray59);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(printWriter76);
    }

    @Test
    public void test12729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12729");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        printWriter1.print((long) 0);
        boolean boolean7 = printWriter1.checkError();
        printWriter1.close();
        printWriter1.print((int) (short) -1);
        printWriter1.close();
        printWriter1.close();
        printWriter1.println(0);
        printWriter1.println((int) '4');
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test12730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12730");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor25.visitTryCatchBlock(label26, label27, label28, "");
        aSMifierMethodVisitor25.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor25.visitJumpInsn(1, label35);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor25.visitParameterAnnotation((int) (byte) 0, "hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor15.visitField((int) (short) 10, "", "hi!", "hi!", (java.lang.Object) "hi!");
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierClassVisitor15.visitAnnotation("", true);
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        org.mockito.asm.Attribute attribute53 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor15.visitAttribute(attribute53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor48);
    }

    @Test
    public void test12731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12731");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.println();
        java.io.PrintWriter printWriter29 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.flush();
        printWriter24.println("");
        printWriter24.write("");
        printWriter24.println("hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter29);
    }

    @Test
    public void test12732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12732");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        aSMifierMethodVisitor6.visitTryCatchBlock(label7, label8, label9, "");
        aSMifierMethodVisitor6.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj15 = null;
        aSMifierMethodVisitor6.visitLdcInsn(obj15);
        aSMifierMethodVisitor6.visitInsn((int) ' ');
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj31 = null;
        aSMifierMethodVisitor22.visitLdcInsn(obj31);
        org.mockito.asm.Label label33 = null;
        int[] intArray40 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label[] labelArray54 = new org.mockito.asm.Label[] { label53 };
        aSMifierMethodVisitor41.visitTableSwitchInsn(0, (int) (byte) 10, label52, labelArray54);
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label33, intArray40, labelArray54);
        aSMifierMethodVisitor6.visitTableSwitchInsn((int) '4', (int) '#', label21, labelArray54);
        java.io.PrintWriter printWriter58 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray54);
        printWriter1.println(0L);
        printWriter1.println((float) 1L);
        printWriter1.write("hi!");
        printWriter1.println((float) (byte) 1);
        printWriter1.print((double) (short) 100);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray54);
        org.junit.Assert.assertNotNull(printWriter58);
    }

    @Test
    public void test12733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12733");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter29 = printWriter27.append('a');
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.println((-1.0d));
        printWriter27.print((java.lang.Object) (-1.0d));
        java.io.PrintWriter printWriter36 = printWriter27.append('a');
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter("hi!");
        java.util.Locale locale39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = null;
        aSMifierMethodVisitor41.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray44, (int) (short) 1, objArray46);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray58 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray60 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor49, strArray58, 1.0f };
        java.io.PrintWriter printWriter61 = printWriter38.printf(locale39, "", (java.lang.Object[]) strArray58);
        char[] charArray68 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter61.println(charArray68);
        printWriter61.write(1);
        printWriter36.print((java.lang.Object) 1);
        char[] charArray73 = new char[] {};
        printWriter36.print(charArray73);
        printWriter24.println(charArray73);
        printWriter24.print('#');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[]");
    }

    @Test
    public void test12734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12734");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 10);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label78);
        java.util.List list80 = aSMifierMethodVisitor0.text;
        org.mockito.asm.Label label82 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 10, label82);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "");
        org.mockito.asm.Label label90 = null;
        org.mockito.asm.Label label91 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label90, label91, (int) ' ');
        aSMifierMethodVisitor0.visitTypeInsn(10, "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(list80);
    }

    @Test
    public void test12735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12735");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        char[] charArray56 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter49.println(charArray56);
        printWriter24.print(charArray56);
        printWriter24.print(true);
        java.io.PrintWriter printWriter62 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter64 = printWriter24.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor65 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter64);
        printWriter64.close();
        printWriter64.println((long) (short) 10);
        printWriter64.print(false);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(printWriter64);
    }

    @Test
    public void test12736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12736");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label7 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label7);
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", true);
        aSMifierMethodVisitor0.visitMethodInsn(0, "hi!", "", "");
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 10, "", "", "hi!");
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 10, "");
        org.junit.Assert.assertNotNull(annotationVisitor12);
    }

    @Test
    public void test12737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12737");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj40 = null;
        aSMifierMethodVisitor31.visitLdcInsn(obj40);
        aSMifierMethodVisitor31.visitInsn((int) ' ');
        aSMifierMethodVisitor31.visitIincInsn((int) (byte) 100, (int) (short) 1);
        aSMifierMethodVisitor31.visitTypeInsn((int) (byte) 0, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor31.visitAnnotationDefault();
        org.mockito.asm.FieldVisitor fieldVisitor51 = aSMifierClassVisitor15.visitField((int) (short) 10, "hi!", "", "", (java.lang.Object) aSMifierMethodVisitor31);
        aSMifierMethodVisitor31.visitTypeInsn(0, "hi!");
        aSMifierMethodVisitor31.visitTypeInsn((int) '4', "");
        aSMifierMethodVisitor31.visitFieldInsn((int) (short) 0, "", "", "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 100, (int) (byte) 1);
        aSMifierMethodVisitor31.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        aSMifierMethodVisitor31.visitMethodInsn((int) '4', "hi!", "", "hi!");
        aSMifierMethodVisitor31.visitEnd();
        aSMifierMethodVisitor31.visitMultiANewArrayInsn("hi!", (int) (short) -1);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor51);
    }

    @Test
    public void test12738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12738");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        boolean boolean36 = printWriter34.checkError();
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter39 = printWriter34.format("hi!", (java.lang.Object[]) strArray38);
        java.io.PrintWriter printWriter41 = printWriter34.append(' ');
        boolean boolean42 = printWriter41.checkError();
        printWriter41.println('a');
        printWriter41.write("");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test12739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12739");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor0.visitMaxs(100, (int) '4');
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label18, label19, (int) (byte) 1);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor27.visitTryCatchBlock(label28, label29, label30, "");
        aSMifierMethodVisitor27.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label[] labelArray40 = new org.mockito.asm.Label[] { label39 };
        aSMifierMethodVisitor27.visitTableSwitchInsn(0, (int) (byte) 10, label38, labelArray40);
        java.io.PrintWriter printWriter42 = printWriter23.printf("hi!", (java.lang.Object[]) labelArray40);
        java.io.PrintWriter printWriter44 = printWriter23.append((java.lang.CharSequence) "");
        printWriter44.close();
        printWriter44.println("hi!");
        printWriter44.print('#');
        aSMifierMethodVisitor0.print(printWriter44);
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "hi!", label54, label55, (int) (byte) 10);
        org.junit.Assert.assertNotNull(labelArray40);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(printWriter44);
    }

    @Test
    public void test12740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12740");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("hi!", "hi!");
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj41 = null;
        aSMifierMethodVisitor32.visitLdcInsn(obj41);
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor32.visitJumpInsn((int) (short) 1, label44);
        aSMifierMethodVisitor32.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor32.visitAnnotationDefault();
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter("hi!");
        printWriter56.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor60.visitTryCatchBlock(label61, label62, label63, "");
        aSMifierMethodVisitor60.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label[] labelArray73 = new org.mockito.asm.Label[] { label72 };
        aSMifierMethodVisitor60.visitTableSwitchInsn(0, (int) (byte) 10, label71, labelArray73);
        java.io.PrintWriter printWriter75 = printWriter56.printf("hi!", (java.lang.Object[]) labelArray73);
        java.lang.String[] strArray77 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor32.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray73, 1, (java.lang.Object[]) strArray77);
        aSMifierMethodVisitor32.visitMaxs((int) (byte) 0, (int) (byte) 100);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (byte) 1);
        org.mockito.asm.FieldVisitor fieldVisitor85 = aSMifierClassVisitor15.visitField((int) (byte) 0, "hi!", "hi!", "", (java.lang.Object) (byte) 1);
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "hi!");
        aSMifierClassVisitor15.visitSource("", "");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(labelArray73);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(fieldVisitor85);
    }

    @Test
    public void test12741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12741");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        java.util.List list6 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitFieldInsn((int) '#', "", "", "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "", "", "hi!");
        org.mockito.asm.Label label19 = null;
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((java.lang.Object) (short) -1);
        printWriter21.flush();
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor27.visitTryCatchBlock(label28, label29, label30, "");
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor27.visitLocalVariable("hi!", "hi!", "hi!", label36, label37, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor27.visitAnnotation("", true);
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj53 = null;
        aSMifierMethodVisitor44.visitLdcInsn(obj53);
        org.mockito.asm.Label label55 = null;
        int[] intArray62 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor63.visitTryCatchBlock(label64, label65, label66, "");
        aSMifierMethodVisitor63.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label[] labelArray76 = new org.mockito.asm.Label[] { label75 };
        aSMifierMethodVisitor63.visitTableSwitchInsn(0, (int) (byte) 10, label74, labelArray76);
        aSMifierMethodVisitor44.visitLookupSwitchInsn(label55, intArray62, labelArray76);
        org.mockito.asm.Label[] labelArray79 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label43, intArray62, labelArray79);
        java.io.PrintWriter printWriter81 = printWriter21.format(locale25, "hi!", (java.lang.Object[]) labelArray79);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (short) -1, (int) (byte) 10, label19, labelArray79);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) '4');
        org.mockito.asm.Label label87 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label87);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 10, "");
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitMaxs(10, (int) (short) 1);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray76);
        org.junit.Assert.assertNotNull(labelArray79);
        org.junit.Assert.assertNotNull(printWriter81);
    }

    @Test
    public void test12742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12742");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        java.io.PrintWriter printWriter36 = printWriter24.append((java.lang.CharSequence) "");
        printWriter36.print("");
        java.io.PrintWriter printWriter40 = printWriter36.append((java.lang.CharSequence) "");
        printWriter36.println((float) 100L);
        java.io.PrintWriter printWriter46 = printWriter36.append((java.lang.CharSequence) "hi!", (int) (short) 0, 0);
        printWriter36.println();
        printWriter36.print((float) 100);
        printWriter36.println((double) (-1));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(printWriter46);
    }

    @Test
    public void test12743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12743");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label18);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        java.util.List list25 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Attribute attribute26 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list25);
    }

    @Test
    public void test12744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12744");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        printWriter24.println(false);
        java.io.PrintWriter printWriter29 = printWriter24.append('4');
        printWriter24.print(false);
        printWriter24.print(0.0d);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(printWriter29);
    }

    @Test
    public void test12745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12745");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitTypeInsn((int) ' ', "");
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 1);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor30);
    }

    @Test
    public void test12746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12746");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLineNumber(1, label16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) ' ', label19);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor21.visitTryCatchBlock(label22, label23, label24, "");
        aSMifierMethodVisitor21.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj30 = null;
        aSMifierMethodVisitor21.visitLdcInsn(obj30);
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor21.visitJumpInsn((int) (short) 1, label33);
        aSMifierMethodVisitor21.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor21.visitLabel(label38);
        aSMifierMethodVisitor21.visitInsn(100);
        java.util.List list42 = aSMifierMethodVisitor21.getText();
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor21.visitLineNumber(1, label44);
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierMethodVisitor21.visitParameterAnnotation(10, "", true);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 10);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(annotationVisitor49);
    }

    @Test
    public void test12747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12747");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        boolean boolean6 = printWriter1.checkError();
        printWriter1.print((float) (byte) 10);
        printWriter1.print(0.0f);
        printWriter1.println((float) 'a');
        printWriter1.print((int) ' ');
        printWriter1.write((-1));
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter18.print((float) (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test12748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12748");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitSource("hi!", "");
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.write((-1));
        printWriter39.flush();
        java.util.Locale locale43 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray50 = null;
        aSMifierMethodVisitor45.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray48, (int) (short) 1, objArray50);
        java.io.PrintWriter printWriter52 = printWriter39.printf(locale43, "", (java.lang.Object[]) strArray48);
        org.mockito.asm.MethodVisitor methodVisitor53 = aSMifierClassVisitor15.visitMethod((int) (byte) 0, "", "", "hi!", strArray48);
        methodVisitor53.visitMultiANewArrayInsn("", 1);
        methodVisitor53.visitFieldInsn((int) (short) 0, "hi!", "hi!", "");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(methodVisitor53);
    }

    @Test
    public void test12749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12749");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label70, label71, (int) (short) 10);
        org.mockito.asm.Label label75 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label75);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label78);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) (short) 0);
        aSMifierMethodVisitor0.visitIincInsn(10, (int) (byte) 10);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
    }

    @Test
    public void test12750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12750");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = printWriter1.append((java.lang.CharSequence) "");
        printWriter22.close();
        java.io.PrintWriter printWriter25 = printWriter22.append(' ');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj35 = null;
        aSMifierMethodVisitor26.visitLdcInsn(obj35);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor26.visitJumpInsn((int) (short) 1, label38);
        aSMifierMethodVisitor26.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor26.visitParameterAnnotation((int) (byte) 1, "", true);
        aSMifierMethodVisitor26.visitInsn((int) (short) 1);
        printWriter22.print((java.lang.Object) aSMifierMethodVisitor26);
        printWriter22.print(false);
        printWriter22.close();
        printWriter22.close();
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(annotationVisitor46);
    }

    @Test
    public void test12751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12751");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label21, label22, label23, "");
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label29, label30, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) -1, "hi!", false);
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label41, label42, label43, "");
        java.util.List list46 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label48);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(list46);
    }

    @Test
    public void test12752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12752");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        aSMifierMethodVisitor0.visitMethodInsn(10, "", "hi!", "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label17, label18, (int) (short) -1);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label25, label26, (int) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "hi!", true);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 100, label38);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 100, (int) (short) -1);
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label43, label44, label45, "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor36);
    }

    @Test
    public void test12753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12753");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.print('a');
        printWriter24.println((float) 1);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter31.println((int) (byte) -1);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test12754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12754");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("hi!");
        printWriter26.println('a');
        printWriter26.println(false);
        printWriter26.close();
        printWriter26.println(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        aSMifierClassVisitor36.visitOuterClass("", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj54 = null;
        aSMifierMethodVisitor45.visitLdcInsn(obj54);
        aSMifierMethodVisitor45.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor45.visitLocalVariable("hi!", "hi!", "hi!", label62, label63, (int) (byte) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor66.visitTryCatchBlock(label67, label68, label69, "");
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor66.visitLocalVariable("hi!", "hi!", "hi!", label75, label76, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor81 = aSMifierMethodVisitor66.visitAnnotation("", true);
        aSMifierMethodVisitor45.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor66);
        aSMifierMethodVisitor66.visitInsn((int) (short) 0);
        aSMifierMethodVisitor66.visitIincInsn((int) (short) -1, (int) (byte) 100);
        aSMifierMethodVisitor66.visitInsn((int) '4');
        org.mockito.asm.Label label90 = null;
        org.mockito.asm.Label label91 = null;
        org.mockito.asm.Label label92 = null;
        aSMifierMethodVisitor66.visitTryCatchBlock(label90, label91, label92, "");
        org.mockito.asm.FieldVisitor fieldVisitor95 = aSMifierClassVisitor36.visitField(0, "hi!", "hi!", "", (java.lang.Object) label92);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor81);
        org.junit.Assert.assertNotNull(fieldVisitor95);
    }

    @Test
    public void test12755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12755");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        printWriter1.println(true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        printWriter8.print(false);
        printWriter8.close();
        printWriter8.print((int) '#');
        printWriter8.close();
        printWriter8.print((float) 10L);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        printWriter18.print(false);
        printWriter18.println(false);
        java.io.PrintWriter printWriter24 = printWriter18.append('#');
        printWriter24.print((long) 0);
        printWriter24.println((int) (byte) -1);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        printWriter30.print(false);
        java.io.PrintWriter printWriter34 = printWriter30.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter((java.io.Writer) printWriter30);
        printWriter35.println();
        printWriter35.write("hi!");
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter44 = printWriter40.append((java.lang.CharSequence) "");
        printWriter40.print((double) 1);
        java.io.PrintWriter printWriter48 = printWriter40.append((java.lang.CharSequence) "hi!");
        printWriter40.write((int) (short) 1);
        printWriter40.write(0);
        java.io.PrintWriter printWriter54 = printWriter40.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter("hi!");
        java.util.Locale locale57 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray62 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray64 = null;
        aSMifierMethodVisitor59.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray62, (int) (short) 1, objArray64);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor67.visitTryCatchBlock(label68, label69, label70, "");
        aSMifierMethodVisitor67.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray76 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray78 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor67, strArray76, 1.0f };
        java.io.PrintWriter printWriter79 = printWriter56.printf(locale57, "", (java.lang.Object[]) strArray76);
        char[] charArray86 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter79.println(charArray86);
        char[] charArray88 = new char[] {};
        printWriter79.print(charArray88);
        printWriter40.print(charArray88);
        printWriter35.println(charArray88);
        printWriter24.write(charArray88, 0, (int) (byte) 0);
        printWriter8.println(charArray88);
        // The following exception was thrown during execution in test generation
        try {
            printWriter1.write(charArray88, (-1), (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[]");
    }

    @Test
    public void test12756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12756");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj45 = null;
        aSMifierMethodVisitor36.visitLdcInsn(obj45);
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor36.visitJumpInsn((int) (short) 1, label48);
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor36.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor51.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor36.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor51);
        java.util.List list57 = aSMifierMethodVisitor51.getText();
        org.mockito.asm.FieldVisitor fieldVisitor58 = aSMifierClassVisitor31.visitField((int) (byte) -1, "", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor51);
        aSMifierMethodVisitor51.visitIntInsn(100, (int) (byte) 0);
        aSMifierMethodVisitor51.visitMethodInsn(100, "", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = aSMifierMethodVisitor51.visitParameterAnnotation((int) (byte) -1, "hi!", true);
        java.util.List list71 = aSMifierMethodVisitor51.text;
        aSMifierMethodVisitor51.visitMultiANewArrayInsn("hi!", 0);
        aSMifierMethodVisitor51.visitFieldInsn(1, "", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = aSMifierMethodVisitor51.visitAnnotationDefault();
        annotationVisitor80.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(annotationVisitor80);
    }

    @Test
    public void test12757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12757");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter1.print((long) 1);
        printWriter1.println((float) (short) -1);
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter("hi!");
        printWriter11.write((-1));
        printWriter11.flush();
        printWriter11.print("");
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        printWriter18.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label[] labelArray35 = new org.mockito.asm.Label[] { label34 };
        aSMifierMethodVisitor22.visitTableSwitchInsn(0, (int) (byte) 10, label33, labelArray35);
        java.io.PrintWriter printWriter37 = printWriter18.printf("hi!", (java.lang.Object[]) labelArray35);
        java.io.PrintWriter printWriter39 = printWriter18.append((java.lang.CharSequence) "");
        printWriter39.close();
        java.io.PrintWriter printWriter42 = printWriter39.append(' ');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor43.visitTryCatchBlock(label44, label45, label46, "");
        aSMifierMethodVisitor43.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj52 = null;
        aSMifierMethodVisitor43.visitLdcInsn(obj52);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor43.visitAnnotationDefault();
        printWriter42.println((java.lang.Object) aSMifierMethodVisitor43);
        printWriter42.println();
        printWriter42.println(' ');
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter("hi!");
        java.util.Locale locale61 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray66 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray68 = null;
        aSMifierMethodVisitor63.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray66, (int) (short) 1, objArray68);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor71 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label label74 = null;
        aSMifierMethodVisitor71.visitTryCatchBlock(label72, label73, label74, "");
        aSMifierMethodVisitor71.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray80 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray82 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor71, strArray80, 1.0f };
        java.io.PrintWriter printWriter83 = printWriter60.printf(locale61, "", (java.lang.Object[]) strArray80);
        char[] charArray90 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter83.println(charArray90);
        char[] charArray92 = new char[] {};
        printWriter83.print(charArray92);
        printWriter42.write(charArray92);
        printWriter11.println(charArray92);
        printWriter1.print(charArray92);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(labelArray35);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[]");
    }

    @Test
    public void test12758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12758");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitSource("hi!", "");
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.write((-1));
        printWriter39.flush();
        java.util.Locale locale43 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray50 = null;
        aSMifierMethodVisitor45.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray48, (int) (short) 1, objArray50);
        java.io.PrintWriter printWriter52 = printWriter39.printf(locale43, "", (java.lang.Object[]) strArray48);
        org.mockito.asm.MethodVisitor methodVisitor53 = aSMifierClassVisitor15.visitMethod((int) (byte) 0, "", "", "hi!", strArray48);
        aSMifierClassVisitor15.visitSource("hi!", "");
        aSMifierClassVisitor15.visitInnerClass("hi!", "hi!", "hi!", (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(methodVisitor53);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test12759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12759");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println((-1.0d));
        printWriter1.print((long) ' ');
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter6.print('4');
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        java.util.Locale locale11 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray16 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray18 = null;
        aSMifierMethodVisitor13.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray16, (int) (short) 1, objArray18);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor21.visitTryCatchBlock(label22, label23, label24, "");
        aSMifierMethodVisitor21.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor21, strArray30, 1.0f };
        java.io.PrintWriter printWriter33 = printWriter10.printf(locale11, "", (java.lang.Object[]) strArray30);
        java.io.PrintWriter printWriter35 = printWriter33.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter37 = printWriter33.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        java.util.Locale locale40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray47 = null;
        aSMifierMethodVisitor42.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray45, (int) (short) 1, objArray47);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor50.visitTryCatchBlock(label51, label52, label53, "");
        aSMifierMethodVisitor50.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray59 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray61 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor50, strArray59, 1.0f };
        java.io.PrintWriter printWriter62 = printWriter39.printf(locale40, "", (java.lang.Object[]) strArray59);
        char[] charArray69 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter62.println(charArray69);
        printWriter37.print(charArray69);
        printWriter6.print(charArray69);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor73 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        java.lang.Class<?> wildcardClass74 = aSMifierClassVisitor73.getClass();
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test12760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12760");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label23, label24, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 10, "hi!", false);
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 100, (int) 'a');
        aSMifierMethodVisitor0.visitIntInsn((int) '#', (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        annotationVisitor40.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = annotationVisitor40.visitArray("hi!");
        annotationVisitor40.visitEnum("hi!", "", "");
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor43);
    }

    @Test
    public void test12761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12761");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 1, "", true);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) 'a', label22);
        aSMifierMethodVisitor0.visitVarInsn((int) ' ', (int) (byte) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 1, "", false);
        annotationVisitor30.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor30);
    }

    @Test
    public void test12762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12762");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 100, (int) (byte) 10);
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label24, label25, (int) ' ');
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor0.visitLabel(label31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.write((-1));
        printWriter34.flush();
        java.util.Locale locale38 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray43 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray45 = null;
        aSMifierMethodVisitor40.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray43, (int) (short) 1, objArray45);
        java.io.PrintWriter printWriter47 = printWriter34.printf(locale38, "", (java.lang.Object[]) strArray43);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor48 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter34);
        aSMifierClassVisitor48.visitEnd();
        aSMifierClassVisitor48.visitOuterClass("", "hi!", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label68 = null;
        aSMifierMethodVisitor58.visitJumpInsn(1, label68);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor58.visitParameterAnnotation((int) (byte) 0, "hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor74 = aSMifierClassVisitor48.visitField((int) (short) 10, "", "hi!", "hi!", (java.lang.Object) "hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 1, (int) '#');
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(fieldVisitor74);
    }

    @Test
    public void test12763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12763");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list14 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list16 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = annotationVisitor23.visitArray("hi!");
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(annotationVisitor25);
    }

    @Test
    public void test12764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12764");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append(' ');
        printWriter28.print(1);
        printWriter28.println(false);
        printWriter28.print((double) (-1L));
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor35 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor35.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(annotationVisitor38);
    }

    @Test
    public void test12765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12765");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label27 = null;
        int[] intArray34 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        aSMifierMethodVisitor16.visitLookupSwitchInsn(label27, intArray34, labelArray48);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) '4', (int) '#', label15, labelArray48);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label55, label56, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn((int) '4', (int) (short) 100);
        aSMifierMethodVisitor0.visitMaxs(1, (int) '#');
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label66);
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label71, label72, (int) 'a');
        org.mockito.asm.Label label76 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitJumpInsn((int) (short) -1, label76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray48);
    }

    @Test
    public void test12766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12766");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println((int) (short) -1);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor4.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor4.visitSource("", "");
        aSMifierClassVisitor4.visitEnd();
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        printWriter18.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter22 = printWriter18.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        aSMifierMethodVisitor24.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj33 = null;
        aSMifierMethodVisitor24.visitLdcInsn(obj33);
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor24.visitJumpInsn((int) (short) 1, label36);
        aSMifierMethodVisitor24.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label[] labelArray44 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor24.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label43, labelArray44);
        java.io.PrintWriter printWriter46 = printWriter22.printf("", (java.lang.Object[]) labelArray44);
        printWriter46.println('a');
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("hi!");
        printWriter50.write((-1));
        printWriter50.flush();
        java.lang.Object[] objArray55 = null;
        java.io.PrintWriter printWriter56 = printWriter50.format("hi!", objArray55);
        printWriter50.print(true);
        printWriter46.print((java.lang.Object) printWriter50);
        printWriter46.print((float) (short) 100);
        org.mockito.asm.FieldVisitor fieldVisitor62 = aSMifierClassVisitor4.visitField((int) (byte) 1, "hi!", "", "", (java.lang.Object) printWriter46);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor63 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter46);
        aSMifierClassVisitor63.visitInnerClass("", "hi!", "hi!", (int) (short) 0);
        aSMifierClassVisitor63.visitSource("", "hi!");
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(labelArray44);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(fieldVisitor62);
    }

    @Test
    public void test12767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12767");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor16.visitEnum("", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = annotationVisitor16.visitAnnotation("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = annotationVisitor16.visitArray("hi!");
        annotationVisitor16.visitEnum("", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = annotationVisitor16.visitArray("hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = annotationVisitor31.visitAnnotation("hi!", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor34);
    }

    @Test
    public void test12768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12768");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.print((double) (byte) 10);
        java.util.Locale locale6 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label14 = null;
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label[] labelArray33 = new org.mockito.asm.Label[] { label32 };
        aSMifierMethodVisitor20.visitTableSwitchInsn(0, (int) (byte) 10, label31, labelArray33);
        java.io.PrintWriter printWriter35 = printWriter16.printf("hi!", (java.lang.Object[]) labelArray33);
        aSMifierMethodVisitor8.visitTableSwitchInsn(1, (int) (short) 10, label14, labelArray33);
        java.io.PrintWriter printWriter37 = printWriter1.format(locale6, "hi!", (java.lang.Object[]) labelArray33);
        printWriter37.write((int) (byte) 1);
        java.io.PrintWriter printWriter43 = printWriter37.append((java.lang.CharSequence) "hi!", 0, (int) (byte) 1);
        printWriter43.println(1.0f);
        printWriter43.print((float) 10);
        boolean boolean48 = printWriter43.checkError();
        printWriter43.write("");
        boolean boolean51 = printWriter43.checkError();
        org.junit.Assert.assertNotNull(labelArray33);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test12769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12769");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        java.util.List list6 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor7.visitLocalVariable("hi!", "hi!", "hi!", label16, label17, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor7.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) annotationVisitor20);
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitLineNumber(0, label23);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitTypeInsn((int) '4', "");
        java.lang.Class<?> wildcardClass29 = aSMifierMethodVisitor0.getClass();
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test12770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12770");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "", "hi!", (int) 'a');
        java.util.List list34 = aSMifierClassVisitor28.getText();
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        java.util.Locale locale41 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = null;
        aSMifierMethodVisitor43.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray46, (int) (short) 1, objArray48);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor51.visitTryCatchBlock(label52, label53, label54, "");
        aSMifierMethodVisitor51.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray60 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray62 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor51, strArray60, 1.0f };
        java.io.PrintWriter printWriter63 = printWriter40.printf(locale41, "", (java.lang.Object[]) strArray60);
        printWriter63.println();
        printWriter63.println((long) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter("hi!");
        printWriter69.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter73 = printWriter69.append((java.lang.CharSequence) "");
        printWriter69.print((int) (byte) -1);
        printWriter69.write("", (int) (byte) 1, (int) (short) 0);
        printWriter69.print((double) (byte) -1);
        aSMifierMethodVisitor67.print(printWriter69);
        printWriter69.write((int) (byte) 100);
        printWriter63.println((java.lang.Object) (byte) 100);
        org.mockito.asm.FieldVisitor fieldVisitor86 = aSMifierClassVisitor28.visitField((int) '#', "", "", "", (java.lang.Object) printWriter63);
        aSMifierClassVisitor28.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor90 = aSMifierClassVisitor28.visitAnnotation("hi!", false);
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor98 = aSMifierClassVisitor28.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(fieldVisitor86);
        org.junit.Assert.assertNotNull(annotationVisitor90);
        org.junit.Assert.assertNotNull(annotationVisitor98);
    }

    @Test
    public void test12771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12771");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor24.visitLocalVariable("hi!", "hi!", "hi!", label33, label34, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor24.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor24.visitAnnotationDefault();
        annotationVisitor40.visitEnum("", "hi!", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor45 = aSMifierClassVisitor15.visitField((int) '#', "", "", "", (java.lang.Object) "hi!");
        aSMifierClassVisitor15.visitSource("", "");
        aSMifierClassVisitor15.visitInnerClass("hi!", "", "", (int) ' ');
        java.lang.String[] strArray60 = new java.lang.String[] { "", "hi!" };
        org.mockito.asm.MethodVisitor methodVisitor61 = aSMifierClassVisitor15.visitMethod((int) (byte) 0, "hi!", "hi!", "", strArray60);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor66.visitTryCatchBlock(label67, label68, label69, "");
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor66.visitLocalVariable("hi!", "hi!", "hi!", label75, label76, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierMethodVisitor66.visitAnnotationDefault();
        aSMifierMethodVisitor66.visitFieldInsn(100, "hi!", "", "hi!");
        aSMifierMethodVisitor66.visitCode();
        aSMifierMethodVisitor66.visitInsn(0);
        aSMifierMethodVisitor66.visitFieldInsn(100, "", "", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor93 = aSMifierClassVisitor15.visitField((int) '#', "hi!", "", "hi!", (java.lang.Object) "");
        org.mockito.asm.AnnotationVisitor annotationVisitor96 = fieldVisitor93.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor99 = annotationVisitor96.visitAnnotation("hi!", "");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor79);
        org.junit.Assert.assertNotNull(fieldVisitor93);
        org.junit.Assert.assertNotNull(annotationVisitor96);
        org.junit.Assert.assertNotNull(annotationVisitor99);
    }

    @Test
    public void test12772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12772");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter3, true);
        printWriter3.println(10);
        printWriter3.close();
        java.io.PrintWriter printWriter12 = printWriter3.append((java.lang.CharSequence) "", 0, 0);
        printWriter12.print('a');
        printWriter12.println("hi!");
        printWriter12.println((float) (byte) 10);
        printWriter12.println();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter12);
    }

    @Test
    public void test12773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12773");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor15);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 100, (int) '#');
        java.util.List list24 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label32, label33, label34, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor39);
    }

    @Test
    public void test12774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12774");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter6.println();
        printWriter6.print((float) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor11.visitTryCatchBlock(label12, label13, label14, "");
        aSMifierMethodVisitor11.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj20 = null;
        aSMifierMethodVisitor11.visitLdcInsn(obj20);
        aSMifierMethodVisitor11.visitInsn((int) ' ');
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor11.visitJumpInsn(100, label25);
        aSMifierMethodVisitor11.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label30 = null;
        int[] intArray31 = new int[] {};
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter37 = printWriter33.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor39.visitJumpInsn((int) (short) 1, label51);
        aSMifierMethodVisitor39.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label[] labelArray59 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label58, labelArray59);
        java.io.PrintWriter printWriter61 = printWriter37.printf("", (java.lang.Object[]) labelArray59);
        aSMifierMethodVisitor11.visitLookupSwitchInsn(label30, intArray31, labelArray59);
        java.io.PrintWriter printWriter63 = printWriter6.printf("", (java.lang.Object[]) labelArray59);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter6, true);
        java.io.PrintWriter printWriter67 = printWriter6.append(' ');
        printWriter67.println(0.0f);
        printWriter67.println();
        printWriter67.print((long) 1);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(labelArray59);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(printWriter67);
    }

    @Test
    public void test12775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12775");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter8 = printWriter6.append((java.lang.CharSequence) "");
        printWriter8.print("");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor11.visitTryCatchBlock(label12, label13, label14, "");
        aSMifierMethodVisitor11.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj20 = null;
        aSMifierMethodVisitor11.visitLdcInsn(obj20);
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor11.visitJumpInsn((int) (short) 1, label23);
        aSMifierMethodVisitor11.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor11.visitAnnotationDefault();
        aSMifierMethodVisitor11.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor11.visitLabel(label35);
        java.util.List list37 = aSMifierMethodVisitor11.getText();
        java.util.List list38 = aSMifierMethodVisitor11.getText();
        java.lang.Object obj39 = null;
        aSMifierMethodVisitor11.visitLdcInsn(obj39);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor11.visitAnnotationDefault();
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor11.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierMethodVisitor11.visitAnnotation("hi!", false);
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor11.visitJumpInsn((int) (byte) 10, label50);
        aSMifierMethodVisitor11.visitIincInsn((-1), (int) (byte) 100);
        printWriter8.print((java.lang.Object) aSMifierMethodVisitor11);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter8);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(annotationVisitor48);
    }

    @Test
    public void test12776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12776");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor7.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor7.visitAnnotationDefault();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        java.io.PrintWriter printWriter50 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray48);
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor7.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray48, 1, (java.lang.Object[]) strArray52);
        java.io.PrintWriter printWriter54 = printWriter1.format("hi!", (java.lang.Object[]) strArray52);
        java.util.Locale locale55 = null;
        java.lang.String[] strArray57 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter58 = printWriter1.format(locale55, "hi!", (java.lang.Object[]) strArray57);
        boolean boolean59 = printWriter1.checkError();
        printWriter1.flush();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test12777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12777");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label19, label20, (int) '4');
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 10);
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLineNumber(0, label28);
    }

    @Test
    public void test12778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12778");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor15);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 10, label22);
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "");
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "");
        aSMifierMethodVisitor0.visitIincInsn((int) ' ', (int) (short) 100);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, (int) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 1, "", false);
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "hi!", label43, label44, (int) (byte) 0);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, (int) (byte) 10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor39);
    }

    @Test
    public void test12779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12779");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitSource("hi!", "");
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.write((-1));
        printWriter39.flush();
        java.util.Locale locale43 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray50 = null;
        aSMifierMethodVisitor45.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray48, (int) (short) 1, objArray50);
        java.io.PrintWriter printWriter52 = printWriter39.printf(locale43, "", (java.lang.Object[]) strArray48);
        org.mockito.asm.MethodVisitor methodVisitor53 = aSMifierClassVisitor15.visitMethod((int) (byte) 0, "", "", "hi!", strArray48);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        aSMifierClassVisitor15.visitInnerClass("hi!", "hi!", "hi!", (int) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor66.visitTryCatchBlock(label67, label68, label69, "");
        aSMifierMethodVisitor66.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj75 = null;
        aSMifierMethodVisitor66.visitLdcInsn(obj75);
        java.io.PrintWriter printWriter78 = new java.io.PrintWriter("hi!");
        printWriter78.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor66.print(printWriter78);
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = aSMifierMethodVisitor66.visitAnnotation("", false);
        aSMifierMethodVisitor66.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor86 = aSMifierClassVisitor15.visitField(0, "hi!", "hi!", "", (java.lang.Object) aSMifierMethodVisitor66);
        org.mockito.asm.AnnotationVisitor annotationVisitor90 = aSMifierMethodVisitor66.visitParameterAnnotation((-1), "hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = annotationVisitor90.visitArray("");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(methodVisitor53);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(annotationVisitor84);
        org.junit.Assert.assertNotNull(fieldVisitor86);
        org.junit.Assert.assertNotNull(annotationVisitor90);
        org.junit.Assert.assertNotNull(annotationVisitor92);
    }

    @Test
    public void test12780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12780");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        aSMifierMethodVisitor0.visitMethodInsn(10, "", "hi!", "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label17, label18, (int) (short) -1);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitFieldInsn(10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLabel(label28);
    }

    @Test
    public void test12781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12781");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        java.util.List list6 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitFieldInsn((int) '#', "", "", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 1, (int) (short) 100);
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor0.visitLabel(label15);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber(0, label18);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor25);
    }

    @Test
    public void test12782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12782");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter("hi!");
        printWriter5.println((-1.0d));
        printWriter1.print((java.lang.Object) (-1.0d));
        java.io.PrintWriter printWriter10 = printWriter1.append('a');
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        java.util.Locale locale13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray20 = null;
        aSMifierMethodVisitor15.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray18, (int) (short) 1, objArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor23, strArray32, 1.0f };
        java.io.PrintWriter printWriter35 = printWriter12.printf(locale13, "", (java.lang.Object[]) strArray32);
        char[] charArray42 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter35.println(charArray42);
        printWriter35.write(1);
        printWriter10.print((java.lang.Object) 1);
        printWriter10.print((double) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray53 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray55 = null;
        aSMifierMethodVisitor50.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray53, (int) (short) 1, objArray55);
        java.io.PrintWriter printWriter57 = printWriter10.format("", objArray55);
        printWriter10.println((float) 1);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor60 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter10);
        org.mockito.asm.Attribute attribute61 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor60.visitAttribute(attribute61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(printWriter57);
    }

    @Test
    public void test12783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12783");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list13 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test12784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12784");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, (int) (short) 1);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label20, label21, 100);
        aSMifierMethodVisitor0.visitInsn((int) (short) 10);
        org.mockito.asm.Label label27 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitJumpInsn((int) (short) -1, label27);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12785");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.io.PrintWriter printWriter33 = printWriter26.append('4');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter33);
        aSMifierClassVisitor34.visitInnerClass("", "hi!", "", 10);
        java.lang.String[] strArray45 = null;
        aSMifierClassVisitor34.visit((int) (byte) 1, (int) '4', "hi!", "", "hi!", strArray45);
        aSMifierClassVisitor34.visitSource("hi!", "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter33);
    }

    @Test
    public void test12786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12786");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitInsn((int) (byte) 100);
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor0.visitLabel(label13);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 10, "");
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, (int) (short) 0);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 100, label22);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        printWriter28.write((-1));
        printWriter28.flush();
        java.util.Locale locale32 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray37 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray39 = null;
        aSMifierMethodVisitor34.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray37, (int) (short) 1, objArray39);
        java.io.PrintWriter printWriter41 = printWriter28.printf(locale32, "", (java.lang.Object[]) strArray37);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor42 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        aSMifierClassVisitor42.visitEnd();
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter("hi!");
        printWriter49.write((-1));
        printWriter49.flush();
        java.util.Locale locale53 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray58 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray60 = null;
        aSMifierMethodVisitor55.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray58, (int) (short) 1, objArray60);
        java.io.PrintWriter printWriter62 = printWriter49.printf(locale53, "", (java.lang.Object[]) strArray58);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor63 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter49);
        aSMifierClassVisitor63.visitEnd();
        aSMifierClassVisitor63.visitSource("", "hi!");
        java.lang.String[] strArray73 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor63.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray73);
        org.mockito.asm.MethodVisitor methodVisitor75 = aSMifierClassVisitor42.visitMethod((int) (short) 100, "hi!", "hi!", "", strArray73);
        aSMifierClassVisitor42.visitInnerClass("", "", "", (int) (short) 100);
        aSMifierClassVisitor42.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = aSMifierClassVisitor42.visitAnnotation("", true);
        aSMifierClassVisitor42.visitSource("", "hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierClassVisitor42);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 100);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(methodVisitor75);
        org.junit.Assert.assertNotNull(annotationVisitor84);
    }

    @Test
    public void test12787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12787");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        printWriter1.print(0L);
        printWriter1.close();
        printWriter1.println();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor11.visitTryCatchBlock(label12, label13, label14, "");
        aSMifierMethodVisitor11.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj20 = null;
        aSMifierMethodVisitor11.visitLdcInsn(obj20);
        aSMifierMethodVisitor11.visitInsn((int) ' ');
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor11.visitJumpInsn(100, label25);
        aSMifierMethodVisitor11.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor11.visitCode();
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor11.visitJumpInsn((int) (short) 10, label32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = null;
        aSMifierMethodVisitor36.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray39, (int) (short) 1, objArray41);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter("hi!");
        printWriter45.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray49 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter50 = printWriter45.format("", (java.lang.Object[]) strArray49);
        aSMifierMethodVisitor11.visitFrame((int) '#', (int) '4', (java.lang.Object[]) strArray39, 0, (java.lang.Object[]) strArray49);
        java.io.PrintWriter printWriter52 = printWriter1.format("", (java.lang.Object[]) strArray49);
        printWriter1.flush();
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(printWriter52);
    }

    @Test
    public void test12788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12788");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (-1));
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label31, label32, label33, "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test12789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12789");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor15);
        java.util.List list21 = aSMifierMethodVisitor15.getText();
        aSMifierMethodVisitor15.visitInsn((int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '4', "hi!", false);
        org.mockito.asm.Attribute attribute28 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor15.visitAttribute(attribute28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(annotationVisitor27);
    }

    @Test
    public void test12790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12790");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        aSMifierMethodVisitor39.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor39.visitLocalVariable("hi!", "hi!", "hi!", label56, label57, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor39.visitParameterAnnotation(0, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor64 = aSMifierClassVisitor28.visitField((int) ' ', "hi!", "hi!", "", (java.lang.Object) aSMifierMethodVisitor39);
        java.lang.String[] strArray70 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor28.visit((int) (byte) 1, 100, "hi!", "hi!", "hi!", strArray70);
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitSource("hi!", "hi!");
        org.mockito.asm.Attribute attribute78 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor28.visitAttribute(attribute78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(annotationVisitor74);
    }

    @Test
    public void test12791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12791");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.print((int) ' ');
        java.lang.Object obj29 = null;
        printWriter24.print(obj29);
        printWriter24.println(false);
        printWriter24.print('#');
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter36.print(false);
        printWriter36.println("hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter36);
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierClassVisitor41.visitAnnotation("", true);
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter52 = printWriter50.append('a');
        printWriter50.print("hi!");
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter((java.io.Writer) printWriter50, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor57 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter50);
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter("hi!");
        printWriter63.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray67 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter68 = printWriter63.format("", (java.lang.Object[]) strArray67);
        org.mockito.asm.MethodVisitor methodVisitor69 = aSMifierClassVisitor57.visitMethod((int) (byte) 1, "", "", "hi!", strArray67);
        org.mockito.asm.FieldVisitor fieldVisitor70 = aSMifierClassVisitor41.visitField(0, "hi!", "", "", (java.lang.Object) "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertNotNull(methodVisitor69);
        org.junit.Assert.assertNotNull(fieldVisitor70);
    }

    @Test
    public void test12792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12792");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter5.close();
        printWriter5.println(true);
        printWriter5.println((double) '#');
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter5.println('a');
        printWriter5.println();
        printWriter5.flush();
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test12793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12793");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitIincInsn((int) '#', (int) (byte) -1);
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label4, label5, label6, "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 1, (int) (byte) 0);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label15, label16, (int) (short) 1);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 0);
    }

    @Test
    public void test12794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12794");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        printWriter27.print((java.lang.Object) (short) -1);
        printWriter27.flush();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter27);
        printWriter31.write("");
        org.mockito.asm.FieldVisitor fieldVisitor34 = aSMifierClassVisitor15.visitField(0, "", "", "hi!", (java.lang.Object) printWriter31);
        fieldVisitor34.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = fieldVisitor34.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = annotationVisitor38.visitArray("hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = annotationVisitor38.visitAnnotation("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor43);
    }

    @Test
    public void test12795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12795");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] { label12 };
        aSMifierMethodVisitor0.visitTableSwitchInsn(0, (int) (byte) 10, label11, labelArray13);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 10, "hi!");
        java.util.List list18 = aSMifierMethodVisitor0.text;
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '#', label20);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.write((-1));
        printWriter23.flush();
        java.lang.Object[] objArray28 = null;
        java.io.PrintWriter printWriter29 = printWriter23.format("hi!", objArray28);
        printWriter23.print(true);
        printWriter23.close();
        aSMifierMethodVisitor0.print(printWriter23);
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(printWriter29);
    }

    @Test
    public void test12796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12796");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        java.io.PrintWriter printWriter7 = printWriter1.append('#');
        printWriter7.print((long) 0);
        printWriter7.println((int) (byte) -1);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        printWriter13.print(false);
        java.io.PrintWriter printWriter17 = printWriter13.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.Writer) printWriter13);
        printWriter18.println();
        printWriter18.write("hi!");
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter27 = printWriter23.append((java.lang.CharSequence) "");
        printWriter23.print((double) 1);
        java.io.PrintWriter printWriter31 = printWriter23.append((java.lang.CharSequence) "hi!");
        printWriter23.write((int) (short) 1);
        printWriter23.write(0);
        java.io.PrintWriter printWriter37 = printWriter23.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        java.util.Locale locale40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray47 = null;
        aSMifierMethodVisitor42.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray45, (int) (short) 1, objArray47);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor50.visitTryCatchBlock(label51, label52, label53, "");
        aSMifierMethodVisitor50.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray59 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray61 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor50, strArray59, 1.0f };
        java.io.PrintWriter printWriter62 = printWriter39.printf(locale40, "", (java.lang.Object[]) strArray59);
        char[] charArray69 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter62.println(charArray69);
        char[] charArray71 = new char[] {};
        printWriter62.print(charArray71);
        printWriter23.print(charArray71);
        printWriter18.println(charArray71);
        printWriter7.write(charArray71, 0, (int) (byte) 0);
        printWriter7.println((long) (byte) 10);
        org.junit.Assert.assertNotNull(printWriter7);
        org.junit.Assert.assertNotNull(printWriter17);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[]");
    }

    @Test
    public void test12797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12797");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list14 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list16 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label23, label24, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((int) (byte) -1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test12798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12798");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        java.util.Locale locale35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray40 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray42 = null;
        aSMifierMethodVisitor37.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray40, (int) (short) 1, objArray42);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray56 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor45, strArray54, 1.0f };
        java.io.PrintWriter printWriter57 = printWriter34.printf(locale35, "", (java.lang.Object[]) strArray54);
        printWriter57.print("hi!");
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor61 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter60);
        aSMifierClassVisitor61.visitOuterClass("hi!", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierClassVisitor61.visitAnnotation("hi!", true);
        org.mockito.asm.FieldVisitor fieldVisitor69 = aSMifierClassVisitor28.visitField((int) (short) 1, "", "", "hi!", (java.lang.Object) aSMifierClassVisitor61);
        aSMifierClassVisitor61.visitEnd();
        aSMifierClassVisitor61.visitInnerClass("", "", "hi!", (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierClassVisitor61.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(fieldVisitor69);
        org.junit.Assert.assertNotNull(annotationVisitor78);
    }

    @Test
    public void test12799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12799");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitIincInsn(0, 1);
        aSMifierMethodVisitor0.visitFieldInsn((int) '#', "", "hi!", "");
        org.mockito.asm.Label label83 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 100, label83);
        org.mockito.asm.Label label86 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) -1, label86);
        org.mockito.asm.Label label88 = null;
        org.mockito.asm.Label label89 = null;
        org.mockito.asm.Label label90 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label88, label89, label90, "");
        java.util.List list93 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(list93);
    }

    @Test
    public void test12800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12800");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray24 = null;
        org.mockito.asm.MethodVisitor methodVisitor25 = aSMifierClassVisitor15.visitMethod(0, "", "hi!", "", strArray24);
        aSMifierClassVisitor15.visitEnd();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit(0, 10, "hi!", "", "hi!", strArray32);
        aSMifierClassVisitor15.visitEnd();
        java.lang.String[] strArray39 = null;
        org.mockito.asm.MethodVisitor methodVisitor40 = aSMifierClassVisitor15.visitMethod(100, "", "", "", strArray39);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(methodVisitor25);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodVisitor40);
    }

    @Test
    public void test12801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12801");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter16 = printWriter12.append((java.lang.CharSequence) "");
        printWriter8.println((java.lang.Object) printWriter16);
        printWriter8.println(' ');
        printWriter8.print((long) (short) 10);
        boolean boolean22 = printWriter8.checkError();
        printWriter8.println();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test12802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12802");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj45 = null;
        aSMifierMethodVisitor36.visitLdcInsn(obj45);
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor36.visitJumpInsn((int) (short) 1, label48);
        aSMifierMethodVisitor36.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor36.visitParameterAnnotation((int) (byte) 1, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor57 = aSMifierClassVisitor31.visitField((int) (byte) 0, "", "", "", (java.lang.Object) aSMifierMethodVisitor36);
        aSMifierClassVisitor31.visitSource("", "hi!");
        java.lang.Object obj65 = null;
        org.mockito.asm.FieldVisitor fieldVisitor66 = aSMifierClassVisitor31.visitField((int) (short) 1, "hi!", "hi!", "hi!", obj65);
        aSMifierClassVisitor31.visitOuterClass("", "", "");
        aSMifierClassVisitor31.visitOuterClass("", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = aSMifierClassVisitor31.visitAnnotation("hi!", false);
        aSMifierClassVisitor31.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(fieldVisitor66);
        org.junit.Assert.assertNotNull(annotationVisitor77);
    }

    @Test
    public void test12803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12803");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "", "");
        aSMifierClassVisitor15.visitInnerClass("", "", "", (int) (short) -1);
        aSMifierClassVisitor15.visitInnerClass("", "", "", 1);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
    }

    @Test
    public void test12804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12804");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print(false);
        printWriter24.println(false);
        printWriter24.print(0L);
        java.io.PrintWriter printWriter32 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        printWriter35.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter40 = printWriter35.format("", (java.lang.Object[]) strArray39);
        java.io.PrintWriter printWriter41 = printWriter24.printf("hi!", (java.lang.Object[]) strArray39);
        aSMifierClassVisitor15.visit((int) (byte) 1, (int) (byte) 10, "hi!", "", "hi!", strArray39);
        aSMifierClassVisitor15.visitSource("", "hi!");
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierClassVisitor15.visitAnnotation("", false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertNotNull(annotationVisitor52);
    }

    @Test
    public void test12805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12805");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs(1, 10);
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label65);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", false);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor71);
    }

    @Test
    public void test12806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12806");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        aSMifierClassVisitor15.visitSource("hi!", "");
        aSMifierClassVisitor15.visitInnerClass("hi!", "hi!", "", 0);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) '4');
        aSMifierClassVisitor15.visitInnerClass("", "", "", (int) (byte) -1);
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "");
        java.lang.Class<?> wildcardClass53 = aSMifierClassVisitor15.getClass();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test12807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12807");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMaxs((int) (short) -1, (int) (short) 100);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label19);
        aSMifierMethodVisitor0.visitIincInsn(10, (int) (byte) 0);
        aSMifierMethodVisitor0.visitMaxs(10, (-1));
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        printWriter28.print(false);
        java.io.PrintWriter printWriter32 = printWriter28.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter32, true);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter((java.io.Writer) printWriter32);
        printWriter35.write("");
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        java.util.Locale locale40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray47 = null;
        aSMifierMethodVisitor42.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray45, (int) (short) 1, objArray47);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor50.visitTryCatchBlock(label51, label52, label53, "");
        aSMifierMethodVisitor50.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray59 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray61 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor50, strArray59, 1.0f };
        java.io.PrintWriter printWriter62 = printWriter39.printf(locale40, "", (java.lang.Object[]) strArray59);
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter((java.io.Writer) printWriter62, true);
        printWriter35.println((java.lang.Object) printWriter64);
        printWriter35.print((double) 'a');
        aSMifierMethodVisitor0.print(printWriter35);
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label72, label73, (-1));
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(printWriter62);
    }

    @Test
    public void test12808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12808");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, (int) (short) 1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitLabel(label21);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        printWriter47.print('#');
        printWriter47.println();
        java.io.PrintWriter printWriter52 = printWriter47.append((java.lang.CharSequence) "");
        printWriter47.println(' ');
        printWriter47.print((float) '4');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter47);
        org.mockito.asm.Attribute attribute58 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(printWriter52);
    }

    @Test
    public void test12809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12809");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitMaxs(0, (int) '4');
    }

    @Test
    public void test12810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12810");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append(' ');
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        java.util.Locale locale32 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray37 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray39 = null;
        aSMifierMethodVisitor34.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray37, (int) (short) 1, objArray39);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor42.visitTryCatchBlock(label43, label44, label45, "");
        aSMifierMethodVisitor42.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray51 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray53 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor42, strArray51, 1.0f };
        java.io.PrintWriter printWriter54 = printWriter31.printf(locale32, "", (java.lang.Object[]) strArray51);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter((java.io.Writer) printWriter54, true);
        printWriter56.print("");
        printWriter56.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor61 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter56);
        java.lang.String[] strArray66 = new java.lang.String[] {};
        org.mockito.asm.MethodVisitor methodVisitor67 = aSMifierClassVisitor61.visitMethod(0, "", "", "hi!", strArray66);
        java.io.PrintWriter printWriter68 = printWriter28.format("", (java.lang.Object[]) strArray66);
        printWriter68.print((long) (byte) 10);
        java.lang.CharSequence charSequence71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter74 = printWriter68.append(charSequence71, 100, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(methodVisitor67);
        org.junit.Assert.assertNotNull(printWriter68);
    }

    @Test
    public void test12811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12811");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("hi!");
        printWriter2.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter6 = printWriter2.append((java.lang.CharSequence) "");
        printWriter2.print((int) (byte) -1);
        printWriter2.write("", (int) (byte) 1, (int) (short) 0);
        printWriter2.print((double) (byte) -1);
        aSMifierMethodVisitor0.print(printWriter2);
        aSMifierMethodVisitor0.visitFieldInsn(10, "hi!", "", "");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        aSMifierMethodVisitor24.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor24.visitMaxs(100, (int) (short) -1);
        aSMifierMethodVisitor24.visitMethodInsn((int) (byte) 100, "", "", "hi!");
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor24.visitLineNumber((int) (short) 1, label42);
        aSMifierMethodVisitor24.visitIntInsn((int) (short) 0, (int) (byte) 0);
        aSMifierMethodVisitor24.visitCode();
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor24.visitLabel(label48);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) label48);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test12812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12812");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println((int) (short) -1);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor4.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor4.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierClassVisitor4.visitAnnotation("hi!", true);
        aSMifierClassVisitor4.visitEnd();
        aSMifierClassVisitor4.visitInnerClass("hi!", "hi!", "", (int) (short) 10);
        aSMifierClassVisitor4.visitEnd();
        aSMifierClassVisitor4.visitSource("hi!", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor12);
    }

    @Test
    public void test12813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12813");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs(0, 1);
        aSMifierMethodVisitor0.visitTypeInsn(0, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) '4');
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label25, label26, (int) (byte) 10);
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label30);
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 1, (int) (short) 10);
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test12814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12814");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.write((int) (short) -1);
        printWriter26.print(false);
        java.io.PrintWriter printWriter34 = printWriter26.append('4');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter34);
    }

    @Test
    public void test12815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12815");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierClassVisitor15.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierClassVisitor15.visitAnnotation("", false);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.write((-1));
        printWriter43.flush();
        java.util.Locale locale47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray54 = null;
        aSMifierMethodVisitor49.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray52, (int) (short) 1, objArray54);
        java.io.PrintWriter printWriter56 = printWriter43.printf(locale47, "", (java.lang.Object[]) strArray52);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor57 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter43);
        aSMifierClassVisitor57.visitEnd();
        aSMifierClassVisitor57.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor57.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierClassVisitor57.visitAnnotation("hi!", false);
        java.io.PrintWriter printWriter73 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter75 = printWriter73.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor76 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter75);
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierClassVisitor76.visitAnnotation("hi!", true);
        java.lang.String[] strArray85 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor76.visit(1, (int) (short) 10, "hi!", "", "", strArray85);
        aSMifierClassVisitor57.visit(0, (int) (byte) 0, "", "hi!", "", strArray85);
        aSMifierClassVisitor15.visit((int) (byte) 0, (int) (short) 100, "hi!", "hi!", "hi!", strArray85);
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = aSMifierClassVisitor15.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(annotationVisitor79);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(annotationVisitor92);
    }

    @Test
    public void test12816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12816");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitSource("hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.Attribute attribute35 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor15.visitAttribute(attribute35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
    }

    @Test
    public void test12817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12817");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        printWriter27.print((java.lang.Object) (short) -1);
        printWriter27.flush();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter27);
        printWriter31.write("");
        org.mockito.asm.FieldVisitor fieldVisitor34 = aSMifierClassVisitor15.visitField(0, "", "", "hi!", (java.lang.Object) printWriter31);
        fieldVisitor34.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = fieldVisitor34.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = annotationVisitor38.visitArray("hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = annotationVisitor38.visitArray("");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj53 = null;
        aSMifierMethodVisitor44.visitLdcInsn(obj53);
        aSMifierMethodVisitor44.visitTypeInsn(0, "hi!");
        aSMifierMethodVisitor44.visitInsn((int) (short) 1);
        aSMifierMethodVisitor44.visitMultiANewArrayInsn("", (int) (short) 10);
        aSMifierMethodVisitor44.visitCode();
        annotationVisitor42.visit("", (java.lang.Object) aSMifierMethodVisitor44);
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor44.visitJumpInsn((int) '4', label66);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor42);
    }

    @Test
    public void test12818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12818");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter16 = printWriter12.append((java.lang.CharSequence) "");
        printWriter8.println((java.lang.Object) printWriter16);
        printWriter16.print((long) (byte) 10);
        printWriter16.println(10.0d);
        java.io.PrintWriter printWriter23 = printWriter16.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor24 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter16);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter16);
        printWriter16.print((int) 'a');
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(printWriter23);
    }

    @Test
    public void test12819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12819");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label23, label24, 0);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor0.visitParameterAnnotation((int) 'a', "", true);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, 1);
        aSMifierMethodVisitor0.visitMethodInsn((int) ' ', "", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label42, label43, label44, "");
        org.junit.Assert.assertNotNull(annotationVisitor33);
    }

    @Test
    public void test12820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12820");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        printWriter12.println("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor18 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter12);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.write((-1));
        printWriter24.flush();
        java.util.Locale locale28 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray33 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray35 = null;
        aSMifierMethodVisitor30.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray33, (int) (short) 1, objArray35);
        java.io.PrintWriter printWriter37 = printWriter24.printf(locale28, "", (java.lang.Object[]) strArray33);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor38 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        aSMifierClassVisitor38.visitEnd();
        aSMifierClassVisitor38.visitSource("", "hi!");
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor38.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray48);
        org.mockito.asm.MethodVisitor methodVisitor50 = aSMifierClassVisitor18.visitMethod(0, "", "hi!", "hi!", strArray48);
        aSMifierClassVisitor18.visitEnd();
        aSMifierClassVisitor18.visitEnd();
        aSMifierClassVisitor18.visitInnerClass("", "", "hi!", (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierClassVisitor18.visitAnnotation("", false);
        aSMifierClassVisitor18.visitSource("", "");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(methodVisitor50);
        org.junit.Assert.assertNotNull(annotationVisitor60);
    }

    @Test
    public void test12821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12821");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] { label40 };
        aSMifierMethodVisitor28.visitTableSwitchInsn(0, (int) (byte) 10, label39, labelArray41);
        java.io.PrintWriter printWriter43 = printWriter24.printf("hi!", (java.lang.Object[]) labelArray41);
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray41, 1, (java.lang.Object[]) strArray45);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 0, (int) (byte) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 100, label54);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 10, (int) (short) 100);
        aSMifierMethodVisitor0.visitFieldInsn(1, "", "hi!", "");
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(annotationVisitor52);
    }

    @Test
    public void test12822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12822");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMaxs((int) (short) -1, (int) (short) 100);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label19);
        aSMifierMethodVisitor0.visitIincInsn(10, (int) (byte) 0);
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label25);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "hi!");
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
    }

    @Test
    public void test12823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12823");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter5.close();
        printWriter5.println(true);
        java.util.Locale locale9 = null;
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter14 = printWriter12.append('a');
        printWriter12.print("hi!");
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.Writer) printWriter12, false);
        printWriter18.write("hi!");
        printWriter18.println(' ');
        java.util.Locale locale23 = null;
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        java.io.PrintWriter printWriter50 = printWriter18.printf(locale23, "", (java.lang.Object[]) strArray46);
        java.io.PrintWriter printWriter51 = printWriter5.format(locale9, "", (java.lang.Object[]) strArray46);
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(printWriter51);
    }

    @Test
    public void test12824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12824");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLabel(label17);
        aSMifierMethodVisitor0.visitInsn(100);
        java.util.List list21 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitLineNumber(1, label23);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Attribute attribute27 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor26);
    }

    @Test
    public void test12825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12825");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.print((double) (byte) 10);
        java.util.Locale locale6 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label14 = null;
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label[] labelArray33 = new org.mockito.asm.Label[] { label32 };
        aSMifierMethodVisitor20.visitTableSwitchInsn(0, (int) (byte) 10, label31, labelArray33);
        java.io.PrintWriter printWriter35 = printWriter16.printf("hi!", (java.lang.Object[]) labelArray33);
        aSMifierMethodVisitor8.visitTableSwitchInsn(1, (int) (short) 10, label14, labelArray33);
        java.io.PrintWriter printWriter37 = printWriter1.format(locale6, "hi!", (java.lang.Object[]) labelArray33);
        printWriter37.write((int) (byte) 1);
        printWriter37.print(1.0f);
        org.junit.Assert.assertNotNull(labelArray33);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter37);
    }

    @Test
    public void test12826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12826");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label22);
        aSMifierMethodVisitor0.visitVarInsn(100, (-1));
        aSMifierMethodVisitor0.visitFieldInsn(100, "", "", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn(0, "", "hi!", "hi!");
        java.util.List list37 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor0.visitLineNumber(0, label40);
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label43);
        org.junit.Assert.assertNotNull(list37);
    }

    @Test
    public void test12827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12827");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitMaxs(0, (-1));
        aSMifierMethodVisitor9.visitCode();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor9);
        aSMifierMethodVisitor9.visitMultiANewArrayInsn("hi!", (int) (byte) -1);
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor9.visitJumpInsn((int) (short) 10, label24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor9.visitLineNumber((int) (byte) 1, label27);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter32 = printWriter30.append('a');
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.println((-1.0d));
        printWriter30.print((java.lang.Object) (-1.0d));
        java.io.PrintWriter printWriter39 = printWriter30.append('a');
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        java.util.Locale locale42 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray47 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray49 = null;
        aSMifierMethodVisitor44.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray47, (int) (short) 1, objArray49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor52.visitTryCatchBlock(label53, label54, label55, "");
        aSMifierMethodVisitor52.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray61 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray63 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor52, strArray61, 1.0f };
        java.io.PrintWriter printWriter64 = printWriter41.printf(locale42, "", (java.lang.Object[]) strArray61);
        char[] charArray71 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter64.println(charArray71);
        printWriter64.write(1);
        printWriter39.print((java.lang.Object) 1);
        printWriter39.print((double) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor79 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray82 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray84 = null;
        aSMifierMethodVisitor79.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray82, (int) (short) 1, objArray84);
        java.io.PrintWriter printWriter86 = printWriter39.format("", objArray84);
        aSMifierMethodVisitor9.print(printWriter39);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor9.visitFieldInsn((-1), "hi!", "hi!", "");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(printWriter86);
    }

    @Test
    public void test12828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12828");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append(' ');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierClassVisitor29.visitAnnotation("", false);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test12829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12829");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor6 = aSMifierMethodVisitor0.visitAnnotation("", true);
        annotationVisitor6.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor6);
    }

    @Test
    public void test12830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12830");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitMaxs(0, (-1));
        aSMifierMethodVisitor9.visitCode();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor9);
        aSMifierMethodVisitor9.visitMultiANewArrayInsn("hi!", (int) (byte) -1);
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor9.visitJumpInsn((int) (short) 10, label24);
        aSMifierMethodVisitor9.visitVarInsn(100, (int) 'a');
        aSMifierMethodVisitor9.visitIntInsn(1, (int) '4');
    }

    @Test
    public void test12831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12831");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print(false);
        printWriter39.println(false);
        printWriter39.print(0L);
        java.io.PrintWriter printWriter47 = printWriter39.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("hi!");
        printWriter50.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter55 = printWriter50.format("", (java.lang.Object[]) strArray54);
        java.io.PrintWriter printWriter56 = printWriter39.printf("hi!", (java.lang.Object[]) strArray54);
        aSMifierClassVisitor28.visit((int) ' ', (int) '#', "", "", "hi!", strArray54);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierClassVisitor28.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(annotationVisitor63);
    }

    @Test
    public void test12832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12832");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.println((long) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        printWriter30.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter34 = printWriter30.append((java.lang.CharSequence) "");
        printWriter30.print((int) (byte) -1);
        printWriter30.write("", (int) (byte) 1, (int) (short) 0);
        printWriter30.print((double) (byte) -1);
        aSMifierMethodVisitor28.print(printWriter30);
        printWriter30.write((int) (byte) 100);
        printWriter24.println((java.lang.Object) (byte) 100);
        printWriter24.println((int) 'a');
        java.io.PrintWriter printWriter50 = printWriter24.append('#');
        printWriter24.close();
        printWriter24.print((long) 100);
        printWriter24.print(' ');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(printWriter50);
    }

    @Test
    public void test12833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12833");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj45 = null;
        aSMifierMethodVisitor36.visitLdcInsn(obj45);
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor36.visitJumpInsn((int) (short) 1, label48);
        aSMifierMethodVisitor36.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor36.visitParameterAnnotation((int) (byte) 1, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor57 = aSMifierClassVisitor31.visitField((int) (byte) 0, "", "", "", (java.lang.Object) aSMifierMethodVisitor36);
        aSMifierClassVisitor31.visitSource("", "hi!");
        aSMifierClassVisitor31.visitEnd();
        aSMifierClassVisitor31.visitSource("hi!", "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor57);
    }

    @Test
    public void test12834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12834");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = printWriter1.append((java.lang.CharSequence) "");
        printWriter22.close();
        java.io.PrintWriter printWriter25 = printWriter22.append(' ');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj35 = null;
        aSMifierMethodVisitor26.visitLdcInsn(obj35);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor26.visitAnnotationDefault();
        printWriter25.println((java.lang.Object) aSMifierMethodVisitor26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor26.visitLdcInsn((java.lang.Object) label40);
        aSMifierMethodVisitor26.visitMethodInsn(100, "hi!", "", "hi!");
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor26.visitJumpInsn((int) (byte) 10, label52);
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test12835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12835");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.print((double) (byte) 10);
        java.util.Locale locale6 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label14 = null;
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label[] labelArray33 = new org.mockito.asm.Label[] { label32 };
        aSMifierMethodVisitor20.visitTableSwitchInsn(0, (int) (byte) 10, label31, labelArray33);
        java.io.PrintWriter printWriter35 = printWriter16.printf("hi!", (java.lang.Object[]) labelArray33);
        aSMifierMethodVisitor8.visitTableSwitchInsn(1, (int) (short) 10, label14, labelArray33);
        java.io.PrintWriter printWriter37 = printWriter1.format(locale6, "hi!", (java.lang.Object[]) labelArray33);
        printWriter1.print((double) '4');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj49 = null;
        aSMifierMethodVisitor40.visitLdcInsn(obj49);
        org.mockito.asm.Label label51 = null;
        int[] intArray58 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor59.visitTryCatchBlock(label60, label61, label62, "");
        aSMifierMethodVisitor59.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label[] labelArray72 = new org.mockito.asm.Label[] { label71 };
        aSMifierMethodVisitor59.visitTableSwitchInsn(0, (int) (byte) 10, label70, labelArray72);
        aSMifierMethodVisitor40.visitLookupSwitchInsn(label51, intArray58, labelArray72);
        printWriter1.print((java.lang.Object) labelArray72);
        printWriter1.flush();
        org.junit.Assert.assertNotNull(labelArray33);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray72);
    }

    @Test
    public void test12836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12836");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter("hi!");
        java.util.Locale locale62 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray67 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray69 = null;
        aSMifierMethodVisitor64.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray67, (int) (short) 1, objArray69);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor72 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        aSMifierMethodVisitor72.visitTryCatchBlock(label73, label74, label75, "");
        aSMifierMethodVisitor72.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray81 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray83 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor72, strArray81, 1.0f };
        java.io.PrintWriter printWriter84 = printWriter61.printf(locale62, "", (java.lang.Object[]) strArray81);
        char[] charArray91 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter84.println(charArray91);
        annotationVisitor58.visit("", (java.lang.Object) printWriter84);
        printWriter84.print((int) (short) 0);
        java.io.PrintWriter printWriter97 = printWriter84.append((java.lang.CharSequence) "hi!");
        char[] charArray98 = null;
        // The following exception was thrown during execution in test generation
        try {
            printWriter97.println(charArray98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter97);
    }

    @Test
    public void test12837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12837");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj35 = null;
        aSMifierMethodVisitor26.visitLdcInsn(obj35);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor26.visitJumpInsn((int) (short) 1, label38);
        aSMifierMethodVisitor26.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor46.visitTryCatchBlock(label47, label48, label49, "");
        aSMifierMethodVisitor46.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj55 = null;
        aSMifierMethodVisitor46.visitLdcInsn(obj55);
        org.mockito.asm.Label label57 = null;
        int[] intArray64 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        aSMifierMethodVisitor65.visitTryCatchBlock(label66, label67, label68, "");
        aSMifierMethodVisitor65.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label[] labelArray78 = new org.mockito.asm.Label[] { label77 };
        aSMifierMethodVisitor65.visitTableSwitchInsn(0, (int) (byte) 10, label76, labelArray78);
        aSMifierMethodVisitor46.visitLookupSwitchInsn(label57, intArray64, labelArray78);
        aSMifierMethodVisitor26.visitTableSwitchInsn((int) 'a', 10, label45, labelArray78);
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = aSMifierMethodVisitor26.visitAnnotation("", true);
        org.mockito.asm.Label label86 = null;
        aSMifierMethodVisitor26.visitJumpInsn((int) (byte) 0, label86);
        org.mockito.asm.Label label88 = null;
        aSMifierMethodVisitor26.visitLabel(label88);
        aSMifierMethodVisitor26.visitMaxs((int) (byte) 0, (int) (short) 100);
        printWriter24.println((java.lang.Object) aSMifierMethodVisitor26);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor94 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        aSMifierClassVisitor94.visitEnd();
        aSMifierClassVisitor94.visitSource("", "");
        java.util.List list99 = aSMifierClassVisitor94.text;
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray78);
        org.junit.Assert.assertNotNull(annotationVisitor84);
        org.junit.Assert.assertNotNull(list99);
    }

    @Test
    public void test12838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12838");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray5 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter6 = printWriter1.format("", (java.lang.Object[]) strArray5);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitOuterClass("hi!", "", "");
        aSMifierClassVisitor7.visitSource("hi!", "hi!");
        aSMifierClassVisitor7.visitInnerClass("hi!", "hi!", "hi!", (int) (byte) -1);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printWriter6);
    }

    @Test
    public void test12839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12839");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        java.util.List list26 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 0);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 1, label32);
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label34, label35, label36, "");
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label42, label43, (int) (short) -1);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list26);
    }

    @Test
    public void test12840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12840");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter7.close();
        printWriter7.write((int) (byte) 0);
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter7);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        printWriter13.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor17.visitTryCatchBlock(label18, label19, label20, "");
        aSMifierMethodVisitor17.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label[] labelArray30 = new org.mockito.asm.Label[] { label29 };
        aSMifierMethodVisitor17.visitTableSwitchInsn(0, (int) (byte) 10, label28, labelArray30);
        java.io.PrintWriter printWriter32 = printWriter13.printf("hi!", (java.lang.Object[]) labelArray30);
        printWriter13.print((float) 1L);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter13, false);
        printWriter7.println((java.lang.Object) false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor39.visitLocalVariable("hi!", "hi!", "hi!", label48, label49, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor39.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierMethodVisitor39.visitAnnotationDefault();
        aSMifierMethodVisitor39.visitCode();
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor39.visitLineNumber(100, label58);
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter("hi!");
        printWriter61.print(false);
        printWriter61.println(false);
        printWriter61.print(0L);
        java.io.PrintWriter printWriter69 = printWriter61.append((java.lang.CharSequence) "");
        aSMifierMethodVisitor39.print(printWriter61);
        printWriter61.write("");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor74 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        aSMifierMethodVisitor74.visitTryCatchBlock(label75, label76, label77, "");
        org.mockito.asm.Label label83 = null;
        org.mockito.asm.Label label84 = null;
        aSMifierMethodVisitor74.visitLocalVariable("hi!", "hi!", "hi!", label83, label84, (int) (byte) 10);
        java.io.PrintWriter printWriter88 = new java.io.PrintWriter("hi!");
        printWriter88.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray92 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter93 = printWriter88.format("", (java.lang.Object[]) strArray92);
        aSMifierMethodVisitor74.visitLdcInsn((java.lang.Object) strArray92);
        java.io.PrintWriter printWriter95 = printWriter61.printf("", (java.lang.Object[]) strArray92);
        java.io.PrintWriter printWriter96 = printWriter7.format("", (java.lang.Object[]) strArray92);
        printWriter7.println('#');
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(labelArray30);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(printWriter93);
        org.junit.Assert.assertNotNull(printWriter95);
        org.junit.Assert.assertNotNull(printWriter96);
    }

    @Test
    public void test12841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12841");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((int) (byte) -1);
        printWriter1.print((double) (byte) 1);
        printWriter1.close();
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        boolean boolean12 = printWriter1.checkError();
        printWriter1.println((long) (byte) 100);
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter1.println(' ');
        boolean boolean19 = printWriter1.checkError();
        printWriter1.print((long) 1);
        printWriter1.flush();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test12842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12842");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label21, label22, label23, "");
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label29, label30, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) -1, "hi!", false);
        aSMifierMethodVisitor0.visitTypeInsn((int) ' ', "");
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test12843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12843");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        char[] charArray56 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter49.println(charArray56);
        printWriter24.print(charArray56);
        printWriter24.print(true);
        java.io.PrintWriter printWriter62 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.print((float) '4');
        printWriter24.println();
        printWriter24.write("hi!");
        java.io.PrintWriter printWriter69 = printWriter24.append((java.lang.CharSequence) "hi!");
        printWriter24.print((double) 1L);
        boolean boolean72 = printWriter24.checkError();
        // The following exception was thrown during execution in test generation
        try {
            printWriter24.write("", 100, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 101");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test12844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12844");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label22);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "", "hi!");
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitLabel(label29);
        aSMifierMethodVisitor0.visitMethodInsn(1, "", "", "");
    }

    @Test
    public void test12845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12845");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println((int) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj18 = null;
        aSMifierMethodVisitor9.visitLdcInsn(obj18);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor9.visitJumpInsn((int) (short) 1, label21);
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor9.visitAnnotationDefault();
        printWriter1.println((java.lang.Object) aSMifierMethodVisitor9);
        java.io.PrintWriter printWriter26 = printWriter1.append((java.lang.CharSequence) "hi!");
        boolean boolean27 = printWriter1.checkError();
        printWriter1.println((float) 1);
        printWriter1.print("");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test12846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12846");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor28.visitLocalVariable("hi!", "hi!", "hi!", label37, label38, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor28.visitAnnotation("", true);
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj54 = null;
        aSMifierMethodVisitor45.visitLdcInsn(obj54);
        org.mockito.asm.Label label56 = null;
        int[] intArray63 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] { label76 };
        aSMifierMethodVisitor64.visitTableSwitchInsn(0, (int) (byte) 10, label75, labelArray77);
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label56, intArray63, labelArray77);
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label44, intArray63, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter26.printf("hi!", (java.lang.Object[]) labelArray80);
        printWriter82.print((int) (byte) 10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor85 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter82);
        aSMifierClassVisitor85.visitSource("hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor91 = aSMifierClassVisitor85.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor94 = aSMifierClassVisitor85.visitAnnotation("", false);
        org.mockito.asm.Attribute attribute95 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor85.visitAttribute(attribute95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(annotationVisitor91);
        org.junit.Assert.assertNotNull(annotationVisitor94);
    }

    @Test
    public void test12847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12847");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label19, label20, (int) '4');
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitLineNumber(100, label32);
        org.junit.Assert.assertNotNull(annotationVisitor30);
    }

    @Test
    public void test12848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12848");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        printWriter1.print(0L);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "");
        printWriter9.print('a');
        printWriter9.println((double) (byte) 100);
        printWriter9.println(0);
        printWriter9.println();
        org.junit.Assert.assertNotNull(printWriter9);
    }

    @Test
    public void test12849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12849");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] { label40 };
        aSMifierMethodVisitor28.visitTableSwitchInsn(0, (int) (byte) 10, label39, labelArray41);
        java.io.PrintWriter printWriter43 = printWriter24.printf("hi!", (java.lang.Object[]) labelArray41);
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray41, 1, (java.lang.Object[]) strArray45);
        aSMifierMethodVisitor0.visitIntInsn((int) '#', 10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 1);
        aSMifierMethodVisitor0.visitMethodInsn(0, "hi!", "", "");
        org.mockito.asm.Attribute attribute58 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(strArray45);
    }

    @Test
    public void test12850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12850");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitEnd();
        java.lang.String[] strArray41 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierClassVisitor28.visit(0, (int) (short) 100, "hi!", "hi!", "", strArray41);
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        java.util.Locale locale49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray56 = null;
        aSMifierMethodVisitor51.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray54, (int) (short) 1, objArray56);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor59.visitTryCatchBlock(label60, label61, label62, "");
        aSMifierMethodVisitor59.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray68 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray70 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor59, strArray68, 1.0f };
        java.io.PrintWriter printWriter71 = printWriter48.printf(locale49, "", (java.lang.Object[]) strArray68);
        java.io.PrintWriter printWriter73 = new java.io.PrintWriter((java.io.Writer) printWriter71, true);
        printWriter71.print("");
        java.io.PrintWriter printWriter77 = printWriter71.append('#');
        printWriter71.print((long) (short) -1);
        org.mockito.asm.FieldVisitor fieldVisitor80 = aSMifierClassVisitor28.visitField((-1), "", "", "hi!", (java.lang.Object) (short) -1);
        aSMifierClassVisitor28.visitOuterClass("", "hi!", "");
        aSMifierClassVisitor28.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(fieldVisitor80);
    }

    @Test
    public void test12851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12851");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.print((int) ' ');
        java.lang.Object obj29 = null;
        printWriter24.print(obj29);
        printWriter24.println(false);
        printWriter24.print('#');
        printWriter24.println("");
        printWriter24.println((double) (byte) 0);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test12852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12852");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((int) (byte) -1);
        printWriter1.print((double) (byte) 1);
        printWriter1.close();
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter11.println();
        java.io.PrintWriter printWriter14 = printWriter11.append('#');
        java.io.PrintWriter printWriter16 = printWriter11.append((java.lang.CharSequence) "");
        printWriter11.println((double) '#');
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter16);
    }

    @Test
    public void test12853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12853");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitMaxs((int) '4', (int) (short) -1);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor83 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(annotationVisitor82);
        org.junit.Assert.assertNotNull(annotationVisitor83);
    }

    @Test
    public void test12854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12854");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("hi!");
        printWriter2.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter6 = printWriter2.append((java.lang.CharSequence) "");
        printWriter2.print((int) (byte) -1);
        printWriter2.write("", (int) (byte) 1, (int) (short) 0);
        printWriter2.print((double) (byte) -1);
        aSMifierMethodVisitor0.print(printWriter2);
        printWriter2.write((int) (byte) 100);
        printWriter2.println("");
        org.junit.Assert.assertNotNull(printWriter6);
    }

    @Test
    public void test12855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12855");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor27.visitTryCatchBlock(label28, label29, label30, "");
        aSMifierMethodVisitor27.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj36 = null;
        aSMifierMethodVisitor27.visitLdcInsn(obj36);
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor27.visitJumpInsn((int) (short) 1, label39);
        aSMifierMethodVisitor27.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label48, label49, label50, "");
        aSMifierMethodVisitor47.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj56 = null;
        aSMifierMethodVisitor47.visitLdcInsn(obj56);
        org.mockito.asm.Label label58 = null;
        int[] intArray65 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor66.visitTryCatchBlock(label67, label68, label69, "");
        aSMifierMethodVisitor66.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label[] labelArray79 = new org.mockito.asm.Label[] { label78 };
        aSMifierMethodVisitor66.visitTableSwitchInsn(0, (int) (byte) 10, label77, labelArray79);
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label58, intArray65, labelArray79);
        aSMifierMethodVisitor27.visitTableSwitchInsn((int) 'a', 10, label46, labelArray79);
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = aSMifierMethodVisitor27.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = aSMifierMethodVisitor27.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor27);
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label94 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 1, label94);
        aSMifierMethodVisitor0.visitTypeInsn((int) '#', "");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray79);
        org.junit.Assert.assertNotNull(annotationVisitor85);
        org.junit.Assert.assertNotNull(annotationVisitor88);
        org.junit.Assert.assertNotNull(annotationVisitor92);
    }

    @Test
    public void test12856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12856");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor7.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor7.visitAnnotationDefault();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        java.io.PrintWriter printWriter50 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray48);
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor7.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray48, 1, (java.lang.Object[]) strArray52);
        java.io.PrintWriter printWriter54 = printWriter1.format("hi!", (java.lang.Object[]) strArray52);
        java.util.Locale locale55 = null;
        java.lang.String[] strArray57 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter58 = printWriter1.format(locale55, "hi!", (java.lang.Object[]) strArray57);
        java.io.PrintWriter printWriter60 = printWriter58.append((java.lang.CharSequence) "");
        java.lang.Object[] objArray62 = null;
        java.io.PrintWriter printWriter63 = printWriter60.format("", objArray62);
        printWriter60.close();
        printWriter60.print((double) 10L);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(printWriter63);
    }

    @Test
    public void test12857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12857");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 100, label61);
        aSMifierMethodVisitor0.visitTypeInsn(1, "hi!");
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label69, label70, 1);
        aSMifierMethodVisitor0.visitMethodInsn(0, "", "", "hi!");
        java.io.PrintWriter printWriter79 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter81 = printWriter79.append('a');
        java.io.PrintWriter printWriter83 = new java.io.PrintWriter((java.io.Writer) printWriter81, true);
        printWriter81.println(10);
        printWriter81.close();
        printWriter81.print(0L);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter81);
        aSMifierMethodVisitor0.visitVarInsn(0, (int) (short) 100);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(printWriter81);
    }

    @Test
    public void test12858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12858");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "hi!", "hi!", (int) (byte) 1);
        aSMifierClassVisitor28.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor28.visitAnnotation("", true);
        org.mockito.asm.FieldVisitor fieldVisitor43 = aSMifierClassVisitor28.visitField((int) (byte) 10, "", "", "", (java.lang.Object) 10.0d);
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter("hi!");
        printWriter49.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor53.visitTryCatchBlock(label54, label55, label56, "");
        aSMifierMethodVisitor53.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label[] labelArray66 = new org.mockito.asm.Label[] { label65 };
        aSMifierMethodVisitor53.visitTableSwitchInsn(0, (int) (byte) 10, label64, labelArray66);
        java.io.PrintWriter printWriter68 = printWriter49.printf("hi!", (java.lang.Object[]) labelArray66);
        java.io.PrintWriter printWriter70 = printWriter49.append((java.lang.CharSequence) "");
        org.mockito.asm.FieldVisitor fieldVisitor71 = aSMifierClassVisitor28.visitField((int) (byte) 0, "hi!", "", "hi!", (java.lang.Object) printWriter49);
        printWriter49.println(100);
        printWriter49.println();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(labelArray66);
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(fieldVisitor71);
    }

    @Test
    public void test12859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12859");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append(' ');
        printWriter28.println(true);
        printWriter28.println((float) (-1L));
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter((java.io.Writer) printWriter28);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter37 = printWriter28.append((java.lang.CharSequence) "", (int) 'a', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -98");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
    }

    @Test
    public void test12860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12860");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "", "");
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray28 = null;
        org.mockito.asm.MethodVisitor methodVisitor29 = aSMifierClassVisitor15.visitMethod((-1), "", "hi!", "", strArray28);
        methodVisitor29.visitInsn((int) '#');
        methodVisitor29.visitIntInsn(0, (int) (short) 10);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(methodVisitor29);
    }

    @Test
    public void test12861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12861");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label15);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test12862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12862");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        aSMifierMethodVisitor4.visitTryCatchBlock(label5, label6, label7, "");
        aSMifierMethodVisitor4.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj13 = null;
        aSMifierMethodVisitor4.visitLdcInsn(obj13);
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor4.visitJumpInsn((int) (short) 1, label16);
        aSMifierMethodVisitor4.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor4.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor4.visitAnnotationDefault();
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        printWriter28.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] { label44 };
        aSMifierMethodVisitor32.visitTableSwitchInsn(0, (int) (byte) 10, label43, labelArray45);
        java.io.PrintWriter printWriter47 = printWriter28.printf("hi!", (java.lang.Object[]) labelArray45);
        java.lang.String[] strArray49 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor4.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray45, 1, (java.lang.Object[]) strArray49);
        printWriter3.println((java.lang.Object) strArray49);
        printWriter3.write("hi!", 100, (int) (byte) -1);
        java.io.PrintWriter printWriter57 = printWriter3.append(' ');
        printWriter57.print("");
        printWriter57.println();
        printWriter57.close();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(printWriter57);
    }

    @Test
    public void test12863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12863");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list13 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, (int) (byte) -1);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitInsn((int) (byte) 100);
        aSMifierMethodVisitor0.visitIntInsn(100, (-1));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(list13);
    }

    @Test
    public void test12864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12864");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor0.visitInsn(1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 0);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, (int) '4');
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 0, "hi!", "", "hi!");
    }

    @Test
    public void test12865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12865");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        java.util.List list14 = aSMifierMethodVisitor0.text;
        org.mockito.asm.Attribute attribute15 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list14);
    }

    @Test
    public void test12866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12866");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.println(false);
        printWriter24.println("hi!");
        char[] charArray31 = null;
        // The following exception was thrown during execution in test generation
        try {
            printWriter24.print(charArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test12867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12867");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label11 = null;
        int[] intArray18 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor19.visitTryCatchBlock(label20, label21, label22, "");
        aSMifierMethodVisitor19.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label[] labelArray32 = new org.mockito.asm.Label[] { label31 };
        aSMifierMethodVisitor19.visitTableSwitchInsn(0, (int) (byte) 10, label30, labelArray32);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label11, intArray18, labelArray32);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 1, "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, 0);
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("hi!");
        java.util.Locale locale45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray50 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray52 = null;
        aSMifierMethodVisitor47.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray50, (int) (short) 1, objArray52);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor55.visitTryCatchBlock(label56, label57, label58, "");
        aSMifierMethodVisitor55.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray64 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray66 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor55, strArray64, 1.0f };
        java.io.PrintWriter printWriter67 = printWriter44.printf(locale45, "", (java.lang.Object[]) strArray64);
        printWriter67.print('#');
        printWriter67.print((int) ' ');
        aSMifierMethodVisitor0.print(printWriter67);
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label79, label80, 0);
        org.mockito.asm.Label label84 = null;
        aSMifierMethodVisitor0.visitLineNumber(1, label84);
        aSMifierMethodVisitor0.visitIntInsn((int) 'a', (int) (byte) -1);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray32);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(annotationVisitor75);
    }

    @Test
    public void test12868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12868");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        java.io.PrintWriter printWriter7 = printWriter1.append('#');
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter7, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter9);
        aSMifierClassVisitor10.visitInnerClass("hi!", "", "", 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierClassVisitor10.visitAnnotation("", false);
        aSMifierClassVisitor10.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor10.visitAnnotation("hi!", true);
        org.junit.Assert.assertNotNull(printWriter7);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test12869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12869");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitSource("hi!", "");
        aSMifierClassVisitor15.visitInnerClass("", "", "", (int) '4');
        java.lang.String[] strArray43 = org.mockito.asm.util.AbstractVisitor.TYPES;
        org.mockito.asm.MethodVisitor methodVisitor44 = aSMifierClassVisitor15.visitMethod((int) (byte) -1, "", "hi!", "", strArray43);
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = methodVisitor44.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = annotationVisitor45.visitAnnotation("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = annotationVisitor48.visitAnnotation("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test12870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12870");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        aSMifierMethodVisitor4.visitTryCatchBlock(label5, label6, label7, "");
        aSMifierMethodVisitor4.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj13 = null;
        aSMifierMethodVisitor4.visitLdcInsn(obj13);
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor4.visitJumpInsn((int) (short) 1, label16);
        aSMifierMethodVisitor4.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor4.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor4.visitAnnotationDefault();
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        printWriter28.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] { label44 };
        aSMifierMethodVisitor32.visitTableSwitchInsn(0, (int) (byte) 10, label43, labelArray45);
        java.io.PrintWriter printWriter47 = printWriter28.printf("hi!", (java.lang.Object[]) labelArray45);
        java.lang.String[] strArray49 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor4.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray45, 1, (java.lang.Object[]) strArray49);
        printWriter3.println((java.lang.Object) strArray49);
        printWriter3.write("hi!", 100, (int) (byte) -1);
        java.io.PrintWriter printWriter57 = printWriter3.append(' ');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor58 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter57);
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter("hi!");
        java.util.Locale locale65 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray70 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray72 = null;
        aSMifierMethodVisitor67.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray70, (int) (short) 1, objArray72);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor75 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor75.visitTryCatchBlock(label76, label77, label78, "");
        aSMifierMethodVisitor75.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray84 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray86 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor75, strArray84, 1.0f };
        java.io.PrintWriter printWriter87 = printWriter64.printf(locale65, "", (java.lang.Object[]) strArray84);
        printWriter87.print('#');
        printWriter87.println(false);
        printWriter87.write("hi!");
        org.mockito.asm.FieldVisitor fieldVisitor94 = aSMifierClassVisitor58.visitField((int) (short) -1, "", "hi!", "", (java.lang.Object) printWriter87);
        aSMifierClassVisitor58.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor98 = aSMifierClassVisitor58.visitAnnotation("", true);
        aSMifierClassVisitor58.visitEnd();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertNotNull(printWriter87);
        org.junit.Assert.assertNotNull(fieldVisitor94);
        org.junit.Assert.assertNotNull(annotationVisitor98);
    }

    @Test
    public void test12871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12871");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label9 = null;
        aSMifierMethodVisitor0.visitLabel(label9);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label14, label15, (int) '#');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) '4');
        aSMifierMethodVisitor0.visitEnd();
    }

    @Test
    public void test12872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12872");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((-1), 100);
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor0.visitLineNumber(100, label71);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 1, "", "", "");
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '#', label80);
        org.mockito.asm.Label label83 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label83);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, (int) '#');
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor73);
    }

    @Test
    public void test12873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12873");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        java.util.List list33 = aSMifierClassVisitor28.getText();
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitSource("", "hi!");
        aSMifierClassVisitor28.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor28.visitInnerClass("hi!", "hi!", "", (int) (byte) 1);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list33);
    }

    @Test
    public void test12874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12874");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter("hi!");
        java.util.Locale locale62 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray67 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray69 = null;
        aSMifierMethodVisitor64.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray67, (int) (short) 1, objArray69);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor72 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        aSMifierMethodVisitor72.visitTryCatchBlock(label73, label74, label75, "");
        aSMifierMethodVisitor72.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray81 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray83 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor72, strArray81, 1.0f };
        java.io.PrintWriter printWriter84 = printWriter61.printf(locale62, "", (java.lang.Object[]) strArray81);
        char[] charArray91 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter84.println(charArray91);
        annotationVisitor58.visit("", (java.lang.Object) printWriter84);
        printWriter84.flush();
        java.io.PrintWriter printWriter96 = printWriter84.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter98 = new java.io.PrintWriter((java.io.Writer) printWriter96, false);
        printWriter98.close();
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter96);
    }

    @Test
    public void test12875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12875");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        aSMifierMethodVisitor0.visitMethodInsn(10, "", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label14, label15, label16, "hi!");
        aSMifierMethodVisitor0.visitIntInsn(1, 1);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 100, label24);
        aSMifierMethodVisitor0.visitVarInsn((int) '4', (int) (byte) 0);
    }

    @Test
    public void test12876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12876");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        printWriter26.println((int) (byte) 0);
        printWriter26.println('a');
        java.lang.CharSequence charSequence35 = null;
        java.io.PrintWriter printWriter36 = printWriter26.append(charSequence35);
        printWriter36.println("");
        printWriter36.write("");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter36);
    }

    @Test
    public void test12877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12877");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label21, label22, label23, "");
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label29, label30, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) -1, "hi!", false);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, (int) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor0.visitAnnotation("", false);
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        java.util.Locale locale49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray56 = null;
        aSMifierMethodVisitor51.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray54, (int) (short) 1, objArray56);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor59.visitTryCatchBlock(label60, label61, label62, "");
        aSMifierMethodVisitor59.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray68 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray70 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor59, strArray68, 1.0f };
        java.io.PrintWriter printWriter71 = printWriter48.printf(locale49, "", (java.lang.Object[]) strArray68);
        printWriter71.print('#');
        printWriter71.print((int) ' ');
        java.lang.Object obj76 = null;
        printWriter71.print(obj76);
        printWriter71.println(false);
        java.io.PrintWriter printWriter81 = printWriter71.append('4');
        aSMifierMethodVisitor0.print(printWriter81);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label85 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) -1, label85);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(printWriter81);
    }

    @Test
    public void test12878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12878");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter1.print(false);
        printWriter1.print('#');
        printWriter1.flush();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
    }

    @Test
    public void test12879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12879");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter9.println(false);
        printWriter9.print((long) (short) 10);
        java.io.PrintWriter printWriter15 = printWriter9.append('4');
        printWriter9.close();
        printWriter9.print((double) (-1L));
        printWriter9.write("hi!");
        printWriter9.println((double) 10L);
        printWriter9.println(1.0d);
        printWriter9.println("hi!");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter15);
    }

    @Test
    public void test12880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12880");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, (int) (short) 1);
        aSMifierMethodVisitor0.visitIntInsn(1, 0);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", 10);
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label23);
        aSMifierMethodVisitor0.visitMethodInsn((int) '4', "", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test12881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12881");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation(100, "", true);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor21.visitTryCatchBlock(label22, label23, label24, "");
        aSMifierMethodVisitor21.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj30 = null;
        aSMifierMethodVisitor21.visitLdcInsn(obj30);
        aSMifierMethodVisitor21.visitTypeInsn(0, "hi!");
        aSMifierMethodVisitor21.visitInsn((int) (short) 1);
        aSMifierMethodVisitor21.visitFieldInsn((int) (byte) 0, "hi!", "", "");
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor21.visitLineNumber((int) '#', label43);
        aSMifierMethodVisitor21.visitTypeInsn(10, "");
        java.lang.Class<?> wildcardClass48 = aSMifierMethodVisitor21.getClass();
        annotationVisitor19.visit("", (java.lang.Object) wildcardClass48);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test12882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12882");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        java.io.PrintWriter printWriter10 = printWriter5.append(' ');
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter15 = printWriter13.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter15);
        java.lang.String[] strArray22 = null;
        aSMifierClassVisitor16.visit((int) (short) 1, (int) '#', "hi!", "hi!", "", strArray22);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor28.visitLocalVariable("hi!", "hi!", "hi!", label37, label38, (int) (byte) 10);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        printWriter42.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter47 = printWriter42.format("", (java.lang.Object[]) strArray46);
        aSMifierMethodVisitor28.visitLdcInsn((java.lang.Object) strArray46);
        org.mockito.asm.MethodVisitor methodVisitor49 = aSMifierClassVisitor16.visitMethod((int) (byte) 1, "hi!", "hi!", "hi!", strArray46);
        java.io.PrintWriter printWriter50 = printWriter5.format("hi!", (java.lang.Object[]) strArray46);
        printWriter50.print(true);
        printWriter50.write("");
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter((java.io.Writer) printWriter50, true);
        printWriter50.print("hi!");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(methodVisitor49);
        org.junit.Assert.assertNotNull(printWriter50);
    }

    @Test
    public void test12883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12883");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 10);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitVarInsn(0, (int) (byte) 0);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(annotationVisitor78);
    }

    @Test
    public void test12884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12884");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label27 = null;
        int[] intArray34 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        aSMifierMethodVisitor16.visitLookupSwitchInsn(label27, intArray34, labelArray48);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) '4', (int) '#', label15, labelArray48);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label55, label56, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn((int) '4', (int) (short) 100);
        aSMifierMethodVisitor0.visitMaxs(1, (int) '#');
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label66);
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = annotationVisitor71.visitAnnotation("", "hi!");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor71);
        org.junit.Assert.assertNotNull(annotationVisitor74);
    }

    @Test
    public void test12885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12885");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 10, "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 1, "", true);
        org.junit.Assert.assertNotNull(annotationVisitor29);
    }

    @Test
    public void test12886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12886");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println();
        java.io.PrintWriter printWriter8 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter8);
        printWriter9.write("");
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        printWriter14.println((float) '#');
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.Writer) printWriter14, true);
        printWriter14.print((float) 1);
        printWriter14.write("", (int) (byte) 10, (-1));
        java.util.Locale locale25 = null;
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter30 = printWriter28.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter30);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor31.visitAnnotation("hi!", true);
        java.lang.String[] strArray40 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor31.visit(1, (int) (short) 10, "hi!", "", "", strArray40);
        java.io.PrintWriter printWriter42 = printWriter14.format(locale25, "hi!", (java.lang.Object[]) strArray40);
        java.io.PrintWriter printWriter43 = printWriter9.format("", (java.lang.Object[]) strArray40);
        printWriter43.print((long) (-1));
        org.junit.Assert.assertNotNull(printWriter8);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(printWriter43);
    }

    @Test
    public void test12887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12887");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        java.io.PrintWriter printWriter36 = printWriter24.append((java.lang.CharSequence) "");
        printWriter36.print("");
        java.io.PrintWriter printWriter40 = printWriter36.append((java.lang.CharSequence) "");
        printWriter36.println((float) 100L);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter("hi!");
        printWriter45.write((-1));
        printWriter45.flush();
        java.util.Locale locale49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray56 = null;
        aSMifierMethodVisitor51.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray54, (int) (short) 1, objArray56);
        java.io.PrintWriter printWriter58 = printWriter45.printf(locale49, "", (java.lang.Object[]) strArray54);
        java.io.PrintWriter printWriter59 = printWriter36.printf("hi!", (java.lang.Object[]) strArray54);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor60 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter59);
        java.io.PrintWriter printWriter66 = new java.io.PrintWriter("hi!");
        printWriter66.print((java.lang.Object) (short) -1);
        printWriter66.flush();
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter((java.io.Writer) printWriter66);
        printWriter66.println((float) 10);
        org.mockito.asm.FieldVisitor fieldVisitor73 = aSMifierClassVisitor60.visitField((int) (short) 100, "", "", "hi!", (java.lang.Object) 10);
        java.io.PrintWriter printWriter80 = new java.io.PrintWriter("hi!");
        printWriter80.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray84 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter85 = printWriter80.format("", (java.lang.Object[]) strArray84);
        aSMifierClassVisitor60.visit((int) '4', (int) '#', "hi!", "hi!", "hi!", strArray84);
        aSMifierClassVisitor60.visitOuterClass("", "hi!", "");
        org.mockito.asm.Attribute attribute91 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor60.visitAttribute(attribute91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(fieldVisitor73);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter85);
    }

    @Test
    public void test12888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12888");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitSource("", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitLdcInsn((java.lang.Object) (short) 100);
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor42.visitTryCatchBlock(label45, label46, label47, "hi!");
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor42.visitLineNumber((int) (byte) 0, label51);
        org.mockito.asm.FieldVisitor fieldVisitor53 = aSMifierClassVisitor28.visitField(100, "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierClassVisitor28.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierClassVisitor28.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(fieldVisitor53);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(annotationVisitor59);
    }

    @Test
    public void test12889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12889");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label18);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        java.util.Locale locale22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray27 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray29 = null;
        aSMifierMethodVisitor24.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray27, (int) (short) 1, objArray29);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray41 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray43 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor32, strArray41, 1.0f };
        java.io.PrintWriter printWriter44 = printWriter21.printf(locale22, "", (java.lang.Object[]) strArray41);
        boolean boolean45 = printWriter21.checkError();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) boolean45);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, (-1));
        aSMifierMethodVisitor0.visitMaxs((int) (short) 1, (int) (short) 0);
        java.lang.Class<?> wildcardClass53 = aSMifierMethodVisitor0.getClass();
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test12890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12890");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append((java.lang.CharSequence) "hi!");
        printWriter24.print(false);
        java.util.Locale locale31 = null;
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter38 = printWriter34.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj49 = null;
        aSMifierMethodVisitor40.visitLdcInsn(obj49);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor40.visitJumpInsn((int) (short) 1, label52);
        aSMifierMethodVisitor40.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor40.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label59, labelArray60);
        java.io.PrintWriter printWriter62 = printWriter38.printf("", (java.lang.Object[]) labelArray60);
        java.io.PrintWriter printWriter63 = printWriter24.printf(locale31, "hi!", (java.lang.Object[]) labelArray60);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor64.visitMaxs(100, (int) (short) -1);
        java.util.List list76 = aSMifierMethodVisitor64.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = aSMifierMethodVisitor64.visitAnnotationDefault();
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label78, label79, label80, "");
        printWriter63.print((java.lang.Object) "");
        printWriter63.println((long) (short) 0);
        printWriter63.print(0L);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(list76);
        org.junit.Assert.assertNotNull(annotationVisitor77);
    }

    @Test
    public void test12891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12891");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        java.io.PrintWriter printWriter7 = printWriter1.append('#');
        printWriter7.print((long) 0);
        printWriter7.println((int) (byte) -1);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        printWriter13.print(false);
        java.io.PrintWriter printWriter17 = printWriter13.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.Writer) printWriter13);
        printWriter18.println();
        printWriter18.write("hi!");
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter27 = printWriter23.append((java.lang.CharSequence) "");
        printWriter23.print((double) 1);
        java.io.PrintWriter printWriter31 = printWriter23.append((java.lang.CharSequence) "hi!");
        printWriter23.write((int) (short) 1);
        printWriter23.write(0);
        java.io.PrintWriter printWriter37 = printWriter23.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        java.util.Locale locale40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray47 = null;
        aSMifierMethodVisitor42.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray45, (int) (short) 1, objArray47);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor50.visitTryCatchBlock(label51, label52, label53, "");
        aSMifierMethodVisitor50.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray59 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray61 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor50, strArray59, 1.0f };
        java.io.PrintWriter printWriter62 = printWriter39.printf(locale40, "", (java.lang.Object[]) strArray59);
        char[] charArray69 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter62.println(charArray69);
        char[] charArray71 = new char[] {};
        printWriter62.print(charArray71);
        printWriter23.print(charArray71);
        printWriter18.println(charArray71);
        printWriter7.write(charArray71, 0, (int) (byte) 0);
        java.io.PrintWriter printWriter78 = new java.io.PrintWriter((java.io.Writer) printWriter7);
        java.lang.Object obj79 = null;
        printWriter7.print(obj79);
        java.io.PrintWriter printWriter82 = printWriter7.append((java.lang.CharSequence) "");
        org.junit.Assert.assertNotNull(printWriter7);
        org.junit.Assert.assertNotNull(printWriter17);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[]");
        org.junit.Assert.assertNotNull(printWriter82);
    }

    @Test
    public void test12892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12892");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        printWriter34.println("");
        java.io.PrintWriter printWriter40 = printWriter34.append((java.lang.CharSequence) "");
        printWriter40.print(true);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(printWriter40);
    }

    @Test
    public void test12893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12893");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", false);
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter("hi!");
        printWriter20.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter24 = printWriter20.append((java.lang.CharSequence) "");
        printWriter24.close();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter24);
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label28);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitTypeInsn(10, "");
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor0.visitLineNumber((-1), label37);
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor0.visitLineNumber(0, label40);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 10, "", "hi!", "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) '#');
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test12894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12894");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.print('a');
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter33 = printWriter31.append('a');
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter((java.io.Writer) printWriter33, true);
        printWriter33.println(10);
        printWriter33.close();
        java.io.PrintWriter printWriter42 = printWriter33.append((java.lang.CharSequence) "", 0, 0);
        printWriter33.print((long) (short) 1);
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        java.util.Locale locale47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray54 = null;
        aSMifierMethodVisitor49.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray52, (int) (short) 1, objArray54);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor57.visitTryCatchBlock(label58, label59, label60, "");
        aSMifierMethodVisitor57.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray66 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray68 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor57, strArray66, 1.0f };
        java.io.PrintWriter printWriter69 = printWriter46.printf(locale47, "", (java.lang.Object[]) strArray66);
        printWriter69.println((int) (short) 10);
        printWriter69.print('#');
        java.io.PrintWriter printWriter75 = printWriter69.append((java.lang.CharSequence) "");
        printWriter69.println(0);
        java.io.PrintWriter printWriter79 = new java.io.PrintWriter((java.io.Writer) printWriter69, false);
        printWriter79.print((float) 10);
        char[] charArray82 = new char[] {};
        printWriter79.write(charArray82);
        printWriter33.println(charArray82);
        printWriter24.print(charArray82);
        printWriter24.print(' ');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[]");
    }

    @Test
    public void test12895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12895");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 100, label61);
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter66 = printWriter64.append('a');
        java.io.PrintWriter printWriter68 = new java.io.PrintWriter((java.io.Writer) printWriter66, true);
        printWriter66.println(10);
        aSMifierMethodVisitor0.print(printWriter66);
        printWriter66.print("hi!");
        java.io.PrintWriter printWriter75 = new java.io.PrintWriter((java.io.Writer) printWriter66, false);
        boolean boolean76 = printWriter75.checkError();
        printWriter75.println('#');
        printWriter75.print((double) 0.0f);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test12896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12896");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter31.format("", (java.lang.Object[]) strArray35);
        aSMifierClassVisitor15.visit((int) (byte) -1, (int) (short) 0, "", "", "hi!", strArray35);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.write((-1));
        printWriter43.flush();
        java.util.Locale locale47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray54 = null;
        aSMifierMethodVisitor49.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray52, (int) (short) 1, objArray54);
        java.io.PrintWriter printWriter56 = printWriter43.printf(locale47, "", (java.lang.Object[]) strArray52);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor57 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter43);
        aSMifierClassVisitor57.visitEnd();
        aSMifierClassVisitor57.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor57.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierClassVisitor57.visitAnnotation("hi!", false);
        aSMifierClassVisitor57.visitEnd();
        java.lang.String[] strArray72 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        org.mockito.asm.MethodVisitor methodVisitor73 = aSMifierClassVisitor57.visitMethod(0, "", "hi!", "hi!", strArray72);
        org.mockito.asm.MethodVisitor methodVisitor74 = aSMifierClassVisitor15.visitMethod((int) (byte) 100, "", "hi!", "", strArray72);
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "");
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(methodVisitor73);
        org.junit.Assert.assertNotNull(methodVisitor74);
    }

    @Test
    public void test12897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12897");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitSource("hi!", "");
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.write((-1));
        printWriter39.flush();
        java.util.Locale locale43 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray50 = null;
        aSMifierMethodVisitor45.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray48, (int) (short) 1, objArray50);
        java.io.PrintWriter printWriter52 = printWriter39.printf(locale43, "", (java.lang.Object[]) strArray48);
        org.mockito.asm.MethodVisitor methodVisitor53 = aSMifierClassVisitor15.visitMethod((int) (byte) 0, "", "", "hi!", strArray48);
        aSMifierClassVisitor15.visitSource("hi!", "");
        aSMifierClassVisitor15.visitInnerClass("hi!", "hi!", "hi!", (int) '4');
        org.mockito.asm.Attribute attribute62 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor15.visitAttribute(attribute62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(methodVisitor53);
    }

    @Test
    public void test12898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12898");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print(false);
        printWriter39.println(false);
        printWriter39.print(0L);
        java.io.PrintWriter printWriter47 = printWriter39.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("hi!");
        printWriter50.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter55 = printWriter50.format("", (java.lang.Object[]) strArray54);
        java.io.PrintWriter printWriter56 = printWriter39.printf("hi!", (java.lang.Object[]) strArray54);
        aSMifierClassVisitor28.visit((int) ' ', (int) '#', "", "", "hi!", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierClassVisitor28.visitAnnotation("", false);
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitInnerClass("hi!", "hi!", "hi!", 10);
        aSMifierClassVisitor28.visitOuterClass("hi!", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierClassVisitor28.visitAnnotation("", true);
        java.lang.Class<?> wildcardClass74 = annotationVisitor73.getClass();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test12899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12899");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitIincInsn((int) '#', (int) (short) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 0, "hi!", true);
        annotationVisitor22.visitEnum("", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test12900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12900");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter34.print((float) (byte) 10);
        printWriter34.println((float) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray44 = null;
        aSMifierMethodVisitor39.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray42, (int) (short) 1, objArray44);
        aSMifierMethodVisitor39.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor39.visitLdcInsn((java.lang.Object) ' ');
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor39.visitLineNumber((int) (short) 0, label54);
        printWriter34.println((java.lang.Object) (short) 0);
        printWriter34.println((double) (byte) 0);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter34);
        printWriter34.println(true);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(strArray42);
    }

    @Test
    public void test12901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12901");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.write((-1));
        printWriter22.flush();
        java.util.Locale locale26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray31 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray33 = null;
        aSMifierMethodVisitor28.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray31, (int) (short) 1, objArray33);
        java.io.PrintWriter printWriter35 = printWriter22.printf(locale26, "", (java.lang.Object[]) strArray31);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter22);
        aSMifierClassVisitor36.visitEnd();
        aSMifierClassVisitor36.visitSource("", "hi!");
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor36.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray46);
        org.mockito.asm.MethodVisitor methodVisitor48 = aSMifierClassVisitor15.visitMethod((int) (short) 100, "hi!", "hi!", "", strArray46);
        aSMifierClassVisitor15.visitInnerClass("", "", "", (int) (short) 100);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (short) 10);
        org.mockito.asm.Attribute attribute59 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor15.visitAttribute(attribute59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodVisitor48);
    }

    @Test
    public void test12902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12902");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((int) (byte) -1);
        printWriter1.print((double) (byte) 1);
        printWriter1.close();
        java.util.Locale locale11 = null;
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        printWriter14.print(false);
        java.io.PrintWriter printWriter18 = printWriter14.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor20.visitJumpInsn((int) (short) 1, label32);
        aSMifierMethodVisitor20.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor20.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor20.visitAnnotationDefault();
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("hi!");
        printWriter44.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor48.visitTryCatchBlock(label49, label50, label51, "");
        aSMifierMethodVisitor48.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label[] labelArray61 = new org.mockito.asm.Label[] { label60 };
        aSMifierMethodVisitor48.visitTableSwitchInsn(0, (int) (byte) 10, label59, labelArray61);
        java.io.PrintWriter printWriter63 = printWriter44.printf("hi!", (java.lang.Object[]) labelArray61);
        java.lang.String[] strArray65 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor20.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray61, 1, (java.lang.Object[]) strArray65);
        java.io.PrintWriter printWriter67 = printWriter14.format("hi!", (java.lang.Object[]) strArray65);
        java.util.Locale locale68 = null;
        java.lang.String[] strArray70 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter71 = printWriter14.format(locale68, "hi!", (java.lang.Object[]) strArray70);
        java.io.PrintWriter printWriter72 = printWriter1.printf(locale11, "", (java.lang.Object[]) strArray70);
        printWriter1.println("");
        printWriter1.print((long) '#');
        printWriter1.println("");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(labelArray61);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(printWriter72);
    }

    @Test
    public void test12903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12903");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 10, "hi!");
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitJumpInsn(0, label17);
        aSMifierMethodVisitor0.visitMaxs(0, 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 100, label24);
        aSMifierMethodVisitor0.visitMaxs(10, (int) (byte) 1);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 10, 1);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test12904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12904");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println((-1.0d));
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter("hi!");
        printWriter5.print(false);
        java.io.PrintWriter printWriter9 = printWriter5.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter5.println((double) (-1L));
        java.util.Locale locale13 = null;
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((java.lang.Object) (short) -1);
        printWriter16.flush();
        java.util.Locale locale20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor22.visitLocalVariable("hi!", "hi!", "hi!", label31, label32, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor22.visitAnnotation("", true);
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label50 = null;
        int[] intArray57 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label50, intArray57, labelArray71);
        org.mockito.asm.Label[] labelArray74 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label38, intArray57, labelArray74);
        java.io.PrintWriter printWriter76 = printWriter16.format(locale20, "hi!", (java.lang.Object[]) labelArray74);
        java.io.PrintWriter printWriter77 = printWriter5.format(locale13, "hi!", (java.lang.Object[]) labelArray74);
        printWriter1.println((java.lang.Object) printWriter5);
        printWriter1.print((long) (short) 100);
        printWriter1.print((int) (byte) -1);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(labelArray74);
        org.junit.Assert.assertNotNull(printWriter76);
        org.junit.Assert.assertNotNull(printWriter77);
    }

    @Test
    public void test12905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12905");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((int) (byte) -1);
        printWriter1.print((double) (byte) 1);
        printWriter1.close();
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter11.println();
        java.io.PrintWriter printWriter14 = printWriter11.append('#');
        printWriter14.print(10.0d);
        printWriter14.println(true);
        printWriter14.println(0.0f);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter14);
    }

    @Test
    public void test12906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12906");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitSource("", "");
        aSMifierClassVisitor28.visitInnerClass("", "", "", 0);
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
    }

    @Test
    public void test12907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12907");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMaxs((int) (short) -1, (int) (short) 100);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label19);
        aSMifierMethodVisitor0.visitIincInsn(10, (int) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray31 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray33 = null;
        aSMifierMethodVisitor28.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray31, (int) (short) 1, objArray33);
        aSMifierMethodVisitor28.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor28.visitEnd();
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor28.visitLocalVariable("", "hi!", "hi!", label44, label45, (int) 'a');
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label48, label49, label50, "hi!");
        aSMifierMethodVisitor28.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor28);
        aSMifierMethodVisitor28.visitMethodInsn((int) (byte) 1, "", "", "");
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(strArray31);
    }

    @Test
    public void test12908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12908");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter("hi!");
        java.util.Locale locale62 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray67 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray69 = null;
        aSMifierMethodVisitor64.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray67, (int) (short) 1, objArray69);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor72 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        aSMifierMethodVisitor72.visitTryCatchBlock(label73, label74, label75, "");
        aSMifierMethodVisitor72.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray81 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray83 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor72, strArray81, 1.0f };
        java.io.PrintWriter printWriter84 = printWriter61.printf(locale62, "", (java.lang.Object[]) strArray81);
        char[] charArray91 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter84.println(charArray91);
        annotationVisitor58.visit("", (java.lang.Object) printWriter84);
        char[] charArray94 = new char[] {};
        printWriter84.print(charArray94);
        boolean boolean96 = printWriter84.checkError();
        printWriter84.println(0.0f);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray94);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray94), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray94), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray94), "[]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test12909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12909");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label28, label29, (int) (short) 1);
        aSMifierMethodVisitor0.visitIntInsn((int) '#', (int) 'a');
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label35, label36, label37, "hi!");
        java.util.List list40 = aSMifierMethodVisitor0.getText();
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        printWriter42.print((java.lang.Object) (short) -1);
        printWriter42.flush();
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter((java.io.Writer) printWriter42);
        printWriter42.println((float) 10);
        aSMifierMethodVisitor0.print(printWriter42);
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 10, (int) 'a');
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label53, label54, label55, "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(list40);
    }

    @Test
    public void test12910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12910");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter24 = printWriter22.append('a');
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter24);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) '#');
        java.util.List list30 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "hi!", true);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor34);
    }

    @Test
    public void test12911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12911");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitInsn((int) (byte) 100);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitVarInsn((int) '4', (int) (byte) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor19.visitTryCatchBlock(label20, label21, label22, "");
        aSMifierMethodVisitor19.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj28 = null;
        aSMifierMethodVisitor19.visitLdcInsn(obj28);
        aSMifierMethodVisitor19.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list32 = aSMifierMethodVisitor19.getText();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor19.visitLocalVariable("", "", "hi!", label36, label37, 1);
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor43.visitTryCatchBlock(label44, label45, label46, "");
        aSMifierMethodVisitor43.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj52 = null;
        aSMifierMethodVisitor43.visitLdcInsn(obj52);
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor43.visitJumpInsn((int) (short) 1, label55);
        java.util.List list57 = aSMifierMethodVisitor43.getText();
        aSMifierMethodVisitor43.visitMaxs((int) (short) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor43.visitAnnotation("", true);
        java.lang.Object obj64 = null;
        aSMifierMethodVisitor43.visitLdcInsn(obj64);
        aSMifierMethodVisitor43.visitFieldInsn((int) 'a', "hi!", "", "");
        org.mockito.asm.Label label73 = null;
        java.io.PrintWriter printWriter75 = new java.io.PrintWriter("hi!");
        printWriter75.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor79 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        aSMifierMethodVisitor79.visitTryCatchBlock(label80, label81, label82, "");
        aSMifierMethodVisitor79.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label90 = null;
        org.mockito.asm.Label label91 = null;
        org.mockito.asm.Label[] labelArray92 = new org.mockito.asm.Label[] { label91 };
        aSMifierMethodVisitor79.visitTableSwitchInsn(0, (int) (byte) 10, label90, labelArray92);
        java.io.PrintWriter printWriter94 = printWriter75.printf("hi!", (java.lang.Object[]) labelArray92);
        aSMifierMethodVisitor43.visitTableSwitchInsn((int) (short) 100, (int) (short) 1, label73, labelArray92);
        aSMifierMethodVisitor19.visitTableSwitchInsn(0, (int) (short) 10, label42, labelArray92);
        java.lang.Object[] objArray98 = null;
        aSMifierMethodVisitor0.visitFrame((int) (byte) 10, 100, (java.lang.Object[]) labelArray92, (int) (short) -1, objArray98);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(labelArray92);
        org.junit.Assert.assertNotNull(printWriter94);
    }

    @Test
    public void test12912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12912");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        java.util.Locale locale13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray20 = null;
        aSMifierMethodVisitor15.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray18, (int) (short) 1, objArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor23, strArray32, 1.0f };
        java.io.PrintWriter printWriter35 = printWriter12.printf(locale13, "", (java.lang.Object[]) strArray32);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, true);
        printWriter8.println((java.lang.Object) printWriter37);
        printWriter8.print((double) 'a');
        printWriter8.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor43 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter8);
        aSMifierClassVisitor43.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor43.visitInnerClass("hi!", "", "", 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor57.visitTryCatchBlock(label58, label59, label60, "");
        aSMifierMethodVisitor57.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor57.visitMaxs(100, (int) (short) -1);
        aSMifierMethodVisitor57.visitIincInsn((int) (short) 0, (-1));
        aSMifierMethodVisitor57.visitEnd();
        aSMifierMethodVisitor57.visitVarInsn((int) 'a', (int) (byte) 10);
        org.mockito.asm.FieldVisitor fieldVisitor76 = aSMifierClassVisitor43.visitField((int) (byte) 10, "hi!", "hi!", "", (java.lang.Object) (byte) 10);
        aSMifierClassVisitor43.visitOuterClass("hi!", "", "hi!");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(fieldVisitor76);
    }

    @Test
    public void test12913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12913");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label70, label71, (int) (short) 10);
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label77, label78, (int) '#');
        aSMifierMethodVisitor0.visitVarInsn((int) ' ', (int) (byte) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor86 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) -1);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 10);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 10);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor86);
    }

    @Test
    public void test12914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12914");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor39.visitJumpInsn((int) (short) 1, label51);
        aSMifierMethodVisitor39.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor39.visitLineNumber((int) (short) 0, label57);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor39.visitAnnotation("", true);
        org.mockito.asm.FieldVisitor fieldVisitor62 = aSMifierClassVisitor15.visitField((int) (short) 100, "", "hi!", "", (java.lang.Object) annotationVisitor61);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "hi!", 0);
        aSMifierClassVisitor15.visitOuterClass("hi!", "hi!", "");
        aSMifierClassVisitor15.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor62);
    }

    @Test
    public void test12915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12915");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor24.visitLocalVariable("hi!", "hi!", "hi!", label33, label34, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor24.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor24.visitAnnotationDefault();
        annotationVisitor40.visitEnum("", "hi!", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor45 = aSMifierClassVisitor15.visitField((int) '#', "", "", "", (java.lang.Object) "hi!");
        aSMifierClassVisitor15.visitOuterClass("", "", "");
        aSMifierClassVisitor15.visitOuterClass("", "", "");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor45);
    }

    @Test
    public void test12916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12916");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter1.write((int) (short) 1);
        printWriter1.write(0);
        java.io.PrintWriter printWriter15 = printWriter1.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("hi!");
        java.util.Locale locale18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray23 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray25 = null;
        aSMifierMethodVisitor20.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray23, (int) (short) 1, objArray25);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray37 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray39 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor28, strArray37, 1.0f };
        java.io.PrintWriter printWriter40 = printWriter17.printf(locale18, "", (java.lang.Object[]) strArray37);
        char[] charArray47 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter40.println(charArray47);
        char[] charArray49 = new char[] {};
        printWriter40.print(charArray49);
        printWriter1.print(charArray49);
        java.io.PrintWriter printWriter53 = printWriter1.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.flush();
        printWriter1.flush();
        printWriter1.println(false);
        printWriter1.print("");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[]");
        org.junit.Assert.assertNotNull(printWriter53);
    }

    @Test
    public void test12917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12917");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label26);
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 10, (int) (short) 0);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        printWriter32.println((-1.0d));
        java.io.PrintWriter printWriter36 = printWriter32.append((java.lang.CharSequence) "");
        printWriter36.println('4');
        aSMifierMethodVisitor0.print(printWriter36);
        printWriter36.println((double) (byte) 100);
        java.io.PrintWriter printWriter43 = printWriter36.append((java.lang.CharSequence) "hi!");
        printWriter43.print("hi!");
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(printWriter43);
    }

    @Test
    public void test12918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12918");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitInsn(10);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("hi!");
        printWriter17.print(false);
        printWriter17.println(false);
        java.io.PrintWriter printWriter23 = printWriter17.append('#');
        printWriter23.print((long) 0);
        printWriter23.println((int) (byte) -1);
        printWriter23.print(true);
        aSMifierMethodVisitor0.print(printWriter23);
        printWriter23.print((double) (byte) 100);
        printWriter23.print((float) (short) 1);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(printWriter23);
    }

    @Test
    public void test12919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12919");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = printWriter1.append((java.lang.CharSequence) "");
        printWriter22.println(1);
        java.io.PrintWriter printWriter26 = printWriter22.append('a');
        printWriter26.write("hi!");
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter26);
    }

    @Test
    public void test12920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12920");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter16 = printWriter12.append((java.lang.CharSequence) "");
        printWriter8.println((java.lang.Object) printWriter16);
        printWriter16.print((long) (byte) 10);
        printWriter16.println(10.0d);
        printWriter16.print((double) 0);
        printWriter16.println((long) (short) 100);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter16);
    }

    @Test
    public void test12921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12921");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (short) -1);
        java.lang.String[] strArray36 = org.mockito.asm.util.AbstractVisitor.TYPES;
        org.mockito.asm.MethodVisitor methodVisitor37 = aSMifierClassVisitor15.visitMethod(1, "hi!", "hi!", "", strArray36);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter47 = printWriter43.append((java.lang.CharSequence) "");
        printWriter43.print((int) (byte) -1);
        printWriter43.print((double) (byte) 1);
        printWriter43.close();
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter((java.io.Writer) printWriter43);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor54 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter43);
        org.mockito.asm.FieldVisitor fieldVisitor55 = aSMifierClassVisitor15.visitField((int) (byte) -1, "", "", "hi!", (java.lang.Object) aSMifierClassVisitor54);
        java.util.List list56 = aSMifierClassVisitor15.getText();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodVisitor37);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(fieldVisitor55);
        org.junit.Assert.assertNotNull(list56);
    }

    @Test
    public void test12922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12922");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '#', label21);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLabel(label30);
        java.util.List list32 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 100, "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(list32);
    }

    @Test
    public void test12923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12923");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        java.util.List list12 = aSMifierMethodVisitor0.getText();
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        java.util.Locale locale15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray20 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray22 = null;
        aSMifierMethodVisitor17.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray20, (int) (short) 1, objArray22);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor25.visitTryCatchBlock(label26, label27, label28, "");
        aSMifierMethodVisitor25.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray34 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray36 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor25, strArray34, 1.0f };
        java.io.PrintWriter printWriter37 = printWriter14.printf(locale15, "", (java.lang.Object[]) strArray34);
        char[] charArray44 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter37.println(charArray44);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.Writer) printWriter37, true);
        java.io.PrintWriter printWriter49 = printWriter37.append((java.lang.CharSequence) "");
        printWriter37.println(false);
        aSMifierMethodVisitor0.print(printWriter37);
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label59, label60, 10);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) (short) 100);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(annotationVisitor55);
    }

    @Test
    public void test12924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12924");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        aSMifierMethodVisitor6.visitTryCatchBlock(label7, label8, label9, "");
        aSMifierMethodVisitor6.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj15 = null;
        aSMifierMethodVisitor6.visitLdcInsn(obj15);
        aSMifierMethodVisitor6.visitInsn((int) ' ');
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj31 = null;
        aSMifierMethodVisitor22.visitLdcInsn(obj31);
        org.mockito.asm.Label label33 = null;
        int[] intArray40 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label[] labelArray54 = new org.mockito.asm.Label[] { label53 };
        aSMifierMethodVisitor41.visitTableSwitchInsn(0, (int) (byte) 10, label52, labelArray54);
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label33, intArray40, labelArray54);
        aSMifierMethodVisitor6.visitTableSwitchInsn((int) '4', (int) '#', label21, labelArray54);
        java.io.PrintWriter printWriter58 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray54);
        boolean boolean59 = printWriter58.checkError();
        printWriter58.write("");
        java.lang.CharSequence charSequence62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter65 = printWriter58.append(charSequence62, 10, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray54);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test12925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12925");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 10, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) 'a', (int) (short) 0);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) -1, label20);
        aSMifierMethodVisitor0.visitMaxs(10, (int) '4');
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitJumpInsn(0, label26);
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test12926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12926");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "", "");
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray28 = null;
        org.mockito.asm.MethodVisitor methodVisitor29 = aSMifierClassVisitor15.visitMethod((-1), "", "hi!", "", strArray28);
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "");
        aSMifierClassVisitor15.visitOuterClass("hi!", "hi!", "hi!");
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "hi!", 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierClassVisitor15.visitAnnotation("", false);
        aSMifierClassVisitor15.visitSource("hi!", "");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(methodVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor45);
    }

    @Test
    public void test12927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12927");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        char[] charArray56 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter49.println(charArray56);
        printWriter24.print(charArray56);
        printWriter24.print(true);
        java.io.PrintWriter printWriter62 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter64 = printWriter24.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor65 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter64);
        printWriter64.close();
        printWriter64.println((int) (short) 10);
        boolean boolean69 = printWriter64.checkError();
        printWriter64.write("");
        printWriter64.println(0L);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test12928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12928");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.print('a');
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter28.flush();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter((java.io.Writer) printWriter28, true);
        printWriter32.println();
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter((java.io.Writer) printWriter32, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter32);
        aSMifierClassVisitor36.visitOuterClass("hi!", "", "");
        aSMifierClassVisitor36.visitEnd();
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter("hi!");
        printWriter47.write((-1));
        printWriter47.flush();
        java.util.Locale locale51 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray56 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray58 = null;
        aSMifierMethodVisitor53.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray56, (int) (short) 1, objArray58);
        java.io.PrintWriter printWriter60 = printWriter47.printf(locale51, "", (java.lang.Object[]) strArray56);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor61 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter47);
        aSMifierClassVisitor61.visitEnd();
        aSMifierClassVisitor61.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor61.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = aSMifierClassVisitor61.visitAnnotation("hi!", false);
        aSMifierClassVisitor61.visitEnd();
        java.lang.String[] strArray76 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        org.mockito.asm.MethodVisitor methodVisitor77 = aSMifierClassVisitor61.visitMethod(0, "", "hi!", "hi!", strArray76);
        org.mockito.asm.MethodVisitor methodVisitor78 = aSMifierClassVisitor36.visitMethod((int) '4', "", "", "hi!", strArray76);
        java.io.PrintWriter printWriter80 = new java.io.PrintWriter("hi!");
        printWriter80.print(false);
        java.io.PrintWriter printWriter84 = printWriter80.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter86 = new java.io.PrintWriter((java.io.Writer) printWriter84, true);
        java.io.PrintWriter printWriter87 = new java.io.PrintWriter((java.io.Writer) printWriter84);
        printWriter87.println((float) (short) 10);
        aSMifierClassVisitor36.print(printWriter87);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(methodVisitor77);
        org.junit.Assert.assertNotNull(methodVisitor78);
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test12929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12929");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("hi!");
        printWriter2.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter6 = printWriter2.append((java.lang.CharSequence) "");
        printWriter2.print((int) (byte) -1);
        printWriter2.write("", (int) (byte) 1, (int) (short) 0);
        printWriter2.print((double) (byte) -1);
        aSMifierMethodVisitor0.print(printWriter2);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "");
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitLabel(label19);
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) 'a');
        aSMifierMethodVisitor0.visitMaxs(0, 0);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) ' ', label34);
        org.junit.Assert.assertNotNull(printWriter6);
    }

    @Test
    public void test12930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12930");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 10, "hi!");
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 0, label26);
        java.util.List list28 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "hi!", "hi!", "hi!");
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) ' ', label35);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label37, label38, label39, "");
        org.mockito.asm.Label label43 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitJumpInsn((int) (byte) -1, label43);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list28);
    }

    @Test
    public void test12931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12931");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.junit.Assert.assertNotNull(annotationVisitor30);
    }

    @Test
    public void test12932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12932");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        aSMifierMethodVisitor24.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj33 = null;
        aSMifierMethodVisitor24.visitLdcInsn(obj33);
        aSMifierMethodVisitor24.visitInsn((int) ' ');
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor24.visitJumpInsn(100, label38);
        aSMifierMethodVisitor24.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label43 = null;
        int[] intArray44 = new int[] {};
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        printWriter46.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter50 = printWriter46.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor52.visitTryCatchBlock(label53, label54, label55, "");
        aSMifierMethodVisitor52.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj61 = null;
        aSMifierMethodVisitor52.visitLdcInsn(obj61);
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor52.visitJumpInsn((int) (short) 1, label64);
        aSMifierMethodVisitor52.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label[] labelArray72 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor52.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label71, labelArray72);
        java.io.PrintWriter printWriter74 = printWriter50.printf("", (java.lang.Object[]) labelArray72);
        aSMifierMethodVisitor24.visitLookupSwitchInsn(label43, intArray44, labelArray72);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 100, (-1), label23, labelArray72);
        java.util.List list77 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitInsn((int) (byte) 100);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 1, "", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor89 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "hi!", true);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(labelArray72);
        org.junit.Assert.assertNotNull(printWriter74);
        org.junit.Assert.assertNotNull(list77);
        org.junit.Assert.assertNotNull(annotationVisitor78);
        org.junit.Assert.assertNotNull(annotationVisitor89);
    }

    @Test
    public void test12933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12933");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("hi!");
        printWriter2.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter6 = printWriter2.append((java.lang.CharSequence) "");
        printWriter2.print((int) (byte) -1);
        printWriter2.write("", (int) (byte) 1, (int) (short) 0);
        printWriter2.print((double) (byte) -1);
        aSMifierMethodVisitor0.print(printWriter2);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "");
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitLabel(label19);
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) 'a');
        aSMifierMethodVisitor0.visitMaxs(0, 0);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) 'a');
        org.junit.Assert.assertNotNull(printWriter6);
    }

    @Test
    public void test12934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12934");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor25.visitTryCatchBlock(label26, label27, label28, "");
        aSMifierMethodVisitor25.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor25.visitJumpInsn(1, label35);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor25.visitParameterAnnotation((int) (byte) 0, "hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor15.visitField((int) (short) 10, "", "hi!", "hi!", (java.lang.Object) "hi!");
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierClassVisitor15.visitAnnotation("", true);
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierClassVisitor15.visitAnnotation("", true);
        aSMifierClassVisitor15.visitInnerClass("hi!", "", "hi!", (int) '#');
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor52);
    }

    @Test
    public void test12935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12935");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor16.visitJumpInsn((int) (short) 1, label28);
        aSMifierMethodVisitor16.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor16.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor16.visitAnnotationDefault();
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] { label56 };
        aSMifierMethodVisitor44.visitTableSwitchInsn(0, (int) (byte) 10, label55, labelArray57);
        java.io.PrintWriter printWriter59 = printWriter40.printf("hi!", (java.lang.Object[]) labelArray57);
        java.lang.String[] strArray61 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor16.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray57, 1, (java.lang.Object[]) strArray61);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 1, (int) (byte) 100, label15, labelArray57);
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 0, (int) '4');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 0);
        aSMifierMethodVisitor0.visitInsn(100);
        java.util.List list72 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(labelArray57);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(list72);
    }

    @Test
    public void test12936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12936");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, (int) (short) 10);
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label65);
        aSMifierMethodVisitor0.visitIincInsn((-1), 0);
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label70, label71, label72, "");
        aSMifierMethodVisitor0.visitInsn((int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.util.List list78 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitTypeInsn(100, "hi!");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor77);
        org.junit.Assert.assertNotNull(list78);
    }

    @Test
    public void test12937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12937");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = null;
        aSMifierMethodVisitor36.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray39, (int) (short) 1, objArray41);
        org.mockito.asm.MethodVisitor methodVisitor43 = aSMifierClassVisitor15.visitMethod((int) (short) 0, "", "", "hi!", strArray39);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        java.util.List list47 = aSMifierClassVisitor15.text;
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(list47);
    }

    @Test
    public void test12938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12938");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor14.visitFieldInsn((int) (byte) 0, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitMultiANewArrayInsn("", (int) (short) -1);
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor14.visitJumpInsn(0, label36);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor14.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor38);
    }

    @Test
    public void test12939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12939");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 100, (int) (byte) 10);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitInsn((int) (byte) 0);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) 'a', 100);
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 1, label30);
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (byte) 0);
        java.util.List list35 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 0, 0);
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label42, label43, (int) (byte) 0);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(list35);
    }

    @Test
    public void test12940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12940");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 0, label60);
        aSMifierMethodVisitor0.visitInsn(100);
        aSMifierMethodVisitor0.visitVarInsn(10, 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "", false);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor70);
    }

    @Test
    public void test12941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12941");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        printWriter8.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter12 = printWriter8.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor14.visitJumpInsn((int) (short) 1, label26);
        aSMifierMethodVisitor14.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label[] labelArray34 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor14.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label33, labelArray34);
        java.io.PrintWriter printWriter36 = printWriter12.printf("", (java.lang.Object[]) labelArray34);
        printWriter36.println('a');
        aSMifierMethodVisitor0.print(printWriter36);
        printWriter36.println((int) (byte) 100);
        printWriter36.print((long) ' ');
        printWriter36.write((int) 'a');
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter((java.io.Writer) printWriter36);
        boolean boolean47 = printWriter36.checkError();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(labelArray34);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test12942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12942");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.println(false);
        printWriter24.println(0);
        printWriter24.close();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor32 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor32.visitAnnotation("hi!", false);
        aSMifierClassVisitor32.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierClassVisitor32.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor41);
    }

    @Test
    public void test12943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12943");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        printWriter24.println(false);
        java.io.PrintWriter printWriter29 = printWriter24.append('4');
        printWriter29.print((double) (short) 100);
        printWriter29.flush();
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter38 = printWriter34.append((java.lang.CharSequence) "");
        printWriter34.print((int) (byte) -1);
        printWriter34.print((double) (byte) 1);
        printWriter34.close();
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        printWriter44.println();
        java.io.PrintWriter printWriter47 = printWriter44.append('#');
        java.io.PrintWriter printWriter49 = printWriter44.append((java.lang.CharSequence) "");
        printWriter29.print((java.lang.Object) printWriter49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor52.visitTryCatchBlock(label53, label54, label55, "");
        aSMifierMethodVisitor52.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj61 = null;
        aSMifierMethodVisitor52.visitLdcInsn(obj61);
        aSMifierMethodVisitor52.visitInsn((int) ' ');
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor52.visitJumpInsn(100, label66);
        aSMifierMethodVisitor52.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor52.visitCode();
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor52.visitJumpInsn((int) (short) 10, label73);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray80 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray82 = null;
        aSMifierMethodVisitor77.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray80, (int) (short) 1, objArray82);
        java.io.PrintWriter printWriter86 = new java.io.PrintWriter("hi!");
        printWriter86.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray90 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter91 = printWriter86.format("", (java.lang.Object[]) strArray90);
        aSMifierMethodVisitor52.visitFrame((int) '#', (int) '4', (java.lang.Object[]) strArray80, 0, (java.lang.Object[]) strArray90);
        java.io.PrintWriter printWriter93 = printWriter49.format("", (java.lang.Object[]) strArray80);
        java.io.PrintWriter printWriter95 = new java.io.PrintWriter((java.io.Writer) printWriter49, true);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(printWriter91);
        org.junit.Assert.assertNotNull(printWriter93);
    }

    @Test
    public void test12944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12944");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = printWriter1.append((java.lang.CharSequence) "");
        printWriter22.close();
        java.io.PrintWriter printWriter25 = printWriter22.append(' ');
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        java.util.Locale locale28 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray33 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray35 = null;
        aSMifierMethodVisitor30.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray33, (int) (short) 1, objArray35);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor38.visitTryCatchBlock(label39, label40, label41, "");
        aSMifierMethodVisitor38.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray47 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray49 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor38, strArray47, 1.0f };
        java.io.PrintWriter printWriter50 = printWriter27.printf(locale28, "", (java.lang.Object[]) strArray47);
        printWriter50.print('#');
        printWriter50.println(false);
        printWriter50.println(0);
        java.util.Locale locale57 = null;
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter("hi!");
        printWriter60.write((-1));
        printWriter60.flush();
        java.util.Locale locale64 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray69 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray71 = null;
        aSMifierMethodVisitor66.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray69, (int) (short) 1, objArray71);
        java.io.PrintWriter printWriter73 = printWriter60.printf(locale64, "", (java.lang.Object[]) strArray69);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor74 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter60);
        aSMifierClassVisitor74.visitEnd();
        aSMifierClassVisitor74.visitSource("", "hi!");
        java.lang.String[] strArray84 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor74.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray84);
        aSMifierClassVisitor74.visitInnerClass("", "hi!", "", (int) (short) -1);
        java.lang.String[] strArray95 = org.mockito.asm.util.AbstractVisitor.TYPES;
        org.mockito.asm.MethodVisitor methodVisitor96 = aSMifierClassVisitor74.visitMethod(1, "hi!", "hi!", "", strArray95);
        java.io.PrintWriter printWriter97 = printWriter50.printf(locale57, "hi!", (java.lang.Object[]) strArray95);
        printWriter25.println((java.lang.Object) printWriter50);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor99 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter25);
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertNotNull(methodVisitor96);
        org.junit.Assert.assertNotNull(printWriter97);
    }

    @Test
    public void test12945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12945");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, (-1));
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) 'a');
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (short) 0);
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label21, label22, label23, "hi!");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (short) 10);
        aSMifierMethodVisitor0.visitMethodInsn(0, "", "", "hi!");
    }

    @Test
    public void test12946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12946");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        java.util.Locale locale31 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray36 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray38 = null;
        aSMifierMethodVisitor33.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray36, (int) (short) 1, objArray38);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray50 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray52 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor41, strArray50, 1.0f };
        java.io.PrintWriter printWriter53 = printWriter30.printf(locale31, "", (java.lang.Object[]) strArray50);
        char[] charArray60 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter53.println(charArray60);
        printWriter28.print(charArray60);
        boolean boolean63 = printWriter28.checkError();
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter("hi!");
        printWriter65.write((-1));
        printWriter65.flush();
        java.util.Locale locale69 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor71 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray74 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray76 = null;
        aSMifierMethodVisitor71.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray74, (int) (short) 1, objArray76);
        java.io.PrintWriter printWriter78 = printWriter65.printf(locale69, "", (java.lang.Object[]) strArray74);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor79 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter65);
        aSMifierClassVisitor79.visitEnd();
        aSMifierClassVisitor79.visitSource("", "hi!");
        printWriter28.print((java.lang.Object) "");
        printWriter28.println((double) 0);
        java.io.PrintWriter printWriter88 = printWriter28.append((java.lang.CharSequence) "hi!");
        boolean boolean89 = printWriter88.checkError();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test12947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12947");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        printWriter12.println("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor18 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter12);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.write((-1));
        printWriter24.flush();
        java.util.Locale locale28 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray33 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray35 = null;
        aSMifierMethodVisitor30.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray33, (int) (short) 1, objArray35);
        java.io.PrintWriter printWriter37 = printWriter24.printf(locale28, "", (java.lang.Object[]) strArray33);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor38 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        aSMifierClassVisitor38.visitEnd();
        aSMifierClassVisitor38.visitSource("", "hi!");
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor38.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray48);
        org.mockito.asm.MethodVisitor methodVisitor50 = aSMifierClassVisitor18.visitMethod(0, "", "hi!", "hi!", strArray48);
        aSMifierClassVisitor18.visitInnerClass("", "", "hi!", (int) (byte) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor18.visitAnnotation("hi!", true);
        java.lang.String[] strArray64 = new java.lang.String[] { "" };
        org.mockito.asm.MethodVisitor methodVisitor65 = aSMifierClassVisitor18.visitMethod(100, "hi!", "hi!", "", strArray64);
        aSMifierClassVisitor18.visitEnd();
        aSMifierClassVisitor18.visitSource("hi!", "");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(methodVisitor50);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(methodVisitor65);
    }

    @Test
    public void test12948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12948");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter7.close();
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter7);
        printWriter7.print("hi!");
        printWriter7.print((long) (byte) -1);
        printWriter7.print((float) (-1L));
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter20 = printWriter18.append('a');
        printWriter18.print("hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj32 = null;
        aSMifierMethodVisitor23.visitLdcInsn(obj32);
        aSMifierMethodVisitor23.visitTypeInsn(0, "hi!");
        printWriter18.print((java.lang.Object) 0);
        printWriter18.println("");
        java.util.Locale locale40 = null;
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter45 = printWriter43.append('a');
        printWriter43.print("hi!");
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter((java.io.Writer) printWriter43, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor50 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter43);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter58 = printWriter56.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierClassVisitor59.visitAnnotation("hi!", true);
        java.lang.String[] strArray68 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor59.visit(1, (int) (short) 10, "hi!", "", "", strArray68);
        org.mockito.asm.MethodVisitor methodVisitor70 = aSMifierClassVisitor50.visitMethod(0, "", "hi!", "", strArray68);
        java.io.PrintWriter printWriter71 = printWriter18.format(locale40, "", (java.lang.Object[]) strArray68);
        java.io.PrintWriter printWriter72 = printWriter7.format("", (java.lang.Object[]) strArray68);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter45);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(methodVisitor70);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(printWriter72);
    }

    @Test
    public void test12949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12949");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, 0);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "hi!", "");
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label72);
        java.util.List list74 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label76, label77, label78, "hi!");
        aSMifierMethodVisitor0.visitVarInsn(1, (int) (byte) 100);
        aSMifierMethodVisitor0.visitVarInsn((int) '#', (int) (short) 1);
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 0, "hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(list74);
    }

    @Test
    public void test12950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12950");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "hi!", label24, label25, (int) '4');
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        java.util.Locale locale30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray37 = null;
        aSMifierMethodVisitor32.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray35, (int) (short) 1, objArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray49 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray51 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor40, strArray49, 1.0f };
        java.io.PrintWriter printWriter52 = printWriter29.printf(locale30, "", (java.lang.Object[]) strArray49);
        java.io.PrintWriter printWriter54 = printWriter52.append((java.lang.CharSequence) "");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter54);
        printWriter54.print("hi!");
        printWriter54.println(false);
        java.io.PrintWriter printWriter61 = printWriter54.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter62 = new java.io.PrintWriter((java.io.Writer) printWriter54);
        printWriter54.println(' ');
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(printWriter61);
    }

    @Test
    public void test12951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12951");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.println('a');
        printWriter8.println((double) 1);
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test12952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12952");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        java.util.List list22 = aSMifierClassVisitor15.getText();
        java.util.List list23 = aSMifierClassVisitor15.text;
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.write((-1));
        printWriter29.flush();
        java.util.Locale locale33 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray40 = null;
        aSMifierMethodVisitor35.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray38, (int) (short) 1, objArray40);
        java.io.PrintWriter printWriter42 = printWriter29.printf(locale33, "", (java.lang.Object[]) strArray38);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor43 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter29);
        aSMifierClassVisitor43.visitEnd();
        aSMifierClassVisitor43.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor52.visitTryCatchBlock(label53, label54, label55, "");
        org.mockito.asm.FieldVisitor fieldVisitor58 = aSMifierClassVisitor43.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor63.visitTryCatchBlock(label64, label65, label66, "");
        aSMifierMethodVisitor63.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj72 = null;
        aSMifierMethodVisitor63.visitLdcInsn(obj72);
        aSMifierMethodVisitor63.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list76 = aSMifierMethodVisitor63.getText();
        org.mockito.asm.FieldVisitor fieldVisitor77 = aSMifierClassVisitor43.visitField((int) (byte) -1, "", "", "", (java.lang.Object) list76);
        org.mockito.asm.FieldVisitor fieldVisitor78 = aSMifierClassVisitor15.visitField(10, "", "hi!", "", (java.lang.Object) aSMifierClassVisitor43);
        aSMifierClassVisitor15.visitInnerClass("hi!", "", "hi!", 100);
        aSMifierClassVisitor15.visitEnd();
        java.util.List list85 = aSMifierClassVisitor15.getText();
        java.lang.Class<?> wildcardClass86 = list85.getClass();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(list76);
        org.junit.Assert.assertNotNull(fieldVisitor77);
        org.junit.Assert.assertNotNull(fieldVisitor78);
        org.junit.Assert.assertNotNull(list85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test12953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12953");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label14);
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 0, "hi!", "", "hi!");
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label24, label25, (int) (byte) 100);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, (int) (byte) 10);
    }

    @Test
    public void test12954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12954");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 1, "hi!", true);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) ' ', label19);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        printWriter25.write((-1));
        printWriter25.flush();
        java.util.Locale locale29 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray34 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray36 = null;
        aSMifierMethodVisitor31.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray34, (int) (short) 1, objArray36);
        java.io.PrintWriter printWriter38 = printWriter25.printf(locale29, "", (java.lang.Object[]) strArray34);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor39 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter25);
        aSMifierClassVisitor39.visitEnd();
        aSMifierClassVisitor39.visitSource("", "hi!");
        java.lang.String[] strArray49 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor39.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray49);
        aSMifierClassVisitor39.visitInnerClass("", "hi!", "", (int) (byte) 0);
        java.lang.String[] strArray61 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor39.visit((int) (byte) -1, (int) ' ', "hi!", "", "", strArray61);
        aSMifierClassVisitor39.visitEnd();
        aSMifierClassVisitor39.visitInnerClass("hi!", "hi!", "hi!", (int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        aSMifierMethodVisitor0.visitInsn((int) (byte) 10);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray61);
    }

    @Test
    public void test12955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12955");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 1, label15);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) ' ', label18);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.write((-1));
        printWriter23.flush();
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        java.io.PrintWriter printWriter36 = printWriter23.printf(locale27, "", (java.lang.Object[]) strArray32);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        java.util.Locale locale40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray47 = null;
        aSMifierMethodVisitor42.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray45, (int) (short) 1, objArray47);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor50.visitTryCatchBlock(label51, label52, label53, "");
        aSMifierMethodVisitor50.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray59 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray61 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor50, strArray59, 1.0f };
        java.io.PrintWriter printWriter62 = printWriter39.printf(locale40, "", (java.lang.Object[]) strArray59);
        printWriter62.print("hi!");
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter62);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor66 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter65);
        aSMifierClassVisitor66.visitOuterClass("hi!", "hi!", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor75 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor75.visitTryCatchBlock(label76, label77, label78, "");
        org.mockito.asm.Label label84 = null;
        org.mockito.asm.Label label85 = null;
        aSMifierMethodVisitor75.visitLocalVariable("hi!", "hi!", "hi!", label84, label85, (int) (byte) 10);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter("hi!");
        printWriter89.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray93 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter94 = printWriter89.format("", (java.lang.Object[]) strArray93);
        aSMifierMethodVisitor75.visitLdcInsn((java.lang.Object) strArray93);
        org.mockito.asm.MethodVisitor methodVisitor96 = aSMifierClassVisitor66.visitMethod((int) 'a', "hi!", "hi!", "", strArray93);
        aSMifierMethodVisitor0.visitFrame((int) '4', 0, (java.lang.Object[]) strArray32, (int) (byte) 10, (java.lang.Object[]) strArray93);
        aSMifierMethodVisitor0.visitInsn((int) '#');
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(printWriter94);
        org.junit.Assert.assertNotNull(methodVisitor96);
    }

    @Test
    public void test12956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12956");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        printWriter27.print((java.lang.Object) (short) -1);
        printWriter27.flush();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter27);
        printWriter31.write("");
        org.mockito.asm.FieldVisitor fieldVisitor34 = aSMifierClassVisitor15.visitField(0, "", "", "hi!", (java.lang.Object) printWriter31);
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        java.util.Locale locale42 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray47 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray49 = null;
        aSMifierMethodVisitor44.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray47, (int) (short) 1, objArray49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor52.visitTryCatchBlock(label53, label54, label55, "");
        aSMifierMethodVisitor52.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray61 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray63 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor52, strArray61, 1.0f };
        java.io.PrintWriter printWriter64 = printWriter41.printf(locale42, "", (java.lang.Object[]) strArray61);
        char[] charArray71 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter64.println(charArray71);
        java.io.PrintWriter printWriter74 = new java.io.PrintWriter((java.io.Writer) printWriter64, true);
        boolean boolean75 = printWriter74.checkError();
        java.io.PrintWriter printWriter76 = new java.io.PrintWriter((java.io.Writer) printWriter74);
        printWriter74.println("");
        printWriter74.print((int) ' ');
        java.io.PrintWriter printWriter81 = new java.io.PrintWriter((java.io.Writer) printWriter74);
        printWriter81.close();
        org.mockito.asm.FieldVisitor fieldVisitor83 = aSMifierClassVisitor15.visitField((int) (short) 100, "hi!", "hi!", "hi!", (java.lang.Object) printWriter81);
        org.mockito.asm.Attribute attribute84 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor83.visitAttribute(attribute84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor34);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(fieldVisitor83);
    }

    @Test
    public void test12957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12957");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        fieldVisitor30.visitEnd();
        fieldVisitor30.visitEnd();
        org.mockito.asm.Attribute attribute33 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor30.visitAttribute(attribute33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
    }

    @Test
    public void test12958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12958");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        aSMifierMethodVisitor0.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label21);
        aSMifierMethodVisitor0.visitMaxs(10, (int) (short) 10);
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLabel(label26);
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLabel(label28);
    }

    @Test
    public void test12959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12959");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("hi!");
        printWriter26.println('a');
        printWriter26.println(false);
        printWriter26.print(1);
        printWriter26.println();
        printWriter26.print("hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test12960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12960");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        java.util.List list33 = aSMifierClassVisitor28.getText();
        org.mockito.asm.FieldVisitor fieldVisitor39 = aSMifierClassVisitor28.visitField((int) (short) -1, "", "hi!", "", (java.lang.Object) 10.0f);
        aSMifierClassVisitor28.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(fieldVisitor39);
    }

    @Test
    public void test12961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12961");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitOuterClass("hi!", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj53 = null;
        aSMifierMethodVisitor44.visitLdcInsn(obj53);
        aSMifierMethodVisitor44.visitEnd();
        aSMifierMethodVisitor44.visitCode();
        org.mockito.asm.FieldVisitor fieldVisitor57 = aSMifierClassVisitor28.visitField((int) ' ', "", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor44);
        aSMifierMethodVisitor44.visitVarInsn((int) (short) 1, (int) (short) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor44.visitAnnotation("hi!", false);
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor44.visitJumpInsn((int) (byte) 100, label65);
        aSMifierMethodVisitor44.visitFieldInsn(0, "", "", "");
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label label74 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label72, label73, label74, "hi!");
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor44.visitLineNumber((int) (short) 100, label78);
        aSMifierMethodVisitor44.visitCode();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(annotationVisitor63);
    }

    @Test
    public void test12962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12962");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.print('a');
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter28.flush();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        aSMifierClassVisitor30.visitSource("hi!", "");
        aSMifierClassVisitor30.visitOuterClass("hi!", "", "");
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.write((-1));
        printWriter43.flush();
        java.util.Locale locale47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray54 = null;
        aSMifierMethodVisitor49.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray52, (int) (short) 1, objArray54);
        java.io.PrintWriter printWriter56 = printWriter43.printf(locale47, "", (java.lang.Object[]) strArray52);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor57 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter43);
        aSMifierClassVisitor57.visitEnd();
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter("hi!");
        printWriter64.write((-1));
        printWriter64.flush();
        java.util.Locale locale68 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor70 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray73 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray75 = null;
        aSMifierMethodVisitor70.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray73, (int) (short) 1, objArray75);
        java.io.PrintWriter printWriter77 = printWriter64.printf(locale68, "", (java.lang.Object[]) strArray73);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor78 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter64);
        aSMifierClassVisitor78.visitEnd();
        aSMifierClassVisitor78.visitSource("", "hi!");
        java.lang.String[] strArray88 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor78.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray88);
        org.mockito.asm.MethodVisitor methodVisitor90 = aSMifierClassVisitor57.visitMethod((int) (short) 100, "hi!", "hi!", "", strArray88);
        org.mockito.asm.MethodVisitor methodVisitor91 = aSMifierClassVisitor30.visitMethod((int) (byte) 1, "", "", "", strArray88);
        methodVisitor91.visitInsn((int) '4');
        org.mockito.asm.Attribute attribute94 = null;
        // The following exception was thrown during execution in test generation
        try {
            methodVisitor91.visitAttribute(attribute94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(methodVisitor90);
        org.junit.Assert.assertNotNull(methodVisitor91);
    }

    @Test
    public void test12963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12963");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        java.util.Locale locale13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray20 = null;
        aSMifierMethodVisitor15.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray18, (int) (short) 1, objArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor23, strArray32, 1.0f };
        java.io.PrintWriter printWriter35 = printWriter12.printf(locale13, "", (java.lang.Object[]) strArray32);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, true);
        printWriter8.println((java.lang.Object) printWriter37);
        java.io.PrintWriter printWriter40 = printWriter8.append(' ');
        printWriter40.println("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor43 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter40);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter40);
    }

    @Test
    public void test12964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12964");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println((int) (short) -1);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor4.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor4.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierClassVisitor4.visitAnnotation("hi!", true);
        aSMifierClassVisitor4.visitEnd();
        org.mockito.asm.Attribute attribute14 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor4.visitAttribute(attribute14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
    }

    @Test
    public void test12965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12965");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 1, 1);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label22, label23, (-1));
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test12966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12966");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label27 = null;
        int[] intArray34 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        aSMifierMethodVisitor16.visitLookupSwitchInsn(label27, intArray34, labelArray48);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) '4', (int) '#', label15, labelArray48);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label55, label56, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn((int) '4', (int) (short) 100);
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label65, label66, (int) (short) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "hi!", false);
        annotationVisitor72.visitEnd();
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor72);
    }

    @Test
    public void test12967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12967");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 0, label60);
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor0.visitLabel(label62);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 0, (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) 'a', label71);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor69);
    }

    @Test
    public void test12968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12968");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, 1);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor26.visitFieldInsn((int) ' ', "hi!", "", "");
        aSMifierMethodVisitor26.visitEnd();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] { label48 };
        aSMifierMethodVisitor36.visitTableSwitchInsn(0, (int) (byte) 10, label47, labelArray49);
        aSMifierMethodVisitor26.visitTableSwitchInsn((int) (byte) 100, 0, label35, labelArray49);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 1, label25, labelArray49);
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 1, label54);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(labelArray49);
    }

    @Test
    public void test12969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12969");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label10);
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label12, label13, label14, "");
        java.util.List list17 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 100, (int) '4');
        org.junit.Assert.assertNotNull(list17);
    }

    @Test
    public void test12970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12970");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        java.io.PrintWriter printWriter10 = printWriter8.append('#');
        printWriter8.println((long) 1);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter10);
    }

    @Test
    public void test12971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12971");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter39 = printWriter37.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj49 = null;
        aSMifierMethodVisitor40.visitLdcInsn(obj49);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor40.visitJumpInsn((int) (short) 1, label52);
        aSMifierMethodVisitor40.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor40.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor40.visitAnnotationDefault();
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter("hi!");
        printWriter64.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor68.visitTryCatchBlock(label69, label70, label71, "");
        aSMifierMethodVisitor68.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label[] labelArray81 = new org.mockito.asm.Label[] { label80 };
        aSMifierMethodVisitor68.visitTableSwitchInsn(0, (int) (byte) 10, label79, labelArray81);
        java.io.PrintWriter printWriter83 = printWriter64.printf("hi!", (java.lang.Object[]) labelArray81);
        java.lang.String[] strArray85 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor40.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray81, 1, (java.lang.Object[]) strArray85);
        printWriter39.println((java.lang.Object) strArray85);
        aSMifierClassVisitor15.visit((int) (short) 1, (int) '4', "", "hi!", "hi!", strArray85);
        org.mockito.asm.AnnotationVisitor annotationVisitor91 = aSMifierClassVisitor15.visitAnnotation("", false);
        java.lang.Object obj96 = null;
        org.mockito.asm.FieldVisitor fieldVisitor97 = aSMifierClassVisitor15.visitField((int) '4', "", "hi!", "", obj96);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(labelArray81);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(annotationVisitor91);
        org.junit.Assert.assertNotNull(fieldVisitor97);
    }

    @Test
    public void test12972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12972");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitLabel(label4);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) 10);
        aSMifierMethodVisitor0.visitIincInsn(10, (int) (short) -1);
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) ' ', label13);
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter20 = printWriter16.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj31 = null;
        aSMifierMethodVisitor22.visitLdcInsn(obj31);
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor22.visitJumpInsn((int) (short) 1, label34);
        aSMifierMethodVisitor22.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label[] labelArray42 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor22.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label41, labelArray42);
        java.io.PrintWriter printWriter44 = printWriter20.printf("", (java.lang.Object[]) labelArray42);
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter((java.io.Writer) printWriter44, true);
        printWriter46.print(' ');
        printWriter46.println((double) (short) 10);
        aSMifierMethodVisitor0.print(printWriter46);
        printWriter46.write("");
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(labelArray42);
        org.junit.Assert.assertNotNull(printWriter44);
    }

    @Test
    public void test12973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12973");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 100);
        org.mockito.asm.Label label3 = null;
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label3, label4, label5, "hi!");
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs((int) (short) 10, (int) (short) -1);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        printWriter18.write((-1));
        printWriter18.flush();
        java.util.Locale locale22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray27 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray29 = null;
        aSMifierMethodVisitor24.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray27, (int) (short) 1, objArray29);
        java.io.PrintWriter printWriter31 = printWriter18.printf(locale22, "", (java.lang.Object[]) strArray27);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor32 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter18);
        aSMifierClassVisitor32.visitEnd();
        aSMifierClassVisitor32.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        org.mockito.asm.FieldVisitor fieldVisitor47 = aSMifierClassVisitor32.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label44);
        aSMifierClassVisitor32.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierClassVisitor32);
        aSMifierMethodVisitor0.visitIincInsn((-1), (int) (short) 10);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(fieldVisitor47);
    }

    @Test
    public void test12974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12974");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println((int) (short) 10);
        printWriter24.print('#');
        java.io.PrintWriter printWriter30 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.println(0);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, false);
        printWriter34.println("hi!");
        printWriter34.println('4');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor39 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter34);
        boolean boolean40 = printWriter34.checkError();
        printWriter34.print((int) (short) 0);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test12975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12975");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        printWriter1.print(0L);
        printWriter1.println("hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor10.visitTryCatchBlock(label11, label12, label13, "");
        aSMifierMethodVisitor10.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj19 = null;
        aSMifierMethodVisitor10.visitLdcInsn(obj19);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor10.visitJumpInsn((int) (short) 1, label22);
        aSMifierMethodVisitor10.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor10.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor10.visitAnnotationDefault();
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor38.visitTryCatchBlock(label39, label40, label41, "");
        aSMifierMethodVisitor38.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label[] labelArray51 = new org.mockito.asm.Label[] { label50 };
        aSMifierMethodVisitor38.visitTableSwitchInsn(0, (int) (byte) 10, label49, labelArray51);
        java.io.PrintWriter printWriter53 = printWriter34.printf("hi!", (java.lang.Object[]) labelArray51);
        java.lang.String[] strArray55 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor10.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray51, 1, (java.lang.Object[]) strArray55);
        aSMifierMethodVisitor10.visitMaxs((int) (byte) 0, (int) (byte) 100);
        printWriter1.print((java.lang.Object) aSMifierMethodVisitor10);
        printWriter1.print(10.0f);
        boolean boolean63 = printWriter1.checkError();
        java.io.PrintWriter printWriter65 = printWriter1.append(' ');
        printWriter65.print((int) (short) 1);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(labelArray51);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(printWriter65);
    }

    @Test
    public void test12976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12976");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label19, labelArray20);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLabel(label25);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label30, label31, 10);
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label35);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 10, "", "", "hi!");
        org.junit.Assert.assertNotNull(labelArray20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test12977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12977");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 1, "hi!", true);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) '#');
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, (int) (byte) 100);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 100, "hi!", "hi!", "");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
    }

    @Test
    public void test12978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12978");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 100);
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 1, "", "", "");
        aSMifierMethodVisitor0.visitIincInsn((int) ' ', 0);
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(annotationVisitor34);
    }

    @Test
    public void test12979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12979");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label26);
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 10, (int) (short) 0);
        aSMifierMethodVisitor0.visitInsn((int) 'a');
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 0, label34);
        org.mockito.asm.Label label37 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitJumpInsn((-1), label37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test12980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12980");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.print((int) ' ');
        java.lang.Object obj29 = null;
        printWriter24.print(obj29);
        printWriter24.println(false);
        java.io.PrintWriter printWriter34 = printWriter24.append('4');
        java.util.Locale locale35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj46 = null;
        aSMifierMethodVisitor37.visitLdcInsn(obj46);
        aSMifierMethodVisitor37.visitInsn((int) ' ');
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor37.visitJumpInsn(100, label51);
        aSMifierMethodVisitor37.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor37.visitCode();
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor37.visitJumpInsn((int) (short) 10, label58);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray65 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray67 = null;
        aSMifierMethodVisitor62.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray65, (int) (short) 1, objArray67);
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter("hi!");
        printWriter71.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray75 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter76 = printWriter71.format("", (java.lang.Object[]) strArray75);
        aSMifierMethodVisitor37.visitFrame((int) '#', (int) '4', (java.lang.Object[]) strArray65, 0, (java.lang.Object[]) strArray75);
        java.io.PrintWriter printWriter78 = printWriter34.format(locale35, "hi!", (java.lang.Object[]) strArray75);
        printWriter78.print("");
        printWriter78.println((float) (byte) 0);
        printWriter78.flush();
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter87 = printWriter78.append((java.lang.CharSequence) "", (int) (byte) 10, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(printWriter76);
        org.junit.Assert.assertNotNull(printWriter78);
    }

    @Test
    public void test12981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12981");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print(false);
        printWriter24.println(false);
        printWriter24.print(0L);
        java.io.PrintWriter printWriter32 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        printWriter35.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter40 = printWriter35.format("", (java.lang.Object[]) strArray39);
        java.io.PrintWriter printWriter41 = printWriter24.printf("hi!", (java.lang.Object[]) strArray39);
        aSMifierClassVisitor15.visit((int) (byte) 1, (int) (byte) 10, "hi!", "", "hi!", strArray39);
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierClassVisitor15.visitAnnotation("", true);
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        printWriter48.print(false);
        java.io.PrintWriter printWriter52 = printWriter48.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter((java.io.Writer) printWriter52, true);
        printWriter54.print((long) (short) 1);
        printWriter54.print((double) 10);
        printWriter54.print((long) (byte) 1);
        annotationVisitor45.visit("", (java.lang.Object) printWriter54);
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = annotationVisitor45.visitAnnotation("hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = annotationVisitor64.visitAnnotation("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor67);
    }

    @Test
    public void test12982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12982");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        aSMifierMethodVisitor6.visitTryCatchBlock(label7, label8, label9, "");
        aSMifierMethodVisitor6.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj15 = null;
        aSMifierMethodVisitor6.visitLdcInsn(obj15);
        aSMifierMethodVisitor6.visitTypeInsn(0, "hi!");
        printWriter1.print((java.lang.Object) 0);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor22.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor22.visitLabel(label34);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor22.visitAnnotation("", true);
        annotationVisitor38.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = annotationVisitor38.visitAnnotation("hi!", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor44.visitLocalVariable("hi!", "hi!", "hi!", label53, label54, (int) (byte) 10);
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter("hi!");
        printWriter58.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray62 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter63 = printWriter58.format("", (java.lang.Object[]) strArray62);
        aSMifierMethodVisitor44.visitLdcInsn((java.lang.Object) strArray62);
        aSMifierMethodVisitor44.visitIntInsn(1, (int) (byte) 1);
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor44.visitLineNumber(0, label69);
        aSMifierMethodVisitor44.visitMaxs((int) '4', (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = aSMifierMethodVisitor44.visitAnnotationDefault();
        annotationVisitor42.visit("", (java.lang.Object) aSMifierMethodVisitor44);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray80 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray82 = null;
        aSMifierMethodVisitor77.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray80, (int) (short) 1, objArray82);
        aSMifierMethodVisitor77.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor77.visitEnd();
        org.mockito.asm.Label label91 = null;
        aSMifierMethodVisitor77.visitJumpInsn((int) (short) 100, label91);
        aSMifierMethodVisitor77.visitEnd();
        annotationVisitor42.visit("hi!", (java.lang.Object) aSMifierMethodVisitor77);
        printWriter1.println((java.lang.Object) aSMifierMethodVisitor77);
        printWriter1.println((double) 1L);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(annotationVisitor74);
        org.junit.Assert.assertNotNull(strArray80);
    }

    @Test
    public void test12983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12983");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = printWriter1.append((java.lang.CharSequence) "");
        printWriter22.println(1);
        printWriter22.print('#');
        printWriter22.print((java.lang.Object) false);
        printWriter22.print((double) 10);
        printWriter22.print("");
        boolean boolean33 = printWriter22.checkError();
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test12984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12984");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label27 = null;
        int[] intArray34 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        aSMifierMethodVisitor16.visitLookupSwitchInsn(label27, intArray34, labelArray48);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) '4', (int) '#', label15, labelArray48);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label55, label56, (int) (short) 0);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label63, label64, (int) ' ');
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, 0);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor0.visitLabel(label71);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray48);
    }

    @Test
    public void test12985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12985");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor7.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor7.visitAnnotationDefault();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        java.io.PrintWriter printWriter50 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray48);
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor7.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray48, 1, (java.lang.Object[]) strArray52);
        java.io.PrintWriter printWriter54 = printWriter1.format("hi!", (java.lang.Object[]) strArray52);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor55.visitEnd();
        java.util.List list57 = aSMifierClassVisitor55.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierClassVisitor55.visitAnnotation("", false);
        aSMifierClassVisitor55.visitEnd();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(annotationVisitor60);
    }

    @Test
    public void test12986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12986");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 100, "hi!", false);
        org.mockito.asm.Attribute attribute25 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test12987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12987");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        printWriter14.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter19 = printWriter14.format("", (java.lang.Object[]) strArray18);
        org.mockito.asm.MethodVisitor methodVisitor20 = aSMifierClassVisitor8.visitMethod((int) (byte) 1, "", "", "hi!", strArray18);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor25.visitTryCatchBlock(label26, label27, label28, "");
        aSMifierMethodVisitor25.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj34 = null;
        aSMifierMethodVisitor25.visitLdcInsn(obj34);
        aSMifierMethodVisitor25.visitInsn((int) ' ');
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor25.visitJumpInsn(100, label39);
        aSMifierMethodVisitor25.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor25.visitCode();
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor25.visitJumpInsn((int) (short) 10, label46);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray53 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray55 = null;
        aSMifierMethodVisitor50.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray53, (int) (short) 1, objArray55);
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter("hi!");
        printWriter59.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray63 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter64 = printWriter59.format("", (java.lang.Object[]) strArray63);
        aSMifierMethodVisitor25.visitFrame((int) '#', (int) '4', (java.lang.Object[]) strArray53, 0, (java.lang.Object[]) strArray63);
        org.mockito.asm.MethodVisitor methodVisitor66 = aSMifierClassVisitor8.visitMethod(10, "", "hi!", "hi!", strArray53);
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierClassVisitor8.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(methodVisitor20);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertNotNull(methodVisitor66);
        org.junit.Assert.assertNotNull(annotationVisitor69);
    }

    @Test
    public void test12988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12988");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs(1, 10);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter("hi!");
        printWriter65.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor69.visitTryCatchBlock(label70, label71, label72, "");
        aSMifierMethodVisitor69.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label[] labelArray82 = new org.mockito.asm.Label[] { label81 };
        aSMifierMethodVisitor69.visitTableSwitchInsn(0, (int) (byte) 10, label80, labelArray82);
        java.io.PrintWriter printWriter84 = printWriter65.printf("hi!", (java.lang.Object[]) labelArray82);
        printWriter65.print((float) 1L);
        aSMifierMethodVisitor0.print(printWriter65);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.AnnotationVisitor annotationVisitor90 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label91 = null;
        org.mockito.asm.Label label92 = null;
        org.mockito.asm.Label label93 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label91, label92, label93, "hi!");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray82);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(annotationVisitor90);
    }

    @Test
    public void test12989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12989");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitSource("hi!", "");
        aSMifierClassVisitor15.visitInnerClass("hi!", "hi!", "hi!", (int) (short) 1);
        java.util.List list39 = aSMifierClassVisitor15.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierClassVisitor15.visitAnnotation("", false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(annotationVisitor42);
    }

    @Test
    public void test12990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12990");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor14.visitLabel(label27);
        aSMifierMethodVisitor14.visitTypeInsn(1, "hi!");
        aSMifierMethodVisitor14.visitIntInsn((int) (short) 1, 1);
        aSMifierMethodVisitor14.visitMethodInsn((int) (short) 1, "hi!", "hi!", "");
    }

    @Test
    public void test12991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12991");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.println(0.0f);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        aSMifierClassVisitor29.visitSource("", "");
        aSMifierClassVisitor29.visitOuterClass("", "hi!", "");
        aSMifierClassVisitor29.visitInnerClass("", "", "", 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierClassVisitor29.visitAnnotation("", false);
        aSMifierClassVisitor29.visitOuterClass("hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierClassVisitor29.visitAnnotation("hi!", false);
        annotationVisitor51.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test12992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12992");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        printWriter1.write((int) (short) 0);
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test12993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12993");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitSource("hi!", "");
        aSMifierClassVisitor15.visitInnerClass("", "", "", (int) '4');
        java.lang.String[] strArray43 = org.mockito.asm.util.AbstractVisitor.TYPES;
        org.mockito.asm.MethodVisitor methodVisitor44 = aSMifierClassVisitor15.visitMethod((int) (byte) -1, "", "hi!", "", strArray43);
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        methodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = methodVisitor44.visitAnnotation("", false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor52);
    }

    @Test
    public void test12994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12994");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter16 = printWriter12.append((java.lang.CharSequence) "");
        printWriter8.println((java.lang.Object) printWriter16);
        printWriter16.print((long) (byte) 10);
        printWriter16.println(100);
        printWriter16.write((int) (byte) 10);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter16);
    }

    @Test
    public void test12995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12995");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label13, label14, (int) (short) 10);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        java.util.Locale locale19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray24 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray26 = null;
        aSMifierMethodVisitor21.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray24, (int) (short) 1, objArray26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor29.visitTryCatchBlock(label30, label31, label32, "");
        aSMifierMethodVisitor29.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray40 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor29, strArray38, 1.0f };
        java.io.PrintWriter printWriter41 = printWriter18.printf(locale19, "", (java.lang.Object[]) strArray38);
        boolean boolean42 = printWriter41.checkError();
        printWriter41.println(false);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter((java.io.Writer) printWriter41);
        printWriter41.println((float) 'a');
        printWriter41.print((long) '4');
        aSMifierMethodVisitor0.print(printWriter41);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor51.visitTryCatchBlock(label52, label53, label54, "");
        aSMifierMethodVisitor51.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj60 = null;
        aSMifierMethodVisitor51.visitLdcInsn(obj60);
        aSMifierMethodVisitor51.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor51.visitLocalVariable("hi!", "hi!", "hi!", label68, label69, (int) (byte) 1);
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor51.visitLineNumber((int) 'a', label73);
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor51.visitLineNumber((int) (byte) 0, label76);
        aSMifierMethodVisitor51.visitEnd();
        printWriter41.println((java.lang.Object) aSMifierMethodVisitor51);
        java.io.PrintWriter printWriter81 = printWriter41.append((java.lang.CharSequence) "hi!");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(printWriter81);
    }

    @Test
    public void test12996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12996");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.println((float) (short) 0);
        printWriter1.println((float) 1L);
        java.io.PrintWriter printWriter9 = printWriter1.append('#');
        printWriter1.close();
        printWriter1.println(100);
        boolean boolean13 = printWriter1.checkError();
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test12997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12997");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj44 = null;
        aSMifierMethodVisitor35.visitLdcInsn(obj44);
        aSMifierMethodVisitor35.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list48 = aSMifierMethodVisitor35.getText();
        org.mockito.asm.FieldVisitor fieldVisitor49 = aSMifierClassVisitor15.visitField((int) (byte) -1, "", "", "", (java.lang.Object) list48);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        aSMifierClassVisitor15.visitOuterClass("hi!", "hi!", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor61.visitTryCatchBlock(label62, label63, label64, "");
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor61.visitLocalVariable("hi!", "hi!", "hi!", label70, label71, (int) (byte) 10);
        java.io.PrintWriter printWriter75 = new java.io.PrintWriter("hi!");
        printWriter75.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray79 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter80 = printWriter75.format("", (java.lang.Object[]) strArray79);
        aSMifierMethodVisitor61.visitLdcInsn((java.lang.Object) strArray79);
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = aSMifierMethodVisitor61.visitAnnotationDefault();
        aSMifierMethodVisitor61.visitMultiANewArrayInsn("hi!", (-1));
        org.mockito.asm.FieldVisitor fieldVisitor86 = aSMifierClassVisitor15.visitField((int) (short) 0, "", "", "", (java.lang.Object) "hi!");
        java.util.List list87 = aSMifierClassVisitor15.text;
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(fieldVisitor49);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertNotNull(annotationVisitor82);
        org.junit.Assert.assertNotNull(fieldVisitor86);
        org.junit.Assert.assertNotNull(list87);
    }

    @Test
    public void test12998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12998");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "");
        aSMifierClassVisitor15.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
    }

    @Test
    public void test12999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12999");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label19, labelArray20);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitIntInsn(10, (int) (short) 100);
        org.junit.Assert.assertNotNull(labelArray20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor36);
    }

    @Test
    public void test13000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test13000");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor14.visitJumpInsn((int) (short) 1, label26);
        aSMifierMethodVisitor14.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor14.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor14.visitAnnotationDefault();
        aSMifierMethodVisitor14.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor14.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        annotationVisitor38.visit("", (java.lang.Object) "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = annotationVisitor38.visitArray("");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) annotationVisitor53);
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor0.visitLabel(label55);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 100, "", "", "");
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor0.visitJumpInsn(0, label63);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor53);
    }
}

