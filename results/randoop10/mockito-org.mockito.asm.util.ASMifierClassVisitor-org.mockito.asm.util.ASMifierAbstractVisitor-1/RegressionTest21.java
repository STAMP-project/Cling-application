import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest21 {

    public static boolean debug = false;

    @Test
    public void test10501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10501");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter1.println();
        java.util.Locale locale9 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor11.visitTryCatchBlock(label12, label13, label14, "");
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor11.visitLocalVariable("hi!", "hi!", "hi!", label20, label21, (int) (byte) 10);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        printWriter25.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray29 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter30 = printWriter25.format("", (java.lang.Object[]) strArray29);
        aSMifierMethodVisitor11.visitLdcInsn((java.lang.Object) strArray29);
        java.io.PrintWriter printWriter32 = printWriter1.printf(locale9, "", (java.lang.Object[]) strArray29);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter((java.io.Writer) printWriter32);
        printWriter33.print(1.0d);
        printWriter33.print((double) 100);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(printWriter32);
    }

    @Test
    public void test10502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10502");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        printWriter1.print((float) 10);
        printWriter1.print(true);
        printWriter1.println('a');
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
    }

    @Test
    public void test10503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10503");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label22);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.util.List list25 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 10, 10);
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 1, label31);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(annotationVisitor26);
    }

    @Test
    public void test10504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10504");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label20, label21, label22, "hi!");
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        printWriter26.write((-1));
        printWriter26.flush();
        java.util.Locale locale30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray37 = null;
        aSMifierMethodVisitor32.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray35, (int) (short) 1, objArray37);
        java.io.PrintWriter printWriter39 = printWriter26.printf(locale30, "", (java.lang.Object[]) strArray35);
        aSMifierMethodVisitor0.print(printWriter39);
        aSMifierMethodVisitor0.visitMethodInsn(10, "hi!", "", "");
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label46, label47, label48, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(0, "hi!", "hi!", "");
        aSMifierMethodVisitor51.visitVarInsn((int) (byte) 10, 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor51.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor51);
        aSMifierMethodVisitor51.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(annotationVisitor60);
    }

    @Test
    public void test10505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10505");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label[] labelArray27 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor7.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label26, labelArray27);
        java.io.PrintWriter printWriter29 = printWriter5.printf("", (java.lang.Object[]) labelArray27);
        printWriter29.println('a');
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.write((-1));
        printWriter33.flush();
        java.lang.Object[] objArray38 = null;
        java.io.PrintWriter printWriter39 = printWriter33.format("hi!", objArray38);
        printWriter33.print(true);
        printWriter29.print((java.lang.Object) printWriter33);
        printWriter29.print((float) (short) 100);
        printWriter29.print(false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label48, label49, label50, "");
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor47.visitLocalVariable("hi!", "hi!", "hi!", label56, label57, (int) (byte) 10);
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter("hi!");
        printWriter61.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray65 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter66 = printWriter61.format("", (java.lang.Object[]) strArray65);
        aSMifierMethodVisitor47.visitLdcInsn((java.lang.Object) strArray65);
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor47.visitAnnotationDefault();
        printWriter29.print((java.lang.Object) annotationVisitor68);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(labelArray27);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(annotationVisitor68);
    }

    @Test
    public void test10506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10506");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        java.util.List list22 = aSMifierClassVisitor15.getText();
        java.util.List list23 = aSMifierClassVisitor15.text;
        java.lang.String[] strArray28 = null;
        org.mockito.asm.MethodVisitor methodVisitor29 = aSMifierClassVisitor15.visitMethod((int) '4', "hi!", "", "hi!", strArray28);
        aSMifierClassVisitor15.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(methodVisitor29);
    }

    @Test
    public void test10507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10507");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) ' ');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 10, "", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj31 = null;
        aSMifierMethodVisitor22.visitLdcInsn(obj31);
        aSMifierMethodVisitor22.visitInsn((int) ' ');
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor22.visitJumpInsn(100, label36);
        aSMifierMethodVisitor22.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor22.visitCode();
        aSMifierMethodVisitor22.visitVarInsn(0, (int) (byte) 100);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor22);
        aSMifierMethodVisitor22.visitCode();
        aSMifierMethodVisitor22.visitMaxs((int) (byte) 0, (int) 'a');
        java.lang.Class<?> wildcardClass50 = aSMifierMethodVisitor22.getClass();
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test10508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10508");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        printWriter34.println();
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.Writer) printWriter34, true);
        // The following exception was thrown during execution in test generation
        try {
            printWriter34.write("hi!", (int) '4', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 149");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test10509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10509");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 0, label60);
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor0.visitLabel(label62);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 0, (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        java.util.List list70 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor69);
        org.junit.Assert.assertNotNull(list70);
    }

    @Test
    public void test10510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10510");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("hi!");
        printWriter2.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter6 = printWriter2.append((java.lang.CharSequence) "");
        printWriter2.print((int) (byte) -1);
        printWriter2.write("", (int) (byte) 1, (int) (short) 0);
        printWriter2.print((double) (byte) -1);
        aSMifierMethodVisitor0.print(printWriter2);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "");
        aSMifierMethodVisitor0.visitMaxs((int) ' ', (int) (short) 1);
        aSMifierMethodVisitor0.visitVarInsn(100, (int) (short) -1);
        aSMifierMethodVisitor0.visitIntInsn((int) '#', (int) (byte) 0);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, (int) '#');
        org.junit.Assert.assertNotNull(printWriter6);
    }

    @Test
    public void test10511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10511");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        java.util.List list33 = aSMifierClassVisitor28.getText();
        org.mockito.asm.FieldVisitor fieldVisitor39 = aSMifierClassVisitor28.visitField((int) (short) -1, "", "hi!", "", (java.lang.Object) 10.0f);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = fieldVisitor39.visitAnnotation("hi!", true);
        annotationVisitor42.visitEnd();
        annotationVisitor42.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = annotationVisitor42.visitAnnotation("hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = annotationVisitor47.visitArray("hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(annotationVisitor49);
    }

    @Test
    public void test10512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10512");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) ' ');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 10, "", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj31 = null;
        aSMifierMethodVisitor22.visitLdcInsn(obj31);
        aSMifierMethodVisitor22.visitInsn((int) ' ');
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor22.visitJumpInsn(100, label36);
        aSMifierMethodVisitor22.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor22.visitCode();
        aSMifierMethodVisitor22.visitVarInsn(0, (int) (byte) 100);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor22);
        aSMifierMethodVisitor22.visitMethodInsn((int) (byte) 100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitMultiANewArrayInsn("", (int) (short) 1);
        aSMifierMethodVisitor22.visitFieldInsn(0, "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor21);
    }

    @Test
    public void test10513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10513");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs(1, 10);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter("hi!");
        printWriter65.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor69.visitTryCatchBlock(label70, label71, label72, "");
        aSMifierMethodVisitor69.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label[] labelArray82 = new org.mockito.asm.Label[] { label81 };
        aSMifierMethodVisitor69.visitTableSwitchInsn(0, (int) (byte) 10, label80, labelArray82);
        java.io.PrintWriter printWriter84 = printWriter65.printf("hi!", (java.lang.Object[]) labelArray82);
        printWriter65.print((float) 1L);
        aSMifierMethodVisitor0.print(printWriter65);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.AnnotationVisitor annotationVisitor90 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIntInsn((int) '#', (int) (short) 10);
        aSMifierMethodVisitor0.visitMaxs(0, (int) (short) 10);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray82);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(annotationVisitor90);
    }

    @Test
    public void test10514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10514");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 0, (int) (short) 1);
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitTableSwitchInsn((-1), (int) (byte) 0, label17, labelArray18);
        aSMifierMethodVisitor0.visitMaxs(1, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(annotationVisitor26);
    }

    @Test
    public void test10515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10515");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter3, true);
        printWriter3.close();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter3);
        printWriter3.println();
        org.junit.Assert.assertNotNull(printWriter3);
    }

    @Test
    public void test10516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10516");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor6 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 1, "", "", "");
        org.junit.Assert.assertNotNull(annotationVisitor6);
    }

    @Test
    public void test10517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10517");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list13 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", false);
        java.util.List list18 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitCode();
        java.util.List list20 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list20);
    }

    @Test
    public void test10518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10518");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitLabel(label21);
    }

    @Test
    public void test10519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10519");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label10);
        aSMifierMethodVisitor0.visitFieldInsn(10, "hi!", "", "hi!");
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '4', label18);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 100, "", false);
        org.mockito.asm.Attribute attribute26 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor25);
    }

    @Test
    public void test10520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10520");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) ' ');
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", true);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitLabel(label21);
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitLabel(label23);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitParameterAnnotation((int) ' ', "hi!", true);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 1, "");
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor28);
    }

    @Test
    public void test10521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10521");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj45 = null;
        aSMifierMethodVisitor36.visitLdcInsn(obj45);
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor36.visitJumpInsn((int) (short) 1, label48);
        aSMifierMethodVisitor36.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor36.visitParameterAnnotation((int) (byte) 1, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor57 = aSMifierClassVisitor31.visitField((int) (byte) 0, "", "", "", (java.lang.Object) aSMifierMethodVisitor36);
        fieldVisitor57.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = fieldVisitor57.visitAnnotation("hi!", true);
        fieldVisitor57.visitEnd();
        fieldVisitor57.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = fieldVisitor57.visitAnnotation("", true);
        annotationVisitor66.visitEnum("hi!", "", "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor66);
    }

    @Test
    public void test10522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10522");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj35 = null;
        aSMifierMethodVisitor26.visitLdcInsn(obj35);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor26.visitJumpInsn((int) (short) 1, label38);
        aSMifierMethodVisitor26.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor46.visitTryCatchBlock(label47, label48, label49, "");
        aSMifierMethodVisitor46.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj55 = null;
        aSMifierMethodVisitor46.visitLdcInsn(obj55);
        org.mockito.asm.Label label57 = null;
        int[] intArray64 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        aSMifierMethodVisitor65.visitTryCatchBlock(label66, label67, label68, "");
        aSMifierMethodVisitor65.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label[] labelArray78 = new org.mockito.asm.Label[] { label77 };
        aSMifierMethodVisitor65.visitTableSwitchInsn(0, (int) (byte) 10, label76, labelArray78);
        aSMifierMethodVisitor46.visitLookupSwitchInsn(label57, intArray64, labelArray78);
        aSMifierMethodVisitor26.visitTableSwitchInsn((int) 'a', 10, label45, labelArray78);
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = aSMifierMethodVisitor26.visitAnnotation("", true);
        org.mockito.asm.Label label86 = null;
        aSMifierMethodVisitor26.visitJumpInsn((int) (byte) 0, label86);
        org.mockito.asm.Label label88 = null;
        aSMifierMethodVisitor26.visitLabel(label88);
        aSMifierMethodVisitor26.visitMaxs((int) (byte) 0, (int) (short) 100);
        printWriter24.println((java.lang.Object) aSMifierMethodVisitor26);
        printWriter24.close();
        printWriter24.println("");
        java.io.PrintWriter printWriter98 = printWriter24.append('4');
        java.io.PrintWriter printWriter99 = new java.io.PrintWriter((java.io.Writer) printWriter98);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray78);
        org.junit.Assert.assertNotNull(annotationVisitor84);
        org.junit.Assert.assertNotNull(printWriter98);
    }

    @Test
    public void test10523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10523");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter1.checkError();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor26 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor26.visitInnerClass("", "hi!", "hi!", (int) (byte) 100);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = null;
        aSMifierMethodVisitor36.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray39, (int) (short) 1, objArray41);
        aSMifierMethodVisitor36.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor36.visitEnd();
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor36.visitLocalVariable("", "hi!", "hi!", label52, label53, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor36.visitAnnotation("", false);
        aSMifierMethodVisitor36.visitTypeInsn((int) '#', "");
        aSMifierMethodVisitor36.visitVarInsn(1, 0);
        aSMifierMethodVisitor36.visitMultiANewArrayInsn("", (int) ' ');
        aSMifierMethodVisitor36.visitMultiANewArrayInsn("", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor36.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor74 = aSMifierClassVisitor26.visitField((-1), "", "", "", (java.lang.Object) false);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(fieldVisitor74);
    }

    @Test
    public void test10524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10524");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] { label40 };
        aSMifierMethodVisitor28.visitTableSwitchInsn(0, (int) (byte) 10, label39, labelArray41);
        java.io.PrintWriter printWriter43 = printWriter24.printf("hi!", (java.lang.Object[]) labelArray41);
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray41, 1, (java.lang.Object[]) strArray45);
        aSMifierMethodVisitor0.visitIntInsn((int) '#', 10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 1);
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label54);
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label59, label60, (int) '#');
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) 'a', label64);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(strArray45);
    }

    @Test
    public void test10525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10525");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotation("", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        java.util.Locale locale22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray27 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray29 = null;
        aSMifierMethodVisitor24.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray27, (int) (short) 1, objArray29);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray41 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray43 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor32, strArray41, 1.0f };
        java.io.PrintWriter printWriter44 = printWriter21.printf(locale22, "", (java.lang.Object[]) strArray41);
        printWriter44.print("hi!");
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.Writer) printWriter44);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor48 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter47);
        aSMifierClassVisitor48.visitOuterClass("hi!", "hi!", "hi!");
        java.util.List list53 = aSMifierClassVisitor48.getText();
        aSMifierClassVisitor48.visitSource("hi!", "");
        aSMifierClassVisitor48.visitSource("hi!", "");
        aSMifierClassVisitor48.visitSource("hi!", "");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierClassVisitor48);
        aSMifierClassVisitor48.visitSource("hi!", "");
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(list53);
    }

    @Test
    public void test10526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10526");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        boolean boolean36 = printWriter34.checkError();
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter39 = printWriter34.format("hi!", (java.lang.Object[]) strArray38);
        printWriter39.println((double) (short) 100);
        printWriter39.print("hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(printWriter39);
    }

    @Test
    public void test10527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10527");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.util.List list17 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 0, label19);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) 'a');
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 10, 10);
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label27, label28, label29, "hi!");
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        java.util.Locale locale34 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = null;
        aSMifierMethodVisitor36.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray39, (int) (short) 1, objArray41);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray53 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray55 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor44, strArray53, 1.0f };
        java.io.PrintWriter printWriter56 = printWriter33.printf(locale34, "", (java.lang.Object[]) strArray53);
        printWriter56.print("hi!");
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter56);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor60 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter59);
        aSMifierClassVisitor60.visitOuterClass("hi!", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierClassVisitor60.visitAnnotation("hi!", true);
        aSMifierClassVisitor60.visitInnerClass("hi!", "hi!", "", (int) (short) 1);
        aSMifierClassVisitor60.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor60.visitOuterClass("", "", "hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(annotationVisitor67);
    }

    @Test
    public void test10528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10528");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = fieldVisitor30.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = fieldVisitor30.visitAnnotation("hi!", false);
        fieldVisitor30.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(annotationVisitor36);
    }

    @Test
    public void test10529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10529");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitLabel(label4);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 10, "", "", "");
        aSMifierMethodVisitor0.visitInsn((int) (short) 10);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 1, "", "", "");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 100);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor21.visitTryCatchBlock(label22, label23, label24, "");
        aSMifierMethodVisitor21.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj30 = null;
        aSMifierMethodVisitor21.visitLdcInsn(obj30);
        aSMifierMethodVisitor21.visitInsn((int) ' ');
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor21.visitJumpInsn(100, label35);
        aSMifierMethodVisitor21.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor21.visitCode();
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor21.visitLineNumber((int) (byte) 1, label42);
        aSMifierMethodVisitor21.visitVarInsn((int) '4', 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierMethodVisitor21.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", 0);
        org.junit.Assert.assertNotNull(annotationVisitor49);
    }

    @Test
    public void test10530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10530");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter3, true);
        printWriter3.close();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter3);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierClassVisitor7.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter20 = printWriter16.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj31 = null;
        aSMifierMethodVisitor22.visitLdcInsn(obj31);
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor22.visitJumpInsn((int) (short) 1, label34);
        aSMifierMethodVisitor22.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label[] labelArray42 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor22.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label41, labelArray42);
        java.io.PrintWriter printWriter44 = printWriter20.printf("", (java.lang.Object[]) labelArray42);
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter((java.io.Writer) printWriter44, true);
        printWriter44.println((float) (-1L));
        printWriter44.write((int) (byte) -1);
        boolean boolean51 = printWriter44.checkError();
        java.io.PrintWriter printWriter53 = printWriter44.append('a');
        printWriter44.write("hi!", 10, (int) (byte) -1);
        printWriter44.write("");
        org.mockito.asm.FieldVisitor fieldVisitor60 = aSMifierClassVisitor7.visitField((int) (byte) 100, "", "", "", (java.lang.Object) "");
        aSMifierClassVisitor7.visitEnd();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(labelArray42);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(fieldVisitor60);
    }

    @Test
    public void test10531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10531");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((int) (byte) -1, "hi!", "hi!", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10532");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        printWriter34.write("hi!");
        printWriter34.println('a');
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        java.util.Locale locale44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray49 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray51 = null;
        aSMifierMethodVisitor46.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray49, (int) (short) 1, objArray51);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor54.visitTryCatchBlock(label55, label56, label57, "");
        aSMifierMethodVisitor54.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray63 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray65 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor54, strArray63, 1.0f };
        java.io.PrintWriter printWriter66 = printWriter43.printf(locale44, "", (java.lang.Object[]) strArray63);
        printWriter66.print("hi!");
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter((java.io.Writer) printWriter66);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor70 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter69);
        aSMifierClassVisitor70.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierClassVisitor70.visitAnnotation("hi!", true);
        aSMifierClassVisitor70.visitEnd();
        java.lang.String[] strArray83 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierClassVisitor70.visit(0, (int) (short) 100, "hi!", "hi!", "", strArray83);
        java.io.PrintWriter printWriter85 = printWriter34.format("", (java.lang.Object[]) strArray83);
        printWriter85.println(true);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(annotationVisitor76);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(printWriter85);
    }

    @Test
    public void test10533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10533");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor0.visitInsn(100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 100, "", true);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        printWriter49.print('#');
        printWriter49.println(false);
        printWriter49.write("hi!");
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter("hi!");
        java.util.Locale locale58 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray63 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray65 = null;
        aSMifierMethodVisitor60.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray63, (int) (short) 1, objArray65);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor68.visitTryCatchBlock(label69, label70, label71, "");
        aSMifierMethodVisitor68.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray77 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray79 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor68, strArray77, 1.0f };
        java.io.PrintWriter printWriter80 = printWriter57.printf(locale58, "", (java.lang.Object[]) strArray77);
        char[] charArray87 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter80.println(charArray87);
        printWriter49.println(charArray87);
        annotationVisitor23.visit("hi!", (java.lang.Object) printWriter49);
        java.io.PrintWriter printWriter92 = printWriter49.append((java.lang.CharSequence) "hi!");
        boolean boolean93 = printWriter49.checkError();
        printWriter49.println("");
        java.lang.CharSequence charSequence96 = null;
        java.io.PrintWriter printWriter99 = printWriter49.append(charSequence96, 0, (int) (short) 0);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(printWriter99);
    }

    @Test
    public void test10534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10534");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "", "hi!");
        org.mockito.asm.Attribute attribute61 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
    }

    @Test
    public void test10535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10535");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label6 = null;
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        printWriter8.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label[] labelArray25 = new org.mockito.asm.Label[] { label24 };
        aSMifierMethodVisitor12.visitTableSwitchInsn(0, (int) (byte) 10, label23, labelArray25);
        java.io.PrintWriter printWriter27 = printWriter8.printf("hi!", (java.lang.Object[]) labelArray25);
        aSMifierMethodVisitor0.visitTableSwitchInsn(1, (int) (short) 10, label6, labelArray25);
        aSMifierMethodVisitor0.visitVarInsn(100, (int) ' ');
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label35, label36, (int) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(labelArray25);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(annotationVisitor39);
    }

    @Test
    public void test10536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10536");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", true);
        annotationVisitor15.visitEnum("hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = annotationVisitor15.visitAnnotation("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = annotationVisitor22.visitAnnotation("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = annotationVisitor25.visitArray("hi!");
        annotationVisitor27.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor27);
    }

    @Test
    public void test10537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10537");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = printWriter1.append((java.lang.CharSequence) "");
        printWriter22.close();
        java.io.PrintWriter printWriter25 = printWriter22.append(' ');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj35 = null;
        aSMifierMethodVisitor26.visitLdcInsn(obj35);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor26.visitJumpInsn((int) (short) 1, label38);
        aSMifierMethodVisitor26.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor26.visitParameterAnnotation((int) (byte) 1, "", true);
        aSMifierMethodVisitor26.visitInsn((int) (short) 1);
        printWriter22.print((java.lang.Object) aSMifierMethodVisitor26);
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor26.visitParameterAnnotation((int) (short) -1, "hi!", false);
        annotationVisitor53.visitEnum("hi!", "", "");
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(annotationVisitor53);
    }

    @Test
    public void test10538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10538");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj45 = null;
        aSMifierMethodVisitor36.visitLdcInsn(obj45);
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor36.visitJumpInsn((int) (short) 1, label48);
        aSMifierMethodVisitor36.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor36.visitParameterAnnotation((int) (byte) 1, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor57 = aSMifierClassVisitor31.visitField((int) (byte) 0, "", "", "", (java.lang.Object) aSMifierMethodVisitor36);
        aSMifierMethodVisitor36.visitEnd();
        aSMifierMethodVisitor36.visitMethodInsn(100, "", "hi!", "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor57);
    }

    @Test
    public void test10539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10539");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitTypeInsn(1, "");
        aSMifierMethodVisitor0.visitInsn(100);
        org.mockito.asm.Attribute attribute20 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10540");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierClassVisitor15.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = annotationVisitor23.visitArray("");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(annotationVisitor25);
    }

    @Test
    public void test10541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10541");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, 1);
        java.util.List list23 = aSMifierMethodVisitor0.text;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) -1, label25);
        java.util.List list27 = aSMifierMethodVisitor0.text;
        java.util.List list28 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 1, "", "hi!", "");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
    }

    @Test
    public void test10542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10542");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, 0);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 10, (int) (short) 1);
        java.io.PrintWriter printWriter74 = new java.io.PrintWriter("hi!");
        printWriter74.println((-1.0d));
        java.io.PrintWriter printWriter78 = printWriter74.append((java.lang.CharSequence) "");
        printWriter78.print("hi!");
        java.io.PrintWriter printWriter82 = new java.io.PrintWriter((java.io.Writer) printWriter78, false);
        printWriter78.println();
        printWriter78.print((-1.0f));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter78);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 0, "", "hi!", "");
        java.util.List list92 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(list92);
    }

    @Test
    public void test10543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10543");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter1.checkError();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor26 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor26.visitEnd();
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.write((-1));
        printWriter33.flush();
        java.util.Locale locale37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray44 = null;
        aSMifierMethodVisitor39.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray42, (int) (short) 1, objArray44);
        java.io.PrintWriter printWriter46 = printWriter33.printf(locale37, "", (java.lang.Object[]) strArray42);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor47 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter33);
        aSMifierClassVisitor47.visitEnd();
        aSMifierClassVisitor47.visitSource("", "hi!");
        java.lang.String[] strArray56 = null;
        org.mockito.asm.MethodVisitor methodVisitor57 = aSMifierClassVisitor47.visitMethod(0, "", "hi!", "", strArray56);
        aSMifierClassVisitor47.visitEnd();
        java.lang.String[] strArray64 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor47.visit(0, 10, "hi!", "", "hi!", strArray64);
        org.mockito.asm.MethodVisitor methodVisitor66 = aSMifierClassVisitor26.visitMethod(0, "hi!", "hi!", "", strArray64);
        org.mockito.asm.Label label68 = null;
        methodVisitor66.visitJumpInsn(0, label68);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(methodVisitor57);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(methodVisitor66);
    }

    @Test
    public void test10544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10544");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        printWriter1.print((float) 10);
        printWriter1.print(true);
        java.io.PrintWriter printWriter26 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter26.print("hi!");
        printWriter26.close();
        printWriter26.print("hi!");
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter26);
    }

    @Test
    public void test10545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10545");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label19, labelArray20);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 1, 10);
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '#', label26);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 0, "hi!", "hi!", "");
        java.lang.Object obj33 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj33);
        org.junit.Assert.assertNotNull(labelArray20);
    }

    @Test
    public void test10546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10546");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        printWriter24.print(true);
        java.util.Locale locale35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj46 = null;
        aSMifierMethodVisitor37.visitLdcInsn(obj46);
        aSMifierMethodVisitor37.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor51.visitTryCatchBlock(label52, label53, label54, "");
        aSMifierMethodVisitor51.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj60 = null;
        aSMifierMethodVisitor51.visitLdcInsn(obj60);
        aSMifierMethodVisitor51.visitEnd();
        aSMifierMethodVisitor37.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor51);
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor67.visitTryCatchBlock(label68, label69, label70, "");
        aSMifierMethodVisitor67.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj76 = null;
        aSMifierMethodVisitor67.visitLdcInsn(obj76);
        org.mockito.asm.Label label79 = null;
        aSMifierMethodVisitor67.visitJumpInsn((int) (short) 1, label79);
        aSMifierMethodVisitor67.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label86 = null;
        org.mockito.asm.Label[] labelArray87 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor67.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label86, labelArray87);
        aSMifierMethodVisitor37.visitTableSwitchInsn((int) (short) 100, (int) (byte) 10, label66, labelArray87);
        java.io.PrintWriter printWriter90 = printWriter24.printf(locale35, "hi!", (java.lang.Object[]) labelArray87);
        printWriter24.println((double) ' ');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(labelArray87);
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test10547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10547");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list13 = aSMifierMethodVisitor0.text;
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        printWriter15.write((-1));
        printWriter15.flush();
        java.util.Locale locale19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray24 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray26 = null;
        aSMifierMethodVisitor21.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray24, (int) (short) 1, objArray26);
        java.io.PrintWriter printWriter28 = printWriter15.printf(locale19, "", (java.lang.Object[]) strArray24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter15);
        aSMifierClassVisitor29.visitEnd();
        aSMifierClassVisitor29.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor29.visitEnd();
        aSMifierClassVisitor29.visitOuterClass("", "", "hi!");
        aSMifierClassVisitor29.visitEnd();
        aSMifierClassVisitor29.visitSource("", "");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierClassVisitor29);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor49.visitMaxs(100, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor49.visitParameterAnnotation(100, "", false);
        org.mockito.asm.FieldVisitor fieldVisitor65 = aSMifierClassVisitor29.visitField((int) (short) 1, "", "", "", (java.lang.Object) aSMifierMethodVisitor49);
        aSMifierMethodVisitor49.visitVarInsn((int) ' ', (int) (short) 1);
        aSMifierMethodVisitor49.visitVarInsn((int) (short) 10, (int) (byte) 1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(fieldVisitor65);
    }

    @Test
    public void test10548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10548");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        boolean boolean6 = printWriter1.checkError();
        printWriter1.print((float) (byte) 10);
        printWriter1.print(0.0f);
        printWriter1.println((float) 'a');
        printWriter1.print((int) ' ');
        printWriter1.write((-1));
        printWriter1.println(0.0f);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test10549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10549");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) ' ');
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 100, label18);
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label20, label21, label22, "");
        java.util.List list25 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitParameterAnnotation((int) 'a', "", false);
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label33, label34, 0);
        aSMifierMethodVisitor0.visitMaxs(0, (int) (short) 1);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(annotationVisitor29);
    }

    @Test
    public void test10550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10550");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor15);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 100, (int) '#');
        aSMifierMethodVisitor0.visitInsn((int) (short) 100);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label27);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 0, "hi!", "", "");
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label37, label38, 10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test10551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10551");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = printWriter1.append((java.lang.CharSequence) "");
        printWriter22.close();
        java.io.PrintWriter printWriter25 = printWriter22.append(' ');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj35 = null;
        aSMifierMethodVisitor26.visitLdcInsn(obj35);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor26.visitAnnotationDefault();
        printWriter25.println((java.lang.Object) aSMifierMethodVisitor26);
        printWriter25.println();
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter25);
        printWriter40.print(0.0d);
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test10552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10552");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.println();
        printWriter24.write("", (int) (byte) 100, (int) (byte) -1);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
    }

    @Test
    public void test10553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10553");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter6.println();
        printWriter6.print((float) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor11.visitTryCatchBlock(label12, label13, label14, "");
        aSMifierMethodVisitor11.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj20 = null;
        aSMifierMethodVisitor11.visitLdcInsn(obj20);
        aSMifierMethodVisitor11.visitInsn((int) ' ');
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor11.visitJumpInsn(100, label25);
        aSMifierMethodVisitor11.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label30 = null;
        int[] intArray31 = new int[] {};
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter37 = printWriter33.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor39.visitJumpInsn((int) (short) 1, label51);
        aSMifierMethodVisitor39.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label[] labelArray59 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label58, labelArray59);
        java.io.PrintWriter printWriter61 = printWriter37.printf("", (java.lang.Object[]) labelArray59);
        aSMifierMethodVisitor11.visitLookupSwitchInsn(label30, intArray31, labelArray59);
        java.io.PrintWriter printWriter63 = printWriter6.printf("", (java.lang.Object[]) labelArray59);
        printWriter63.println();
        printWriter63.print(false);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(labelArray59);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(printWriter63);
    }

    @Test
    public void test10554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10554");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label20, label21, label22, "hi!");
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        printWriter26.write((-1));
        printWriter26.flush();
        java.util.Locale locale30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray37 = null;
        aSMifierMethodVisitor32.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray35, (int) (short) 1, objArray37);
        java.io.PrintWriter printWriter39 = printWriter26.printf(locale30, "", (java.lang.Object[]) strArray35);
        aSMifierMethodVisitor0.print(printWriter39);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        java.util.Locale locale43 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray50 = null;
        aSMifierMethodVisitor45.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray48, (int) (short) 1, objArray50);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor53.visitTryCatchBlock(label54, label55, label56, "");
        aSMifierMethodVisitor53.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray62 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray64 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor53, strArray62, 1.0f };
        java.io.PrintWriter printWriter65 = printWriter42.printf(locale43, "", (java.lang.Object[]) strArray62);
        printWriter65.println();
        printWriter65.println((long) (short) 1);
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter((java.io.Writer) printWriter65);
        aSMifierMethodVisitor0.print(printWriter65);
        aSMifierMethodVisitor0.visitMethodInsn(0, "hi!", "", "");
        org.mockito.asm.Label label77 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) -1, label77);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertNotNull(printWriter65);
    }

    @Test
    public void test10555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10555");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.println((float) (short) 0);
        java.io.PrintWriter printWriter7 = printWriter1.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter9 = printWriter1.append('#');
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter("hi!");
        printWriter11.print(false);
        java.io.PrintWriter printWriter15 = printWriter11.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter((java.io.Writer) printWriter11);
        printWriter16.println();
        printWriter16.print((float) (short) -1);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        java.util.Locale locale22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray27 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray29 = null;
        aSMifierMethodVisitor24.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray27, (int) (short) 1, objArray29);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray41 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray43 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor32, strArray41, 1.0f };
        java.io.PrintWriter printWriter44 = printWriter21.printf(locale22, "", (java.lang.Object[]) strArray41);
        java.io.PrintWriter printWriter46 = printWriter44.append((java.lang.CharSequence) "");
        printWriter44.write((int) (byte) 0);
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("hi!");
        java.util.Locale locale51 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray56 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray58 = null;
        aSMifierMethodVisitor53.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray56, (int) (short) 1, objArray58);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor61.visitTryCatchBlock(label62, label63, label64, "");
        aSMifierMethodVisitor61.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray70 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray72 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor61, strArray70, 1.0f };
        java.io.PrintWriter printWriter73 = printWriter50.printf(locale51, "", (java.lang.Object[]) strArray70);
        char[] charArray80 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter73.println(charArray80);
        printWriter44.print(charArray80);
        printWriter16.write(charArray80);
        printWriter1.print(charArray80);
        printWriter1.println(10.0f);
        org.junit.Assert.assertNotNull(printWriter7);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test10556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10556");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        aSMifierMethodVisitor39.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor39.visitLocalVariable("hi!", "hi!", "hi!", label56, label57, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor39.visitParameterAnnotation(0, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor64 = aSMifierClassVisitor28.visitField((int) ' ', "hi!", "hi!", "", (java.lang.Object) aSMifierMethodVisitor39);
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor39.visitLineNumber(1, label66);
        aSMifierMethodVisitor39.visitFieldInsn((int) ' ', "", "", "");
        aSMifierMethodVisitor39.visitMethodInsn(0, "hi!", "hi!", "");
        aSMifierMethodVisitor39.visitInsn(0);
        org.mockito.asm.Attribute attribute80 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor39.visitAttribute(attribute80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor64);
    }

    @Test
    public void test10557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10557");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.println(0.0f);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        printWriter24.println("hi!");
        // The following exception was thrown during execution in test generation
        try {
            printWriter24.write("hi!", (int) (byte) 0, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
    }

    @Test
    public void test10558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10558");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        org.mockito.asm.MethodVisitor methodVisitor37 = aSMifierClassVisitor31.visitMethod(0, "", "", "hi!", strArray36);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter47 = printWriter43.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj58 = null;
        aSMifierMethodVisitor49.visitLdcInsn(obj58);
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor49.visitJumpInsn((int) (short) 1, label61);
        aSMifierMethodVisitor49.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label[] labelArray69 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor49.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label68, labelArray69);
        java.io.PrintWriter printWriter71 = printWriter47.printf("", (java.lang.Object[]) labelArray69);
        printWriter71.println('a');
        org.mockito.asm.FieldVisitor fieldVisitor74 = aSMifierClassVisitor31.visitField((int) 'a', "hi!", "hi!", "hi!", (java.lang.Object) printWriter71);
        java.lang.String[] strArray79 = null;
        org.mockito.asm.MethodVisitor methodVisitor80 = aSMifierClassVisitor31.visitMethod((int) (short) -1, "", "", "hi!", strArray79);
        org.mockito.asm.AnnotationVisitor annotationVisitor83 = aSMifierClassVisitor31.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodVisitor37);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(labelArray69);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(fieldVisitor74);
        org.junit.Assert.assertNotNull(methodVisitor80);
        org.junit.Assert.assertNotNull(annotationVisitor83);
    }

    @Test
    public void test10559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10559");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, (int) (short) 0);
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter("hi!");
        printWriter67.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter71 = printWriter67.append((java.lang.CharSequence) "");
        printWriter71.close();
        printWriter71.println(true);
        printWriter71.println((double) '#');
        java.io.PrintWriter printWriter77 = new java.io.PrintWriter((java.io.Writer) printWriter71);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter71);
        aSMifierMethodVisitor0.visitIincInsn(1, (int) (short) -1);
        aSMifierMethodVisitor0.visitIntInsn(1, 100);
        java.lang.Object obj85 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj85);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(printWriter71);
    }

    @Test
    public void test10560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10560");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 1, 0);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        aSMifierMethodVisitor20.visitEnd();
        aSMifierMethodVisitor20.visitMaxs((int) (byte) 0, (int) (short) 1);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label[] labelArray38 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor20.visitTableSwitchInsn((-1), (int) (byte) 0, label37, labelArray38);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 1, label19, labelArray38);
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor0.visitLabel(label41);
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitMaxs(0, (int) (short) 10);
        org.junit.Assert.assertNotNull(labelArray38);
        org.junit.Assert.assertNotNull(annotationVisitor45);
    }

    @Test
    public void test10561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10561");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        printWriter24.write("hi!");
        printWriter24.print((double) 100);
        printWriter24.print((float) (byte) 10);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter39.println('a');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test10562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10562");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        printWriter27.print((java.lang.Object) (short) -1);
        printWriter27.flush();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter27);
        printWriter31.write("");
        org.mockito.asm.FieldVisitor fieldVisitor34 = aSMifierClassVisitor15.visitField(0, "", "", "hi!", (java.lang.Object) printWriter31);
        printWriter31.flush();
        printWriter31.flush();
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.Writer) printWriter31, false);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.write((-1));
        printWriter40.flush();
        java.util.Locale locale44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray49 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray51 = null;
        aSMifierMethodVisitor46.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray49, (int) (short) 1, objArray51);
        java.io.PrintWriter printWriter53 = printWriter40.printf(locale44, "", (java.lang.Object[]) strArray49);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor54 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter40);
        aSMifierClassVisitor54.visitEnd();
        aSMifierClassVisitor54.visitSource("", "hi!");
        java.lang.String[] strArray64 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor54.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray64);
        aSMifierClassVisitor54.visitInnerClass("", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor75 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray78 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray80 = null;
        aSMifierMethodVisitor75.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray78, (int) (short) 1, objArray80);
        org.mockito.asm.MethodVisitor methodVisitor82 = aSMifierClassVisitor54.visitMethod((int) (short) 0, "", "", "hi!", strArray78);
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = aSMifierClassVisitor54.visitAnnotation("hi!", true);
        printWriter38.print((java.lang.Object) true);
        printWriter38.print(0.0f);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor34);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(methodVisitor82);
        org.junit.Assert.assertNotNull(annotationVisitor85);
    }

    @Test
    public void test10563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10563");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label63, label64, label65, "");
        java.util.List list68 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label70);
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label label74 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label72, label73, label74, "");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(list68);
    }

    @Test
    public void test10564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10564");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        char[] charArray56 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter49.println(charArray56);
        printWriter24.print(charArray56);
        printWriter24.print(true);
        java.io.PrintWriter printWriter62 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.print((float) '4');
        printWriter24.print("");
        java.io.PrintWriter printWriter68 = printWriter24.append(' ');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor69 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierClassVisitor69.visitAnnotation("", false);
        aSMifierClassVisitor69.visitInnerClass("hi!", "hi!", "hi!", (int) (byte) 10);
        org.mockito.asm.Attribute attribute78 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor69.visitAttribute(attribute78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertNotNull(annotationVisitor72);
    }

    @Test
    public void test10565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10565");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.print((int) '4');
        printWriter8.close();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray15 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray17 = null;
        aSMifierMethodVisitor12.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray15, (int) (short) 1, objArray17);
        aSMifierMethodVisitor12.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor12.visitAnnotation("", false);
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor12.visitLineNumber(1, label28);
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor12.visitLineNumber((int) ' ', label31);
        aSMifierMethodVisitor12.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor12.visitAnnotationDefault();
        printWriter8.print((java.lang.Object) aSMifierMethodVisitor12);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor34);
    }

    @Test
    public void test10566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10566");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, 0);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitInsn((int) (short) 0);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 0, "", "hi!", "");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationVisitor73);
    }

    @Test
    public void test10567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10567");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 0, "", "", "hi!");
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print(false);
        java.io.PrintWriter printWriter33 = printWriter29.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter((java.io.Writer) printWriter33, true);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter33);
        printWriter36.write("");
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter44 = printWriter40.append((java.lang.CharSequence) "");
        printWriter36.println((java.lang.Object) printWriter44);
        printWriter44.print((long) (byte) 10);
        printWriter44.println(10.0d);
        java.io.PrintWriter printWriter51 = printWriter44.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor52 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter((java.io.Writer) printWriter44);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter53);
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor0.visitLineNumber(100, label56);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(printWriter51);
    }

    @Test
    public void test10568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10568");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj40 = null;
        aSMifierMethodVisitor31.visitLdcInsn(obj40);
        aSMifierMethodVisitor31.visitInsn((int) ' ');
        aSMifierMethodVisitor31.visitIincInsn((int) (byte) 100, (int) (short) 1);
        aSMifierMethodVisitor31.visitTypeInsn((int) (byte) 0, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor31.visitAnnotationDefault();
        org.mockito.asm.FieldVisitor fieldVisitor51 = aSMifierClassVisitor15.visitField((int) (short) 10, "hi!", "", "", (java.lang.Object) aSMifierMethodVisitor31);
        aSMifierMethodVisitor31.visitTypeInsn(0, "hi!");
        aSMifierMethodVisitor31.visitTypeInsn((int) '4', "");
        aSMifierMethodVisitor31.visitFieldInsn((int) (short) 0, "", "", "");
        java.util.List list63 = aSMifierMethodVisitor31.getText();
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor31.visitJumpInsn((int) (short) 10, label65);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor51);
        org.junit.Assert.assertNotNull(list63);
    }

    @Test
    public void test10569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10569");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.println(false);
        printWriter24.println(0);
        java.util.Locale locale31 = null;
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.write((-1));
        printWriter34.flush();
        java.util.Locale locale38 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray43 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray45 = null;
        aSMifierMethodVisitor40.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray43, (int) (short) 1, objArray45);
        java.io.PrintWriter printWriter47 = printWriter34.printf(locale38, "", (java.lang.Object[]) strArray43);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor48 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter34);
        aSMifierClassVisitor48.visitEnd();
        aSMifierClassVisitor48.visitSource("", "hi!");
        java.lang.String[] strArray58 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor48.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray58);
        aSMifierClassVisitor48.visitInnerClass("", "hi!", "", (int) (short) -1);
        java.lang.String[] strArray69 = org.mockito.asm.util.AbstractVisitor.TYPES;
        org.mockito.asm.MethodVisitor methodVisitor70 = aSMifierClassVisitor48.visitMethod(1, "hi!", "hi!", "", strArray69);
        java.io.PrintWriter printWriter71 = printWriter24.printf(locale31, "hi!", (java.lang.Object[]) strArray69);
        java.lang.String[] strArray73 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter74 = printWriter24.printf("hi!", (java.lang.Object[]) strArray73);
        java.io.PrintWriter printWriter75 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter75.println("");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(methodVisitor70);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(printWriter74);
    }

    @Test
    public void test10570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10570");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label10);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) ' ');
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor16);
    }

    @Test
    public void test10571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10571");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        printWriter26.print(false);
        java.io.PrintWriter printWriter35 = printWriter26.append('a');
        printWriter26.flush();
        printWriter26.write("hi!", (int) (short) 1, (int) (short) 0);
        printWriter26.write("hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter35);
    }

    @Test
    public void test10572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10572");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitMaxs(0, (-1));
        aSMifierMethodVisitor9.visitCode();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor9);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor9.visitLabel(label20);
        aSMifierMethodVisitor9.visitVarInsn(0, (int) (byte) -1);
        aSMifierMethodVisitor9.visitVarInsn((int) (short) 0, 100);
        aSMifierMethodVisitor9.visitMaxs((int) (byte) 10, (int) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor9.visitAnnotationDefault();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label32, label33, label34, "");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor9.visitInsn((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor31);
    }

    @Test
    public void test10573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10573");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        java.util.List list12 = aSMifierMethodVisitor0.getText();
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        java.util.Locale locale15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray20 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray22 = null;
        aSMifierMethodVisitor17.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray20, (int) (short) 1, objArray22);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor25.visitTryCatchBlock(label26, label27, label28, "");
        aSMifierMethodVisitor25.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray34 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray36 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor25, strArray34, 1.0f };
        java.io.PrintWriter printWriter37 = printWriter14.printf(locale15, "", (java.lang.Object[]) strArray34);
        char[] charArray44 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter37.println(charArray44);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.Writer) printWriter37, true);
        java.io.PrintWriter printWriter49 = printWriter37.append((java.lang.CharSequence) "");
        printWriter37.println(false);
        aSMifierMethodVisitor0.print(printWriter37);
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label59, label60, 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", true);
        aSMifierMethodVisitor0.visitTypeInsn(100, "");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(annotationVisitor66);
    }

    @Test
    public void test10574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10574");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter27 = printWriter23.append((java.lang.CharSequence) "");
        printWriter27.close();
        printWriter27.println(true);
        java.util.Locale locale31 = null;
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter36 = printWriter34.append('a');
        printWriter34.print("hi!");
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter34, false);
        printWriter40.write("hi!");
        printWriter40.println(' ');
        java.util.Locale locale45 = null;
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        java.util.Locale locale49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray56 = null;
        aSMifierMethodVisitor51.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray54, (int) (short) 1, objArray56);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor59.visitTryCatchBlock(label60, label61, label62, "");
        aSMifierMethodVisitor59.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray68 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray70 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor59, strArray68, 1.0f };
        java.io.PrintWriter printWriter71 = printWriter48.printf(locale49, "", (java.lang.Object[]) strArray68);
        java.io.PrintWriter printWriter72 = printWriter40.printf(locale45, "", (java.lang.Object[]) strArray68);
        java.io.PrintWriter printWriter73 = printWriter27.format(locale31, "", (java.lang.Object[]) strArray68);
        aSMifierClassVisitor15.visit(0, (int) (short) 10, "hi!", "hi!", "", strArray68);
        aSMifierClassVisitor15.visitOuterClass("", "", "");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(printWriter73);
    }

    @Test
    public void test10575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10575");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        aSMifierMethodVisitor6.visitTryCatchBlock(label7, label8, label9, "");
        aSMifierMethodVisitor6.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj15 = null;
        aSMifierMethodVisitor6.visitLdcInsn(obj15);
        aSMifierMethodVisitor6.visitInsn((int) ' ');
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj31 = null;
        aSMifierMethodVisitor22.visitLdcInsn(obj31);
        org.mockito.asm.Label label33 = null;
        int[] intArray40 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label[] labelArray54 = new org.mockito.asm.Label[] { label53 };
        aSMifierMethodVisitor41.visitTableSwitchInsn(0, (int) (byte) 10, label52, labelArray54);
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label33, intArray40, labelArray54);
        aSMifierMethodVisitor6.visitTableSwitchInsn((int) '4', (int) '#', label21, labelArray54);
        java.io.PrintWriter printWriter58 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray54);
        printWriter1.close();
        printWriter1.print("hi!");
        printWriter1.println((int) (short) 1);
        printWriter1.write("", 0, (int) ' ');
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray54);
        org.junit.Assert.assertNotNull(printWriter58);
    }

    @Test
    public void test10576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10576");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label6 = null;
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        printWriter8.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label[] labelArray25 = new org.mockito.asm.Label[] { label24 };
        aSMifierMethodVisitor12.visitTableSwitchInsn(0, (int) (byte) 10, label23, labelArray25);
        java.io.PrintWriter printWriter27 = printWriter8.printf("hi!", (java.lang.Object[]) labelArray25);
        aSMifierMethodVisitor0.visitTableSwitchInsn(1, (int) (short) 10, label6, labelArray25);
        org.mockito.asm.Label label31 = null;
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter37 = printWriter33.append((java.lang.CharSequence) "");
        printWriter33.print((double) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj50 = null;
        aSMifierMethodVisitor41.visitLdcInsn(obj50);
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor41.visitJumpInsn((int) (short) 1, label53);
        aSMifierMethodVisitor41.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor41.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor41.visitAnnotationDefault();
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter("hi!");
        printWriter65.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor69.visitTryCatchBlock(label70, label71, label72, "");
        aSMifierMethodVisitor69.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label[] labelArray82 = new org.mockito.asm.Label[] { label81 };
        aSMifierMethodVisitor69.visitTableSwitchInsn(0, (int) (byte) 10, label80, labelArray82);
        java.io.PrintWriter printWriter84 = printWriter65.printf("hi!", (java.lang.Object[]) labelArray82);
        java.lang.String[] strArray86 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor41.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray82, 1, (java.lang.Object[]) strArray86);
        java.io.PrintWriter printWriter88 = printWriter33.printf("hi!", (java.lang.Object[]) labelArray82);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) ' ', (-1), label31, labelArray82);
        org.mockito.asm.AnnotationVisitor annotationVisitor93 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) -1, "hi!", false);
        aSMifierMethodVisitor0.visitIincInsn((int) '4', (int) '4');
        org.mockito.asm.Label label98 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 100, label98);
        org.junit.Assert.assertNotNull(labelArray25);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(labelArray82);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(annotationVisitor93);
    }

    @Test
    public void test10577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10577");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 1, "hi!", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.util.List list20 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list20);
    }

    @Test
    public void test10578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10578");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        aSMifierMethodVisitor6.visitTryCatchBlock(label7, label8, label9, "");
        aSMifierMethodVisitor6.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj15 = null;
        aSMifierMethodVisitor6.visitLdcInsn(obj15);
        aSMifierMethodVisitor6.visitInsn((int) ' ');
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj31 = null;
        aSMifierMethodVisitor22.visitLdcInsn(obj31);
        org.mockito.asm.Label label33 = null;
        int[] intArray40 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label[] labelArray54 = new org.mockito.asm.Label[] { label53 };
        aSMifierMethodVisitor41.visitTableSwitchInsn(0, (int) (byte) 10, label52, labelArray54);
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label33, intArray40, labelArray54);
        aSMifierMethodVisitor6.visitTableSwitchInsn((int) '4', (int) '#', label21, labelArray54);
        java.io.PrintWriter printWriter58 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray54);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.io.PrintWriter printWriter61 = printWriter58.append('#');
        printWriter58.write((int) '4');
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray54);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(printWriter61);
    }

    @Test
    public void test10579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10579");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitTypeInsn((int) '#', "");
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLabel(label26);
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label28, label29, label30, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter("hi!");
        printWriter38.write((-1));
        printWriter38.flush();
        java.util.Locale locale42 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray47 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray49 = null;
        aSMifierMethodVisitor44.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray47, (int) (short) 1, objArray49);
        java.io.PrintWriter printWriter51 = printWriter38.printf(locale42, "", (java.lang.Object[]) strArray47);
        printWriter38.print((long) (byte) 1);
        java.io.PrintWriter printWriter55 = printWriter38.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter("hi!");
        printWriter58.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor62.visitTryCatchBlock(label63, label64, label65, "");
        aSMifierMethodVisitor62.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label[] labelArray75 = new org.mockito.asm.Label[] { label74 };
        aSMifierMethodVisitor62.visitTableSwitchInsn(0, (int) (byte) 10, label73, labelArray75);
        java.io.PrintWriter printWriter77 = printWriter58.printf("hi!", (java.lang.Object[]) labelArray75);
        java.io.PrintWriter printWriter78 = printWriter55.format("hi!", (java.lang.Object[]) labelArray75);
        printWriter55.write((int) '4');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter55);
        printWriter55.println(true);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(labelArray75);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(printWriter78);
    }

    @Test
    public void test10580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10580");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.println(100.0f);
        printWriter1.print((long) (byte) 0);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        java.util.Locale locale11 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray16 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray18 = null;
        aSMifierMethodVisitor13.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray16, (int) (short) 1, objArray18);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor21.visitTryCatchBlock(label22, label23, label24, "");
        aSMifierMethodVisitor21.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor21, strArray30, 1.0f };
        java.io.PrintWriter printWriter33 = printWriter10.printf(locale11, "", (java.lang.Object[]) strArray30);
        char[] charArray40 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter33.println(charArray40);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter((java.io.Writer) printWriter33, true);
        java.io.PrintWriter printWriter45 = printWriter33.append((java.lang.CharSequence) "");
        printWriter45.print("");
        printWriter45.print((float) (byte) 1);
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        printWriter51.write((-1));
        printWriter51.flush();
        java.lang.Object[] objArray56 = null;
        java.io.PrintWriter printWriter57 = printWriter51.format("hi!", objArray56);
        printWriter51.print("hi!");
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter("hi!");
        java.util.Locale locale62 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray67 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray69 = null;
        aSMifierMethodVisitor64.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray67, (int) (short) 1, objArray69);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor72 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        aSMifierMethodVisitor72.visitTryCatchBlock(label73, label74, label75, "");
        aSMifierMethodVisitor72.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray81 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray83 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor72, strArray81, 1.0f };
        java.io.PrintWriter printWriter84 = printWriter61.printf(locale62, "", (java.lang.Object[]) strArray81);
        char[] charArray91 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter84.println(charArray91);
        char[] charArray93 = new char[] {};
        printWriter84.print(charArray93);
        printWriter51.write(charArray93);
        printWriter45.write(charArray93);
        // The following exception was thrown during execution in test generation
        try {
            printWriter1.write(charArray93, (int) (short) 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter45);
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[]");
    }

    @Test
    public void test10581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10581");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        java.io.PrintWriter printWriter16 = printWriter14.append((java.lang.CharSequence) "hi!");
        printWriter16.flush();
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.Writer) printWriter16);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter16);
    }

    @Test
    public void test10582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10582");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.print((int) ' ');
        java.lang.Object obj29 = null;
        printWriter24.print(obj29);
        printWriter24.println(false);
        java.io.PrintWriter printWriter34 = printWriter24.append('4');
        java.util.Locale locale35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj46 = null;
        aSMifierMethodVisitor37.visitLdcInsn(obj46);
        aSMifierMethodVisitor37.visitInsn((int) ' ');
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor37.visitJumpInsn(100, label51);
        aSMifierMethodVisitor37.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor37.visitCode();
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor37.visitJumpInsn((int) (short) 10, label58);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray65 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray67 = null;
        aSMifierMethodVisitor62.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray65, (int) (short) 1, objArray67);
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter("hi!");
        printWriter71.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray75 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter76 = printWriter71.format("", (java.lang.Object[]) strArray75);
        aSMifierMethodVisitor37.visitFrame((int) '#', (int) '4', (java.lang.Object[]) strArray65, 0, (java.lang.Object[]) strArray75);
        java.io.PrintWriter printWriter78 = printWriter34.format(locale35, "hi!", (java.lang.Object[]) strArray75);
        printWriter78.print("");
        boolean boolean81 = printWriter78.checkError();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(printWriter76);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test10583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10583");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.write((-1));
        printWriter22.flush();
        java.util.Locale locale26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray31 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray33 = null;
        aSMifierMethodVisitor28.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray31, (int) (short) 1, objArray33);
        java.io.PrintWriter printWriter35 = printWriter22.printf(locale26, "", (java.lang.Object[]) strArray31);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter22);
        aSMifierClassVisitor36.visitEnd();
        aSMifierClassVisitor36.visitSource("", "hi!");
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor36.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray46);
        org.mockito.asm.MethodVisitor methodVisitor48 = aSMifierClassVisitor15.visitMethod((int) (short) 100, "hi!", "hi!", "", strArray46);
        aSMifierClassVisitor15.visitInnerClass("", "", "", (int) (short) 100);
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierClassVisitor15.visitAnnotation("", true);
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.io.PrintWriter printWriter66 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter68 = printWriter66.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor69 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter66);
        aSMifierClassVisitor69.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierClassVisitor69.visitAnnotation("", false);
        aSMifierClassVisitor69.visitSource("", "hi!");
        aSMifierClassVisitor69.visitEnd();
        aSMifierClassVisitor69.visitSource("hi!", "");
        org.mockito.asm.FieldVisitor fieldVisitor83 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor86 = fieldVisitor83.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor57);
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertNotNull(annotationVisitor75);
        org.junit.Assert.assertNotNull(fieldVisitor83);
        org.junit.Assert.assertNotNull(annotationVisitor86);
    }

    @Test
    public void test10584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10584");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("hi!");
        java.util.Locale locale29 = null;
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter34 = printWriter32.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj44 = null;
        aSMifierMethodVisitor35.visitLdcInsn(obj44);
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor35.visitJumpInsn((int) (short) 1, label47);
        aSMifierMethodVisitor35.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor35.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierMethodVisitor35.visitAnnotationDefault();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter("hi!");
        printWriter59.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor63.visitTryCatchBlock(label64, label65, label66, "");
        aSMifierMethodVisitor63.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label[] labelArray76 = new org.mockito.asm.Label[] { label75 };
        aSMifierMethodVisitor63.visitTableSwitchInsn(0, (int) (byte) 10, label74, labelArray76);
        java.io.PrintWriter printWriter78 = printWriter59.printf("hi!", (java.lang.Object[]) labelArray76);
        java.lang.String[] strArray80 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor35.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray76, 1, (java.lang.Object[]) strArray80);
        printWriter34.println((java.lang.Object) strArray80);
        java.io.PrintWriter printWriter83 = printWriter26.format(locale29, "hi!", (java.lang.Object[]) strArray80);
        printWriter83.println(100.0f);
        printWriter83.println();
        printWriter83.print((int) '4');
        printWriter83.println((float) (byte) 100);
        printWriter83.flush();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(labelArray76);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(printWriter83);
    }

    @Test
    public void test10585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10585");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        java.io.PrintWriter printWriter36 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.Writer) printWriter36, false);
        printWriter38.println();
        printWriter38.print((double) 10L);
        printWriter38.println((long) (short) 10);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter36);
    }

    @Test
    public void test10586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10586");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter28 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.flush();
        printWriter24.println((double) 0L);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter28);
    }

    @Test
    public void test10587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10587");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        java.util.List list6 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitFieldInsn((int) '#', "", "", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 1, (int) (short) 100);
        aSMifierMethodVisitor0.visitIntInsn(0, 10);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label18, label19, label20, "");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 100);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label27);
        aSMifierMethodVisitor0.visitInsn((int) 'a');
        aSMifierMethodVisitor0.visitIntInsn(100, (int) (byte) 100);
        org.junit.Assert.assertNotNull(list6);
    }

    @Test
    public void test10588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10588");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMaxs((int) (short) -1, (int) (short) 100);
        java.util.List list17 = aSMifierMethodVisitor0.text;
        java.lang.Object obj18 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj18);
        aSMifierMethodVisitor0.visitFieldInsn(100, "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) 'a', (int) (byte) 0);
        org.junit.Assert.assertNotNull(list17);
    }

    @Test
    public void test10589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10589");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter16 = printWriter12.append((java.lang.CharSequence) "");
        printWriter8.println((java.lang.Object) printWriter16);
        printWriter16.print((long) (byte) 10);
        printWriter16.println(10.0d);
        java.io.PrintWriter printWriter23 = printWriter16.append((java.lang.CharSequence) "");
        printWriter16.print('a');
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(printWriter23);
    }

    @Test
    public void test10590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10590");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, 1);
        aSMifierMethodVisitor0.visitIincInsn((int) 'a', (int) (byte) 100);
        aSMifierMethodVisitor0.visitVarInsn((int) '#', 100);
        aSMifierMethodVisitor0.visitMethodInsn((int) '4', "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitMaxs((int) 'a', (-1));
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test10591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10591");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, (int) (short) 10);
        aSMifierMethodVisitor0.visitFieldInsn(1, "hi!", "", "");
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label70);
        aSMifierMethodVisitor0.visitMethodInsn((int) ' ', "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) 'a', "hi!", "", "");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
    }

    @Test
    public void test10592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10592");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append((java.lang.CharSequence) "hi!");
        printWriter24.print(false);
        java.util.Locale locale31 = null;
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter38 = printWriter34.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj49 = null;
        aSMifierMethodVisitor40.visitLdcInsn(obj49);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor40.visitJumpInsn((int) (short) 1, label52);
        aSMifierMethodVisitor40.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor40.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label59, labelArray60);
        java.io.PrintWriter printWriter62 = printWriter38.printf("", (java.lang.Object[]) labelArray60);
        java.io.PrintWriter printWriter63 = printWriter24.printf(locale31, "hi!", (java.lang.Object[]) labelArray60);
        printWriter24.print((int) (byte) 0);
        printWriter24.print((long) (byte) 0);
        java.io.PrintWriter printWriter69 = printWriter24.append(' ');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(printWriter69);
    }

    @Test
    public void test10593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10593");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, 1);
        aSMifierMethodVisitor0.visitVarInsn((int) 'a', (int) (short) 0);
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLabel(label26);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 100);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor32.visitEnum("hi!", "", "hi!");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test10594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10594");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (short) 10);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test10595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10595");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 0, label60);
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor0.visitLabel(label62);
        aSMifierMethodVisitor0.visitMaxs((int) '4', (int) ' ');
        java.util.List list67 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(list67);
    }

    @Test
    public void test10596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10596");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        java.util.List list33 = aSMifierClassVisitor28.getText();
        org.mockito.asm.FieldVisitor fieldVisitor39 = aSMifierClassVisitor28.visitField((int) (short) -1, "", "hi!", "", (java.lang.Object) 10.0f);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = fieldVisitor39.visitAnnotation("hi!", true);
        fieldVisitor39.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = fieldVisitor39.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor46);
    }

    @Test
    public void test10597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10597");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor24.visitLocalVariable("hi!", "hi!", "hi!", label33, label34, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor24.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor24.visitAnnotationDefault();
        annotationVisitor40.visitEnum("", "hi!", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor45 = aSMifierClassVisitor15.visitField((int) '#', "", "", "", (java.lang.Object) "hi!");
        aSMifierClassVisitor15.visitSource("", "");
        org.mockito.asm.FieldVisitor fieldVisitor54 = aSMifierClassVisitor15.visitField(0, "", "", "", (java.lang.Object) 10);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter("hi!");
        java.util.Locale locale57 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray62 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray64 = null;
        aSMifierMethodVisitor59.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray62, (int) (short) 1, objArray64);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor67.visitTryCatchBlock(label68, label69, label70, "");
        aSMifierMethodVisitor67.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray76 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray78 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor67, strArray76, 1.0f };
        java.io.PrintWriter printWriter79 = printWriter56.printf(locale57, "", (java.lang.Object[]) strArray76);
        char[] charArray86 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter79.println(charArray86);
        printWriter79.print(true);
        aSMifierClassVisitor15.print(printWriter79);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test10598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10598");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitMaxs((int) 'a', 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 100, "");
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test10599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10599");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        java.util.Locale locale37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray44 = null;
        aSMifierMethodVisitor39.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray42, (int) (short) 1, objArray44);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label48, label49, label50, "");
        aSMifierMethodVisitor47.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray56 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray58 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor47, strArray56, 1.0f };
        java.io.PrintWriter printWriter59 = printWriter36.printf(locale37, "", (java.lang.Object[]) strArray56);
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter((java.io.Writer) printWriter59, true);
        printWriter61.print("");
        printWriter61.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor66 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter61);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        org.mockito.asm.MethodVisitor methodVisitor72 = aSMifierClassVisitor66.visitMethod(0, "", "", "hi!", strArray71);
        org.mockito.asm.MethodVisitor methodVisitor73 = aSMifierClassVisitor15.visitMethod((int) (short) 100, "hi!", "hi!", "", strArray71);
        aSMifierClassVisitor15.visitInnerClass("hi!", "", "", (int) (short) 10);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(methodVisitor72);
        org.junit.Assert.assertNotNull(methodVisitor73);
    }

    @Test
    public void test10600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10600");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '#', label21);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        annotationVisitor29.visitEnum("", "", "hi!");
        annotationVisitor29.visitEnum("", "hi!", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor29);
    }

    @Test
    public void test10601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10601");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label19, labelArray20);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (-1));
        aSMifierMethodVisitor0.visitVarInsn((int) '4', (int) '4');
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 1, label38);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        aSMifierMethodVisitor0.visitInsn((int) '4');
        org.junit.Assert.assertNotNull(labelArray20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor30);
    }

    @Test
    public void test10602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10602");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter9, false);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter((java.io.Writer) printWriter9, false);
        printWriter9.print('#');
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter9, true);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
    }

    @Test
    public void test10603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10603");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter1.checkError();
        printWriter1.println((long) '4');
        printWriter1.print(' ');
        printWriter1.close();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test10604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10604");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println((float) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor8.visitLabel(label12);
        aSMifierMethodVisitor8.visitFieldInsn((int) (byte) 10, "", "", "");
        aSMifierMethodVisitor8.visitTypeInsn((int) (byte) 1, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor8.visitAnnotation("", false);
        annotationVisitor24.visitEnd();
        printWriter1.println((java.lang.Object) annotationVisitor24);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        aSMifierMethodVisitor27.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor27.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) aSMifierMethodVisitor27);
        java.io.PrintWriter printWriter44 = printWriter1.append((java.lang.CharSequence) "");
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(printWriter44);
    }

    @Test
    public void test10605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10605");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", false);
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter("hi!");
        printWriter20.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter24 = printWriter20.append((java.lang.CharSequence) "");
        printWriter24.close();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter24);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitVarInsn((int) '4', (int) '4');
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitLabel(label32);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor28);
    }

    @Test
    public void test10606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10606");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitSource("hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        aSMifierClassVisitor15.visitSource("", "hi!");
        aSMifierClassVisitor15.visitOuterClass("", "", "");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
    }

    @Test
    public void test10607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10607");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, (int) (short) -1);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) ' ');
        aSMifierMethodVisitor0.visitMethodInsn((int) '#', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(annotationVisitor26);
    }

    @Test
    public void test10608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10608");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter1.write((int) (short) 1);
        printWriter1.write(0);
        java.io.PrintWriter printWriter15 = printWriter1.append((java.lang.CharSequence) "");
        printWriter15.print('4');
        java.io.PrintWriter printWriter19 = printWriter15.append(' ');
        printWriter19.println((double) 'a');
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.Writer) printWriter19);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(printWriter19);
    }

    @Test
    public void test10609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10609");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        java.util.List list6 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor7.visitLocalVariable("hi!", "hi!", "hi!", label16, label17, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor7.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) annotationVisitor20);
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitLineNumber(0, label23);
        aSMifierMethodVisitor0.visitMethodInsn(0, "", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 100, "hi!", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) -1);
        aSMifierMethodVisitor0.visitVarInsn(10, 1);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor33);
    }

    @Test
    public void test10610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10610");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 10);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label78);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label83 = null;
        aSMifierMethodVisitor0.visitLabel(label83);
        org.mockito.asm.Attribute attribute85 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
    }

    @Test
    public void test10611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10611");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "hi!");
        java.util.List list27 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "hi!", false);
        java.util.List list32 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(list32);
    }

    @Test
    public void test10612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10612");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor15);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 100, (int) '#');
        java.util.List list24 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor29.visitTryCatchBlock(label30, label31, label32, "");
        aSMifierMethodVisitor29.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj38 = null;
        aSMifierMethodVisitor29.visitLdcInsn(obj38);
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor29.visitJumpInsn((int) (short) 1, label41);
        aSMifierMethodVisitor29.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor29.visitLineNumber((int) (short) 0, label47);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor29.visitAnnotation("", true);
        aSMifierMethodVisitor29.visitIntInsn((int) (short) 1, (int) (byte) 0);
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor29.visitTableSwitchInsn((int) (byte) 1, 100, label57, labelArray71);
        aSMifierMethodVisitor0.visitTableSwitchInsn(100, (int) (byte) 10, label28, labelArray71);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 0, "hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(labelArray71);
    }

    @Test
    public void test10613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10613");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter27 = printWriter25.append('a');
        printWriter25.print("hi!");
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter25, false);
        printWriter31.write("hi!");
        printWriter31.println(' ');
        java.util.Locale locale36 = null;
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        java.util.Locale locale40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray47 = null;
        aSMifierMethodVisitor42.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray45, (int) (short) 1, objArray47);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor50.visitTryCatchBlock(label51, label52, label53, "");
        aSMifierMethodVisitor50.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray59 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray61 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor50, strArray59, 1.0f };
        java.io.PrintWriter printWriter62 = printWriter39.printf(locale40, "", (java.lang.Object[]) strArray59);
        java.io.PrintWriter printWriter63 = printWriter31.printf(locale36, "", (java.lang.Object[]) strArray59);
        org.mockito.asm.MethodVisitor methodVisitor64 = aSMifierClassVisitor15.visitMethod(1, "hi!", "hi!", "", strArray59);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierClassVisitor15.visitAnnotation("", false);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "hi!", 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierClassVisitor15.visitAnnotation("", false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(methodVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor76);
    }

    @Test
    public void test10614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10614");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitIincInsn((int) '#', (int) (byte) -1);
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label4, label5, label6, "hi!");
        java.util.List list9 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 100, (int) '4');
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        org.junit.Assert.assertNotNull(list9);
    }

    @Test
    public void test10615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10615");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.println('a');
        java.util.Locale locale6 = null;
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("hi!");
        printWriter9.write((-1));
        printWriter9.flush();
        java.util.Locale locale13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray20 = null;
        aSMifierMethodVisitor15.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray18, (int) (short) 1, objArray20);
        java.io.PrintWriter printWriter22 = printWriter9.printf(locale13, "", (java.lang.Object[]) strArray18);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor23 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter9);
        aSMifierClassVisitor23.visitEnd();
        aSMifierClassVisitor23.visitOuterClass("hi!", "", "");
        aSMifierClassVisitor23.visitSource("", "hi!");
        java.lang.Object obj36 = null;
        org.mockito.asm.FieldVisitor fieldVisitor37 = aSMifierClassVisitor23.visitField(1, "", "", "", obj36);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.write((-1));
        printWriter43.flush();
        java.util.Locale locale47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray54 = null;
        aSMifierMethodVisitor49.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray52, (int) (short) 1, objArray54);
        java.io.PrintWriter printWriter56 = printWriter43.printf(locale47, "", (java.lang.Object[]) strArray52);
        org.mockito.asm.MethodVisitor methodVisitor57 = aSMifierClassVisitor23.visitMethod(1, "hi!", "", "", strArray52);
        java.io.PrintWriter printWriter58 = printWriter1.printf(locale6, "hi!", (java.lang.Object[]) strArray52);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter62 = printWriter58.append((java.lang.CharSequence) "hi!", (-1), (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(fieldVisitor37);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(methodVisitor57);
        org.junit.Assert.assertNotNull(printWriter58);
    }

    @Test
    public void test10616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10616");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter3, true);
        printWriter3.close();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter3);
        printWriter3.close();
        printWriter3.flush();
        org.junit.Assert.assertNotNull(printWriter3);
    }

    @Test
    public void test10617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10617");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label27 = null;
        int[] intArray34 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        aSMifierMethodVisitor16.visitLookupSwitchInsn(label27, intArray34, labelArray48);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) '4', (int) '#', label15, labelArray48);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label55, label56, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 10, "", "", "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 0, "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 10, (int) ' ');
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, (int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray48);
    }

    @Test
    public void test10618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10618");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        printWriter34.println();
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        printWriter34.print("hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test10619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10619");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter9, false);
        printWriter11.print((-1L));
        java.io.PrintWriter printWriter15 = printWriter11.append((java.lang.CharSequence) "hi!");
        printWriter11.println((long) (byte) 1);
        java.util.Locale locale18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor20.visitJumpInsn((int) (short) 1, label32);
        aSMifierMethodVisitor20.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor20.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor20.visitTypeInsn((int) (short) 10, "hi!");
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor20.visitJumpInsn((int) (short) 0, label46);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor20.visitTableSwitchInsn(0, (-1), label50, labelArray52);
        java.io.PrintWriter printWriter54 = printWriter11.format(locale18, "", (java.lang.Object[]) labelArray52);
        printWriter54.flush();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(printWriter54);
    }

    @Test
    public void test10620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10620");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 1, "hi!", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) -1, "hi!", false);
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter18 = printWriter16.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor19.visitTryCatchBlock(label20, label21, label22, "");
        aSMifierMethodVisitor19.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj28 = null;
        aSMifierMethodVisitor19.visitLdcInsn(obj28);
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor19.visitJumpInsn((int) (short) 1, label31);
        aSMifierMethodVisitor19.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor19.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor19.visitAnnotationDefault();
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label48, label49, label50, "");
        aSMifierMethodVisitor47.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] { label59 };
        aSMifierMethodVisitor47.visitTableSwitchInsn(0, (int) (byte) 10, label58, labelArray60);
        java.io.PrintWriter printWriter62 = printWriter43.printf("hi!", (java.lang.Object[]) labelArray60);
        java.lang.String[] strArray64 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor19.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray60, 1, (java.lang.Object[]) strArray64);
        printWriter18.println((java.lang.Object) strArray64);
        printWriter18.write("hi!", 100, (int) (byte) -1);
        java.io.PrintWriter printWriter72 = printWriter18.append(' ');
        printWriter72.print((double) (short) 0);
        aSMifierMethodVisitor0.print(printWriter72);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(printWriter72);
    }

    @Test
    public void test10621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10621");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor8 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 10, label10);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        org.mockito.asm.Attribute attribute14 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor8);
    }

    @Test
    public void test10622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10622");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.io.PrintWriter printWriter33 = printWriter26.append('4');
        printWriter26.flush();
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        printWriter36.print((java.lang.Object) (short) -1);
        printWriter36.flush();
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter36);
        printWriter40.write("");
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("hi!");
        java.util.Locale locale45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray50 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray52 = null;
        aSMifierMethodVisitor47.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray50, (int) (short) 1, objArray52);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor55.visitTryCatchBlock(label56, label57, label58, "");
        aSMifierMethodVisitor55.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray64 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray66 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor55, strArray64, 1.0f };
        java.io.PrintWriter printWriter67 = printWriter44.printf(locale45, "", (java.lang.Object[]) strArray64);
        char[] charArray74 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter67.println(charArray74);
        printWriter40.print(charArray74);
        printWriter26.println(charArray74);
        java.io.PrintWriter printWriter79 = new java.io.PrintWriter((java.io.Writer) printWriter26, true);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test10623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10623");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter1.write((int) (short) 1);
        printWriter1.write(0);
        java.io.PrintWriter printWriter15 = printWriter1.append('a');
        java.io.PrintWriter printWriter17 = printWriter1.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter19 = printWriter1.append('4');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        aSMifierClassVisitor20.visitOuterClass("", "hi!", "hi!");
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        java.util.Locale locale31 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray36 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray38 = null;
        aSMifierMethodVisitor33.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray36, (int) (short) 1, objArray38);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray50 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray52 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor41, strArray50, 1.0f };
        java.io.PrintWriter printWriter53 = printWriter30.printf(locale31, "", (java.lang.Object[]) strArray50);
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter((java.io.Writer) printWriter53, true);
        printWriter55.print("hi!");
        printWriter55.print(false);
        java.io.PrintWriter printWriter61 = printWriter55.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter63 = printWriter61.append('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor64 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter61);
        aSMifierClassVisitor64.visitEnd();
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter("hi!");
        printWriter71.print(false);
        java.io.PrintWriter printWriter75 = printWriter71.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter77 = new java.io.PrintWriter((java.io.Writer) printWriter75, true);
        printWriter77.flush();
        java.io.PrintWriter printWriter80 = new java.io.PrintWriter((java.io.Writer) printWriter77, false);
        printWriter80.println((float) '#');
        printWriter80.write("");
        org.mockito.asm.FieldVisitor fieldVisitor85 = aSMifierClassVisitor64.visitField((int) (short) 0, "", "hi!", "hi!", (java.lang.Object) "");
        org.mockito.asm.FieldVisitor fieldVisitor86 = aSMifierClassVisitor20.visitField((int) (short) 100, "hi!", "", "", (java.lang.Object) aSMifierClassVisitor64);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(printWriter17);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(fieldVisitor85);
        org.junit.Assert.assertNotNull(fieldVisitor86);
    }

    @Test
    public void test10624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10624");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor7.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor7.visitAnnotationDefault();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        java.io.PrintWriter printWriter50 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray48);
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor7.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray48, 1, (java.lang.Object[]) strArray52);
        java.io.PrintWriter printWriter54 = printWriter1.format("hi!", (java.lang.Object[]) strArray52);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor55.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = annotationVisitor58.visitAnnotation("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = annotationVisitor61.visitAnnotation("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = annotationVisitor64.visitAnnotation("", "hi!");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor67);
    }

    @Test
    public void test10625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10625");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj45 = null;
        aSMifierMethodVisitor36.visitLdcInsn(obj45);
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor36.visitJumpInsn((int) (short) 1, label48);
        aSMifierMethodVisitor36.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor36.visitParameterAnnotation((int) (byte) 1, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor57 = aSMifierClassVisitor31.visitField((int) (byte) 0, "", "", "", (java.lang.Object) aSMifierMethodVisitor36);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierClassVisitor31.visitAnnotation("", false);
        aSMifierClassVisitor31.visitOuterClass("hi!", "hi!", "");
        aSMifierClassVisitor31.visitSource("hi!", "hi!");
        aSMifierClassVisitor31.visitInnerClass("hi!", "", "hi!", 1);
        aSMifierClassVisitor31.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(annotationVisitor60);
    }

    @Test
    public void test10626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10626");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", true);
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label26);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label30);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "hi!", false);
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 1, "hi!", "hi!", "");
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "hi!", label44, label45, (int) (short) 0);
        aSMifierMethodVisitor0.visitVarInsn((int) ' ', 0);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor35);
    }

    @Test
    public void test10627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10627");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        java.util.List list26 = aSMifierMethodVisitor0.getText();
        java.util.List list27 = aSMifierMethodVisitor0.getText();
        java.lang.Object obj28 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj28);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 1, "hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(annotationVisitor30);
    }

    @Test
    public void test10628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10628");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitTypeInsn((int) '#', "");
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLabel(label26);
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label28, label29, label30, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, 10);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test10629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10629");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println((float) 10);
        printWriter1.flush();
        java.util.Locale locale9 = null;
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter16 = printWriter12.append((java.lang.CharSequence) "");
        printWriter16.close();
        printWriter16.println(true);
        printWriter16.println((double) '#');
        boolean boolean22 = printWriter16.checkError();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        aSMifierMethodVisitor24.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj33 = null;
        aSMifierMethodVisitor24.visitLdcInsn(obj33);
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor24.visitJumpInsn((int) (short) 1, label36);
        aSMifierMethodVisitor24.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj53 = null;
        aSMifierMethodVisitor44.visitLdcInsn(obj53);
        org.mockito.asm.Label label55 = null;
        int[] intArray62 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor63.visitTryCatchBlock(label64, label65, label66, "");
        aSMifierMethodVisitor63.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label[] labelArray76 = new org.mockito.asm.Label[] { label75 };
        aSMifierMethodVisitor63.visitTableSwitchInsn(0, (int) (byte) 10, label74, labelArray76);
        aSMifierMethodVisitor44.visitLookupSwitchInsn(label55, intArray62, labelArray76);
        aSMifierMethodVisitor24.visitTableSwitchInsn((int) 'a', 10, label43, labelArray76);
        java.io.PrintWriter printWriter80 = printWriter16.printf("hi!", (java.lang.Object[]) labelArray76);
        java.io.PrintWriter printWriter81 = printWriter1.format(locale9, "hi!", (java.lang.Object[]) labelArray76);
        printWriter81.print((long) 'a');
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray76);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertNotNull(printWriter81);
    }

    @Test
    public void test10630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10630");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitVarInsn((int) '4', (int) (byte) -1);
        aSMifierMethodVisitor0.visitCode();
    }

    @Test
    public void test10631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10631");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor0.visitInsn(1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test10632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10632");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 0, label60);
        aSMifierMethodVisitor0.visitInsn(100);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "hi!", true);
        java.lang.Object obj69 = null;
        annotationVisitor67.visit("hi!", obj69);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor67);
    }

    @Test
    public void test10633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10633");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("hi!");
        printWriter26.println('a');
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter26);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.write((-1));
        printWriter34.flush();
        java.util.Locale locale38 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray43 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray45 = null;
        aSMifierMethodVisitor40.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray43, (int) (short) 1, objArray45);
        java.io.PrintWriter printWriter47 = printWriter34.printf(locale38, "", (java.lang.Object[]) strArray43);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor48 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter34);
        aSMifierClassVisitor48.visitEnd();
        aSMifierClassVisitor48.visitSource("", "hi!");
        java.lang.String[] strArray58 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor48.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray58);
        aSMifierClassVisitor48.visitInnerClass("", "hi!", "", (int) (byte) 0);
        java.lang.String[] strArray70 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor48.visit((int) (byte) -1, (int) ' ', "hi!", "", "", strArray70);
        java.io.PrintWriter printWriter72 = printWriter31.format("", (java.lang.Object[]) strArray70);
        java.io.PrintWriter printWriter74 = printWriter72.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter76 = new java.io.PrintWriter((java.io.Writer) printWriter74, false);
        java.io.PrintWriter printWriter78 = new java.io.PrintWriter("hi!");
        printWriter78.print(false);
        printWriter78.println(false);
        boolean boolean83 = printWriter78.checkError();
        printWriter78.println((double) 0);
        boolean boolean86 = printWriter78.checkError();
        printWriter78.print((double) (short) 0);
        printWriter78.print(' ');
        printWriter74.println((java.lang.Object) ' ');
        printWriter74.println((-1L));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(printWriter74);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test10634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10634");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitSource("hi!", "");
        java.util.List list34 = aSMifierClassVisitor15.getText();
        java.lang.Object obj39 = null;
        org.mockito.asm.FieldVisitor fieldVisitor40 = aSMifierClassVisitor15.visitField(100, "hi!", "", "", obj39);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor45.visitLocalVariable("hi!", "hi!", "hi!", label54, label55, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor45.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor45.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = annotationVisitor61.visitArray("");
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = annotationVisitor63.visitArray("hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = annotationVisitor65.visitArray("");
        org.mockito.asm.FieldVisitor fieldVisitor68 = aSMifierClassVisitor15.visitField((int) (byte) 100, "", "hi!", "", (java.lang.Object) "");
        aSMifierClassVisitor15.visitEnd();
        java.util.List list70 = aSMifierClassVisitor15.getText();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(fieldVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(list70);
    }

    @Test
    public void test10635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10635");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        aSMifierMethodVisitor0.visitMethodInsn(10, "", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label14, label15, label16, "hi!");
        aSMifierMethodVisitor0.visitIincInsn((-1), (int) (short) 0);
    }

    @Test
    public void test10636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10636");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter6.println();
        printWriter6.write("hi!");
        printWriter6.println((int) (byte) 100);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        printWriter13.print(false);
        java.io.PrintWriter printWriter17 = printWriter13.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.Writer) printWriter13);
        printWriter18.println();
        printWriter18.write("hi!");
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter27 = printWriter23.append((java.lang.CharSequence) "");
        printWriter23.print((double) 1);
        java.io.PrintWriter printWriter31 = printWriter23.append((java.lang.CharSequence) "hi!");
        printWriter23.write((int) (short) 1);
        printWriter23.write(0);
        java.io.PrintWriter printWriter37 = printWriter23.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        java.util.Locale locale40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray47 = null;
        aSMifierMethodVisitor42.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray45, (int) (short) 1, objArray47);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor50.visitTryCatchBlock(label51, label52, label53, "");
        aSMifierMethodVisitor50.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray59 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray61 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor50, strArray59, 1.0f };
        java.io.PrintWriter printWriter62 = printWriter39.printf(locale40, "", (java.lang.Object[]) strArray59);
        char[] charArray69 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter62.println(charArray69);
        char[] charArray71 = new char[] {};
        printWriter62.print(charArray71);
        printWriter23.print(charArray71);
        printWriter18.println(charArray71);
        printWriter6.write(charArray71);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter17);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[]");
    }

    @Test
    public void test10637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10637");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 10, "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitVarInsn((int) 'a', 10);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor27);
    }

    @Test
    public void test10638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10638");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append(' ');
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        printWriter30.write((-1));
        printWriter30.flush();
        java.util.Locale locale34 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = null;
        aSMifierMethodVisitor36.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray39, (int) (short) 1, objArray41);
        java.io.PrintWriter printWriter43 = printWriter30.printf(locale34, "", (java.lang.Object[]) strArray39);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor44 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter30);
        aSMifierClassVisitor44.visitEnd();
        aSMifierClassVisitor44.visitSource("", "hi!");
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor44.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray54);
        aSMifierClassVisitor44.visitOuterClass("", "", "hi!");
        aSMifierClassVisitor44.visitOuterClass("", "", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor68.visitTryCatchBlock(label69, label70, label71, "");
        aSMifierMethodVisitor68.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj77 = null;
        aSMifierMethodVisitor68.visitLdcInsn(obj77);
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor68.visitJumpInsn((int) (short) 1, label80);
        aSMifierMethodVisitor68.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label86 = null;
        aSMifierMethodVisitor68.visitLineNumber((int) (short) 0, label86);
        org.mockito.asm.AnnotationVisitor annotationVisitor90 = aSMifierMethodVisitor68.visitAnnotation("", true);
        org.mockito.asm.FieldVisitor fieldVisitor91 = aSMifierClassVisitor44.visitField((int) (short) 100, "", "hi!", "", (java.lang.Object) annotationVisitor90);
        printWriter24.println((java.lang.Object) (short) 100);
        printWriter24.println(false);
        printWriter24.println((double) (short) 100);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor90);
        org.junit.Assert.assertNotNull(fieldVisitor91);
    }

    @Test
    public void test10639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10639");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println((int) (short) -1);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor4.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor4.visitSource("", "");
        aSMifierClassVisitor4.visitEnd();
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        printWriter18.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter22 = printWriter18.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        aSMifierMethodVisitor24.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj33 = null;
        aSMifierMethodVisitor24.visitLdcInsn(obj33);
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor24.visitJumpInsn((int) (short) 1, label36);
        aSMifierMethodVisitor24.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label[] labelArray44 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor24.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label43, labelArray44);
        java.io.PrintWriter printWriter46 = printWriter22.printf("", (java.lang.Object[]) labelArray44);
        printWriter46.println('a');
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("hi!");
        printWriter50.write((-1));
        printWriter50.flush();
        java.lang.Object[] objArray55 = null;
        java.io.PrintWriter printWriter56 = printWriter50.format("hi!", objArray55);
        printWriter50.print(true);
        printWriter46.print((java.lang.Object) printWriter50);
        printWriter46.print((float) (short) 100);
        org.mockito.asm.FieldVisitor fieldVisitor62 = aSMifierClassVisitor4.visitField((int) (byte) 1, "hi!", "", "", (java.lang.Object) printWriter46);
        fieldVisitor62.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = fieldVisitor62.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(labelArray44);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(fieldVisitor62);
        org.junit.Assert.assertNotNull(annotationVisitor66);
    }

    @Test
    public void test10640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10640");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label27 = null;
        int[] intArray34 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        aSMifierMethodVisitor16.visitLookupSwitchInsn(label27, intArray34, labelArray48);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) '4', (int) '#', label15, labelArray48);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label55, label56, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn((int) '4', (int) (short) 100);
        aSMifierMethodVisitor0.visitMaxs(1, (int) '#');
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label66);
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label68, label69, label70, "");
        java.util.List list73 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(list73);
    }

    @Test
    public void test10641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10641");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label19, labelArray20);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) '#');
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLabel(label28);
        aSMifierMethodVisitor0.visitIincInsn(100, (int) (byte) 100);
        org.junit.Assert.assertNotNull(labelArray20);
    }

    @Test
    public void test10642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10642");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", true);
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label70, label71, (int) (short) 10);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list75 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitInsn((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn((-1), 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(list75);
    }

    @Test
    public void test10643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10643");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        boolean boolean6 = printWriter1.checkError();
        printWriter1.println((double) 0);
        boolean boolean9 = printWriter1.checkError();
        printWriter1.print((double) (short) 0);
        printWriter1.print(' ');
        printWriter1.println();
        printWriter1.print(false);
        printWriter1.close();
        printWriter1.print('4');
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test10644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10644");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "", "hi!", (int) 'a');
        java.util.List list34 = aSMifierClassVisitor28.getText();
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        java.util.Locale locale41 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = null;
        aSMifierMethodVisitor43.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray46, (int) (short) 1, objArray48);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor51.visitTryCatchBlock(label52, label53, label54, "");
        aSMifierMethodVisitor51.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray60 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray62 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor51, strArray60, 1.0f };
        java.io.PrintWriter printWriter63 = printWriter40.printf(locale41, "", (java.lang.Object[]) strArray60);
        printWriter63.println();
        printWriter63.println((long) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter("hi!");
        printWriter69.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter73 = printWriter69.append((java.lang.CharSequence) "");
        printWriter69.print((int) (byte) -1);
        printWriter69.write("", (int) (byte) 1, (int) (short) 0);
        printWriter69.print((double) (byte) -1);
        aSMifierMethodVisitor67.print(printWriter69);
        printWriter69.write((int) (byte) 100);
        printWriter63.println((java.lang.Object) (byte) 100);
        org.mockito.asm.FieldVisitor fieldVisitor86 = aSMifierClassVisitor28.visitField((int) '#', "", "", "", (java.lang.Object) printWriter63);
        aSMifierClassVisitor28.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor90 = aSMifierClassVisitor28.visitAnnotation("hi!", false);
        aSMifierClassVisitor28.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor94 = aSMifierClassVisitor28.visitAnnotation("hi!", false);
        aSMifierClassVisitor28.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(fieldVisitor86);
        org.junit.Assert.assertNotNull(annotationVisitor90);
        org.junit.Assert.assertNotNull(annotationVisitor94);
    }

    @Test
    public void test10645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10645");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray5 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter6 = printWriter1.format("", (java.lang.Object[]) strArray5);
        printWriter6.println('a');
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        java.util.Locale locale11 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray16 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray18 = null;
        aSMifierMethodVisitor13.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray16, (int) (short) 1, objArray18);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor21.visitTryCatchBlock(label22, label23, label24, "");
        aSMifierMethodVisitor21.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor21, strArray30, 1.0f };
        java.io.PrintWriter printWriter33 = printWriter10.printf(locale11, "", (java.lang.Object[]) strArray30);
        char[] charArray40 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter33.println(charArray40);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter((java.io.Writer) printWriter33, true);
        java.io.PrintWriter printWriter45 = printWriter33.append((java.lang.CharSequence) "");
        printWriter33.print((float) 10L);
        printWriter33.write("", (int) (short) 1, (int) (short) -1);
        printWriter33.println((int) (byte) 100);
        printWriter6.println((java.lang.Object) printWriter33);
        printWriter33.write((int) (short) -1);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter45);
    }

    @Test
    public void test10646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10646");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        printWriter1.print(0L);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "");
        java.util.Locale locale10 = null;
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        java.util.Locale locale14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray19 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray21 = null;
        aSMifierMethodVisitor16.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray19, (int) (short) 1, objArray21);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        aSMifierMethodVisitor24.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray33 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray35 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor24, strArray33, 1.0f };
        java.io.PrintWriter printWriter36 = printWriter13.printf(locale14, "", (java.lang.Object[]) strArray33);
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.Writer) printWriter36, true);
        printWriter36.println(1L);
        printWriter36.println((-1L));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj53 = null;
        aSMifierMethodVisitor44.visitLdcInsn(obj53);
        aSMifierMethodVisitor44.visitInsn((int) ' ');
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor60.visitTryCatchBlock(label61, label62, label63, "");
        aSMifierMethodVisitor60.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj69 = null;
        aSMifierMethodVisitor60.visitLdcInsn(obj69);
        org.mockito.asm.Label label71 = null;
        int[] intArray78 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor79 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        aSMifierMethodVisitor79.visitTryCatchBlock(label80, label81, label82, "");
        aSMifierMethodVisitor79.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label90 = null;
        org.mockito.asm.Label label91 = null;
        org.mockito.asm.Label[] labelArray92 = new org.mockito.asm.Label[] { label91 };
        aSMifierMethodVisitor79.visitTableSwitchInsn(0, (int) (byte) 10, label90, labelArray92);
        aSMifierMethodVisitor60.visitLookupSwitchInsn(label71, intArray78, labelArray92);
        aSMifierMethodVisitor44.visitTableSwitchInsn((int) '4', (int) '#', label59, labelArray92);
        java.io.PrintWriter printWriter96 = printWriter36.format("hi!", (java.lang.Object[]) labelArray92);
        java.io.PrintWriter printWriter97 = printWriter1.format(locale10, "", (java.lang.Object[]) labelArray92);
        java.lang.Class<?> wildcardClass98 = printWriter1.getClass();
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray92);
        org.junit.Assert.assertNotNull(printWriter96);
        org.junit.Assert.assertNotNull(printWriter97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test10647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10647");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor21.visitTryCatchBlock(label22, label23, label24, "");
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor21.visitLocalVariable("hi!", "hi!", "hi!", label30, label31, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor21.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor21);
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor21.visitLineNumber((int) (short) 10, label39);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor21.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor21.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor21.visitParameterAnnotation((int) ' ', "", true);
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor21.visitTryCatchBlock(label47, label48, label49, "hi!");
        aSMifierMethodVisitor21.visitIincInsn((int) (byte) 0, 1);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor46);
    }

    @Test
    public void test10648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10648");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor20.visitJumpInsn((int) (short) 1, label32);
        aSMifierMethodVisitor20.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor20.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor20.visitAnnotationDefault();
        aSMifierMethodVisitor20.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor20.visitLabel(label44);
        java.util.List list46 = aSMifierMethodVisitor20.getText();
        aSMifierMethodVisitor20.visitMultiANewArrayInsn("", (int) (short) 0);
        aSMifierMethodVisitor20.visitCode();
        aSMifierMethodVisitor20.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierMethodVisitor20.visitParameterAnnotation((int) (short) 0, "", false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(annotationVisitor55);
    }

    @Test
    public void test10649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10649");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, 1);
        java.util.List list23 = aSMifierMethodVisitor0.text;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) -1, label25);
        java.util.List list27 = aSMifierMethodVisitor0.text;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLabel(label28);
        aSMifierMethodVisitor0.visitMethodInsn(0, "hi!", "", "hi!");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list27);
    }

    @Test
    public void test10650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10650");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 10);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label78);
        java.util.List list80 = aSMifierMethodVisitor0.text;
        org.mockito.asm.Label label82 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label82);
        org.mockito.asm.Label label84 = null;
        org.mockito.asm.Label label85 = null;
        org.mockito.asm.Label label86 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label84, label85, label86, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor89 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, (int) 'a');
        aSMifierMethodVisitor0.visitInsn((int) '4');
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(list80);
        org.junit.Assert.assertNotNull(annotationVisitor89);
    }

    @Test
    public void test10651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10651");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append((java.lang.CharSequence) "hi!");
        printWriter24.print(false);
        java.util.Locale locale31 = null;
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter38 = printWriter34.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj49 = null;
        aSMifierMethodVisitor40.visitLdcInsn(obj49);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor40.visitJumpInsn((int) (short) 1, label52);
        aSMifierMethodVisitor40.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor40.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label59, labelArray60);
        java.io.PrintWriter printWriter62 = printWriter38.printf("", (java.lang.Object[]) labelArray60);
        java.io.PrintWriter printWriter63 = printWriter24.printf(locale31, "hi!", (java.lang.Object[]) labelArray60);
        printWriter63.println((float) (byte) 10);
        printWriter63.write((int) (short) 100);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(printWriter63);
    }

    @Test
    public void test10652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10652");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor8.visitEnd();
        aSMifierClassVisitor8.visitEnd();
        aSMifierClassVisitor8.visitSource("", "hi!");
        java.util.List list14 = aSMifierClassVisitor8.text;
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter22 = printWriter20.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor23 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter22);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierClassVisitor23.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierClassVisitor23.visitAnnotation("", true);
        aSMifierClassVisitor23.visitEnd();
        java.util.List list31 = aSMifierClassVisitor23.text;
        java.lang.String[] strArray37 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor23.visit((int) (byte) 0, (-1), "hi!", "hi!", "hi!", strArray37);
        org.mockito.asm.MethodVisitor methodVisitor39 = aSMifierClassVisitor8.visitMethod((int) 'a', "", "hi!", "hi!", strArray37);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(methodVisitor39);
    }

    @Test
    public void test10653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10653");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        java.io.PrintWriter printWriter7 = printWriter1.append('#');
        printWriter7.print((long) 0);
        printWriter7.println((int) (byte) -1);
        printWriter7.flush();
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        printWriter14.print(false);
        printWriter14.println(false);
        printWriter14.print(0L);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter14);
        aSMifierClassVisitor21.visitEnd();
        aSMifierClassVisitor21.visitEnd();
        printWriter7.print((java.lang.Object) aSMifierClassVisitor21);
        org.junit.Assert.assertNotNull(printWriter7);
    }

    @Test
    public void test10654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10654");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = null;
        aSMifierMethodVisitor36.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray39, (int) (short) 1, objArray41);
        org.mockito.asm.MethodVisitor methodVisitor43 = aSMifierClassVisitor15.visitMethod((int) (short) 0, "", "", "hi!", strArray39);
        aSMifierClassVisitor15.visitEnd();
        java.util.List list45 = aSMifierClassVisitor15.text;
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor51.visitTryCatchBlock(label52, label53, label54, "");
        aSMifierMethodVisitor51.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor51.visitMaxs((int) (byte) 10, 0);
        aSMifierMethodVisitor51.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = aSMifierMethodVisitor51.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor71 = aSMifierClassVisitor15.visitField((int) (byte) 10, "", "", "", (java.lang.Object) "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        aSMifierClassVisitor15.visitSource("", "");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodVisitor43);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(fieldVisitor71);
        org.junit.Assert.assertNotNull(annotationVisitor74);
    }

    @Test
    public void test10655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10655");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter3, true);
        java.util.Locale locale6 = null;
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("hi!");
        printWriter9.print(false);
        java.util.Locale locale12 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitInsn((int) ' ');
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj39 = null;
        aSMifierMethodVisitor30.visitLdcInsn(obj39);
        org.mockito.asm.Label label41 = null;
        int[] intArray48 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label[] labelArray62 = new org.mockito.asm.Label[] { label61 };
        aSMifierMethodVisitor49.visitTableSwitchInsn(0, (int) (byte) 10, label60, labelArray62);
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label41, intArray48, labelArray62);
        aSMifierMethodVisitor14.visitTableSwitchInsn((int) '4', (int) '#', label29, labelArray62);
        java.io.PrintWriter printWriter66 = printWriter9.format(locale12, "hi!", (java.lang.Object[]) labelArray62);
        java.io.PrintWriter printWriter67 = printWriter5.printf(locale6, "", (java.lang.Object[]) labelArray62);
        java.io.PrintWriter printWriter69 = printWriter5.append((java.lang.CharSequence) "");
        printWriter5.print((double) 100);
        printWriter5.println();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray62);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(printWriter69);
    }

    @Test
    public void test10656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10656");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        java.io.PrintWriter printWriter7 = printWriter1.append('#');
        printWriter7.print((long) 0);
        printWriter7.println((int) (byte) -1);
        printWriter7.println('#');
        printWriter7.println(100L);
        org.junit.Assert.assertNotNull(printWriter7);
    }

    @Test
    public void test10657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10657");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter16 = printWriter14.append('a');
        printWriter14.print("hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor19.visitTryCatchBlock(label20, label21, label22, "");
        aSMifierMethodVisitor19.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj28 = null;
        aSMifierMethodVisitor19.visitLdcInsn(obj28);
        aSMifierMethodVisitor19.visitTypeInsn(0, "hi!");
        printWriter14.print((java.lang.Object) 0);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter14);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj45 = null;
        aSMifierMethodVisitor36.visitLdcInsn(obj45);
        aSMifierMethodVisitor36.visitInsn((int) ' ');
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor36.visitJumpInsn(100, label50);
        aSMifierMethodVisitor36.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor36.visitCode();
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor36.visitJumpInsn((int) (short) 10, label57);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray64 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray66 = null;
        aSMifierMethodVisitor61.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray64, (int) (short) 1, objArray66);
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter("hi!");
        printWriter70.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray74 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter75 = printWriter70.format("", (java.lang.Object[]) strArray74);
        aSMifierMethodVisitor36.visitFrame((int) '#', (int) '4', (java.lang.Object[]) strArray64, 0, (java.lang.Object[]) strArray74);
        java.io.PrintWriter printWriter77 = printWriter14.format("hi!", (java.lang.Object[]) strArray74);
        org.mockito.asm.MethodVisitor methodVisitor78 = aSMifierClassVisitor8.visitMethod((int) (byte) 1, "", "", "", strArray74);
        aSMifierClassVisitor8.visitInnerClass("", "hi!", "", (int) (short) 100);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(methodVisitor78);
    }

    @Test
    public void test10658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10658");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println((double) (-1L));
        printWriter1.print((long) (short) -1);
        java.io.PrintWriter printWriter12 = printWriter1.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor13.visitTryCatchBlock(label14, label15, label16, "");
        aSMifierMethodVisitor13.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj22 = null;
        aSMifierMethodVisitor13.visitLdcInsn(obj22);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor13.visitAnnotation("hi!", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter33 = printWriter29.append((java.lang.CharSequence) "");
        printWriter29.print((int) (byte) -1);
        printWriter29.write("", (int) (byte) 1, (int) (short) 0);
        printWriter29.print((double) (byte) -1);
        aSMifierMethodVisitor27.print(printWriter29);
        printWriter29.write((int) (byte) 100);
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        java.util.Locale locale47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray54 = null;
        aSMifierMethodVisitor49.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray52, (int) (short) 1, objArray54);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor57.visitTryCatchBlock(label58, label59, label60, "");
        aSMifierMethodVisitor57.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray66 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray68 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor57, strArray66, 1.0f };
        java.io.PrintWriter printWriter69 = printWriter46.printf(locale47, "", (java.lang.Object[]) strArray66);
        char[] charArray76 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter69.println(charArray76);
        printWriter29.print(charArray76);
        aSMifierMethodVisitor13.visitLdcInsn((java.lang.Object) charArray76);
        printWriter1.write(charArray76);
        java.io.PrintWriter printWriter82 = new java.io.PrintWriter("hi!");
        printWriter82.print(false);
        printWriter82.println(false);
        java.io.PrintWriter printWriter88 = printWriter82.append('#');
        java.io.PrintWriter printWriter90 = new java.io.PrintWriter((java.io.Writer) printWriter88, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor91 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter90);
        printWriter90.print((long) (short) 100);
        printWriter1.println((java.lang.Object) (short) 100);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter88);
    }

    @Test
    public void test10659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10659");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((int) (byte) -1);
        printWriter1.flush();
        printWriter1.print((-1L));
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        printWriter12.flush();
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter((java.io.Writer) printWriter12);
        printWriter12.println((float) 10);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter23 = printWriter21.append('a');
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter23, true);
        java.util.Locale locale26 = null;
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print(false);
        java.util.Locale locale32 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor34.visitTryCatchBlock(label35, label36, label37, "");
        aSMifierMethodVisitor34.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj43 = null;
        aSMifierMethodVisitor34.visitLdcInsn(obj43);
        aSMifierMethodVisitor34.visitInsn((int) ' ');
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor50.visitTryCatchBlock(label51, label52, label53, "");
        aSMifierMethodVisitor50.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj59 = null;
        aSMifierMethodVisitor50.visitLdcInsn(obj59);
        org.mockito.asm.Label label61 = null;
        int[] intArray68 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor69.visitTryCatchBlock(label70, label71, label72, "");
        aSMifierMethodVisitor69.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label[] labelArray82 = new org.mockito.asm.Label[] { label81 };
        aSMifierMethodVisitor69.visitTableSwitchInsn(0, (int) (byte) 10, label80, labelArray82);
        aSMifierMethodVisitor50.visitLookupSwitchInsn(label61, intArray68, labelArray82);
        aSMifierMethodVisitor34.visitTableSwitchInsn((int) '4', (int) '#', label49, labelArray82);
        java.io.PrintWriter printWriter86 = printWriter29.format(locale32, "hi!", (java.lang.Object[]) labelArray82);
        java.io.PrintWriter printWriter87 = printWriter25.printf(locale26, "", (java.lang.Object[]) labelArray82);
        java.io.PrintWriter printWriter88 = printWriter12.printf("", (java.lang.Object[]) labelArray82);
        printWriter88.println(100.0f);
        printWriter88.print((int) (short) 1);
        printWriter88.print((float) 'a');
        printWriter1.println((java.lang.Object) 'a');
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray82);
        org.junit.Assert.assertNotNull(printWriter86);
        org.junit.Assert.assertNotNull(printWriter87);
        org.junit.Assert.assertNotNull(printWriter88);
    }

    @Test
    public void test10660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10660");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        printWriter10.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter14 = printWriter10.append((java.lang.CharSequence) "");
        printWriter10.print((double) 1);
        java.io.PrintWriter printWriter18 = printWriter10.append((java.lang.CharSequence) "hi!");
        printWriter10.print(false);
        java.lang.CharSequence charSequence21 = null;
        java.io.PrintWriter printWriter22 = printWriter10.append(charSequence21);
        printWriter10.print((double) (-1));
        org.mockito.asm.FieldVisitor fieldVisitor25 = aSMifierClassVisitor1.visitField((int) (byte) 0, "hi!", "hi!", "hi!", (java.lang.Object) printWriter10);
        aSMifierClassVisitor1.visitInnerClass("hi!", "", "hi!", (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierClassVisitor1.visitAnnotation("", true);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(fieldVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor33);
    }

    @Test
    public void test10661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10661");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter16 = printWriter12.append((java.lang.CharSequence) "");
        printWriter8.println((java.lang.Object) printWriter16);
        printWriter16.print((long) (byte) 10);
        printWriter16.println(10.0d);
        java.io.PrintWriter printWriter23 = printWriter16.append((java.lang.CharSequence) "");
        printWriter23.print((-1));
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        java.util.Locale locale29 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray34 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray36 = null;
        aSMifierMethodVisitor31.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray34, (int) (short) 1, objArray36);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray50 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor39, strArray48, 1.0f };
        java.io.PrintWriter printWriter51 = printWriter28.printf(locale29, "", (java.lang.Object[]) strArray48);
        printWriter51.print("hi!");
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter((java.io.Writer) printWriter51);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter54);
        aSMifierClassVisitor55.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierClassVisitor55.visitAnnotation("hi!", true);
        aSMifierClassVisitor55.visitEnd();
        java.lang.String[] strArray68 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierClassVisitor55.visit(0, (int) (short) 100, "hi!", "hi!", "", strArray68);
        java.io.PrintWriter printWriter70 = printWriter23.printf("hi!", (java.lang.Object[]) strArray68);
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter((java.io.Writer) printWriter70);
        printWriter71.write(10);
        printWriter71.println((double) ' ');
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(printWriter70);
    }

    @Test
    public void test10662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10662");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter5.close();
        printWriter5.println(true);
        printWriter5.write("", (int) (byte) 100, (int) '#');
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        java.util.Locale locale16 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = null;
        aSMifierMethodVisitor18.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray21, (int) (short) 1, objArray23);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray37 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor26, strArray35, 1.0f };
        java.io.PrintWriter printWriter38 = printWriter15.printf(locale16, "", (java.lang.Object[]) strArray35);
        java.io.PrintWriter printWriter40 = printWriter38.append('4');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter38);
        java.util.Locale locale42 = null;
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter("hi!");
        printWriter45.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray49 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter50 = printWriter45.format("", (java.lang.Object[]) strArray49);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor51 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter50);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray60 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray62 = null;
        aSMifierMethodVisitor57.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray60, (int) (short) 1, objArray62);
        aSMifierClassVisitor51.visit(10, (int) (byte) -1, "", "hi!", "hi!", strArray60);
        java.io.PrintWriter printWriter65 = printWriter38.printf(locale42, "", (java.lang.Object[]) strArray60);
        java.io.PrintWriter printWriter66 = printWriter5.format("", (java.lang.Object[]) strArray60);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(printWriter65);
        org.junit.Assert.assertNotNull(printWriter66);
    }

    @Test
    public void test10663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10663");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        printWriter1.print('4');
        printWriter1.print((int) (byte) 10);
        java.io.PrintWriter printWriter20 = printWriter1.append('4');
        printWriter20.println('a');
        java.io.PrintWriter printWriter24 = printWriter20.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor25 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        printWriter24.print(0.0d);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test10664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10664");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs(1, 10);
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label65);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs((int) ' ', (int) (short) -1);
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '#', label76);
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor80);
    }

    @Test
    public void test10665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10665");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "hi!");
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 10, label25);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 0, (int) (short) 100);
    }

    @Test
    public void test10666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10666");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.println((long) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        printWriter30.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter34 = printWriter30.append((java.lang.CharSequence) "");
        printWriter30.print((int) (byte) -1);
        printWriter30.write("", (int) (byte) 1, (int) (short) 0);
        printWriter30.print((double) (byte) -1);
        aSMifierMethodVisitor28.print(printWriter30);
        printWriter30.write((int) (byte) 100);
        printWriter24.println((java.lang.Object) (byte) 100);
        printWriter24.println((int) 'a');
        java.io.PrintWriter printWriter50 = printWriter24.append('#');
        printWriter50.println("");
        printWriter50.println(0.0d);
        printWriter50.println((float) (byte) 100);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(printWriter50);
    }

    @Test
    public void test10667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10667");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((int) (byte) -1);
        printWriter1.print((double) (byte) 1);
        printWriter1.close();
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter11.println();
        printWriter11.println((double) (byte) 100);
        printWriter11.write((int) 'a');
        java.lang.Object[] objArray18 = null;
        java.io.PrintWriter printWriter19 = printWriter11.printf("", objArray18);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter19);
    }

    @Test
    public void test10668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10668");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = printWriter1.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter24.println((double) (byte) 1);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter24, false);
        printWriter24.println("hi!");
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter22);
    }

    @Test
    public void test10669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10669");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitSource("hi!", "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test10670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10670");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (-1));
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "hi!", label8, label9, (int) (short) 100);
        aSMifierMethodVisitor0.visitMaxs(0, (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor16);
    }

    @Test
    public void test10671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10671");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLabel(label17);
        aSMifierMethodVisitor0.visitInsn(100);
        java.util.List list21 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLabel(label22);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter27 = printWriter25.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj37 = null;
        aSMifierMethodVisitor28.visitLdcInsn(obj37);
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor28.visitJumpInsn((int) (short) 1, label40);
        aSMifierMethodVisitor28.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor28.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierMethodVisitor28.visitAnnotationDefault();
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        printWriter52.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor56.visitTryCatchBlock(label57, label58, label59, "");
        aSMifierMethodVisitor56.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label[] labelArray69 = new org.mockito.asm.Label[] { label68 };
        aSMifierMethodVisitor56.visitTableSwitchInsn(0, (int) (byte) 10, label67, labelArray69);
        java.io.PrintWriter printWriter71 = printWriter52.printf("hi!", (java.lang.Object[]) labelArray69);
        java.lang.String[] strArray73 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor28.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray69, 1, (java.lang.Object[]) strArray73);
        printWriter27.println((java.lang.Object) strArray73);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) strArray73);
        aSMifierMethodVisitor0.visitIincInsn(0, (-1));
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor0.visitLabel(label80);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 10, "", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor89 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor93 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 100, "hi!", false);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 1, "hi!", "", "hi!");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(labelArray69);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(annotationVisitor89);
        org.junit.Assert.assertNotNull(annotationVisitor93);
    }

    @Test
    public void test10672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10672");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "");
        aSMifierClassVisitor15.visitSource("", "hi!");
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierClassVisitor15.visitAnnotation("", false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor30);
    }

    @Test
    public void test10673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10673");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.close();
        printWriter1.print((int) '#');
        printWriter1.close();
        printWriter1.write("hi!");
        printWriter1.print('4');
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        printWriter13.print(false);
        java.io.PrintWriter printWriter17 = printWriter13.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.Writer) printWriter13);
        printWriter18.println((double) 10);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter26 = printWriter22.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        java.util.Locale locale29 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray34 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray36 = null;
        aSMifierMethodVisitor31.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray34, (int) (short) 1, objArray36);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray50 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor39, strArray48, 1.0f };
        java.io.PrintWriter printWriter51 = printWriter28.printf(locale29, "", (java.lang.Object[]) strArray48);
        java.io.PrintWriter printWriter53 = printWriter51.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter55 = printWriter51.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter("hi!");
        java.util.Locale locale58 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray63 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray65 = null;
        aSMifierMethodVisitor60.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray63, (int) (short) 1, objArray65);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor68.visitTryCatchBlock(label69, label70, label71, "");
        aSMifierMethodVisitor68.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray77 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray79 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor68, strArray77, 1.0f };
        java.io.PrintWriter printWriter80 = printWriter57.printf(locale58, "", (java.lang.Object[]) strArray77);
        char[] charArray87 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter80.println(charArray87);
        printWriter55.print(charArray87);
        printWriter22.print(charArray87);
        printWriter18.println(charArray87);
        printWriter1.write(charArray87);
        org.junit.Assert.assertNotNull(printWriter17);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test10674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10674");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        java.util.List list26 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 0);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 10, "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list26);
    }

    @Test
    public void test10675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10675");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "", "");
        aSMifierClassVisitor15.visitSource("", "hi!");
        aSMifierClassVisitor15.visitSource("hi!", "hi!");
        aSMifierClassVisitor15.visitSource("hi!", "");
        java.util.List list30 = aSMifierClassVisitor15.text;
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(list30);
    }

    @Test
    public void test10676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10676");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter9.println(false);
        printWriter9.print((long) (short) 10);
        java.io.PrintWriter printWriter15 = printWriter9.append('4');
        printWriter15.println('4');
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter15);
    }

    @Test
    public void test10677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10677");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label19, labelArray20);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLabel(label25);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label30, label31, 10);
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label35);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, 0);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 0, "");
        org.junit.Assert.assertNotNull(labelArray20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test10678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10678");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        java.util.Locale locale13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray20 = null;
        aSMifierMethodVisitor15.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray18, (int) (short) 1, objArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor23, strArray32, 1.0f };
        java.io.PrintWriter printWriter35 = printWriter12.printf(locale13, "", (java.lang.Object[]) strArray32);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, true);
        printWriter8.println((java.lang.Object) printWriter37);
        java.io.PrintWriter printWriter40 = printWriter8.append(' ');
        java.io.PrintWriter printWriter42 = printWriter40.append('#');
        printWriter42.write("hi!");
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        java.util.Locale locale47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray54 = null;
        aSMifierMethodVisitor49.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray52, (int) (short) 1, objArray54);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor57.visitTryCatchBlock(label58, label59, label60, "");
        aSMifierMethodVisitor57.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray66 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray68 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor57, strArray66, 1.0f };
        java.io.PrintWriter printWriter69 = printWriter46.printf(locale47, "", (java.lang.Object[]) strArray66);
        java.io.PrintWriter printWriter71 = printWriter69.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter73 = printWriter69.append(' ');
        printWriter73.print(1);
        printWriter42.println((java.lang.Object) printWriter73);
        printWriter42.print((float) 100);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(printWriter73);
    }

    @Test
    public void test10679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10679");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitIntInsn(10, (int) '#');
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
    }

    @Test
    public void test10680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10680");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label11 = null;
        int[] intArray18 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor19.visitTryCatchBlock(label20, label21, label22, "");
        aSMifierMethodVisitor19.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label[] labelArray32 = new org.mockito.asm.Label[] { label31 };
        aSMifierMethodVisitor19.visitTableSwitchInsn(0, (int) (byte) 10, label30, labelArray32);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label11, intArray18, labelArray32);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor38.visitTryCatchBlock(label39, label40, label41, "");
        aSMifierMethodVisitor38.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj47 = null;
        aSMifierMethodVisitor38.visitLdcInsn(obj47);
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor38.visitJumpInsn((int) (short) 1, label50);
        aSMifierMethodVisitor38.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label[] labelArray58 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label57, labelArray58);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 1, (int) (short) -1, label37, labelArray58);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 100, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "hi!", true);
        annotationVisitor72.visitEnum("", "hi!", "hi!");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray32);
        org.junit.Assert.assertNotNull(labelArray58);
        org.junit.Assert.assertNotNull(annotationVisitor72);
    }

    @Test
    public void test10681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10681");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        aSMifierMethodVisitor39.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor39.visitLocalVariable("hi!", "hi!", "hi!", label56, label57, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor39.visitParameterAnnotation(0, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor64 = aSMifierClassVisitor28.visitField((int) ' ', "hi!", "hi!", "", (java.lang.Object) aSMifierMethodVisitor39);
        java.lang.String[] strArray69 = null;
        org.mockito.asm.MethodVisitor methodVisitor70 = aSMifierClassVisitor28.visitMethod(0, "hi!", "hi!", "", strArray69);
        aSMifierClassVisitor28.visitInnerClass("", "", "hi!", (int) (byte) 0);
        aSMifierClassVisitor28.visitInnerClass("", "", "", 1);
        aSMifierClassVisitor28.visitSource("hi!", "");
        aSMifierClassVisitor28.visitInnerClass("hi!", "hi!", "hi!", (-1));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(methodVisitor70);
    }

    @Test
    public void test10682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10682");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        aSMifierMethodVisitor0.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label20, label21, label22, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitVarInsn((int) '#', (int) (byte) 1);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 100);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test10683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10683");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj40 = null;
        aSMifierMethodVisitor31.visitLdcInsn(obj40);
        aSMifierMethodVisitor31.visitInsn((int) ' ');
        aSMifierMethodVisitor31.visitIincInsn((int) (byte) 100, (int) (short) 1);
        aSMifierMethodVisitor31.visitTypeInsn((int) (byte) 0, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor31.visitAnnotationDefault();
        org.mockito.asm.FieldVisitor fieldVisitor51 = aSMifierClassVisitor15.visitField((int) (short) 10, "hi!", "", "", (java.lang.Object) aSMifierMethodVisitor31);
        aSMifierClassVisitor15.visitSource("", "");
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("hi!", "");
        aSMifierClassVisitor15.visitSource("", "");
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierClassVisitor15.visitAnnotation("", true);
        annotationVisitor65.visitEnum("hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor65);
    }

    @Test
    public void test10684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10684");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] { label40 };
        aSMifierMethodVisitor28.visitTableSwitchInsn(0, (int) (byte) 10, label39, labelArray41);
        java.io.PrintWriter printWriter43 = printWriter24.printf("hi!", (java.lang.Object[]) labelArray41);
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray41, 1, (java.lang.Object[]) strArray45);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 0, (int) (byte) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 100, label54);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 10, (int) (short) 100);
        aSMifierMethodVisitor0.visitFieldInsn(1, "", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) 1);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor66);
    }

    @Test
    public void test10685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10685");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 1, "hi!", "", "hi!");
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label22, label23, (int) (byte) 10);
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        printWriter27.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter31 = printWriter27.append((java.lang.CharSequence) "");
        printWriter27.print((int) (byte) -1);
        printWriter27.print((double) (byte) 1);
        printWriter27.close();
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter27);
        printWriter37.println();
        java.io.PrintWriter printWriter40 = printWriter37.append('#');
        java.util.Locale locale41 = null;
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("hi!");
        java.util.Locale locale45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray50 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray52 = null;
        aSMifierMethodVisitor47.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray50, (int) (short) 1, objArray52);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor55.visitTryCatchBlock(label56, label57, label58, "");
        aSMifierMethodVisitor55.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray64 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray66 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor55, strArray64, 1.0f };
        java.io.PrintWriter printWriter67 = printWriter44.printf(locale45, "", (java.lang.Object[]) strArray64);
        java.io.PrintWriter printWriter69 = printWriter67.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter71 = printWriter67.append(' ');
        printWriter71.println((float) '4');
        printWriter71.println(0);
        printWriter71.println((float) 0);
        printWriter71.print(false);
        java.lang.String[] strArray81 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter82 = printWriter71.format("hi!", (java.lang.Object[]) strArray81);
        java.io.PrintWriter printWriter83 = printWriter40.printf(locale41, "hi!", (java.lang.Object[]) strArray81);
        aSMifierMethodVisitor0.print(printWriter40);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(printWriter83);
    }

    @Test
    public void test10686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10686");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 1, "hi!", true);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) ' ', label19);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label22);
        aSMifierMethodVisitor0.visitFieldInsn((int) 'a', "", "", "");
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        printWriter30.write((-1));
        printWriter30.flush();
        java.util.Locale locale34 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = null;
        aSMifierMethodVisitor36.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray39, (int) (short) 1, objArray41);
        java.io.PrintWriter printWriter43 = printWriter30.printf(locale34, "", (java.lang.Object[]) strArray39);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor44 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter30);
        aSMifierClassVisitor44.visitEnd();
        aSMifierClassVisitor44.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor53.visitTryCatchBlock(label54, label55, label56, "");
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor53.visitLocalVariable("hi!", "hi!", "hi!", label62, label63, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor53.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor53.visitAnnotationDefault();
        annotationVisitor69.visitEnum("", "hi!", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor74 = aSMifierClassVisitor44.visitField((int) '#', "", "", "", (java.lang.Object) "hi!");
        aSMifierClassVisitor44.visitSource("", "");
        aSMifierClassVisitor44.visitInnerClass("hi!", "", "", (int) ' ');
        java.lang.String[] strArray89 = new java.lang.String[] { "", "hi!" };
        org.mockito.asm.MethodVisitor methodVisitor90 = aSMifierClassVisitor44.visitMethod((int) (byte) 0, "hi!", "hi!", "", strArray89);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        aSMifierMethodVisitor0.visitIntInsn((int) '#', (int) (short) 1);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(annotationVisitor69);
        org.junit.Assert.assertNotNull(fieldVisitor74);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(methodVisitor90);
    }

    @Test
    public void test10687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10687");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) ' ', label20);
        aSMifierMethodVisitor0.visitIntInsn((int) '#', (int) (short) 1);
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLabel(label25);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 0, "", "hi!", "");
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label32, label33, label34, "hi!");
        aSMifierMethodVisitor0.visitTypeInsn(10, "");
        java.util.List list40 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(list40);
    }

    @Test
    public void test10688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10688");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        aSMifierMethodVisitor0.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 0, label21);
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 0, "", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitParameterAnnotation((int) 'a', "hi!", false);
        org.junit.Assert.assertNotNull(annotationVisitor31);
    }

    @Test
    public void test10689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10689");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj45 = null;
        aSMifierMethodVisitor36.visitLdcInsn(obj45);
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor36.visitJumpInsn((int) (short) 1, label48);
        aSMifierMethodVisitor36.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor36.visitParameterAnnotation((int) (byte) 1, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor57 = aSMifierClassVisitor31.visitField((int) (byte) 0, "", "", "", (java.lang.Object) aSMifierMethodVisitor36);
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter("hi!");
        printWriter63.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter67 = printWriter63.append((java.lang.CharSequence) "");
        printWriter63.print((int) (byte) -1);
        printWriter63.print((double) (byte) 1);
        printWriter63.close();
        java.io.PrintWriter printWriter73 = new java.io.PrintWriter((java.io.Writer) printWriter63);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor74 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        org.mockito.asm.FieldVisitor fieldVisitor75 = aSMifierClassVisitor31.visitField((int) (short) 0, "", "", "", (java.lang.Object) aSMifierClassVisitor74);
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierClassVisitor31.visitAnnotation("hi!", false);
        aSMifierClassVisitor31.visitEnd();
        aSMifierClassVisitor31.visitEnd();
        aSMifierClassVisitor31.visitOuterClass("hi!", "", "");
        aSMifierClassVisitor31.visitInnerClass("", "", "", (int) (byte) 0);
        org.mockito.asm.Attribute attribute90 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor31.visitAttribute(attribute90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(fieldVisitor75);
        org.junit.Assert.assertNotNull(annotationVisitor78);
    }

    @Test
    public void test10690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10690");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitSource("hi!", "");
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.write((-1));
        printWriter39.flush();
        java.util.Locale locale43 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray50 = null;
        aSMifierMethodVisitor45.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray48, (int) (short) 1, objArray50);
        java.io.PrintWriter printWriter52 = printWriter39.printf(locale43, "", (java.lang.Object[]) strArray48);
        org.mockito.asm.MethodVisitor methodVisitor53 = aSMifierClassVisitor15.visitMethod((int) (byte) 0, "", "", "hi!", strArray48);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        java.io.PrintWriter printWriter62 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter64 = printWriter62.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor65 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter64);
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierClassVisitor65.visitAnnotation("hi!", true);
        java.lang.String[] strArray74 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor65.visit(1, (int) (short) 10, "hi!", "", "", strArray74);
        org.mockito.asm.MethodVisitor methodVisitor76 = aSMifierClassVisitor15.visitMethod((int) (byte) 100, "", "hi!", "", strArray74);
        aSMifierClassVisitor15.visitSource("", "");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(methodVisitor53);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(methodVisitor76);
    }

    @Test
    public void test10691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10691");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj16);
        aSMifierMethodVisitor0.visitIntInsn((int) '#', (int) (short) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) -1, "", true);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test10692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10692");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        java.util.List list13 = aSMifierMethodVisitor0.text;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) (short) 10);
        org.junit.Assert.assertNotNull(list13);
    }

    @Test
    public void test10693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10693");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        printWriter36.print(false);
        printWriter36.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter36);
        aSMifierClassVisitor41.visitSource("hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierClassVisitor41.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor52.visitTryCatchBlock(label53, label54, label55, "");
        aSMifierMethodVisitor52.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj61 = null;
        aSMifierMethodVisitor52.visitLdcInsn(obj61);
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor52.visitJumpInsn((int) (short) 1, label64);
        aSMifierMethodVisitor52.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor52.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierMethodVisitor52.visitAnnotationDefault();
        aSMifierMethodVisitor52.visitIntInsn(0, (int) '4');
        aSMifierMethodVisitor52.visitFieldInsn(100, "", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = aSMifierMethodVisitor52.visitParameterAnnotation((int) (short) 100, "hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor85 = aSMifierClassVisitor41.visitField((int) (short) 100, "", "", "", (java.lang.Object) false);
        aSMifierClassVisitor41.visitSource("hi!", "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertNotNull(annotationVisitor84);
        org.junit.Assert.assertNotNull(fieldVisitor85);
    }

    @Test
    public void test10694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10694");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println((int) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj18 = null;
        aSMifierMethodVisitor9.visitLdcInsn(obj18);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor9.visitJumpInsn((int) (short) 1, label21);
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor9.visitAnnotationDefault();
        printWriter1.println((java.lang.Object) aSMifierMethodVisitor9);
        printWriter1.flush();
        printWriter1.print((double) (-1));
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor23);
    }

    @Test
    public void test10695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10695");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 1, (int) (byte) 0);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 100, label27);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label35, label36, label37, "");
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor34);
    }

    @Test
    public void test10696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10696");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 10);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (byte) 10);
        aSMifierMethodVisitor0.visitMaxs((int) 'a', 1);
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray36 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray38 = null;
        aSMifierMethodVisitor33.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray36, (int) (short) 1, objArray38);
        aSMifierMethodVisitor33.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor33.visitEnd();
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor33.visitLocalVariable("", "hi!", "hi!", label49, label50, (int) 'a');
        aSMifierMethodVisitor33.visitIntInsn((int) (byte) 0, 1);
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitFieldInsn((int) ' ', "hi!", "", "");
        aSMifierMethodVisitor59.visitEnd();
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor69.visitTryCatchBlock(label70, label71, label72, "");
        aSMifierMethodVisitor69.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label[] labelArray82 = new org.mockito.asm.Label[] { label81 };
        aSMifierMethodVisitor69.visitTableSwitchInsn(0, (int) (byte) 10, label80, labelArray82);
        aSMifierMethodVisitor59.visitTableSwitchInsn((int) (byte) 100, 0, label68, labelArray82);
        aSMifierMethodVisitor33.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 1, label58, labelArray82);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) '#', (int) (short) 1, label32, labelArray82);
        org.mockito.asm.Label label88 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 100, label88);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(labelArray82);
    }

    @Test
    public void test10697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10697");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println((float) 10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor9.visitLocalVariable("hi!", "hi!", "hi!", label18, label19, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor9.visitAnnotationDefault();
        aSMifierMethodVisitor9.visitFieldInsn(100, "hi!", "", "hi!");
        aSMifierMethodVisitor9.visitMaxs((int) (short) -1, (int) (short) 10);
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor9.visitLocalVariable("", "", "", label34, label35, (int) '4');
        java.lang.Object[] objArray40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor42.visitTryCatchBlock(label43, label44, label45, "");
        aSMifierMethodVisitor42.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj51 = null;
        aSMifierMethodVisitor42.visitLdcInsn(obj51);
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor42.visitJumpInsn((int) (short) 1, label54);
        aSMifierMethodVisitor42.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor42.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierMethodVisitor42.visitAnnotationDefault();
        java.io.PrintWriter printWriter66 = new java.io.PrintWriter("hi!");
        printWriter66.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor70 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor70.visitTryCatchBlock(label71, label72, label73, "");
        aSMifierMethodVisitor70.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        org.mockito.asm.Label[] labelArray83 = new org.mockito.asm.Label[] { label82 };
        aSMifierMethodVisitor70.visitTableSwitchInsn(0, (int) (byte) 10, label81, labelArray83);
        java.io.PrintWriter printWriter85 = printWriter66.printf("hi!", (java.lang.Object[]) labelArray83);
        java.lang.String[] strArray87 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor42.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray83, 1, (java.lang.Object[]) strArray87);
        aSMifierMethodVisitor9.visitFrame(100, 100, objArray40, (int) (short) 100, (java.lang.Object[]) labelArray83);
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = aSMifierMethodVisitor9.visitAnnotation("hi!", true);
        printWriter1.println((java.lang.Object) aSMifierMethodVisitor9);
        aSMifierMethodVisitor9.visitTypeInsn((int) '#', "");
        org.mockito.asm.AnnotationVisitor annotationVisitor97 = aSMifierMethodVisitor9.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(labelArray83);
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(annotationVisitor92);
        org.junit.Assert.assertNotNull(annotationVisitor97);
    }

    @Test
    public void test10698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10698");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        java.util.Locale locale13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray20 = null;
        aSMifierMethodVisitor15.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray18, (int) (short) 1, objArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor23, strArray32, 1.0f };
        java.io.PrintWriter printWriter35 = printWriter12.printf(locale13, "", (java.lang.Object[]) strArray32);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, true);
        printWriter8.println((java.lang.Object) printWriter37);
        printWriter8.print((double) 'a');
        printWriter8.write("");
        printWriter8.write((int) (short) -1);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(printWriter35);
    }

    @Test
    public void test10699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10699");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        printWriter1.print(0L);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.println(100L);
    }

    @Test
    public void test10700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10700");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor7.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor7.visitAnnotationDefault();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        java.io.PrintWriter printWriter50 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray48);
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor7.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray48, 1, (java.lang.Object[]) strArray52);
        java.io.PrintWriter printWriter54 = printWriter1.format("hi!", (java.lang.Object[]) strArray52);
        printWriter54.println((long) 1);
        java.io.PrintWriter printWriter58 = printWriter54.append(' ');
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter("hi!");
        java.util.Locale locale61 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray66 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray68 = null;
        aSMifierMethodVisitor63.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray66, (int) (short) 1, objArray68);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor71 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label label74 = null;
        aSMifierMethodVisitor71.visitTryCatchBlock(label72, label73, label74, "");
        aSMifierMethodVisitor71.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray80 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray82 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor71, strArray80, 1.0f };
        java.io.PrintWriter printWriter83 = printWriter60.printf(locale61, "", (java.lang.Object[]) strArray80);
        char[] charArray90 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter83.println(charArray90);
        char[] charArray92 = new char[] {};
        printWriter83.print(charArray92);
        printWriter58.println(charArray92);
        java.io.PrintWriter printWriter96 = new java.io.PrintWriter((java.io.Writer) printWriter58, true);
        printWriter96.print((float) (-1L));
        printWriter96.println();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[]");
    }

    @Test
    public void test10701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10701");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitMaxs(0, (-1));
        aSMifierMethodVisitor9.visitCode();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor9);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor9.visitLabel(label20);
        aSMifierMethodVisitor9.visitMaxs((int) (short) 100, (-1));
        aSMifierMethodVisitor9.visitIntInsn((int) (short) 0, (int) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor9.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = annotationVisitor30.visitAnnotation("hi!", "hi!");
        annotationVisitor30.visitEnum("", "", "");
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor33);
    }

    @Test
    public void test10702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10702");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 100, (int) (short) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.util.List list68 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitTypeInsn((int) '4', "");
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 100, label73);
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(annotationVisitor75);
    }

    @Test
    public void test10703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10703");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        char[] charArray56 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter49.println(charArray56);
        printWriter24.print(charArray56);
        printWriter24.print(true);
        java.io.PrintWriter printWriter62 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter("hi!");
        java.util.Locale locale65 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray70 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray72 = null;
        aSMifierMethodVisitor67.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray70, (int) (short) 1, objArray72);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor75 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor75.visitTryCatchBlock(label76, label77, label78, "");
        aSMifierMethodVisitor75.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray84 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray86 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor75, strArray84, 1.0f };
        java.io.PrintWriter printWriter87 = printWriter64.printf(locale65, "", (java.lang.Object[]) strArray84);
        printWriter87.println();
        printWriter62.print((java.lang.Object) printWriter87);
        printWriter87.print("hi!");
        printWriter87.println((-1.0d));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertNotNull(printWriter87);
    }

    @Test
    public void test10704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10704");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitLabel(label23);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.util.List list26 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(list26);
    }

    @Test
    public void test10705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10705");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        java.util.List list26 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 0);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 1, "");
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label36, label37, (int) (byte) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitMethodInsn((int) '#', "", "hi!", "hi!");
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor0.visitLabel(label48);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(annotationVisitor42);
    }

    @Test
    public void test10706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10706");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitSource("hi!", "hi!");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter("hi!");
        java.util.Locale locale50 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray55 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray57 = null;
        aSMifierMethodVisitor52.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray55, (int) (short) 1, objArray57);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor60.visitTryCatchBlock(label61, label62, label63, "");
        aSMifierMethodVisitor60.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray69 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray71 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor60, strArray69, 1.0f };
        java.io.PrintWriter printWriter72 = printWriter49.printf(locale50, "", (java.lang.Object[]) strArray69);
        char[] charArray79 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter72.println(charArray79);
        printWriter47.print(charArray79);
        printWriter47.print(true);
        java.io.PrintWriter printWriter85 = printWriter47.append((java.lang.CharSequence) "");
        printWriter47.print((float) '4');
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor90 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter47);
        printWriter47.println((-1));
        org.mockito.asm.FieldVisitor fieldVisitor93 = aSMifierClassVisitor15.visitField((int) ' ', "", "hi!", "", (java.lang.Object) (-1));
        fieldVisitor93.visitEnd();
        org.mockito.asm.Attribute attribute95 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor93.visitAttribute(attribute95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(fieldVisitor93);
    }

    @Test
    public void test10707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10707");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs(1, 10);
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label65);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitTypeInsn(1, "hi!");
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor0.visitLabel(label71);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
    }

    @Test
    public void test10708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10708");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 0, label18);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        annotationVisitor22.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test10709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10709");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter5.println((int) (short) -1);
        java.io.PrintWriter printWriter9 = printWriter5.append('4');
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
    }

    @Test
    public void test10710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10710");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) ' ');
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 100, "", false);
        aSMifierMethodVisitor0.visitIincInsn((int) '4', 0);
        org.mockito.asm.Attribute attribute24 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test10711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10711");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.println(false);
        printWriter24.println(0);
        printWriter24.close();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor32 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor32.visitAnnotation("hi!", false);
        aSMifierClassVisitor32.visitInnerClass("hi!", "", "hi!", (int) (short) 1);
        aSMifierClassVisitor32.visitOuterClass("hi!", "hi!", "hi!");
        aSMifierClassVisitor32.visitSource("hi!", "hi!");
        aSMifierClassVisitor32.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor35);
    }

    @Test
    public void test10712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10712");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((int) (short) -1, "", "", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10713");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray5 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter6 = printWriter1.format("", (java.lang.Object[]) strArray5);
        java.util.Locale locale7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj18 = null;
        aSMifierMethodVisitor9.visitLdcInsn(obj18);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor9.visitJumpInsn((int) (short) 1, label21);
        aSMifierMethodVisitor9.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor9.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor9.visitAnnotationDefault();
        aSMifierMethodVisitor9.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor9.visitLabel(label33);
        java.util.List list35 = aSMifierMethodVisitor9.getText();
        aSMifierMethodVisitor9.visitMultiANewArrayInsn("", (int) (short) 0);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        printWriter42.write((-1));
        printWriter42.flush();
        java.util.Locale locale46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray51 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray53 = null;
        aSMifierMethodVisitor48.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray51, (int) (short) 1, objArray53);
        java.io.PrintWriter printWriter55 = printWriter42.printf(locale46, "", (java.lang.Object[]) strArray51);
        java.lang.Object[] objArray57 = null;
        aSMifierMethodVisitor9.visitFrame((int) (short) 1, 10, (java.lang.Object[]) strArray51, (int) (short) -1, objArray57);
        java.io.PrintWriter printWriter59 = printWriter1.printf(locale7, "", objArray57);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor60.visitTryCatchBlock(label61, label62, label63, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor60.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter("hi!");
        printWriter71.write((-1));
        printWriter71.flush();
        annotationVisitor68.visit("hi!", (java.lang.Object) printWriter71);
        printWriter59.println((java.lang.Object) "hi!");
        printWriter59.print(true);
        printWriter59.print((float) (short) 0);
        printWriter59.println(' ');
        printWriter59.println(false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(annotationVisitor68);
    }

    @Test
    public void test10714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10714");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        printWriter24.println(false);
        java.io.PrintWriter printWriter29 = printWriter24.append('4');
        printWriter29.println((float) 10);
        printWriter29.print('#');
        printWriter29.write((int) (byte) 1);
        printWriter29.println(true);
        printWriter29.println('a');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(printWriter29);
    }

    @Test
    public void test10715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10715");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        printWriter1.println((int) '4');
        org.junit.Assert.assertNotNull(printWriter3);
    }

    @Test
    public void test10716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10716");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label21, label22, label23, "");
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label29, label30, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", false);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label38);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        aSMifierMethodVisitor0.visitVarInsn((int) '4', 1);
        org.junit.Assert.assertNotNull(annotationVisitor36);
    }

    @Test
    public void test10717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10717");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor28.visitLocalVariable("hi!", "hi!", "hi!", label37, label38, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor28.visitAnnotation("", true);
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj54 = null;
        aSMifierMethodVisitor45.visitLdcInsn(obj54);
        org.mockito.asm.Label label56 = null;
        int[] intArray63 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] { label76 };
        aSMifierMethodVisitor64.visitTableSwitchInsn(0, (int) (byte) 10, label75, labelArray77);
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label56, intArray63, labelArray77);
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label44, intArray63, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter26.printf("hi!", (java.lang.Object[]) labelArray80);
        java.io.PrintWriter printWriter84 = printWriter82.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor85 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter84);
        java.io.PrintWriter printWriter86 = new java.io.PrintWriter((java.io.Writer) printWriter84);
        printWriter86.print((double) (short) 0);
        printWriter86.flush();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test10718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10718");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor15.visitAnnotation("", true);
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("hi!");
        printWriter44.print((java.lang.Object) (short) -1);
        printWriter44.flush();
        printWriter44.println(true);
        printWriter44.println();
        printWriter44.print(0);
        aSMifierClassVisitor15.print(printWriter44);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test10719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10719");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter5.print(0);
        printWriter5.println((int) (byte) 10);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor14 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter13);
        printWriter13.println((float) 100);
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test10720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10720");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label26);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.util.List list29 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label31, label32, label33, "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(list29);
    }

    @Test
    public void test10721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10721");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor9 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.util.List list10 = aSMifierMethodVisitor0.text;
        org.mockito.asm.Label label11 = null;
        int[] intArray17 = new int[] { 'a', 1, (byte) 100, (byte) 0, (byte) 10 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor18.visitTryCatchBlock(label19, label20, label21, "");
        java.util.List list24 = aSMifierMethodVisitor18.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor25.visitTryCatchBlock(label26, label27, label28, "");
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor25.visitLocalVariable("hi!", "hi!", "hi!", label34, label35, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor25.visitAnnotationDefault();
        aSMifierMethodVisitor18.visitLdcInsn((java.lang.Object) annotationVisitor38);
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor18.visitLineNumber(0, label41);
        aSMifierMethodVisitor18.visitMaxs((int) '#', (int) (byte) -1);
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj58 = null;
        aSMifierMethodVisitor49.visitLdcInsn(obj58);
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor49.visitJumpInsn((int) (short) 1, label61);
        aSMifierMethodVisitor49.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor49.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor49.visitTypeInsn((int) (short) 10, "hi!");
        org.mockito.asm.Label label75 = null;
        aSMifierMethodVisitor49.visitJumpInsn((int) (short) 0, label75);
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label[] labelArray81 = new org.mockito.asm.Label[] { label80 };
        aSMifierMethodVisitor49.visitTableSwitchInsn(0, (-1), label79, labelArray81);
        aSMifierMethodVisitor18.visitTableSwitchInsn((int) ' ', 0, label48, labelArray81);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label11, intArray17, labelArray81);
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[97, 1, 100, 0, 10]");
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(labelArray81);
        org.junit.Assert.assertNotNull(annotationVisitor85);
    }

    @Test
    public void test10722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10722");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "hi!", "hi!", (int) (byte) 1);
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitOuterClass("", "hi!", "");
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!" };
        aSMifierClassVisitor28.visit((int) '#', (int) (short) -1, "hi!", "hi!", "", strArray48);
        aSMifierClassVisitor28.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierClassVisitor28.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = annotationVisitor53.visitAnnotation("hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = annotationVisitor56.visitAnnotation("hi!", "hi!");
        annotationVisitor56.visitEnum("hi!", "hi!", "");
        annotationVisitor56.visitEnum("hi!", "hi!", "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(annotationVisitor59);
    }

    @Test
    public void test10723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10723");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label6 = null;
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        printWriter8.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label[] labelArray25 = new org.mockito.asm.Label[] { label24 };
        aSMifierMethodVisitor12.visitTableSwitchInsn(0, (int) (byte) 10, label23, labelArray25);
        java.io.PrintWriter printWriter27 = printWriter8.printf("hi!", (java.lang.Object[]) labelArray25);
        aSMifierMethodVisitor0.visitTableSwitchInsn(1, (int) (short) 10, label6, labelArray25);
        aSMifierMethodVisitor0.visitVarInsn(100, (int) ' ');
        java.util.List list32 = aSMifierMethodVisitor0.text;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label33, label34, label35, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 1, "hi!", "", "");
        org.junit.Assert.assertNotNull(labelArray25);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor41);
    }

    @Test
    public void test10724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10724");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) -1, (int) (byte) 0);
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (int) '4');
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLabel(label18);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray23 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray25 = null;
        aSMifierMethodVisitor20.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray23, (int) (short) 1, objArray25);
        aSMifierMethodVisitor20.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor20.visitMethodInsn((int) (short) 10, "hi!", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj46 = null;
        aSMifierMethodVisitor37.visitLdcInsn(obj46);
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter("hi!");
        printWriter49.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor37.print(printWriter49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor54.visitTryCatchBlock(label55, label56, label57, "");
        aSMifierMethodVisitor54.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj63 = null;
        aSMifierMethodVisitor54.visitLdcInsn(obj63);
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor54.visitJumpInsn((int) (short) 1, label66);
        aSMifierMethodVisitor54.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label[] labelArray74 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor54.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label73, labelArray74);
        java.io.PrintWriter printWriter76 = printWriter49.printf("", (java.lang.Object[]) labelArray74);
        printWriter49.write((int) '4');
        java.io.PrintWriter printWriter79 = new java.io.PrintWriter((java.io.Writer) printWriter49);
        aSMifierMethodVisitor20.print(printWriter49);
        printWriter49.write((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter49);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(labelArray74);
        org.junit.Assert.assertNotNull(printWriter76);
    }

    @Test
    public void test10725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10725");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] { label40 };
        aSMifierMethodVisitor28.visitTableSwitchInsn(0, (int) (byte) 10, label39, labelArray41);
        java.io.PrintWriter printWriter43 = printWriter24.printf("hi!", (java.lang.Object[]) labelArray41);
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray41, 1, (java.lang.Object[]) strArray45);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 0, (int) (byte) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor54);
    }

    @Test
    public void test10726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10726");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) (short) 1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor17.visitTryCatchBlock(label18, label19, label20, "");
        aSMifierMethodVisitor17.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj26 = null;
        aSMifierMethodVisitor17.visitLdcInsn(obj26);
        org.mockito.asm.Label label28 = null;
        int[] intArray35 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] { label48 };
        aSMifierMethodVisitor36.visitTableSwitchInsn(0, (int) (byte) 10, label47, labelArray49);
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label28, intArray35, labelArray49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor52.visitTryCatchBlock(label53, label54, label55, "");
        aSMifierMethodVisitor52.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label[] labelArray65 = new org.mockito.asm.Label[] { label64 };
        aSMifierMethodVisitor52.visitTableSwitchInsn(0, (int) (byte) 10, label63, labelArray65);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label16, intArray35, labelArray65);
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 0, label69);
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor0.visitLabel(label71);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(labelArray65);
    }

    @Test
    public void test10727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10727");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = printWriter1.append((java.lang.CharSequence) "");
        boolean boolean23 = printWriter22.checkError();
        java.io.PrintWriter printWriter25 = printWriter22.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter25);
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(printWriter25);
    }

    @Test
    public void test10728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10728");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list13 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter("hi!");
        printWriter20.print(false);
        java.io.PrintWriter printWriter24 = printWriter20.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter20);
        printWriter25.println();
        printWriter25.print((float) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj39 = null;
        aSMifierMethodVisitor30.visitLdcInsn(obj39);
        aSMifierMethodVisitor30.visitInsn((int) ' ');
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor30.visitJumpInsn(100, label44);
        aSMifierMethodVisitor30.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label49 = null;
        int[] intArray50 = new int[] {};
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        printWriter52.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter56 = printWriter52.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj67 = null;
        aSMifierMethodVisitor58.visitLdcInsn(obj67);
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor58.visitJumpInsn((int) (short) 1, label70);
        aSMifierMethodVisitor58.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label[] labelArray78 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor58.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label77, labelArray78);
        java.io.PrintWriter printWriter80 = printWriter56.printf("", (java.lang.Object[]) labelArray78);
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label49, intArray50, labelArray78);
        java.io.PrintWriter printWriter82 = printWriter25.printf("", (java.lang.Object[]) labelArray78);
        java.lang.Object[] objArray84 = null;
        aSMifierMethodVisitor0.visitFrame((int) ' ', (int) ' ', (java.lang.Object[]) labelArray78, 10, objArray84);
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label90 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) ' ', label90);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(labelArray78);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(annotationVisitor88);
    }

    @Test
    public void test10729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10729");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor15);
        java.util.List list21 = aSMifierMethodVisitor15.getText();
        aSMifierMethodVisitor15.visitInsn((int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '4', "hi!", false);
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor15.visitTryCatchBlock(label28, label29, label30, "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(annotationVisitor27);
    }

    @Test
    public void test10730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10730");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, 0);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitMaxs(0, 0);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 10, (int) (byte) 10);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 1, "");
        aSMifierMethodVisitor0.visitInsn((int) 'a');
        aSMifierMethodVisitor0.visitIincInsn((int) ' ', 0);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationVisitor73);
    }

    @Test
    public void test10731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10731");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, (-1));
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs((int) (short) 10, 1);
    }

    @Test
    public void test10732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10732");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        printWriter24.println(false);
        java.io.PrintWriter printWriter29 = printWriter24.append('4');
        printWriter29.print((double) (short) 100);
        printWriter29.flush();
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter38 = printWriter34.append((java.lang.CharSequence) "");
        printWriter34.print((int) (byte) -1);
        printWriter34.print((double) (byte) 1);
        printWriter34.close();
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        printWriter44.println();
        java.io.PrintWriter printWriter47 = printWriter44.append('#');
        java.io.PrintWriter printWriter49 = printWriter44.append((java.lang.CharSequence) "");
        printWriter29.print((java.lang.Object) printWriter49);
        java.io.PrintWriter printWriter54 = printWriter49.append((java.lang.CharSequence) "hi!", (int) (short) 1, (int) (short) 1);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(printWriter54);
    }

    @Test
    public void test10733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10733");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter3);
        java.lang.String[] strArray10 = null;
        aSMifierClassVisitor4.visit((int) (short) 1, (int) '#', "hi!", "hi!", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor4.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierClassVisitor4.visitAnnotation("", false);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor17);
    }

    @Test
    public void test10734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10734");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierClassVisitor15.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierClassVisitor15.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierClassVisitor15.visitAnnotation("", false);
        annotationVisitor39.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor39);
    }

    @Test
    public void test10735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10735");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label28, label29, (int) (short) 1);
        aSMifierMethodVisitor0.visitIntInsn((int) '#', (int) 'a');
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 100, (int) (byte) 0);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, (int) '#');
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label42, label43, label44, "");
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test10736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10736");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "hi!", "", "");
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label13, label14, (int) '4');
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 100, label18);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) 'a');
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) (byte) 0);
    }

    @Test
    public void test10737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10737");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter5.write("");
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("hi!");
        java.util.Locale locale10 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray15 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray17 = null;
        aSMifierMethodVisitor12.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray15, (int) (short) 1, objArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray29 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray31 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor20, strArray29, 1.0f };
        java.io.PrintWriter printWriter32 = printWriter9.printf(locale10, "", (java.lang.Object[]) strArray29);
        char[] charArray39 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter32.println(charArray39);
        printWriter5.print(charArray39);
        printWriter5.println((double) (byte) 10);
        printWriter5.print((int) (short) 1);
        java.io.PrintWriter printWriter47 = printWriter5.append((java.lang.CharSequence) "");
        // The following exception was thrown during execution in test generation
        try {
            printWriter5.write("", (-1), (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter47);
    }

    @Test
    public void test10738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10738");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label11 = null;
        int[] intArray18 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor19.visitTryCatchBlock(label20, label21, label22, "");
        aSMifierMethodVisitor19.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label[] labelArray32 = new org.mockito.asm.Label[] { label31 };
        aSMifierMethodVisitor19.visitTableSwitchInsn(0, (int) (byte) 10, label30, labelArray32);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label11, intArray18, labelArray32);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor38.visitTryCatchBlock(label39, label40, label41, "");
        aSMifierMethodVisitor38.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj47 = null;
        aSMifierMethodVisitor38.visitLdcInsn(obj47);
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor38.visitJumpInsn((int) (short) 1, label50);
        aSMifierMethodVisitor38.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label[] labelArray58 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label57, labelArray58);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 1, (int) (short) -1, label37, labelArray58);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor0.visitLineNumber(1, label66);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray32);
        org.junit.Assert.assertNotNull(labelArray58);
    }

    @Test
    public void test10739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10739");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", true);
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label67, label68, label69, "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 0, "", true);
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 1, label80);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(annotationVisitor78);
    }

    @Test
    public void test10740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10740");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter3, true);
        java.util.Locale locale6 = null;
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("hi!");
        printWriter9.print(false);
        java.util.Locale locale12 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitInsn((int) ' ');
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj39 = null;
        aSMifierMethodVisitor30.visitLdcInsn(obj39);
        org.mockito.asm.Label label41 = null;
        int[] intArray48 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label[] labelArray62 = new org.mockito.asm.Label[] { label61 };
        aSMifierMethodVisitor49.visitTableSwitchInsn(0, (int) (byte) 10, label60, labelArray62);
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label41, intArray48, labelArray62);
        aSMifierMethodVisitor14.visitTableSwitchInsn((int) '4', (int) '#', label29, labelArray62);
        java.io.PrintWriter printWriter66 = printWriter9.format(locale12, "hi!", (java.lang.Object[]) labelArray62);
        java.io.PrintWriter printWriter67 = printWriter5.printf(locale6, "", (java.lang.Object[]) labelArray62);
        printWriter5.println((int) '#');
        printWriter5.println(0L);
        java.io.PrintWriter printWriter73 = printWriter5.append((java.lang.CharSequence) "");
        printWriter5.println(false);
        printWriter5.flush();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray62);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(printWriter73);
    }

    @Test
    public void test10741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10741");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        boolean boolean6 = printWriter1.checkError();
        printWriter1.println((double) 0);
        printWriter1.println();
        printWriter1.print((long) (short) 1);
        printWriter1.print(true);
        printWriter1.close();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test10742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10742");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor16.visitJumpInsn((int) (short) 1, label28);
        aSMifierMethodVisitor16.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor16.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor16.visitAnnotationDefault();
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] { label56 };
        aSMifierMethodVisitor44.visitTableSwitchInsn(0, (int) (byte) 10, label55, labelArray57);
        java.io.PrintWriter printWriter59 = printWriter40.printf("hi!", (java.lang.Object[]) labelArray57);
        java.lang.String[] strArray61 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor16.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray57, 1, (java.lang.Object[]) strArray61);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 1, (int) (byte) 100, label15, labelArray57);
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 0, (int) '4');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 0);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label79 = null;
        aSMifierMethodVisitor0.visitLineNumber(1, label79);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(labelArray57);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(strArray61);
    }

    @Test
    public void test10743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10743");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter3, true);
        java.util.Locale locale6 = null;
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("hi!");
        printWriter9.print(false);
        java.util.Locale locale12 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitInsn((int) ' ');
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj39 = null;
        aSMifierMethodVisitor30.visitLdcInsn(obj39);
        org.mockito.asm.Label label41 = null;
        int[] intArray48 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label[] labelArray62 = new org.mockito.asm.Label[] { label61 };
        aSMifierMethodVisitor49.visitTableSwitchInsn(0, (int) (byte) 10, label60, labelArray62);
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label41, intArray48, labelArray62);
        aSMifierMethodVisitor14.visitTableSwitchInsn((int) '4', (int) '#', label29, labelArray62);
        java.io.PrintWriter printWriter66 = printWriter9.format(locale12, "hi!", (java.lang.Object[]) labelArray62);
        java.io.PrintWriter printWriter67 = printWriter5.printf(locale6, "", (java.lang.Object[]) labelArray62);
        printWriter67.write("");
        // The following exception was thrown during execution in test generation
        try {
            printWriter67.write("hi!", (int) (byte) -1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray62);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(printWriter67);
    }

    @Test
    public void test10744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10744");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (byte) 0);
        java.lang.String[] strArray37 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) (byte) -1, (int) ' ', "hi!", "", "", strArray37);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitInnerClass("hi!", "hi!", "hi!", (int) 'a');
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(annotationVisitor50);
    }

    @Test
    public void test10745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10745");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor16.visitJumpInsn((int) (short) 1, label28);
        aSMifierMethodVisitor16.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor16.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor16.visitAnnotationDefault();
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] { label56 };
        aSMifierMethodVisitor44.visitTableSwitchInsn(0, (int) (byte) 10, label55, labelArray57);
        java.io.PrintWriter printWriter59 = printWriter40.printf("hi!", (java.lang.Object[]) labelArray57);
        java.lang.String[] strArray61 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor16.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray57, 1, (java.lang.Object[]) strArray61);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 1, (int) (byte) 100, label15, labelArray57);
        aSMifierMethodVisitor0.visitMethodInsn(1, "", "", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) -1, label71);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 1, 0);
        org.mockito.asm.Attribute attribute76 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(labelArray57);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(strArray61);
    }

    @Test
    public void test10746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10746");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '4', label21);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 100, (int) (short) 1);
    }

    @Test
    public void test10747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10747");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter("hi!");
        java.util.Locale locale39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = null;
        aSMifierMethodVisitor41.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray44, (int) (short) 1, objArray46);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray58 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray60 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor49, strArray58, 1.0f };
        java.io.PrintWriter printWriter61 = printWriter38.printf(locale39, "", (java.lang.Object[]) strArray58);
        char[] charArray68 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter61.println(charArray68);
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter((java.io.Writer) printWriter61, true);
        printWriter61.print((float) 10L);
        printWriter61.println(false);
        printWriter61.print(0);
        printWriter61.println("hi!");
        org.mockito.asm.FieldVisitor fieldVisitor80 = aSMifierClassVisitor15.visitField((int) (byte) 10, "", "", "", (java.lang.Object) "hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(fieldVisitor80);
    }

    @Test
    public void test10748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10748");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label[] labelArray27 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor7.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label26, labelArray27);
        java.io.PrintWriter printWriter29 = printWriter5.printf("", (java.lang.Object[]) labelArray27);
        printWriter29.println('a');
        printWriter29.print(false);
        printWriter29.close();
        printWriter29.print(false);
        printWriter29.println(0.0f);
        printWriter29.print((double) 0L);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter44 = printWriter29.append((java.lang.CharSequence) "", 1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(labelArray27);
        org.junit.Assert.assertNotNull(printWriter29);
    }

    @Test
    public void test10749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10749");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor0.visitInsn(100);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs(100, (int) (byte) -1);
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitParameterAnnotation((int) 'a', "", true);
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) ' ', label31);
        aSMifierMethodVisitor0.visitInsn((int) (short) 0);
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label35, label36, label37, "");
        org.junit.Assert.assertNotNull(annotationVisitor29);
    }

    @Test
    public void test10750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10750");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor16.visitEnum("", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = annotationVisitor16.visitAnnotation("", "hi!");
        annotationVisitor23.visitEnum("", "", "");
        annotationVisitor23.visitEnum("", "hi!", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor23);
    }

    @Test
    public void test10751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10751");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter("hi!");
        java.util.Locale locale7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray12 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray14 = null;
        aSMifierMethodVisitor9.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray12, (int) (short) 1, objArray14);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor17.visitTryCatchBlock(label18, label19, label20, "");
        aSMifierMethodVisitor17.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray26 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray28 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor17, strArray26, 1.0f };
        java.io.PrintWriter printWriter29 = printWriter6.printf(locale7, "", (java.lang.Object[]) strArray26);
        printWriter29.print("hi!");
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter((java.io.Writer) printWriter29);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor33 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter32);
        aSMifierClassVisitor33.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierClassVisitor33.visitAnnotation("hi!", true);
        aSMifierClassVisitor33.visitSource("", "");
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        printWriter48.print(false);
        java.io.PrintWriter printWriter52 = printWriter48.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter((java.io.Writer) printWriter48);
        printWriter53.println();
        org.mockito.asm.FieldVisitor fieldVisitor55 = aSMifierClassVisitor33.visitField((int) ' ', "", "", "hi!", (java.lang.Object) printWriter53);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor33.visitAnnotation("", true);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter("hi!");
        printWriter65.write((-1));
        printWriter65.flush();
        java.util.Locale locale69 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor71 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray74 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray76 = null;
        aSMifierMethodVisitor71.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray74, (int) (short) 1, objArray76);
        java.io.PrintWriter printWriter78 = printWriter65.printf(locale69, "", (java.lang.Object[]) strArray74);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor79 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter65);
        aSMifierClassVisitor79.visitEnd();
        aSMifierClassVisitor79.visitSource("", "hi!");
        java.lang.String[] strArray88 = null;
        org.mockito.asm.MethodVisitor methodVisitor89 = aSMifierClassVisitor79.visitMethod(0, "", "hi!", "", strArray88);
        aSMifierClassVisitor79.visitEnd();
        java.lang.String[] strArray96 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor79.visit(0, 10, "hi!", "", "hi!", strArray96);
        aSMifierClassVisitor33.visit((int) 'a', 100, "", "hi!", "hi!", strArray96);
        java.io.PrintWriter printWriter99 = printWriter1.format("hi!", (java.lang.Object[]) strArray96);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(fieldVisitor55);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(methodVisitor89);
        org.junit.Assert.assertNotNull(strArray96);
        org.junit.Assert.assertNotNull(printWriter99);
    }

    @Test
    public void test10752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10752");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor15);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 10, label22);
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 100, label27);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor29);
    }

    @Test
    public void test10753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10753");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.print('a');
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter28.flush();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        aSMifierClassVisitor30.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test10754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10754");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 100, (int) (byte) 10);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitInsn((int) (byte) 10);
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        java.util.List list26 = aSMifierMethodVisitor0.text;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 100, label28);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 100);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(list26);
    }

    @Test
    public void test10755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10755");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        aSMifierMethodVisitor0.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitVarInsn(0, (int) (byte) 100);
        aSMifierMethodVisitor0.visitCode();
    }

    @Test
    public void test10756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10756");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter5.print(0L);
        java.lang.Class<?> wildcardClass8 = printWriter5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test10757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10757");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        printWriter28.print(false);
        printWriter28.println(false);
        java.io.PrintWriter printWriter34 = printWriter28.append('#');
        printWriter34.print((long) 0);
        printWriter34.println((int) (byte) -1);
        printWriter34.print((long) (byte) 100);
        printWriter26.print((java.lang.Object) printWriter34);
        printWriter26.write((int) 'a');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter34);
    }

    @Test
    public void test10758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10758");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor28.visitLocalVariable("hi!", "hi!", "hi!", label37, label38, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor28.visitAnnotation("", true);
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj54 = null;
        aSMifierMethodVisitor45.visitLdcInsn(obj54);
        org.mockito.asm.Label label56 = null;
        int[] intArray63 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] { label76 };
        aSMifierMethodVisitor64.visitTableSwitchInsn(0, (int) (byte) 10, label75, labelArray77);
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label56, intArray63, labelArray77);
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label44, intArray63, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter26.printf("hi!", (java.lang.Object[]) labelArray80);
        java.io.PrintWriter printWriter84 = printWriter82.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor85 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter84);
        aSMifierClassVisitor85.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor85.visitOuterClass("", "", "hi!");
        aSMifierClassVisitor85.visitSource("hi!", "");
        aSMifierClassVisitor85.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test10759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10759");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        printWriter32.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray36 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter37 = printWriter32.format("", (java.lang.Object[]) strArray36);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter((java.io.Writer) printWriter32, true);
        org.mockito.asm.FieldVisitor fieldVisitor40 = aSMifierClassVisitor15.visitField((int) '#', "", "", "hi!", (java.lang.Object) printWriter39);
        aSMifierClassVisitor15.visitInnerClass("hi!", "hi!", "", (int) (byte) 100);
        aSMifierClassVisitor15.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(fieldVisitor40);
    }

    @Test
    public void test10760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10760");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor14.visitJumpInsn((int) (short) 1, label26);
        aSMifierMethodVisitor14.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor14.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor14.visitAnnotationDefault();
        aSMifierMethodVisitor14.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor14.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        annotationVisitor38.visit("", (java.lang.Object) "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = annotationVisitor38.visitArray("");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) annotationVisitor53);
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor0.visitLabel(label55);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 10);
        java.util.List list59 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(list59);
    }

    @Test
    public void test10761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10761");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("hi!");
        printWriter26.println('a');
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj41 = null;
        aSMifierMethodVisitor32.visitLdcInsn(obj41);
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor32.visitJumpInsn((int) (short) 1, label44);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor32.visitJumpInsn((int) (short) 1, label50);
        aSMifierMethodVisitor32.visitEnd();
        aSMifierMethodVisitor32.visitTypeInsn((int) (short) 0, "");
        aSMifierMethodVisitor32.visitVarInsn(0, 0);
        aSMifierMethodVisitor32.visitFieldInsn(10, "", "hi!", "hi!");
        aSMifierMethodVisitor32.visitCode();
        printWriter26.print((java.lang.Object) aSMifierMethodVisitor32);
        printWriter26.print('4');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test10762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10762");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, (int) (short) 10);
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label65);
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label70, label71, (int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
    }

    @Test
    public void test10763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10763");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitFieldInsn(100, "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitInsn(0);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray29 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray31 = null;
        aSMifierMethodVisitor26.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray29, (int) (short) 1, objArray31);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor34.visitTryCatchBlock(label35, label36, label37, "");
        aSMifierMethodVisitor34.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray43 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray45 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor34, strArray43, 1.0f };
        java.io.PrintWriter printWriter46 = printWriter23.printf(locale24, "", (java.lang.Object[]) strArray43);
        aSMifierMethodVisitor0.print(printWriter23);
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor53);
    }

    @Test
    public void test10764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10764");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label18);
        aSMifierMethodVisitor0.visitFieldInsn(1, "", "", "");
        aSMifierMethodVisitor0.visitIincInsn((-1), 10);
        aSMifierMethodVisitor0.visitInsn((int) (short) 10);
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label33, label34, 100);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label37, label38, label39, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) -1, "", false);
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor0.visitJumpInsn(0, label47);
        org.junit.Assert.assertNotNull(annotationVisitor45);
    }

    @Test
    public void test10765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10765");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter9.println(false);
        printWriter9.println(true);
        printWriter9.print((-1));
        printWriter9.print('#');
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.Writer) printWriter9);
        boolean boolean19 = printWriter9.checkError();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test10766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10766");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label10);
        aSMifierMethodVisitor0.visitInsn((int) (short) 10);
        aSMifierMethodVisitor0.visitIntInsn(0, (-1));
        org.mockito.asm.Label label19 = null;
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print(false);
        java.io.PrintWriter printWriter25 = printWriter21.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        printWriter26.println();
        printWriter26.print((float) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj40 = null;
        aSMifierMethodVisitor31.visitLdcInsn(obj40);
        aSMifierMethodVisitor31.visitInsn((int) ' ');
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor31.visitJumpInsn(100, label45);
        aSMifierMethodVisitor31.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label50 = null;
        int[] intArray51 = new int[] {};
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("hi!");
        printWriter53.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter57 = printWriter53.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor59.visitTryCatchBlock(label60, label61, label62, "");
        aSMifierMethodVisitor59.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj68 = null;
        aSMifierMethodVisitor59.visitLdcInsn(obj68);
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor59.visitJumpInsn((int) (short) 1, label71);
        aSMifierMethodVisitor59.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label[] labelArray79 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label78, labelArray79);
        java.io.PrintWriter printWriter81 = printWriter57.printf("", (java.lang.Object[]) labelArray79);
        aSMifierMethodVisitor31.visitLookupSwitchInsn(label50, intArray51, labelArray79);
        java.io.PrintWriter printWriter83 = printWriter26.printf("", (java.lang.Object[]) labelArray79);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) ' ', 1, label19, labelArray79);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn((-1), "", "", "");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]");
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(labelArray79);
        org.junit.Assert.assertNotNull(printWriter81);
        org.junit.Assert.assertNotNull(printWriter83);
    }

    @Test
    public void test10767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10767");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label27 = null;
        int[] intArray34 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        aSMifierMethodVisitor16.visitLookupSwitchInsn(label27, intArray34, labelArray48);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) '4', (int) '#', label15, labelArray48);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label55, label56, (int) (short) 1);
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor0.visitLabel(label59);
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 100, label62);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor0.visitParameterAnnotation(100, "hi!", true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor67);
    }

    @Test
    public void test10768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10768");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        java.util.Locale locale31 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray36 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray38 = null;
        aSMifierMethodVisitor33.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray36, (int) (short) 1, objArray38);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray50 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray52 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor41, strArray50, 1.0f };
        java.io.PrintWriter printWriter53 = printWriter30.printf(locale31, "", (java.lang.Object[]) strArray50);
        char[] charArray60 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter53.println(charArray60);
        printWriter28.print(charArray60);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor63.visitTryCatchBlock(label64, label65, label66, "");
        aSMifierMethodVisitor63.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj72 = null;
        aSMifierMethodVisitor63.visitLdcInsn(obj72);
        org.mockito.asm.Label label75 = null;
        aSMifierMethodVisitor63.visitJumpInsn((int) (short) 1, label75);
        aSMifierMethodVisitor63.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor63.visitInsn(100);
        aSMifierMethodVisitor63.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor86 = aSMifierMethodVisitor63.visitParameterAnnotation((int) (short) 100, "", true);
        printWriter28.print((java.lang.Object) aSMifierMethodVisitor63);
        printWriter28.close();
        printWriter28.write("hi!", (int) (short) 100, 0);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(annotationVisitor86);
    }

    @Test
    public void test10769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10769");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) ' ');
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 100, label18);
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label20, label21, label22, "");
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLabel(label25);
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label27, label28, label29, "");
        org.junit.Assert.assertNotNull(annotationVisitor13);
    }

    @Test
    public void test10770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10770");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "hi!", (int) (byte) 10);
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        printWriter15.print(false);
        java.io.PrintWriter printWriter19 = printWriter15.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter((java.io.Writer) printWriter15);
        printWriter20.println();
        printWriter20.print((float) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor25.visitTryCatchBlock(label26, label27, label28, "");
        aSMifierMethodVisitor25.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj34 = null;
        aSMifierMethodVisitor25.visitLdcInsn(obj34);
        aSMifierMethodVisitor25.visitInsn((int) ' ');
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor25.visitJumpInsn(100, label39);
        aSMifierMethodVisitor25.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label44 = null;
        int[] intArray45 = new int[] {};
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter("hi!");
        printWriter47.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter51 = printWriter47.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor53.visitTryCatchBlock(label54, label55, label56, "");
        aSMifierMethodVisitor53.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj62 = null;
        aSMifierMethodVisitor53.visitLdcInsn(obj62);
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor53.visitJumpInsn((int) (short) 1, label65);
        aSMifierMethodVisitor53.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label[] labelArray73 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor53.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label72, labelArray73);
        java.io.PrintWriter printWriter75 = printWriter51.printf("", (java.lang.Object[]) labelArray73);
        aSMifierMethodVisitor25.visitLookupSwitchInsn(label44, intArray45, labelArray73);
        java.io.PrintWriter printWriter77 = printWriter20.printf("", (java.lang.Object[]) labelArray73);
        java.io.PrintWriter printWriter79 = new java.io.PrintWriter((java.io.Writer) printWriter20, true);
        java.io.PrintWriter printWriter81 = printWriter20.append(' ');
        org.mockito.asm.FieldVisitor fieldVisitor82 = aSMifierClassVisitor1.visitField((int) '#', "hi!", "", "", (java.lang.Object) printWriter81);
        aSMifierClassVisitor1.visitOuterClass("hi!", "hi!", "");
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(labelArray73);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(printWriter81);
        org.junit.Assert.assertNotNull(fieldVisitor82);
    }

    @Test
    public void test10771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10771");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        java.util.List list26 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = annotationVisitor27.visitArray("");
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = annotationVisitor29.visitArray("hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = annotationVisitor29.visitArray("hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = annotationVisitor29.visitArray("hi!");
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(annotationVisitor35);
    }

    @Test
    public void test10772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10772");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label19, labelArray20);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "hi!", false);
        aSMifierMethodVisitor0.visitMethodInsn(1, "", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 1, 0);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 10, (int) 'a');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 1);
        org.junit.Assert.assertNotNull(labelArray20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor28);
    }

    @Test
    public void test10773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10773");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor8.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierClassVisitor8.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        printWriter18.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter22 = printWriter18.append((java.lang.CharSequence) "");
        printWriter18.print((double) 1);
        java.io.PrintWriter printWriter26 = printWriter18.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter18, true);
        java.util.Locale locale29 = null;
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter34 = printWriter32.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj44 = null;
        aSMifierMethodVisitor35.visitLdcInsn(obj44);
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor35.visitJumpInsn((int) (short) 1, label47);
        aSMifierMethodVisitor35.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor35.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierMethodVisitor35.visitAnnotationDefault();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter("hi!");
        printWriter59.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor63.visitTryCatchBlock(label64, label65, label66, "");
        aSMifierMethodVisitor63.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label[] labelArray76 = new org.mockito.asm.Label[] { label75 };
        aSMifierMethodVisitor63.visitTableSwitchInsn(0, (int) (byte) 10, label74, labelArray76);
        java.io.PrintWriter printWriter78 = printWriter59.printf("hi!", (java.lang.Object[]) labelArray76);
        java.lang.String[] strArray80 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor35.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray76, 1, (java.lang.Object[]) strArray80);
        printWriter34.println((java.lang.Object) strArray80);
        java.io.PrintWriter printWriter83 = printWriter18.printf(locale29, "hi!", (java.lang.Object[]) strArray80);
        org.mockito.asm.MethodVisitor methodVisitor84 = aSMifierClassVisitor8.visitMethod((int) '#', "", "hi!", "hi!", strArray80);
        org.mockito.asm.AnnotationVisitor annotationVisitor87 = methodVisitor84.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(labelArray76);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertNotNull(methodVisitor84);
        org.junit.Assert.assertNotNull(annotationVisitor87);
    }

    @Test
    public void test10774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10774");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter((java.io.Writer) printWriter26, true);
        java.io.PrintWriter printWriter31 = printWriter29.append((java.lang.CharSequence) "");
        printWriter29.print('4');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(printWriter31);
    }

    @Test
    public void test10775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10775");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter39 = printWriter37.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj49 = null;
        aSMifierMethodVisitor40.visitLdcInsn(obj49);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor40.visitJumpInsn((int) (short) 1, label52);
        aSMifierMethodVisitor40.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor40.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor40.visitAnnotationDefault();
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter("hi!");
        printWriter64.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor68.visitTryCatchBlock(label69, label70, label71, "");
        aSMifierMethodVisitor68.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label[] labelArray81 = new org.mockito.asm.Label[] { label80 };
        aSMifierMethodVisitor68.visitTableSwitchInsn(0, (int) (byte) 10, label79, labelArray81);
        java.io.PrintWriter printWriter83 = printWriter64.printf("hi!", (java.lang.Object[]) labelArray81);
        java.lang.String[] strArray85 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor40.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray81, 1, (java.lang.Object[]) strArray85);
        printWriter39.println((java.lang.Object) strArray85);
        org.mockito.asm.MethodVisitor methodVisitor88 = aSMifierClassVisitor15.visitMethod(100, "hi!", "", "", strArray85);
        aSMifierClassVisitor15.visitInnerClass("hi!", "hi!", "hi!", 0);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (short) 1);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(labelArray81);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(methodVisitor88);
    }

    @Test
    public void test10776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10776");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitMaxs(10, (int) (byte) 1);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test10777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10777");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 1, "", true);
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 10, label71);
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = annotationVisitor76.visitAnnotation("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationVisitor69);
        org.junit.Assert.assertNotNull(annotationVisitor76);
        org.junit.Assert.assertNotNull(annotationVisitor79);
    }

    @Test
    public void test10778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10778");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter9.println(false);
        printWriter9.println("hi!");
        printWriter9.print((float) (byte) 10);
        java.io.PrintWriter printWriter19 = printWriter9.append((java.lang.CharSequence) "", (int) (short) 0, 0);
        printWriter9.print((float) (byte) 10);
        printWriter9.print((int) (short) -1);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter19);
    }

    @Test
    public void test10779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10779");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter1.println();
        java.util.Locale locale9 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor11.visitTryCatchBlock(label12, label13, label14, "");
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor11.visitLocalVariable("hi!", "hi!", "hi!", label20, label21, (int) (byte) 10);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        printWriter25.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray29 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter30 = printWriter25.format("", (java.lang.Object[]) strArray29);
        aSMifierMethodVisitor11.visitLdcInsn((java.lang.Object) strArray29);
        java.io.PrintWriter printWriter32 = printWriter1.printf(locale9, "", (java.lang.Object[]) strArray29);
        printWriter1.println((long) 0);
        printWriter1.print(100.0f);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor43.visitTryCatchBlock(label44, label45, label46, "");
        aSMifierMethodVisitor43.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] { label55 };
        aSMifierMethodVisitor43.visitTableSwitchInsn(0, (int) (byte) 10, label54, labelArray56);
        java.io.PrintWriter printWriter58 = printWriter39.printf("hi!", (java.lang.Object[]) labelArray56);
        java.io.PrintWriter printWriter59 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray56);
        java.util.Locale locale60 = null;
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter("hi!");
        printWriter63.print(false);
        java.io.PrintWriter printWriter67 = printWriter63.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter68 = new java.io.PrintWriter((java.io.Writer) printWriter63);
        java.io.PrintWriter printWriter70 = printWriter68.append((java.lang.CharSequence) "");
        printWriter70.print("");
        java.io.PrintWriter printWriter75 = new java.io.PrintWriter("hi!");
        printWriter75.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor79 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        aSMifierMethodVisitor79.visitTryCatchBlock(label80, label81, label82, "");
        aSMifierMethodVisitor79.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label90 = null;
        org.mockito.asm.Label label91 = null;
        org.mockito.asm.Label[] labelArray92 = new org.mockito.asm.Label[] { label91 };
        aSMifierMethodVisitor79.visitTableSwitchInsn(0, (int) (byte) 10, label90, labelArray92);
        java.io.PrintWriter printWriter94 = printWriter75.printf("hi!", (java.lang.Object[]) labelArray92);
        java.io.PrintWriter printWriter95 = printWriter70.printf("hi!", (java.lang.Object[]) labelArray92);
        java.io.PrintWriter printWriter96 = printWriter59.printf(locale60, "", (java.lang.Object[]) labelArray92);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(labelArray92);
        org.junit.Assert.assertNotNull(printWriter94);
        org.junit.Assert.assertNotNull(printWriter95);
        org.junit.Assert.assertNotNull(printWriter96);
    }

    @Test
    public void test10780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10780");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label10);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", 0);
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor18.visitTryCatchBlock(label19, label20, label21, "");
        aSMifierMethodVisitor18.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj27 = null;
        aSMifierMethodVisitor18.visitLdcInsn(obj27);
        org.mockito.asm.Label label29 = null;
        int[] intArray36 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] { label49 };
        aSMifierMethodVisitor37.visitTableSwitchInsn(0, (int) (byte) 10, label48, labelArray50);
        aSMifierMethodVisitor18.visitLookupSwitchInsn(label29, intArray36, labelArray50);
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter("hi!");
        printWriter54.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter58 = printWriter54.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor60.visitTryCatchBlock(label61, label62, label63, "");
        aSMifierMethodVisitor60.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj69 = null;
        aSMifierMethodVisitor60.visitLdcInsn(obj69);
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor60.visitJumpInsn((int) (short) 1, label72);
        aSMifierMethodVisitor60.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor60.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label79, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter58.printf("", (java.lang.Object[]) labelArray80);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label17, intArray36, labelArray80);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 10, 0);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
    }

    @Test
    public void test10781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10781");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor15);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 10, label22);
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "");
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label27, label28, label29, "hi!");
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor35.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { (byte) 0 };
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        printWriter51.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor55.visitTryCatchBlock(label56, label57, label58, "");
        aSMifierMethodVisitor55.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] { label67 };
        aSMifierMethodVisitor55.visitTableSwitchInsn(0, (int) (byte) 10, label66, labelArray68);
        java.io.PrintWriter printWriter70 = printWriter51.printf("hi!", (java.lang.Object[]) labelArray68);
        aSMifierMethodVisitor35.visitLookupSwitchInsn(label47, intArray49, labelArray68);
        aSMifierMethodVisitor0.visitTableSwitchInsn(1, 0, label34, labelArray68);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 0, "hi!", "", "");
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label81, label82, (int) (short) -1);
        org.mockito.asm.Label label86 = null;
        aSMifierMethodVisitor0.visitJumpInsn(0, label86);
        org.mockito.asm.Label label88 = null;
        aSMifierMethodVisitor0.visitLabel(label88);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertNotNull(printWriter70);
    }

    @Test
    public void test10782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10782");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println((double) (-1L));
        printWriter1.print((long) (short) -1);
        printWriter1.println((long) (short) -1);
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        java.util.Locale locale15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray20 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray22 = null;
        aSMifierMethodVisitor17.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray20, (int) (short) 1, objArray22);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor25.visitTryCatchBlock(label26, label27, label28, "");
        aSMifierMethodVisitor25.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray34 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray36 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor25, strArray34, 1.0f };
        java.io.PrintWriter printWriter37 = printWriter14.printf(locale15, "", (java.lang.Object[]) strArray34);
        java.io.PrintWriter printWriter39 = printWriter37.append((java.lang.CharSequence) "");
        printWriter37.write((int) (byte) 0);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        java.util.Locale locale44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray49 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray51 = null;
        aSMifierMethodVisitor46.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray49, (int) (short) 1, objArray51);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor54.visitTryCatchBlock(label55, label56, label57, "");
        aSMifierMethodVisitor54.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray63 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray65 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor54, strArray63, 1.0f };
        java.io.PrintWriter printWriter66 = printWriter43.printf(locale44, "", (java.lang.Object[]) strArray63);
        char[] charArray73 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter66.println(charArray73);
        printWriter37.print(charArray73);
        printWriter1.print(charArray73);
        printWriter1.println("hi!");
        java.io.PrintWriter printWriter79 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter79.print("");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test10783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10783");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitMaxs(0, (-1));
        aSMifierMethodVisitor9.visitCode();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor9);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor9.visitLabel(label20);
        aSMifierMethodVisitor9.visitVarInsn(0, (int) (byte) -1);
        aSMifierMethodVisitor9.visitVarInsn((int) (short) 0, 100);
        aSMifierMethodVisitor9.visitMaxs((int) (byte) 10, (int) (byte) 0);
        aSMifierMethodVisitor9.visitFieldInsn((int) '4', "", "", "");
    }

    @Test
    public void test10784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10784");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label27 = null;
        int[] intArray34 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        aSMifierMethodVisitor16.visitLookupSwitchInsn(label27, intArray34, labelArray48);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) '4', (int) '#', label15, labelArray48);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label55, label56, (int) (short) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label63, label64, (int) (short) 10);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor59);
    }

    @Test
    public void test10785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10785");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor27.visitTryCatchBlock(label28, label29, label30, "");
        aSMifierMethodVisitor27.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj36 = null;
        aSMifierMethodVisitor27.visitLdcInsn(obj36);
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor27.visitJumpInsn((int) (short) 1, label39);
        aSMifierMethodVisitor27.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label48, label49, label50, "");
        aSMifierMethodVisitor47.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj56 = null;
        aSMifierMethodVisitor47.visitLdcInsn(obj56);
        org.mockito.asm.Label label58 = null;
        int[] intArray65 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor66.visitTryCatchBlock(label67, label68, label69, "");
        aSMifierMethodVisitor66.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label[] labelArray79 = new org.mockito.asm.Label[] { label78 };
        aSMifierMethodVisitor66.visitTableSwitchInsn(0, (int) (byte) 10, label77, labelArray79);
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label58, intArray65, labelArray79);
        aSMifierMethodVisitor27.visitTableSwitchInsn((int) 'a', 10, label46, labelArray79);
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = aSMifierMethodVisitor27.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = aSMifierMethodVisitor27.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor27);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) -1);
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 10, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor99 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 0, "hi!", false);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray79);
        org.junit.Assert.assertNotNull(annotationVisitor85);
        org.junit.Assert.assertNotNull(annotationVisitor88);
        org.junit.Assert.assertNotNull(annotationVisitor99);
    }

    @Test
    public void test10786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10786");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj39 = null;
        aSMifierMethodVisitor30.visitLdcInsn(obj39);
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor30.visitJumpInsn((int) (short) 1, label42);
        aSMifierMethodVisitor30.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor30.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label49, labelArray50);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (short) 100, (int) (byte) 10, label29, labelArray50);
        java.util.List list53 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(annotationVisitor54);
    }

    @Test
    public void test10787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10787");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierClassVisitor15.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = annotationVisitor33.visitArray("hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = annotationVisitor35.visitArray("hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label50 = null;
        int[] intArray57 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label50, intArray57, labelArray71);
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierMethodVisitor39.visitAnnotation("hi!", true);
        annotationVisitor35.visit("hi!", (java.lang.Object) "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = annotationVisitor35.visitAnnotation("hi!", "hi!");
        annotationVisitor35.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(annotationVisitor76);
        org.junit.Assert.assertNotNull(annotationVisitor80);
    }

    @Test
    public void test10788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10788");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitInsn((int) (byte) 100);
        aSMifierMethodVisitor0.visitIntInsn(10, (int) (byte) 10);
    }

    @Test
    public void test10789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10789");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label18);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        java.util.Locale locale22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray27 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray29 = null;
        aSMifierMethodVisitor24.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray27, (int) (short) 1, objArray29);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray41 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray43 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor32, strArray41, 1.0f };
        java.io.PrintWriter printWriter44 = printWriter21.printf(locale22, "", (java.lang.Object[]) strArray41);
        boolean boolean45 = printWriter21.checkError();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) boolean45);
        aSMifierMethodVisitor0.visitMaxs((int) ' ', (int) '4');
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, 100);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(annotationVisitor58);
    }

    @Test
    public void test10790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10790");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((int) (byte) -1);
        printWriter1.write("", (int) (byte) 1, (int) (short) 0);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter14 = printWriter1.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("hi!");
        java.util.Locale locale18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray23 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray25 = null;
        aSMifierMethodVisitor20.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray23, (int) (short) 1, objArray25);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray37 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray39 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor28, strArray37, 1.0f };
        java.io.PrintWriter printWriter40 = printWriter17.printf(locale18, "", (java.lang.Object[]) strArray37);
        java.io.PrintWriter printWriter42 = printWriter40.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter44 = printWriter40.append(' ');
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter("hi!");
        java.util.Locale locale48 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray53 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray55 = null;
        aSMifierMethodVisitor50.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray53, (int) (short) 1, objArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray67 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray69 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor58, strArray67, 1.0f };
        java.io.PrintWriter printWriter70 = printWriter47.printf(locale48, "", (java.lang.Object[]) strArray67);
        java.io.PrintWriter printWriter72 = new java.io.PrintWriter((java.io.Writer) printWriter70, true);
        printWriter72.print("");
        printWriter72.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor77 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter72);
        java.lang.String[] strArray82 = new java.lang.String[] {};
        org.mockito.asm.MethodVisitor methodVisitor83 = aSMifierClassVisitor77.visitMethod(0, "", "", "hi!", strArray82);
        java.io.PrintWriter printWriter84 = printWriter44.format("", (java.lang.Object[]) strArray82);
        java.io.PrintWriter printWriter85 = printWriter14.format("hi!", (java.lang.Object[]) strArray82);
        printWriter85.print("hi!");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(methodVisitor83);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(printWriter85);
    }

    @Test
    public void test10791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10791");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label6 = null;
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        printWriter8.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label[] labelArray25 = new org.mockito.asm.Label[] { label24 };
        aSMifierMethodVisitor12.visitTableSwitchInsn(0, (int) (byte) 10, label23, labelArray25);
        java.io.PrintWriter printWriter27 = printWriter8.printf("hi!", (java.lang.Object[]) labelArray25);
        aSMifierMethodVisitor0.visitTableSwitchInsn(1, (int) (short) 10, label6, labelArray25);
        aSMifierMethodVisitor0.visitVarInsn(100, (int) ' ');
        java.util.List list32 = aSMifierMethodVisitor0.text;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label33, label34, label35, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        java.lang.Class<?> wildcardClass41 = annotationVisitor40.getClass();
        org.junit.Assert.assertNotNull(labelArray25);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test10792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10792");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor7.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor7.visitAnnotationDefault();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        java.io.PrintWriter printWriter50 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray48);
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor7.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray48, 1, (java.lang.Object[]) strArray52);
        java.io.PrintWriter printWriter54 = printWriter1.format("hi!", (java.lang.Object[]) strArray52);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor55.visitEnd();
        aSMifierClassVisitor55.visitInnerClass("", "hi!", "hi!", (int) (byte) 1);
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter("hi!");
        printWriter67.print(false);
        printWriter67.println(false);
        java.io.PrintWriter printWriter73 = printWriter67.append('#');
        java.io.PrintWriter printWriter75 = new java.io.PrintWriter((java.io.Writer) printWriter73, false);
        org.mockito.asm.FieldVisitor fieldVisitor76 = aSMifierClassVisitor55.visitField((int) (short) -1, "", "hi!", "", (java.lang.Object) false);
        aSMifierClassVisitor55.visitSource("hi!", "hi!");
        java.io.PrintWriter printWriter85 = new java.io.PrintWriter("hi!");
        printWriter85.print(false);
        printWriter85.println(false);
        boolean boolean90 = printWriter85.checkError();
        printWriter85.println((double) 0);
        boolean boolean93 = printWriter85.checkError();
        printWriter85.print((double) (short) 0);
        org.mockito.asm.FieldVisitor fieldVisitor96 = aSMifierClassVisitor55.visitField(1, "hi!", "", "", (java.lang.Object) printWriter85);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(fieldVisitor76);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(fieldVisitor96);
    }

    @Test
    public void test10793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10793");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMaxs((int) (short) -1, (int) (short) 100);
        java.util.List list17 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, 1);
        java.util.List list21 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitTypeInsn(1, "hi!");
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '#', label26);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label31, label32, (-1));
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list21);
    }

    @Test
    public void test10794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10794");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor14.visitLabel(label27);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor14.visitAnnotation("", true);
        aSMifierMethodVisitor14.visitTypeInsn((int) '4', "");
        aSMifierMethodVisitor14.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor31);
    }

    @Test
    public void test10795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10795");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter6);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor8.visitSource("", "");
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test10796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10796");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter1.print("");
        org.junit.Assert.assertNotNull(printWriter9);
    }

    @Test
    public void test10797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10797");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, 0);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 10, "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 1, label76);
        aSMifierMethodVisitor0.visitIntInsn((int) 'a', (int) (byte) -1);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test10798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10798");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor0.visitMaxs(100, (int) '4');
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label18, label19, (int) (byte) 1);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor27.visitTryCatchBlock(label28, label29, label30, "");
        aSMifierMethodVisitor27.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label[] labelArray40 = new org.mockito.asm.Label[] { label39 };
        aSMifierMethodVisitor27.visitTableSwitchInsn(0, (int) (byte) 10, label38, labelArray40);
        java.io.PrintWriter printWriter42 = printWriter23.printf("hi!", (java.lang.Object[]) labelArray40);
        java.io.PrintWriter printWriter44 = printWriter23.append((java.lang.CharSequence) "");
        printWriter44.close();
        printWriter44.println("hi!");
        printWriter44.print('#');
        aSMifierMethodVisitor0.print(printWriter44);
        java.io.PrintWriter printWriter52 = printWriter44.append((java.lang.CharSequence) "");
        printWriter44.print((double) (byte) 1);
        org.junit.Assert.assertNotNull(labelArray40);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(printWriter52);
    }

    @Test
    public void test10799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10799");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        java.util.List list26 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 0);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs(1, 0);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 0, "hi!", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(annotationVisitor41);
    }

    @Test
    public void test10800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10800");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter16 = printWriter12.append((java.lang.CharSequence) "");
        printWriter8.println((java.lang.Object) printWriter16);
        printWriter8.print((int) (short) -1);
        printWriter8.print((double) 100.0f);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter16);
    }

    @Test
    public void test10801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10801");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitIincInsn((int) '#', (int) (byte) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        aSMifierMethodVisitor4.visitTryCatchBlock(label5, label6, label7, "");
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor4.visitLocalVariable("hi!", "hi!", "hi!", label13, label14, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor4.visitAnnotation("", true);
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor21.visitTryCatchBlock(label22, label23, label24, "");
        aSMifierMethodVisitor21.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj30 = null;
        aSMifierMethodVisitor21.visitLdcInsn(obj30);
        org.mockito.asm.Label label32 = null;
        int[] intArray39 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label[] labelArray53 = new org.mockito.asm.Label[] { label52 };
        aSMifierMethodVisitor40.visitTableSwitchInsn(0, (int) (byte) 10, label51, labelArray53);
        aSMifierMethodVisitor21.visitLookupSwitchInsn(label32, intArray39, labelArray53);
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label20, intArray39, labelArray56);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor4.visitParameterAnnotation((int) (byte) 10, "hi!", true);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) true);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", true);
        aSMifierMethodVisitor0.visitIntInsn(0, 100);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((-1), "hi!", "", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray53);
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(annotationVisitor67);
    }

    @Test
    public void test10802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10802");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        org.mockito.asm.Label label29 = null;
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "");
        printWriter31.print((double) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor39.visitJumpInsn((int) (short) 1, label51);
        aSMifierMethodVisitor39.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor39.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor39.visitAnnotationDefault();
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter("hi!");
        printWriter63.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor67.visitTryCatchBlock(label68, label69, label70, "");
        aSMifierMethodVisitor67.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] { label79 };
        aSMifierMethodVisitor67.visitTableSwitchInsn(0, (int) (byte) 10, label78, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter63.printf("hi!", (java.lang.Object[]) labelArray80);
        java.lang.String[] strArray84 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor39.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray80, 1, (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter86 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray80);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (short) 100, (int) (short) 1, label29, labelArray80);
        org.mockito.asm.Label label88 = null;
        org.mockito.asm.Label label89 = null;
        org.mockito.asm.Label label90 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label88, label89, label90, "");
        aSMifierMethodVisitor0.visitTypeInsn(0, "");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((-1), (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter86);
    }

    @Test
    public void test10803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10803");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 10);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (byte) 10);
        aSMifierMethodVisitor0.visitMaxs((int) 'a', 1);
        aSMifierMethodVisitor0.visitIincInsn((int) ' ', 1);
    }

    @Test
    public void test10804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10804");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) -1, (int) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) -1, "", false);
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter("hi!");
        java.util.Locale locale21 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray26 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray28 = null;
        aSMifierMethodVisitor23.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray26, (int) (short) 1, objArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray40 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray42 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor31, strArray40, 1.0f };
        java.io.PrintWriter printWriter43 = printWriter20.printf(locale21, "", (java.lang.Object[]) strArray40);
        char[] charArray50 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter43.println(charArray50);
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter((java.io.Writer) printWriter43, true);
        printWriter43.print((float) 10L);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter43);
        printWriter43.println('4');
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter43);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test10805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10805");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label19, labelArray20);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "");
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        aSMifierMethodVisitor0.visitIntInsn((int) 'a', (int) (short) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor0.visitParameterAnnotation(1, "", true);
        org.junit.Assert.assertNotNull(labelArray20);
        org.junit.Assert.assertNotNull(annotationVisitor33);
    }

    @Test
    public void test10806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10806");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter5.close();
        java.util.Locale locale7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj18 = null;
        aSMifierMethodVisitor9.visitLdcInsn(obj18);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor9.visitJumpInsn((int) (short) 1, label21);
        aSMifierMethodVisitor9.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor9.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor9.visitAnnotationDefault();
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] { label49 };
        aSMifierMethodVisitor37.visitTableSwitchInsn(0, (int) (byte) 10, label48, labelArray50);
        java.io.PrintWriter printWriter52 = printWriter33.printf("hi!", (java.lang.Object[]) labelArray50);
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor9.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray50, 1, (java.lang.Object[]) strArray54);
        java.io.PrintWriter printWriter56 = printWriter5.format(locale7, "", (java.lang.Object[]) strArray54);
        printWriter56.println(true);
        printWriter56.print('4');
        printWriter56.print((int) (byte) 10);
        printWriter56.print("hi!");
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter56);
        printWriter65.flush();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(printWriter56);
    }

    @Test
    public void test10807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10807");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label17, label18, 10);
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label24, label25, (int) (byte) 1);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 100, 1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (-1));
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "", "hi!", "hi!");
        java.io.PrintWriter printWriter39 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.print(printWriter39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor13);
    }

    @Test
    public void test10808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10808");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        java.util.List list26 = aSMifierMethodVisitor0.getText();
        java.util.List list27 = aSMifierMethodVisitor0.getText();
        java.lang.Object obj28 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj28);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 1, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitParameterAnnotation((int) ' ', "", true);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test10809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10809");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn((int) '#', (int) (byte) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        printWriter27.print(false);
        printWriter27.println(false);
        printWriter27.print(0L);
        printWriter27.println("hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj45 = null;
        aSMifierMethodVisitor36.visitLdcInsn(obj45);
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor36.visitJumpInsn((int) (short) 1, label48);
        aSMifierMethodVisitor36.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor36.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor36.visitAnnotationDefault();
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter("hi!");
        printWriter60.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] { label76 };
        aSMifierMethodVisitor64.visitTableSwitchInsn(0, (int) (byte) 10, label75, labelArray77);
        java.io.PrintWriter printWriter79 = printWriter60.printf("hi!", (java.lang.Object[]) labelArray77);
        java.lang.String[] strArray81 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor36.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray77, 1, (java.lang.Object[]) strArray81);
        aSMifierMethodVisitor36.visitMaxs((int) (byte) 0, (int) (byte) 100);
        printWriter27.print((java.lang.Object) aSMifierMethodVisitor36);
        aSMifierMethodVisitor0.print(printWriter27);
        org.mockito.asm.Label label88 = null;
        aSMifierMethodVisitor0.visitLabel(label88);
        org.mockito.asm.Label label91 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 10, label91);
        org.mockito.asm.Label label94 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 1, label94);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertNotNull(strArray81);
    }

    @Test
    public void test10810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10810");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list13 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray17 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray19 = null;
        aSMifierMethodVisitor14.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray17, (int) (short) 1, objArray19);
        aSMifierMethodVisitor14.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor14.visitLdcInsn((java.lang.Object) ' ');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitMaxs((int) '#', (int) (short) 10);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test10811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10811");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println((int) (short) -1);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor4.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor4.visitEnd();
        aSMifierClassVisitor4.visitOuterClass("", "", "hi!");
        aSMifierClassVisitor4.visitSource("hi!", "");
        aSMifierClassVisitor4.visitEnd();
    }

    @Test
    public void test10812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10812");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label27, label28, (int) (byte) 10);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list32 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        aSMifierMethodVisitor0.visitIincInsn(10, (int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn((int) (short) -1, "", "", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list32);
    }

    @Test
    public void test10813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10813");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter7.write("hi!");
        printWriter7.print(false);
        org.junit.Assert.assertNotNull(printWriter3);
    }

    @Test
    public void test10814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10814");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label22);
        aSMifierMethodVisitor0.visitVarInsn(100, (-1));
        aSMifierMethodVisitor0.visitFieldInsn(100, "", "", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn(0, "", "hi!", "hi!");
        java.util.List list37 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((-1), "hi!", "hi!", "");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test10815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10815");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        java.util.Locale locale31 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray36 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray38 = null;
        aSMifierMethodVisitor33.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray36, (int) (short) 1, objArray38);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray50 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray52 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor41, strArray50, 1.0f };
        java.io.PrintWriter printWriter53 = printWriter30.printf(locale31, "", (java.lang.Object[]) strArray50);
        char[] charArray60 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter53.println(charArray60);
        printWriter28.print(charArray60);
        boolean boolean63 = printWriter28.checkError();
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter("hi!");
        printWriter65.write((-1));
        printWriter65.flush();
        java.util.Locale locale69 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor71 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray74 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray76 = null;
        aSMifierMethodVisitor71.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray74, (int) (short) 1, objArray76);
        java.io.PrintWriter printWriter78 = printWriter65.printf(locale69, "", (java.lang.Object[]) strArray74);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor79 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter65);
        aSMifierClassVisitor79.visitEnd();
        aSMifierClassVisitor79.visitSource("", "hi!");
        printWriter28.print((java.lang.Object) "");
        printWriter28.println((double) 0);
        java.io.PrintWriter printWriter88 = printWriter28.append((java.lang.CharSequence) "hi!");
        printWriter88.flush();
        printWriter88.print('a');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(printWriter88);
    }

    @Test
    public void test10816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10816");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] { label40 };
        aSMifierMethodVisitor28.visitTableSwitchInsn(0, (int) (byte) 10, label39, labelArray41);
        java.io.PrintWriter printWriter43 = printWriter24.printf("hi!", (java.lang.Object[]) labelArray41);
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray41, 1, (java.lang.Object[]) strArray45);
        aSMifierMethodVisitor0.visitIntInsn((int) '#', 10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 1);
        java.util.List list53 = aSMifierMethodVisitor0.text;
        org.mockito.asm.Attribute attribute54 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(list53);
    }

    @Test
    public void test10817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10817");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs(1, 10);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter("hi!");
        printWriter65.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor69.visitTryCatchBlock(label70, label71, label72, "");
        aSMifierMethodVisitor69.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label[] labelArray82 = new org.mockito.asm.Label[] { label81 };
        aSMifierMethodVisitor69.visitTableSwitchInsn(0, (int) (byte) 10, label80, labelArray82);
        java.io.PrintWriter printWriter84 = printWriter65.printf("hi!", (java.lang.Object[]) labelArray82);
        printWriter65.print((float) 1L);
        aSMifierMethodVisitor0.print(printWriter65);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.Writer) printWriter65, true);
        printWriter65.flush();
        java.io.PrintWriter printWriter91 = new java.io.PrintWriter((java.io.Writer) printWriter65);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray82);
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test10818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10818");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        aSMifierClassVisitor15.visitInnerClass("hi!", "hi!", "", (int) (byte) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter43 = printWriter39.append((java.lang.CharSequence) "");
        printWriter43.close();
        java.util.Locale locale45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label48, label49, label50, "");
        aSMifierMethodVisitor47.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj56 = null;
        aSMifierMethodVisitor47.visitLdcInsn(obj56);
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor47.visitJumpInsn((int) (short) 1, label59);
        aSMifierMethodVisitor47.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor47.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor47.visitAnnotationDefault();
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter("hi!");
        printWriter71.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor75 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor75.visitTryCatchBlock(label76, label77, label78, "");
        aSMifierMethodVisitor75.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label86 = null;
        org.mockito.asm.Label label87 = null;
        org.mockito.asm.Label[] labelArray88 = new org.mockito.asm.Label[] { label87 };
        aSMifierMethodVisitor75.visitTableSwitchInsn(0, (int) (byte) 10, label86, labelArray88);
        java.io.PrintWriter printWriter90 = printWriter71.printf("hi!", (java.lang.Object[]) labelArray88);
        java.lang.String[] strArray92 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor47.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray88, 1, (java.lang.Object[]) strArray92);
        java.io.PrintWriter printWriter94 = printWriter43.format(locale45, "", (java.lang.Object[]) strArray92);
        aSMifierClassVisitor15.visit((int) (short) 1, (int) (byte) 100, "", "hi!", "", strArray92);
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor99 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(labelArray88);
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(printWriter94);
        org.junit.Assert.assertNotNull(annotationVisitor99);
    }

    @Test
    public void test10819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10819");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        printWriter7.print(0.0d);
        java.util.Locale locale10 = null;
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter15 = printWriter13.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor16.visitJumpInsn((int) (short) 1, label28);
        aSMifierMethodVisitor16.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor16.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor16.visitAnnotationDefault();
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] { label56 };
        aSMifierMethodVisitor44.visitTableSwitchInsn(0, (int) (byte) 10, label55, labelArray57);
        java.io.PrintWriter printWriter59 = printWriter40.printf("hi!", (java.lang.Object[]) labelArray57);
        java.lang.String[] strArray61 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor16.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray57, 1, (java.lang.Object[]) strArray61);
        printWriter15.println((java.lang.Object) strArray61);
        java.io.PrintWriter printWriter64 = printWriter7.printf(locale10, "hi!", (java.lang.Object[]) strArray61);
        java.io.PrintWriter printWriter66 = printWriter7.append('#');
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter((java.io.Writer) printWriter66);
        printWriter67.print("hi!");
        printWriter67.print((int) (short) 0);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(labelArray57);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertNotNull(printWriter66);
    }

    @Test
    public void test10820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10820");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor15.visitAnnotation("", true);
        java.util.List list38 = aSMifierClassVisitor15.text;
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("hi!");
        printWriter44.write((-1));
        printWriter44.flush();
        java.util.Locale locale48 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray53 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray55 = null;
        aSMifierMethodVisitor50.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray53, (int) (short) 1, objArray55);
        java.io.PrintWriter printWriter57 = printWriter44.printf(locale48, "", (java.lang.Object[]) strArray53);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor58 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        aSMifierClassVisitor58.visitEnd();
        aSMifierClassVisitor58.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor67.visitTryCatchBlock(label68, label69, label70, "");
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        aSMifierMethodVisitor67.visitLocalVariable("hi!", "hi!", "hi!", label76, label77, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = aSMifierMethodVisitor67.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor83 = aSMifierMethodVisitor67.visitAnnotationDefault();
        annotationVisitor83.visitEnum("", "hi!", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor88 = aSMifierClassVisitor58.visitField((int) '#', "", "", "", (java.lang.Object) "hi!");
        aSMifierClassVisitor58.visitSource("", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor92 = aSMifierClassVisitor15.visitField((int) (byte) 10, "hi!", "", "", (java.lang.Object) aSMifierClassVisitor58);
        org.mockito.asm.AnnotationVisitor annotationVisitor95 = aSMifierClassVisitor58.visitAnnotation("hi!", true);
        aSMifierClassVisitor58.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor99 = aSMifierClassVisitor58.visitAnnotation("hi!", true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(annotationVisitor82);
        org.junit.Assert.assertNotNull(annotationVisitor83);
        org.junit.Assert.assertNotNull(fieldVisitor88);
        org.junit.Assert.assertNotNull(fieldVisitor92);
        org.junit.Assert.assertNotNull(annotationVisitor95);
        org.junit.Assert.assertNotNull(annotationVisitor99);
    }

    @Test
    public void test10821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10821");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list14 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list16 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = annotationVisitor23.visitAnnotation("hi!", "");
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(annotationVisitor26);
    }

    @Test
    public void test10822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10822");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLabel(label17);
        aSMifierMethodVisitor0.visitInsn(100);
        java.util.List list21 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitLineNumber(1, label23);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "", true);
        aSMifierMethodVisitor0.visitInsn((int) (short) 100);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 1, "", "", "hi!");
        aSMifierMethodVisitor0.visitMaxs((int) (short) 100, (int) (byte) 10);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(annotationVisitor28);
    }

    @Test
    public void test10823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10823");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter1.print(false);
        java.lang.CharSequence charSequence12 = null;
        java.io.PrintWriter printWriter13 = printWriter1.append(charSequence12);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor14 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.write("");
        boolean boolean17 = printWriter1.checkError();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test10824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10824");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.print((int) ' ');
        java.lang.Object obj29 = null;
        printWriter24.print(obj29);
        printWriter24.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor33 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        aSMifierClassVisitor33.visitSource("", "hi!");
        aSMifierClassVisitor33.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierClassVisitor33.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierClassVisitor33.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = annotationVisitor45.visitAnnotation("", "");
        annotationVisitor45.visitEnum("hi!", "", "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(annotationVisitor48);
    }

    @Test
    public void test10825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10825");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter3);
        java.util.List list5 = aSMifierClassVisitor4.text;
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(list5);
    }

    @Test
    public void test10826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10826");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("hi!");
        printWriter26.println('a');
        printWriter26.println(false);
        printWriter26.close();
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter37 = printWriter35.append('a');
        printWriter35.println(100.0f);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter43 = printWriter41.append('a');
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter("hi!");
        printWriter45.println((-1.0d));
        printWriter41.print((java.lang.Object) (-1.0d));
        java.io.PrintWriter printWriter50 = printWriter41.append('a');
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        java.util.Locale locale53 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray58 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray60 = null;
        aSMifierMethodVisitor55.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray58, (int) (short) 1, objArray60);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor63.visitTryCatchBlock(label64, label65, label66, "");
        aSMifierMethodVisitor63.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray72 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray74 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor63, strArray72, 1.0f };
        java.io.PrintWriter printWriter75 = printWriter52.printf(locale53, "", (java.lang.Object[]) strArray72);
        char[] charArray82 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter75.println(charArray82);
        printWriter75.write(1);
        printWriter50.print((java.lang.Object) 1);
        char[] charArray87 = new char[] {};
        printWriter50.print(charArray87);
        printWriter35.println(charArray87);
        printWriter26.println(charArray87);
        printWriter26.print(false);
        printWriter26.write("", 10, (-1));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[]");
    }

    @Test
    public void test10827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10827");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter5.println((-1));
        printWriter5.println();
        printWriter5.write((int) '#');
        java.io.PrintWriter printWriter12 = printWriter5.append('4');
        printWriter12.write("hi!", 0, 0);
        printWriter12.print((long) (short) 0);
        printWriter12.print((double) 100L);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter12);
    }

    @Test
    public void test10828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10828");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "hi!", "hi!", (int) (byte) 1);
        aSMifierClassVisitor28.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor28.visitAnnotation("", true);
        org.mockito.asm.FieldVisitor fieldVisitor43 = aSMifierClassVisitor28.visitField((int) (byte) 10, "", "", "", (java.lang.Object) 10.0d);
        fieldVisitor43.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = fieldVisitor43.visitAnnotation("", false);
        java.lang.Class<?> wildcardClass48 = fieldVisitor43.getClass();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test10829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10829");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = printWriter1.append((java.lang.CharSequence) "");
        printWriter22.close();
        java.io.PrintWriter printWriter25 = printWriter22.append(' ');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj35 = null;
        aSMifierMethodVisitor26.visitLdcInsn(obj35);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor26.visitAnnotationDefault();
        printWriter25.println((java.lang.Object) aSMifierMethodVisitor26);
        printWriter25.println();
        printWriter25.println(' ');
        boolean boolean42 = printWriter25.checkError();
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter((java.io.Writer) printWriter25);
        printWriter43.write("hi!");
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test10830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10830");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("hi!");
        printWriter2.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter6 = printWriter2.append((java.lang.CharSequence) "");
        printWriter2.print((int) (byte) -1);
        printWriter2.write("", (int) (byte) 1, (int) (short) 0);
        printWriter2.print((double) (byte) -1);
        aSMifierMethodVisitor0.print(printWriter2);
        printWriter2.write((int) (byte) 100);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter("hi!");
        java.util.Locale locale20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray27 = null;
        aSMifierMethodVisitor22.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray25, (int) (short) 1, objArray27);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor30, strArray39, 1.0f };
        java.io.PrintWriter printWriter42 = printWriter19.printf(locale20, "", (java.lang.Object[]) strArray39);
        char[] charArray49 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter42.println(charArray49);
        printWriter2.print(charArray49);
        printWriter2.println("");
        java.io.PrintWriter printWriter55 = printWriter2.append(' ');
        printWriter2.println((int) (byte) 10);
        printWriter2.print(0L);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter55);
    }

    @Test
    public void test10831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10831");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        printWriter34.println();
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor38.visitTryCatchBlock(label39, label40, label41, "");
        aSMifierMethodVisitor38.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj47 = null;
        aSMifierMethodVisitor38.visitLdcInsn(obj47);
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor38.visitJumpInsn((int) (short) 1, label50);
        java.util.List list52 = aSMifierMethodVisitor38.getText();
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor38.visitLabel(label53);
        aSMifierMethodVisitor38.visitIincInsn(0, (int) (short) 1);
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor38.visitLabel(label58);
        printWriter34.println((java.lang.Object) aSMifierMethodVisitor38);
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor38.visitLocalVariable("", "", "", label64, label65, (int) (byte) 0);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(list52);
    }

    @Test
    public void test10832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10832");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter5.close();
        java.util.Locale locale7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj18 = null;
        aSMifierMethodVisitor9.visitLdcInsn(obj18);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor9.visitJumpInsn((int) (short) 1, label21);
        aSMifierMethodVisitor9.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor9.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor9.visitAnnotationDefault();
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] { label49 };
        aSMifierMethodVisitor37.visitTableSwitchInsn(0, (int) (byte) 10, label48, labelArray50);
        java.io.PrintWriter printWriter52 = printWriter33.printf("hi!", (java.lang.Object[]) labelArray50);
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor9.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray50, 1, (java.lang.Object[]) strArray54);
        java.io.PrintWriter printWriter56 = printWriter5.format(locale7, "", (java.lang.Object[]) strArray54);
        printWriter56.println(true);
        printWriter56.println(true);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(printWriter56);
    }

    @Test
    public void test10833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10833");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitTypeInsn((int) '#', "");
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLabel(label26);
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label28, label29, label30, "");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitInsn((int) (short) 0);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label37);
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label42, label43, (-1));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test10834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10834");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj35 = null;
        aSMifierMethodVisitor26.visitLdcInsn(obj35);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor26.visitJumpInsn((int) (short) 1, label38);
        aSMifierMethodVisitor26.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor46.visitTryCatchBlock(label47, label48, label49, "");
        aSMifierMethodVisitor46.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj55 = null;
        aSMifierMethodVisitor46.visitLdcInsn(obj55);
        org.mockito.asm.Label label57 = null;
        int[] intArray64 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        aSMifierMethodVisitor65.visitTryCatchBlock(label66, label67, label68, "");
        aSMifierMethodVisitor65.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label[] labelArray78 = new org.mockito.asm.Label[] { label77 };
        aSMifierMethodVisitor65.visitTableSwitchInsn(0, (int) (byte) 10, label76, labelArray78);
        aSMifierMethodVisitor46.visitLookupSwitchInsn(label57, intArray64, labelArray78);
        aSMifierMethodVisitor26.visitTableSwitchInsn((int) 'a', 10, label45, labelArray78);
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = aSMifierMethodVisitor26.visitAnnotation("", true);
        org.mockito.asm.Label label86 = null;
        aSMifierMethodVisitor26.visitJumpInsn((int) (byte) 0, label86);
        org.mockito.asm.Label label88 = null;
        aSMifierMethodVisitor26.visitLabel(label88);
        aSMifierMethodVisitor26.visitMaxs((int) (byte) 0, (int) (short) 100);
        printWriter24.println((java.lang.Object) aSMifierMethodVisitor26);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor94 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        aSMifierClassVisitor94.visitEnd();
        aSMifierClassVisitor94.visitSource("", "");
        aSMifierClassVisitor94.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray78);
        org.junit.Assert.assertNotNull(annotationVisitor84);
    }

    @Test
    public void test10835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10835");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        java.util.List list33 = aSMifierClassVisitor28.getText();
        org.mockito.asm.FieldVisitor fieldVisitor39 = aSMifierClassVisitor28.visitField((int) (short) -1, "", "hi!", "", (java.lang.Object) 10.0f);
        aSMifierClassVisitor28.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor28.visitSource("hi!", "");
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        java.util.Locale locale53 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray58 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray60 = null;
        aSMifierMethodVisitor55.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray58, (int) (short) 1, objArray60);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor63.visitTryCatchBlock(label64, label65, label66, "");
        aSMifierMethodVisitor63.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray72 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray74 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor63, strArray72, 1.0f };
        java.io.PrintWriter printWriter75 = printWriter52.printf(locale53, "", (java.lang.Object[]) strArray72);
        boolean boolean76 = printWriter75.checkError();
        printWriter75.println(false);
        java.io.PrintWriter printWriter80 = printWriter75.append('4');
        java.io.PrintWriter printWriter81 = new java.io.PrintWriter((java.io.Writer) printWriter75);
        org.mockito.asm.FieldVisitor fieldVisitor82 = aSMifierClassVisitor28.visitField((int) (short) 1, "hi!", "hi!", "hi!", (java.lang.Object) printWriter81);
        org.mockito.asm.Attribute attribute83 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor82.visitAttribute(attribute83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertNotNull(fieldVisitor82);
    }

    @Test
    public void test10836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10836");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj18 = null;
        aSMifierMethodVisitor9.visitLdcInsn(obj18);
        aSMifierMethodVisitor9.visitInsn((int) ' ');
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor25.visitTryCatchBlock(label26, label27, label28, "");
        aSMifierMethodVisitor25.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj34 = null;
        aSMifierMethodVisitor25.visitLdcInsn(obj34);
        org.mockito.asm.Label label36 = null;
        int[] intArray43 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] { label56 };
        aSMifierMethodVisitor44.visitTableSwitchInsn(0, (int) (byte) 10, label55, labelArray57);
        aSMifierMethodVisitor25.visitLookupSwitchInsn(label36, intArray43, labelArray57);
        aSMifierMethodVisitor9.visitTableSwitchInsn((int) '4', (int) '#', label24, labelArray57);
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor9.visitLocalVariable("hi!", "hi!", "", label64, label65, (int) (short) 0);
        aSMifierMethodVisitor9.visitEnd();
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor9.visitLocalVariable("", "hi!", "", label72, label73, (int) ' ');
        org.mockito.asm.FieldVisitor fieldVisitor76 = aSMifierClassVisitor1.visitField(10, "", "hi!", "hi!", (java.lang.Object) "");
        aSMifierClassVisitor1.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = aSMifierClassVisitor1.visitAnnotation("", true);
        aSMifierClassVisitor1.visitInnerClass("hi!", "", "", (int) ' ');
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray57);
        org.junit.Assert.assertNotNull(fieldVisitor76);
        org.junit.Assert.assertNotNull(annotationVisitor82);
    }

    @Test
    public void test10837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10837");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor27.visitTryCatchBlock(label28, label29, label30, "");
        aSMifierMethodVisitor27.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj36 = null;
        aSMifierMethodVisitor27.visitLdcInsn(obj36);
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor27.visitJumpInsn((int) (short) 1, label39);
        aSMifierMethodVisitor27.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label48, label49, label50, "");
        aSMifierMethodVisitor47.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj56 = null;
        aSMifierMethodVisitor47.visitLdcInsn(obj56);
        org.mockito.asm.Label label58 = null;
        int[] intArray65 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor66.visitTryCatchBlock(label67, label68, label69, "");
        aSMifierMethodVisitor66.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label[] labelArray79 = new org.mockito.asm.Label[] { label78 };
        aSMifierMethodVisitor66.visitTableSwitchInsn(0, (int) (byte) 10, label77, labelArray79);
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label58, intArray65, labelArray79);
        aSMifierMethodVisitor27.visitTableSwitchInsn((int) 'a', 10, label46, labelArray79);
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = aSMifierMethodVisitor27.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = aSMifierMethodVisitor27.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor27);
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = aSMifierMethodVisitor27.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor93 = aSMifierMethodVisitor27.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor27.visitMethodInsn((int) (short) -1, "", "", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray79);
        org.junit.Assert.assertNotNull(annotationVisitor85);
        org.junit.Assert.assertNotNull(annotationVisitor88);
        org.junit.Assert.assertNotNull(annotationVisitor92);
        org.junit.Assert.assertNotNull(annotationVisitor93);
    }

    @Test
    public void test10838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10838");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("hi!");
        printWriter26.println(false);
        printWriter26.println("hi!");
        printWriter26.print(false);
        java.io.PrintWriter printWriter36 = printWriter26.append('#');
        boolean boolean37 = printWriter26.checkError();
        printWriter26.print((int) '#');
        java.io.PrintWriter printWriter41 = printWriter26.append('a');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(printWriter41);
    }

    @Test
    public void test10839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10839");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        java.util.List list6 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor7.visitLocalVariable("hi!", "hi!", "hi!", label16, label17, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor7.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) annotationVisitor20);
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitLineNumber(0, label23);
        aSMifierMethodVisitor0.visitMethodInsn(0, "", "hi!", "hi!");
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test10840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10840");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitInsn((int) (byte) 100);
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor0.visitLabel(label13);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor15.visitEnum("hi!", "hi!", "hi!");
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label[] labelArray39 = new org.mockito.asm.Label[] { label38 };
        aSMifierMethodVisitor26.visitTableSwitchInsn(0, (int) (byte) 10, label37, labelArray39);
        java.io.PrintWriter printWriter41 = printWriter22.printf("hi!", (java.lang.Object[]) labelArray39);
        java.io.PrintWriter printWriter43 = printWriter22.append((java.lang.CharSequence) "");
        printWriter43.close();
        java.io.PrintWriter printWriter46 = printWriter43.append(' ');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label48, label49, label50, "");
        aSMifierMethodVisitor47.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj56 = null;
        aSMifierMethodVisitor47.visitLdcInsn(obj56);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor47.visitAnnotationDefault();
        printWriter46.println((java.lang.Object) aSMifierMethodVisitor47);
        annotationVisitor15.visit("hi!", (java.lang.Object) printWriter46);
        printWriter46.print('a');
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(labelArray39);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(annotationVisitor58);
    }

    @Test
    public void test10841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10841");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        char[] charArray56 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter49.println(charArray56);
        printWriter24.print(charArray56);
        printWriter24.print(true);
        java.io.PrintWriter printWriter62 = printWriter24.append((java.lang.CharSequence) "");
        java.util.Locale locale63 = null;
        org.mockito.asm.Attribute[] attributeArray65 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        java.io.PrintWriter printWriter66 = printWriter62.format(locale63, "", (java.lang.Object[]) attributeArray65);
        printWriter62.print(false);
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter((java.io.Writer) printWriter62, true);
        printWriter70.print(true);
        printWriter70.write("");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(attributeArray65);
        org.junit.Assert.assertNotNull(printWriter66);
    }

    @Test
    public void test10842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10842");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        aSMifierMethodVisitor0.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label20, label21, label22, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        printWriter30.print(false);
        java.io.PrintWriter printWriter34 = printWriter30.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter34, true);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        printWriter37.write("");
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        printWriter41.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter45 = printWriter41.append((java.lang.CharSequence) "");
        printWriter37.println((java.lang.Object) printWriter45);
        printWriter37.print((int) '#');
        printWriter37.println();
        printWriter37.println((float) (byte) -1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (byte) -1);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label54, label55, label56, "hi!");
        aSMifierMethodVisitor0.visitMaxs((-1), 100);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 100, (int) '#');
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(printWriter45);
    }

    @Test
    public void test10843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10843");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        printWriter24.write("hi!");
        boolean boolean35 = printWriter24.checkError();
        boolean boolean36 = printWriter24.checkError();
        printWriter24.close();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test10844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10844");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitInsn((int) (byte) 100);
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor0.visitLabel(label13);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 10, "");
        org.mockito.asm.Label label20 = null;
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter26 = printWriter22.append((java.lang.CharSequence) "");
        printWriter22.print((double) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj39 = null;
        aSMifierMethodVisitor30.visitLdcInsn(obj39);
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor30.visitJumpInsn((int) (short) 1, label42);
        aSMifierMethodVisitor30.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor30.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor30.visitAnnotationDefault();
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter("hi!");
        printWriter54.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        java.io.PrintWriter printWriter73 = printWriter54.printf("hi!", (java.lang.Object[]) labelArray71);
        java.lang.String[] strArray75 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor30.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray71, 1, (java.lang.Object[]) strArray75);
        java.io.PrintWriter printWriter77 = printWriter22.printf("hi!", (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) ' ', 0, label20, labelArray71);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 0, "hi!");
        org.mockito.asm.Label label83 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label83);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(printWriter77);
    }

    @Test
    public void test10845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10845");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray5 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter6 = printWriter1.format("", (java.lang.Object[]) strArray5);
        java.util.Locale locale7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj18 = null;
        aSMifierMethodVisitor9.visitLdcInsn(obj18);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor9.visitJumpInsn((int) (short) 1, label21);
        aSMifierMethodVisitor9.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor9.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor9.visitAnnotationDefault();
        aSMifierMethodVisitor9.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor9.visitLabel(label33);
        java.util.List list35 = aSMifierMethodVisitor9.getText();
        aSMifierMethodVisitor9.visitMultiANewArrayInsn("", (int) (short) 0);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        printWriter42.write((-1));
        printWriter42.flush();
        java.util.Locale locale46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray51 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray53 = null;
        aSMifierMethodVisitor48.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray51, (int) (short) 1, objArray53);
        java.io.PrintWriter printWriter55 = printWriter42.printf(locale46, "", (java.lang.Object[]) strArray51);
        java.lang.Object[] objArray57 = null;
        aSMifierMethodVisitor9.visitFrame((int) (short) 1, 10, (java.lang.Object[]) strArray51, (int) (short) -1, objArray57);
        java.io.PrintWriter printWriter59 = printWriter1.printf(locale7, "", objArray57);
        printWriter59.println('#');
        printWriter59.print((double) (-1));
        printWriter59.print((-1.0d));
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(printWriter59);
    }

    @Test
    public void test10846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10846");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] { label12 };
        aSMifierMethodVisitor0.visitTableSwitchInsn(0, (int) (byte) 10, label11, labelArray13);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        java.lang.Object[] objArray20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        aSMifierMethodVisitor31.visitMaxs(0, (-1));
        aSMifierMethodVisitor31.visitCode();
        aSMifierMethodVisitor22.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor31);
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor31.visitLineNumber((int) (short) 1, label43);
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("hi!");
        printWriter50.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter54 = printWriter50.append((java.lang.CharSequence) "");
        printWriter50.print((int) (byte) -1);
        printWriter50.write("", (int) (byte) 1, (int) (short) 0);
        printWriter50.print((double) (byte) -1);
        aSMifierMethodVisitor48.print(printWriter50);
        java.io.PrintWriter printWriter66 = new java.io.PrintWriter("hi!");
        printWriter66.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor70 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor70.visitTryCatchBlock(label71, label72, label73, "");
        aSMifierMethodVisitor70.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        org.mockito.asm.Label[] labelArray83 = new org.mockito.asm.Label[] { label82 };
        aSMifierMethodVisitor70.visitTableSwitchInsn(0, (int) (byte) 10, label81, labelArray83);
        java.io.PrintWriter printWriter85 = printWriter66.printf("hi!", (java.lang.Object[]) labelArray83);
        java.io.PrintWriter printWriter86 = printWriter50.printf("", (java.lang.Object[]) labelArray83);
        aSMifierMethodVisitor31.visitTableSwitchInsn((int) '4', (int) (short) 10, label47, labelArray83);
        aSMifierMethodVisitor0.visitFrame((int) (byte) 10, 100, objArray20, 10, (java.lang.Object[]) labelArray83);
        aSMifierMethodVisitor0.visitMaxs((int) '#', (int) (byte) 0);
        aSMifierMethodVisitor0.visitFieldInsn((int) '#', "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(labelArray83);
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(printWriter86);
    }

    @Test
    public void test10847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10847");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.println(false);
        printWriter24.println(0);
        java.util.Locale locale31 = null;
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.write((-1));
        printWriter34.flush();
        java.util.Locale locale38 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray43 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray45 = null;
        aSMifierMethodVisitor40.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray43, (int) (short) 1, objArray45);
        java.io.PrintWriter printWriter47 = printWriter34.printf(locale38, "", (java.lang.Object[]) strArray43);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor48 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter34);
        aSMifierClassVisitor48.visitEnd();
        aSMifierClassVisitor48.visitSource("", "hi!");
        java.lang.String[] strArray58 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor48.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray58);
        aSMifierClassVisitor48.visitInnerClass("", "hi!", "", (int) (short) -1);
        java.lang.String[] strArray69 = org.mockito.asm.util.AbstractVisitor.TYPES;
        org.mockito.asm.MethodVisitor methodVisitor70 = aSMifierClassVisitor48.visitMethod(1, "hi!", "hi!", "", strArray69);
        java.io.PrintWriter printWriter71 = printWriter24.printf(locale31, "hi!", (java.lang.Object[]) strArray69);
        java.lang.String[] strArray73 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter74 = printWriter24.printf("hi!", (java.lang.Object[]) strArray73);
        java.io.PrintWriter printWriter76 = printWriter74.append('a');
        printWriter76.print('4');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(methodVisitor70);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(printWriter74);
        org.junit.Assert.assertNotNull(printWriter76);
    }

    @Test
    public void test10848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10848");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label18);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        java.util.Locale locale22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray27 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray29 = null;
        aSMifierMethodVisitor24.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray27, (int) (short) 1, objArray29);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray41 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray43 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor32, strArray41, 1.0f };
        java.io.PrintWriter printWriter44 = printWriter21.printf(locale22, "", (java.lang.Object[]) strArray41);
        boolean boolean45 = printWriter21.checkError();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) boolean45);
        aSMifierMethodVisitor0.visitMaxs((int) ' ', (int) '4');
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor53.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label59 = null;
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter("hi!");
        printWriter61.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        aSMifierMethodVisitor65.visitTryCatchBlock(label66, label67, label68, "");
        aSMifierMethodVisitor65.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label[] labelArray78 = new org.mockito.asm.Label[] { label77 };
        aSMifierMethodVisitor65.visitTableSwitchInsn(0, (int) (byte) 10, label76, labelArray78);
        java.io.PrintWriter printWriter80 = printWriter61.printf("hi!", (java.lang.Object[]) labelArray78);
        aSMifierMethodVisitor53.visitTableSwitchInsn(1, (int) (short) 10, label59, labelArray78);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 10, label52, labelArray78);
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(labelArray78);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertNotNull(annotationVisitor85);
    }

    @Test
    public void test10849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10849");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter3.println();
        printWriter3.print("");
        printWriter3.println('#');
        org.junit.Assert.assertNotNull(printWriter3);
    }

    @Test
    public void test10850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10850");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter5.close();
        printWriter5.println(true);
        printWriter5.println((double) '#');
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter11.println(' ');
        printWriter11.write((int) (byte) -1);
        printWriter11.println();
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test10851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10851");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = printWriter1.append((java.lang.CharSequence) "");
        printWriter22.close();
        java.io.PrintWriter printWriter25 = printWriter22.append(' ');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj35 = null;
        aSMifierMethodVisitor26.visitLdcInsn(obj35);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor26.visitJumpInsn((int) (short) 1, label38);
        aSMifierMethodVisitor26.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor26.visitParameterAnnotation((int) (byte) 1, "", true);
        aSMifierMethodVisitor26.visitInsn((int) (short) 1);
        printWriter22.print((java.lang.Object) aSMifierMethodVisitor26);
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor26.visitParameterAnnotation((int) (short) -1, "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor26.visitAnnotationDefault();
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor26.visitLabel(label55);
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(annotationVisitor54);
    }

    @Test
    public void test10852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10852");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.write((-1));
        printWriter22.flush();
        java.util.Locale locale26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray31 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray33 = null;
        aSMifierMethodVisitor28.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray31, (int) (short) 1, objArray33);
        java.io.PrintWriter printWriter35 = printWriter22.printf(locale26, "", (java.lang.Object[]) strArray31);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter22);
        aSMifierClassVisitor36.visitEnd();
        aSMifierClassVisitor36.visitSource("", "hi!");
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor36.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray46);
        org.mockito.asm.MethodVisitor methodVisitor48 = aSMifierClassVisitor15.visitMethod((int) (short) 100, "hi!", "hi!", "", strArray46);
        aSMifierClassVisitor15.visitInnerClass("", "", "", (int) (short) 100);
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierClassVisitor15.visitAnnotation("", true);
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "");
        aSMifierClassVisitor15.visitSource("hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierClassVisitor15.visitAnnotation("", true);
        aSMifierClassVisitor15.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierClassVisitor15.visitAnnotation("", false);
        annotationVisitor73.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor57);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor73);
    }

    @Test
    public void test10853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10853");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        aSMifierClassVisitor28.visitOuterClass("hi!", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor28.visitAnnotation("", true);
        aSMifierClassVisitor28.visitEnd();
        java.util.List list40 = aSMifierClassVisitor28.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label51, label52, label53, "");
        java.util.List list56 = aSMifierMethodVisitor45.text;
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor60.visitTryCatchBlock(label61, label62, label63, "");
        aSMifierMethodVisitor60.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj69 = null;
        aSMifierMethodVisitor60.visitLdcInsn(obj69);
        aSMifierMethodVisitor60.visitEnd();
        aSMifierMethodVisitor60.visitMaxs((int) (byte) 0, (int) (short) 1);
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label[] labelArray78 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor60.visitTableSwitchInsn((-1), (int) (byte) 0, label77, labelArray78);
        aSMifierMethodVisitor45.visitTableSwitchInsn((int) 'a', (int) (byte) 1, label59, labelArray78);
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = aSMifierMethodVisitor45.visitParameterAnnotation((int) ' ', "hi!", false);
        aSMifierMethodVisitor45.visitFieldInsn((int) (short) 1, "", "hi!", "");
        org.mockito.asm.FieldVisitor fieldVisitor90 = aSMifierClassVisitor28.visitField((int) 'a', "hi!", "", "hi!", (java.lang.Object) "");
        fieldVisitor90.visitEnd();
        fieldVisitor90.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(labelArray78);
        org.junit.Assert.assertNotNull(annotationVisitor84);
        org.junit.Assert.assertNotNull(fieldVisitor90);
    }

    @Test
    public void test10854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10854");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 1, (int) (byte) 0);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 100, label27);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj44 = null;
        aSMifierMethodVisitor35.visitLdcInsn(obj44);
        aSMifierMethodVisitor35.visitTypeInsn(0, "hi!");
        aSMifierMethodVisitor35.visitInsn((int) (short) 1);
        aSMifierMethodVisitor35.visitMultiANewArrayInsn("", (int) (short) 10);
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor35.visitLabel(label54);
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) 10);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (byte) 10);
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor0.visitLineNumber(100, label61);
        java.util.List list63 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(list63);
    }

    @Test
    public void test10855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10855");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        java.lang.String[] strArray36 = null;
        org.mockito.asm.MethodVisitor methodVisitor37 = aSMifierClassVisitor28.visitMethod((int) '4', "hi!", "", "", strArray36);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierClassVisitor28.visitAnnotation("hi!", false);
        java.util.List list41 = aSMifierClassVisitor28.text;
        aSMifierClassVisitor28.visitOuterClass("", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(methodVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(list41);
    }

    @Test
    public void test10856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10856");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label11 = null;
        int[] intArray18 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor19.visitTryCatchBlock(label20, label21, label22, "");
        aSMifierMethodVisitor19.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label[] labelArray32 = new org.mockito.asm.Label[] { label31 };
        aSMifierMethodVisitor19.visitTableSwitchInsn(0, (int) (byte) 10, label30, labelArray32);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label11, intArray18, labelArray32);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 1, "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, 0);
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("hi!");
        java.util.Locale locale45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray50 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray52 = null;
        aSMifierMethodVisitor47.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray50, (int) (short) 1, objArray52);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor55.visitTryCatchBlock(label56, label57, label58, "");
        aSMifierMethodVisitor55.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray64 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray66 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor55, strArray64, 1.0f };
        java.io.PrintWriter printWriter67 = printWriter44.printf(locale45, "", (java.lang.Object[]) strArray64);
        printWriter67.print('#');
        printWriter67.print((int) ' ');
        aSMifierMethodVisitor0.print(printWriter67);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 10);
        java.util.List list76 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray32);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(list76);
    }

    @Test
    public void test10857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10857");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor24.visitLocalVariable("hi!", "hi!", "hi!", label33, label34, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor24.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor24.visitAnnotationDefault();
        annotationVisitor40.visitEnum("", "hi!", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor45 = aSMifierClassVisitor15.visitField((int) '#', "", "", "", (java.lang.Object) "hi!");
        aSMifierClassVisitor15.visitSource("", "");
        aSMifierClassVisitor15.visitInnerClass("hi!", "", "", (int) ' ');
        aSMifierClassVisitor15.visitInnerClass("", "", "", 100);
        aSMifierClassVisitor15.visitSource("hi!", "hi!");
        aSMifierClassVisitor15.visitInnerClass("", "", "", (-1));
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor45);
    }

    @Test
    public void test10858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10858");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj44 = null;
        aSMifierMethodVisitor35.visitLdcInsn(obj44);
        aSMifierMethodVisitor35.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list48 = aSMifierMethodVisitor35.getText();
        org.mockito.asm.FieldVisitor fieldVisitor49 = aSMifierClassVisitor15.visitField((int) (byte) -1, "", "", "", (java.lang.Object) list48);
        aSMifierClassVisitor15.visitInnerClass("hi!", "hi!", "hi!", (int) (byte) 10);
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(fieldVisitor49);
        org.junit.Assert.assertNotNull(annotationVisitor58);
    }

    @Test
    public void test10859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10859");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        aSMifierMethodVisitor0.visitFieldInsn(100, "", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = annotationVisitor32.visitArray("");
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor34);
    }

    @Test
    public void test10860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10860");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 1, 0);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        aSMifierMethodVisitor20.visitEnd();
        aSMifierMethodVisitor20.visitMaxs((int) (byte) 0, (int) (short) 1);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label[] labelArray38 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor20.visitTableSwitchInsn((-1), (int) (byte) 0, label37, labelArray38);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 1, label19, labelArray38);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.junit.Assert.assertNotNull(labelArray38);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor46);
    }

    @Test
    public void test10861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10861");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        java.util.List list26 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 0);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.write((-1));
        printWriter33.flush();
        java.util.Locale locale37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray44 = null;
        aSMifierMethodVisitor39.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray42, (int) (short) 1, objArray44);
        java.io.PrintWriter printWriter46 = printWriter33.printf(locale37, "", (java.lang.Object[]) strArray42);
        java.lang.Object[] objArray48 = null;
        aSMifierMethodVisitor0.visitFrame((int) (short) 1, 10, (java.lang.Object[]) strArray42, (int) (short) -1, objArray48);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label50, label51, label52, "hi!");
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 10, (int) (short) 0);
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 0, label59);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(printWriter46);
    }

    @Test
    public void test10862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10862");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        printWriter34.close();
        printWriter34.print((float) 100);
        printWriter34.println(' ');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test10863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10863");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        java.util.List list22 = aSMifierClassVisitor15.getText();
        aSMifierClassVisitor15.visitSource("hi!", "");
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter33 = printWriter31.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor34.visitTryCatchBlock(label35, label36, label37, "");
        aSMifierMethodVisitor34.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj43 = null;
        aSMifierMethodVisitor34.visitLdcInsn(obj43);
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor34.visitJumpInsn((int) (short) 1, label46);
        aSMifierMethodVisitor34.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor34.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor34.visitAnnotationDefault();
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter("hi!");
        printWriter58.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor62.visitTryCatchBlock(label63, label64, label65, "");
        aSMifierMethodVisitor62.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label[] labelArray75 = new org.mockito.asm.Label[] { label74 };
        aSMifierMethodVisitor62.visitTableSwitchInsn(0, (int) (byte) 10, label73, labelArray75);
        java.io.PrintWriter printWriter77 = printWriter58.printf("hi!", (java.lang.Object[]) labelArray75);
        java.lang.String[] strArray79 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor34.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray75, 1, (java.lang.Object[]) strArray79);
        printWriter33.println((java.lang.Object) strArray79);
        org.mockito.asm.MethodVisitor methodVisitor82 = aSMifierClassVisitor15.visitMethod(10, "hi!", "hi!", "hi!", strArray79);
        java.util.List list83 = aSMifierClassVisitor15.getText();
        aSMifierClassVisitor15.visitInnerClass("hi!", "", "hi!", (int) (byte) -1);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(labelArray75);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(methodVisitor82);
        org.junit.Assert.assertNotNull(list83);
    }

    @Test
    public void test10864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10864");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.print((double) (byte) 10);
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter("hi!");
        java.util.Locale locale8 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray13 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray15 = null;
        aSMifierMethodVisitor10.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray13, (int) (short) 1, objArray15);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor18.visitTryCatchBlock(label19, label20, label21, "");
        aSMifierMethodVisitor18.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray27 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray29 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor18, strArray27, 1.0f };
        java.io.PrintWriter printWriter30 = printWriter7.printf(locale8, "", (java.lang.Object[]) strArray27);
        char[] charArray37 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter30.println(charArray37);
        printWriter1.print(charArray37);
        printWriter1.flush();
        printWriter1.print((float) 10L);
        printWriter1.write("", (int) (short) 1, (int) (short) 0);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test10865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10865");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        aSMifierClassVisitor15.visitSource("hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter("hi!");
        printWriter45.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter49 = printWriter45.append((java.lang.CharSequence) "");
        printWriter45.print((int) (byte) -1);
        printWriter45.print("hi!");
        org.mockito.asm.FieldVisitor fieldVisitor54 = aSMifierClassVisitor15.visitField((int) (short) 1, "hi!", "", "", (java.lang.Object) printWriter45);
        printWriter45.println(false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(fieldVisitor54);
    }

    @Test
    public void test10866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10866");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor8 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitIntInsn(10, (int) (short) 1);
        aSMifierMethodVisitor0.visitFieldInsn(10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIincInsn((int) '#', (int) (short) 10);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitLabel(label21);
        aSMifierMethodVisitor0.visitInsn(1);
        org.junit.Assert.assertNotNull(annotationVisitor8);
    }

    @Test
    public void test10867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10867");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) -1, (int) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) -1, "", false);
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter("hi!");
        java.util.Locale locale21 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray26 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray28 = null;
        aSMifierMethodVisitor23.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray26, (int) (short) 1, objArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray40 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray42 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor31, strArray40, 1.0f };
        java.io.PrintWriter printWriter43 = printWriter20.printf(locale21, "", (java.lang.Object[]) strArray40);
        char[] charArray50 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter43.println(charArray50);
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter((java.io.Writer) printWriter43, true);
        printWriter43.print((float) 10L);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter43);
        printWriter43.println('4');
        printWriter43.print('a');
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test10868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10868");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "hi!", "");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 1, label24);
        aSMifierMethodVisitor0.visitFieldInsn(10, "hi!", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) 'a', label33);
        aSMifierMethodVisitor0.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor31);
    }

    @Test
    public void test10869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10869");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor28.visitSource("hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierClassVisitor28.visitAnnotation("hi!", false);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label48, label49, label50, "");
        aSMifierMethodVisitor47.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj56 = null;
        aSMifierMethodVisitor47.visitLdcInsn(obj56);
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter("hi!");
        printWriter59.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor47.print(printWriter59);
        java.util.List list63 = aSMifierMethodVisitor47.text;
        aSMifierMethodVisitor47.visitFieldInsn(0, "", "", "");
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor47.visitJumpInsn((int) '4', label70);
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = aSMifierMethodVisitor47.visitAnnotation("", false);
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label75, label76, label77, "");
        org.mockito.asm.FieldVisitor fieldVisitor80 = aSMifierClassVisitor28.visitField((int) (byte) 0, "hi!", "hi!", "", (java.lang.Object) label77);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(annotationVisitor74);
        org.junit.Assert.assertNotNull(fieldVisitor80);
    }

    @Test
    public void test10870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10870");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 1, "hi!", "", "hi!");
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitLabel(label19);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label25, label26, (int) (short) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label31);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor29);
    }

    @Test
    public void test10871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10871");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        java.util.Locale locale13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray20 = null;
        aSMifierMethodVisitor15.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray18, (int) (short) 1, objArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor23, strArray32, 1.0f };
        java.io.PrintWriter printWriter35 = printWriter12.printf(locale13, "", (java.lang.Object[]) strArray32);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, true);
        printWriter8.println((java.lang.Object) printWriter37);
        printWriter8.println();
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        printWriter42.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter47 = printWriter42.format("", (java.lang.Object[]) strArray46);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor48 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter47);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray57 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray59 = null;
        aSMifierMethodVisitor54.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray57, (int) (short) 1, objArray59);
        aSMifierClassVisitor48.visit(10, (int) (byte) -1, "", "hi!", "hi!", strArray57);
        java.io.PrintWriter printWriter62 = printWriter8.printf("", (java.lang.Object[]) strArray57);
        printWriter62.print((float) 100);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor65 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter62);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(printWriter62);
    }

    @Test
    public void test10872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10872");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        printWriter1.print(0L);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor8.visitEnd();
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        printWriter15.write((-1));
        printWriter15.flush();
        java.util.Locale locale19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray24 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray26 = null;
        aSMifierMethodVisitor21.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray24, (int) (short) 1, objArray26);
        java.io.PrintWriter printWriter28 = printWriter15.printf(locale19, "", (java.lang.Object[]) strArray24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter15);
        aSMifierClassVisitor29.visitEnd();
        aSMifierClassVisitor29.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor38.visitTryCatchBlock(label39, label40, label41, "");
        org.mockito.asm.FieldVisitor fieldVisitor44 = aSMifierClassVisitor29.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label41);
        aSMifierClassVisitor29.visitSource("hi!", "");
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("hi!");
        printWriter53.write((-1));
        printWriter53.flush();
        java.util.Locale locale57 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray62 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray64 = null;
        aSMifierMethodVisitor59.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray62, (int) (short) 1, objArray64);
        java.io.PrintWriter printWriter66 = printWriter53.printf(locale57, "", (java.lang.Object[]) strArray62);
        org.mockito.asm.MethodVisitor methodVisitor67 = aSMifierClassVisitor29.visitMethod((int) (byte) 0, "", "", "hi!", strArray62);
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = methodVisitor67.visitParameterAnnotation((int) '#', "hi!", true);
        org.mockito.asm.FieldVisitor fieldVisitor72 = aSMifierClassVisitor8.visitField((int) (byte) -1, "hi!", "", "hi!", (java.lang.Object) true);
        aSMifierClassVisitor8.visitEnd();
        aSMifierClassVisitor8.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = aSMifierClassVisitor8.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = aSMifierClassVisitor8.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(methodVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor71);
        org.junit.Assert.assertNotNull(fieldVisitor72);
        org.junit.Assert.assertNotNull(annotationVisitor77);
        org.junit.Assert.assertNotNull(annotationVisitor80);
    }

    @Test
    public void test10873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10873");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.print((int) ' ');
        java.lang.Object obj29 = null;
        printWriter24.print(obj29);
        printWriter24.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor33 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        aSMifierClassVisitor33.visitSource("", "hi!");
        aSMifierClassVisitor33.visitSource("", "hi!");
        aSMifierClassVisitor33.visitSource("", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test10874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10874");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.println(false);
        printWriter24.println(0);
        printWriter24.close();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor32 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor32.visitAnnotation("hi!", false);
        aSMifierClassVisitor32.visitInnerClass("hi!", "", "hi!", (int) (short) 1);
        aSMifierClassVisitor32.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor46.visitTryCatchBlock(label47, label48, label49, "");
        aSMifierMethodVisitor46.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj55 = null;
        aSMifierMethodVisitor46.visitLdcInsn(obj55);
        aSMifierMethodVisitor46.visitInsn((int) ' ');
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor46.visitJumpInsn(100, label60);
        aSMifierMethodVisitor46.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor46.visitCode();
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor46.visitJumpInsn((int) (short) 10, label67);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor71 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray74 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray76 = null;
        aSMifierMethodVisitor71.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray74, (int) (short) 1, objArray76);
        java.io.PrintWriter printWriter80 = new java.io.PrintWriter("hi!");
        printWriter80.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray84 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter85 = printWriter80.format("", (java.lang.Object[]) strArray84);
        aSMifierMethodVisitor46.visitFrame((int) '#', (int) '4', (java.lang.Object[]) strArray74, 0, (java.lang.Object[]) strArray84);
        org.mockito.asm.MethodVisitor methodVisitor87 = aSMifierClassVisitor32.visitMethod((int) (byte) 0, "", "", "", strArray74);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(methodVisitor87);
    }

    @Test
    public void test10875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10875");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", true);
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label67, label68, label69, "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) ' ', 0);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "");
        org.mockito.asm.Label label83 = null;
        org.mockito.asm.Label label84 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label83, label84, (int) (short) 0);
        aSMifierMethodVisitor0.visitIincInsn((int) '4', (int) (byte) 0);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationVisitor66);
    }

    @Test
    public void test10876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10876");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor17.visitTryCatchBlock(label18, label19, label20, "");
        aSMifierMethodVisitor17.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj26 = null;
        aSMifierMethodVisitor17.visitLdcInsn(obj26);
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor17.visitJumpInsn((int) (short) 1, label29);
        aSMifierMethodVisitor17.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label36, labelArray37);
        java.io.PrintWriter printWriter39 = printWriter12.printf("", (java.lang.Object[]) labelArray37);
        printWriter12.write((int) '4');
        printWriter12.print((float) '4');
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(printWriter39);
    }

    @Test
    public void test10877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10877");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((int) (byte) -1);
        printWriter1.print((double) (byte) 1);
        printWriter1.close();
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter11.println();
        java.io.PrintWriter printWriter14 = printWriter11.append('4');
        java.io.PrintWriter printWriter16 = printWriter11.append((java.lang.CharSequence) "");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter16);
    }

    @Test
    public void test10878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10878");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label18);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        java.util.Locale locale22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray27 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray29 = null;
        aSMifierMethodVisitor24.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray27, (int) (short) 1, objArray29);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray41 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray43 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor32, strArray41, 1.0f };
        java.io.PrintWriter printWriter44 = printWriter21.printf(locale22, "", (java.lang.Object[]) strArray41);
        boolean boolean45 = printWriter21.checkError();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) boolean45);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(annotationVisitor52);
    }

    @Test
    public void test10879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10879");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label24, label25, label26, "hi!");
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label32, label33, (int) 'a');
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test10880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10880");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        java.lang.String[] strArray10 = null;
        aSMifierClassVisitor1.visit(0, (-1), "hi!", "", "hi!", strArray10);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "hi!", (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10881");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label19, labelArray20);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, (int) (byte) 1);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label31, label32, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor0.visitLabel(label36);
        org.mockito.asm.Attribute attribute38 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(labelArray20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor35);
    }

    @Test
    public void test10882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10882");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) ' ');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitAnnotation("", false);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.print(false);
        java.io.PrintWriter printWriter27 = printWriter23.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter23);
        printWriter28.println();
        printWriter28.write("hi!");
        aSMifierMethodVisitor0.print(printWriter28);
        aSMifierMethodVisitor0.visitIntInsn(1, 0);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) -1, (int) (short) 10);
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label42, label43, (int) '4');
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Attribute attribute47 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(printWriter27);
    }

    @Test
    public void test10883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10883");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 10, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) 'a', (int) (short) 0);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 1, "", "", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test10884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10884");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label10);
        aSMifierMethodVisitor0.visitInsn((int) (short) 10);
        aSMifierMethodVisitor0.visitIntInsn(0, (-1));
        org.mockito.asm.Label label19 = null;
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print(false);
        java.io.PrintWriter printWriter25 = printWriter21.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        printWriter26.println();
        printWriter26.print((float) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj40 = null;
        aSMifierMethodVisitor31.visitLdcInsn(obj40);
        aSMifierMethodVisitor31.visitInsn((int) ' ');
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor31.visitJumpInsn(100, label45);
        aSMifierMethodVisitor31.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label50 = null;
        int[] intArray51 = new int[] {};
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("hi!");
        printWriter53.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter57 = printWriter53.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor59.visitTryCatchBlock(label60, label61, label62, "");
        aSMifierMethodVisitor59.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj68 = null;
        aSMifierMethodVisitor59.visitLdcInsn(obj68);
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor59.visitJumpInsn((int) (short) 1, label71);
        aSMifierMethodVisitor59.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label[] labelArray79 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label78, labelArray79);
        java.io.PrintWriter printWriter81 = printWriter57.printf("", (java.lang.Object[]) labelArray79);
        aSMifierMethodVisitor31.visitLookupSwitchInsn(label50, intArray51, labelArray79);
        java.io.PrintWriter printWriter83 = printWriter26.printf("", (java.lang.Object[]) labelArray79);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) ' ', 1, label19, labelArray79);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', 0);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor91 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor93 = annotationVisitor91.visitArray("");
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]");
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(labelArray79);
        org.junit.Assert.assertNotNull(printWriter81);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertNotNull(annotationVisitor91);
        org.junit.Assert.assertNotNull(annotationVisitor93);
    }

    @Test
    public void test10885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10885");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (byte) 0);
        java.util.List list32 = aSMifierClassVisitor15.getText();
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter("hi!");
        printWriter38.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter43 = printWriter38.format("", (java.lang.Object[]) strArray42);
        org.mockito.asm.MethodVisitor methodVisitor44 = aSMifierClassVisitor15.visitMethod(0, "", "hi!", "hi!", strArray42);
        aSMifierClassVisitor15.visitOuterClass("hi!", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        java.lang.Object obj54 = null;
        org.mockito.asm.FieldVisitor fieldVisitor55 = aSMifierClassVisitor15.visitField(100, "", "hi!", "hi!", obj54);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(methodVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor55);
    }

    @Test
    public void test10886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10886");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) ' ', label20);
        aSMifierMethodVisitor0.visitIincInsn(100, 10);
        aSMifierMethodVisitor0.visitMaxs(10, 10);
        aSMifierMethodVisitor0.visitVarInsn((int) '#', 100);
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label32);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test10887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10887");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = printWriter1.append((java.lang.CharSequence) "");
        printWriter22.close();
        java.io.PrintWriter printWriter25 = printWriter22.append(' ');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj35 = null;
        aSMifierMethodVisitor26.visitLdcInsn(obj35);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor26.visitJumpInsn((int) (short) 1, label38);
        aSMifierMethodVisitor26.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor26.visitParameterAnnotation((int) (byte) 1, "", true);
        aSMifierMethodVisitor26.visitInsn((int) (short) 1);
        printWriter22.print((java.lang.Object) aSMifierMethodVisitor26);
        printWriter22.println((long) 100);
        printWriter22.println(100.0f);
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(annotationVisitor46);
    }

    @Test
    public void test10888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10888");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "hi!", label27, label28, (int) (short) 100);
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor0.visitLabel(label31);
        aSMifierMethodVisitor0.visitIincInsn((int) 'a', 1);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor0.visitLineNumber(0, label37);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 10, (int) 'a');
        java.util.List list42 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list42);
    }

    @Test
    public void test10889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10889");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label21, label22, label23, "");
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label29, label30, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", false);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label38);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn((int) (short) -1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor36);
    }

    @Test
    public void test10890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10890");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 10, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) 'a', (int) (short) 0);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) -1, label20);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLabel(label22);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor29.visitTryCatchBlock(label30, label31, label32, "");
        aSMifierMethodVisitor29.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj38 = null;
        aSMifierMethodVisitor29.visitLdcInsn(obj38);
        aSMifierMethodVisitor29.visitInsn((int) ' ');
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj54 = null;
        aSMifierMethodVisitor45.visitLdcInsn(obj54);
        org.mockito.asm.Label label56 = null;
        int[] intArray63 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] { label76 };
        aSMifierMethodVisitor64.visitTableSwitchInsn(0, (int) (byte) 10, label75, labelArray77);
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label56, intArray63, labelArray77);
        aSMifierMethodVisitor29.visitTableSwitchInsn((int) '4', (int) '#', label44, labelArray77);
        org.mockito.asm.Label label84 = null;
        org.mockito.asm.Label label85 = null;
        aSMifierMethodVisitor29.visitLocalVariable("hi!", "hi!", "hi!", label84, label85, (int) (short) 1);
        aSMifierMethodVisitor29.visitIincInsn((int) '4', (int) (short) 100);
        org.mockito.asm.Label label91 = null;
        aSMifierMethodVisitor29.visitLabel(label91);
        org.mockito.asm.Label label94 = null;
        aSMifierMethodVisitor29.visitLineNumber(0, label94);
        annotationVisitor27.visit("hi!", (java.lang.Object) label94);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray77);
    }

    @Test
    public void test10891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10891");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        printWriter1.print(0L);
        printWriter1.close();
        printWriter1.println();
        java.io.PrintWriter printWriter11 = printWriter1.append('a');
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        printWriter13.print((java.lang.Object) (short) -1);
        printWriter13.flush();
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter13);
        printWriter17.write("");
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        java.util.Locale locale22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray27 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray29 = null;
        aSMifierMethodVisitor24.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray27, (int) (short) 1, objArray29);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray41 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray43 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor32, strArray41, 1.0f };
        java.io.PrintWriter printWriter44 = printWriter21.printf(locale22, "", (java.lang.Object[]) strArray41);
        char[] charArray51 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter44.println(charArray51);
        printWriter17.print(charArray51);
        printWriter1.println(charArray51);
        java.io.PrintWriter printWriter56 = printWriter1.append('a');
        printWriter1.print(true);
        org.junit.Assert.assertNotNull(printWriter11);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter56);
    }

    @Test
    public void test10892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10892");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        aSMifierMethodVisitor0.visitMethodInsn(10, "", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label14, label15, label16, "hi!");
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label19, label20, label21, "hi!");
    }

    @Test
    public void test10893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10893");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", true);
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label26);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj39 = null;
        aSMifierMethodVisitor30.visitLdcInsn(obj39);
        aSMifierMethodVisitor30.visitEnd();
        aSMifierMethodVisitor30.visitCode();
        java.util.List list43 = aSMifierMethodVisitor30.text;
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) list43);
        aSMifierMethodVisitor0.visitInsn(1);
        aSMifierMethodVisitor0.visitIincInsn((int) '#', (int) (short) 100);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 0, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor55.visitTryCatchBlock(label56, label57, label58, "");
        aSMifierMethodVisitor55.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor55.visitMaxs(100, (int) '4');
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor55.visitLabel(label67);
        aSMifierMethodVisitor55.visitMultiANewArrayInsn("", (int) (byte) 0);
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor55.visitJumpInsn((int) (byte) 1, label73);
        aSMifierMethodVisitor55.visitIntInsn(0, (int) (short) 100);
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        aSMifierMethodVisitor55.visitLocalVariable("", "", "hi!", label81, label82, 1);
        annotationVisitor53.visit("hi!", (java.lang.Object) aSMifierMethodVisitor55);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(annotationVisitor53);
    }

    @Test
    public void test10894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10894");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.println(0.0f);
        printWriter24.print(1.0f);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter24.println((double) '4');
        printWriter24.print("");
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter24.println((int) (short) -1);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
    }

    @Test
    public void test10895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10895");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        char[] charArray56 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter49.println(charArray56);
        printWriter24.print(charArray56);
        printWriter24.print(true);
        java.io.PrintWriter printWriter62 = printWriter24.append((java.lang.CharSequence) "");
        java.util.Locale locale63 = null;
        org.mockito.asm.Attribute[] attributeArray65 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        java.io.PrintWriter printWriter66 = printWriter62.format(locale63, "", (java.lang.Object[]) attributeArray65);
        printWriter62.print(false);
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter((java.io.Writer) printWriter62, true);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor71 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter62);
        aSMifierClassVisitor71.visitInnerClass("hi!", "", "", 1);
        aSMifierClassVisitor71.visitInnerClass("", "", "", (int) 'a');
        org.mockito.asm.Attribute attribute82 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor71.visitAttribute(attribute82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(attributeArray65);
        org.junit.Assert.assertNotNull(printWriter66);
    }

    @Test
    public void test10896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10896");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        java.util.List list26 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 0);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 1, "");
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label36, label37, (int) (byte) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(annotationVisitor42);
    }

    @Test
    public void test10897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10897");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        boolean boolean37 = printWriter34.checkError();
        printWriter34.print((long) (short) 0);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test10898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10898");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.println(0.0f);
        printWriter24.write("");
        printWriter24.println((long) 0);
        java.io.PrintWriter printWriter34 = printWriter24.append((java.lang.CharSequence) "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter34);
    }

    @Test
    public void test10899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10899");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter3, true);
        printWriter3.close();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter3);
        aSMifierClassVisitor7.visitInnerClass("", "hi!", "", (int) 'a');
        org.junit.Assert.assertNotNull(printWriter3);
    }

    @Test
    public void test10900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10900");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitLabel(label4);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) 10);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) (byte) 10);
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 1, label13);
        org.mockito.asm.Label label16 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitJumpInsn((int) (short) -1, label16);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10901");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs(1, 10);
        aSMifierMethodVisitor0.visitTypeInsn(100, "");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 10);
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor0.visitLabel(label70);
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 10, "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = annotationVisitor75.visitAnnotation("", "");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor75);
        org.junit.Assert.assertNotNull(annotationVisitor78);
    }

    @Test
    public void test10902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10902");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 1, "hi!", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print(false);
        java.io.PrintWriter printWriter25 = printWriter21.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter25, true);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter25);
        printWriter28.println((float) (short) 10);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter28);
        printWriter28.println((float) 0);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(printWriter25);
    }

    @Test
    public void test10903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10903");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter6.println();
        printWriter6.write("hi!");
        printWriter6.println(' ');
        java.io.PrintWriter printWriter13 = printWriter6.append(' ');
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter((java.io.Writer) printWriter13, false);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("hi!");
        printWriter17.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter21 = printWriter17.append((java.lang.CharSequence) "");
        printWriter17.print((double) 1);
        java.io.PrintWriter printWriter25 = printWriter17.append((java.lang.CharSequence) "hi!");
        printWriter25.println(false);
        printWriter25.println("hi!");
        printWriter25.print("hi!");
        printWriter15.println((java.lang.Object) printWriter25);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(printWriter25);
    }

    @Test
    public void test10904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10904");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label13, label14, (int) (short) 10);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label18);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 10, (int) 'a');
    }

    @Test
    public void test10905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10905");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label27 = null;
        int[] intArray34 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        aSMifierMethodVisitor16.visitLookupSwitchInsn(label27, intArray34, labelArray48);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) '4', (int) '#', label15, labelArray48);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label55, label56, (int) (short) 1);
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor0.visitLabel(label59);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Attribute attribute64 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray48);
    }

    @Test
    public void test10906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10906");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        java.util.List list33 = aSMifierClassVisitor28.getText();
        aSMifierClassVisitor28.visitSource("hi!", "");
        aSMifierClassVisitor28.visitSource("hi!", "");
        aSMifierClassVisitor28.visitSource("", "");
        aSMifierClassVisitor28.visitOuterClass("", "hi!", "hi!");
        java.util.List list47 = aSMifierClassVisitor28.text;
        aSMifierClassVisitor28.visitInnerClass("", "hi!", "", (int) (short) 1);
        aSMifierClassVisitor28.visitOuterClass("", "", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list47);
    }

    @Test
    public void test10907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10907");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        printWriter26.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter30 = printWriter26.append((java.lang.CharSequence) "");
        printWriter30.close();
        printWriter30.println((int) (short) 10);
        org.mockito.asm.FieldVisitor fieldVisitor34 = aSMifierClassVisitor15.visitField((int) (short) 0, "hi!", "hi!", "", (java.lang.Object) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = fieldVisitor34.visitAnnotation("hi!", false);
        org.mockito.asm.Attribute attribute38 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor34.visitAttribute(attribute38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(fieldVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test10908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10908");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, (int) (short) 10);
        aSMifierMethodVisitor0.visitFieldInsn(1, "hi!", "", "");
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label70);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, (int) (byte) 0);
        aSMifierMethodVisitor0.visitInsn((int) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitInsn((int) (short) 0);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor79);
    }

    @Test
    public void test10909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10909");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '#', label63);
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 0, label66);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
    }

    @Test
    public void test10910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10910");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.print('a');
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter28.flush();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        aSMifierClassVisitor30.visitInnerClass("", "hi!", "", (int) (short) 100);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj49 = null;
        aSMifierMethodVisitor40.visitLdcInsn(obj49);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor40.visitJumpInsn((int) (short) 1, label52);
        aSMifierMethodVisitor40.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor40.visitInsn(100);
        aSMifierMethodVisitor40.visitCode();
        aSMifierMethodVisitor40.visitEnd();
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor40.visitLineNumber((int) (byte) -1, label62);
        aSMifierMethodVisitor40.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor40.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.FieldVisitor fieldVisitor69 = aSMifierClassVisitor30.visitField((int) (byte) 0, "hi!", "", "hi!", (java.lang.Object) "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(fieldVisitor69);
    }

    @Test
    public void test10911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10911");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label27, label28, (int) (byte) 10);
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label32);
        aSMifierMethodVisitor0.visitTypeInsn(0, "");
        aSMifierMethodVisitor0.visitInsn((int) (short) 1);
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test10912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10912");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        printWriter34.write("hi!");
        printWriter34.close();
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        printWriter41.write((-1));
        printWriter41.flush();
        java.util.Locale locale45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray50 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray52 = null;
        aSMifierMethodVisitor47.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray50, (int) (short) 1, objArray52);
        java.io.PrintWriter printWriter54 = printWriter41.printf(locale45, "", (java.lang.Object[]) strArray50);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter41);
        aSMifierClassVisitor55.visitEnd();
        aSMifierClassVisitor55.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        org.mockito.asm.FieldVisitor fieldVisitor70 = aSMifierClassVisitor55.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label67);
        printWriter34.println((java.lang.Object) aSMifierClassVisitor55);
        printWriter34.flush();
        java.io.PrintWriter printWriter73 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(fieldVisitor70);
    }

    @Test
    public void test10913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10913");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.print((double) (byte) 10);
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter("hi!");
        java.util.Locale locale8 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray13 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray15 = null;
        aSMifierMethodVisitor10.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray13, (int) (short) 1, objArray15);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor18.visitTryCatchBlock(label19, label20, label21, "");
        aSMifierMethodVisitor18.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray27 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray29 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor18, strArray27, 1.0f };
        java.io.PrintWriter printWriter30 = printWriter7.printf(locale8, "", (java.lang.Object[]) strArray27);
        char[] charArray37 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter30.println(charArray37);
        printWriter1.print(charArray37);
        printWriter1.write("hi!", (int) (short) 10, (int) (short) -1);
        printWriter1.println((double) 100.0f);
        printWriter1.println(false);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test10914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10914");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        printWriter1.print((long) 0);
        boolean boolean7 = printWriter1.checkError();
        printWriter1.close();
        printWriter1.print((int) (short) -1);
        printWriter1.close();
        java.io.PrintWriter printWriter13 = printWriter1.append('#');
        java.util.Locale locale14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor16.visitJumpInsn((int) (short) 1, label28);
        aSMifierMethodVisitor16.visitIincInsn((int) (short) 1, 0);
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj45 = null;
        aSMifierMethodVisitor36.visitLdcInsn(obj45);
        aSMifierMethodVisitor36.visitEnd();
        aSMifierMethodVisitor36.visitMaxs((int) (byte) 0, (int) (short) 1);
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label[] labelArray54 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitTableSwitchInsn((-1), (int) (byte) 0, label53, labelArray54);
        aSMifierMethodVisitor16.visitTableSwitchInsn((int) 'a', 1, label35, labelArray54);
        java.io.PrintWriter printWriter57 = printWriter13.printf(locale14, "hi!", (java.lang.Object[]) labelArray54);
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter13, true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(labelArray54);
        org.junit.Assert.assertNotNull(printWriter57);
    }

    @Test
    public void test10915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10915");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitLabel(label4);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 10, "", "", "");
        aSMifierMethodVisitor0.visitInsn((int) (short) 10);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 1, "", "", "");
        org.mockito.asm.Label label20 = null;
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter24 = printWriter22.append('a');
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        java.util.Locale locale27 = null;
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        printWriter30.print(false);
        java.util.Locale locale33 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj44 = null;
        aSMifierMethodVisitor35.visitLdcInsn(obj44);
        aSMifierMethodVisitor35.visitInsn((int) ' ');
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor51.visitTryCatchBlock(label52, label53, label54, "");
        aSMifierMethodVisitor51.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj60 = null;
        aSMifierMethodVisitor51.visitLdcInsn(obj60);
        org.mockito.asm.Label label62 = null;
        int[] intArray69 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor70 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor70.visitTryCatchBlock(label71, label72, label73, "");
        aSMifierMethodVisitor70.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        org.mockito.asm.Label[] labelArray83 = new org.mockito.asm.Label[] { label82 };
        aSMifierMethodVisitor70.visitTableSwitchInsn(0, (int) (byte) 10, label81, labelArray83);
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label62, intArray69, labelArray83);
        aSMifierMethodVisitor35.visitTableSwitchInsn((int) '4', (int) '#', label50, labelArray83);
        java.io.PrintWriter printWriter87 = printWriter30.format(locale33, "hi!", (java.lang.Object[]) labelArray83);
        java.io.PrintWriter printWriter88 = printWriter26.printf(locale27, "", (java.lang.Object[]) labelArray83);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (short) 0, (int) '#', label20, labelArray83);
        org.mockito.asm.AnnotationVisitor annotationVisitor90 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray83);
        org.junit.Assert.assertNotNull(printWriter87);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(annotationVisitor90);
    }

    @Test
    public void test10916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10916");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        boolean boolean6 = printWriter1.checkError();
        printWriter1.print((float) (byte) 10);
        printWriter1.print(0.0f);
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println(0L);
        printWriter1.println((double) ' ');
        printWriter1.println(1L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test10917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10917");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append((java.lang.CharSequence) "hi!");
        printWriter24.print(false);
        java.util.Locale locale31 = null;
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter38 = printWriter34.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj49 = null;
        aSMifierMethodVisitor40.visitLdcInsn(obj49);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor40.visitJumpInsn((int) (short) 1, label52);
        aSMifierMethodVisitor40.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor40.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label59, labelArray60);
        java.io.PrintWriter printWriter62 = printWriter38.printf("", (java.lang.Object[]) labelArray60);
        java.io.PrintWriter printWriter63 = printWriter24.printf(locale31, "hi!", (java.lang.Object[]) labelArray60);
        printWriter24.print((int) (byte) 0);
        printWriter24.println(0L);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(printWriter63);
    }

    @Test
    public void test10918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10918");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        aSMifierMethodVisitor39.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor39.visitLocalVariable("hi!", "hi!", "hi!", label56, label57, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor39.visitParameterAnnotation(0, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor64 = aSMifierClassVisitor28.visitField((int) ' ', "hi!", "hi!", "", (java.lang.Object) aSMifierMethodVisitor39);
        java.lang.String[] strArray70 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor28.visit((int) (byte) 1, 100, "hi!", "hi!", "hi!", strArray70);
        aSMifierClassVisitor28.visitOuterClass("", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(annotationVisitor78);
    }

    @Test
    public void test10919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10919");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitLabel(label4);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) 10);
        aSMifierMethodVisitor0.visitIincInsn(10, (int) (short) -1);
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) ' ', label13);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 0, "", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) -1);
        aSMifierMethodVisitor0.visitIntInsn((int) 'a', (int) (byte) 0);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLineNumber(0, label27);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 10);
    }

    @Test
    public void test10920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10920");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj40 = null;
        aSMifierMethodVisitor31.visitLdcInsn(obj40);
        aSMifierMethodVisitor31.visitInsn((int) ' ');
        aSMifierMethodVisitor31.visitIincInsn((int) (byte) 100, (int) (short) 1);
        aSMifierMethodVisitor31.visitTypeInsn((int) (byte) 0, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor31.visitAnnotationDefault();
        org.mockito.asm.FieldVisitor fieldVisitor51 = aSMifierClassVisitor15.visitField((int) (short) 10, "hi!", "", "", (java.lang.Object) aSMifierMethodVisitor31);
        aSMifierClassVisitor15.visitSource("", "");
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor58);
    }

    @Test
    public void test10921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10921");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label10);
        aSMifierMethodVisitor0.visitFieldInsn(10, "hi!", "", "hi!");
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '4', label18);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) -1, "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor26);
    }

    @Test
    public void test10922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10922");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) -1, "hi!", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor18.visitTryCatchBlock(label19, label20, label21, "");
        aSMifierMethodVisitor18.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj27 = null;
        aSMifierMethodVisitor18.visitLdcInsn(obj27);
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor18.visitJumpInsn((int) (short) 1, label30);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) label30);
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor0.visitLineNumber((-1), label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 100, label37);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
    }

    @Test
    public void test10923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10923");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 10, 0);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 1, (int) (short) 0);
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test10924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10924");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) -1, "", true);
        annotationVisitor22.visitEnum("", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = annotationVisitor22.visitArray("");
        annotationVisitor28.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor28);
    }

    @Test
    public void test10925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10925");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray5 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter6 = printWriter1.format("", (java.lang.Object[]) strArray5);
        printWriter6.println('a');
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        java.util.Locale locale11 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray16 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray18 = null;
        aSMifierMethodVisitor13.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray16, (int) (short) 1, objArray18);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor21.visitTryCatchBlock(label22, label23, label24, "");
        aSMifierMethodVisitor21.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor21, strArray30, 1.0f };
        java.io.PrintWriter printWriter33 = printWriter10.printf(locale11, "", (java.lang.Object[]) strArray30);
        printWriter33.println();
        printWriter33.println((long) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter43 = printWriter39.append((java.lang.CharSequence) "");
        printWriter39.print((int) (byte) -1);
        printWriter39.write("", (int) (byte) 1, (int) (short) 0);
        printWriter39.print((double) (byte) -1);
        aSMifierMethodVisitor37.print(printWriter39);
        printWriter39.write((int) (byte) 100);
        printWriter33.println((java.lang.Object) (byte) 100);
        printWriter33.println((int) 'a');
        java.io.PrintWriter printWriter59 = printWriter33.append('#');
        printWriter59.println("");
        printWriter59.write("", (int) (short) 10, 0);
        java.io.PrintWriter printWriter66 = new java.io.PrintWriter((java.io.Writer) printWriter59);
        printWriter6.print((java.lang.Object) printWriter66);
        printWriter66.flush();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(printWriter59);
    }

    @Test
    public void test10926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10926");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 100, (int) (short) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.util.List list68 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitTypeInsn((int) '4', "");
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 100, "", "", "hi!");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(annotationVisitor72);
    }

    @Test
    public void test10927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10927");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println((int) (short) 1);
        printWriter1.write((int) (byte) 1);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label[] labelArray29 = new org.mockito.asm.Label[] { label28 };
        aSMifierMethodVisitor16.visitTableSwitchInsn(0, (int) (byte) 10, label27, labelArray29);
        java.io.PrintWriter printWriter31 = printWriter12.printf("hi!", (java.lang.Object[]) labelArray29);
        java.io.PrintWriter printWriter33 = printWriter12.append((java.lang.CharSequence) "");
        printWriter33.close();
        java.io.PrintWriter printWriter36 = printWriter33.append(' ');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj46 = null;
        aSMifierMethodVisitor37.visitLdcInsn(obj46);
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierMethodVisitor37.visitAnnotationDefault();
        printWriter36.println((java.lang.Object) aSMifierMethodVisitor37);
        printWriter36.println();
        printWriter36.println(' ');
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter("hi!");
        java.util.Locale locale55 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray60 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray62 = null;
        aSMifierMethodVisitor57.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray60, (int) (short) 1, objArray62);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        aSMifierMethodVisitor65.visitTryCatchBlock(label66, label67, label68, "");
        aSMifierMethodVisitor65.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray74 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray76 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor65, strArray74, 1.0f };
        java.io.PrintWriter printWriter77 = printWriter54.printf(locale55, "", (java.lang.Object[]) strArray74);
        char[] charArray84 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter77.println(charArray84);
        char[] charArray86 = new char[] {};
        printWriter77.print(charArray86);
        printWriter36.write(charArray86);
        printWriter1.print(charArray86);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(labelArray29);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[]");
    }

    @Test
    public void test10928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10928");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        java.io.PrintWriter printWriter7 = printWriter1.append('#');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        aSMifierMethodVisitor8.visitTryCatchBlock(label9, label10, label11, "");
        aSMifierMethodVisitor8.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj17 = null;
        aSMifierMethodVisitor8.visitLdcInsn(obj17);
        aSMifierMethodVisitor8.visitInsn((int) ' ');
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor8.visitJumpInsn(100, label22);
        aSMifierMethodVisitor8.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label27 = null;
        int[] intArray28 = new int[] {};
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        printWriter30.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter34 = printWriter30.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj45 = null;
        aSMifierMethodVisitor36.visitLdcInsn(obj45);
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor36.visitJumpInsn((int) (short) 1, label48);
        aSMifierMethodVisitor36.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label55, labelArray56);
        java.io.PrintWriter printWriter58 = printWriter34.printf("", (java.lang.Object[]) labelArray56);
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label27, intArray28, labelArray56);
        printWriter1.println((java.lang.Object) intArray28);
        printWriter1.println('a');
        printWriter1.println('4');
        org.junit.Assert.assertNotNull(printWriter7);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(printWriter58);
    }

    @Test
    public void test10929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10929");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.println((float) (short) 0);
        java.io.PrintWriter printWriter7 = printWriter1.append((java.lang.CharSequence) "");
        boolean boolean8 = printWriter1.checkError();
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter10.println((double) (short) 1);
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter((java.io.Writer) printWriter10, false);
        org.junit.Assert.assertNotNull(printWriter7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test10930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10930");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.println(false);
        printWriter24.println(0);
        java.util.Locale locale31 = null;
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.write((-1));
        printWriter34.flush();
        java.util.Locale locale38 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray43 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray45 = null;
        aSMifierMethodVisitor40.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray43, (int) (short) 1, objArray45);
        java.io.PrintWriter printWriter47 = printWriter34.printf(locale38, "", (java.lang.Object[]) strArray43);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor48 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter34);
        aSMifierClassVisitor48.visitEnd();
        aSMifierClassVisitor48.visitSource("", "hi!");
        java.lang.String[] strArray58 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor48.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray58);
        aSMifierClassVisitor48.visitInnerClass("", "hi!", "", (int) (short) -1);
        java.lang.String[] strArray69 = org.mockito.asm.util.AbstractVisitor.TYPES;
        org.mockito.asm.MethodVisitor methodVisitor70 = aSMifierClassVisitor48.visitMethod(1, "hi!", "hi!", "", strArray69);
        java.io.PrintWriter printWriter71 = printWriter24.printf(locale31, "hi!", (java.lang.Object[]) strArray69);
        java.lang.String[] strArray73 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter74 = printWriter24.printf("hi!", (java.lang.Object[]) strArray73);
        printWriter24.print((int) '#');
        printWriter24.println(true);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor79 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        java.lang.Object obj80 = null;
        printWriter24.println(obj80);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(methodVisitor70);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(printWriter74);
    }

    @Test
    public void test10931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10931");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter1.print(false);
        java.lang.CharSequence charSequence12 = null;
        java.io.PrintWriter printWriter13 = printWriter1.append(charSequence12);
        printWriter1.close();
        java.io.PrintWriter printWriter16 = printWriter1.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter18 = printWriter1.append('#');
        printWriter18.print((long) (short) 10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter18);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor21.visitAnnotation("", false);
        java.util.List list25 = aSMifierClassVisitor21.getText();
        aSMifierClassVisitor21.visitEnd();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(list25);
    }

    @Test
    public void test10932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10932");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("hi!");
        java.util.Locale locale29 = null;
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter34 = printWriter32.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj44 = null;
        aSMifierMethodVisitor35.visitLdcInsn(obj44);
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor35.visitJumpInsn((int) (short) 1, label47);
        aSMifierMethodVisitor35.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor35.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierMethodVisitor35.visitAnnotationDefault();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter("hi!");
        printWriter59.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor63.visitTryCatchBlock(label64, label65, label66, "");
        aSMifierMethodVisitor63.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label[] labelArray76 = new org.mockito.asm.Label[] { label75 };
        aSMifierMethodVisitor63.visitTableSwitchInsn(0, (int) (byte) 10, label74, labelArray76);
        java.io.PrintWriter printWriter78 = printWriter59.printf("hi!", (java.lang.Object[]) labelArray76);
        java.lang.String[] strArray80 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor35.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray76, 1, (java.lang.Object[]) strArray80);
        printWriter34.println((java.lang.Object) strArray80);
        java.io.PrintWriter printWriter83 = printWriter26.format(locale29, "hi!", (java.lang.Object[]) strArray80);
        printWriter26.write("hi!");
        printWriter26.print((-1L));
        printWriter26.println(true);
        boolean boolean90 = printWriter26.checkError();
        printWriter26.print(10.0f);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(labelArray76);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test10933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10933");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = printWriter1.append((java.lang.CharSequence) "");
        printWriter22.close();
        java.io.PrintWriter printWriter25 = printWriter22.append(' ');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj35 = null;
        aSMifierMethodVisitor26.visitLdcInsn(obj35);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor26.visitJumpInsn((int) (short) 1, label38);
        aSMifierMethodVisitor26.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor26.visitParameterAnnotation((int) (byte) 1, "", true);
        aSMifierMethodVisitor26.visitInsn((int) (short) 1);
        printWriter22.print((java.lang.Object) aSMifierMethodVisitor26);
        printWriter22.println((long) 100);
        printWriter22.print((double) (byte) 0);
        printWriter22.print((double) (short) 100);
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(annotationVisitor46);
    }

    @Test
    public void test10934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10934");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 0, label18);
        aSMifierMethodVisitor0.visitMaxs(1, (int) '#');
        aSMifierMethodVisitor0.visitIincInsn((-1), 1);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label27);
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "hi!", label32, label33, 1);
        org.junit.Assert.assertNotNull(annotationVisitor16);
    }

    @Test
    public void test10935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10935");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        aSMifierMethodVisitor8.visitTryCatchBlock(label9, label10, label11, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitInsn((int) ' ');
        aSMifierMethodVisitor14.visitIincInsn((int) (byte) 100, (int) (short) 1);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj40 = null;
        aSMifierMethodVisitor31.visitLdcInsn(obj40);
        org.mockito.asm.Label label42 = null;
        int[] intArray49 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor50.visitTryCatchBlock(label51, label52, label53, "");
        aSMifierMethodVisitor50.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label[] labelArray63 = new org.mockito.asm.Label[] { label62 };
        aSMifierMethodVisitor50.visitTableSwitchInsn(0, (int) (byte) 10, label61, labelArray63);
        aSMifierMethodVisitor31.visitLookupSwitchInsn(label42, intArray49, labelArray63);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor66.visitTryCatchBlock(label67, label68, label69, "");
        aSMifierMethodVisitor66.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label[] labelArray79 = new org.mockito.asm.Label[] { label78 };
        aSMifierMethodVisitor66.visitTableSwitchInsn(0, (int) (byte) 10, label77, labelArray79);
        aSMifierMethodVisitor14.visitLookupSwitchInsn(label30, intArray49, labelArray79);
        aSMifierMethodVisitor8.visitLdcInsn((java.lang.Object) label30);
        org.mockito.asm.AnnotationVisitor annotationVisitor83 = aSMifierMethodVisitor8.visitAnnotationDefault();
        printWriter1.println((java.lang.Object) aSMifierMethodVisitor8);
        aSMifierMethodVisitor8.visitCode();
        aSMifierMethodVisitor8.visitEnd();
        org.mockito.asm.Label label87 = null;
        aSMifierMethodVisitor8.visitLabel(label87);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray63);
        org.junit.Assert.assertNotNull(labelArray79);
        org.junit.Assert.assertNotNull(annotationVisitor83);
    }

    @Test
    public void test10936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10936");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) (short) 1);
    }

    @Test
    public void test10937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10937");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.print('a');
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter28.flush();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        aSMifierClassVisitor30.visitSource("hi!", "");
        aSMifierClassVisitor30.visitOuterClass("hi!", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierClassVisitor30.visitAnnotation("", true);
        aSMifierClassVisitor30.visitInnerClass("", "hi!", "", (int) (short) 0);
        aSMifierClassVisitor30.visitInnerClass("", "", "hi!", (int) (short) 0);
        aSMifierClassVisitor30.visitOuterClass("hi!", "", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test10938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10938");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitMaxs((int) '4', (int) (short) -1);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (short) 10);
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor0.visitLabel(label80);
        org.mockito.asm.Label label82 = null;
        org.mockito.asm.Label label83 = null;
        org.mockito.asm.Label label84 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label82, label83, label84, "");
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 1, "hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
    }

    @Test
    public void test10939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10939");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label27 = null;
        int[] intArray34 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        aSMifierMethodVisitor16.visitLookupSwitchInsn(label27, intArray34, labelArray48);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) '4', (int) '#', label15, labelArray48);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label55, label56, (int) (short) 0);
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor62.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label68 = null;
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter("hi!");
        printWriter70.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor74 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        aSMifierMethodVisitor74.visitTryCatchBlock(label75, label76, label77, "");
        aSMifierMethodVisitor74.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label85 = null;
        org.mockito.asm.Label label86 = null;
        org.mockito.asm.Label[] labelArray87 = new org.mockito.asm.Label[] { label86 };
        aSMifierMethodVisitor74.visitTableSwitchInsn(0, (int) (byte) 10, label85, labelArray87);
        java.io.PrintWriter printWriter89 = printWriter70.printf("hi!", (java.lang.Object[]) labelArray87);
        aSMifierMethodVisitor62.visitTableSwitchInsn(1, (int) (short) 10, label68, labelArray87);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) ' ', 10, label61, labelArray87);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 0, 0);
        org.mockito.asm.Label label96 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 10, label96);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(labelArray87);
        org.junit.Assert.assertNotNull(printWriter89);
    }

    @Test
    public void test10940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10940");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLabel(label20);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 1, "", "hi!", "hi!");
    }

    @Test
    public void test10941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10941");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter3, true);
        printWriter5.println(0.0f);
        printWriter5.println("");
        printWriter5.print("");
        org.junit.Assert.assertNotNull(printWriter3);
    }

    @Test
    public void test10942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10942");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        java.io.PrintWriter printWriter36 = printWriter24.append((java.lang.CharSequence) "");
        printWriter36.print("");
        java.io.PrintWriter printWriter40 = printWriter36.append((java.lang.CharSequence) "");
        printWriter36.println((float) 100L);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter("hi!");
        printWriter45.write((-1));
        printWriter45.flush();
        java.util.Locale locale49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray56 = null;
        aSMifierMethodVisitor51.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray54, (int) (short) 1, objArray56);
        java.io.PrintWriter printWriter58 = printWriter45.printf(locale49, "", (java.lang.Object[]) strArray54);
        java.io.PrintWriter printWriter59 = printWriter36.printf("hi!", (java.lang.Object[]) strArray54);
        printWriter36.println((float) (byte) 100);
        printWriter36.println((int) ' ');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(printWriter59);
    }

    @Test
    public void test10943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10943");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        printWriter34.println("");
        printWriter34.print((int) ' ');
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter((java.io.Writer) printWriter34, false);
        printWriter42.println((double) 0L);
        printWriter42.flush();
        printWriter42.println();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test10944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10944");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "hi!", "", "");
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label13, label14, (int) '4');
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 100, label18);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor21.visitTryCatchBlock(label22, label23, label24, "");
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor21.visitLocalVariable("hi!", "hi!", "hi!", label30, label31, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor21.visitAnnotationDefault();
        aSMifierMethodVisitor21.visitMultiANewArrayInsn("hi!", (int) ' ');
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor21.visitAnnotationDefault();
        aSMifierMethodVisitor21.visitCode();
        aSMifierMethodVisitor21.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor21);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.util.List list46 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(list46);
    }

    @Test
    public void test10945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10945");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.println(false);
        printWriter24.println(0);
        printWriter24.close();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor32 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        printWriter24.write((int) (byte) 1);
        printWriter24.write((int) (short) 0);
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter42 = printWriter24.append((java.lang.CharSequence) "", (int) (short) 0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test10946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10946");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        printWriter1.print(0L);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "");
        printWriter9.print('a');
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter15 = printWriter9.append((java.lang.CharSequence) "hi!", (int) (short) -1, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter9);
    }

    @Test
    public void test10947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10947");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.println((float) (short) 0);
        java.io.PrintWriter printWriter7 = printWriter1.append((java.lang.CharSequence) "");
        boolean boolean8 = printWriter1.checkError();
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter10.println((double) (short) 1);
        printWriter10.print(0.0d);
        printWriter10.println((int) (byte) 100);
        org.junit.Assert.assertNotNull(printWriter7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test10948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10948");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor0.visitInsn(100);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 10, (int) (byte) -1);
        java.util.List list23 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(list23);
    }

    @Test
    public void test10949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10949");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 100, (int) (byte) 10);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitInsn((int) (byte) 0);
        java.util.List list24 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor25.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor25.visitLabel(label29);
        aSMifierMethodVisitor25.visitMaxs(100, (int) (short) 10);
        aSMifierMethodVisitor25.visitVarInsn((int) (byte) 0, (int) (byte) 10);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (byte) 0);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 10, (int) '4');
        java.util.List list41 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list41);
    }

    @Test
    public void test10950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10950");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = annotationVisitor19.visitAnnotation("hi!", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor24.visitLabel(label28);
        aSMifierMethodVisitor24.visitFieldInsn((int) (byte) 10, "", "", "");
        aSMifierMethodVisitor24.visitTypeInsn((int) (byte) 1, "");
        java.util.List list38 = aSMifierMethodVisitor24.getText();
        annotationVisitor19.visit("", (java.lang.Object) aSMifierMethodVisitor24);
        aSMifierMethodVisitor24.visitIntInsn((int) 'a', 1);
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor24.visitLineNumber((int) (byte) -1, label44);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(list38);
    }

    @Test
    public void test10951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10951");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        aSMifierMethodVisitor0.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label20, label21, label22, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        printWriter30.print(false);
        java.io.PrintWriter printWriter34 = printWriter30.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter34, true);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        printWriter37.write("");
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        printWriter41.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter45 = printWriter41.append((java.lang.CharSequence) "");
        printWriter37.println((java.lang.Object) printWriter45);
        printWriter37.print((int) '#');
        printWriter37.println();
        printWriter37.println((float) (byte) -1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (byte) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 0, "hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(printWriter45);
        org.junit.Assert.assertNotNull(annotationVisitor55);
    }

    @Test
    public void test10952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10952");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitIincInsn((int) '4', (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label63, label64, 0);
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label67, label68, label69, "");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor59);
    }

    @Test
    public void test10953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10953");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        java.io.PrintWriter printWriter36 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.print((long) 100);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter36);
    }

    @Test
    public void test10954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10954");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor17.visitTryCatchBlock(label18, label19, label20, "");
        aSMifierMethodVisitor17.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj26 = null;
        aSMifierMethodVisitor17.visitLdcInsn(obj26);
        org.mockito.asm.Label label28 = null;
        int[] intArray35 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] { label48 };
        aSMifierMethodVisitor36.visitTableSwitchInsn(0, (int) (byte) 10, label47, labelArray49);
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label28, intArray35, labelArray49);
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label16, intArray35, labelArray52);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 10, "", false);
        org.mockito.asm.Label label62 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitJumpInsn((-1), label62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor60);
    }

    @Test
    public void test10955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10955");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 100);
        aSMifierMethodVisitor0.visitTypeInsn(0, "");
        aSMifierMethodVisitor0.visitIntInsn(10, (int) (short) -1);
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test10956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10956");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        printWriter14.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter19 = printWriter14.format("", (java.lang.Object[]) strArray18);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) strArray18);
        aSMifierMethodVisitor0.visitIntInsn(1, (int) (byte) 1);
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLineNumber(0, label25);
        aSMifierMethodVisitor0.visitMaxs((int) '4', (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((int) (byte) -1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor31);
    }

    @Test
    public void test10957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10957");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        printWriter24.write("hi!");
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        printWriter36.print((java.lang.Object) (short) -1);
        printWriter36.flush();
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        java.util.Locale locale42 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray47 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray49 = null;
        aSMifierMethodVisitor44.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray47, (int) (short) 1, objArray49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor52.visitTryCatchBlock(label53, label54, label55, "");
        aSMifierMethodVisitor52.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray61 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray63 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor52, strArray61, 1.0f };
        java.io.PrintWriter printWriter64 = printWriter41.printf(locale42, "", (java.lang.Object[]) strArray61);
        char[] charArray71 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter64.println(charArray71);
        printWriter36.print(charArray71);
        printWriter24.println(charArray71);
        java.io.PrintWriter printWriter76 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        // The following exception was thrown during execution in test generation
        try {
            printWriter76.write("hi!", (int) ' ', (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 42");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test10958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10958");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println((-1.0d));
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter5.println('4');
        printWriter5.close();
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test10959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10959");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter5.close();
        printWriter5.println((int) (short) 10);
        printWriter5.print((double) (short) 10);
        java.io.PrintWriter printWriter12 = printWriter5.append((java.lang.CharSequence) "");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter12);
    }

    @Test
    public void test10960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10960");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor24.visitLocalVariable("hi!", "hi!", "hi!", label33, label34, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor24.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor24.visitAnnotationDefault();
        annotationVisitor40.visitEnum("", "hi!", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor45 = aSMifierClassVisitor15.visitField((int) '#', "", "", "", (java.lang.Object) "hi!");
        aSMifierClassVisitor15.visitSource("", "");
        aSMifierClassVisitor15.visitInnerClass("hi!", "", "", (int) ' ');
        aSMifierClassVisitor15.visitInnerClass("", "", "", 100);
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierClassVisitor15.visitAnnotation("", true);
        annotationVisitor62.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(annotationVisitor62);
    }

    @Test
    public void test10961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10961");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label19, labelArray20);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, (int) '4');
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 1, "", "hi!", "");
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(labelArray20);
    }

    @Test
    public void test10962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10962");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 0, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) '4', "");
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLabel(label18);
        aSMifierMethodVisitor0.visitFieldInsn(100, "", "", "");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 1);
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label32, label33, (int) (short) 100);
        aSMifierMethodVisitor0.visitVarInsn(10, (int) (byte) 0);
        aSMifierMethodVisitor0.visitVarInsn(1, (int) (short) 100);
        aSMifierMethodVisitor0.visitMaxs((int) (short) -1, (int) (short) 1);
    }

    @Test
    public void test10963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10963");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        java.util.List list12 = aSMifierMethodVisitor0.getText();
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        java.util.Locale locale15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray20 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray22 = null;
        aSMifierMethodVisitor17.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray20, (int) (short) 1, objArray22);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor25.visitTryCatchBlock(label26, label27, label28, "");
        aSMifierMethodVisitor25.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray34 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray36 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor25, strArray34, 1.0f };
        java.io.PrintWriter printWriter37 = printWriter14.printf(locale15, "", (java.lang.Object[]) strArray34);
        char[] charArray44 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter37.println(charArray44);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.Writer) printWriter37, true);
        java.io.PrintWriter printWriter49 = printWriter37.append((java.lang.CharSequence) "");
        printWriter37.println(false);
        aSMifierMethodVisitor0.print(printWriter37);
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        annotationVisitor55.visitEnum("hi!", "", "hi!");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(annotationVisitor55);
    }

    @Test
    public void test10964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10964");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        printWriter1.print((long) (byte) 1);
        java.io.PrintWriter printWriter18 = printWriter1.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter20 = printWriter18.append('#');
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.write((-1));
        printWriter22.flush();
        java.util.Locale locale26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray31 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray33 = null;
        aSMifierMethodVisitor28.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray31, (int) (short) 1, objArray33);
        java.io.PrintWriter printWriter35 = printWriter22.printf(locale26, "", (java.lang.Object[]) strArray31);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter22);
        aSMifierClassVisitor36.visitEnd();
        aSMifierClassVisitor36.visitSource("", "hi!");
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor36.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray46);
        aSMifierClassVisitor36.visitInnerClass("", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray60 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray62 = null;
        aSMifierMethodVisitor57.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray60, (int) (short) 1, objArray62);
        org.mockito.asm.MethodVisitor methodVisitor64 = aSMifierClassVisitor36.visitMethod((int) (short) 0, "", "", "hi!", strArray60);
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter73 = printWriter71.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor74 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter73);
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = aSMifierClassVisitor74.visitAnnotation("hi!", true);
        java.lang.String[] strArray83 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor74.visit(1, (int) (short) 10, "hi!", "", "", strArray83);
        aSMifierClassVisitor36.visit((-1), (int) (byte) 10, "", "", "", strArray83);
        aSMifierClassVisitor36.visitOuterClass("hi!", "hi!", "hi!");
        aSMifierClassVisitor36.visitSource("hi!", "hi!");
        aSMifierClassVisitor36.visitInnerClass("hi!", "hi!", "", (int) (byte) -1);
        printWriter18.print((java.lang.Object) "hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodVisitor64);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(annotationVisitor77);
        org.junit.Assert.assertNotNull(strArray83);
    }

    @Test
    public void test10965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10965");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label74, label75, label76, "hi!");
        java.util.List list79 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor83 = annotationVisitor80.visitAnnotation("", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(list79);
        org.junit.Assert.assertNotNull(annotationVisitor80);
        org.junit.Assert.assertNotNull(annotationVisitor83);
    }

    @Test
    public void test10966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10966");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label28, label29, (int) (short) 1);
        aSMifierMethodVisitor0.visitIntInsn((int) '#', (int) 'a');
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 100, (int) (byte) 0);
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 0, (int) (short) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(annotationVisitor50);
    }

    @Test
    public void test10967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10967");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.println(100.0f);
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter("hi!");
        java.util.Locale locale8 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray13 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray15 = null;
        aSMifierMethodVisitor10.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray13, (int) (short) 1, objArray15);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor18.visitTryCatchBlock(label19, label20, label21, "");
        aSMifierMethodVisitor18.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray27 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray29 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor18, strArray27, 1.0f };
        java.io.PrintWriter printWriter30 = printWriter7.printf(locale8, "", (java.lang.Object[]) strArray27);
        char[] charArray37 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter30.println(charArray37);
        printWriter1.println(charArray37);
        printWriter1.write("");
        printWriter1.println((float) 10);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test10968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10968");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, (int) (short) 10);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        aSMifierMethodVisitor0.visitIntInsn(1, (int) (byte) -1);
    }

    @Test
    public void test10969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10969");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list22 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) -1, label24);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 10, (-1));
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label32, label33, 0);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list22);
    }

    @Test
    public void test10970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10970");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        printWriter34.println("");
        printWriter34.print((int) ' ');
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter((java.io.Writer) printWriter34, false);
        java.io.PrintWriter printWriter44 = printWriter34.append((java.lang.CharSequence) "hi!");
        printWriter44.print(10.0d);
        printWriter44.print((float) (-1));
        printWriter44.println('#');
        java.io.PrintWriter printWriter54 = printWriter44.append((java.lang.CharSequence) "hi!", (int) (byte) 1, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            printWriter54.write("hi!", (int) (short) 10, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 110");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(printWriter54);
    }

    @Test
    public void test10971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10971");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor28.visitLocalVariable("hi!", "hi!", "hi!", label37, label38, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor28.visitAnnotation("", true);
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj54 = null;
        aSMifierMethodVisitor45.visitLdcInsn(obj54);
        org.mockito.asm.Label label56 = null;
        int[] intArray63 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] { label76 };
        aSMifierMethodVisitor64.visitTableSwitchInsn(0, (int) (byte) 10, label75, labelArray77);
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label56, intArray63, labelArray77);
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label44, intArray63, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter26.printf("hi!", (java.lang.Object[]) labelArray80);
        java.io.PrintWriter printWriter84 = printWriter82.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor85 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter84);
        java.io.PrintWriter printWriter86 = new java.io.PrintWriter((java.io.Writer) printWriter84);
        printWriter84.println((long) (short) 0);
        printWriter84.print((long) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter94 = printWriter84.append((java.lang.CharSequence) "", 1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test10972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10972");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println((double) (-1L));
        java.util.Locale locale9 = null;
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        printWriter12.flush();
        java.util.Locale locale16 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor18.visitTryCatchBlock(label19, label20, label21, "");
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor18.visitLocalVariable("hi!", "hi!", "hi!", label27, label28, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor18.visitAnnotation("", true);
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj44 = null;
        aSMifierMethodVisitor35.visitLdcInsn(obj44);
        org.mockito.asm.Label label46 = null;
        int[] intArray53 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor54.visitTryCatchBlock(label55, label56, label57, "");
        aSMifierMethodVisitor54.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label[] labelArray67 = new org.mockito.asm.Label[] { label66 };
        aSMifierMethodVisitor54.visitTableSwitchInsn(0, (int) (byte) 10, label65, labelArray67);
        aSMifierMethodVisitor35.visitLookupSwitchInsn(label46, intArray53, labelArray67);
        org.mockito.asm.Label[] labelArray70 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor18.visitLookupSwitchInsn(label34, intArray53, labelArray70);
        java.io.PrintWriter printWriter72 = printWriter12.format(locale16, "hi!", (java.lang.Object[]) labelArray70);
        java.io.PrintWriter printWriter73 = printWriter1.format(locale9, "hi!", (java.lang.Object[]) labelArray70);
        java.io.PrintWriter printWriter74 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.print(0);
        printWriter1.close();
        printWriter1.println((double) (short) 1);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray67);
        org.junit.Assert.assertNotNull(labelArray70);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(printWriter73);
    }

    @Test
    public void test10973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10973");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("hi!", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
    }

    @Test
    public void test10974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10974");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "");
        aSMifierClassVisitor15.visitInnerClass("", "", "", (int) (short) 0);
        java.lang.Object obj29 = null;
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) ' ', "hi!", "", "", obj29);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
    }

    @Test
    public void test10975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10975");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label27, label28, (int) (byte) 10);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list32 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, (int) (short) 0);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, (int) (short) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor39.visitFieldInsn((int) 'a', "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list32);
    }

    @Test
    public void test10976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10976");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        printWriter7.print((long) (short) 1);
        printWriter7.print((double) 10);
        printWriter7.println('4');
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test10977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10977");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        aSMifierMethodVisitor0.visitMaxs(0, (int) '4');
    }

    @Test
    public void test10978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10978");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label20, label21, label22, "hi!");
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        printWriter26.write((-1));
        printWriter26.flush();
        java.util.Locale locale30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray37 = null;
        aSMifierMethodVisitor32.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray35, (int) (short) 1, objArray37);
        java.io.PrintWriter printWriter39 = printWriter26.printf(locale30, "", (java.lang.Object[]) strArray35);
        aSMifierMethodVisitor0.print(printWriter39);
        aSMifierMethodVisitor0.visitMethodInsn(10, "hi!", "", "");
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label46, label47, label48, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(0, "hi!", "hi!", "");
        aSMifierMethodVisitor51.visitVarInsn((int) (byte) 10, 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor51.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor51);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 1, "", "", "hi!");
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label70, label71, (int) (short) 1);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 100, label76);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(annotationVisitor60);
    }

    @Test
    public void test10979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10979");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        char[] charArray56 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter49.println(charArray56);
        printWriter24.print(charArray56);
        printWriter24.print(true);
        java.io.PrintWriter printWriter62 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter("hi!");
        java.util.Locale locale65 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray70 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray72 = null;
        aSMifierMethodVisitor67.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray70, (int) (short) 1, objArray72);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor75 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor75.visitTryCatchBlock(label76, label77, label78, "");
        aSMifierMethodVisitor75.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray84 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray86 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor75, strArray84, 1.0f };
        java.io.PrintWriter printWriter87 = printWriter64.printf(locale65, "", (java.lang.Object[]) strArray84);
        printWriter87.println();
        printWriter62.print((java.lang.Object) printWriter87);
        printWriter87.println((int) (byte) 1);
        printWriter87.println(false);
        printWriter87.println((-1.0d));
        printWriter87.print("hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertNotNull(printWriter87);
    }

    @Test
    public void test10980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10980");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor16.visitJumpInsn((int) (short) 1, label28);
        aSMifierMethodVisitor16.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor16.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor16.visitAnnotationDefault();
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] { label56 };
        aSMifierMethodVisitor44.visitTableSwitchInsn(0, (int) (byte) 10, label55, labelArray57);
        java.io.PrintWriter printWriter59 = printWriter40.printf("hi!", (java.lang.Object[]) labelArray57);
        java.lang.String[] strArray61 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor16.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray57, 1, (java.lang.Object[]) strArray61);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 1, (int) (byte) 100, label15, labelArray57);
        aSMifierMethodVisitor0.visitMethodInsn(1, "", "", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs(0, 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "hi!", true);
        org.mockito.asm.Label label77 = null;
        aSMifierMethodVisitor0.visitLabel(label77);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(labelArray57);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(annotationVisitor76);
    }

    @Test
    public void test10981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10981");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter7.write("hi!");
        printWriter7.println(' ');
        java.util.Locale locale12 = null;
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        java.util.Locale locale16 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = null;
        aSMifierMethodVisitor18.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray21, (int) (short) 1, objArray23);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray37 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor26, strArray35, 1.0f };
        java.io.PrintWriter printWriter38 = printWriter15.printf(locale16, "", (java.lang.Object[]) strArray35);
        java.io.PrintWriter printWriter39 = printWriter7.printf(locale12, "", (java.lang.Object[]) strArray35);
        printWriter39.println(false);
        printWriter39.flush();
        boolean boolean43 = printWriter39.checkError();
        printWriter39.println((int) 'a');
        printWriter39.println();
        printWriter39.print(1.0d);
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter((java.io.Writer) printWriter39);
        printWriter39.close();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test10982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10982");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter31.format("", (java.lang.Object[]) strArray35);
        aSMifierClassVisitor15.visit((int) (byte) -1, (int) (short) 0, "", "", "hi!", strArray35);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.write((-1));
        printWriter43.flush();
        java.util.Locale locale47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray54 = null;
        aSMifierMethodVisitor49.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray52, (int) (short) 1, objArray54);
        java.io.PrintWriter printWriter56 = printWriter43.printf(locale47, "", (java.lang.Object[]) strArray52);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor57 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter43);
        aSMifierClassVisitor57.visitEnd();
        aSMifierClassVisitor57.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor57.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierClassVisitor57.visitAnnotation("hi!", false);
        aSMifierClassVisitor57.visitEnd();
        java.lang.String[] strArray72 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        org.mockito.asm.MethodVisitor methodVisitor73 = aSMifierClassVisitor57.visitMethod(0, "", "hi!", "hi!", strArray72);
        org.mockito.asm.MethodVisitor methodVisitor74 = aSMifierClassVisitor15.visitMethod((int) (byte) 100, "", "hi!", "", strArray72);
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.Attribute attribute76 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor15.visitAttribute(attribute76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(methodVisitor73);
        org.junit.Assert.assertNotNull(methodVisitor74);
    }

    @Test
    public void test10983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10983");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label27 = null;
        int[] intArray34 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        aSMifierMethodVisitor16.visitLookupSwitchInsn(label27, intArray34, labelArray48);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) '4', (int) '#', label15, labelArray48);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label55, label56, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 10, "", "", "");
        aSMifierMethodVisitor0.visitMethodInsn((int) '4', "", "hi!", "hi!");
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor0.visitLabel(label72);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray48);
    }

    @Test
    public void test10984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10984");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = null;
        aSMifierMethodVisitor36.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray39, (int) (short) 1, objArray41);
        org.mockito.asm.MethodVisitor methodVisitor43 = aSMifierClassVisitor15.visitMethod((int) (short) 0, "", "", "hi!", strArray39);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitOuterClass("hi!", "hi!", "hi!");
        java.lang.String[] strArray59 = null;
        org.mockito.asm.MethodVisitor methodVisitor60 = aSMifierClassVisitor15.visitMethod((int) '4', "", "hi!", "hi!", strArray59);
        java.util.List list61 = aSMifierClassVisitor15.text;
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "");
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(methodVisitor60);
        org.junit.Assert.assertNotNull(list61);
    }

    @Test
    public void test10985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10985");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label21, label22, label23, "");
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label29, label30, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", false);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label38);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter("hi!");
        printWriter47.write((-1));
        printWriter47.flush();
        java.util.Locale locale51 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray56 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray58 = null;
        aSMifierMethodVisitor53.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray56, (int) (short) 1, objArray58);
        java.io.PrintWriter printWriter60 = printWriter47.printf(locale51, "", (java.lang.Object[]) strArray56);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor61 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter47);
        aSMifierClassVisitor61.visitEnd();
        aSMifierClassVisitor61.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor61.visitEnd();
        java.util.List list68 = aSMifierClassVisitor61.getText();
        java.util.List list69 = aSMifierClassVisitor61.text;
        java.lang.String[] strArray74 = null;
        org.mockito.asm.MethodVisitor methodVisitor75 = aSMifierClassVisitor61.visitMethod((int) '4', "hi!", "", "hi!", strArray74);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) methodVisitor75);
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIincInsn(0, 0);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(methodVisitor75);
        org.junit.Assert.assertNotNull(annotationVisitor77);
    }

    @Test
    public void test10986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10986");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.print('a');
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter28.flush();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        org.mockito.asm.MethodVisitor methodVisitor36 = aSMifierClassVisitor30.visitMethod((int) (short) 10, "hi!", "", "", strArray35);
        aSMifierClassVisitor30.visitInnerClass("", "hi!", "", (int) (short) 0);
        aSMifierClassVisitor30.visitOuterClass("hi!", "", "");
        aSMifierClassVisitor30.visitInnerClass("hi!", "", "", 100);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(methodVisitor36);
    }

    @Test
    public void test10987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10987");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '#', label21);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label23, label24, label25, "");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn((-1), (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10988");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        printWriter7.flush();
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        printWriter10.print(false);
        java.io.PrintWriter printWriter14 = printWriter10.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter((java.io.Writer) printWriter10);
        printWriter15.println((double) 0L);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter("hi!");
        printWriter19.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter23 = printWriter19.append((java.lang.CharSequence) "");
        printWriter19.print((int) (byte) -1);
        printWriter19.print((double) (byte) 1);
        printWriter19.close();
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter((java.io.Writer) printWriter19);
        boolean boolean30 = printWriter19.checkError();
        printWriter19.println((long) (byte) 100);
        printWriter19.println(false);
        java.lang.Object obj35 = null;
        printWriter19.println(obj35);
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter("hi!");
        printWriter38.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter42 = printWriter38.append((java.lang.CharSequence) "");
        printWriter38.print((int) (byte) -1);
        printWriter38.print((double) (byte) 1);
        printWriter38.close();
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter((java.io.Writer) printWriter38);
        boolean boolean49 = printWriter38.checkError();
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        printWriter51.print((java.lang.Object) (short) -1);
        printWriter51.flush();
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter("hi!");
        java.util.Locale locale57 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray62 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray64 = null;
        aSMifierMethodVisitor59.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray62, (int) (short) 1, objArray64);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor67.visitTryCatchBlock(label68, label69, label70, "");
        aSMifierMethodVisitor67.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray76 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray78 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor67, strArray76, 1.0f };
        java.io.PrintWriter printWriter79 = printWriter56.printf(locale57, "", (java.lang.Object[]) strArray76);
        char[] charArray86 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter79.println(charArray86);
        printWriter51.print(charArray86);
        printWriter38.write(charArray86, (-1), (int) (short) 10);
        printWriter19.println(charArray86);
        printWriter15.println(charArray86);
        printWriter7.print(charArray86);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test10989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10989");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter6.println();
        printWriter6.print((float) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor11.visitTryCatchBlock(label12, label13, label14, "");
        aSMifierMethodVisitor11.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj20 = null;
        aSMifierMethodVisitor11.visitLdcInsn(obj20);
        aSMifierMethodVisitor11.visitInsn((int) ' ');
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor11.visitJumpInsn(100, label25);
        aSMifierMethodVisitor11.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label30 = null;
        int[] intArray31 = new int[] {};
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter37 = printWriter33.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor39.visitJumpInsn((int) (short) 1, label51);
        aSMifierMethodVisitor39.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label[] labelArray59 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label58, labelArray59);
        java.io.PrintWriter printWriter61 = printWriter37.printf("", (java.lang.Object[]) labelArray59);
        aSMifierMethodVisitor11.visitLookupSwitchInsn(label30, intArray31, labelArray59);
        java.io.PrintWriter printWriter63 = printWriter6.printf("", (java.lang.Object[]) labelArray59);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter6, true);
        printWriter6.print("");
        java.io.PrintWriter printWriter71 = printWriter6.append((java.lang.CharSequence) "hi!", 0, 0);
        printWriter6.println((float) (byte) 100);
        printWriter6.println("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor76 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor76.visitInnerClass("hi!", "hi!", "", 0);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(labelArray59);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(printWriter71);
    }

    @Test
    public void test10990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10990");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.io.PrintWriter printWriter33 = printWriter26.append('4');
        printWriter26.flush();
        java.io.PrintWriter printWriter36 = printWriter26.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor37 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter36);
        printWriter36.println();
        printWriter36.write(0);
        printWriter36.close();
        printWriter36.println((int) (byte) 100);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(printWriter36);
    }

    @Test
    public void test10991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10991");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "", "hi!", (int) 'a');
        java.util.List list34 = aSMifierClassVisitor28.getText();
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        java.util.Locale locale41 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = null;
        aSMifierMethodVisitor43.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray46, (int) (short) 1, objArray48);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor51.visitTryCatchBlock(label52, label53, label54, "");
        aSMifierMethodVisitor51.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray60 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray62 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor51, strArray60, 1.0f };
        java.io.PrintWriter printWriter63 = printWriter40.printf(locale41, "", (java.lang.Object[]) strArray60);
        printWriter63.println();
        printWriter63.println((long) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter("hi!");
        printWriter69.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter73 = printWriter69.append((java.lang.CharSequence) "");
        printWriter69.print((int) (byte) -1);
        printWriter69.write("", (int) (byte) 1, (int) (short) 0);
        printWriter69.print((double) (byte) -1);
        aSMifierMethodVisitor67.print(printWriter69);
        printWriter69.write((int) (byte) 100);
        printWriter63.println((java.lang.Object) (byte) 100);
        org.mockito.asm.FieldVisitor fieldVisitor86 = aSMifierClassVisitor28.visitField((int) '#', "", "", "", (java.lang.Object) printWriter63);
        aSMifierClassVisitor28.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor90 = aSMifierClassVisitor28.visitAnnotation("hi!", false);
        java.io.PrintWriter printWriter91 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor28.print(printWriter91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(fieldVisitor86);
        org.junit.Assert.assertNotNull(annotationVisitor90);
    }

    @Test
    public void test10992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10992");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.write((int) (byte) 0);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter24.println((int) (short) 1);
        boolean boolean32 = printWriter24.checkError();
        printWriter24.print((int) (byte) -1);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test10993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10993");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter24 = printWriter22.append('a');
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter24);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test10994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10994");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 100, (int) (short) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.util.List list68 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitTypeInsn((int) '4', "");
        org.mockito.asm.Attribute attribute72 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(list68);
    }

    @Test
    public void test10995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10995");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label22);
        aSMifierMethodVisitor0.visitInsn(100);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) -1);
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', 10);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor28);
    }

    @Test
    public void test10996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10996");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        printWriter24.print((float) (byte) 0);
        java.io.PrintWriter printWriter29 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter31.flush();
        printWriter31.println((float) (short) 100);
        printWriter31.print("hi!");
        printWriter31.print((float) (short) 10);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter44 = printWriter40.append((java.lang.CharSequence) "");
        printWriter40.print((double) 1);
        java.io.PrintWriter printWriter48 = printWriter40.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter((java.io.Writer) printWriter48, false);
        printWriter50.println((long) (byte) 100);
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter((java.io.Writer) printWriter50, false);
        java.io.PrintWriter printWriter56 = printWriter50.append((java.lang.CharSequence) "");
        printWriter31.print((java.lang.Object) printWriter50);
        java.io.PrintWriter printWriter59 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(printWriter59);
    }

    @Test
    public void test10997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10997");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        printWriter34.println((long) (short) -1);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test10998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10998");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitMaxs((int) '4', (int) (short) -1);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
    }

    @Test
    public void test10999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10999");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append(' ');
        printWriter28.println((float) '4');
        printWriter28.println(0);
        printWriter28.println((float) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj44 = null;
        aSMifierMethodVisitor35.visitLdcInsn(obj44);
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor35.visitJumpInsn((int) (short) 1, label47);
        aSMifierMethodVisitor35.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor35.visitJumpInsn((int) (short) 1, label53);
        aSMifierMethodVisitor35.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor35.visitMaxs((int) (short) 1, (int) '#');
        aSMifierMethodVisitor35.visitCode();
        printWriter28.println((java.lang.Object) aSMifierMethodVisitor35);
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor35.visitParameterAnnotation(100, "hi!", false);
        annotationVisitor68.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(annotationVisitor68);
    }

    @Test
    public void test11000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test11000");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        aSMifierMethodVisitor0.visitMethodInsn(10, "", "hi!", "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label17, label18, (int) (short) -1);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label25, label26, (int) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, (int) (byte) 0);
        aSMifierMethodVisitor0.visitIincInsn((int) ' ', (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor39);
    }
}

