import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest15 {

    public static boolean debug = false;

    @Test
    public void test07501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07501");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor0.visitMaxs(100, (int) '4');
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 0);
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label20, label21, (int) (byte) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitParameterAnnotation((int) ' ', "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitIntInsn(10, (int) '4');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 10);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor30);
    }

    @Test
    public void test07502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07502");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) ' ', label20);
        aSMifierMethodVisitor0.visitIincInsn(100, 10);
        aSMifierMethodVisitor0.visitMaxs(10, 10);
        aSMifierMethodVisitor0.visitVarInsn((int) '#', 100);
        aSMifierMethodVisitor0.visitVarInsn(0, 0);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 0);
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test07503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07503");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.println(0.0f);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        aSMifierClassVisitor29.visitSource("", "");
        aSMifierClassVisitor29.visitOuterClass("", "hi!", "");
        aSMifierClassVisitor29.visitInnerClass("", "", "", 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierClassVisitor29.visitAnnotation("", false);
        aSMifierClassVisitor29.visitOuterClass("hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierClassVisitor29.visitAnnotation("", true);
        java.lang.Class<?> wildcardClass52 = annotationVisitor51.getClass();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test07504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07504");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        org.mockito.asm.Label label7 = null;
        aSMifierMethodVisitor0.visitLabel(label7);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, (int) 'a');
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) (byte) 10);
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test07505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07505");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label[] labelArray27 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor7.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label26, labelArray27);
        java.io.PrintWriter printWriter29 = printWriter5.printf("", (java.lang.Object[]) labelArray27);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter29, true);
        printWriter29.println((float) (-1L));
        printWriter29.print((double) (short) 100);
        printWriter29.println('a');
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(labelArray27);
        org.junit.Assert.assertNotNull(printWriter29);
    }

    @Test
    public void test07506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07506");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print(false);
        printWriter39.println(false);
        printWriter39.print(0L);
        java.io.PrintWriter printWriter47 = printWriter39.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("hi!");
        printWriter50.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter55 = printWriter50.format("", (java.lang.Object[]) strArray54);
        java.io.PrintWriter printWriter56 = printWriter39.printf("hi!", (java.lang.Object[]) strArray54);
        aSMifierClassVisitor28.visit((int) ' ', (int) '#', "", "", "hi!", strArray54);
        java.lang.String[] strArray62 = null;
        org.mockito.asm.MethodVisitor methodVisitor63 = aSMifierClassVisitor28.visitMethod((int) (short) 100, "hi!", "", "hi!", strArray62);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierClassVisitor28.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(methodVisitor63);
        org.junit.Assert.assertNotNull(annotationVisitor66);
    }

    @Test
    public void test07507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07507");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((-1), 100);
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor0.visitLineNumber(100, label71);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn(1, (-1));
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label80, label81, 10);
        org.mockito.asm.Label label85 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label85);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, (int) 'a');
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(annotationVisitor88);
    }

    @Test
    public void test07508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07508");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, 1);
        java.util.List list23 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label27, label28, label29, "hi!");
        aSMifierMethodVisitor0.visitInsn((int) (short) 10);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label37, label38, (int) (short) 100);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        printWriter42.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor46.visitTryCatchBlock(label47, label48, label49, "");
        aSMifierMethodVisitor46.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label[] labelArray59 = new org.mockito.asm.Label[] { label58 };
        aSMifierMethodVisitor46.visitTableSwitchInsn(0, (int) (byte) 10, label57, labelArray59);
        java.io.PrintWriter printWriter61 = printWriter42.printf("hi!", (java.lang.Object[]) labelArray59);
        java.io.PrintWriter printWriter63 = printWriter42.append((java.lang.CharSequence) "");
        printWriter63.close();
        java.io.PrintWriter printWriter66 = printWriter63.append(' ');
        printWriter66.print((float) (short) 1);
        printWriter66.flush();
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter((java.io.Writer) printWriter66, false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) false);
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(labelArray59);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(annotationVisitor75);
    }

    @Test
    public void test07509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07509");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitSource("hi!", "hi!");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter("hi!");
        java.util.Locale locale50 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray55 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray57 = null;
        aSMifierMethodVisitor52.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray55, (int) (short) 1, objArray57);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor60.visitTryCatchBlock(label61, label62, label63, "");
        aSMifierMethodVisitor60.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray69 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray71 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor60, strArray69, 1.0f };
        java.io.PrintWriter printWriter72 = printWriter49.printf(locale50, "", (java.lang.Object[]) strArray69);
        char[] charArray79 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter72.println(charArray79);
        printWriter47.print(charArray79);
        printWriter47.print(true);
        java.io.PrintWriter printWriter85 = printWriter47.append((java.lang.CharSequence) "");
        printWriter47.print((float) '4');
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor90 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter47);
        printWriter47.println((-1));
        org.mockito.asm.FieldVisitor fieldVisitor93 = aSMifierClassVisitor15.visitField((int) ' ', "", "hi!", "", (java.lang.Object) (-1));
        org.mockito.asm.Attribute attribute94 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor93.visitAttribute(attribute94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(fieldVisitor93);
    }

    @Test
    public void test07510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07510");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter("hi!");
        printWriter5.println((-1.0d));
        printWriter1.print((java.lang.Object) (-1.0d));
        java.io.PrintWriter printWriter10 = printWriter1.append('a');
        printWriter10.print((double) ' ');
        printWriter10.print(true);
        java.io.PrintWriter printWriter18 = printWriter10.append((java.lang.CharSequence) "hi!", 0, 0);
        java.io.PrintWriter printWriter20 = printWriter18.append('4');
        printWriter20.print('#');
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(printWriter20);
    }

    @Test
    public void test07511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07511");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter1.write((int) (short) 1);
        printWriter1.write(0);
        java.io.PrintWriter printWriter15 = printWriter1.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("hi!");
        java.util.Locale locale18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray23 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray25 = null;
        aSMifierMethodVisitor20.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray23, (int) (short) 1, objArray25);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray37 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray39 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor28, strArray37, 1.0f };
        java.io.PrintWriter printWriter40 = printWriter17.printf(locale18, "", (java.lang.Object[]) strArray37);
        char[] charArray47 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter40.println(charArray47);
        char[] charArray49 = new char[] {};
        printWriter40.print(charArray49);
        printWriter1.print(charArray49);
        java.io.PrintWriter printWriter53 = printWriter1.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.flush();
        printWriter1.flush();
        printWriter1.println(false);
        printWriter1.print(true);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[]");
        org.junit.Assert.assertNotNull(printWriter53);
    }

    @Test
    public void test07512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07512");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter1.print(false);
        java.lang.CharSequence charSequence12 = null;
        java.io.PrintWriter printWriter13 = printWriter1.append(charSequence12);
        printWriter1.close();
        java.io.PrintWriter printWriter16 = printWriter1.append((java.lang.CharSequence) "");
        printWriter16.write((int) 'a');
        printWriter16.flush();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(printWriter16);
    }

    @Test
    public void test07513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07513");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) -1, "", true);
        annotationVisitor22.visitEnum("", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = annotationVisitor22.visitArray("");
        annotationVisitor22.visitEnum("", "hi!", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor28);
    }

    @Test
    public void test07514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07514");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray5 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter6 = printWriter1.format("", (java.lang.Object[]) strArray5);
        printWriter6.println('a');
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        java.util.Locale locale11 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray16 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray18 = null;
        aSMifierMethodVisitor13.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray16, (int) (short) 1, objArray18);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor21.visitTryCatchBlock(label22, label23, label24, "");
        aSMifierMethodVisitor21.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor21, strArray30, 1.0f };
        java.io.PrintWriter printWriter33 = printWriter10.printf(locale11, "", (java.lang.Object[]) strArray30);
        printWriter33.println();
        printWriter33.println((long) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter43 = printWriter39.append((java.lang.CharSequence) "");
        printWriter39.print((int) (byte) -1);
        printWriter39.write("", (int) (byte) 1, (int) (short) 0);
        printWriter39.print((double) (byte) -1);
        aSMifierMethodVisitor37.print(printWriter39);
        printWriter39.write((int) (byte) 100);
        printWriter33.println((java.lang.Object) (byte) 100);
        printWriter33.println((int) 'a');
        java.io.PrintWriter printWriter59 = printWriter33.append('#');
        printWriter59.println("");
        printWriter59.write("", (int) (short) 10, 0);
        java.io.PrintWriter printWriter66 = new java.io.PrintWriter((java.io.Writer) printWriter59);
        printWriter6.print((java.lang.Object) printWriter66);
        java.io.PrintWriter printWriter68 = new java.io.PrintWriter((java.io.Writer) printWriter6);
        printWriter6.print(false);
        printWriter6.println((float) (short) 0);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(printWriter59);
    }

    @Test
    public void test07515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07515");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println((float) (byte) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append(' ');
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter("hi!");
        printWriter7.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter11 = printWriter7.append((java.lang.CharSequence) "");
        printWriter7.print((double) 1);
        java.io.PrintWriter printWriter15 = printWriter7.append((java.lang.CharSequence) "hi!");
        printWriter7.print(false);
        java.lang.CharSequence charSequence18 = null;
        java.io.PrintWriter printWriter19 = printWriter7.append(charSequence18);
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter((java.io.Writer) printWriter19);
        printWriter19.flush();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print(false);
        printWriter24.println(false);
        boolean boolean29 = printWriter24.checkError();
        printWriter24.print((float) (byte) 10);
        printWriter24.print(0.0f);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter34.print((double) 0.0f);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor38.visitTryCatchBlock(label39, label40, label41, "");
        aSMifierMethodVisitor38.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj47 = null;
        aSMifierMethodVisitor38.visitLdcInsn(obj47);
        aSMifierMethodVisitor38.visitEnd();
        aSMifierMethodVisitor38.visitMaxs((int) (byte) 0, (int) (short) 1);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor56.visitTryCatchBlock(label57, label58, label59, "");
        aSMifierMethodVisitor56.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj65 = null;
        aSMifierMethodVisitor56.visitLdcInsn(obj65);
        org.mockito.asm.Label label67 = null;
        int[] intArray74 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor75 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor75.visitTryCatchBlock(label76, label77, label78, "");
        aSMifierMethodVisitor75.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label86 = null;
        org.mockito.asm.Label label87 = null;
        org.mockito.asm.Label[] labelArray88 = new org.mockito.asm.Label[] { label87 };
        aSMifierMethodVisitor75.visitTableSwitchInsn(0, (int) (byte) 10, label86, labelArray88);
        aSMifierMethodVisitor56.visitLookupSwitchInsn(label67, intArray74, labelArray88);
        aSMifierMethodVisitor38.visitTableSwitchInsn((int) '4', (int) (short) 10, label55, labelArray88);
        java.io.PrintWriter printWriter92 = printWriter34.format("", (java.lang.Object[]) labelArray88);
        java.io.PrintWriter printWriter93 = printWriter19.format("", (java.lang.Object[]) labelArray88);
        printWriter5.print((java.lang.Object) printWriter19);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter11);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray88);
        org.junit.Assert.assertNotNull(printWriter92);
        org.junit.Assert.assertNotNull(printWriter93);
    }

    @Test
    public void test07516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07516");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor7.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor7.visitAnnotationDefault();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        java.io.PrintWriter printWriter50 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray48);
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor7.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray48, 1, (java.lang.Object[]) strArray52);
        java.io.PrintWriter printWriter54 = printWriter1.format("hi!", (java.lang.Object[]) strArray52);
        printWriter54.println((long) 1);
        java.io.PrintWriter printWriter58 = printWriter54.append((java.lang.CharSequence) "");
        printWriter54.println((int) 'a');
        printWriter54.println('#');
        printWriter54.print((float) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter68 = printWriter54.append((java.lang.CharSequence) "", (int) (short) 1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(printWriter58);
    }

    @Test
    public void test07517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07517");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 1, "", true);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) 'a', label22);
        aSMifierMethodVisitor0.visitVarInsn((int) ' ', (int) (byte) -1);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test07518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07518");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 100, label14);
        aSMifierMethodVisitor0.visitMaxs(10, (int) ' ');
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, (int) (byte) 1);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) (short) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, (int) (short) 10);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor25);
    }

    @Test
    public void test07519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07519");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label18);
        aSMifierMethodVisitor0.visitFieldInsn(1, "", "", "");
        aSMifierMethodVisitor0.visitIincInsn((-1), 10);
        aSMifierMethodVisitor0.visitInsn((int) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Attribute attribute35 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test07520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07520");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter1.print(false);
        java.lang.CharSequence charSequence12 = null;
        java.io.PrintWriter printWriter13 = printWriter1.append(charSequence12);
        printWriter1.close();
        java.io.PrintWriter printWriter16 = printWriter1.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter18 = printWriter1.append('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor19 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter18);
        aSMifierClassVisitor19.visitSource("", "hi!");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(printWriter18);
    }

    @Test
    public void test07521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07521");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 10, 0);
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter17 = printWriter15.append('a');
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter17, true);
        printWriter17.println(10);
        printWriter17.close();
        java.io.PrintWriter printWriter26 = printWriter17.append((java.lang.CharSequence) "", 0, 0);
        printWriter26.print('a');
        printWriter26.println("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn((-1), (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter17);
        org.junit.Assert.assertNotNull(printWriter26);
    }

    @Test
    public void test07522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07522");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        printWriter7.print(0.0d);
        java.util.Locale locale10 = null;
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter15 = printWriter13.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor16.visitJumpInsn((int) (short) 1, label28);
        aSMifierMethodVisitor16.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor16.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor16.visitAnnotationDefault();
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] { label56 };
        aSMifierMethodVisitor44.visitTableSwitchInsn(0, (int) (byte) 10, label55, labelArray57);
        java.io.PrintWriter printWriter59 = printWriter40.printf("hi!", (java.lang.Object[]) labelArray57);
        java.lang.String[] strArray61 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor16.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray57, 1, (java.lang.Object[]) strArray61);
        printWriter15.println((java.lang.Object) strArray61);
        java.io.PrintWriter printWriter64 = printWriter7.printf(locale10, "hi!", (java.lang.Object[]) strArray61);
        printWriter64.print((long) 0);
        printWriter64.println((long) 100);
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter((java.io.Writer) printWriter64, true);
        boolean boolean71 = printWriter70.checkError();
        printWriter70.println(false);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(labelArray57);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test07523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07523");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation(100, "", true);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 1, (int) '#');
        aSMifierMethodVisitor0.visitIntInsn(0, (int) 'a');
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label22, label23, label24, "hi!");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor15);
    }

    @Test
    public void test07524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07524");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        aSMifierClassVisitor15.visitEnd();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        org.mockito.asm.MethodVisitor methodVisitor31 = aSMifierClassVisitor15.visitMethod(0, "", "hi!", "hi!", strArray30);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = methodVisitor31.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = annotationVisitor34.visitAnnotation("hi!", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor39.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor39.visitAnnotationDefault();
        aSMifierMethodVisitor39.visitMethodInsn((int) '#', "hi!", "", "hi!");
        annotationVisitor37.visit("hi!", (java.lang.Object) "");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test07525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07525");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        printWriter24.print((float) (byte) 0);
        java.io.PrintWriter printWriter29 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.println(' ');
        java.io.PrintWriter printWriter33 = printWriter24.append((java.lang.CharSequence) "hi!");
        printWriter33.println((long) (byte) 10);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(printWriter33);
    }

    @Test
    public void test07526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07526");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        printWriter8.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter12 = printWriter8.append((java.lang.CharSequence) "");
        printWriter8.print((double) 1);
        java.io.PrintWriter printWriter16 = printWriter8.append((java.lang.CharSequence) "hi!");
        printWriter8.write((int) (short) 1);
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter("hi!");
        java.util.Locale locale21 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray26 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray28 = null;
        aSMifierMethodVisitor23.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray26, (int) (short) 1, objArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray40 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray42 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor31, strArray40, 1.0f };
        java.io.PrintWriter printWriter43 = printWriter20.printf(locale21, "", (java.lang.Object[]) strArray40);
        printWriter43.print('#');
        printWriter43.println(false);
        printWriter43.write("hi!");
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        java.util.Locale locale52 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray57 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray59 = null;
        aSMifierMethodVisitor54.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray57, (int) (short) 1, objArray59);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor62.visitTryCatchBlock(label63, label64, label65, "");
        aSMifierMethodVisitor62.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray71 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray73 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor62, strArray71, 1.0f };
        java.io.PrintWriter printWriter74 = printWriter51.printf(locale52, "", (java.lang.Object[]) strArray71);
        char[] charArray81 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter74.println(charArray81);
        printWriter43.println(charArray81);
        printWriter8.print(charArray81);
        printWriter6.write(charArray81);
        printWriter6.println("");
        java.io.PrintWriter printWriter88 = new java.io.PrintWriter((java.io.Writer) printWriter6);
        printWriter6.print((int) 'a');
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(printWriter74);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test07527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07527");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label11 = null;
        int[] intArray18 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor19.visitTryCatchBlock(label20, label21, label22, "");
        aSMifierMethodVisitor19.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label[] labelArray32 = new org.mockito.asm.Label[] { label31 };
        aSMifierMethodVisitor19.visitTableSwitchInsn(0, (int) (byte) 10, label30, labelArray32);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label11, intArray18, labelArray32);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor38.visitTryCatchBlock(label39, label40, label41, "");
        aSMifierMethodVisitor38.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj47 = null;
        aSMifierMethodVisitor38.visitLdcInsn(obj47);
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor38.visitJumpInsn((int) (short) 1, label50);
        aSMifierMethodVisitor38.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label[] labelArray58 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label57, labelArray58);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 1, (int) (short) -1, label37, labelArray58);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) 'a', "hi!", "", "");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray32);
        org.junit.Assert.assertNotNull(labelArray58);
    }

    @Test
    public void test07528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07528");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, 1);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor26.visitFieldInsn((int) ' ', "hi!", "", "");
        aSMifierMethodVisitor26.visitEnd();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] { label48 };
        aSMifierMethodVisitor36.visitTableSwitchInsn(0, (int) (byte) 10, label47, labelArray49);
        aSMifierMethodVisitor26.visitTableSwitchInsn((int) (byte) 100, 0, label35, labelArray49);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 1, label25, labelArray49);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 1, "", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn((-1), "hi!", "hi!", "");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(annotationVisitor56);
    }

    @Test
    public void test07529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07529");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] { label40 };
        aSMifierMethodVisitor28.visitTableSwitchInsn(0, (int) (byte) 10, label39, labelArray41);
        java.io.PrintWriter printWriter43 = printWriter24.printf("hi!", (java.lang.Object[]) labelArray41);
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray41, 1, (java.lang.Object[]) strArray45);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 0, (int) (byte) 100);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label54, label55, (-1));
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) 'a');
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(strArray45);
    }

    @Test
    public void test07530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07530");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list14 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((int) ' ', 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test07531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07531");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, 1);
        java.util.List list23 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label27, label28, label29, "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor0.visitLabel(label33);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(list23);
    }

    @Test
    public void test07532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07532");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        java.util.List list33 = aSMifierClassVisitor28.getText();
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitSource("hi!", "");
        aSMifierClassVisitor28.visitOuterClass("hi!", "", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list33);
    }

    @Test
    public void test07533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07533");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMaxs((int) (short) -1, (int) (short) 100);
        aSMifierMethodVisitor0.visitMaxs((int) 'a', (int) ' ');
        aSMifierMethodVisitor0.visitInsn(100);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07534");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor14.visitJumpInsn((int) (short) 1, label26);
        aSMifierMethodVisitor14.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor14.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor14.visitAnnotationDefault();
        aSMifierMethodVisitor14.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor14.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        annotationVisitor38.visit("", (java.lang.Object) "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = annotationVisitor38.visitArray("");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) annotationVisitor53);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label57);
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 100, "hi!", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn((int) (short) -1, "", "", "");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(annotationVisitor62);
    }

    @Test
    public void test07535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07535");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 10, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitInsn(0);
        aSMifierMethodVisitor0.visitIincInsn(100, (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 1, "hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 100, "", true);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 0);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 0, "");
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor28);
    }

    @Test
    public void test07536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07536");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor15);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 10, label22);
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "");
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label27, label28, label29, "hi!");
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor35.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { (byte) 0 };
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        printWriter51.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor55.visitTryCatchBlock(label56, label57, label58, "");
        aSMifierMethodVisitor55.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] { label67 };
        aSMifierMethodVisitor55.visitTableSwitchInsn(0, (int) (byte) 10, label66, labelArray68);
        java.io.PrintWriter printWriter70 = printWriter51.printf("hi!", (java.lang.Object[]) labelArray68);
        aSMifierMethodVisitor35.visitLookupSwitchInsn(label47, intArray49, labelArray68);
        aSMifierMethodVisitor0.visitTableSwitchInsn(1, 0, label34, labelArray68);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 0, "hi!", "", "");
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label81, label82, (int) (short) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor87 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.Label label91 = null;
        org.mockito.asm.Label label92 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label91, label92, 1);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(annotationVisitor87);
    }

    @Test
    public void test07537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07537");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitInsn(1);
        aSMifierMethodVisitor0.visitEnd();
    }

    @Test
    public void test07538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07538");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitInsn((int) (byte) 100);
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor0.visitLabel(label13);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 10, "");
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) -1, label19);
        java.util.List list21 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 1, label23);
        org.junit.Assert.assertNotNull(list21);
    }

    @Test
    public void test07539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07539");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", true);
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label26);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 10);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "");
        printWriter31.print((double) 1);
        java.io.PrintWriter printWriter39 = printWriter31.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter((java.io.Writer) printWriter39, false);
        printWriter41.println((long) (byte) 100);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter((java.io.Writer) printWriter41, false);
        aSMifierMethodVisitor0.print(printWriter45);
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        printWriter48.print((java.lang.Object) (short) -1);
        printWriter48.flush();
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter((java.io.Writer) printWriter48);
        printWriter52.println((long) (byte) 0);
        aSMifierMethodVisitor0.print(printWriter52);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter39);
    }

    @Test
    public void test07540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07540");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        java.util.List list22 = aSMifierClassVisitor15.getText();
        java.util.List list23 = aSMifierClassVisitor15.text;
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        java.util.Locale locale30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray37 = null;
        aSMifierMethodVisitor32.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray35, (int) (short) 1, objArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray49 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray51 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor40, strArray49, 1.0f };
        java.io.PrintWriter printWriter52 = printWriter29.printf(locale30, "", (java.lang.Object[]) strArray49);
        char[] charArray59 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter52.println(charArray59);
        java.io.PrintWriter printWriter62 = new java.io.PrintWriter((java.io.Writer) printWriter52, true);
        boolean boolean63 = printWriter62.checkError();
        boolean boolean64 = printWriter62.checkError();
        java.lang.String[] strArray66 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter67 = printWriter62.format("hi!", (java.lang.Object[]) strArray66);
        org.mockito.asm.MethodVisitor methodVisitor68 = aSMifierClassVisitor15.visitMethod((-1), "", "hi!", "hi!", strArray66);
        aSMifierClassVisitor15.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(methodVisitor68);
    }

    @Test
    public void test07541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07541");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println((int) (short) 10);
        printWriter24.print('#');
        printWriter24.print(false);
        java.io.PrintWriter printWriter32 = printWriter24.append('#');
        java.io.PrintWriter printWriter34 = printWriter24.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor36.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label48 = null;
        int[] intArray50 = new int[] { (byte) 0 };
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        printWriter52.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor56.visitTryCatchBlock(label57, label58, label59, "");
        aSMifierMethodVisitor56.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label[] labelArray69 = new org.mockito.asm.Label[] { label68 };
        aSMifierMethodVisitor56.visitTableSwitchInsn(0, (int) (byte) 10, label67, labelArray69);
        java.io.PrintWriter printWriter71 = printWriter52.printf("hi!", (java.lang.Object[]) labelArray69);
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label48, intArray50, labelArray69);
        java.io.PrintWriter printWriter73 = printWriter24.printf("hi!", (java.lang.Object[]) labelArray69);
        printWriter24.println("hi!");
        printWriter24.print(false);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0]");
        org.junit.Assert.assertNotNull(labelArray69);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(printWriter73);
    }

    @Test
    public void test07542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07542");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        aSMifierMethodVisitor0.visitVarInsn(100, 0);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 100, 10);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "", "", "");
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 0, label35);
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test07543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07543");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 1, 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "hi!");
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitLabel(label21);
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitLabel(label23);
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test07544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07544");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitIincInsn((int) '#', (int) (byte) -1);
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor5.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label17 = null;
        int[] intArray19 = new int[] { (byte) 0 };
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor25.visitTryCatchBlock(label26, label27, label28, "");
        aSMifierMethodVisitor25.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label[] labelArray38 = new org.mockito.asm.Label[] { label37 };
        aSMifierMethodVisitor25.visitTableSwitchInsn(0, (int) (byte) 10, label36, labelArray38);
        java.io.PrintWriter printWriter40 = printWriter21.printf("hi!", (java.lang.Object[]) labelArray38);
        aSMifierMethodVisitor5.visitLookupSwitchInsn(label17, intArray19, labelArray38);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label48 = null;
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("hi!");
        printWriter50.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor54.visitTryCatchBlock(label55, label56, label57, "");
        aSMifierMethodVisitor54.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label[] labelArray67 = new org.mockito.asm.Label[] { label66 };
        aSMifierMethodVisitor54.visitTableSwitchInsn(0, (int) (byte) 10, label65, labelArray67);
        java.io.PrintWriter printWriter69 = printWriter50.printf("hi!", (java.lang.Object[]) labelArray67);
        aSMifierMethodVisitor42.visitTableSwitchInsn(1, (int) (short) 10, label48, labelArray67);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label4, intArray19, labelArray67);
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "hi!", true);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0]");
        org.junit.Assert.assertNotNull(labelArray38);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(labelArray67);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertNotNull(annotationVisitor75);
    }

    @Test
    public void test07545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07545");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        printWriter24.println(false);
        java.io.PrintWriter printWriter29 = printWriter24.append('4');
        boolean boolean30 = printWriter29.checkError();
        printWriter29.close();
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.write((-1));
        printWriter33.flush();
        java.lang.Object[] objArray38 = null;
        java.io.PrintWriter printWriter39 = printWriter33.format("hi!", objArray38);
        printWriter33.print("hi!");
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        java.util.Locale locale44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray49 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray51 = null;
        aSMifierMethodVisitor46.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray49, (int) (short) 1, objArray51);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor54.visitTryCatchBlock(label55, label56, label57, "");
        aSMifierMethodVisitor54.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray63 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray65 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor54, strArray63, 1.0f };
        java.io.PrintWriter printWriter66 = printWriter43.printf(locale44, "", (java.lang.Object[]) strArray63);
        char[] charArray73 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter66.println(charArray73);
        char[] charArray75 = new char[] {};
        printWriter66.print(charArray75);
        printWriter33.write(charArray75);
        printWriter29.write(charArray75);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[]");
    }

    @Test
    public void test07546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07546");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor6 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor6);
    }

    @Test
    public void test07547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07547");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter24.println(1L);
        printWriter24.println((-1L));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj41 = null;
        aSMifierMethodVisitor32.visitLdcInsn(obj41);
        aSMifierMethodVisitor32.visitInsn((int) ' ');
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor48.visitTryCatchBlock(label49, label50, label51, "");
        aSMifierMethodVisitor48.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj57 = null;
        aSMifierMethodVisitor48.visitLdcInsn(obj57);
        org.mockito.asm.Label label59 = null;
        int[] intArray66 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor67.visitTryCatchBlock(label68, label69, label70, "");
        aSMifierMethodVisitor67.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] { label79 };
        aSMifierMethodVisitor67.visitTableSwitchInsn(0, (int) (byte) 10, label78, labelArray80);
        aSMifierMethodVisitor48.visitLookupSwitchInsn(label59, intArray66, labelArray80);
        aSMifierMethodVisitor32.visitTableSwitchInsn((int) '4', (int) '#', label47, labelArray80);
        java.io.PrintWriter printWriter84 = printWriter24.format("hi!", (java.lang.Object[]) labelArray80);
        java.lang.Object obj85 = null;
        printWriter24.print(obj85);
        java.io.PrintWriter printWriter88 = printWriter24.append((java.lang.CharSequence) "hi!");
        boolean boolean89 = printWriter88.checkError();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test07548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07548");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitOuterClass("hi!", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj53 = null;
        aSMifierMethodVisitor44.visitLdcInsn(obj53);
        aSMifierMethodVisitor44.visitEnd();
        aSMifierMethodVisitor44.visitCode();
        org.mockito.asm.FieldVisitor fieldVisitor57 = aSMifierClassVisitor28.visitField((int) ' ', "", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor44);
        fieldVisitor57.visitEnd();
        fieldVisitor57.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = fieldVisitor57.visitAnnotation("hi!", true);
        org.mockito.asm.Attribute attribute63 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor57.visitAttribute(attribute63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(annotationVisitor62);
    }

    @Test
    public void test07549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07549");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = null;
        aSMifierMethodVisitor36.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray39, (int) (short) 1, objArray41);
        org.mockito.asm.MethodVisitor methodVisitor43 = aSMifierClassVisitor15.visitMethod((int) (short) 0, "", "", "hi!", strArray39);
        aSMifierClassVisitor15.visitEnd();
        java.util.List list45 = aSMifierClassVisitor15.text;
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor51.visitTryCatchBlock(label52, label53, label54, "");
        aSMifierMethodVisitor51.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor51.visitMaxs((int) (byte) 10, 0);
        aSMifierMethodVisitor51.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = aSMifierMethodVisitor51.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor71 = aSMifierClassVisitor15.visitField((int) (byte) 10, "", "", "", (java.lang.Object) "hi!");
        org.mockito.asm.Attribute attribute72 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor71.visitAttribute(attribute72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodVisitor43);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(fieldVisitor71);
    }

    @Test
    public void test07550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07550");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 100, "hi!");
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj44 = null;
        aSMifierMethodVisitor35.visitLdcInsn(obj44);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter("hi!");
        printWriter47.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor35.print(printWriter47);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor52.visitTryCatchBlock(label53, label54, label55, "");
        aSMifierMethodVisitor52.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj61 = null;
        aSMifierMethodVisitor52.visitLdcInsn(obj61);
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor52.visitJumpInsn((int) (short) 1, label64);
        aSMifierMethodVisitor52.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label[] labelArray72 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor52.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label71, labelArray72);
        java.io.PrintWriter printWriter74 = printWriter47.printf("", (java.lang.Object[]) labelArray72);
        aSMifierMethodVisitor0.visitTableSwitchInsn(0, (int) (short) -1, label34, labelArray72);
        aSMifierMethodVisitor0.visitMethodInsn((int) ' ', "hi!", "hi!", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((-1), (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(labelArray72);
        org.junit.Assert.assertNotNull(printWriter74);
    }

    @Test
    public void test07551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07551");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter6.println();
        printWriter6.write("hi!");
        printWriter6.println(' ');
        java.io.PrintWriter printWriter13 = printWriter6.append(' ');
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter((java.io.Writer) printWriter13, false);
        printWriter13.println(true);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter13);
    }

    @Test
    public void test07552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07552");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitLabel(label4);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 10, "", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.junit.Assert.assertNotNull(annotationVisitor13);
    }

    @Test
    public void test07553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07553");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj40 = null;
        aSMifierMethodVisitor31.visitLdcInsn(obj40);
        aSMifierMethodVisitor31.visitInsn((int) ' ');
        aSMifierMethodVisitor31.visitIincInsn((int) (byte) 100, (int) (short) 1);
        aSMifierMethodVisitor31.visitTypeInsn((int) (byte) 0, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor31.visitAnnotationDefault();
        org.mockito.asm.FieldVisitor fieldVisitor51 = aSMifierClassVisitor15.visitField((int) (short) 10, "hi!", "", "", (java.lang.Object) aSMifierMethodVisitor31);
        aSMifierMethodVisitor31.visitTypeInsn(0, "hi!");
        aSMifierMethodVisitor31.visitTypeInsn((int) '4', "");
        aSMifierMethodVisitor31.visitFieldInsn((int) (short) 0, "", "", "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 100, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor31.visitVarInsn((-1), (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor51);
    }

    @Test
    public void test07554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07554");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitTypeInsn(10, "");
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label31, label32, (int) '4');
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor0.visitLabel(label35);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 100, "hi!", false);
        aSMifierMethodVisitor0.visitInsn((int) (short) 10);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test07555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07555");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label17, label18, 1);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(list13);
    }

    @Test
    public void test07556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07556");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter8 = printWriter6.append((java.lang.CharSequence) "");
        printWriter8.println(true);
        printWriter8.println((int) (short) -1);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter((java.io.Writer) printWriter8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor14 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter8);
        printWriter8.println(false);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter20 = printWriter8.append((java.lang.CharSequence) "", 1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter8);
    }

    @Test
    public void test07557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07557");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label12, label13, label14, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn(100, "hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test07558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07558");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        printWriter12.println("");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor22.visitLocalVariable("hi!", "hi!", "hi!", label31, label32, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor22.visitAnnotation("", true);
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label50 = null;
        int[] intArray57 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label50, intArray57, labelArray71);
        org.mockito.asm.Label[] labelArray74 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label38, intArray57, labelArray74);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor77.visitTryCatchBlock(label78, label79, label80, "");
        aSMifierMethodVisitor77.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label88 = null;
        org.mockito.asm.Label label89 = null;
        org.mockito.asm.Label[] labelArray90 = new org.mockito.asm.Label[] { label89 };
        aSMifierMethodVisitor77.visitTableSwitchInsn(0, (int) (byte) 10, label88, labelArray90);
        aSMifierMethodVisitor19.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray74, (int) (short) 100, (java.lang.Object[]) labelArray90);
        java.io.PrintWriter printWriter93 = printWriter12.printf("hi!", (java.lang.Object[]) labelArray74);
        java.io.PrintWriter printWriter95 = printWriter93.append((java.lang.CharSequence) "");
        printWriter95.println((double) 0L);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(labelArray74);
        org.junit.Assert.assertNotNull(labelArray90);
        org.junit.Assert.assertNotNull(printWriter93);
        org.junit.Assert.assertNotNull(printWriter95);
    }

    @Test
    public void test07559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07559");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        java.util.Locale locale33 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray40 = null;
        aSMifierMethodVisitor35.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray38, (int) (short) 1, objArray40);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor43.visitTryCatchBlock(label44, label45, label46, "");
        aSMifierMethodVisitor43.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray54 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor43, strArray52, 1.0f };
        java.io.PrintWriter printWriter55 = printWriter32.printf(locale33, "", (java.lang.Object[]) strArray52);
        char[] charArray62 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter55.println(charArray62);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter55, true);
        java.io.PrintWriter printWriter67 = printWriter55.append((java.lang.CharSequence) "");
        printWriter67.print("");
        java.io.PrintWriter printWriter71 = printWriter67.append((java.lang.CharSequence) "");
        printWriter67.println((float) 100L);
        java.io.PrintWriter printWriter76 = new java.io.PrintWriter("hi!");
        printWriter76.write((-1));
        printWriter76.flush();
        java.util.Locale locale80 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor82 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray85 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray87 = null;
        aSMifierMethodVisitor82.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray85, (int) (short) 1, objArray87);
        java.io.PrintWriter printWriter89 = printWriter76.printf(locale80, "", (java.lang.Object[]) strArray85);
        java.io.PrintWriter printWriter90 = printWriter67.printf("hi!", (java.lang.Object[]) strArray85);
        aSMifierClassVisitor15.visit(0, (int) 'a', "hi!", "hi!", "", strArray85);
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        aSMifierClassVisitor15.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(printWriter89);
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test07560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07560");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor0.visitMaxs(100, (int) '4');
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label13);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) 'a');
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label19);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((int) (byte) -1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07561");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor7.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor7.visitAnnotationDefault();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        java.io.PrintWriter printWriter50 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray48);
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor7.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray48, 1, (java.lang.Object[]) strArray52);
        java.io.PrintWriter printWriter54 = printWriter1.format("hi!", (java.lang.Object[]) strArray52);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor55.visitEnd();
        aSMifierClassVisitor55.visitInnerClass("", "hi!", "hi!", (int) (byte) 1);
        aSMifierClassVisitor55.visitSource("hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierClassVisitor55.visitAnnotation("hi!", true);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(annotationVisitor67);
    }

    @Test
    public void test07562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07562");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor28.visitLocalVariable("hi!", "hi!", "hi!", label37, label38, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor28.visitAnnotation("", true);
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj54 = null;
        aSMifierMethodVisitor45.visitLdcInsn(obj54);
        org.mockito.asm.Label label56 = null;
        int[] intArray63 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] { label76 };
        aSMifierMethodVisitor64.visitTableSwitchInsn(0, (int) (byte) 10, label75, labelArray77);
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label56, intArray63, labelArray77);
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label44, intArray63, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter26.printf("hi!", (java.lang.Object[]) labelArray80);
        printWriter26.println("");
        printWriter26.println('4');
        printWriter26.println(true);
        printWriter26.write("");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
    }

    @Test
    public void test07563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07563");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label11 = null;
        int[] intArray18 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor19.visitTryCatchBlock(label20, label21, label22, "");
        aSMifierMethodVisitor19.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label[] labelArray32 = new org.mockito.asm.Label[] { label31 };
        aSMifierMethodVisitor19.visitTableSwitchInsn(0, (int) (byte) 10, label30, labelArray32);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label11, intArray18, labelArray32);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor38.visitTryCatchBlock(label39, label40, label41, "");
        aSMifierMethodVisitor38.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj47 = null;
        aSMifierMethodVisitor38.visitLdcInsn(obj47);
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor38.visitJumpInsn((int) (short) 1, label50);
        aSMifierMethodVisitor38.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label[] labelArray58 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label57, labelArray58);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 1, (int) (short) -1, label37, labelArray58);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(100, (int) 'a');
        org.mockito.asm.Label label68 = null;
        aSMifierMethodVisitor0.visitLabel(label68);
        aSMifierMethodVisitor0.visitMethodInsn((int) '#', "hi!", "", "");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray32);
        org.junit.Assert.assertNotNull(labelArray58);
    }

    @Test
    public void test07564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07564");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label23, label24, 0);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitTypeInsn(100, "");
        aSMifierMethodVisitor0.visitIntInsn(100, (int) (short) -1);
        org.junit.Assert.assertNotNull(annotationVisitor31);
    }

    @Test
    public void test07565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07565");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 10, 0);
        aSMifierMethodVisitor0.visitTypeInsn(10, "hi!");
        aSMifierMethodVisitor0.visitVarInsn(0, (-1));
        aSMifierMethodVisitor0.visitMethodInsn((int) ' ', "", "", "hi!");
    }

    @Test
    public void test07566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07566");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter("hi!");
        java.util.Locale locale62 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray67 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray69 = null;
        aSMifierMethodVisitor64.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray67, (int) (short) 1, objArray69);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor72 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        aSMifierMethodVisitor72.visitTryCatchBlock(label73, label74, label75, "");
        aSMifierMethodVisitor72.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray81 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray83 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor72, strArray81, 1.0f };
        java.io.PrintWriter printWriter84 = printWriter61.printf(locale62, "", (java.lang.Object[]) strArray81);
        char[] charArray91 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter84.println(charArray91);
        annotationVisitor58.visit("", (java.lang.Object) printWriter84);
        java.io.PrintWriter printWriter95 = new java.io.PrintWriter((java.io.Writer) printWriter84, false);
        java.io.PrintWriter printWriter96 = new java.io.PrintWriter((java.io.Writer) printWriter95);
        java.io.PrintWriter printWriter98 = new java.io.PrintWriter((java.io.Writer) printWriter95, false);
        java.io.PrintWriter printWriter99 = new java.io.PrintWriter((java.io.Writer) printWriter98);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test07567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07567");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        boolean boolean36 = printWriter34.checkError();
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter39 = printWriter34.format("hi!", (java.lang.Object[]) strArray38);
        printWriter39.println((double) (short) 100);
        java.io.PrintWriter printWriter43 = printWriter39.append(' ');
        printWriter43.print("");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(printWriter43);
    }

    @Test
    public void test07568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07568");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter5.close();
        printWriter5.println(true);
        java.util.Locale locale9 = null;
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter14 = printWriter12.append('a');
        printWriter12.print("hi!");
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.Writer) printWriter12, false);
        printWriter18.write("hi!");
        printWriter18.println(' ');
        java.util.Locale locale23 = null;
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        java.io.PrintWriter printWriter50 = printWriter18.printf(locale23, "", (java.lang.Object[]) strArray46);
        java.io.PrintWriter printWriter51 = printWriter5.format(locale9, "", (java.lang.Object[]) strArray46);
        java.util.Locale locale52 = null;
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter("hi!");
        printWriter55.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray59 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter60 = printWriter55.format("", (java.lang.Object[]) strArray59);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor61 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter60);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray70 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray72 = null;
        aSMifierMethodVisitor67.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray70, (int) (short) 1, objArray72);
        aSMifierClassVisitor61.visit(10, (int) (byte) -1, "", "hi!", "hi!", strArray70);
        java.io.PrintWriter printWriter75 = printWriter51.format(locale52, "", (java.lang.Object[]) strArray70);
        java.io.PrintWriter printWriter76 = new java.io.PrintWriter((java.io.Writer) printWriter51);
        printWriter51.println("");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(printWriter75);
    }

    @Test
    public void test07569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07569");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitSource("", "");
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.print(false);
        java.io.PrintWriter printWriter47 = printWriter43.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter((java.io.Writer) printWriter43);
        printWriter48.println();
        org.mockito.asm.FieldVisitor fieldVisitor50 = aSMifierClassVisitor28.visitField((int) ' ', "", "", "hi!", (java.lang.Object) printWriter48);
        aSMifierClassVisitor28.visitSource("", "");
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter("hi!");
        printWriter59.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter63 = printWriter59.append((java.lang.CharSequence) "");
        printWriter59.print((int) (byte) -1);
        printWriter59.print((double) (byte) 1);
        printWriter59.close();
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter((java.io.Writer) printWriter59);
        boolean boolean70 = printWriter59.checkError();
        printWriter59.println((long) (byte) 100);
        java.io.PrintWriter printWriter74 = new java.io.PrintWriter((java.io.Writer) printWriter59, true);
        printWriter59.println(' ');
        org.mockito.asm.FieldVisitor fieldVisitor77 = aSMifierClassVisitor28.visitField((int) (short) 10, "", "hi!", "hi!", (java.lang.Object) printWriter59);
        printWriter59.flush();
        printWriter59.print(true);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(fieldVisitor77);
    }

    @Test
    public void test07570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07570");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("hi!");
        printWriter26.print(false);
        java.io.PrintWriter printWriter32 = printWriter26.append((java.lang.CharSequence) "");
        printWriter26.print(false);
        java.io.PrintWriter printWriter36 = printWriter26.append((java.lang.CharSequence) "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(printWriter36);
    }

    @Test
    public void test07571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07571");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", true);
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label67, label68, label69, "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, 1);
        aSMifierMethodVisitor0.visitFieldInsn(1, "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 1);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationVisitor66);
    }

    @Test
    public void test07572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07572");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        char[] charArray56 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter49.println(charArray56);
        printWriter24.print(charArray56);
        printWriter24.write((int) '4');
        printWriter24.print((double) ' ');
        printWriter24.println(false);
        java.io.PrintWriter printWriter66 = printWriter24.append((java.lang.CharSequence) "");
        printWriter66.println((double) 10);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter66);
    }

    @Test
    public void test07573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07573");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println((float) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor8.visitLabel(label12);
        aSMifierMethodVisitor8.visitFieldInsn((int) (byte) 10, "", "", "");
        aSMifierMethodVisitor8.visitTypeInsn((int) (byte) 1, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor8.visitAnnotation("", false);
        annotationVisitor24.visitEnd();
        printWriter1.println((java.lang.Object) annotationVisitor24);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        aSMifierMethodVisitor27.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor27.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) aSMifierMethodVisitor27);
        java.lang.Object[] objArray44 = null;
        java.io.PrintWriter printWriter45 = printWriter1.printf("hi!", objArray44);
        printWriter1.print((int) ' ');
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(printWriter45);
    }

    @Test
    public void test07574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07574");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLabel(label17);
        aSMifierMethodVisitor0.visitInsn(100);
        java.util.List list21 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLabel(label22);
        aSMifierMethodVisitor0.visitMaxs((int) '4', (int) (byte) 100);
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor0.visitIntInsn((int) '#', (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor0.visitLabel(label38);
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label43, label44, (int) (byte) 100);
        aSMifierMethodVisitor0.visitInsn((int) (short) 100);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test07575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07575");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj45 = null;
        aSMifierMethodVisitor36.visitLdcInsn(obj45);
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor36.visitJumpInsn((int) (short) 1, label48);
        aSMifierMethodVisitor36.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor36.visitParameterAnnotation((int) (byte) 1, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor57 = aSMifierClassVisitor31.visitField((int) (byte) 0, "", "", "", (java.lang.Object) aSMifierMethodVisitor36);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierClassVisitor31.visitAnnotation("", false);
        aSMifierClassVisitor31.visitInnerClass("", "", "hi!", 0);
        aSMifierClassVisitor31.visitInnerClass("", "hi!", "", (int) (byte) 0);
        aSMifierClassVisitor31.visitEnd();
        aSMifierClassVisitor31.visitSource("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(annotationVisitor60);
    }

    @Test
    public void test07576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07576");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) -1, "", true);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter("hi!");
        java.util.Locale locale50 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray55 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray57 = null;
        aSMifierMethodVisitor52.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray55, (int) (short) 1, objArray57);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor60.visitTryCatchBlock(label61, label62, label63, "");
        aSMifierMethodVisitor60.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray69 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray71 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor60, strArray69, 1.0f };
        java.io.PrintWriter printWriter72 = printWriter49.printf(locale50, "", (java.lang.Object[]) strArray69);
        char[] charArray79 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter72.println(charArray79);
        printWriter47.print(charArray79);
        printWriter47.print(true);
        java.io.PrintWriter printWriter85 = printWriter47.append((java.lang.CharSequence) "");
        aSMifierMethodVisitor0.print(printWriter85);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitTypeInsn(100, "hi!");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) -1);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter85);
    }

    @Test
    public void test07577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07577");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "hi!", "", "");
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label13, label14, (int) '4');
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 100, label18);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) 'a');
        aSMifierMethodVisitor0.visitFieldInsn((int) 'a', "", "", "hi!");
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label34, label35, (int) 'a');
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor0.visitLabel(label38);
    }

    @Test
    public void test07578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07578");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 0, label18);
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 100, "hi!", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        java.util.Locale locale28 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray33 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray35 = null;
        aSMifierMethodVisitor30.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray33, (int) (short) 1, objArray35);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor38.visitTryCatchBlock(label39, label40, label41, "");
        aSMifierMethodVisitor38.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray47 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray49 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor38, strArray47, 1.0f };
        java.io.PrintWriter printWriter50 = printWriter27.printf(locale28, "", (java.lang.Object[]) strArray47);
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter((java.io.Writer) printWriter50, true);
        printWriter52.print("");
        printWriter52.println("hi!");
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter((java.io.Writer) printWriter52, false);
        aSMifierMethodVisitor0.print(printWriter58);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(printWriter50);
    }

    @Test
    public void test07579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07579");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        java.util.Locale locale13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray20 = null;
        aSMifierMethodVisitor15.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray18, (int) (short) 1, objArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor23, strArray32, 1.0f };
        java.io.PrintWriter printWriter35 = printWriter12.printf(locale13, "", (java.lang.Object[]) strArray32);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, true);
        printWriter8.println((java.lang.Object) printWriter37);
        printWriter8.println();
        printWriter8.print(10);
        printWriter8.flush();
        printWriter8.println((double) 'a');
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(printWriter35);
    }

    @Test
    public void test07580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07580");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "", "");
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label22);
        aSMifierMethodVisitor0.visitIincInsn((int) '4', (int) '#');
        aSMifierMethodVisitor0.visitTypeInsn((int) ' ', "hi!");
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor0.visitLineNumber(0, label31);
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor0.visitLineNumber((-1), label34);
        aSMifierMethodVisitor0.visitIincInsn((int) '4', (int) ' ');
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor39);
    }

    @Test
    public void test07581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07581");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 1, "", true);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) 'a', label22);
        aSMifierMethodVisitor0.visitVarInsn((int) ' ', (int) (byte) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 1, "", false);
        org.mockito.asm.Attribute attribute31 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor30);
    }

    @Test
    public void test07582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07582");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitIincInsn((int) '#', (int) (byte) -1);
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label7, label8, 0);
        java.util.List list11 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(list11);
    }

    @Test
    public void test07583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07583");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        printWriter34.print(100.0f);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print(false);
        java.io.PrintWriter printWriter44 = printWriter40.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter((java.io.Writer) printWriter44, true);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.Writer) printWriter44);
        java.io.PrintWriter printWriter49 = printWriter44.append(' ');
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter54 = printWriter52.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter54);
        java.lang.String[] strArray61 = null;
        aSMifierClassVisitor55.visit((int) (short) 1, (int) '#', "hi!", "hi!", "", strArray61);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor67.visitTryCatchBlock(label68, label69, label70, "");
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        aSMifierMethodVisitor67.visitLocalVariable("hi!", "hi!", "hi!", label76, label77, (int) (byte) 10);
        java.io.PrintWriter printWriter81 = new java.io.PrintWriter("hi!");
        printWriter81.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray85 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter86 = printWriter81.format("", (java.lang.Object[]) strArray85);
        aSMifierMethodVisitor67.visitLdcInsn((java.lang.Object) strArray85);
        org.mockito.asm.MethodVisitor methodVisitor88 = aSMifierClassVisitor55.visitMethod((int) (byte) 1, "hi!", "hi!", "hi!", strArray85);
        java.io.PrintWriter printWriter89 = printWriter44.format("hi!", (java.lang.Object[]) strArray85);
        printWriter34.print((java.lang.Object) "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(printWriter86);
        org.junit.Assert.assertNotNull(methodVisitor88);
        org.junit.Assert.assertNotNull(printWriter89);
    }

    @Test
    public void test07584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07584");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.print((int) ' ');
        java.lang.Object obj29 = null;
        printWriter24.print(obj29);
        printWriter24.println((int) '#');
        printWriter24.print((float) 10L);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test07585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07585");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs((int) (byte) -1, 10);
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "hi!", "", "");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, (int) (byte) 0);
        aSMifierMethodVisitor0.visitVarInsn((int) '#', 100);
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label39);
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", false);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor44);
    }

    @Test
    public void test07586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07586");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) '#', "", "", "");
        aSMifierMethodVisitor0.visitInsn((int) (byte) 100);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor16);
    }

    @Test
    public void test07587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07587");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.println(0.0f);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        aSMifierClassVisitor29.visitSource("", "");
        aSMifierClassVisitor29.visitOuterClass("", "hi!", "");
        aSMifierClassVisitor29.visitInnerClass("", "", "", 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierClassVisitor29.visitAnnotation("", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor49.visitInsn(1);
        aSMifierMethodVisitor49.visitMultiANewArrayInsn("", (int) (byte) 0);
        aSMifierMethodVisitor49.visitIincInsn((int) (short) -1, (int) '4');
        aSMifierMethodVisitor49.visitCode();
        org.mockito.asm.FieldVisitor fieldVisitor67 = aSMifierClassVisitor29.visitField((int) (byte) 0, "", "", "", (java.lang.Object) aSMifierMethodVisitor49);
        org.mockito.asm.Attribute attribute68 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor67.visitAttribute(attribute68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor67);
    }

    @Test
    public void test07588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07588");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter1.print(false);
        java.lang.CharSequence charSequence12 = null;
        java.io.PrintWriter printWriter13 = printWriter1.append(charSequence12);
        printWriter1.close();
        java.io.PrintWriter printWriter16 = printWriter1.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter18 = printWriter1.append('#');
        printWriter18.print((long) (short) 10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter18);
        org.mockito.asm.Attribute attribute22 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor21.visitAttribute(attribute22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(printWriter18);
    }

    @Test
    public void test07589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07589");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 100, label61);
        aSMifierMethodVisitor0.visitTypeInsn(1, "hi!");
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label69, label70, 1);
        org.mockito.asm.Label label74 = null;
        aSMifierMethodVisitor0.visitJumpInsn(0, label74);
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label79, label80, (-1));
        org.mockito.asm.Label label83 = null;
        org.mockito.asm.Label label84 = null;
        org.mockito.asm.Label label85 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label83, label84, label85, "");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
    }

    @Test
    public void test07590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07590");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor0.visitInsn(100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 10);
        aSMifierMethodVisitor0.visitVarInsn(100, 100);
    }

    @Test
    public void test07591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07591");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor0.visitInsn(1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 0);
        aSMifierMethodVisitor0.visitInsn((int) (short) 100);
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 1, label17);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 100, label20);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.print((java.lang.Object) (short) -1);
        printWriter23.flush();
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter23);
        aSMifierMethodVisitor0.print(printWriter23);
        printWriter23.println(true);
        printWriter23.close();
    }

    @Test
    public void test07592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07592");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 10);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label78);
        java.util.List list80 = aSMifierMethodVisitor0.text;
        org.mockito.asm.Label label82 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label82);
        aSMifierMethodVisitor0.visitMethodInsn(0, "hi!", "", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(list80);
    }

    @Test
    public void test07593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07593");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.print((double) (byte) 10);
        java.io.PrintWriter printWriter7 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.println((double) 1);
        printWriter1.print(0.0f);
        org.junit.Assert.assertNotNull(printWriter7);
    }

    @Test
    public void test07594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07594");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("", true);
        java.lang.Class<?> wildcardClass35 = annotationVisitor34.getClass();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test07595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07595");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        printWriter24.println(false);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter24.println((float) 'a');
        printWriter24.print('a');
        printWriter24.print((int) (byte) 10);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test07596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07596");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print(false);
        printWriter39.println(false);
        printWriter39.print(0L);
        java.io.PrintWriter printWriter47 = printWriter39.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("hi!");
        printWriter50.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter55 = printWriter50.format("", (java.lang.Object[]) strArray54);
        java.io.PrintWriter printWriter56 = printWriter39.printf("hi!", (java.lang.Object[]) strArray54);
        aSMifierClassVisitor28.visit((int) ' ', (int) '#', "", "", "hi!", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierClassVisitor28.visitAnnotation("", false);
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitSource("hi!", "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(annotationVisitor60);
    }

    @Test
    public void test07597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07597");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        printWriter1.print(0L);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray16 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter17 = printWriter12.format("", (java.lang.Object[]) strArray16);
        java.io.PrintWriter printWriter18 = printWriter1.printf("hi!", (java.lang.Object[]) strArray16);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor19.visitTryCatchBlock(label20, label21, label22, "");
        aSMifierMethodVisitor19.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj28 = null;
        aSMifierMethodVisitor19.visitLdcInsn(obj28);
        aSMifierMethodVisitor19.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor19.visitLocalVariable("hi!", "hi!", "hi!", label36, label37, (int) (byte) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor40.visitLocalVariable("hi!", "hi!", "hi!", label49, label50, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierMethodVisitor40.visitAnnotation("", true);
        aSMifierMethodVisitor19.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor40);
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor40.visitLineNumber((int) (short) 10, label58);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor40.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor40.visitAnnotationDefault();
        printWriter1.print((java.lang.Object) aSMifierMethodVisitor40);
        java.util.List list63 = aSMifierMethodVisitor40.text;
        java.lang.Class<?> wildcardClass64 = list63.getClass();
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(printWriter17);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test07598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07598");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label6 = null;
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        printWriter8.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label[] labelArray25 = new org.mockito.asm.Label[] { label24 };
        aSMifierMethodVisitor12.visitTableSwitchInsn(0, (int) (byte) 10, label23, labelArray25);
        java.io.PrintWriter printWriter27 = printWriter8.printf("hi!", (java.lang.Object[]) labelArray25);
        aSMifierMethodVisitor0.visitTableSwitchInsn(1, (int) (short) 10, label6, labelArray25);
        aSMifierMethodVisitor0.visitVarInsn(100, (int) ' ');
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "hi!", label35, label36, 1);
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor0.visitLabel(label39);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(labelArray25);
        org.junit.Assert.assertNotNull(printWriter27);
    }

    @Test
    public void test07599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07599");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = annotationVisitor15.visitAnnotation("", "");
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print(false);
        printWriter21.println(false);
        java.io.PrintWriter printWriter27 = printWriter21.append('#');
        annotationVisitor18.visit("", (java.lang.Object) printWriter21);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray37 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray39 = null;
        aSMifierMethodVisitor34.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray37, (int) (short) 1, objArray39);
        aSMifierMethodVisitor34.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor34.visitEnd();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor34.visitLocalVariable("", "hi!", "hi!", label50, label51, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor34.visitAnnotation("", false);
        aSMifierMethodVisitor34.visitTypeInsn((int) '#', "");
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor34.visitLabel(label60);
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor34.visitAnnotation("hi!", true);
        org.mockito.asm.FieldVisitor fieldVisitor65 = aSMifierClassVisitor29.visitField((int) (short) 100, "hi!", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor34);
        aSMifierMethodVisitor34.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(fieldVisitor65);
    }

    @Test
    public void test07600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07600");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '#', label63);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(1, (int) (short) -1);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
    }

    @Test
    public void test07601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07601");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter24.print((float) 10L);
        printWriter24.println(false);
        printWriter24.print(0);
        printWriter24.println("hi!");
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter24.print((double) ' ');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test07602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07602");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label[] labelArray27 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor7.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label26, labelArray27);
        java.io.PrintWriter printWriter29 = printWriter5.printf("", (java.lang.Object[]) labelArray27);
        printWriter29.println('a');
        printWriter29.println(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter29);
        aSMifierClassVisitor34.visitSource("", "hi!");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(labelArray27);
        org.junit.Assert.assertNotNull(printWriter29);
    }

    @Test
    public void test07603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07603");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) ' ');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label20, label21, label22, "");
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj37 = null;
        aSMifierMethodVisitor28.visitLdcInsn(obj37);
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor28.visitJumpInsn((int) (short) 1, label40);
        aSMifierMethodVisitor28.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor28.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor28.visitTypeInsn((int) (short) 10, "hi!");
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor28.visitJumpInsn((int) (short) 0, label54);
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] { label59 };
        aSMifierMethodVisitor28.visitTableSwitchInsn(0, (-1), label58, labelArray60);
        aSMifierMethodVisitor0.visitTableSwitchInsn(1, (int) (byte) -1, label27, labelArray60);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn((-1), "hi!", "", "");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(labelArray60);
    }

    @Test
    public void test07604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07604");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn((int) '#', (int) (byte) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label25 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitJumpInsn((-1), label25);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor23);
    }

    @Test
    public void test07605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07605");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] { label40 };
        aSMifierMethodVisitor28.visitTableSwitchInsn(0, (int) (byte) 10, label39, labelArray41);
        java.io.PrintWriter printWriter43 = printWriter24.printf("hi!", (java.lang.Object[]) labelArray41);
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray41, 1, (java.lang.Object[]) strArray45);
        aSMifierMethodVisitor0.visitIntInsn((int) '#', 10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 1);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, 100);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 1, (int) (byte) 10);
        org.mockito.asm.Label label60 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitJumpInsn((int) (byte) -1, label60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(strArray45);
    }

    @Test
    public void test07606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07606");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        printWriter1.print(0L);
        printWriter1.close();
        printWriter1.println();
        printWriter1.print((float) (-1));
        printWriter1.println((float) (short) 100);
        printWriter1.write("hi!", 100, 10);
        printWriter1.print((float) 1);
    }

    @Test
    public void test07607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07607");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        printWriter7.flush();
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter((java.io.Writer) printWriter7, false);
        printWriter10.println((float) '#');
        printWriter10.write("");
        boolean boolean15 = printWriter10.checkError();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test07608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07608");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list22 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLineNumber(0, label25);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list22);
    }

    @Test
    public void test07609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07609");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor0.visitInsn(1);
        aSMifierMethodVisitor0.visitVarInsn((int) ' ', (int) (short) 100);
        aSMifierMethodVisitor0.visitInsn(0);
        aSMifierMethodVisitor0.visitInsn((int) (short) 0);
        aSMifierMethodVisitor0.visitMaxs(1, (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        printWriter47.print("hi!");
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter((java.io.Writer) printWriter47);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor51 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter50);
        aSMifierClassVisitor51.visitOuterClass("hi!", "hi!", "hi!");
        java.util.List list56 = aSMifierClassVisitor51.getText();
        org.mockito.asm.FieldVisitor fieldVisitor62 = aSMifierClassVisitor51.visitField((int) (short) -1, "", "hi!", "", (java.lang.Object) 10.0f);
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = fieldVisitor62.visitAnnotation("", true);
        annotationVisitor21.visit("", (java.lang.Object) true);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(fieldVisitor62);
        org.junit.Assert.assertNotNull(annotationVisitor65);
    }

    @Test
    public void test07610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07610");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label11 = null;
        int[] intArray18 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor19.visitTryCatchBlock(label20, label21, label22, "");
        aSMifierMethodVisitor19.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label[] labelArray32 = new org.mockito.asm.Label[] { label31 };
        aSMifierMethodVisitor19.visitTableSwitchInsn(0, (int) (byte) 10, label30, labelArray32);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label11, intArray18, labelArray32);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 1, "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, 0);
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("hi!");
        java.util.Locale locale45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray50 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray52 = null;
        aSMifierMethodVisitor47.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray50, (int) (short) 1, objArray52);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor55.visitTryCatchBlock(label56, label57, label58, "");
        aSMifierMethodVisitor55.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray64 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray66 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor55, strArray64, 1.0f };
        java.io.PrintWriter printWriter67 = printWriter44.printf(locale45, "", (java.lang.Object[]) strArray64);
        printWriter67.print('#');
        printWriter67.print((int) ' ');
        aSMifierMethodVisitor0.print(printWriter67);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 10);
        java.util.List list76 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 10, (int) 'a');
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray32);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(list76);
    }

    @Test
    public void test07611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07611");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append(' ');
        printWriter28.println((float) '4');
        java.lang.Object[] objArray32 = null;
        java.io.PrintWriter printWriter33 = printWriter28.format("hi!", objArray32);
        printWriter33.println((float) 'a');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(printWriter33);
    }

    @Test
    public void test07612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07612");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitMaxs((int) '4', (int) (short) -1);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 1, "");
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(annotationVisitor82);
    }

    @Test
    public void test07613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07613");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "", "");
        aSMifierClassVisitor15.visitSource("", "hi!");
        aSMifierClassVisitor15.visitInnerClass("", "", "", (int) (short) 100);
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test07614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07614");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs(1, 10);
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label65);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, (int) (byte) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor78);
    }

    @Test
    public void test07615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07615");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((int) (byte) -1);
        printWriter1.print((double) (byte) 1);
        printWriter1.close();
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter11.println();
        printWriter11.println((double) (byte) 100);
        printWriter11.print((long) (byte) 100);
        printWriter11.println();
        printWriter11.print((int) 'a');
        printWriter11.write(100);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.println((int) (short) -1);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor26 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter23);
        aSMifierClassVisitor26.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor26.visitSource("", "");
        aSMifierClassVisitor26.visitEnd();
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter44 = printWriter40.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor46.visitTryCatchBlock(label47, label48, label49, "");
        aSMifierMethodVisitor46.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj55 = null;
        aSMifierMethodVisitor46.visitLdcInsn(obj55);
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor46.visitJumpInsn((int) (short) 1, label58);
        aSMifierMethodVisitor46.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label[] labelArray66 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor46.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label65, labelArray66);
        java.io.PrintWriter printWriter68 = printWriter44.printf("", (java.lang.Object[]) labelArray66);
        printWriter68.println('a');
        java.io.PrintWriter printWriter72 = new java.io.PrintWriter("hi!");
        printWriter72.write((-1));
        printWriter72.flush();
        java.lang.Object[] objArray77 = null;
        java.io.PrintWriter printWriter78 = printWriter72.format("hi!", objArray77);
        printWriter72.print(true);
        printWriter68.print((java.lang.Object) printWriter72);
        printWriter68.print((float) (short) 100);
        org.mockito.asm.FieldVisitor fieldVisitor84 = aSMifierClassVisitor26.visitField((int) (byte) 1, "hi!", "", "", (java.lang.Object) printWriter68);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor85 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter68);
        printWriter68.write("hi!");
        printWriter11.println((java.lang.Object) printWriter68);
        printWriter11.write("");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(labelArray66);
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(fieldVisitor84);
    }

    @Test
    public void test07616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07616");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 10);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label78);
        java.util.List list80 = aSMifierMethodVisitor0.text;
        org.mockito.asm.Label label82 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label82);
        org.mockito.asm.Label label84 = null;
        org.mockito.asm.Label label85 = null;
        org.mockito.asm.Label label86 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label84, label85, label86, "hi!");
        aSMifierMethodVisitor0.visitInsn((int) '#');
        java.util.List list91 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(list80);
        org.junit.Assert.assertNotNull(list91);
    }

    @Test
    public void test07617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07617");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label6 = null;
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        printWriter8.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label[] labelArray25 = new org.mockito.asm.Label[] { label24 };
        aSMifierMethodVisitor12.visitTableSwitchInsn(0, (int) (byte) 10, label23, labelArray25);
        java.io.PrintWriter printWriter27 = printWriter8.printf("hi!", (java.lang.Object[]) labelArray25);
        aSMifierMethodVisitor0.visitTableSwitchInsn(1, (int) (short) 10, label6, labelArray25);
        aSMifierMethodVisitor0.visitVarInsn(100, (int) ' ');
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "hi!", label35, label36, 1);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIincInsn((int) '#', (int) (short) 10);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label46, label47, (int) (short) 1);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label51);
        org.junit.Assert.assertNotNull(labelArray25);
        org.junit.Assert.assertNotNull(printWriter27);
    }

    @Test
    public void test07618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07618");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, 0);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "hi!", "");
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label72);
        java.util.List list74 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label76, label77, label78, "hi!");
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        org.mockito.asm.Label label83 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label81, label82, label83, "");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(list74);
    }

    @Test
    public void test07619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07619");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter24.print((float) 10L);
        printWriter24.println(false);
        printWriter24.print(0);
        printWriter24.println("hi!");
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter((java.io.Writer) printWriter43, false);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test07620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07620");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor0.visitInsn(100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list20 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label24, label25, (int) (short) 1);
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 0, label29);
        aSMifierMethodVisitor0.visitInsn((int) (short) 1);
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, (int) (short) -1);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 100, "", "", "");
        org.junit.Assert.assertNotNull(list20);
    }

    @Test
    public void test07621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07621");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 0, label61);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor64.visitMaxs(100, (int) (short) -1);
        aSMifierMethodVisitor64.visitMaxs((int) (short) -1, (int) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = aSMifierMethodVisitor64.visitParameterAnnotation((int) (byte) -1, "", false);
        annotationVisitor82.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) annotationVisitor82);
        org.mockito.asm.Label label85 = null;
        org.mockito.asm.Label label86 = null;
        org.mockito.asm.Label label87 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label85, label86, label87, "hi!");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor82);
    }

    @Test
    public void test07622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07622");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        java.util.Locale locale23 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray28 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray30 = null;
        aSMifierMethodVisitor25.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray28, (int) (short) 1, objArray30);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor33.visitTryCatchBlock(label34, label35, label36, "");
        aSMifierMethodVisitor33.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray44 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor33, strArray42, 1.0f };
        java.io.PrintWriter printWriter45 = printWriter22.printf(locale23, "", (java.lang.Object[]) strArray42);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.Writer) printWriter45, true);
        printWriter20.print((java.lang.Object) printWriter47);
        printWriter47.print(0L);
        printWriter47.write("");
        printWriter47.println('4');
        printWriter47.println(0.0d);
        printWriter47.write("hi!");
        printWriter47.write("hi!");
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter((java.io.Writer) printWriter47);
        printWriter61.print(0.0f);
        printWriter61.print((int) (short) 100);
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(printWriter45);
    }

    @Test
    public void test07623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07623");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.print((double) (byte) 10);
        java.util.Locale locale6 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label14 = null;
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label[] labelArray33 = new org.mockito.asm.Label[] { label32 };
        aSMifierMethodVisitor20.visitTableSwitchInsn(0, (int) (byte) 10, label31, labelArray33);
        java.io.PrintWriter printWriter35 = printWriter16.printf("hi!", (java.lang.Object[]) labelArray33);
        aSMifierMethodVisitor8.visitTableSwitchInsn(1, (int) (short) 10, label14, labelArray33);
        java.io.PrintWriter printWriter37 = printWriter1.format(locale6, "hi!", (java.lang.Object[]) labelArray33);
        printWriter37.write((int) (byte) 1);
        java.io.PrintWriter printWriter43 = printWriter37.append((java.lang.CharSequence) "hi!", 0, (int) (byte) 1);
        printWriter37.println();
        printWriter37.print((double) (short) 0);
        printWriter37.print((double) 10L);
        printWriter37.println((float) 100);
        org.junit.Assert.assertNotNull(labelArray33);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(printWriter43);
    }

    @Test
    public void test07624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07624");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((int) (byte) -1);
        printWriter1.print((double) (byte) 1);
        printWriter1.close();
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter11.println();
        printWriter11.println('4');
        printWriter11.println((float) 1L);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        printWriter18.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter22 = printWriter18.append((java.lang.CharSequence) "");
        printWriter18.print((int) (byte) -1);
        printWriter18.print((double) (byte) 1);
        printWriter18.close();
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        java.util.Locale locale30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray37 = null;
        aSMifierMethodVisitor32.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray35, (int) (short) 1, objArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray49 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray51 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor40, strArray49, 1.0f };
        java.io.PrintWriter printWriter52 = printWriter29.printf(locale30, "", (java.lang.Object[]) strArray49);
        java.io.PrintWriter printWriter54 = printWriter52.append((java.lang.CharSequence) "");
        printWriter52.write((int) (byte) 0);
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter("hi!");
        java.util.Locale locale59 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray64 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray66 = null;
        aSMifierMethodVisitor61.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray64, (int) (short) 1, objArray66);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor69.visitTryCatchBlock(label70, label71, label72, "");
        aSMifierMethodVisitor69.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray78 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray80 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor69, strArray78, 1.0f };
        java.io.PrintWriter printWriter81 = printWriter58.printf(locale59, "", (java.lang.Object[]) strArray78);
        char[] charArray88 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter81.println(charArray88);
        printWriter52.print(charArray88);
        printWriter18.write(charArray88, (int) 'a', 0);
        printWriter11.println(charArray88);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(printWriter81);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test07625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07625");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitInnerClass("hi!", "", "", (int) ' ');
        aSMifierClassVisitor28.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test07626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07626");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierClassVisitor15.visitAnnotation("", false);
        aSMifierClassVisitor15.visitSource("hi!", "hi!");
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        aSMifierClassVisitor15.visitOuterClass("", "", "");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(annotationVisitor33);
    }

    @Test
    public void test07627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07627");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.println((float) (short) 0);
        java.io.PrintWriter printWriter7 = printWriter1.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter9 = printWriter1.append('#');
        printWriter9.write((int) (short) 0);
        java.io.PrintWriter printWriter13 = printWriter9.append((java.lang.CharSequence) "");
        // The following exception was thrown during execution in test generation
        try {
            printWriter9.write("hi!", (int) '4', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 152");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter7);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter13);
    }

    @Test
    public void test07628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07628");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs((int) (byte) -1, 10);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label30);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test07629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07629");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitInsn((int) (byte) 100);
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor0.visitLabel(label13);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 10, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) -1, "", false);
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 0, label23);
        org.junit.Assert.assertNotNull(annotationVisitor21);
    }

    @Test
    public void test07630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07630");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj45 = null;
        aSMifierMethodVisitor36.visitLdcInsn(obj45);
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor36.visitJumpInsn((int) (short) 1, label48);
        aSMifierMethodVisitor36.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor36.visitParameterAnnotation((int) (byte) 1, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor57 = aSMifierClassVisitor31.visitField((int) (byte) 0, "", "", "", (java.lang.Object) aSMifierMethodVisitor36);
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter("hi!");
        printWriter63.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter67 = printWriter63.append((java.lang.CharSequence) "");
        printWriter63.print((int) (byte) -1);
        printWriter63.print((double) (byte) 1);
        printWriter63.close();
        java.io.PrintWriter printWriter73 = new java.io.PrintWriter((java.io.Writer) printWriter63);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor74 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        org.mockito.asm.FieldVisitor fieldVisitor75 = aSMifierClassVisitor31.visitField((int) (short) 0, "", "", "", (java.lang.Object) aSMifierClassVisitor74);
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierClassVisitor31.visitAnnotation("hi!", false);
        aSMifierClassVisitor31.visitEnd();
        aSMifierClassVisitor31.visitInnerClass("hi!", "", "hi!", (int) (byte) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor87 = aSMifierClassVisitor31.visitAnnotation("", false);
        aSMifierClassVisitor31.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor95 = aSMifierClassVisitor31.visitAnnotation("", true);
        aSMifierClassVisitor31.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(fieldVisitor75);
        org.junit.Assert.assertNotNull(annotationVisitor78);
        org.junit.Assert.assertNotNull(annotationVisitor87);
        org.junit.Assert.assertNotNull(annotationVisitor95);
    }

    @Test
    public void test07631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07631");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        printWriter26.write((-1));
        printWriter26.flush();
        java.util.Locale locale30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray37 = null;
        aSMifierMethodVisitor32.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray35, (int) (short) 1, objArray37);
        java.io.PrintWriter printWriter39 = printWriter26.printf(locale30, "", (java.lang.Object[]) strArray35);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor40 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        aSMifierClassVisitor40.visitEnd();
        aSMifierClassVisitor40.visitOuterClass("", "", "");
        aSMifierClassVisitor40.visitSource("", "hi!");
        java.lang.String[] strArray53 = null;
        org.mockito.asm.MethodVisitor methodVisitor54 = aSMifierClassVisitor40.visitMethod((-1), "", "hi!", "", strArray53);
        aSMifierClassVisitor40.visitOuterClass("hi!", "", "");
        aSMifierClassVisitor40.visitOuterClass("hi!", "hi!", "hi!");
        aSMifierClassVisitor40.visitInnerClass("", "hi!", "hi!", 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 1);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(methodVisitor54);
    }

    @Test
    public void test07632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07632");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitSource("", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor42.visitTryCatchBlock(label43, label44, label45, "");
        aSMifierMethodVisitor42.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj51 = null;
        aSMifierMethodVisitor42.visitLdcInsn(obj51);
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor42.visitJumpInsn((int) (short) 1, label54);
        aSMifierMethodVisitor42.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor42.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierMethodVisitor42.visitAnnotationDefault();
        java.io.PrintWriter printWriter66 = new java.io.PrintWriter("hi!");
        printWriter66.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor70 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor70.visitTryCatchBlock(label71, label72, label73, "");
        aSMifierMethodVisitor70.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        org.mockito.asm.Label[] labelArray83 = new org.mockito.asm.Label[] { label82 };
        aSMifierMethodVisitor70.visitTableSwitchInsn(0, (int) (byte) 10, label81, labelArray83);
        java.io.PrintWriter printWriter85 = printWriter66.printf("hi!", (java.lang.Object[]) labelArray83);
        java.lang.String[] strArray87 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor42.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray83, 1, (java.lang.Object[]) strArray87);
        aSMifierMethodVisitor42.visitMaxs((int) (byte) 0, (int) (byte) 100);
        org.mockito.asm.FieldVisitor fieldVisitor92 = aSMifierClassVisitor28.visitField(0, "", "hi!", "hi!", (java.lang.Object) (byte) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor95 = fieldVisitor92.visitAnnotation("hi!", true);
        org.mockito.asm.Attribute attribute96 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor92.visitAttribute(attribute96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(labelArray83);
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(fieldVisitor92);
        org.junit.Assert.assertNotNull(annotationVisitor95);
    }

    @Test
    public void test07633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07633");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "hi!", "hi!", (int) (byte) 1);
        aSMifierClassVisitor28.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor28.visitAnnotation("", true);
        org.mockito.asm.FieldVisitor fieldVisitor43 = aSMifierClassVisitor28.visitField((int) (byte) 10, "", "", "", (java.lang.Object) 10.0d);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierClassVisitor28.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierClassVisitor28.visitAnnotation("", false);
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitInnerClass("", "hi!", "", (int) 'a');
        aSMifierClassVisitor28.visitOuterClass("", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierClassVisitor28.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = annotationVisitor62.visitArray("hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test07634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07634");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.print((int) ' ');
        java.lang.Object obj29 = null;
        printWriter24.print(obj29);
        printWriter24.println(false);
        printWriter24.print('#');
        printWriter24.println("");
        printWriter24.println("hi!");
        printWriter24.print((long) (byte) -1);
        printWriter24.println(0.0f);
        printWriter24.close();
        printWriter24.print(true);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test07635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07635");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append(' ');
        printWriter28.println(true);
        java.util.Locale locale31 = null;
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        java.util.Locale locale35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray40 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray42 = null;
        aSMifierMethodVisitor37.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray40, (int) (short) 1, objArray42);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray56 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor45, strArray54, 1.0f };
        java.io.PrintWriter printWriter57 = printWriter34.printf(locale35, "", (java.lang.Object[]) strArray54);
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57, true);
        printWriter59.println('a');
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter("hi!");
        java.util.Locale locale65 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray70 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray72 = null;
        aSMifierMethodVisitor67.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray70, (int) (short) 1, objArray72);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor75 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor75.visitTryCatchBlock(label76, label77, label78, "");
        aSMifierMethodVisitor75.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray84 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray86 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor75, strArray84, 1.0f };
        java.io.PrintWriter printWriter87 = printWriter64.printf(locale65, "", (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter88 = printWriter59.format("", (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter89 = printWriter28.format(locale31, "", (java.lang.Object[]) strArray84);
        printWriter28.print((double) (short) 100);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertNotNull(printWriter87);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter89);
    }

    @Test
    public void test07636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07636");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", true);
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label26);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj39 = null;
        aSMifierMethodVisitor30.visitLdcInsn(obj39);
        aSMifierMethodVisitor30.visitEnd();
        aSMifierMethodVisitor30.visitCode();
        java.util.List list43 = aSMifierMethodVisitor30.text;
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) list43);
        aSMifierMethodVisitor0.visitInsn(1);
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor0.visitParameterAnnotation((int) 'a', "", true);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 0);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(annotationVisitor50);
    }

    @Test
    public void test07637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07637");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitLabel(label4);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) 10);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 1, (int) '4');
        aSMifierMethodVisitor0.visitFieldInsn((int) '#', "", "hi!", "hi!");
    }

    @Test
    public void test07638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07638");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append(' ');
        printWriter28.print(1);
        printWriter28.println(false);
        printWriter28.print((double) (-1L));
        printWriter28.print(1);
        printWriter28.write("");
        printWriter28.print((float) (-1L));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
    }

    @Test
    public void test07639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07639");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println((float) '#');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter1.print((float) 1);
        printWriter1.print(100L);
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter("hi!");
        printWriter11.print(false);
        printWriter11.println(false);
        java.io.PrintWriter printWriter17 = printWriter11.append('#');
        printWriter17.print(false);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.write((-1));
        printWriter22.flush();
        java.util.Locale locale26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray31 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray33 = null;
        aSMifierMethodVisitor28.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray31, (int) (short) 1, objArray33);
        java.io.PrintWriter printWriter35 = printWriter22.printf(locale26, "", (java.lang.Object[]) strArray31);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter22);
        printWriter22.print((double) 'a');
        java.io.PrintWriter printWriter40 = printWriter22.append((java.lang.CharSequence) "");
        java.util.Locale locale41 = null;
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("hi!");
        printWriter44.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter48 = printWriter44.append((java.lang.CharSequence) "");
        printWriter48.close();
        printWriter48.println(true);
        java.util.Locale locale52 = null;
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter57 = printWriter55.append('a');
        printWriter55.print("hi!");
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter((java.io.Writer) printWriter55, false);
        printWriter61.write("hi!");
        printWriter61.println(' ');
        java.util.Locale locale66 = null;
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter("hi!");
        java.util.Locale locale70 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor72 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray75 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray77 = null;
        aSMifierMethodVisitor72.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray75, (int) (short) 1, objArray77);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor80 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        org.mockito.asm.Label label83 = null;
        aSMifierMethodVisitor80.visitTryCatchBlock(label81, label82, label83, "");
        aSMifierMethodVisitor80.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray89 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray91 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor80, strArray89, 1.0f };
        java.io.PrintWriter printWriter92 = printWriter69.printf(locale70, "", (java.lang.Object[]) strArray89);
        java.io.PrintWriter printWriter93 = printWriter61.printf(locale66, "", (java.lang.Object[]) strArray89);
        java.io.PrintWriter printWriter94 = printWriter48.format(locale52, "", (java.lang.Object[]) strArray89);
        java.io.PrintWriter printWriter95 = printWriter40.format(locale41, "hi!", (java.lang.Object[]) strArray89);
        java.io.PrintWriter printWriter96 = printWriter17.printf("", (java.lang.Object[]) strArray89);
        printWriter1.println((java.lang.Object) "");
        printWriter1.println((float) (-1));
        org.junit.Assert.assertNotNull(printWriter17);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertNotNull(printWriter92);
        org.junit.Assert.assertNotNull(printWriter93);
        org.junit.Assert.assertNotNull(printWriter94);
        org.junit.Assert.assertNotNull(printWriter95);
        org.junit.Assert.assertNotNull(printWriter96);
    }

    @Test
    public void test07640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07640");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        printWriter30.write((-1));
        printWriter30.flush();
        java.util.Locale locale34 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = null;
        aSMifierMethodVisitor36.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray39, (int) (short) 1, objArray41);
        java.io.PrintWriter printWriter43 = printWriter30.printf(locale34, "", (java.lang.Object[]) strArray39);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor44 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter30);
        aSMifierClassVisitor44.visitEnd();
        aSMifierClassVisitor44.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor44.visitEnd();
        aSMifierClassVisitor44.visitOuterClass("", "", "hi!");
        printWriter28.print((java.lang.Object) "");
        java.lang.Class<?> wildcardClass56 = printWriter28.getClass();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test07641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07641");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter1.println();
        java.util.Locale locale9 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor11.visitTryCatchBlock(label12, label13, label14, "");
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor11.visitLocalVariable("hi!", "hi!", "hi!", label20, label21, (int) (byte) 10);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        printWriter25.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray29 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter30 = printWriter25.format("", (java.lang.Object[]) strArray29);
        aSMifierMethodVisitor11.visitLdcInsn((java.lang.Object) strArray29);
        java.io.PrintWriter printWriter32 = printWriter1.printf(locale9, "", (java.lang.Object[]) strArray29);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter((java.io.Writer) printWriter32);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter33);
        java.util.List list35 = aSMifierClassVisitor34.getText();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(list35);
    }

    @Test
    public void test07642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07642");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println((int) (short) 1);
        printWriter1.write((int) (byte) 1);
        java.io.PrintWriter printWriter12 = printWriter1.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor13 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter12);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierClassVisitor13.visitAnnotation("", false);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(annotationVisitor16);
    }

    @Test
    public void test07643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07643");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.println(false);
        printWriter24.println(0);
        printWriter24.close();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor32 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        aSMifierClassVisitor32.visitOuterClass("", "", "");
        aSMifierClassVisitor32.visitSource("", "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test07644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07644");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list14 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs((int) (short) -1, (int) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMethodInsn((int) ' ', "hi!", "hi!", "");
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test07645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07645");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, (-1));
        aSMifierMethodVisitor0.visitInsn((int) '#');
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        printWriter18.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter22 = printWriter18.append((java.lang.CharSequence) "");
        aSMifierMethodVisitor0.print(printWriter22);
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label27, label28, (int) (byte) 0);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.junit.Assert.assertNotNull(printWriter22);
    }

    @Test
    public void test07646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07646");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "");
        java.util.List list35 = aSMifierClassVisitor15.getText();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(list35);
    }

    @Test
    public void test07647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07647");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label19, labelArray20);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        aSMifierMethodVisitor0.visitInsn(10);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label30, label31, label32, "");
        org.junit.Assert.assertNotNull(labelArray20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test07648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07648");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter30 = printWriter24.append((java.lang.CharSequence) "hi!", (int) (short) 0, 0);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter30);
    }

    @Test
    public void test07649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07649");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label12);
        aSMifierMethodVisitor0.visitFieldInsn((int) '#', "", "hi!", "");
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 0, label20);
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label22, label23, label24, "");
        aSMifierMethodVisitor0.visitInsn((int) (short) 0);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, (int) (short) -1);
    }

    @Test
    public void test07650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07650");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor8.visitEnd();
        aSMifierClassVisitor8.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor15.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor15.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj24 = null;
        aSMifierMethodVisitor15.visitLdcInsn(obj24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor15.visitJumpInsn((int) (short) 1, label27);
        aSMifierMethodVisitor15.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor15.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor15.visitAnnotationDefault();
        aSMifierMethodVisitor15.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor15.visitAnnotationDefault();
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor15.visitLocalVariable("hi!", "hi!", "", label43, label44, (int) (short) 1);
        aSMifierMethodVisitor15.visitIntInsn((int) '#', (int) 'a');
        aSMifierMethodVisitor15.visitIntInsn((int) (short) 100, (int) (byte) 0);
        aSMifierMethodVisitor15.visitMaxs((int) (byte) 100, (int) '#');
        aSMifierMethodVisitor15.visitFieldInsn((int) (byte) 10, "", "hi!", "");
        org.mockito.asm.FieldVisitor fieldVisitor61 = aSMifierClassVisitor8.visitField((int) (short) 100, "", "", "", (java.lang.Object) (byte) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor66.visitTryCatchBlock(label67, label68, label69, "");
        aSMifierMethodVisitor66.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj75 = null;
        aSMifierMethodVisitor66.visitLdcInsn(obj75);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor66.visitJumpInsn((int) (short) 1, label78);
        aSMifierMethodVisitor66.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor66.visitInsn(100);
        aSMifierMethodVisitor66.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor89 = aSMifierMethodVisitor66.visitParameterAnnotation((int) (short) 100, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor90 = aSMifierClassVisitor8.visitField((int) (short) -1, "", "", "hi!", (java.lang.Object) aSMifierMethodVisitor66);
        org.mockito.asm.AnnotationVisitor annotationVisitor93 = fieldVisitor90.visitAnnotation("", true);
        fieldVisitor90.visitEnd();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor89);
        org.junit.Assert.assertNotNull(fieldVisitor90);
        org.junit.Assert.assertNotNull(annotationVisitor93);
    }

    @Test
    public void test07651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07651");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.write((int) (byte) 0);
        printWriter24.write("hi!");
        printWriter24.print((-1.0d));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
    }

    @Test
    public void test07652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07652");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray5 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter6 = printWriter1.format("", (java.lang.Object[]) strArray5);
        printWriter6.println('a');
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        java.util.Locale locale11 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray16 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray18 = null;
        aSMifierMethodVisitor13.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray16, (int) (short) 1, objArray18);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor21.visitTryCatchBlock(label22, label23, label24, "");
        aSMifierMethodVisitor21.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor21, strArray30, 1.0f };
        java.io.PrintWriter printWriter33 = printWriter10.printf(locale11, "", (java.lang.Object[]) strArray30);
        char[] charArray40 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter33.println(charArray40);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter((java.io.Writer) printWriter33, true);
        java.io.PrintWriter printWriter45 = printWriter33.append((java.lang.CharSequence) "");
        printWriter33.print((float) 10L);
        printWriter33.write("", (int) (short) 1, (int) (short) -1);
        printWriter33.println((int) (byte) 100);
        printWriter6.println((java.lang.Object) printWriter33);
        printWriter33.println((float) (short) -1);
        printWriter33.print('#');
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter45);
    }

    @Test
    public void test07653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07653");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) -1, (int) (byte) 1);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label23, label24, 10);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label30, label31, (-1));
        aSMifierMethodVisitor0.visitTypeInsn((int) '#', "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor16);
    }

    @Test
    public void test07654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07654");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor8.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierClassVisitor8.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        printWriter18.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter22 = printWriter18.append((java.lang.CharSequence) "");
        printWriter18.print((double) 1);
        java.io.PrintWriter printWriter26 = printWriter18.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter18, true);
        java.util.Locale locale29 = null;
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter34 = printWriter32.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj44 = null;
        aSMifierMethodVisitor35.visitLdcInsn(obj44);
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor35.visitJumpInsn((int) (short) 1, label47);
        aSMifierMethodVisitor35.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor35.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierMethodVisitor35.visitAnnotationDefault();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter("hi!");
        printWriter59.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor63.visitTryCatchBlock(label64, label65, label66, "");
        aSMifierMethodVisitor63.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label[] labelArray76 = new org.mockito.asm.Label[] { label75 };
        aSMifierMethodVisitor63.visitTableSwitchInsn(0, (int) (byte) 10, label74, labelArray76);
        java.io.PrintWriter printWriter78 = printWriter59.printf("hi!", (java.lang.Object[]) labelArray76);
        java.lang.String[] strArray80 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor35.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray76, 1, (java.lang.Object[]) strArray80);
        printWriter34.println((java.lang.Object) strArray80);
        java.io.PrintWriter printWriter83 = printWriter18.printf(locale29, "hi!", (java.lang.Object[]) strArray80);
        org.mockito.asm.MethodVisitor methodVisitor84 = aSMifierClassVisitor8.visitMethod((int) '#', "", "hi!", "hi!", strArray80);
        methodVisitor84.visitEnd();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(labelArray76);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertNotNull(methodVisitor84);
    }

    @Test
    public void test07655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07655");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        java.util.List list33 = aSMifierClassVisitor28.getText();
        aSMifierClassVisitor28.visitSource("hi!", "");
        aSMifierClassVisitor28.visitSource("hi!", "");
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter("hi!");
        printWriter45.print(false);
        java.io.PrintWriter printWriter49 = printWriter45.append((java.lang.CharSequence) "hi!");
        printWriter45.println(true);
        org.mockito.asm.FieldVisitor fieldVisitor52 = aSMifierClassVisitor28.visitField((int) (byte) 10, "", "", "", (java.lang.Object) true);
        aSMifierClassVisitor28.visitInnerClass("", "", "hi!", (int) (short) -1);
        org.mockito.asm.Attribute attribute58 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor28.visitAttribute(attribute58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(fieldVisitor52);
    }

    @Test
    public void test07656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07656");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = printWriter1.append((java.lang.CharSequence) "");
        printWriter22.close();
        java.io.PrintWriter printWriter25 = printWriter22.append(' ');
        printWriter22.println((double) 0L);
        java.io.PrintWriter printWriter29 = printWriter22.append((java.lang.CharSequence) "hi!");
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(printWriter29);
    }

    @Test
    public void test07657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07657");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs((int) (byte) -1, 10);
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "hi!", "", "");
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitLabel(label32);
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label35);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor0.visitJumpInsn(0, label42);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test07658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07658");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println((int) (short) 1);
        java.io.PrintWriter printWriter12 = printWriter1.append((java.lang.CharSequence) "hi!", (int) (short) 1, (int) (byte) 1);
        printWriter1.flush();
        java.lang.Class<?> wildcardClass14 = printWriter1.getClass();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test07659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07659");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 100, label61);
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter66 = printWriter64.append('a');
        java.io.PrintWriter printWriter68 = new java.io.PrintWriter((java.io.Writer) printWriter66, true);
        printWriter66.println(10);
        aSMifierMethodVisitor0.print(printWriter66);
        aSMifierMethodVisitor0.visitMaxs(100, (-1));
        aSMifierMethodVisitor0.visitInsn((int) '#');
        java.util.List list77 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(list77);
    }

    @Test
    public void test07660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07660");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor9 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor9);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test07661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07661");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        printWriter1.print(0L);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print(0.0d);
        printWriter1.print((int) 'a');
        printWriter1.write("hi!", (int) (byte) -1, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter21 = printWriter1.append((java.lang.CharSequence) "hi!", (int) (short) 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 32");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter9);
    }

    @Test
    public void test07662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07662");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label11 = null;
        int[] intArray18 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor19.visitTryCatchBlock(label20, label21, label22, "");
        aSMifierMethodVisitor19.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label[] labelArray32 = new org.mockito.asm.Label[] { label31 };
        aSMifierMethodVisitor19.visitTableSwitchInsn(0, (int) (byte) 10, label30, labelArray32);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label11, intArray18, labelArray32);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 1, "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, 0);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) ' ');
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 100, (int) (byte) 10);
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 10, label50);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.util.List list53 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray32);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(list53);
    }

    @Test
    public void test07663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07663");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        printWriter7.flush();
        printWriter7.flush();
        printWriter7.print(' ');
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test07664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07664");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLabel(label17);
        aSMifierMethodVisitor0.visitInsn(100);
        java.util.List list21 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitLineNumber(1, label23);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "", true);
        aSMifierMethodVisitor0.visitInsn((int) (short) 100);
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label32);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(annotationVisitor28);
    }

    @Test
    public void test07665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07665");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("hi!");
        printWriter2.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter6 = printWriter2.append((java.lang.CharSequence) "");
        printWriter2.print((int) (byte) -1);
        printWriter2.write("", (int) (byte) 1, (int) (short) 0);
        printWriter2.print((double) (byte) -1);
        aSMifierMethodVisitor0.print(printWriter2);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "");
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitLabel(label19);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, (int) (short) -1);
        org.junit.Assert.assertNotNull(printWriter6);
    }

    @Test
    public void test07666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07666");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLabel(label17);
        aSMifierMethodVisitor0.visitInsn(100);
        java.util.List list21 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLabel(label22);
        aSMifierMethodVisitor0.visitMaxs((int) '4', (int) (byte) 100);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        java.util.Locale locale29 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray34 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray36 = null;
        aSMifierMethodVisitor31.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray34, (int) (short) 1, objArray36);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray50 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor39, strArray48, 1.0f };
        java.io.PrintWriter printWriter51 = printWriter28.printf(locale29, "", (java.lang.Object[]) strArray48);
        java.io.PrintWriter printWriter53 = printWriter51.append((java.lang.CharSequence) "");
        printWriter51.write((int) (byte) 0);
        printWriter51.write("hi!");
        printWriter51.print((long) '4');
        aSMifierMethodVisitor0.print(printWriter51);
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor0.visitLabel(label61);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor0.visitLineNumber(0, label65);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(printWriter53);
    }

    @Test
    public void test07667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07667");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        org.mockito.asm.MethodVisitor methodVisitor37 = aSMifierClassVisitor31.visitMethod(0, "", "", "hi!", strArray36);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter47 = printWriter43.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj58 = null;
        aSMifierMethodVisitor49.visitLdcInsn(obj58);
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor49.visitJumpInsn((int) (short) 1, label61);
        aSMifierMethodVisitor49.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label[] labelArray69 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor49.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label68, labelArray69);
        java.io.PrintWriter printWriter71 = printWriter47.printf("", (java.lang.Object[]) labelArray69);
        printWriter71.println('a');
        org.mockito.asm.FieldVisitor fieldVisitor74 = aSMifierClassVisitor31.visitField((int) 'a', "hi!", "hi!", "hi!", (java.lang.Object) printWriter71);
        printWriter71.println((double) 100L);
        printWriter71.println((float) 100L);
        printWriter71.print((int) (byte) 100);
        printWriter71.println((int) (byte) -1);
        printWriter71.println((float) 100L);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodVisitor37);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(labelArray69);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(fieldVisitor74);
    }

    @Test
    public void test07668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07668");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.println((java.lang.Object) "");
        printWriter1.print(true);
    }

    @Test
    public void test07669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07669");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label19, label20, (int) '4');
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 10);
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label27, label28, label29, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) ' ', label35);
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 100, "hi!", "", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test07670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07670");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor17.visitTryCatchBlock(label18, label19, label20, "");
        aSMifierMethodVisitor17.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj26 = null;
        aSMifierMethodVisitor17.visitLdcInsn(obj26);
        org.mockito.asm.Label label28 = null;
        int[] intArray35 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] { label48 };
        aSMifierMethodVisitor36.visitTableSwitchInsn(0, (int) (byte) 10, label47, labelArray49);
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label28, intArray35, labelArray49);
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label16, intArray35, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn(0, (int) '#');
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor0.visitLabel(label58);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) 'a');
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor54);
    }

    @Test
    public void test07671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07671");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 100, label14);
        aSMifierMethodVisitor0.visitMaxs(10, (int) ' ');
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, (int) (byte) 1);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) (short) 1);
        aSMifierMethodVisitor0.visitVarInsn(1, (int) (short) -1);
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 1, (int) (byte) 0);
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 1, label32);
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] { label49 };
        aSMifierMethodVisitor37.visitTableSwitchInsn(0, (int) (byte) 10, label48, labelArray50);
        aSMifierMethodVisitor0.visitTableSwitchInsn(10, (int) (byte) 0, label36, labelArray50);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor0.visitLabel(label58);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(labelArray50);
    }

    @Test
    public void test07672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07672");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitInsn(0);
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 0, "hi!", false);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 10, (int) (byte) 0);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test07673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07673");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs((int) ' ', (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) -1, (int) '4');
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label16);
    }

    @Test
    public void test07674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07674");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 10);
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label27, label28, (int) (short) 1);
        aSMifierMethodVisitor0.visitVarInsn(10, (int) (byte) -1);
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '#', label35);
        aSMifierMethodVisitor0.visitMaxs(10, (-1));
        aSMifierMethodVisitor0.visitCode();
    }

    @Test
    public void test07675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07675");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray24 = null;
        org.mockito.asm.MethodVisitor methodVisitor25 = aSMifierClassVisitor15.visitMethod(0, "", "hi!", "", strArray24);
        methodVisitor25.visitTypeInsn((int) 'a', "");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(methodVisitor25);
    }

    @Test
    public void test07676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07676");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = printWriter1.append((java.lang.CharSequence) "");
        printWriter22.close();
        java.io.PrintWriter printWriter25 = printWriter22.append(' ');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj35 = null;
        aSMifierMethodVisitor26.visitLdcInsn(obj35);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor26.visitAnnotationDefault();
        printWriter25.println((java.lang.Object) aSMifierMethodVisitor26);
        printWriter25.println();
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter25);
        printWriter40.write("");
        printWriter40.println((float) 10L);
        printWriter40.println(' ');
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test07677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07677");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitTypeInsn(10, "");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor17);
    }

    @Test
    public void test07678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07678");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, 0);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "hi!", "");
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label72);
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label74, label75, label76, "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 100, (int) ' ');
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, (int) '4');
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationVisitor84);
    }

    @Test
    public void test07679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07679");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.close();
        printWriter1.print((int) '#');
        printWriter1.close();
        boolean boolean8 = printWriter1.checkError();
        java.io.PrintWriter printWriter10 = printWriter1.append('4');
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        printWriter14.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter18 = printWriter14.append((java.lang.CharSequence) "");
        printWriter14.print((int) (byte) -1);
        printWriter14.write("", (int) (byte) 1, (int) (short) 0);
        printWriter14.print((double) (byte) -1);
        aSMifierMethodVisitor12.print(printWriter14);
        printWriter14.println((long) (short) 100);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "");
        printWriter31.print((int) (byte) -1);
        printWriter31.print((double) (byte) 1);
        printWriter31.close();
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter((java.io.Writer) printWriter31);
        boolean boolean42 = printWriter31.checkError();
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("hi!");
        printWriter44.print((java.lang.Object) (short) -1);
        printWriter44.flush();
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter("hi!");
        java.util.Locale locale50 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray55 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray57 = null;
        aSMifierMethodVisitor52.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray55, (int) (short) 1, objArray57);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor60.visitTryCatchBlock(label61, label62, label63, "");
        aSMifierMethodVisitor60.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray69 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray71 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor60, strArray69, 1.0f };
        java.io.PrintWriter printWriter72 = printWriter49.printf(locale50, "", (java.lang.Object[]) strArray69);
        char[] charArray79 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter72.println(charArray79);
        printWriter44.print(charArray79);
        printWriter31.write(charArray79, (-1), (int) (short) 10);
        printWriter14.println(charArray79);
        printWriter11.print(charArray79);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test07680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07680");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter11.println(false);
        printWriter11.flush();
        printWriter11.flush();
        printWriter11.write((int) (byte) -1);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
    }

    @Test
    public void test07681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07681");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        char[] charArray56 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter49.println(charArray56);
        printWriter24.print(charArray56);
        printWriter24.print(true);
        java.io.PrintWriter printWriter62 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.print((float) '4');
        printWriter24.println();
        printWriter24.write("hi!");
        java.io.PrintWriter printWriter69 = printWriter24.append((java.lang.CharSequence) "hi!");
        printWriter24.print((int) (short) 100);
        boolean boolean72 = printWriter24.checkError();
        java.util.Locale locale73 = null;
        java.io.PrintWriter printWriter76 = new java.io.PrintWriter("hi!");
        printWriter76.write((-1));
        printWriter76.flush();
        java.util.Locale locale80 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor82 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray85 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray87 = null;
        aSMifierMethodVisitor82.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray85, (int) (short) 1, objArray87);
        java.io.PrintWriter printWriter89 = printWriter76.printf(locale80, "", (java.lang.Object[]) strArray85);
        java.io.PrintWriter printWriter90 = printWriter24.printf(locale73, "", (java.lang.Object[]) strArray85);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor91 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(printWriter89);
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test07682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07682");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor9 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLabel(label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.junit.Assert.assertNotNull(annotationVisitor9);
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test07683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07683");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label17, label18, (int) (byte) 1);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 10, 100);
        org.junit.Assert.assertNotNull(annotationVisitor13);
    }

    @Test
    public void test07684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07684");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter9, false);
        printWriter11.print("hi!");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
    }

    @Test
    public void test07685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07685");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label10);
        aSMifierMethodVisitor0.visitInsn((int) (short) 10);
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label17, label18, 0);
        aSMifierMethodVisitor0.visitIntInsn(0, 100);
        java.util.List list24 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitFieldInsn((int) '#', "", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "hi!", label33, label34, (int) ' ');
        org.junit.Assert.assertNotNull(list24);
    }

    @Test
    public void test07686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07686");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter11.println(false);
        printWriter11.print('4');
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
    }

    @Test
    public void test07687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07687");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) ' ', label20);
        aSMifierMethodVisitor0.visitIntInsn((int) '#', (int) (short) 1);
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLabel(label25);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 0, "", "hi!", "");
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label32, label33, label34, "hi!");
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 1, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, (int) 'a');
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test07688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07688");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, 0);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "hi!", "");
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label72);
        org.mockito.asm.Attribute attribute74 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test07689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07689");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation(100, "", true);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitInsn(10);
        java.lang.Class<?> wildcardClass19 = aSMifierMethodVisitor0.getClass();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test07690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07690");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter16 = printWriter12.append((java.lang.CharSequence) "");
        printWriter8.println((java.lang.Object) printWriter16);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter("hi!");
        java.util.Locale locale20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray27 = null;
        aSMifierMethodVisitor22.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray25, (int) (short) 1, objArray27);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor30, strArray39, 1.0f };
        java.io.PrintWriter printWriter42 = printWriter19.printf(locale20, "", (java.lang.Object[]) strArray39);
        printWriter42.print('#');
        printWriter42.println(false);
        printWriter42.write("hi!");
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("hi!");
        java.util.Locale locale51 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray56 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray58 = null;
        aSMifierMethodVisitor53.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray56, (int) (short) 1, objArray58);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor61.visitTryCatchBlock(label62, label63, label64, "");
        aSMifierMethodVisitor61.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray70 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray72 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor61, strArray70, 1.0f };
        java.io.PrintWriter printWriter73 = printWriter50.printf(locale51, "", (java.lang.Object[]) strArray70);
        char[] charArray80 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter73.println(charArray80);
        printWriter42.println(charArray80);
        printWriter8.print(charArray80);
        printWriter8.print(true);
        printWriter8.println((float) 0);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test07691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07691");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (short) -1);
        java.lang.String[] strArray36 = org.mockito.asm.util.AbstractVisitor.TYPES;
        org.mockito.asm.MethodVisitor methodVisitor37 = aSMifierClassVisitor15.visitMethod(1, "hi!", "hi!", "", strArray36);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter47 = printWriter43.append((java.lang.CharSequence) "");
        printWriter43.print((int) (byte) -1);
        printWriter43.print((double) (byte) 1);
        printWriter43.close();
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter((java.io.Writer) printWriter43);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor54 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter43);
        org.mockito.asm.FieldVisitor fieldVisitor55 = aSMifierClassVisitor15.visitField((int) (byte) -1, "", "", "hi!", (java.lang.Object) aSMifierClassVisitor54);
        aSMifierClassVisitor54.visitSource("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodVisitor37);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(fieldVisitor55);
    }

    @Test
    public void test07692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07692");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label70, label71, (int) (short) 10);
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label77, label78, (int) '#');
        org.mockito.asm.Label label84 = null;
        org.mockito.asm.Label label85 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label84, label85, (int) (short) 0);
        org.mockito.asm.Label label88 = null;
        org.mockito.asm.Label label89 = null;
        org.mockito.asm.Label label90 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label88, label89, label90, "hi!");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
    }

    @Test
    public void test07693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07693");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray5 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter6 = printWriter1.format("", (java.lang.Object[]) strArray5);
        java.util.Locale locale7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj18 = null;
        aSMifierMethodVisitor9.visitLdcInsn(obj18);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor9.visitJumpInsn((int) (short) 1, label21);
        aSMifierMethodVisitor9.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor9.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor9.visitAnnotationDefault();
        aSMifierMethodVisitor9.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor9.visitLabel(label33);
        java.util.List list35 = aSMifierMethodVisitor9.getText();
        aSMifierMethodVisitor9.visitMultiANewArrayInsn("", (int) (short) 0);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        printWriter42.write((-1));
        printWriter42.flush();
        java.util.Locale locale46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray51 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray53 = null;
        aSMifierMethodVisitor48.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray51, (int) (short) 1, objArray53);
        java.io.PrintWriter printWriter55 = printWriter42.printf(locale46, "", (java.lang.Object[]) strArray51);
        java.lang.Object[] objArray57 = null;
        aSMifierMethodVisitor9.visitFrame((int) (short) 1, 10, (java.lang.Object[]) strArray51, (int) (short) -1, objArray57);
        java.io.PrintWriter printWriter59 = printWriter1.printf(locale7, "", objArray57);
        printWriter59.print("");
        printWriter59.print((double) (-1L));
        printWriter59.println(1.0d);
        java.io.PrintWriter printWriter67 = printWriter59.append((java.lang.CharSequence) "hi!");
        printWriter59.write("hi!", (int) (byte) 0, (-1));
        java.lang.Object obj72 = null;
        printWriter59.print(obj72);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(printWriter67);
    }

    @Test
    public void test07694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07694");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((int) (byte) -1);
        printWriter1.print((double) (byte) 1);
        printWriter1.close();
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        printWriter14.write((-1));
        printWriter14.flush();
        java.util.Locale locale18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray23 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray25 = null;
        aSMifierMethodVisitor20.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray23, (int) (short) 1, objArray25);
        java.io.PrintWriter printWriter27 = printWriter14.printf(locale18, "", (java.lang.Object[]) strArray23);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter14);
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        org.mockito.asm.FieldVisitor fieldVisitor43 = aSMifierClassVisitor28.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label40);
        aSMifierClassVisitor28.visitSource("hi!", "");
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        printWriter52.write((-1));
        printWriter52.flush();
        java.util.Locale locale56 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray61 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray63 = null;
        aSMifierMethodVisitor58.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray61, (int) (short) 1, objArray63);
        java.io.PrintWriter printWriter65 = printWriter52.printf(locale56, "", (java.lang.Object[]) strArray61);
        org.mockito.asm.MethodVisitor methodVisitor66 = aSMifierClassVisitor28.visitMethod((int) (byte) 0, "", "", "hi!", strArray61);
        java.io.PrintWriter printWriter67 = printWriter1.printf("", (java.lang.Object[]) strArray61);
        printWriter1.write("hi!", 100, (int) (byte) 0);
        printWriter1.print((double) (-1L));
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(printWriter65);
        org.junit.Assert.assertNotNull(methodVisitor66);
        org.junit.Assert.assertNotNull(printWriter67);
    }

    @Test
    public void test07695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07695");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 0, "hi!", false);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 100);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label19);
        aSMifierMethodVisitor0.visitTypeInsn(100, "");
        org.junit.Assert.assertNotNull(annotationVisitor15);
    }

    @Test
    public void test07696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07696");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter24.print((float) 10L);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor37 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter24.print((int) ' ');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test07697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07697");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label20, label21, label22, "hi!");
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        printWriter26.write((-1));
        printWriter26.flush();
        java.util.Locale locale30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray37 = null;
        aSMifierMethodVisitor32.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray35, (int) (short) 1, objArray37);
        java.io.PrintWriter printWriter39 = printWriter26.printf(locale30, "", (java.lang.Object[]) strArray35);
        aSMifierMethodVisitor0.print(printWriter39);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        java.util.Locale locale43 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray50 = null;
        aSMifierMethodVisitor45.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray48, (int) (short) 1, objArray50);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor53.visitTryCatchBlock(label54, label55, label56, "");
        aSMifierMethodVisitor53.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray62 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray64 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor53, strArray62, 1.0f };
        java.io.PrintWriter printWriter65 = printWriter42.printf(locale43, "", (java.lang.Object[]) strArray62);
        printWriter65.println();
        printWriter65.println((long) (short) 1);
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter((java.io.Writer) printWriter65);
        aSMifierMethodVisitor0.print(printWriter65);
        aSMifierMethodVisitor0.visitMethodInsn(0, "hi!", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "hi!", false);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertNotNull(printWriter65);
        org.junit.Assert.assertNotNull(annotationVisitor78);
        org.junit.Assert.assertNotNull(annotationVisitor82);
    }

    @Test
    public void test07698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07698");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.write((-1));
        printWriter22.flush();
        java.util.Locale locale26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray31 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray33 = null;
        aSMifierMethodVisitor28.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray31, (int) (short) 1, objArray33);
        java.io.PrintWriter printWriter35 = printWriter22.printf(locale26, "", (java.lang.Object[]) strArray31);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter22);
        aSMifierClassVisitor36.visitEnd();
        aSMifierClassVisitor36.visitSource("", "hi!");
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor36.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray46);
        org.mockito.asm.MethodVisitor methodVisitor48 = aSMifierClassVisitor15.visitMethod((int) (short) 100, "hi!", "hi!", "", strArray46);
        aSMifierClassVisitor15.visitInnerClass("", "", "", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierClassVisitor15.visitAnnotation("", false);
        aSMifierClassVisitor15.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor56);
    }

    @Test
    public void test07699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07699");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj35 = null;
        aSMifierMethodVisitor26.visitLdcInsn(obj35);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor26.visitJumpInsn((int) (short) 1, label38);
        aSMifierMethodVisitor26.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor46.visitTryCatchBlock(label47, label48, label49, "");
        aSMifierMethodVisitor46.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj55 = null;
        aSMifierMethodVisitor46.visitLdcInsn(obj55);
        org.mockito.asm.Label label57 = null;
        int[] intArray64 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        aSMifierMethodVisitor65.visitTryCatchBlock(label66, label67, label68, "");
        aSMifierMethodVisitor65.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label[] labelArray78 = new org.mockito.asm.Label[] { label77 };
        aSMifierMethodVisitor65.visitTableSwitchInsn(0, (int) (byte) 10, label76, labelArray78);
        aSMifierMethodVisitor46.visitLookupSwitchInsn(label57, intArray64, labelArray78);
        aSMifierMethodVisitor26.visitTableSwitchInsn((int) 'a', 10, label45, labelArray78);
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = aSMifierMethodVisitor26.visitAnnotation("", true);
        org.mockito.asm.Label label86 = null;
        aSMifierMethodVisitor26.visitJumpInsn((int) (byte) 0, label86);
        org.mockito.asm.Label label88 = null;
        aSMifierMethodVisitor26.visitLabel(label88);
        aSMifierMethodVisitor26.visitMaxs((int) (byte) 0, (int) (short) 100);
        printWriter24.println((java.lang.Object) aSMifierMethodVisitor26);
        printWriter24.close();
        java.io.PrintWriter printWriter96 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter24.print((long) (short) 100);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray78);
        org.junit.Assert.assertNotNull(annotationVisitor84);
    }

    @Test
    public void test07700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07700");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        printWriter10.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter14 = printWriter10.append((java.lang.CharSequence) "");
        printWriter10.print((double) 1);
        java.io.PrintWriter printWriter18 = printWriter10.append((java.lang.CharSequence) "hi!");
        printWriter10.print(false);
        java.lang.CharSequence charSequence21 = null;
        java.io.PrintWriter printWriter22 = printWriter10.append(charSequence21);
        printWriter10.print((double) (-1));
        org.mockito.asm.FieldVisitor fieldVisitor25 = aSMifierClassVisitor1.visitField((int) (byte) 0, "hi!", "hi!", "hi!", (java.lang.Object) printWriter10);
        aSMifierClassVisitor1.visitInnerClass("hi!", "", "hi!", (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierClassVisitor1.visitAnnotation("", true);
        org.mockito.asm.Attribute attribute34 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitAttribute(attribute34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(fieldVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor33);
    }

    @Test
    public void test07701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07701");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "hi!", "hi!", (int) (byte) 1);
        aSMifierClassVisitor28.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor28.visitAnnotation("", true);
        org.mockito.asm.FieldVisitor fieldVisitor43 = aSMifierClassVisitor28.visitField((int) (byte) 10, "", "", "", (java.lang.Object) 10.0d);
        fieldVisitor43.visitEnd();
        fieldVisitor43.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = fieldVisitor43.visitAnnotation("", false);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor48);
    }

    @Test
    public void test07702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07702");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "", "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 1, (int) (short) 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 1);
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLineNumber(1, label24);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn((-1), 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test07703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07703");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label18);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        java.util.Locale locale22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray27 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray29 = null;
        aSMifierMethodVisitor24.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray27, (int) (short) 1, objArray29);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray41 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray43 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor32, strArray41, 1.0f };
        java.io.PrintWriter printWriter44 = printWriter21.printf(locale22, "", (java.lang.Object[]) strArray41);
        boolean boolean45 = printWriter21.checkError();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) boolean45);
        aSMifierMethodVisitor0.visitMaxs((int) ' ', (int) '4');
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label56);
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label61, label62, (int) (short) 100);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(annotationVisitor54);
    }

    @Test
    public void test07704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07704");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLabel(label17);
        aSMifierMethodVisitor0.visitInsn(100);
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label24, label25, (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitParameterAnnotation((int) 'a', "hi!", true);
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label33);
        aSMifierMethodVisitor0.visitMaxs(0, (int) (short) 1);
        org.junit.Assert.assertNotNull(annotationVisitor31);
    }

    @Test
    public void test07705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07705");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "hi!", "", "");
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label13, label14, (int) '4');
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 100, label18);
        aSMifierMethodVisitor0.visitMaxs((-1), 0);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
    }

    @Test
    public void test07706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07706");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs((int) (short) 100, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 1, "", false);
        aSMifierMethodVisitor0.visitVarInsn((int) ' ', (int) (byte) 1);
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label22, label23, label24, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) 'a');
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label30, label31, label32, "hi!");
        aSMifierMethodVisitor0.visitVarInsn(1, (int) 'a');
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test07707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07707");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter8 = printWriter6.append((java.lang.CharSequence) "");
        printWriter8.print("");
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        printWriter13.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor17.visitTryCatchBlock(label18, label19, label20, "");
        aSMifierMethodVisitor17.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label[] labelArray30 = new org.mockito.asm.Label[] { label29 };
        aSMifierMethodVisitor17.visitTableSwitchInsn(0, (int) (byte) 10, label28, labelArray30);
        java.io.PrintWriter printWriter32 = printWriter13.printf("hi!", (java.lang.Object[]) labelArray30);
        java.io.PrintWriter printWriter33 = printWriter8.printf("hi!", (java.lang.Object[]) labelArray30);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter8);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter8);
        org.junit.Assert.assertNotNull(labelArray30);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(printWriter33);
    }

    @Test
    public void test07708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07708");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "hi!", label24, label25, (int) '4');
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        java.util.Locale locale30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray37 = null;
        aSMifierMethodVisitor32.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray35, (int) (short) 1, objArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray49 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray51 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor40, strArray49, 1.0f };
        java.io.PrintWriter printWriter52 = printWriter29.printf(locale30, "", (java.lang.Object[]) strArray49);
        java.io.PrintWriter printWriter54 = printWriter52.append((java.lang.CharSequence) "");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter54);
        printWriter54.println((int) ' ');
        printWriter54.print("hi!");
        printWriter54.println(false);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(printWriter54);
    }

    @Test
    public void test07709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07709");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter27.print('a');
        printWriter27.println('4');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test07710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07710");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("hi!");
        printWriter26.print(false);
        printWriter26.close();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test07711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07711");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        java.util.List list22 = aSMifierClassVisitor15.getText();
        aSMifierClassVisitor15.visitSource("hi!", "");
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter33 = printWriter31.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor34.visitTryCatchBlock(label35, label36, label37, "");
        aSMifierMethodVisitor34.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj43 = null;
        aSMifierMethodVisitor34.visitLdcInsn(obj43);
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor34.visitJumpInsn((int) (short) 1, label46);
        aSMifierMethodVisitor34.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor34.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor34.visitAnnotationDefault();
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter("hi!");
        printWriter58.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor62.visitTryCatchBlock(label63, label64, label65, "");
        aSMifierMethodVisitor62.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label[] labelArray75 = new org.mockito.asm.Label[] { label74 };
        aSMifierMethodVisitor62.visitTableSwitchInsn(0, (int) (byte) 10, label73, labelArray75);
        java.io.PrintWriter printWriter77 = printWriter58.printf("hi!", (java.lang.Object[]) labelArray75);
        java.lang.String[] strArray79 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor34.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray75, 1, (java.lang.Object[]) strArray79);
        printWriter33.println((java.lang.Object) strArray79);
        org.mockito.asm.MethodVisitor methodVisitor82 = aSMifierClassVisitor15.visitMethod(10, "hi!", "hi!", "hi!", strArray79);
        aSMifierClassVisitor15.visitInnerClass("hi!", "hi!", "hi!", (int) ' ');
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.Attribute attribute91 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor15.visitAttribute(attribute91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(labelArray75);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(methodVisitor82);
    }

    @Test
    public void test07712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07712");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        org.mockito.asm.Label label29 = null;
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "");
        printWriter31.print((double) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor39.visitJumpInsn((int) (short) 1, label51);
        aSMifierMethodVisitor39.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor39.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor39.visitAnnotationDefault();
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter("hi!");
        printWriter63.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor67.visitTryCatchBlock(label68, label69, label70, "");
        aSMifierMethodVisitor67.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] { label79 };
        aSMifierMethodVisitor67.visitTableSwitchInsn(0, (int) (byte) 10, label78, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter63.printf("hi!", (java.lang.Object[]) labelArray80);
        java.lang.String[] strArray84 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor39.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray80, 1, (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter86 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray80);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (short) 100, (int) (short) 1, label29, labelArray80);
        org.mockito.asm.Label label89 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 1, label89);
        org.mockito.asm.Label label91 = null;
        aSMifierMethodVisitor0.visitLabel(label91);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 1, "", "", "");
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter86);
    }

    @Test
    public void test07713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07713");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitSource("", "");
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.print(false);
        java.io.PrintWriter printWriter47 = printWriter43.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter((java.io.Writer) printWriter43);
        printWriter48.println();
        org.mockito.asm.FieldVisitor fieldVisitor50 = aSMifierClassVisitor28.visitField((int) ' ', "", "", "hi!", (java.lang.Object) printWriter48);
        fieldVisitor50.visitEnd();
        fieldVisitor50.visitEnd();
        fieldVisitor50.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(fieldVisitor50);
    }

    @Test
    public void test07714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07714");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.println(0.0f);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        printWriter24.println("hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor32 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        printWriter24.println('a');
        printWriter24.print((int) (byte) 1);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor37 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        aSMifierClassVisitor37.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
    }

    @Test
    public void test07715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07715");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.print('a');
        printWriter24.println((float) 1);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter24.print((long) (short) 100);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test07716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07716");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        java.io.PrintWriter printWriter36 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.println();
        printWriter24.println("");
        boolean boolean40 = printWriter24.checkError();
        printWriter24.print((int) (byte) 0);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test07717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07717");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        java.util.Locale locale13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray20 = null;
        aSMifierMethodVisitor15.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray18, (int) (short) 1, objArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor23, strArray32, 1.0f };
        java.io.PrintWriter printWriter35 = printWriter12.printf(locale13, "", (java.lang.Object[]) strArray32);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, true);
        printWriter8.println((java.lang.Object) printWriter37);
        java.io.PrintWriter printWriter40 = printWriter8.append(' ');
        printWriter40.println("");
        boolean boolean43 = printWriter40.checkError();
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter((java.io.Writer) printWriter40);
        printWriter44.println("");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test07718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07718");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        aSMifierMethodVisitor0.visitCode();
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        java.util.Locale locale16 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = null;
        aSMifierMethodVisitor18.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray21, (int) (short) 1, objArray23);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray37 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor26, strArray35, 1.0f };
        java.io.PrintWriter printWriter38 = printWriter15.printf(locale16, "", (java.lang.Object[]) strArray35);
        char[] charArray45 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter38.println(charArray45);
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter((java.io.Writer) printWriter38, true);
        java.io.PrintWriter printWriter50 = printWriter38.append((java.lang.CharSequence) "");
        printWriter50.print("");
        java.io.PrintWriter printWriter54 = printWriter50.append((java.lang.CharSequence) "");
        aSMifierMethodVisitor0.print(printWriter50);
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label56, label57, label58, "");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(printWriter54);
    }

    @Test
    public void test07719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07719");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.println((long) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        printWriter30.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter34 = printWriter30.append((java.lang.CharSequence) "");
        printWriter30.print((int) (byte) -1);
        printWriter30.write("", (int) (byte) 1, (int) (short) 0);
        printWriter30.print((double) (byte) -1);
        aSMifierMethodVisitor28.print(printWriter30);
        printWriter30.write((int) (byte) 100);
        printWriter24.println((java.lang.Object) (byte) 100);
        printWriter24.close();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter34);
    }

    @Test
    public void test07720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07720");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 100);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) 'a', label19);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 10, 0);
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 100, label25);
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label27, label28, label29, "");
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test07721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07721");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, (int) (short) 1);
        aSMifierMethodVisitor0.visitIntInsn(1, 0);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", 10);
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label23);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor25);
    }

    @Test
    public void test07722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07722");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        printWriter24.println(false);
        java.io.PrintWriter printWriter29 = printWriter24.append('4');
        printWriter29.println((float) 10);
        printWriter29.print('#');
        printWriter29.write((int) (byte) 1);
        char[] charArray36 = null;
        // The following exception was thrown during execution in test generation
        try {
            printWriter29.print(charArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(printWriter29);
    }

    @Test
    public void test07723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07723");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println((int) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test07724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07724");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((-1), 100);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 1);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
    }

    @Test
    public void test07725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07725");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter3);
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierClassVisitor4.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        java.util.Locale locale14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray19 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray21 = null;
        aSMifierMethodVisitor16.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray19, (int) (short) 1, objArray21);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        aSMifierMethodVisitor24.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray33 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray35 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor24, strArray33, 1.0f };
        java.io.PrintWriter printWriter36 = printWriter13.printf(locale14, "", (java.lang.Object[]) strArray33);
        printWriter36.print('#');
        printWriter36.println(false);
        printWriter36.println(0);
        printWriter36.close();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor44 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter36);
        aSMifierClassVisitor44.visitInnerClass("hi!", "hi!", "hi!", (int) (short) 0);
        aSMifierClassVisitor44.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierClassVisitor44.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor44.visitAnnotation("", true);
        org.mockito.asm.FieldVisitor fieldVisitor59 = aSMifierClassVisitor4.visitField((int) ' ', "hi!", "hi!", "hi!", (java.lang.Object) true);
        fieldVisitor59.visitEnd();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(fieldVisitor59);
    }

    @Test
    public void test07726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07726");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 0, "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitFieldInsn(100, "", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMaxs(10, (int) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = annotationVisitor74.visitArray("");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(annotationVisitor74);
        org.junit.Assert.assertNotNull(annotationVisitor76);
    }

    @Test
    public void test07727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07727");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        java.io.PrintWriter printWriter7 = printWriter1.append('#');
        printWriter7.println();
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        java.util.Locale locale11 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray16 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray18 = null;
        aSMifierMethodVisitor13.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray16, (int) (short) 1, objArray18);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor21.visitTryCatchBlock(label22, label23, label24, "");
        aSMifierMethodVisitor21.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor21, strArray30, 1.0f };
        java.io.PrintWriter printWriter33 = printWriter10.printf(locale11, "", (java.lang.Object[]) strArray30);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        java.util.Locale locale36 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray41 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray43 = null;
        aSMifierMethodVisitor38.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray41, (int) (short) 1, objArray43);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor46.visitTryCatchBlock(label47, label48, label49, "");
        aSMifierMethodVisitor46.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray55 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray57 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor46, strArray55, 1.0f };
        java.io.PrintWriter printWriter58 = printWriter35.printf(locale36, "", (java.lang.Object[]) strArray55);
        char[] charArray65 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter58.println(charArray65);
        printWriter33.print(charArray65);
        printWriter7.write(charArray65);
        printWriter7.println(0);
        org.junit.Assert.assertNotNull(printWriter7);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test07728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07728");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        aSMifierClassVisitor15.visitSource("hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter("hi!");
        printWriter45.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter49 = printWriter45.append((java.lang.CharSequence) "");
        printWriter45.print((int) (byte) -1);
        printWriter45.print("hi!");
        org.mockito.asm.FieldVisitor fieldVisitor54 = aSMifierClassVisitor15.visitField((int) (short) 1, "hi!", "", "", (java.lang.Object) printWriter45);
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierClassVisitor15.visitAnnotation("", false);
        aSMifierClassVisitor15.visitSource("", "");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(annotationVisitor57);
    }

    @Test
    public void test07729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07729");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor0.visitMaxs(100, (int) '4');
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = annotationVisitor18.visitArray("hi!");
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test07730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07730");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) -1, (int) (byte) 1);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitVarInsn(1, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor16);
    }

    @Test
    public void test07731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07731");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter16 = printWriter14.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter16);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierClassVisitor17.visitAnnotation("hi!", true);
        java.lang.String[] strArray26 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor17.visit(1, (int) (short) 10, "hi!", "", "", strArray26);
        org.mockito.asm.MethodVisitor methodVisitor28 = aSMifierClassVisitor8.visitMethod(0, "", "hi!", "", strArray26);
        methodVisitor28.visitFieldInsn((int) (short) 1, "hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = methodVisitor28.visitParameterAnnotation((int) '4', "hi!", true);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test07732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07732");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitIincInsn((int) '#', (int) (byte) -1);
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label4, label5, label6, "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 1, (int) (byte) 0);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label15, label16, (int) (short) 1);
        java.lang.Class<?> wildcardClass19 = aSMifierMethodVisitor0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test07733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07733");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 1, 1);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "hi!", label22, label23, (-1));
        org.mockito.asm.Attribute attribute26 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test07734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07734");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        aSMifierClassVisitor28.visitOuterClass("hi!", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitOuterClass("", "hi!", "");
        aSMifierClassVisitor28.visitSource("hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitInnerClass("", "", "hi!", (int) '#');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor48);
    }

    @Test
    public void test07735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07735");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((-1), 100);
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor0.visitLineNumber(100, label71);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn(1, (-1));
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label80, label81, 10);
        org.mockito.asm.Label label85 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label85);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor91 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", true);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(annotationVisitor91);
    }

    @Test
    public void test07736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07736");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        java.util.Locale locale23 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray28 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray30 = null;
        aSMifierMethodVisitor25.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray28, (int) (short) 1, objArray30);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor33.visitTryCatchBlock(label34, label35, label36, "");
        aSMifierMethodVisitor33.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray44 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor33, strArray42, 1.0f };
        java.io.PrintWriter printWriter45 = printWriter22.printf(locale23, "", (java.lang.Object[]) strArray42);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.Writer) printWriter45, true);
        printWriter20.print((java.lang.Object) printWriter47);
        printWriter47.print(0L);
        printWriter47.write("");
        printWriter47.write((int) (short) 1);
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(printWriter45);
    }

    @Test
    public void test07737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07737");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.print((int) ' ');
        java.lang.Object obj29 = null;
        printWriter24.print(obj29);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor31.visitLocalVariable("hi!", "hi!", "hi!", label40, label41, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor31.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierMethodVisitor31.visitAnnotationDefault();
        aSMifierMethodVisitor31.visitCode();
        aSMifierMethodVisitor31.visitVarInsn((int) (short) 100, (int) (byte) 10);
        aSMifierMethodVisitor31.visitCode();
        aSMifierMethodVisitor31.visitInsn((int) (byte) 0);
        java.util.List list55 = aSMifierMethodVisitor31.getText();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor56.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor56.visitLabel(label60);
        aSMifierMethodVisitor56.visitMaxs(100, (int) (short) 10);
        aSMifierMethodVisitor56.visitVarInsn((int) (byte) 0, (int) (byte) 10);
        aSMifierMethodVisitor31.visitLdcInsn((java.lang.Object) (byte) 0);
        aSMifierMethodVisitor31.visitIincInsn((int) (byte) 10, (int) '4');
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor31.visitLabel(label72);
        printWriter24.print((java.lang.Object) label72);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(list55);
    }

    @Test
    public void test07738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07738");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor6 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter5);
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test07739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07739");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLabel(label16);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor21.visitTryCatchBlock(label22, label23, label24, "");
        aSMifierMethodVisitor21.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj30 = null;
        aSMifierMethodVisitor21.visitLdcInsn(obj30);
        aSMifierMethodVisitor21.visitInsn((int) ' ');
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor21.visitJumpInsn(100, label35);
        aSMifierMethodVisitor21.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label40 = null;
        int[] intArray41 = new int[] {};
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter47 = printWriter43.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj58 = null;
        aSMifierMethodVisitor49.visitLdcInsn(obj58);
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor49.visitJumpInsn((int) (short) 1, label61);
        aSMifierMethodVisitor49.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label[] labelArray69 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor49.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label68, labelArray69);
        java.io.PrintWriter printWriter71 = printWriter47.printf("", (java.lang.Object[]) labelArray69);
        aSMifierMethodVisitor21.visitLookupSwitchInsn(label40, intArray41, labelArray69);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) label40);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(labelArray69);
        org.junit.Assert.assertNotNull(printWriter71);
    }

    @Test
    public void test07740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07740");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter("hi!");
        printWriter5.println((-1.0d));
        printWriter1.print((java.lang.Object) (-1.0d));
        java.io.PrintWriter printWriter10 = printWriter1.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor11 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter10);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter10);
    }

    @Test
    public void test07741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07741");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        printWriter26.println((int) (byte) 0);
        printWriter26.println('a');
        java.lang.CharSequence charSequence35 = null;
        java.io.PrintWriter printWriter36 = printWriter26.append(charSequence35);
        printWriter26.println();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor38 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        printWriter26.print((int) (short) 10);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter36);
    }

    @Test
    public void test07742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07742");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor28.visitLocalVariable("hi!", "hi!", "hi!", label37, label38, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor28.visitAnnotation("", true);
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj54 = null;
        aSMifierMethodVisitor45.visitLdcInsn(obj54);
        org.mockito.asm.Label label56 = null;
        int[] intArray63 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] { label76 };
        aSMifierMethodVisitor64.visitTableSwitchInsn(0, (int) (byte) 10, label75, labelArray77);
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label56, intArray63, labelArray77);
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label44, intArray63, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter26.printf("hi!", (java.lang.Object[]) labelArray80);
        printWriter26.close();
        printWriter26.write("", (int) '#', (int) '#');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
    }

    @Test
    public void test07743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07743");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor8.visitEnd();
        aSMifierClassVisitor8.visitEnd();
        aSMifierClassVisitor8.visitInnerClass("", "", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitMethodInsn((int) (byte) 1, "hi!", "", "hi!");
        aSMifierMethodVisitor20.visitInsn((int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor20.visitParameterAnnotation((int) (byte) 0, "", false);
        aSMifierMethodVisitor20.visitTypeInsn(1, "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor40 = aSMifierClassVisitor8.visitField(1, "", "", "", (java.lang.Object) aSMifierMethodVisitor20);
        org.mockito.asm.Attribute attribute41 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor40.visitAttribute(attribute41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(fieldVisitor40);
    }

    @Test
    public void test07744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07744");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMaxs((int) (short) -1, (int) (short) 100);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 1, (int) (short) -1);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 0, "", "hi!", "");
        java.util.List list28 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(list28);
    }

    @Test
    public void test07745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07745");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor17.visitTryCatchBlock(label18, label19, label20, "");
        aSMifierMethodVisitor17.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj26 = null;
        aSMifierMethodVisitor17.visitLdcInsn(obj26);
        org.mockito.asm.Label label28 = null;
        int[] intArray35 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] { label48 };
        aSMifierMethodVisitor36.visitTableSwitchInsn(0, (int) (byte) 10, label47, labelArray49);
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label28, intArray35, labelArray49);
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label16, intArray35, labelArray52);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 10, "", false);
        aSMifierMethodVisitor0.visitVarInsn(0, (int) (byte) 100);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor60);
    }

    @Test
    public void test07746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07746");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitIincInsn((int) '#', (int) (byte) -1);
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor5.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label17 = null;
        int[] intArray19 = new int[] { (byte) 0 };
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor25.visitTryCatchBlock(label26, label27, label28, "");
        aSMifierMethodVisitor25.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label[] labelArray38 = new org.mockito.asm.Label[] { label37 };
        aSMifierMethodVisitor25.visitTableSwitchInsn(0, (int) (byte) 10, label36, labelArray38);
        java.io.PrintWriter printWriter40 = printWriter21.printf("hi!", (java.lang.Object[]) labelArray38);
        aSMifierMethodVisitor5.visitLookupSwitchInsn(label17, intArray19, labelArray38);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label48 = null;
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("hi!");
        printWriter50.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor54.visitTryCatchBlock(label55, label56, label57, "");
        aSMifierMethodVisitor54.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label[] labelArray67 = new org.mockito.asm.Label[] { label66 };
        aSMifierMethodVisitor54.visitTableSwitchInsn(0, (int) (byte) 10, label65, labelArray67);
        java.io.PrintWriter printWriter69 = printWriter50.printf("hi!", (java.lang.Object[]) labelArray67);
        aSMifierMethodVisitor42.visitTableSwitchInsn(1, (int) (short) 10, label48, labelArray67);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label4, intArray19, labelArray67);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((int) (short) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0]");
        org.junit.Assert.assertNotNull(labelArray38);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(labelArray67);
        org.junit.Assert.assertNotNull(printWriter69);
    }

    @Test
    public void test07747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07747");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print((double) 'a');
        java.io.PrintWriter printWriter19 = printWriter1.append('4');
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter23 = printWriter19.append((java.lang.CharSequence) "", (int) (short) 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter19);
    }

    @Test
    public void test07748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07748");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        aSMifierMethodVisitor0.visitInsn((int) (short) 1);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 0, "hi!", "", "");
        java.util.List list21 = aSMifierMethodVisitor0.text;
        java.util.List list22 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", 0);
        aSMifierMethodVisitor0.visitInsn((int) (short) 0);
        aSMifierMethodVisitor0.visitVarInsn(1, (int) (short) -1);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
    }

    @Test
    public void test07749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07749");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label28, label29, (int) (short) 1);
        aSMifierMethodVisitor0.visitIntInsn((int) '#', (int) 'a');
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 100, (int) (byte) 0);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "");
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 10, "");
        aSMifierMethodVisitor0.visitInsn((int) (byte) 100);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test07750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07750");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label19, label20, (int) '4');
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 10, "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label30, label31, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) -1, "hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = annotationVisitor37.visitArray("hi!");
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor39);
    }

    @Test
    public void test07751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07751");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLabel(label17);
        aSMifierMethodVisitor0.visitTypeInsn(100, "");
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray29 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray31 = null;
        aSMifierMethodVisitor26.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray29, (int) (short) 1, objArray31);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor34.visitTryCatchBlock(label35, label36, label37, "");
        aSMifierMethodVisitor34.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray43 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray45 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor34, strArray43, 1.0f };
        java.io.PrintWriter printWriter46 = printWriter23.printf(locale24, "", (java.lang.Object[]) strArray43);
        char[] charArray53 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter46.println(charArray53);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter((java.io.Writer) printWriter46, true);
        java.io.PrintWriter printWriter58 = printWriter46.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor59.visitTryCatchBlock(label60, label61, label62, "");
        aSMifierMethodVisitor59.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj68 = null;
        aSMifierMethodVisitor59.visitLdcInsn(obj68);
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter("hi!");
        printWriter71.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor59.print(printWriter71);
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = aSMifierMethodVisitor59.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor81 = aSMifierMethodVisitor59.visitParameterAnnotation((int) (short) -1, "", true);
        printWriter58.print((java.lang.Object) (short) -1);
        printWriter58.write("hi!");
        java.io.PrintWriter printWriter86 = printWriter58.append((java.lang.CharSequence) "hi!");
        boolean boolean87 = printWriter86.checkError();
        printWriter86.println(true);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter86);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(annotationVisitor77);
        org.junit.Assert.assertNotNull(annotationVisitor81);
        org.junit.Assert.assertNotNull(printWriter86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test07752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07752");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label27 = null;
        int[] intArray34 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        aSMifierMethodVisitor16.visitLookupSwitchInsn(label27, intArray34, labelArray48);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) '4', (int) '#', label15, labelArray48);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label55, label56, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn((int) '4', (int) (short) 100);
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label65, label66, (int) (short) -1);
        org.mockito.asm.Attribute attribute69 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray48);
    }

    @Test
    public void test07753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07753");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn((int) '#', (int) (byte) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitVarInsn(0, 0);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "", "", "hi!");
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label34, label35, label36, "");
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label40);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor25);
    }

    @Test
    public void test07754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07754");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.print((double) (byte) 10);
        java.util.Locale locale6 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label14 = null;
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label[] labelArray33 = new org.mockito.asm.Label[] { label32 };
        aSMifierMethodVisitor20.visitTableSwitchInsn(0, (int) (byte) 10, label31, labelArray33);
        java.io.PrintWriter printWriter35 = printWriter16.printf("hi!", (java.lang.Object[]) labelArray33);
        aSMifierMethodVisitor8.visitTableSwitchInsn(1, (int) (short) 10, label14, labelArray33);
        java.io.PrintWriter printWriter37 = printWriter1.format(locale6, "hi!", (java.lang.Object[]) labelArray33);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor38 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        java.io.PrintWriter printWriter42 = printWriter40.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter((java.io.Writer) printWriter40);
        printWriter43.print("hi!");
        printWriter43.println((long) (-1));
        org.junit.Assert.assertNotNull(labelArray33);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(printWriter42);
    }

    @Test
    public void test07755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07755");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        java.io.PrintWriter printWriter36 = printWriter24.append((java.lang.CharSequence) "");
        printWriter36.flush();
        printWriter36.println('#');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter36);
    }

    @Test
    public void test07756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07756");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 1, "hi!", true);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) ' ', label19);
        java.util.List list21 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = annotationVisitor24.visitAnnotation("hi!", "");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor27);
    }

    @Test
    public void test07757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07757");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label16, label17, (int) (short) 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) '4');
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitLabel(label23);
        aSMifierMethodVisitor0.visitInsn(0);
    }

    @Test
    public void test07758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07758");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        java.util.List list6 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitFieldInsn((int) '#', "", "", "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "", "", "hi!");
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 0, label18);
        java.util.List list20 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        printWriter25.print(false);
        java.io.PrintWriter printWriter29 = printWriter25.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter29, true);
        printWriter31.flush();
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter31, false);
        aSMifierMethodVisitor0.print(printWriter34);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(printWriter29);
    }

    @Test
    public void test07759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07759");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        boolean boolean36 = printWriter34.checkError();
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter39 = printWriter34.format("hi!", (java.lang.Object[]) strArray38);
        printWriter39.print(0.0f);
        java.io.PrintWriter printWriter43 = printWriter39.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter45 = printWriter43.append('a');
        java.lang.CharSequence charSequence46 = null;
        java.io.PrintWriter printWriter47 = printWriter45.append(charSequence46);
        boolean boolean48 = printWriter47.checkError();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(printWriter45);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test07760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07760");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        java.util.List list12 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label14, label15, label16, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "hi!", true);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj35 = null;
        aSMifierMethodVisitor26.visitLdcInsn(obj35);
        aSMifierMethodVisitor26.visitInsn((int) ' ');
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor42.visitTryCatchBlock(label43, label44, label45, "");
        aSMifierMethodVisitor42.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj51 = null;
        aSMifierMethodVisitor42.visitLdcInsn(obj51);
        org.mockito.asm.Label label53 = null;
        int[] intArray60 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor61.visitTryCatchBlock(label62, label63, label64, "");
        aSMifierMethodVisitor61.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label[] labelArray74 = new org.mockito.asm.Label[] { label73 };
        aSMifierMethodVisitor61.visitTableSwitchInsn(0, (int) (byte) 10, label72, labelArray74);
        aSMifierMethodVisitor42.visitLookupSwitchInsn(label53, intArray60, labelArray74);
        aSMifierMethodVisitor26.visitTableSwitchInsn((int) '4', (int) '#', label41, labelArray74);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (short) -1, (int) (short) -1, label25, labelArray74);
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 100, "hi!", true);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray74);
        org.junit.Assert.assertNotNull(annotationVisitor82);
    }

    @Test
    public void test07761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07761");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label23, label24, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 10, "hi!", false);
        org.mockito.asm.Attribute attribute31 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor30);
    }

    @Test
    public void test07762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07762");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) ' ');
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 100, label18);
        aSMifierMethodVisitor0.visitVarInsn((int) 'a', (int) (short) 100);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor26.visitFieldInsn((int) ' ', "hi!", "", "");
        aSMifierMethodVisitor26.visitEnd();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] { label48 };
        aSMifierMethodVisitor36.visitTableSwitchInsn(0, (int) (byte) 10, label47, labelArray49);
        aSMifierMethodVisitor26.visitTableSwitchInsn((int) (byte) 100, 0, label35, labelArray49);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 1, (int) '#', label25, labelArray49);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 100, (-1));
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(labelArray49);
    }

    @Test
    public void test07763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07763");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        java.util.List list33 = aSMifierClassVisitor28.getText();
        aSMifierClassVisitor28.visitSource("hi!", "");
        aSMifierClassVisitor28.visitSource("hi!", "");
        aSMifierClassVisitor28.visitSource("hi!", "");
        aSMifierClassVisitor28.visitInnerClass("hi!", "hi!", "hi!", (-1));
        aSMifierClassVisitor28.visitSource("hi!", "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list33);
    }

    @Test
    public void test07764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07764");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 100);
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 1, "", "", "");
        aSMifierMethodVisitor0.visitIincInsn((int) ' ', 0);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 1, (int) (short) 0);
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor0.visitLabel(label31);
        aSMifierMethodVisitor0.visitInsn(100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
    }

    @Test
    public void test07765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07765");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 0, "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn(1, (int) '4');
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label67, label68, label69, "hi!");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(annotationVisitor63);
    }

    @Test
    public void test07766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07766");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLabel(label17);
        aSMifierMethodVisitor0.visitInsn(100);
        java.util.List list21 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMethodInsn((int) ' ', "", "hi!", "hi!");
        aSMifierMethodVisitor0.visitTypeInsn((int) '4', "hi!");
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 100, label32);
        org.junit.Assert.assertNotNull(list21);
    }

    @Test
    public void test07767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07767");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor7.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor7.visitAnnotationDefault();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        java.io.PrintWriter printWriter50 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray48);
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor7.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray48, 1, (java.lang.Object[]) strArray52);
        java.io.PrintWriter printWriter54 = printWriter1.format("hi!", (java.lang.Object[]) strArray52);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor55.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierClassVisitor55.visitAnnotation("", true);
        aSMifierClassVisitor55.visitEnd();
        aSMifierClassVisitor55.visitOuterClass("", "", "");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(annotationVisitor59);
    }

    @Test
    public void test07768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07768");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        boolean boolean6 = printWriter1.checkError();
        printWriter1.println((double) 0);
        boolean boolean9 = printWriter1.checkError();
        printWriter1.print((double) (short) 0);
        printWriter1.print(' ');
        printWriter1.println();
        java.util.Locale locale15 = null;
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter20 = printWriter18.append('a');
        printWriter18.print("hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj32 = null;
        aSMifierMethodVisitor23.visitLdcInsn(obj32);
        aSMifierMethodVisitor23.visitTypeInsn(0, "hi!");
        printWriter18.print((java.lang.Object) 0);
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.Writer) printWriter18);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj49 = null;
        aSMifierMethodVisitor40.visitLdcInsn(obj49);
        aSMifierMethodVisitor40.visitInsn((int) ' ');
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor40.visitJumpInsn(100, label54);
        aSMifierMethodVisitor40.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor40.visitCode();
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor40.visitJumpInsn((int) (short) 10, label61);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray68 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray70 = null;
        aSMifierMethodVisitor65.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray68, (int) (short) 1, objArray70);
        java.io.PrintWriter printWriter74 = new java.io.PrintWriter("hi!");
        printWriter74.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray78 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter79 = printWriter74.format("", (java.lang.Object[]) strArray78);
        aSMifierMethodVisitor40.visitFrame((int) '#', (int) '4', (java.lang.Object[]) strArray68, 0, (java.lang.Object[]) strArray78);
        java.io.PrintWriter printWriter81 = printWriter18.format("hi!", (java.lang.Object[]) strArray78);
        java.io.PrintWriter printWriter82 = printWriter1.format(locale15, "", (java.lang.Object[]) strArray78);
        java.io.PrintWriter printWriter84 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter84.println('4');
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertNotNull(printWriter81);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test07769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07769");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] { label40 };
        aSMifierMethodVisitor28.visitTableSwitchInsn(0, (int) (byte) 10, label39, labelArray41);
        java.io.PrintWriter printWriter43 = printWriter24.printf("hi!", (java.lang.Object[]) labelArray41);
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray41, 1, (java.lang.Object[]) strArray45);
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(annotationVisitor47);
    }

    @Test
    public void test07770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07770");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        aSMifierMethodVisitor24.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj33 = null;
        aSMifierMethodVisitor24.visitLdcInsn(obj33);
        aSMifierMethodVisitor24.visitInsn((int) ' ');
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor24.visitJumpInsn(100, label38);
        aSMifierMethodVisitor24.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label43 = null;
        int[] intArray44 = new int[] {};
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        printWriter46.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter50 = printWriter46.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor52.visitTryCatchBlock(label53, label54, label55, "");
        aSMifierMethodVisitor52.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj61 = null;
        aSMifierMethodVisitor52.visitLdcInsn(obj61);
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor52.visitJumpInsn((int) (short) 1, label64);
        aSMifierMethodVisitor52.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label[] labelArray72 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor52.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label71, labelArray72);
        java.io.PrintWriter printWriter74 = printWriter50.printf("", (java.lang.Object[]) labelArray72);
        aSMifierMethodVisitor24.visitLookupSwitchInsn(label43, intArray44, labelArray72);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 100, (-1), label23, labelArray72);
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) 'a');
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(labelArray72);
        org.junit.Assert.assertNotNull(printWriter74);
        org.junit.Assert.assertNotNull(annotationVisitor77);
    }

    @Test
    public void test07771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07771");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        aSMifierMethodVisitor0.visitVarInsn(100, 0);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) -1);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label31);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) -1, "hi!", false);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) -1, (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn((int) (byte) -1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor36);
    }

    @Test
    public void test07772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07772");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        java.lang.Object obj13 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj13);
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(annotationVisitor17);
    }

    @Test
    public void test07773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07773");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label22);
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label27, label28, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitParameterAnnotation(1, "hi!", true);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 1, "", "hi!", "");
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor34);
    }

    @Test
    public void test07774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07774");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitMaxs(0, (-1));
        aSMifierMethodVisitor9.visitCode();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor9);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor9.visitLabel(label20);
        aSMifierMethodVisitor9.visitMaxs((int) (short) 100, (-1));
        aSMifierMethodVisitor9.visitCode();
    }

    @Test
    public void test07775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07775");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitEnd();
        java.lang.String[] strArray37 = null;
        aSMifierClassVisitor15.visit((int) (byte) 10, (int) 'a', "", "hi!", "", strArray37);
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
    }

    @Test
    public void test07776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07776");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, 1);
        aSMifierMethodVisitor0.visitVarInsn((int) 'a', (int) (short) 0);
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLabel(label26);
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label29);
        aSMifierMethodVisitor0.visitMethodInsn(0, "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test07777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07777");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 10);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label78);
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor0.visitLabel(label80);
        org.mockito.asm.Label label82 = null;
        org.mockito.asm.Label label83 = null;
        org.mockito.asm.Label label84 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label82, label83, label84, "");
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
    }

    @Test
    public void test07778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07778");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label20, label21, label22, "hi!");
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        printWriter26.write((-1));
        printWriter26.flush();
        java.util.Locale locale30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray37 = null;
        aSMifierMethodVisitor32.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray35, (int) (short) 1, objArray37);
        java.io.PrintWriter printWriter39 = printWriter26.printf(locale30, "", (java.lang.Object[]) strArray35);
        aSMifierMethodVisitor0.print(printWriter39);
        aSMifierMethodVisitor0.visitMethodInsn(10, "hi!", "", "");
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label46, label47, label48, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(0, "hi!", "hi!", "");
        aSMifierMethodVisitor51.visitVarInsn((int) (byte) 10, 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor51.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor51);
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        annotationVisitor64.visitEnum("", "hi!", "");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test07779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07779");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append(' ');
        printWriter28.println(true);
        java.io.PrintWriter printWriter32 = printWriter28.append('a');
        printWriter28.println("");
        printWriter28.println((int) (short) 10);
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter("hi!");
        printWriter38.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter42 = printWriter38.append((java.lang.CharSequence) "");
        printWriter38.print((double) 1);
        java.io.PrintWriter printWriter46 = printWriter38.append((java.lang.CharSequence) "hi!");
        printWriter38.write((int) (short) 1);
        printWriter38.write(0);
        java.io.PrintWriter printWriter52 = printWriter38.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter("hi!");
        java.util.Locale locale55 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray60 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray62 = null;
        aSMifierMethodVisitor57.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray60, (int) (short) 1, objArray62);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        aSMifierMethodVisitor65.visitTryCatchBlock(label66, label67, label68, "");
        aSMifierMethodVisitor65.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray74 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray76 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor65, strArray74, 1.0f };
        java.io.PrintWriter printWriter77 = printWriter54.printf(locale55, "", (java.lang.Object[]) strArray74);
        char[] charArray84 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter77.println(charArray84);
        char[] charArray86 = new char[] {};
        printWriter77.print(charArray86);
        printWriter38.print(charArray86);
        printWriter28.write(charArray86);
        printWriter28.print(' ');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[]");
    }

    @Test
    public void test07780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07780");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter3);
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierClassVisitor4.visitAnnotation("hi!", true);
        aSMifierClassVisitor4.visitEnd();
        aSMifierClassVisitor4.visitEnd();
        aSMifierClassVisitor4.visitEnd();
        aSMifierClassVisitor4.visitInnerClass("hi!", "", "", 0);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor7);
    }

    @Test
    public void test07781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07781");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitMaxs((int) ' ', (int) (byte) 10);
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label8, label9, label10, "");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn((int) (short) -1, "", "", "");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07782");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        aSMifierMethodVisitor39.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor39.visitLocalVariable("hi!", "hi!", "hi!", label56, label57, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor39.visitParameterAnnotation(0, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor64 = aSMifierClassVisitor28.visitField((int) ' ', "hi!", "hi!", "", (java.lang.Object) aSMifierMethodVisitor39);
        java.lang.String[] strArray70 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor28.visit((int) (byte) 1, 100, "hi!", "hi!", "hi!", strArray70);
        aSMifierClassVisitor28.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor28.visitInnerClass("", "hi!", "", (int) (short) 0);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(strArray70);
    }

    @Test
    public void test07783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07783");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", true);
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label67, label68, label69, "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) ' ', 0);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitInsn((int) (byte) 10);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationVisitor66);
    }

    @Test
    public void test07784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07784");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 10);
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label27, label28, (int) (short) 1);
        aSMifierMethodVisitor0.visitVarInsn(10, (int) (byte) -1);
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '#', label35);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) -1);
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label40, label41, label42, "hi!");
    }

    @Test
    public void test07785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07785");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter20 = printWriter16.append((java.lang.CharSequence) "");
        printWriter16.print((int) (byte) -1);
        printWriter16.write("", (int) (byte) 1, (int) (short) 0);
        printWriter16.print((double) (byte) -1);
        aSMifierMethodVisitor14.print(printWriter16);
        printWriter16.write((int) (byte) 100);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        java.util.Locale locale34 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = null;
        aSMifierMethodVisitor36.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray39, (int) (short) 1, objArray41);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray53 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray55 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor44, strArray53, 1.0f };
        java.io.PrintWriter printWriter56 = printWriter33.printf(locale34, "", (java.lang.Object[]) strArray53);
        char[] charArray63 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter56.println(charArray63);
        printWriter16.print(charArray63);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) charArray63);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((int) (short) -1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test07786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07786");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitSource("hi!", "");
        java.util.List list34 = aSMifierClassVisitor15.getText();
        java.lang.Object obj39 = null;
        org.mockito.asm.FieldVisitor fieldVisitor40 = aSMifierClassVisitor15.visitField(100, "hi!", "", "", obj39);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor45.visitLocalVariable("hi!", "hi!", "hi!", label54, label55, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor45.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor45.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = annotationVisitor61.visitArray("");
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = annotationVisitor63.visitArray("hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = annotationVisitor65.visitArray("");
        org.mockito.asm.FieldVisitor fieldVisitor68 = aSMifierClassVisitor15.visitField((int) (byte) 100, "", "hi!", "", (java.lang.Object) "");
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(fieldVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(annotationVisitor71);
    }

    @Test
    public void test07787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07787");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        java.util.List list33 = aSMifierClassVisitor28.getText();
        aSMifierClassVisitor28.visitSource("hi!", "");
        aSMifierClassVisitor28.visitSource("hi!", "");
        aSMifierClassVisitor28.visitSource("hi!", "");
        aSMifierClassVisitor28.visitInnerClass("hi!", "hi!", "hi!", (-1));
        aSMifierClassVisitor28.visitSource("", "hi!");
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierClassVisitor28.visitAnnotation("hi!", false);
        java.util.List list58 = aSMifierClassVisitor28.getText();
        aSMifierClassVisitor28.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(annotationVisitor57);
        org.junit.Assert.assertNotNull(list58);
    }

    @Test
    public void test07788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07788");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitLabel(label4);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 10, "", "", "");
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 1, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotation("", false);
        java.util.List list17 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(list17);
    }

    @Test
    public void test07789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07789");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor9 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLabel(label10);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor9);
        org.junit.Assert.assertNotNull(annotationVisitor13);
    }

    @Test
    public void test07790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07790");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label[] labelArray27 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor7.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label26, labelArray27);
        java.io.PrintWriter printWriter29 = printWriter5.printf("", (java.lang.Object[]) labelArray27);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter29, true);
        printWriter29.println((float) (-1L));
        printWriter29.write((int) (byte) -1);
        java.util.Locale locale36 = null;
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.write((-1));
        printWriter39.flush();
        java.util.Locale locale43 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray50 = null;
        aSMifierMethodVisitor45.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray48, (int) (short) 1, objArray50);
        java.io.PrintWriter printWriter52 = printWriter39.printf(locale43, "", (java.lang.Object[]) strArray48);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor53 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter39);
        aSMifierClassVisitor53.visitEnd();
        aSMifierClassVisitor53.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor62.visitTryCatchBlock(label63, label64, label65, "");
        org.mockito.asm.FieldVisitor fieldVisitor68 = aSMifierClassVisitor53.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label65);
        aSMifierClassVisitor53.visitSource("hi!", "");
        java.io.PrintWriter printWriter77 = new java.io.PrintWriter("hi!");
        printWriter77.write((-1));
        printWriter77.flush();
        java.util.Locale locale81 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor83 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray86 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray88 = null;
        aSMifierMethodVisitor83.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray86, (int) (short) 1, objArray88);
        java.io.PrintWriter printWriter90 = printWriter77.printf(locale81, "", (java.lang.Object[]) strArray86);
        org.mockito.asm.MethodVisitor methodVisitor91 = aSMifierClassVisitor53.visitMethod((int) (byte) 0, "", "", "hi!", strArray86);
        java.io.PrintWriter printWriter92 = printWriter29.printf(locale36, "", (java.lang.Object[]) strArray86);
        printWriter29.print('4');
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(labelArray27);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertNotNull(methodVisitor91);
        org.junit.Assert.assertNotNull(printWriter92);
    }

    @Test
    public void test07791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07791");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter3, true);
        java.util.Locale locale6 = null;
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("hi!");
        printWriter9.print(false);
        java.util.Locale locale12 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitInsn((int) ' ');
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj39 = null;
        aSMifierMethodVisitor30.visitLdcInsn(obj39);
        org.mockito.asm.Label label41 = null;
        int[] intArray48 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label[] labelArray62 = new org.mockito.asm.Label[] { label61 };
        aSMifierMethodVisitor49.visitTableSwitchInsn(0, (int) (byte) 10, label60, labelArray62);
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label41, intArray48, labelArray62);
        aSMifierMethodVisitor14.visitTableSwitchInsn((int) '4', (int) '#', label29, labelArray62);
        java.io.PrintWriter printWriter66 = printWriter9.format(locale12, "hi!", (java.lang.Object[]) labelArray62);
        java.io.PrintWriter printWriter67 = printWriter5.printf(locale6, "", (java.lang.Object[]) labelArray62);
        printWriter5.println((int) '#');
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter("hi!");
        printWriter71.print(false);
        java.io.PrintWriter printWriter75 = printWriter71.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter77 = new java.io.PrintWriter((java.io.Writer) printWriter75, true);
        printWriter77.print((long) (short) 1);
        printWriter5.println((java.lang.Object) (short) 1);
        java.io.PrintWriter printWriter82 = printWriter5.append(' ');
        printWriter5.print(false);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray62);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(printWriter82);
    }

    @Test
    public void test07792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07792");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor28.visitLocalVariable("hi!", "hi!", "hi!", label37, label38, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor28.visitAnnotation("", true);
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj54 = null;
        aSMifierMethodVisitor45.visitLdcInsn(obj54);
        org.mockito.asm.Label label56 = null;
        int[] intArray63 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] { label76 };
        aSMifierMethodVisitor64.visitTableSwitchInsn(0, (int) (byte) 10, label75, labelArray77);
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label56, intArray63, labelArray77);
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label44, intArray63, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter26.printf("hi!", (java.lang.Object[]) labelArray80);
        java.io.PrintWriter printWriter84 = printWriter82.append('a');
        java.io.PrintWriter printWriter86 = new java.io.PrintWriter((java.io.Writer) printWriter82, false);
        printWriter86.println((int) '4');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test07793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07793");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMaxs((int) (short) -1, (int) (short) 100);
        java.util.List list17 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, 1);
        java.util.List list21 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitTypeInsn(1, "hi!");
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '#', label26);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn((-1), "hi!", "hi!", "");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list21);
    }

    @Test
    public void test07794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07794");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor15.visitAnnotation("", true);
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitInnerClass("hi!", "hi!", "", (int) (short) 1);
        aSMifierClassVisitor15.visitSource("", "");
        aSMifierClassVisitor15.visitInnerClass("", "", "", (int) '#');
        org.mockito.asm.Attribute attribute55 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor15.visitAttribute(attribute55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test07795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07795");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        java.util.List list6 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor7.visitLocalVariable("hi!", "hi!", "hi!", label16, label17, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor7.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) annotationVisitor20);
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitLineNumber(0, label23);
        aSMifierMethodVisitor0.visitMethodInsn(0, "", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 100, "hi!", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn((int) (byte) -1, "");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor33);
    }

    @Test
    public void test07796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07796");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLabel(label17);
        aSMifierMethodVisitor0.visitInsn(100);
        java.util.List list21 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "hi!", "hi!", "hi!");
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label27, label28, label29, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 100, "", false);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(annotationVisitor35);
    }

    @Test
    public void test07797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07797");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter("hi!");
        printWriter5.println((-1.0d));
        printWriter1.print((java.lang.Object) (-1.0d));
        java.io.PrintWriter printWriter10 = printWriter1.append('a');
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        java.util.Locale locale13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray20 = null;
        aSMifierMethodVisitor15.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray18, (int) (short) 1, objArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor23, strArray32, 1.0f };
        java.io.PrintWriter printWriter35 = printWriter12.printf(locale13, "", (java.lang.Object[]) strArray32);
        char[] charArray42 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter35.println(charArray42);
        printWriter35.write(1);
        printWriter10.print((java.lang.Object) 1);
        printWriter10.print((double) (short) 1);
        printWriter10.write("", (int) (short) 0, (int) (byte) -1);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test07798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07798");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        java.lang.CharSequence charSequence37 = null;
        java.io.PrintWriter printWriter38 = printWriter34.append(charSequence37);
        printWriter38.println("");
        printWriter38.flush();
        printWriter38.println("");
        printWriter38.print(1);
        printWriter38.print((double) 100.0f);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(printWriter38);
    }

    @Test
    public void test07799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07799");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((int) (byte) -1);
        printWriter1.println(false);
        printWriter1.println(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor12 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        boolean boolean13 = printWriter1.checkError();
        java.io.PrintWriter printWriter15 = printWriter1.append('#');
        printWriter15.flush();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(printWriter15);
    }

    @Test
    public void test07800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07800");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        printWriter27.print((java.lang.Object) (short) -1);
        printWriter27.flush();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter27);
        printWriter31.write("");
        org.mockito.asm.FieldVisitor fieldVisitor34 = aSMifierClassVisitor15.visitField(0, "", "", "hi!", (java.lang.Object) printWriter31);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor42.visitTryCatchBlock(label43, label44, label45, "");
        aSMifierMethodVisitor42.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj51 = null;
        aSMifierMethodVisitor42.visitLdcInsn(obj51);
        aSMifierMethodVisitor42.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor54 = aSMifierClassVisitor15.visitField((-1), "hi!", "hi!", "", (java.lang.Object) aSMifierMethodVisitor42);
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = fieldVisitor54.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = annotationVisitor57.visitArray("hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(annotationVisitor57);
        org.junit.Assert.assertNotNull(annotationVisitor59);
    }

    @Test
    public void test07801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07801");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((int) (short) -1, "hi!", "", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor25);
    }

    @Test
    public void test07802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07802");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter24.println("hi!");
        printWriter24.println((float) '4');
        printWriter24.flush();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test07803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07803");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        java.util.List list6 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitFieldInsn((int) '#', "", "", "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "", "", "hi!");
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 0, label18);
        java.util.List list20 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(annotationVisitor23);
    }

    @Test
    public void test07804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07804");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitTypeInsn((int) '#', "");
        aSMifierMethodVisitor0.visitVarInsn(1, 0);
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitLabel(label29);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitParameterAnnotation((int) ' ', "hi!", false);
        org.mockito.asm.Attribute attribute35 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor34);
    }

    @Test
    public void test07805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07805");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label6, label7, label8, "");
        java.util.List list11 = aSMifierMethodVisitor0.text;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor15.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor15.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj24 = null;
        aSMifierMethodVisitor15.visitLdcInsn(obj24);
        aSMifierMethodVisitor15.visitEnd();
        aSMifierMethodVisitor15.visitMaxs((int) (byte) 0, (int) (short) 1);
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label[] labelArray33 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitTableSwitchInsn((-1), (int) (byte) 0, label32, labelArray33);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', (int) (byte) 1, label14, labelArray33);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor0.visitParameterAnnotation((int) ' ', "hi!", false);
        aSMifierMethodVisitor0.visitInsn((int) (short) 0);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(labelArray33);
        org.junit.Assert.assertNotNull(annotationVisitor39);
    }

    @Test
    public void test07806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07806");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLabel(label16);
        org.mockito.asm.Label label19 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitJumpInsn((int) (short) -1, label19);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07807");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor39.visitJumpInsn((int) (short) 1, label51);
        aSMifierMethodVisitor39.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor39.visitLineNumber((int) (short) 0, label57);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor39.visitAnnotation("", true);
        org.mockito.asm.FieldVisitor fieldVisitor62 = aSMifierClassVisitor15.visitField((int) (short) 100, "", "hi!", "", (java.lang.Object) annotationVisitor61);
        org.mockito.asm.Attribute attribute63 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor62.visitAttribute(attribute63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor62);
    }

    @Test
    public void test07808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07808");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        java.util.List list22 = aSMifierClassVisitor15.getText();
        java.util.List list23 = aSMifierClassVisitor15.text;
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.write((-1));
        printWriter29.flush();
        java.util.Locale locale33 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray40 = null;
        aSMifierMethodVisitor35.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray38, (int) (short) 1, objArray40);
        java.io.PrintWriter printWriter42 = printWriter29.printf(locale33, "", (java.lang.Object[]) strArray38);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor43 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter29);
        aSMifierClassVisitor43.visitEnd();
        aSMifierClassVisitor43.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor52.visitTryCatchBlock(label53, label54, label55, "");
        org.mockito.asm.FieldVisitor fieldVisitor58 = aSMifierClassVisitor43.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor63.visitTryCatchBlock(label64, label65, label66, "");
        aSMifierMethodVisitor63.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj72 = null;
        aSMifierMethodVisitor63.visitLdcInsn(obj72);
        aSMifierMethodVisitor63.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list76 = aSMifierMethodVisitor63.getText();
        org.mockito.asm.FieldVisitor fieldVisitor77 = aSMifierClassVisitor43.visitField((int) (byte) -1, "", "", "", (java.lang.Object) list76);
        org.mockito.asm.FieldVisitor fieldVisitor78 = aSMifierClassVisitor15.visitField(10, "", "hi!", "", (java.lang.Object) aSMifierClassVisitor43);
        aSMifierClassVisitor43.visitInnerClass("hi!", "hi!", "hi!", (-1));
        aSMifierClassVisitor43.visitSource("", "hi!");
        aSMifierClassVisitor43.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(list76);
        org.junit.Assert.assertNotNull(fieldVisitor77);
        org.junit.Assert.assertNotNull(fieldVisitor78);
    }

    @Test
    public void test07809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07809");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label21, label22, label23, "");
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label29, label30, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) -1, "hi!", false);
        annotationVisitor40.visitEnum("hi!", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = annotationVisitor40.visitArray("hi!");
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor46);
    }

    @Test
    public void test07810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07810");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, 1);
        java.util.List list23 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label27, label28, label29, "hi!");
        aSMifierMethodVisitor0.visitInsn((int) (short) 10);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label37, label38, (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 0, "", "hi!", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor49.visitMaxs(100, (int) (short) -1);
        aSMifierMethodVisitor49.visitIincInsn((int) (short) 0, (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor49.visitParameterAnnotation((int) (byte) -1, "hi!", false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor67);
    }

    @Test
    public void test07811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07811");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label22 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitJumpInsn((int) (byte) -1, label22);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07812");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 1, "hi!", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test07813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07813");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor0.visitInsn(100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list20 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label24, label25, (int) (short) 1);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 100, "hi!", "", "");
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label35);
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj49 = null;
        aSMifierMethodVisitor40.visitLdcInsn(obj49);
        aSMifierMethodVisitor40.visitInsn((int) ' ');
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor40.visitJumpInsn(100, label54);
        aSMifierMethodVisitor40.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label59 = null;
        int[] intArray60 = new int[] {};
        java.io.PrintWriter printWriter62 = new java.io.PrintWriter("hi!");
        printWriter62.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter66 = printWriter62.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor68.visitTryCatchBlock(label69, label70, label71, "");
        aSMifierMethodVisitor68.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj77 = null;
        aSMifierMethodVisitor68.visitLdcInsn(obj77);
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor68.visitJumpInsn((int) (short) 1, label80);
        aSMifierMethodVisitor68.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label87 = null;
        org.mockito.asm.Label[] labelArray88 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor68.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label87, labelArray88);
        java.io.PrintWriter printWriter90 = printWriter66.printf("", (java.lang.Object[]) labelArray88);
        aSMifierMethodVisitor40.visitLookupSwitchInsn(label59, intArray60, labelArray88);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (short) -1, 1, label39, labelArray88);
        org.mockito.asm.Label label96 = null;
        org.mockito.asm.Label label97 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label96, label97, (int) (short) 100);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(labelArray88);
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test07814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07814");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((-1), 100);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
    }

    @Test
    public void test07815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07815");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        printWriter34.println();
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.Writer) printWriter34, true);
        printWriter34.println(100.0d);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter((java.io.Writer) printWriter34, true);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test07816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07816");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter("hi!");
        printWriter5.println((-1.0d));
        printWriter1.print((java.lang.Object) (-1.0d));
        java.io.PrintWriter printWriter10 = printWriter1.append('a');
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        java.util.Locale locale13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray20 = null;
        aSMifierMethodVisitor15.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray18, (int) (short) 1, objArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor23, strArray32, 1.0f };
        java.io.PrintWriter printWriter35 = printWriter12.printf(locale13, "", (java.lang.Object[]) strArray32);
        char[] charArray42 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter35.println(charArray42);
        printWriter35.write(1);
        printWriter10.print((java.lang.Object) 1);
        printWriter10.print((double) (short) 1);
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("hi!");
        java.util.Locale locale51 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray56 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray58 = null;
        aSMifierMethodVisitor53.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray56, (int) (short) 1, objArray58);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor61.visitTryCatchBlock(label62, label63, label64, "");
        aSMifierMethodVisitor61.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray70 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray72 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor61, strArray70, 1.0f };
        java.io.PrintWriter printWriter73 = printWriter50.printf(locale51, "", (java.lang.Object[]) strArray70);
        printWriter73.print("hi!");
        java.io.PrintWriter printWriter76 = new java.io.PrintWriter((java.io.Writer) printWriter73);
        printWriter73.println(true);
        java.io.PrintWriter printWriter79 = new java.io.PrintWriter((java.io.Writer) printWriter73);
        printWriter73.flush();
        printWriter10.print((java.lang.Object) printWriter73);
        printWriter73.println((double) '4');
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertNotNull(printWriter73);
    }

    @Test
    public void test07817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07817");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor0.visitMaxs(100, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation(100, "", false);
        annotationVisitor15.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor15);
    }

    @Test
    public void test07818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07818");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMaxs((int) (short) -1, (int) (short) 100);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLabel(label18);
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 0, (int) (short) 0);
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLineNumber(1, label24);
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label29, label30, (int) '4');
    }

    @Test
    public void test07819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07819");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "hi!", "hi!", (int) (byte) 1);
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitOuterClass("", "hi!", "");
        java.util.List list39 = aSMifierClassVisitor28.getText();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list39);
    }

    @Test
    public void test07820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07820");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 100);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        printWriter18.print(false);
        java.io.PrintWriter printWriter22 = printWriter18.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter((java.io.Writer) printWriter22, true);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter22);
        printWriter25.write("");
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        java.util.Locale locale30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray37 = null;
        aSMifierMethodVisitor32.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray35, (int) (short) 1, objArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray49 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray51 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor40, strArray49, 1.0f };
        java.io.PrintWriter printWriter52 = printWriter29.printf(locale30, "", (java.lang.Object[]) strArray49);
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter((java.io.Writer) printWriter52, true);
        printWriter25.println((java.lang.Object) printWriter54);
        printWriter25.print((double) 'a');
        printWriter25.write("");
        printWriter25.write("hi!");
        aSMifierMethodVisitor0.print(printWriter25);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 1, (int) (byte) -1);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertNotNull(printWriter52);
    }

    @Test
    public void test07821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07821");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label6 = null;
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        printWriter8.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label[] labelArray25 = new org.mockito.asm.Label[] { label24 };
        aSMifierMethodVisitor12.visitTableSwitchInsn(0, (int) (byte) 10, label23, labelArray25);
        java.io.PrintWriter printWriter27 = printWriter8.printf("hi!", (java.lang.Object[]) labelArray25);
        aSMifierMethodVisitor0.visitTableSwitchInsn(1, (int) (short) 10, label6, labelArray25);
        aSMifierMethodVisitor0.visitVarInsn(100, (int) ' ');
        java.util.List list32 = aSMifierMethodVisitor0.text;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label33, label34, label35, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        java.util.List list41 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(labelArray25);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(list41);
    }

    @Test
    public void test07822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07822");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "", "");
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray28 = null;
        org.mockito.asm.MethodVisitor methodVisitor29 = aSMifierClassVisitor15.visitMethod((-1), "", "hi!", "", strArray28);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        java.util.Locale locale37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray44 = null;
        aSMifierMethodVisitor39.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray42, (int) (short) 1, objArray44);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label48, label49, label50, "");
        aSMifierMethodVisitor47.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray56 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray58 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor47, strArray56, 1.0f };
        java.io.PrintWriter printWriter59 = printWriter36.printf(locale37, "", (java.lang.Object[]) strArray56);
        printWriter59.println();
        printWriter59.print('a');
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter((java.io.Writer) printWriter59);
        printWriter63.flush();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor65 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        java.lang.String[] strArray70 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        org.mockito.asm.MethodVisitor methodVisitor71 = aSMifierClassVisitor65.visitMethod((int) (short) 10, "hi!", "", "", strArray70);
        aSMifierClassVisitor15.visit((int) '#', 1, "", "hi!", "", strArray70);
        aSMifierClassVisitor15.visitOuterClass("hi!", "hi!", "");
        org.mockito.asm.Attribute attribute77 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor15.visitAttribute(attribute77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(methodVisitor29);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(methodVisitor71);
    }

    @Test
    public void test07823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07823");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor8.visitEnd();
        aSMifierClassVisitor8.visitEnd();
        aSMifierClassVisitor8.visitSource("", "hi!");
        aSMifierClassVisitor8.visitEnd();
        aSMifierClassVisitor8.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitMaxs(0, (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor20.visitAnnotationDefault();
        java.util.List list30 = aSMifierMethodVisitor20.text;
        org.mockito.asm.FieldVisitor fieldVisitor31 = aSMifierClassVisitor8.visitField((int) (byte) 1, "hi!", "hi!", "", (java.lang.Object) list30);
        java.util.List list32 = aSMifierClassVisitor8.text;
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(fieldVisitor31);
        org.junit.Assert.assertNotNull(list32);
    }

    @Test
    public void test07824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07824");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter8 = printWriter6.append((java.lang.CharSequence) "");
        printWriter8.println(true);
        printWriter8.println((int) (short) -1);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter((java.io.Writer) printWriter8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor14 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter8);
        printWriter8.println(false);
        printWriter8.print("");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter8);
    }

    @Test
    public void test07825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07825");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) -1, label30);
    }

    @Test
    public void test07826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07826");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter((java.io.Writer) printWriter26, true);
        printWriter29.close();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test07827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07827");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter("hi!");
        java.util.Locale locale8 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray13 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray15 = null;
        aSMifierMethodVisitor10.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray13, (int) (short) 1, objArray15);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor18.visitTryCatchBlock(label19, label20, label21, "");
        aSMifierMethodVisitor18.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray27 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray29 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor18, strArray27, 1.0f };
        java.io.PrintWriter printWriter30 = printWriter7.printf(locale8, "", (java.lang.Object[]) strArray27);
        printWriter30.print('#');
        printWriter30.println();
        java.io.PrintWriter printWriter35 = printWriter30.append((java.lang.CharSequence) "");
        printWriter30.flush();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter30);
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 0, label39);
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor0.visitJumpInsn(0, label42);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((int) (byte) -1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(printWriter35);
    }

    @Test
    public void test07828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07828");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) -1, "hi!", false);
        aSMifierMethodVisitor0.visitEnd();
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter("hi!");
        printWriter20.print(false);
        java.io.PrintWriter printWriter24 = printWriter20.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter20);
        printWriter25.println();
        printWriter25.print((float) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj39 = null;
        aSMifierMethodVisitor30.visitLdcInsn(obj39);
        aSMifierMethodVisitor30.visitInsn((int) ' ');
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor30.visitJumpInsn(100, label44);
        aSMifierMethodVisitor30.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label49 = null;
        int[] intArray50 = new int[] {};
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        printWriter52.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter56 = printWriter52.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj67 = null;
        aSMifierMethodVisitor58.visitLdcInsn(obj67);
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor58.visitJumpInsn((int) (short) 1, label70);
        aSMifierMethodVisitor58.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label[] labelArray78 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor58.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label77, labelArray78);
        java.io.PrintWriter printWriter80 = printWriter56.printf("", (java.lang.Object[]) labelArray78);
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label49, intArray50, labelArray78);
        java.io.PrintWriter printWriter82 = printWriter25.printf("", (java.lang.Object[]) labelArray78);
        printWriter82.println((double) (short) 100);
        printWriter82.println((float) (byte) 0);
        aSMifierMethodVisitor0.print(printWriter82);
        printWriter82.print((long) 10);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(labelArray78);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertNotNull(printWriter82);
    }

    @Test
    public void test07829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07829");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println((double) (-1L));
        java.util.Locale locale9 = null;
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        printWriter12.flush();
        java.util.Locale locale16 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor18.visitTryCatchBlock(label19, label20, label21, "");
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor18.visitLocalVariable("hi!", "hi!", "hi!", label27, label28, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor18.visitAnnotation("", true);
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj44 = null;
        aSMifierMethodVisitor35.visitLdcInsn(obj44);
        org.mockito.asm.Label label46 = null;
        int[] intArray53 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor54.visitTryCatchBlock(label55, label56, label57, "");
        aSMifierMethodVisitor54.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label[] labelArray67 = new org.mockito.asm.Label[] { label66 };
        aSMifierMethodVisitor54.visitTableSwitchInsn(0, (int) (byte) 10, label65, labelArray67);
        aSMifierMethodVisitor35.visitLookupSwitchInsn(label46, intArray53, labelArray67);
        org.mockito.asm.Label[] labelArray70 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor18.visitLookupSwitchInsn(label34, intArray53, labelArray70);
        java.io.PrintWriter printWriter72 = printWriter12.format(locale16, "hi!", (java.lang.Object[]) labelArray70);
        java.io.PrintWriter printWriter73 = printWriter1.format(locale9, "hi!", (java.lang.Object[]) labelArray70);
        printWriter73.println((float) (-1));
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray67);
        org.junit.Assert.assertNotNull(labelArray70);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(printWriter73);
    }

    @Test
    public void test07830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07830");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label19, label20, (int) '4');
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = annotationVisitor30.visitAnnotation("", "");
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor33);
    }

    @Test
    public void test07831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07831");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter3, true);
        printWriter3.println(true);
        printWriter3.println((float) (byte) 0);
        java.io.PrintWriter printWriter11 = printWriter3.append('a');
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter11);
    }

    @Test
    public void test07832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07832");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        char[] charArray56 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter49.println(charArray56);
        printWriter24.print(charArray56);
        printWriter24.print(true);
        java.io.PrintWriter printWriter62 = printWriter24.append((java.lang.CharSequence) "");
        java.util.Locale locale63 = null;
        org.mockito.asm.Attribute[] attributeArray65 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        java.io.PrintWriter printWriter66 = printWriter62.format(locale63, "", (java.lang.Object[]) attributeArray65);
        printWriter62.print(false);
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter((java.io.Writer) printWriter62, true);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor71 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter62);
        aSMifierClassVisitor71.visitInnerClass("hi!", "", "", (int) (byte) 10);
        aSMifierClassVisitor71.visitInnerClass("hi!", "", "", 100);
        aSMifierClassVisitor71.visitInnerClass("hi!", "hi!", "", (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor89 = aSMifierClassVisitor71.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(attributeArray65);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(annotationVisitor89);
    }

    @Test
    public void test07833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07833");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        printWriter24.println(false);
        java.io.PrintWriter printWriter29 = printWriter24.append('4');
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        printWriter31.flush();
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter((java.io.Writer) printWriter31);
        printWriter31.println();
        printWriter31.println("");
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter44 = printWriter40.append((java.lang.CharSequence) "");
        printWriter40.print((double) 1);
        java.io.PrintWriter printWriter48 = printWriter40.append((java.lang.CharSequence) "hi!");
        printWriter40.write((int) (short) 1);
        printWriter40.write(0);
        java.io.PrintWriter printWriter54 = printWriter40.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter("hi!");
        java.util.Locale locale57 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray62 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray64 = null;
        aSMifierMethodVisitor59.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray62, (int) (short) 1, objArray64);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor67.visitTryCatchBlock(label68, label69, label70, "");
        aSMifierMethodVisitor67.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray76 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray78 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor67, strArray76, 1.0f };
        java.io.PrintWriter printWriter79 = printWriter56.printf(locale57, "", (java.lang.Object[]) strArray76);
        char[] charArray86 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter79.println(charArray86);
        char[] charArray88 = new char[] {};
        printWriter79.print(charArray88);
        printWriter40.print(charArray88);
        printWriter31.print(charArray88);
        printWriter24.print(charArray88);
        printWriter24.print((long) '4');
        printWriter24.println("");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[]");
    }

    @Test
    public void test07834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07834");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list14 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs((int) '#', (int) (short) 1);
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label22, label23, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitJumpInsn(0, label28);
        aSMifierMethodVisitor0.visitMaxs((int) (short) -1, (int) 'a');
        aSMifierMethodVisitor0.visitInsn(100);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(annotationVisitor26);
    }

    @Test
    public void test07835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07835");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 1, "hi!", "", "hi!");
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label22, label23, (int) (byte) 10);
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor29.visitTryCatchBlock(label30, label31, label32, "");
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor29.visitLocalVariable("hi!", "hi!", "hi!", label38, label39, (int) (byte) 10);
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj54 = null;
        aSMifierMethodVisitor45.visitLdcInsn(obj54);
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor45.visitJumpInsn((int) (short) 1, label57);
        aSMifierMethodVisitor45.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor45.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierMethodVisitor45.visitAnnotationDefault();
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter("hi!");
        printWriter69.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor73 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor73.visitTryCatchBlock(label74, label75, label76, "");
        aSMifierMethodVisitor73.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label84 = null;
        org.mockito.asm.Label label85 = null;
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] { label85 };
        aSMifierMethodVisitor73.visitTableSwitchInsn(0, (int) (byte) 10, label84, labelArray86);
        java.io.PrintWriter printWriter88 = printWriter69.printf("hi!", (java.lang.Object[]) labelArray86);
        java.lang.String[] strArray90 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor45.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray86, 1, (java.lang.Object[]) strArray90);
        aSMifierMethodVisitor29.visitTableSwitchInsn((int) (byte) 1, (int) (byte) 100, label44, labelArray86);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) -1, (int) (byte) 10, label28, labelArray86);
        org.mockito.asm.AnnotationVisitor annotationVisitor96 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(annotationVisitor96);
    }

    @Test
    public void test07836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07836");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) -1, "hi!", false);
        java.util.List list19 = aSMifierMethodVisitor0.getText();
        java.util.List list20 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
    }

    @Test
    public void test07837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07837");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append('4');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        printWriter24.println((double) (byte) 0);
        java.io.PrintWriter printWriter32 = printWriter24.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor34.visitTryCatchBlock(label35, label36, label37, "");
        aSMifierMethodVisitor34.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor43.visitTryCatchBlock(label44, label45, label46, "");
        aSMifierMethodVisitor43.visitMaxs(0, (-1));
        aSMifierMethodVisitor43.visitCode();
        aSMifierMethodVisitor34.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor43);
        aSMifierMethodVisitor43.visitMultiANewArrayInsn("hi!", (int) (byte) -1);
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor43.visitTryCatchBlock(label57, label58, label59, "hi!");
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter("hi!");
        printWriter63.write((-1));
        printWriter63.flush();
        java.util.Locale locale67 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray72 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray74 = null;
        aSMifierMethodVisitor69.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray72, (int) (short) 1, objArray74);
        java.io.PrintWriter printWriter76 = printWriter63.printf(locale67, "", (java.lang.Object[]) strArray72);
        aSMifierMethodVisitor43.visitLdcInsn((java.lang.Object) strArray72);
        java.io.PrintWriter printWriter78 = printWriter32.format("hi!", (java.lang.Object[]) strArray72);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(printWriter76);
        org.junit.Assert.assertNotNull(printWriter78);
    }

    @Test
    public void test07838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07838");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label70, label71, (int) (short) 10);
        org.mockito.asm.Label label75 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label75);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor0.visitJumpInsn(0, label78);
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor0.visitLabel(label80);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (byte) 1);
        aSMifierMethodVisitor0.visitIincInsn((int) ' ', (int) (short) 10);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
    }

    @Test
    public void test07839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07839");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.println((int) (short) -1);
        char[] charArray12 = new char[] { ' ', ' ', ' ', '4', '4', 'a' };
        // The following exception was thrown during execution in test generation
        try {
            printWriter1.write(charArray12, (-1), (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "   44a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "   44a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[ ,  ,  , 4, 4, a]");
    }

    @Test
    public void test07840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07840");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierClassVisitor15.visitAnnotation("", true);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        printWriter36.println((-1.0d));
        printWriter36.print(' ');
        printWriter36.println('#');
        annotationVisitor33.visit("", (java.lang.Object) printWriter36);
        annotationVisitor33.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(annotationVisitor33);
    }

    @Test
    public void test07841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07841");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor15);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 100, (int) '#');
        java.util.List list24 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLabel(label26);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list24);
    }

    @Test
    public void test07842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07842");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        printWriter27.print((java.lang.Object) (short) -1);
        printWriter27.flush();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter27);
        printWriter31.write("");
        org.mockito.asm.FieldVisitor fieldVisitor34 = aSMifierClassVisitor15.visitField(0, "", "", "hi!", (java.lang.Object) printWriter31);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor42.visitTryCatchBlock(label43, label44, label45, "");
        aSMifierMethodVisitor42.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj51 = null;
        aSMifierMethodVisitor42.visitLdcInsn(obj51);
        aSMifierMethodVisitor42.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor54 = aSMifierClassVisitor15.visitField((-1), "hi!", "hi!", "", (java.lang.Object) aSMifierMethodVisitor42);
        aSMifierMethodVisitor42.visitCode();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor54);
    }

    @Test
    public void test07843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07843");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label20, label21, label22, "");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test07844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07844");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 100, "hi!", "", "hi!");
        java.util.List list31 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list31);
    }

    @Test
    public void test07845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07845");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        printWriter27.print((java.lang.Object) (short) -1);
        printWriter27.flush();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter27);
        printWriter31.write("");
        org.mockito.asm.FieldVisitor fieldVisitor34 = aSMifierClassVisitor15.visitField(0, "", "", "hi!", (java.lang.Object) printWriter31);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor42.visitTryCatchBlock(label43, label44, label45, "");
        aSMifierMethodVisitor42.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj51 = null;
        aSMifierMethodVisitor42.visitLdcInsn(obj51);
        aSMifierMethodVisitor42.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor54 = aSMifierClassVisitor15.visitField((-1), "hi!", "hi!", "", (java.lang.Object) aSMifierMethodVisitor42);
        aSMifierMethodVisitor42.visitVarInsn((int) 'a', (int) (byte) -1);
        aSMifierMethodVisitor42.visitIincInsn((int) (byte) 10, (int) (short) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor42.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(annotationVisitor63);
    }

    @Test
    public void test07846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07846");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (byte) 0);
        java.lang.String[] strArray37 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) (byte) -1, (int) ' ', "hi!", "", "", strArray37);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitInnerClass("hi!", "hi!", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor49.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor49.visitFieldInsn((int) '4', "hi!", "", "");
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor49.visitLocalVariable("hi!", "hi!", "hi!", label62, label63, (int) '4');
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor49.visitJumpInsn((int) (short) 100, label67);
        aSMifierMethodVisitor49.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierMethodVisitor49.visitAnnotation("hi!", false);
        aSMifierMethodVisitor49.visitEnd();
        annotationVisitor47.visit("", (java.lang.Object) aSMifierMethodVisitor49);
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor49.visitLineNumber((int) '4', label76);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(annotationVisitor72);
    }

    @Test
    public void test07847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07847");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        printWriter8.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter12 = printWriter8.append((java.lang.CharSequence) "");
        printWriter8.print((double) 1);
        java.io.PrintWriter printWriter16 = printWriter8.append((java.lang.CharSequence) "hi!");
        printWriter8.write((int) (short) 1);
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter("hi!");
        java.util.Locale locale21 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray26 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray28 = null;
        aSMifierMethodVisitor23.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray26, (int) (short) 1, objArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray40 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray42 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor31, strArray40, 1.0f };
        java.io.PrintWriter printWriter43 = printWriter20.printf(locale21, "", (java.lang.Object[]) strArray40);
        printWriter43.print('#');
        printWriter43.println(false);
        printWriter43.write("hi!");
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        java.util.Locale locale52 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray57 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray59 = null;
        aSMifierMethodVisitor54.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray57, (int) (short) 1, objArray59);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor62.visitTryCatchBlock(label63, label64, label65, "");
        aSMifierMethodVisitor62.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray71 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray73 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor62, strArray71, 1.0f };
        java.io.PrintWriter printWriter74 = printWriter51.printf(locale52, "", (java.lang.Object[]) strArray71);
        char[] charArray81 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter74.println(charArray81);
        printWriter43.println(charArray81);
        printWriter8.print(charArray81);
        printWriter6.write(charArray81);
        printWriter6.println("");
        printWriter6.write("");
        printWriter6.println((int) (byte) 0);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(printWriter74);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test07848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07848");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        printWriter27.print("hi!");
        java.util.Locale locale31 = null;
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.write((-1));
        printWriter34.flush();
        java.util.Locale locale38 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray43 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray45 = null;
        aSMifierMethodVisitor40.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray43, (int) (short) 1, objArray45);
        java.io.PrintWriter printWriter47 = printWriter34.printf(locale38, "", (java.lang.Object[]) strArray43);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor48 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter34);
        aSMifierClassVisitor48.visitEnd();
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter("hi!");
        printWriter55.write((-1));
        printWriter55.flush();
        java.util.Locale locale59 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray64 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray66 = null;
        aSMifierMethodVisitor61.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray64, (int) (short) 1, objArray66);
        java.io.PrintWriter printWriter68 = printWriter55.printf(locale59, "", (java.lang.Object[]) strArray64);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor69 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter55);
        aSMifierClassVisitor69.visitEnd();
        aSMifierClassVisitor69.visitSource("", "hi!");
        java.lang.String[] strArray79 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor69.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray79);
        org.mockito.asm.MethodVisitor methodVisitor81 = aSMifierClassVisitor48.visitMethod((int) (short) 100, "hi!", "hi!", "", strArray79);
        aSMifierClassVisitor48.visitInnerClass("", "", "", (int) (short) 100);
        java.lang.String[] strArray94 = new java.lang.String[] { "", "" };
        aSMifierClassVisitor48.visit((-1), (int) (short) 1, "hi!", "", "hi!", strArray94);
        java.io.PrintWriter printWriter96 = printWriter27.printf(locale31, "", (java.lang.Object[]) strArray94);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(methodVisitor81);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(printWriter96);
    }

    @Test
    public void test07849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07849");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitMaxs(0, (-1));
        aSMifierMethodVisitor9.visitCode();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor9);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor9.visitLabel(label20);
        aSMifierMethodVisitor9.visitMaxs((int) (short) 100, (-1));
        aSMifierMethodVisitor9.visitIntInsn((int) (short) 0, (int) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor9.visitAnnotation("", true);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label31, label32, label33, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor9.visitParameterAnnotation((int) (short) 1, "hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor9.visitParameterAnnotation(0, "", false);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor43);
    }

    @Test
    public void test07850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07850");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.close();
        boolean boolean5 = printWriter1.checkError();
        printWriter1.print((float) '4');
        printWriter1.println();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test07851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07851");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        boolean boolean6 = printWriter1.checkError();
        printWriter1.print((float) (byte) 10);
        printWriter1.print(0.0f);
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter11.print((double) 0.0f);
        printWriter11.println("");
        printWriter11.println();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test07852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07852");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitSource("hi!", "");
        java.util.List list34 = aSMifierClassVisitor15.getText();
        java.lang.Object obj39 = null;
        org.mockito.asm.FieldVisitor fieldVisitor40 = aSMifierClassVisitor15.visitField(100, "hi!", "", "", obj39);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = fieldVisitor40.visitAnnotation("", true);
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        java.util.Locale locale47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray54 = null;
        aSMifierMethodVisitor49.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray52, (int) (short) 1, objArray54);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor57.visitTryCatchBlock(label58, label59, label60, "");
        aSMifierMethodVisitor57.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray66 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray68 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor57, strArray66, 1.0f };
        java.io.PrintWriter printWriter69 = printWriter46.printf(locale47, "", (java.lang.Object[]) strArray66);
        java.io.PrintWriter printWriter71 = printWriter69.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter73 = printWriter69.append(' ');
        printWriter73.print(1);
        printWriter73.println(false);
        printWriter73.print((double) (-1L));
        printWriter73.print(1);
        annotationVisitor43.visit("", (java.lang.Object) 1);
        annotationVisitor43.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(fieldVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(printWriter73);
    }

    @Test
    public void test07853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07853");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.print((double) (byte) 10);
        java.util.Locale locale6 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label14 = null;
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label[] labelArray33 = new org.mockito.asm.Label[] { label32 };
        aSMifierMethodVisitor20.visitTableSwitchInsn(0, (int) (byte) 10, label31, labelArray33);
        java.io.PrintWriter printWriter35 = printWriter16.printf("hi!", (java.lang.Object[]) labelArray33);
        aSMifierMethodVisitor8.visitTableSwitchInsn(1, (int) (short) 10, label14, labelArray33);
        java.io.PrintWriter printWriter37 = printWriter1.format(locale6, "hi!", (java.lang.Object[]) labelArray33);
        printWriter37.write((int) (byte) 1);
        java.io.PrintWriter printWriter43 = printWriter37.append((java.lang.CharSequence) "hi!", 0, (int) (byte) 1);
        java.lang.Object[] objArray45 = null;
        java.io.PrintWriter printWriter46 = printWriter37.format("hi!", objArray45);
        printWriter46.write((-1));
        java.io.PrintWriter printWriter50 = printWriter46.append('#');
        printWriter46.print("hi!");
        org.junit.Assert.assertNotNull(labelArray33);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(printWriter50);
    }

    @Test
    public void test07854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07854");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, (int) (short) -1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) -1, (int) 'a');
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
    }

    @Test
    public void test07855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07855");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        java.util.List list26 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 0);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.write((-1));
        printWriter33.flush();
        java.util.Locale locale37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray44 = null;
        aSMifierMethodVisitor39.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray42, (int) (short) 1, objArray44);
        java.io.PrintWriter printWriter46 = printWriter33.printf(locale37, "", (java.lang.Object[]) strArray42);
        java.lang.Object[] objArray48 = null;
        aSMifierMethodVisitor0.visitFrame((int) (short) 1, 10, (java.lang.Object[]) strArray42, (int) (short) -1, objArray48);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label50, label51, label52, "hi!");
        aSMifierMethodVisitor0.visitMaxs((int) (short) 1, (int) (short) 100);
        aSMifierMethodVisitor0.visitTypeInsn(100, "");
        aSMifierMethodVisitor0.visitVarInsn(0, (int) (short) 100);
        aSMifierMethodVisitor0.visitInsn((int) '4');
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(printWriter46);
    }

    @Test
    public void test07856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07856");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        org.mockito.asm.Label label29 = null;
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "");
        printWriter31.print((double) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor39.visitJumpInsn((int) (short) 1, label51);
        aSMifierMethodVisitor39.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor39.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor39.visitAnnotationDefault();
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter("hi!");
        printWriter63.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor67.visitTryCatchBlock(label68, label69, label70, "");
        aSMifierMethodVisitor67.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] { label79 };
        aSMifierMethodVisitor67.visitTableSwitchInsn(0, (int) (byte) 10, label78, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter63.printf("hi!", (java.lang.Object[]) labelArray80);
        java.lang.String[] strArray84 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor39.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray80, 1, (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter86 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray80);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (short) 100, (int) (short) 1, label29, labelArray80);
        org.mockito.asm.Label label89 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 1, label89);
        aSMifierMethodVisitor0.visitInsn((int) (short) 100);
        aSMifierMethodVisitor0.visitIincInsn((-1), (int) (byte) 0);
        aSMifierMethodVisitor0.visitInsn((int) (short) 1);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter86);
    }

    @Test
    public void test07857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07857");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", false);
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter("hi!");
        printWriter20.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter24 = printWriter20.append((java.lang.CharSequence) "");
        printWriter24.close();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter24);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        printWriter28.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter32 = printWriter28.append((java.lang.CharSequence) "");
        printWriter32.close();
        printWriter32.println((int) (short) 10);
        java.util.Locale locale36 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor38.visitTryCatchBlock(label39, label40, label41, "");
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor38.visitLocalVariable("hi!", "hi!", "hi!", label47, label48, (int) (byte) 10);
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        printWriter52.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray56 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter57 = printWriter52.format("", (java.lang.Object[]) strArray56);
        aSMifierMethodVisitor38.visitLdcInsn((java.lang.Object) strArray56);
        java.io.PrintWriter printWriter59 = printWriter32.format(locale36, "hi!", (java.lang.Object[]) strArray56);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter32);
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter((java.io.Writer) printWriter32);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(printWriter59);
    }

    @Test
    public void test07858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07858");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor24.visitLocalVariable("hi!", "hi!", "hi!", label33, label34, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor24.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor24.visitAnnotationDefault();
        annotationVisitor40.visitEnum("", "hi!", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor45 = aSMifierClassVisitor15.visitField((int) '#', "", "", "", (java.lang.Object) "hi!");
        aSMifierClassVisitor15.visitSource("", "");
        aSMifierClassVisitor15.visitInnerClass("hi!", "", "", (int) ' ');
        java.lang.String[] strArray60 = new java.lang.String[] { "", "hi!" };
        org.mockito.asm.MethodVisitor methodVisitor61 = aSMifierClassVisitor15.visitMethod((int) (byte) 0, "hi!", "hi!", "", strArray60);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor66.visitTryCatchBlock(label67, label68, label69, "");
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor66.visitLocalVariable("hi!", "hi!", "hi!", label75, label76, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierMethodVisitor66.visitAnnotationDefault();
        aSMifierMethodVisitor66.visitFieldInsn(100, "hi!", "", "hi!");
        aSMifierMethodVisitor66.visitCode();
        aSMifierMethodVisitor66.visitInsn(0);
        aSMifierMethodVisitor66.visitFieldInsn(100, "", "", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor93 = aSMifierClassVisitor15.visitField((int) '#', "hi!", "", "hi!", (java.lang.Object) "");
        fieldVisitor93.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor97 = fieldVisitor93.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor79);
        org.junit.Assert.assertNotNull(fieldVisitor93);
        org.junit.Assert.assertNotNull(annotationVisitor97);
    }

    @Test
    public void test07859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07859");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter9, false);
        printWriter11.println((long) (byte) 100);
        printWriter11.print(true);
        printWriter11.write((int) (byte) 10);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
    }

    @Test
    public void test07860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07860");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter3, true);
        printWriter3.close();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter3);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierClassVisitor7.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = annotationVisitor10.visitArray("");
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(annotationVisitor12);
    }

    @Test
    public void test07861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07861");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label18);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 0, "");
        aSMifierMethodVisitor0.visitVarInsn(0, 0);
        aSMifierMethodVisitor0.visitFieldInsn(10, "", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        java.util.Locale locale35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray40 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray42 = null;
        aSMifierMethodVisitor37.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray40, (int) (short) 1, objArray42);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray56 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor45, strArray54, 1.0f };
        java.io.PrintWriter printWriter57 = printWriter34.printf(locale35, "", (java.lang.Object[]) strArray54);
        java.io.PrintWriter printWriter59 = printWriter57.append((java.lang.CharSequence) "");
        printWriter57.flush();
        printWriter57.println();
        printWriter57.println((float) 10);
        aSMifierMethodVisitor0.print(printWriter57);
        printWriter57.println(false);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(printWriter59);
    }

    @Test
    public void test07862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07862");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, (-1));
        aSMifierMethodVisitor0.visitInsn((int) '#');
        aSMifierMethodVisitor0.visitVarInsn(100, (int) (short) 100);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) -1, label21);
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label26, label27, (int) 'a');
        aSMifierMethodVisitor0.visitFieldInsn(1, "", "hi!", "");
        java.util.List list35 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label39, label40, (int) (short) 100);
        org.junit.Assert.assertNotNull(list35);
    }

    @Test
    public void test07863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07863");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", true);
        aSMifierMethodVisitor0.visitMaxs(10, (int) (byte) 10);
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor0.visitLineNumber(1, label31);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, (int) 'a');
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (-1));
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label40);
        aSMifierMethodVisitor0.visitTypeInsn(1, "");
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor26);
    }

    @Test
    public void test07864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07864");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = null;
        aSMifierMethodVisitor36.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray39, (int) (short) 1, objArray41);
        org.mockito.asm.MethodVisitor methodVisitor43 = aSMifierClassVisitor15.visitMethod((int) (short) 0, "", "", "hi!", strArray39);
        aSMifierClassVisitor15.visitEnd();
        java.util.List list45 = aSMifierClassVisitor15.text;
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("hi!", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor54.visitTryCatchBlock(label55, label56, label57, "");
        aSMifierMethodVisitor54.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj63 = null;
        aSMifierMethodVisitor54.visitLdcInsn(obj63);
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor54.visitJumpInsn((int) (short) 1, label66);
        aSMifierMethodVisitor54.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = aSMifierMethodVisitor54.visitParameterAnnotation((int) (byte) 1, "", true);
        aSMifierMethodVisitor54.visitInsn((int) (short) 1);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor54.visitJumpInsn((int) (byte) 0, label78);
        aSMifierMethodVisitor54.visitTypeInsn((int) (short) 10, "");
        org.mockito.asm.FieldVisitor fieldVisitor83 = aSMifierClassVisitor15.visitField((int) (byte) 100, "hi!", "", "hi!", (java.lang.Object) "");
        aSMifierClassVisitor15.visitInnerClass("hi!", "", "", (int) '4');
        java.lang.String[] strArray94 = null;
        aSMifierClassVisitor15.visit((int) 'a', (int) (byte) 0, "", "hi!", "hi!", strArray94);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodVisitor43);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(annotationVisitor74);
        org.junit.Assert.assertNotNull(fieldVisitor83);
    }

    @Test
    public void test07865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07865");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label28, label29, (int) (short) 1);
        aSMifierMethodVisitor0.visitIntInsn((int) '#', (int) 'a');
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 100, (int) (byte) 0);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, (int) '#');
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 100, "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test07866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07866");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = null;
        aSMifierMethodVisitor36.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray39, (int) (short) 1, objArray41);
        org.mockito.asm.MethodVisitor methodVisitor43 = aSMifierClassVisitor15.visitMethod((int) (short) 0, "", "", "hi!", strArray39);
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter52 = printWriter50.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor53 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter52);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierClassVisitor53.visitAnnotation("hi!", true);
        java.lang.String[] strArray62 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor53.visit(1, (int) (short) 10, "hi!", "", "", strArray62);
        aSMifierClassVisitor15.visit((-1), (int) (byte) 10, "", "", "", strArray62);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "hi!", (int) (short) -1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodVisitor43);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(strArray62);
    }

    @Test
    public void test07867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07867");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        printWriter36.write((-1));
        printWriter36.flush();
        java.util.Locale locale40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray47 = null;
        aSMifierMethodVisitor42.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray45, (int) (short) 1, objArray47);
        java.io.PrintWriter printWriter49 = printWriter36.printf(locale40, "", (java.lang.Object[]) strArray45);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor50 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter36);
        aSMifierClassVisitor50.visitEnd();
        aSMifierClassVisitor50.visitSource("", "hi!");
        java.lang.String[] strArray60 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor50.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray60);
        aSMifierClassVisitor50.visitInnerClass("", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor71 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray74 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray76 = null;
        aSMifierMethodVisitor71.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray74, (int) (short) 1, objArray76);
        org.mockito.asm.MethodVisitor methodVisitor78 = aSMifierClassVisitor50.visitMethod((int) (short) 0, "", "", "hi!", strArray74);
        org.mockito.asm.MethodVisitor methodVisitor79 = aSMifierClassVisitor15.visitMethod((int) '4', "hi!", "", "", strArray74);
        java.lang.Class<?> wildcardClass80 = strArray74.getClass();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(methodVisitor78);
        org.junit.Assert.assertNotNull(methodVisitor79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test07868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07868");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 100, label14);
        aSMifierMethodVisitor0.visitMaxs(10, (int) ' ');
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, (int) (byte) 1);
        org.mockito.asm.Label label24 = null;
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        printWriter26.print(false);
        java.io.PrintWriter printWriter30 = printWriter26.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter((java.io.Writer) printWriter30, true);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter((java.io.Writer) printWriter30);
        printWriter30.print(0);
        java.util.Locale locale36 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor38.visitTryCatchBlock(label39, label40, label41, "");
        aSMifierMethodVisitor38.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj47 = null;
        aSMifierMethodVisitor38.visitLdcInsn(obj47);
        aSMifierMethodVisitor38.visitInsn((int) ' ');
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor38.visitJumpInsn(100, label52);
        aSMifierMethodVisitor38.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label57 = null;
        int[] intArray58 = new int[] {};
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter("hi!");
        printWriter60.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter64 = printWriter60.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor66.visitTryCatchBlock(label67, label68, label69, "");
        aSMifierMethodVisitor66.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj75 = null;
        aSMifierMethodVisitor66.visitLdcInsn(obj75);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor66.visitJumpInsn((int) (short) 1, label78);
        aSMifierMethodVisitor66.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label85 = null;
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor66.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label85, labelArray86);
        java.io.PrintWriter printWriter88 = printWriter64.printf("", (java.lang.Object[]) labelArray86);
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label57, intArray58, labelArray86);
        java.io.PrintWriter printWriter90 = printWriter30.printf(locale36, "hi!", (java.lang.Object[]) labelArray86);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (-1), label24, labelArray86);
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor95 = annotationVisitor92.visitAnnotation("", "hi!");
        annotationVisitor95.visitEnum("hi!", "", "");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertNotNull(annotationVisitor92);
        org.junit.Assert.assertNotNull(annotationVisitor95);
    }

    @Test
    public void test07869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07869");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println((int) (short) 10);
        printWriter24.print('#');
        java.io.PrintWriter printWriter30 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.println(0);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, false);
        printWriter34.println(false);
        boolean boolean37 = printWriter34.checkError();
        printWriter34.println(10.0f);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test07870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07870");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println((int) (short) -1);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor4.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor4.visitEnd();
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print(false);
        java.io.PrintWriter printWriter20 = printWriter16.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj31 = null;
        aSMifierMethodVisitor22.visitLdcInsn(obj31);
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor22.visitJumpInsn((int) (short) 1, label34);
        aSMifierMethodVisitor22.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor22.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor22.visitAnnotationDefault();
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        printWriter46.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor50.visitTryCatchBlock(label51, label52, label53, "");
        aSMifierMethodVisitor50.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label[] labelArray63 = new org.mockito.asm.Label[] { label62 };
        aSMifierMethodVisitor50.visitTableSwitchInsn(0, (int) (byte) 10, label61, labelArray63);
        java.io.PrintWriter printWriter65 = printWriter46.printf("hi!", (java.lang.Object[]) labelArray63);
        java.lang.String[] strArray67 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor22.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray63, 1, (java.lang.Object[]) strArray67);
        java.io.PrintWriter printWriter69 = printWriter16.format("hi!", (java.lang.Object[]) strArray67);
        aSMifierClassVisitor4.visit(10, (int) '4', "", "", "", strArray67);
        aSMifierClassVisitor4.visitSource("", "hi!");
        aSMifierClassVisitor4.visitOuterClass("hi!", "", "");
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(labelArray63);
        org.junit.Assert.assertNotNull(printWriter65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(printWriter69);
    }

    @Test
    public void test07871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07871");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter1.print(false);
        java.lang.CharSequence charSequence12 = null;
        java.io.PrintWriter printWriter13 = printWriter1.append(charSequence12);
        printWriter1.print((double) (-1));
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor16.visitSource("", "hi!");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter13);
    }

    @Test
    public void test07872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07872");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        printWriter1.print((long) 0);
        boolean boolean7 = printWriter1.checkError();
        printWriter1.print("");
        java.io.PrintWriter printWriter11 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter11.print("hi!");
        printWriter11.println((double) 10L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(printWriter11);
    }

    @Test
    public void test07873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07873");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor0.visitInsn(100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list20 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label24, label25, (int) (short) 1);
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 0, label29);
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "hi!", label34, label35, (int) (short) 100);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(list20);
    }

    @Test
    public void test07874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07874");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 100, "", "", "hi!");
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 1, label18);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.write((-1));
        printWriter21.flush();
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        java.io.PrintWriter printWriter34 = printWriter21.printf(locale25, "", (java.lang.Object[]) strArray30);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor35 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        aSMifierClassVisitor35.visitEnd();
        aSMifierClassVisitor35.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor35.visitEnd();
        java.util.List list42 = aSMifierClassVisitor35.getText();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierClassVisitor35);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierClassVisitor35.visitAnnotation("", true);
        aSMifierClassVisitor35.visitOuterClass("hi!", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierClassVisitor35.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierClassVisitor35.visitAnnotation("", true);
        aSMifierClassVisitor35.visitInnerClass("hi!", "hi!", "", (int) (byte) -1);
        aSMifierClassVisitor35.visitEnd();
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(annotationVisitor56);
    }

    @Test
    public void test07875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07875");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 10);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label78);
        java.util.List list80 = aSMifierMethodVisitor0.text;
        org.mockito.asm.Label label82 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label82);
        org.mockito.asm.Label label84 = null;
        org.mockito.asm.Label label85 = null;
        org.mockito.asm.Label label86 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label84, label85, label86, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor89 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label91 = null;
        aSMifierMethodVisitor0.visitLineNumber(100, label91);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(list80);
        org.junit.Assert.assertNotNull(annotationVisitor89);
    }

    @Test
    public void test07876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07876");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append('4');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        printWriter24.println((double) (byte) 0);
        printWriter24.write("hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
    }

    @Test
    public void test07877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07877");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.println((float) (short) 0);
        printWriter1.println((float) 1L);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter8);
        java.util.Locale locale10 = null;
        java.lang.Object[] objArray12 = null;
        java.io.PrintWriter printWriter13 = printWriter8.format(locale10, "", objArray12);
        printWriter13.println(false);
        printWriter13.println("hi!");
        org.junit.Assert.assertNotNull(printWriter13);
    }

    @Test
    public void test07878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07878");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println((int) (short) 10);
        printWriter24.print('#');
        printWriter24.print(false);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        java.util.Locale locale33 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray40 = null;
        aSMifierMethodVisitor35.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray38, (int) (short) 1, objArray40);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor43.visitTryCatchBlock(label44, label45, label46, "");
        aSMifierMethodVisitor43.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray54 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor43, strArray52, 1.0f };
        java.io.PrintWriter printWriter55 = printWriter32.printf(locale33, "", (java.lang.Object[]) strArray52);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter("hi!");
        java.util.Locale locale58 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray63 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray65 = null;
        aSMifierMethodVisitor60.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray63, (int) (short) 1, objArray65);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor68.visitTryCatchBlock(label69, label70, label71, "");
        aSMifierMethodVisitor68.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray77 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray79 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor68, strArray77, 1.0f };
        java.io.PrintWriter printWriter80 = printWriter57.printf(locale58, "", (java.lang.Object[]) strArray77);
        char[] charArray87 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter80.println(charArray87);
        printWriter55.print(charArray87);
        printWriter24.write(charArray87);
        printWriter24.println((long) ' ');
        printWriter24.println((long) (short) 100);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test07879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07879");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 0, (int) (short) 1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor18.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test07880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07880");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs(1, 10);
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label65);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Attribute attribute75 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
    }

    @Test
    public void test07881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07881");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        java.io.PrintWriter printWriter7 = printWriter1.append('#');
        printWriter7.write((int) (byte) 0);
        printWriter7.write("");
        printWriter7.println('a');
        printWriter7.println((float) (byte) 100);
        java.lang.Class<?> wildcardClass16 = printWriter7.getClass();
        org.junit.Assert.assertNotNull(printWriter7);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test07882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07882");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label19, labelArray20);
        java.io.PrintWriter printWriter22 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.print(printWriter22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(labelArray20);
    }

    @Test
    public void test07883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07883");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((int) (byte) -1);
        printWriter1.print((double) (byte) 1);
        printWriter1.close();
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor12 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor12.visitInnerClass("hi!", "", "hi!", (int) 'a');
        aSMifierClassVisitor12.visitOuterClass("hi!", "", "hi!");
        aSMifierClassVisitor12.visitEnd();
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test07884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07884");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        java.util.List list6 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitFieldInsn((int) '#', "", "", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 1, (int) (short) 100);
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor0.visitLabel(label15);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber(0, label18);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMaxs((int) (short) -1, (int) (byte) 0);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test07885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07885");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((int) (byte) -1);
        printWriter1.print((double) (byte) 1);
        printWriter1.close();
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        java.util.Locale locale13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray20 = null;
        aSMifierMethodVisitor15.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray18, (int) (short) 1, objArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor23, strArray32, 1.0f };
        java.io.PrintWriter printWriter35 = printWriter12.printf(locale13, "", (java.lang.Object[]) strArray32);
        java.io.PrintWriter printWriter37 = printWriter35.append((java.lang.CharSequence) "");
        printWriter35.write((int) (byte) 0);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        java.util.Locale locale42 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray47 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray49 = null;
        aSMifierMethodVisitor44.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray47, (int) (short) 1, objArray49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor52.visitTryCatchBlock(label53, label54, label55, "");
        aSMifierMethodVisitor52.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray61 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray63 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor52, strArray61, 1.0f };
        java.io.PrintWriter printWriter64 = printWriter41.printf(locale42, "", (java.lang.Object[]) strArray61);
        char[] charArray71 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter64.println(charArray71);
        printWriter35.print(charArray71);
        printWriter1.write(charArray71, (int) 'a', 0);
        printWriter1.println('4');
        java.io.PrintWriter printWriter80 = printWriter1.append((java.lang.CharSequence) "");
        printWriter80.println("hi!");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter80);
    }

    @Test
    public void test07886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07886");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 10, "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) -1, "hi!", true);
        aSMifierMethodVisitor0.visitMethodInsn((int) '4', "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor29);
    }

    @Test
    public void test07887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07887");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter3);
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierClassVisitor4.visitAnnotation("hi!", true);
        aSMifierClassVisitor4.visitEnd();
        aSMifierClassVisitor4.visitEnd();
        aSMifierClassVisitor4.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor15.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor15.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj24 = null;
        aSMifierMethodVisitor15.visitLdcInsn(obj24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor15.visitJumpInsn((int) (short) 1, label27);
        aSMifierMethodVisitor15.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor15.visitLineNumber((int) (short) 0, label33);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor15.visitAnnotation("", true);
        aSMifierMethodVisitor15.visitIntInsn((int) (short) 1, (int) (byte) 0);
        aSMifierMethodVisitor15.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor42.visitLdcInsn((java.lang.Object) (-1));
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor42.visitLocalVariable("hi!", "", "hi!", label50, label51, (int) (short) 100);
        aSMifierMethodVisitor42.visitMaxs(0, (int) (short) 100);
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (short) 100);
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor15.visitLabel(label58);
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor15.visitLocalVariable("", "", "", label63, label64, (int) (short) 1);
        org.mockito.asm.FieldVisitor fieldVisitor67 = aSMifierClassVisitor4.visitField((int) (byte) -1, "hi!", "", "", (java.lang.Object) aSMifierMethodVisitor15);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor67);
    }

    @Test
    public void test07888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07888");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        printWriter32.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray36 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter37 = printWriter32.format("", (java.lang.Object[]) strArray36);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter((java.io.Writer) printWriter32, true);
        org.mockito.asm.FieldVisitor fieldVisitor40 = aSMifierClassVisitor15.visitField((int) '#', "", "", "hi!", (java.lang.Object) printWriter39);
        printWriter39.print((double) 0.0f);
        printWriter39.print((double) 0L);
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        java.util.Locale locale47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray54 = null;
        aSMifierMethodVisitor49.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray52, (int) (short) 1, objArray54);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor57.visitTryCatchBlock(label58, label59, label60, "");
        aSMifierMethodVisitor57.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray66 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray68 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor57, strArray66, 1.0f };
        java.io.PrintWriter printWriter69 = printWriter46.printf(locale47, "", (java.lang.Object[]) strArray66);
        printWriter69.print(' ');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor72 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter69);
        aSMifierClassVisitor72.visitSource("", "");
        printWriter39.println((java.lang.Object) aSMifierClassVisitor72);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(fieldVisitor40);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNotNull(printWriter69);
    }

    @Test
    public void test07889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07889");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        aSMifierMethodVisitor4.visitTryCatchBlock(label5, label6, label7, "");
        aSMifierMethodVisitor4.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj13 = null;
        aSMifierMethodVisitor4.visitLdcInsn(obj13);
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor4.visitJumpInsn((int) (short) 1, label16);
        aSMifierMethodVisitor4.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor4.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor4.visitAnnotationDefault();
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        printWriter28.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] { label44 };
        aSMifierMethodVisitor32.visitTableSwitchInsn(0, (int) (byte) 10, label43, labelArray45);
        java.io.PrintWriter printWriter47 = printWriter28.printf("hi!", (java.lang.Object[]) labelArray45);
        java.lang.String[] strArray49 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor4.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray45, 1, (java.lang.Object[]) strArray49);
        printWriter3.println((java.lang.Object) strArray49);
        printWriter3.write("hi!", 100, (int) (byte) -1);
        java.io.PrintWriter printWriter57 = printWriter3.append(' ');
        printWriter57.print((int) (byte) 0);
        printWriter57.write("hi!");
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter("hi!");
        java.util.Locale locale64 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray69 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray71 = null;
        aSMifierMethodVisitor66.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray69, (int) (short) 1, objArray71);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor74 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        aSMifierMethodVisitor74.visitTryCatchBlock(label75, label76, label77, "");
        aSMifierMethodVisitor74.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray83 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray85 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor74, strArray83, 1.0f };
        java.io.PrintWriter printWriter86 = printWriter63.printf(locale64, "", (java.lang.Object[]) strArray83);
        char[] charArray93 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter86.println(charArray93);
        printWriter57.println(charArray93);
        printWriter57.println(' ');
        printWriter57.print((int) (short) 1);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertNotNull(printWriter86);
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test07890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07890");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitTypeInsn((int) '#', "");
        aSMifierMethodVisitor0.visitVarInsn(1, 0);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) ' ');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, (int) (byte) 10);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 10, (int) (short) 100);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test07891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07891");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 10, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) 'a', (int) (short) 0);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) -1, label20);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLabel(label22);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        printWriter25.print(false);
        java.io.PrintWriter printWriter29 = printWriter25.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.Writer) printWriter25);
        printWriter30.println();
        printWriter30.print((float) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj44 = null;
        aSMifierMethodVisitor35.visitLdcInsn(obj44);
        aSMifierMethodVisitor35.visitInsn((int) ' ');
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor35.visitJumpInsn(100, label49);
        aSMifierMethodVisitor35.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label54 = null;
        int[] intArray55 = new int[] {};
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter("hi!");
        printWriter57.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter61 = printWriter57.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor63.visitTryCatchBlock(label64, label65, label66, "");
        aSMifierMethodVisitor63.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj72 = null;
        aSMifierMethodVisitor63.visitLdcInsn(obj72);
        org.mockito.asm.Label label75 = null;
        aSMifierMethodVisitor63.visitJumpInsn((int) (short) 1, label75);
        aSMifierMethodVisitor63.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label82 = null;
        org.mockito.asm.Label[] labelArray83 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor63.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label82, labelArray83);
        java.io.PrintWriter printWriter85 = printWriter61.printf("", (java.lang.Object[]) labelArray83);
        aSMifierMethodVisitor35.visitLookupSwitchInsn(label54, intArray55, labelArray83);
        java.io.PrintWriter printWriter87 = printWriter30.printf("", (java.lang.Object[]) labelArray83);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.Writer) printWriter30, false);
        printWriter89.print("hi!");
        aSMifierMethodVisitor0.print(printWriter89);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn((int) (byte) -1, "", "hi!", "");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(labelArray83);
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(printWriter87);
    }

    @Test
    public void test07892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07892");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println((float) 10);
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter12 = printWriter10.append('a');
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter((java.io.Writer) printWriter12, true);
        java.util.Locale locale15 = null;
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        printWriter18.print(false);
        java.util.Locale locale21 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj32 = null;
        aSMifierMethodVisitor23.visitLdcInsn(obj32);
        aSMifierMethodVisitor23.visitInsn((int) ' ');
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label50 = null;
        int[] intArray57 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label50, intArray57, labelArray71);
        aSMifierMethodVisitor23.visitTableSwitchInsn((int) '4', (int) '#', label38, labelArray71);
        java.io.PrintWriter printWriter75 = printWriter18.format(locale21, "hi!", (java.lang.Object[]) labelArray71);
        java.io.PrintWriter printWriter76 = printWriter14.printf(locale15, "", (java.lang.Object[]) labelArray71);
        java.io.PrintWriter printWriter77 = printWriter1.printf("", (java.lang.Object[]) labelArray71);
        printWriter1.println();
        printWriter1.print(0.0f);
        printWriter1.println((float) (short) 10);
        printWriter1.print("hi!");
        printWriter1.print(0.0f);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(printWriter76);
        org.junit.Assert.assertNotNull(printWriter77);
    }

    @Test
    public void test07893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07893");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor28.visitLocalVariable("hi!", "hi!", "hi!", label37, label38, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor28.visitAnnotation("", true);
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj54 = null;
        aSMifierMethodVisitor45.visitLdcInsn(obj54);
        org.mockito.asm.Label label56 = null;
        int[] intArray63 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] { label76 };
        aSMifierMethodVisitor64.visitTableSwitchInsn(0, (int) (byte) 10, label75, labelArray77);
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label56, intArray63, labelArray77);
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label44, intArray63, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter26.printf("hi!", (java.lang.Object[]) labelArray80);
        java.io.PrintWriter printWriter84 = printWriter82.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor85 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter84);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test07894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07894");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 1, "", true);
        aSMifierMethodVisitor0.visitInsn((int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "");
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitParameterAnnotation(100, "", true);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) ' ');
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label36, label37, (int) (short) 0);
        java.lang.Class<?> wildcardClass40 = aSMifierMethodVisitor0.getClass();
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test07895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07895");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        java.util.Locale locale9 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor11.visitTryCatchBlock(label12, label13, label14, "");
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor11.visitLocalVariable("hi!", "hi!", "hi!", label20, label21, (int) (byte) 10);
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor27.visitTryCatchBlock(label28, label29, label30, "");
        aSMifierMethodVisitor27.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj36 = null;
        aSMifierMethodVisitor27.visitLdcInsn(obj36);
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor27.visitJumpInsn((int) (short) 1, label39);
        aSMifierMethodVisitor27.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor27.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierMethodVisitor27.visitAnnotationDefault();
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        printWriter51.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor55.visitTryCatchBlock(label56, label57, label58, "");
        aSMifierMethodVisitor55.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] { label67 };
        aSMifierMethodVisitor55.visitTableSwitchInsn(0, (int) (byte) 10, label66, labelArray68);
        java.io.PrintWriter printWriter70 = printWriter51.printf("hi!", (java.lang.Object[]) labelArray68);
        java.lang.String[] strArray72 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor27.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray68, 1, (java.lang.Object[]) strArray72);
        aSMifierMethodVisitor11.visitTableSwitchInsn((int) (byte) 1, (int) (byte) 100, label26, labelArray68);
        java.io.PrintWriter printWriter75 = printWriter5.format(locale9, "", (java.lang.Object[]) labelArray68);
        printWriter75.println((float) (byte) 10);
        java.io.PrintWriter printWriter79 = printWriter75.append((java.lang.CharSequence) "");
        printWriter79.println("hi!");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(printWriter79);
    }

    @Test
    public void test07896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07896");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label74, label75, label76, "hi!");
        java.util.List list79 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label81 = null;
        aSMifierMethodVisitor0.visitJumpInsn(0, label81);
        org.mockito.asm.Label label85 = null;
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 1, 0, label85, labelArray86);
        org.mockito.asm.AnnotationVisitor annotationVisitor90 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor91 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor91.visitEnum("hi!", "hi!", "");
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(list79);
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertNotNull(annotationVisitor90);
        org.junit.Assert.assertNotNull(annotationVisitor91);
    }

    @Test
    public void test07897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07897");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("hi!");
        printWriter26.println('a');
        printWriter26.println(false);
        printWriter26.close();
        printWriter26.println(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        printWriter26.println("");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test07898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07898");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor16.visitJumpInsn((int) (short) 1, label28);
        aSMifierMethodVisitor16.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor16.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor16.visitAnnotationDefault();
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] { label56 };
        aSMifierMethodVisitor44.visitTableSwitchInsn(0, (int) (byte) 10, label55, labelArray57);
        java.io.PrintWriter printWriter59 = printWriter40.printf("hi!", (java.lang.Object[]) labelArray57);
        java.lang.String[] strArray61 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor16.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray57, 1, (java.lang.Object[]) strArray61);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 1, (int) (byte) 100, label15, labelArray57);
        aSMifierMethodVisitor0.visitMethodInsn(1, "", "", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) '4', (int) (short) -1);
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label73, label74, label75, "");
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(labelArray57);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(strArray61);
    }

    @Test
    public void test07899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07899");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        java.io.PrintWriter printWriter7 = printWriter1.append('#');
        java.io.PrintWriter printWriter9 = printWriter1.append('a');
        printWriter1.write(10);
        printWriter1.print("hi!");
        org.junit.Assert.assertNotNull(printWriter7);
        org.junit.Assert.assertNotNull(printWriter9);
    }

    @Test
    public void test07900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07900");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter16 = printWriter12.append((java.lang.CharSequence) "");
        printWriter8.println((java.lang.Object) printWriter16);
        printWriter16.write("hi!", (int) (short) 100, (int) (byte) 0);
        printWriter16.println((double) '4');
        printWriter16.println("hi!");
        printWriter16.println("hi!");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter16);
    }

    @Test
    public void test07901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07901");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = printWriter1.append((java.lang.CharSequence) "");
        printWriter22.close();
        java.io.PrintWriter printWriter25 = printWriter22.append(' ');
        printWriter25.print((float) (short) 1);
        printWriter25.flush();
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.Writer) printWriter25, false);
        printWriter30.write("", 10, (int) '4');
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        java.util.Locale locale37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray44 = null;
        aSMifierMethodVisitor39.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray42, (int) (short) 1, objArray44);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label48, label49, label50, "");
        aSMifierMethodVisitor47.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray56 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray58 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor47, strArray56, 1.0f };
        java.io.PrintWriter printWriter59 = printWriter36.printf(locale37, "", (java.lang.Object[]) strArray56);
        printWriter59.println();
        printWriter59.print('a');
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter((java.io.Writer) printWriter59);
        printWriter30.println((java.lang.Object) printWriter59);
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertNotNull(printWriter59);
    }

    @Test
    public void test07902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07902");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((int) (byte) -1);
        printWriter1.print((double) (byte) 1);
        printWriter1.close();
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter11.println();
        java.io.PrintWriter printWriter14 = printWriter11.append('#');
        printWriter14.print("");
        printWriter14.println(false);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter14);
    }

    @Test
    public void test07903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07903");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.println((float) (short) 0);
        printWriter1.println((float) 1L);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.print((long) (byte) 10);
    }

    @Test
    public void test07904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07904");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        printWriter32.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray36 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter37 = printWriter32.format("", (java.lang.Object[]) strArray36);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter((java.io.Writer) printWriter32, true);
        org.mockito.asm.FieldVisitor fieldVisitor40 = aSMifierClassVisitor15.visitField((int) '#', "", "", "hi!", (java.lang.Object) printWriter39);
        java.lang.String[] strArray45 = null;
        org.mockito.asm.MethodVisitor methodVisitor46 = aSMifierClassVisitor15.visitMethod(0, "hi!", "hi!", "hi!", strArray45);
        aSMifierClassVisitor15.visitSource("", "");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(fieldVisitor40);
        org.junit.Assert.assertNotNull(methodVisitor46);
    }

    @Test
    public void test07905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07905");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label27 = null;
        int[] intArray34 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        aSMifierMethodVisitor16.visitLookupSwitchInsn(label27, intArray34, labelArray48);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) '4', (int) '#', label15, labelArray48);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label55, label56, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.Attribute attribute65 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test07906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07906");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 10, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) 'a', (int) (short) 0);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) -1, label20);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitLabel(label23);
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test07907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07907");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println((-1.0d));
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter5.print("hi!");
        printWriter5.close();
        printWriter5.write("", (int) '4', (int) ' ');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor13 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter5);
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test07908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07908");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        aSMifierMethodVisitor0.visitIntInsn(10, (int) ' ');
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label[] labelArray24 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTableSwitchInsn((int) (short) 100, (-1), label23, labelArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test07909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07909");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label22);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.util.List list25 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label[] labelArray29 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTableSwitchInsn((int) '4', 0, label28, labelArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(list25);
    }

    @Test
    public void test07910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07910");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor16.visitJumpInsn((int) (short) 1, label28);
        aSMifierMethodVisitor16.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor16.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor16.visitAnnotationDefault();
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] { label56 };
        aSMifierMethodVisitor44.visitTableSwitchInsn(0, (int) (byte) 10, label55, labelArray57);
        java.io.PrintWriter printWriter59 = printWriter40.printf("hi!", (java.lang.Object[]) labelArray57);
        java.lang.String[] strArray61 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor16.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray57, 1, (java.lang.Object[]) strArray61);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 1, (int) (byte) 100, label15, labelArray57);
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 0, (int) '4');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 0);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "hi!", "hi!");
        aSMifierMethodVisitor0.visitInsn(1);
        org.mockito.asm.Attribute attribute77 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(labelArray57);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(strArray61);
    }

    @Test
    public void test07911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07911");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitMaxs((int) 'a', 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label15, label16, label17, "");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn((-1), (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test07912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07912");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append(' ');
        printWriter28.println((float) '4');
        printWriter28.println(0);
        printWriter28.println((float) 0);
        printWriter28.print(false);
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter39 = printWriter28.format("hi!", (java.lang.Object[]) strArray38);
        printWriter39.println('a');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(printWriter39);
    }

    @Test
    public void test07913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07913");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        java.io.PrintWriter printWriter7 = printWriter1.append('#');
        printWriter7.print((long) 0);
        printWriter7.println((int) (byte) -1);
        printWriter7.print(true);
        printWriter7.println('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter7);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor21.visitTryCatchBlock(label22, label23, label24, "");
        aSMifierMethodVisitor21.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj30 = null;
        aSMifierMethodVisitor21.visitLdcInsn(obj30);
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor21.visitJumpInsn((int) (short) 1, label33);
        aSMifierMethodVisitor21.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor21.visitLabel(label38);
        aSMifierMethodVisitor21.visitInsn(100);
        java.util.List list42 = aSMifierMethodVisitor21.getText();
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor21.visitLabel(label43);
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter48 = printWriter46.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj58 = null;
        aSMifierMethodVisitor49.visitLdcInsn(obj58);
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor49.visitJumpInsn((int) (short) 1, label61);
        aSMifierMethodVisitor49.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor49.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor49.visitAnnotationDefault();
        java.io.PrintWriter printWriter73 = new java.io.PrintWriter("hi!");
        printWriter73.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor77.visitTryCatchBlock(label78, label79, label80, "");
        aSMifierMethodVisitor77.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label88 = null;
        org.mockito.asm.Label label89 = null;
        org.mockito.asm.Label[] labelArray90 = new org.mockito.asm.Label[] { label89 };
        aSMifierMethodVisitor77.visitTableSwitchInsn(0, (int) (byte) 10, label88, labelArray90);
        java.io.PrintWriter printWriter92 = printWriter73.printf("hi!", (java.lang.Object[]) labelArray90);
        java.lang.String[] strArray94 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor49.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray90, 1, (java.lang.Object[]) strArray94);
        printWriter48.println((java.lang.Object) strArray94);
        aSMifierMethodVisitor21.visitLdcInsn((java.lang.Object) strArray94);
        org.mockito.asm.MethodVisitor methodVisitor98 = aSMifierClassVisitor16.visitMethod((int) (byte) 100, "hi!", "", "", strArray94);
        org.junit.Assert.assertNotNull(printWriter7);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertNotNull(annotationVisitor69);
        org.junit.Assert.assertNotNull(labelArray90);
        org.junit.Assert.assertNotNull(printWriter92);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(methodVisitor98);
    }

    @Test
    public void test07914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07914");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = printWriter1.append((java.lang.CharSequence) "");
        printWriter22.close();
        java.io.PrintWriter printWriter25 = printWriter22.append(' ');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj35 = null;
        aSMifierMethodVisitor26.visitLdcInsn(obj35);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor26.visitJumpInsn((int) (short) 1, label38);
        aSMifierMethodVisitor26.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor26.visitParameterAnnotation((int) (byte) 1, "", true);
        aSMifierMethodVisitor26.visitInsn((int) (short) 1);
        printWriter22.print((java.lang.Object) aSMifierMethodVisitor26);
        printWriter22.print(false);
        printWriter22.print(100);
        java.lang.Object[] objArray55 = null;
        java.io.PrintWriter printWriter56 = printWriter22.printf("hi!", objArray55);
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter((java.io.Writer) printWriter22, false);
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(printWriter56);
    }

    @Test
    public void test07915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07915");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] { label12 };
        aSMifierMethodVisitor0.visitTableSwitchInsn(0, (int) (byte) 10, label11, labelArray13);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 10, "hi!");
        java.util.List list18 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 100);
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list18);
    }

    @Test
    public void test07916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07916");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter24.println(1L);
        printWriter24.println((-1L));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj41 = null;
        aSMifierMethodVisitor32.visitLdcInsn(obj41);
        aSMifierMethodVisitor32.visitInsn((int) ' ');
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor48.visitTryCatchBlock(label49, label50, label51, "");
        aSMifierMethodVisitor48.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj57 = null;
        aSMifierMethodVisitor48.visitLdcInsn(obj57);
        org.mockito.asm.Label label59 = null;
        int[] intArray66 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor67.visitTryCatchBlock(label68, label69, label70, "");
        aSMifierMethodVisitor67.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] { label79 };
        aSMifierMethodVisitor67.visitTableSwitchInsn(0, (int) (byte) 10, label78, labelArray80);
        aSMifierMethodVisitor48.visitLookupSwitchInsn(label59, intArray66, labelArray80);
        aSMifierMethodVisitor32.visitTableSwitchInsn((int) '4', (int) '#', label47, labelArray80);
        java.io.PrintWriter printWriter84 = printWriter24.format("hi!", (java.lang.Object[]) labelArray80);
        printWriter24.print((long) 'a');
        printWriter24.println((double) 0.0f);
        printWriter24.println((float) (byte) 100);
        java.lang.Class<?> wildcardClass91 = printWriter24.getClass();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test07917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07917");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "hi!", "", "");
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label13, label14, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '4', label19);
        aSMifierMethodVisitor0.visitMaxs(1, 100);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        java.util.Locale locale26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray31 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray33 = null;
        aSMifierMethodVisitor28.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray31, (int) (short) 1, objArray33);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray47 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor36, strArray45, 1.0f };
        java.io.PrintWriter printWriter48 = printWriter25.printf(locale26, "", (java.lang.Object[]) strArray45);
        printWriter48.println();
        printWriter48.print('a');
        printWriter48.println();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor54.visitTryCatchBlock(label55, label56, label57, "");
        aSMifierMethodVisitor54.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor54.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label66 = null;
        int[] intArray68 = new int[] { (byte) 0 };
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter("hi!");
        printWriter70.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor74 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        aSMifierMethodVisitor74.visitTryCatchBlock(label75, label76, label77, "");
        aSMifierMethodVisitor74.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label85 = null;
        org.mockito.asm.Label label86 = null;
        org.mockito.asm.Label[] labelArray87 = new org.mockito.asm.Label[] { label86 };
        aSMifierMethodVisitor74.visitTableSwitchInsn(0, (int) (byte) 10, label85, labelArray87);
        java.io.PrintWriter printWriter89 = printWriter70.printf("hi!", (java.lang.Object[]) labelArray87);
        aSMifierMethodVisitor54.visitLookupSwitchInsn(label66, intArray68, labelArray87);
        java.io.PrintWriter printWriter91 = printWriter48.printf("hi!", (java.lang.Object[]) labelArray87);
        printWriter48.println(true);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter48);
        org.mockito.asm.Label label95 = null;
        aSMifierMethodVisitor0.visitLabel(label95);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0]");
        org.junit.Assert.assertNotNull(labelArray87);
        org.junit.Assert.assertNotNull(printWriter89);
        org.junit.Assert.assertNotNull(printWriter91);
    }

    @Test
    public void test07918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07918");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] { label40 };
        aSMifierMethodVisitor28.visitTableSwitchInsn(0, (int) (byte) 10, label39, labelArray41);
        java.io.PrintWriter printWriter43 = printWriter24.printf("hi!", (java.lang.Object[]) labelArray41);
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray41, 1, (java.lang.Object[]) strArray45);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label48, label49, label50, "");
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor0.visitLineNumber(1, label54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 1, label60);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(annotationVisitor58);
    }

    @Test
    public void test07919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07919");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) ' ', label20);
        aSMifierMethodVisitor0.visitIincInsn(100, 10);
        aSMifierMethodVisitor0.visitMaxs(10, 10);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label31, label32, (int) (short) 1);
        aSMifierMethodVisitor0.visitVarInsn((int) '4', 1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 0);
        org.mockito.asm.Attribute attribute41 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test07920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07920");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] { label40 };
        aSMifierMethodVisitor28.visitTableSwitchInsn(0, (int) (byte) 10, label39, labelArray41);
        java.io.PrintWriter printWriter43 = printWriter24.printf("hi!", (java.lang.Object[]) labelArray41);
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray41, 1, (java.lang.Object[]) strArray45);
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMaxs((int) '#', (int) (byte) 100);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) -1, label52);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) '4');
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 1, (int) 'a');
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(annotationVisitor47);
    }

    @Test
    public void test07921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07921");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", false);
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter("hi!");
        printWriter20.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter24 = printWriter20.append((java.lang.CharSequence) "");
        printWriter24.close();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter24);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((int) (short) -1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test07922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07922");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor8.visitEnd();
        aSMifierClassVisitor8.visitEnd();
        aSMifierClassVisitor8.visitInnerClass("", "hi!", "hi!", 100);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor20.visitJumpInsn((int) (short) 1, label32);
        aSMifierMethodVisitor20.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label[] labelArray40 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor20.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label39, labelArray40);
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor20.visitAnnotation("", false);
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label45, label46, label47, "");
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor20.visitJumpInsn((int) 'a', label51);
        aSMifierMethodVisitor20.visitInsn(0);
        org.mockito.asm.FieldVisitor fieldVisitor55 = aSMifierClassVisitor8.visitField(0, "", "", "hi!", (java.lang.Object) aSMifierMethodVisitor20);
        aSMifierClassVisitor8.visitEnd();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(labelArray40);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor55);
    }

    @Test
    public void test07923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07923");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label27 = null;
        int[] intArray34 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        aSMifierMethodVisitor16.visitLookupSwitchInsn(label27, intArray34, labelArray48);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) '4', (int) '#', label15, labelArray48);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label55, label56, (int) (short) 0);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label63, label64, (int) ' ');
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = annotationVisitor67.visitAnnotation("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = annotationVisitor67.visitAnnotation("hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = annotationVisitor67.visitArray("hi!");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(annotationVisitor75);
    }

    @Test
    public void test07924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07924");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 100, (int) (byte) 10);
        aSMifierMethodVisitor0.visitInsn((int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj32 = null;
        aSMifierMethodVisitor23.visitLdcInsn(obj32);
        aSMifierMethodVisitor23.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj46 = null;
        aSMifierMethodVisitor37.visitLdcInsn(obj46);
        aSMifierMethodVisitor37.visitEnd();
        aSMifierMethodVisitor23.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor37);
        aSMifierMethodVisitor23.visitInsn((int) ' ');
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor23.visitJumpInsn((int) (short) 0, label53);
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor23.visitLabel(label55);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor23.visitParameterAnnotation((int) '4', "hi!", true);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) true);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor60);
    }

    @Test
    public void test07925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07925");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", true);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        printWriter49.print("hi!");
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter((java.io.Writer) printWriter49);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor53 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter52);
        aSMifierClassVisitor53.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierClassVisitor53.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierClassVisitor53.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) false);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 10, 10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 100);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, (int) '4');
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 1, (int) (short) 0);
        org.mockito.asm.Attribute attribute76 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor62);
    }

    @Test
    public void test07926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07926");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        char[] charArray56 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter49.println(charArray56);
        printWriter24.print(charArray56);
        printWriter24.print(true);
        java.io.PrintWriter printWriter62 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter64 = printWriter24.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor65 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter64);
        aSMifierClassVisitor65.visitInnerClass("", "", "hi!", (int) (short) 100);
        java.lang.String[] strArray76 = null;
        aSMifierClassVisitor65.visit(1, (int) (byte) 1, "", "hi!", "hi!", strArray76);
        aSMifierClassVisitor65.visitEnd();
        aSMifierClassVisitor65.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(printWriter64);
    }

    @Test
    public void test07927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07927");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 1, "", true);
        aSMifierMethodVisitor0.visitInsn((int) (short) 1);
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 0, label24);
        aSMifierMethodVisitor0.visitMaxs(10, (int) (byte) 0);
        java.util.List list29 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list29);
    }

    @Test
    public void test07928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07928");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitMaxs((int) '4', (int) (short) -1);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (short) 10);
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor0.visitLabel(label80);
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((-1), 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
    }

    @Test
    public void test07929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07929");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitMaxs(0, (-1));
        aSMifierMethodVisitor9.visitCode();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor9);
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label20, label21, label22, "");
        aSMifierMethodVisitor9.visitIincInsn(10, (int) '#');
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor9.visitLabel(label28);
        aSMifierMethodVisitor9.visitTypeInsn((int) ' ', "");
    }

    @Test
    public void test07930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07930");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter("hi!");
        printWriter5.println((-1.0d));
        printWriter1.print((java.lang.Object) (-1.0d));
        java.io.PrintWriter printWriter10 = printWriter1.append('a');
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        java.util.Locale locale13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray20 = null;
        aSMifierMethodVisitor15.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray18, (int) (short) 1, objArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor23, strArray32, 1.0f };
        java.io.PrintWriter printWriter35 = printWriter12.printf(locale13, "", (java.lang.Object[]) strArray32);
        char[] charArray42 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter35.println(charArray42);
        printWriter35.write(1);
        printWriter10.print((java.lang.Object) 1);
        printWriter10.print((double) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray53 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray55 = null;
        aSMifierMethodVisitor50.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray53, (int) (short) 1, objArray55);
        java.io.PrintWriter printWriter57 = printWriter10.format("", objArray55);
        printWriter10.print("hi!");
        java.io.PrintWriter printWriter61 = printWriter10.append(' ');
        boolean boolean62 = printWriter10.checkError();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test07931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07931");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 10, "hi!");
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitJumpInsn(0, label17);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label20);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLabel(label22);
        aSMifierMethodVisitor0.visitInsn((int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label29, label30, label31, "hi!");
    }

    @Test
    public void test07932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07932");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        aSMifierMethodVisitor0.visitCode();
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter("hi!");
        java.util.Locale locale12 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray17 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray19 = null;
        aSMifierMethodVisitor14.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray17, (int) (short) 1, objArray19);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray31 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray33 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor22, strArray31, 1.0f };
        java.io.PrintWriter printWriter34 = printWriter11.printf(locale12, "", (java.lang.Object[]) strArray31);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        java.util.Locale locale37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray44 = null;
        aSMifierMethodVisitor39.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray42, (int) (short) 1, objArray44);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label48, label49, label50, "");
        aSMifierMethodVisitor47.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray56 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray58 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor47, strArray56, 1.0f };
        java.io.PrintWriter printWriter59 = printWriter36.printf(locale37, "", (java.lang.Object[]) strArray56);
        char[] charArray66 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter59.println(charArray66);
        printWriter34.print(charArray66);
        printWriter34.print(true);
        java.io.PrintWriter printWriter72 = printWriter34.append((java.lang.CharSequence) "");
        java.util.Locale locale73 = null;
        org.mockito.asm.Attribute[] attributeArray75 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        java.io.PrintWriter printWriter76 = printWriter72.format(locale73, "", (java.lang.Object[]) attributeArray75);
        printWriter72.print(false);
        java.io.PrintWriter printWriter80 = new java.io.PrintWriter((java.io.Writer) printWriter72, true);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor81 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter72);
        printWriter72.println(false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter72);
        printWriter72.println((float) (-1));
        printWriter72.println(true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(attributeArray75);
        org.junit.Assert.assertNotNull(printWriter76);
    }

    @Test
    public void test07933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07933");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter24.println(true);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter24.flush();
        printWriter24.print((long) (byte) 1);
        printWriter24.println((float) '#');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test07934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07934");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor28.visitLocalVariable("hi!", "hi!", "hi!", label37, label38, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor28.visitAnnotation("", true);
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj54 = null;
        aSMifierMethodVisitor45.visitLdcInsn(obj54);
        org.mockito.asm.Label label56 = null;
        int[] intArray63 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] { label76 };
        aSMifierMethodVisitor64.visitTableSwitchInsn(0, (int) (byte) 10, label75, labelArray77);
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label56, intArray63, labelArray77);
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label44, intArray63, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter26.printf("hi!", (java.lang.Object[]) labelArray80);
        printWriter26.print((int) (short) -1);
        java.io.PrintWriter printWriter85 = new java.io.PrintWriter((java.io.Writer) printWriter26);
        printWriter26.print((float) (short) 10);
        printWriter26.write(100);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
    }

    @Test
    public void test07935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07935");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.close();
        printWriter1.print((int) '#');
        printWriter1.close();
        boolean boolean8 = printWriter1.checkError();
        java.io.PrintWriter printWriter10 = printWriter1.append('4');
        printWriter1.println(0.0d);
        printWriter1.print(false);
        printWriter1.println("");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(printWriter10);
    }

    @Test
    public void test07936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07936");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) (short) 1);
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLabel(label16);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitParameterAnnotation((int) ' ', "hi!", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test07937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07937");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.write((int) (byte) 0);
        printWriter24.write("hi!");
        printWriter24.write((int) (short) -1);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
    }

    @Test
    public void test07938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07938");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "hi!", "hi!", (int) (byte) 1);
        aSMifierClassVisitor28.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor28.visitAnnotation("", true);
        org.mockito.asm.FieldVisitor fieldVisitor43 = aSMifierClassVisitor28.visitField((int) (byte) 10, "", "", "", (java.lang.Object) 10.0d);
        fieldVisitor43.visitEnd();
        fieldVisitor43.visitEnd();
        fieldVisitor43.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor43);
    }

    @Test
    public void test07939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07939");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        java.io.PrintWriter printWriter36 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter("hi!");
        java.util.Locale locale39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = null;
        aSMifierMethodVisitor41.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray44, (int) (short) 1, objArray46);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray58 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray60 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor49, strArray58, 1.0f };
        java.io.PrintWriter printWriter61 = printWriter38.printf(locale39, "", (java.lang.Object[]) strArray58);
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter((java.io.Writer) printWriter61, true);
        printWriter63.println('a');
        printWriter36.println((java.lang.Object) 'a');
        printWriter36.println(true);
        printWriter36.print((int) '4');
        java.io.PrintWriter printWriter72 = printWriter36.append((java.lang.CharSequence) "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(printWriter72);
    }

    @Test
    public void test07940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07940");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.print((int) ' ');
        java.lang.Object obj29 = null;
        printWriter24.print(obj29);
        printWriter24.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor33 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierClassVisitor33.visitAnnotation("", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor41.visitJumpInsn(1, label51);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor41.visitParameterAnnotation((int) (byte) 0, "hi!", false);
        aSMifierMethodVisitor41.visitInsn((int) (byte) 100);
        org.mockito.asm.FieldVisitor fieldVisitor59 = aSMifierClassVisitor33.visitField((int) (short) 0, "hi!", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor41);
        org.mockito.asm.Attribute attribute60 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor59.visitAttribute(attribute60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor59);
    }

    @Test
    public void test07941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07941");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "hi!", "", "");
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label13, label14, (int) '4');
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 100, label18);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor21.visitTryCatchBlock(label22, label23, label24, "");
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor21.visitLocalVariable("hi!", "hi!", "hi!", label30, label31, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor21.visitAnnotationDefault();
        aSMifierMethodVisitor21.visitMultiANewArrayInsn("hi!", (int) ' ');
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor21.visitAnnotationDefault();
        aSMifierMethodVisitor21.visitCode();
        aSMifierMethodVisitor21.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor21);
        aSMifierMethodVisitor21.visitFieldInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor21.visitIincInsn((int) '#', (int) (byte) 1);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor38);
    }

    @Test
    public void test07942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07942");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor17.visitTryCatchBlock(label18, label19, label20, "");
        aSMifierMethodVisitor17.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj26 = null;
        aSMifierMethodVisitor17.visitLdcInsn(obj26);
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor17.visitJumpInsn((int) (short) 1, label29);
        aSMifierMethodVisitor17.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label36, labelArray37);
        java.io.PrintWriter printWriter39 = printWriter12.printf("", (java.lang.Object[]) labelArray37);
        printWriter12.write((int) '4');
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter((java.io.Writer) printWriter12);
        printWriter12.print((double) (short) 100);
        printWriter12.println('#');
        printWriter12.print((float) 100L);
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(printWriter39);
    }

    @Test
    public void test07943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07943");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "", "");
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitFieldInsn((int) '#', "hi!", "", "");
    }

    @Test
    public void test07944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07944");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label7 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label7);
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber(100, label10);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIntInsn((int) 'a', (-1));
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLabel(label16);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn((-1), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07945");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.print('a');
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter28.flush();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter((java.io.Writer) printWriter28, true);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor33 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor43.visitTryCatchBlock(label44, label45, label46, "");
        aSMifierMethodVisitor43.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] { label55 };
        aSMifierMethodVisitor43.visitTableSwitchInsn(0, (int) (byte) 10, label54, labelArray56);
        java.io.PrintWriter printWriter58 = printWriter39.printf("hi!", (java.lang.Object[]) labelArray56);
        java.io.PrintWriter printWriter60 = printWriter39.append((java.lang.CharSequence) "");
        printWriter60.println(1);
        java.io.PrintWriter printWriter64 = printWriter60.append('a');
        org.mockito.asm.FieldVisitor fieldVisitor65 = aSMifierClassVisitor33.visitField((int) (byte) 0, "", "hi!", "hi!", (java.lang.Object) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = fieldVisitor65.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertNotNull(fieldVisitor65);
        org.junit.Assert.assertNotNull(annotationVisitor68);
    }

    @Test
    public void test07946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07946");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter7.write("hi!");
        printWriter7.println(' ');
        java.util.Locale locale12 = null;
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        java.util.Locale locale16 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = null;
        aSMifierMethodVisitor18.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray21, (int) (short) 1, objArray23);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray37 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor26, strArray35, 1.0f };
        java.io.PrintWriter printWriter38 = printWriter15.printf(locale16, "", (java.lang.Object[]) strArray35);
        java.io.PrintWriter printWriter39 = printWriter7.printf(locale12, "", (java.lang.Object[]) strArray35);
        printWriter39.println(false);
        printWriter39.write("", (int) (short) 100, (int) (short) 0);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(printWriter39);
    }

    @Test
    public void test07947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07947");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 100, (int) (byte) 10);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitInsn((int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMaxs(100, (int) 'a');
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 10);
        aSMifierMethodVisitor0.visitMaxs((int) 'a', (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs((int) ' ', (int) (byte) -1);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test07948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07948");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitSource("", "");
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.print(false);
        java.io.PrintWriter printWriter47 = printWriter43.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter((java.io.Writer) printWriter43);
        printWriter48.println();
        org.mockito.asm.FieldVisitor fieldVisitor50 = aSMifierClassVisitor28.visitField((int) ' ', "", "", "hi!", (java.lang.Object) printWriter48);
        aSMifierClassVisitor28.visitInnerClass("hi!", "hi!", "", (int) (byte) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor60.visitTryCatchBlock(label61, label62, label63, "");
        aSMifierMethodVisitor60.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj69 = null;
        aSMifierMethodVisitor60.visitLdcInsn(obj69);
        aSMifierMethodVisitor60.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor74 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        aSMifierMethodVisitor74.visitTryCatchBlock(label75, label76, label77, "");
        aSMifierMethodVisitor74.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj83 = null;
        aSMifierMethodVisitor74.visitLdcInsn(obj83);
        aSMifierMethodVisitor74.visitEnd();
        aSMifierMethodVisitor60.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor74);
        aSMifierMethodVisitor60.visitInsn((int) ' ');
        aSMifierMethodVisitor60.visitTypeInsn((int) (short) 100, "hi!");
        aSMifierMethodVisitor60.visitInsn((int) (byte) 0);
        org.mockito.asm.FieldVisitor fieldVisitor94 = aSMifierClassVisitor28.visitField((int) (short) 1, "hi!", "", "hi!", (java.lang.Object) aSMifierMethodVisitor60);
        org.mockito.asm.AnnotationVisitor annotationVisitor97 = fieldVisitor94.visitAnnotation("", false);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor94);
        org.junit.Assert.assertNotNull(annotationVisitor97);
    }

    @Test
    public void test07949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07949");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label10);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", 0);
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label20, label21, (int) (short) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor24.visitJumpInsn((int) (short) 1, label31);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((-1), "", true);
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter("hi!");
        java.util.Locale locale39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = null;
        aSMifierMethodVisitor41.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray44, (int) (short) 1, objArray46);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray58 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray60 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor49, strArray58, 1.0f };
        java.io.PrintWriter printWriter61 = printWriter38.printf(locale39, "", (java.lang.Object[]) strArray58);
        boolean boolean62 = printWriter61.checkError();
        printWriter61.println(false);
        java.io.PrintWriter printWriter66 = printWriter61.append('4');
        printWriter61.print(false);
        aSMifierMethodVisitor24.visitLdcInsn((java.lang.Object) printWriter61);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter61);
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label74, label75, 1);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(printWriter66);
    }

    @Test
    public void test07950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07950");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.print((int) ' ');
        java.lang.Object obj29 = null;
        printWriter24.print(obj29);
        printWriter24.println(false);
        printWriter24.print('#');
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter36.print(false);
        printWriter36.print("");
        printWriter36.flush();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test07951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07951");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((int) (byte) -1);
        printWriter1.print((double) (byte) 1);
        printWriter1.close();
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor12 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.println(true);
        java.util.Locale locale15 = null;
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        printWriter18.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter22 = printWriter18.append((java.lang.CharSequence) "");
        printWriter18.print((int) (byte) -1);
        printWriter18.print((double) (byte) 1);
        printWriter18.close();
        java.util.Locale locale28 = null;
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print(false);
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj46 = null;
        aSMifierMethodVisitor37.visitLdcInsn(obj46);
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor37.visitJumpInsn((int) (short) 1, label49);
        aSMifierMethodVisitor37.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor37.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierMethodVisitor37.visitAnnotationDefault();
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter("hi!");
        printWriter61.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        aSMifierMethodVisitor65.visitTryCatchBlock(label66, label67, label68, "");
        aSMifierMethodVisitor65.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label[] labelArray78 = new org.mockito.asm.Label[] { label77 };
        aSMifierMethodVisitor65.visitTableSwitchInsn(0, (int) (byte) 10, label76, labelArray78);
        java.io.PrintWriter printWriter80 = printWriter61.printf("hi!", (java.lang.Object[]) labelArray78);
        java.lang.String[] strArray82 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor37.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray78, 1, (java.lang.Object[]) strArray82);
        java.io.PrintWriter printWriter84 = printWriter31.format("hi!", (java.lang.Object[]) strArray82);
        java.util.Locale locale85 = null;
        java.lang.String[] strArray87 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter88 = printWriter31.format(locale85, "hi!", (java.lang.Object[]) strArray87);
        java.io.PrintWriter printWriter89 = printWriter18.printf(locale28, "", (java.lang.Object[]) strArray87);
        java.io.PrintWriter printWriter90 = printWriter1.format(locale15, "hi!", (java.lang.Object[]) strArray87);
        printWriter1.print("hi!");
        printWriter1.flush();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(annotationVisitor57);
        org.junit.Assert.assertNotNull(labelArray78);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter89);
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test07952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07952");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        printWriter32.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray36 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter37 = printWriter32.format("", (java.lang.Object[]) strArray36);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter((java.io.Writer) printWriter32, true);
        org.mockito.asm.FieldVisitor fieldVisitor40 = aSMifierClassVisitor15.visitField((int) '#', "", "", "hi!", (java.lang.Object) printWriter39);
        printWriter39.print((double) 0.0f);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter((java.io.Writer) printWriter39);
        printWriter43.print((double) 10.0f);
        printWriter43.println(true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(fieldVisitor40);
    }

    @Test
    public void test07953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07953");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = null;
        aSMifierMethodVisitor36.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray39, (int) (short) 1, objArray41);
        org.mockito.asm.MethodVisitor methodVisitor43 = aSMifierClassVisitor15.visitMethod((int) (short) 0, "", "", "hi!", strArray39);
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter52 = printWriter50.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor53 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter52);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierClassVisitor53.visitAnnotation("hi!", true);
        java.lang.String[] strArray62 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor53.visit(1, (int) (short) 10, "hi!", "", "", strArray62);
        aSMifierClassVisitor15.visit((-1), (int) (byte) 10, "", "", "", strArray62);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "hi!", (int) (short) -1);
        aSMifierClassVisitor15.visitInnerClass("hi!", "", "hi!", (int) '#');
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "hi!", 10);
        java.util.List list80 = aSMifierClassVisitor15.getText();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodVisitor43);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(list80);
    }

    @Test
    public void test07954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07954");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor7.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor7.visitAnnotationDefault();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        java.io.PrintWriter printWriter50 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray48);
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor7.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray48, 1, (java.lang.Object[]) strArray52);
        java.io.PrintWriter printWriter54 = printWriter1.format("hi!", (java.lang.Object[]) strArray52);
        java.util.Locale locale55 = null;
        java.lang.String[] strArray57 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter58 = printWriter1.format(locale55, "hi!", (java.lang.Object[]) strArray57);
        boolean boolean59 = printWriter1.checkError();
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter62 = printWriter60.append((java.lang.CharSequence) "hi!");
        printWriter62.write("hi!");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(printWriter62);
    }

    @Test
    public void test07955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07955");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, (int) (short) 1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitLabel(label21);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor29);
    }

    @Test
    public void test07956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07956");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.println(false);
        printWriter24.write("hi!");
        printWriter24.print('a');
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter36 = printWriter24.append((java.lang.CharSequence) "", 1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test07957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07957");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label22);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.util.List list25 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "hi!", true);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor30);
    }

    @Test
    public void test07958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07958");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, (-1));
        aSMifierMethodVisitor0.visitInsn((int) '#');
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, 0);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 1, label21);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label23, label24, label25, "hi!");
    }

    @Test
    public void test07959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07959");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        aSMifierMethodVisitor0.visitCode();
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter("hi!");
        java.util.Locale locale12 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray17 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray19 = null;
        aSMifierMethodVisitor14.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray17, (int) (short) 1, objArray19);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray31 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray33 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor22, strArray31, 1.0f };
        java.io.PrintWriter printWriter34 = printWriter11.printf(locale12, "", (java.lang.Object[]) strArray31);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        java.util.Locale locale37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray44 = null;
        aSMifierMethodVisitor39.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray42, (int) (short) 1, objArray44);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label48, label49, label50, "");
        aSMifierMethodVisitor47.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray56 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray58 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor47, strArray56, 1.0f };
        java.io.PrintWriter printWriter59 = printWriter36.printf(locale37, "", (java.lang.Object[]) strArray56);
        char[] charArray66 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter59.println(charArray66);
        printWriter34.print(charArray66);
        printWriter34.print(true);
        java.io.PrintWriter printWriter72 = printWriter34.append((java.lang.CharSequence) "");
        java.util.Locale locale73 = null;
        org.mockito.asm.Attribute[] attributeArray75 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        java.io.PrintWriter printWriter76 = printWriter72.format(locale73, "", (java.lang.Object[]) attributeArray75);
        printWriter72.print(false);
        java.io.PrintWriter printWriter80 = new java.io.PrintWriter((java.io.Writer) printWriter72, true);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor81 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter72);
        printWriter72.println(false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter72);
        printWriter72.println((float) (-1));
        printWriter72.write((int) (byte) 0);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(attributeArray75);
        org.junit.Assert.assertNotNull(printWriter76);
    }

    @Test
    public void test07960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07960");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list14 = aSMifierMethodVisitor0.text;
        java.util.List list15 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitIincInsn(1, 10);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
    }

    @Test
    public void test07961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07961");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        java.util.List list6 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitFieldInsn((int) '#', "", "", "hi!");
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label14, label15, label16, "");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((int) (short) -1, "hi!", "", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list6);
    }

    @Test
    public void test07962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07962");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, 0);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 10, "hi!");
        aSMifierMethodVisitor0.visitMaxs(0, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationVisitor77);
    }

    @Test
    public void test07963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07963");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        java.util.List list33 = aSMifierClassVisitor28.getText();
        aSMifierClassVisitor28.visitSource("hi!", "");
        aSMifierClassVisitor28.visitSource("hi!", "");
        aSMifierClassVisitor28.visitSource("hi!", "");
        aSMifierClassVisitor28.visitInnerClass("hi!", "hi!", "hi!", (-1));
        aSMifierClassVisitor28.visitInnerClass("hi!", "hi!", "hi!", 0);
        aSMifierClassVisitor28.visitSource("hi!", "");
        org.mockito.asm.Attribute attribute56 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor28.visitAttribute(attribute56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list33);
    }

    @Test
    public void test07964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07964");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter3);
        java.io.PrintWriter printWriter6 = printWriter3.append((java.lang.CharSequence) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            printWriter3.write("", (int) (byte) 100, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 200");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
    }

    @Test
    public void test07965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07965");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        printWriter34.write("hi!");
        printWriter34.close();
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        printWriter41.write((-1));
        printWriter41.flush();
        java.util.Locale locale45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray50 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray52 = null;
        aSMifierMethodVisitor47.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray50, (int) (short) 1, objArray52);
        java.io.PrintWriter printWriter54 = printWriter41.printf(locale45, "", (java.lang.Object[]) strArray50);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter41);
        aSMifierClassVisitor55.visitEnd();
        aSMifierClassVisitor55.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        org.mockito.asm.FieldVisitor fieldVisitor70 = aSMifierClassVisitor55.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label67);
        printWriter34.println((java.lang.Object) aSMifierClassVisitor55);
        aSMifierClassVisitor55.visitSource("", "");
        java.io.PrintWriter printWriter80 = new java.io.PrintWriter("hi!");
        printWriter80.print((java.lang.Object) (short) -1);
        printWriter80.println((float) (short) 0);
        java.io.PrintWriter printWriter86 = printWriter80.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter88 = printWriter80.append('#');
        org.mockito.asm.FieldVisitor fieldVisitor89 = aSMifierClassVisitor55.visitField((int) (short) 1, "", "hi!", "hi!", (java.lang.Object) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = fieldVisitor89.visitAnnotation("", true);
        fieldVisitor89.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(fieldVisitor70);
        org.junit.Assert.assertNotNull(printWriter86);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(fieldVisitor89);
        org.junit.Assert.assertNotNull(annotationVisitor92);
    }

    @Test
    public void test07966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07966");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) -1, "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label21, label22, label23, "hi!");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((int) (byte) -1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test07967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07967");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitLabel(label4);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) 10);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 1, (int) '4');
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) '#');
    }

    @Test
    public void test07968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07968");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor4.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierClassVisitor4.visitAnnotation("", false);
        org.mockito.asm.Attribute attribute11 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor4.visitAttribute(attribute11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor10);
    }

    @Test
    public void test07969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07969");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter16 = printWriter12.append((java.lang.CharSequence) "");
        printWriter8.println((java.lang.Object) printWriter16);
        printWriter16.println((double) 10.0f);
        printWriter16.print(false);
        printWriter16.println((float) (short) 0);
        printWriter16.print((int) (short) -1);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter16);
    }

    @Test
    public void test07970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07970");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        printWriter28.print(false);
        printWriter28.println(false);
        java.io.PrintWriter printWriter34 = printWriter28.append('#');
        printWriter34.print((long) 0);
        printWriter34.println((int) (byte) -1);
        printWriter34.print((long) (byte) 100);
        printWriter26.print((java.lang.Object) printWriter34);
        java.io.PrintWriter printWriter43 = printWriter34.append('4');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(printWriter43);
    }

    @Test
    public void test07971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07971");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierClassVisitor28.visitAnnotation("", true);
        annotationVisitor40.visitEnum("", "", "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test07972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07972");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor7.visitSource("", "hi!");
        aSMifierClassVisitor7.visitEnd();
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("hi!");
        printWriter17.print(false);
        printWriter17.println(false);
        boolean boolean22 = printWriter17.checkError();
        printWriter17.print((float) (byte) 10);
        printWriter17.print(0.0f);
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter17);
        printWriter27.print((double) 0.0f);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj40 = null;
        aSMifierMethodVisitor31.visitLdcInsn(obj40);
        aSMifierMethodVisitor31.visitEnd();
        aSMifierMethodVisitor31.visitMaxs((int) (byte) 0, (int) (short) 1);
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj58 = null;
        aSMifierMethodVisitor49.visitLdcInsn(obj58);
        org.mockito.asm.Label label60 = null;
        int[] intArray67 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor68.visitTryCatchBlock(label69, label70, label71, "");
        aSMifierMethodVisitor68.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label[] labelArray81 = new org.mockito.asm.Label[] { label80 };
        aSMifierMethodVisitor68.visitTableSwitchInsn(0, (int) (byte) 10, label79, labelArray81);
        aSMifierMethodVisitor49.visitLookupSwitchInsn(label60, intArray67, labelArray81);
        aSMifierMethodVisitor31.visitTableSwitchInsn((int) '4', (int) (short) 10, label48, labelArray81);
        java.io.PrintWriter printWriter85 = printWriter27.format("", (java.lang.Object[]) labelArray81);
        org.mockito.asm.FieldVisitor fieldVisitor86 = aSMifierClassVisitor7.visitField((int) (byte) 100, "hi!", "hi!", "hi!", (java.lang.Object) "");
        aSMifierClassVisitor7.visitSource("hi!", "hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray81);
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(fieldVisitor86);
    }

    @Test
    public void test07973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07973");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((long) '#');
        printWriter1.write("");
    }

    @Test
    public void test07974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07974");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", false);
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter("hi!");
        printWriter20.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter24 = printWriter20.append((java.lang.CharSequence) "");
        printWriter24.close();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter24);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "hi!", "");
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "hi!", label36, label37, (-1));
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test07975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07975");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray5 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter6 = printWriter1.format("", (java.lang.Object[]) strArray5);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("hi!");
        printWriter9.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter13 = printWriter9.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        java.util.Locale locale16 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = null;
        aSMifierMethodVisitor18.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray21, (int) (short) 1, objArray23);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray37 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor26, strArray35, 1.0f };
        java.io.PrintWriter printWriter38 = printWriter15.printf(locale16, "", (java.lang.Object[]) strArray35);
        java.io.PrintWriter printWriter40 = printWriter38.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter42 = printWriter38.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("hi!");
        java.util.Locale locale45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray50 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray52 = null;
        aSMifierMethodVisitor47.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray50, (int) (short) 1, objArray52);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor55.visitTryCatchBlock(label56, label57, label58, "");
        aSMifierMethodVisitor55.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray64 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray66 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor55, strArray64, 1.0f };
        java.io.PrintWriter printWriter67 = printWriter44.printf(locale45, "", (java.lang.Object[]) strArray64);
        char[] charArray74 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter67.println(charArray74);
        printWriter42.print(charArray74);
        printWriter9.print(charArray74);
        printWriter6.write(charArray74);
        printWriter6.close();
        boolean boolean80 = printWriter6.checkError();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test07976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07976");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs(1, 10);
        aSMifierMethodVisitor0.visitTypeInsn(100, "");
        aSMifierMethodVisitor0.visitInsn((int) '#');
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label label74 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label73, label74, (int) '4');
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, (int) '#');
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
    }

    @Test
    public void test07977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07977");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 1, label18);
        aSMifierMethodVisitor0.visitMethodInsn((int) '#', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitIntInsn(0, 100);
        org.mockito.asm.Attribute attribute28 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07978");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        printWriter7.print(0.0d);
        printWriter7.print((float) (-1L));
        printWriter7.print("hi!");
        printWriter7.println((float) (short) 0);
        java.io.PrintWriter printWriter17 = printWriter7.append('#');
        printWriter7.println();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter17);
    }

    @Test
    public void test07979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07979");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print("");
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter9);
        printWriter9.write("hi!");
        printWriter9.println("");
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter((java.io.Writer) printWriter9);
        printWriter9.println(0.0f);
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test07980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07980");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label28, label29, (int) (short) 1);
        aSMifierMethodVisitor0.visitIntInsn((int) '#', (int) 'a');
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 100, (int) (byte) 0);
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 100 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj50 = null;
        aSMifierMethodVisitor41.visitLdcInsn(obj50);
        aSMifierMethodVisitor41.visitInsn((int) ' ');
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor57.visitTryCatchBlock(label58, label59, label60, "");
        aSMifierMethodVisitor57.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj66 = null;
        aSMifierMethodVisitor57.visitLdcInsn(obj66);
        org.mockito.asm.Label label68 = null;
        int[] intArray75 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor76 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        aSMifierMethodVisitor76.visitTryCatchBlock(label77, label78, label79, "");
        aSMifierMethodVisitor76.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label87 = null;
        org.mockito.asm.Label label88 = null;
        org.mockito.asm.Label[] labelArray89 = new org.mockito.asm.Label[] { label88 };
        aSMifierMethodVisitor76.visitTableSwitchInsn(0, (int) (byte) 10, label87, labelArray89);
        aSMifierMethodVisitor57.visitLookupSwitchInsn(label68, intArray75, labelArray89);
        aSMifierMethodVisitor41.visitTableSwitchInsn((int) '4', (int) '#', label56, labelArray89);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label38, intArray40, labelArray89);
        aSMifierMethodVisitor0.visitInsn((int) (short) 0);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray89);
    }

    @Test
    public void test07981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07981");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 0, (int) (short) 1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 1);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) (short) 1);
    }

    @Test
    public void test07982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07982");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        java.util.List list26 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 0);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs(1, 0);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, 1);
        aSMifierMethodVisitor0.visitIincInsn((int) '4', 10);
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor0.visitLabel(label40);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list26);
    }

    @Test
    public void test07983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07983");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label[] labelArray27 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor7.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label26, labelArray27);
        java.io.PrintWriter printWriter29 = printWriter5.printf("", (java.lang.Object[]) labelArray27);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter29, true);
        java.lang.Object obj32 = null;
        printWriter29.println(obj32);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter29);
        printWriter34.println();
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter("hi!");
        printWriter37.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter41 = printWriter37.append((java.lang.CharSequence) "");
        printWriter37.print((double) 1);
        java.io.PrintWriter printWriter45 = printWriter37.append((java.lang.CharSequence) "hi!");
        printWriter37.print(false);
        java.lang.CharSequence charSequence48 = null;
        java.io.PrintWriter printWriter49 = printWriter37.append(charSequence48);
        printWriter37.print((double) (-1));
        printWriter37.flush();
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter("hi!");
        printWriter54.print((java.lang.Object) (short) -1);
        printWriter54.flush();
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter((java.io.Writer) printWriter54);
        printWriter58.write("");
        java.io.PrintWriter printWriter62 = new java.io.PrintWriter("hi!");
        java.util.Locale locale63 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray68 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray70 = null;
        aSMifierMethodVisitor65.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray68, (int) (short) 1, objArray70);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor73 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor73.visitTryCatchBlock(label74, label75, label76, "");
        aSMifierMethodVisitor73.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray82 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray84 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor73, strArray82, 1.0f };
        java.io.PrintWriter printWriter85 = printWriter62.printf(locale63, "", (java.lang.Object[]) strArray82);
        char[] charArray92 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter85.println(charArray92);
        printWriter58.print(charArray92);
        printWriter37.print(charArray92);
        printWriter34.print(charArray92);
        printWriter34.close();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(labelArray27);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertNotNull(printWriter45);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test07984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07984");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append(' ');
        printWriter28.print(1);
        printWriter28.println(false);
        printWriter28.print((double) (-1L));
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor35 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        printWriter28.println();
        printWriter28.write("hi!", 0, (int) (short) -1);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
    }

    @Test
    public void test07985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07985");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, (int) (short) 10);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 0, "hi!", "", "");
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label72, label73, (-1));
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
    }

    @Test
    public void test07986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07986");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 10);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label78);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, (int) (short) 100);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "", "hi!", "hi!");
        java.util.List list92 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 10, "hi!", "", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(list92);
    }

    @Test
    public void test07987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07987");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter16 = printWriter12.append((java.lang.CharSequence) "");
        printWriter8.println((java.lang.Object) printWriter16);
        printWriter16.println((double) 10.0f);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        aSMifierMethodVisitor20.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list33 = aSMifierMethodVisitor20.getText();
        aSMifierMethodVisitor20.visitCode();
        printWriter16.println((java.lang.Object) aSMifierMethodVisitor20);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor20.visitJumpInsn(100, label37);
        org.mockito.asm.Attribute attribute39 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor20.visitAttribute(attribute39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(list33);
    }

    @Test
    public void test07988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07988");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '#', label21);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLabel(label30);
        java.util.List list32 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        aSMifierMethodVisitor0.visitVarInsn((int) '4', 0);
        aSMifierMethodVisitor0.visitTypeInsn(10, "");
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(list32);
    }

    @Test
    public void test07989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07989");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 1, "hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 10, "", true);
        aSMifierMethodVisitor0.visitInsn(0);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor25);
    }

    @Test
    public void test07990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07990");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        java.util.Locale locale13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray20 = null;
        aSMifierMethodVisitor15.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray18, (int) (short) 1, objArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor23, strArray32, 1.0f };
        java.io.PrintWriter printWriter35 = printWriter12.printf(locale13, "", (java.lang.Object[]) strArray32);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, true);
        printWriter8.println((java.lang.Object) printWriter37);
        java.io.PrintWriter printWriter40 = printWriter8.append(' ');
        java.io.PrintWriter printWriter42 = printWriter40.append('#');
        boolean boolean43 = printWriter40.checkError();
        printWriter40.println('#');
        printWriter40.print((float) (byte) 0);
        printWriter40.println((int) 'a');
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test07991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07991");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label10);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor0.visitLabel(label13);
        java.lang.Class<?> wildcardClass15 = aSMifierMethodVisitor0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test07992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07992");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter("hi!");
        printWriter5.println((-1.0d));
        printWriter1.print((java.lang.Object) (-1.0d));
        printWriter1.print(100);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor11 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print("");
        org.junit.Assert.assertNotNull(printWriter3);
    }

    @Test
    public void test07993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07993");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj16);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 10);
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label21, label22, label23, "");
    }

    @Test
    public void test07994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07994");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        aSMifierMethodVisitor0.visitInsn((int) (short) 1);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "", "hi!");
    }

    @Test
    public void test07995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07995");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitFieldInsn(100, "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 0, "", false);
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 10, (int) (byte) 100);
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitLabel(label29);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor25);
    }

    @Test
    public void test07996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07996");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        aSMifierMethodVisitor0.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 0, label21);
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 1, (int) (byte) 0);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 0, "hi!", "hi!", "");
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label34, label35, (int) ' ');
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = annotationVisitor38.visitArray("hi!");
        annotationVisitor38.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test07997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07997");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor0.visitMaxs(100, (int) '4');
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 0);
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label20, label21, label22, "");
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj25);
    }

    @Test
    public void test07998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07998");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor24.visitLocalVariable("hi!", "hi!", "hi!", label33, label34, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor24.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor24.visitAnnotationDefault();
        annotationVisitor40.visitEnum("", "hi!", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor45 = aSMifierClassVisitor15.visitField((int) '#', "", "", "", (java.lang.Object) "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = fieldVisitor45.visitAnnotation("", false);
        org.mockito.asm.Attribute attribute49 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor45.visitAttribute(attribute49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(annotationVisitor48);
    }

    @Test
    public void test07999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07999");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter1.write((int) (short) 1);
        printWriter1.write(0);
        java.io.PrintWriter printWriter15 = printWriter1.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("hi!");
        java.util.Locale locale18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray23 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray25 = null;
        aSMifierMethodVisitor20.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray23, (int) (short) 1, objArray25);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray37 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray39 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor28, strArray37, 1.0f };
        java.io.PrintWriter printWriter40 = printWriter17.printf(locale18, "", (java.lang.Object[]) strArray37);
        char[] charArray47 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter40.println(charArray47);
        char[] charArray49 = new char[] {};
        printWriter40.print(charArray49);
        printWriter1.print(charArray49);
        java.io.PrintWriter printWriter53 = printWriter1.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter56 = printWriter54.append('#');
        java.io.PrintWriter printWriter58 = printWriter54.append('a');
        printWriter54.print(true);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[]");
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(printWriter58);
    }

    @Test
    public void test08000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test08000");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("hi!");
        printWriter2.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter6 = printWriter2.append((java.lang.CharSequence) "");
        printWriter2.print((int) (byte) -1);
        printWriter2.write("", (int) (byte) 1, (int) (short) 0);
        printWriter2.print((double) (byte) -1);
        aSMifierMethodVisitor0.print(printWriter2);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "");
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitLabel(label19);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLineNumber(1, label22);
        aSMifierMethodVisitor0.visitIntInsn((int) 'a', (int) (short) 1);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        printWriter28.write((-1));
        printWriter28.flush();
        java.util.Locale locale32 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray37 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray39 = null;
        aSMifierMethodVisitor34.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray37, (int) (short) 1, objArray39);
        java.io.PrintWriter printWriter41 = printWriter28.printf(locale32, "", (java.lang.Object[]) strArray37);
        printWriter28.print('4');
        printWriter28.println(true);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter28);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(printWriter41);
    }
}

