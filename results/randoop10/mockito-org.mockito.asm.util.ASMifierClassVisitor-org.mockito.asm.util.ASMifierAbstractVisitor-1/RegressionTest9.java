import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest9 {

    public static boolean debug = false;

    @Test
    public void test04501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04501");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotation("", true);
        annotationVisitor16.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = annotationVisitor16.visitAnnotation("hi!", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor22.visitLocalVariable("hi!", "hi!", "hi!", label31, label32, (int) (byte) 10);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        printWriter36.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray40 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter41 = printWriter36.format("", (java.lang.Object[]) strArray40);
        aSMifierMethodVisitor22.visitLdcInsn((java.lang.Object) strArray40);
        aSMifierMethodVisitor22.visitIntInsn(1, (int) (byte) 1);
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor22.visitLineNumber(0, label47);
        aSMifierMethodVisitor22.visitMaxs((int) '4', (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor22.visitAnnotationDefault();
        annotationVisitor20.visit("", (java.lang.Object) aSMifierMethodVisitor22);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor54.visitTryCatchBlock(label55, label56, label57, "");
        aSMifierMethodVisitor54.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj63 = null;
        aSMifierMethodVisitor54.visitLdcInsn(obj63);
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor54.visitJumpInsn((int) (short) 1, label66);
        aSMifierMethodVisitor54.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor54.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = aSMifierMethodVisitor54.visitAnnotationDefault();
        aSMifierMethodVisitor54.visitVarInsn((int) (byte) 0, (int) (short) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierMethodVisitor54.visitAnnotationDefault();
        aSMifierMethodVisitor22.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor54);
        aSMifierMethodVisitor22.visitVarInsn((int) '#', 100);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor74);
        org.junit.Assert.assertNotNull(annotationVisitor78);
    }

    @Test
    public void test04502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04502");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.print((int) '4');
        printWriter8.println("hi!");
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test04503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04503");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter1.println();
        printWriter1.println("hi!");
        printWriter1.println(true);
        org.junit.Assert.assertNotNull(printWriter3);
    }

    @Test
    public void test04504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04504");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "", "hi!", (int) 'a');
        java.util.List list34 = aSMifierClassVisitor28.getText();
        aSMifierClassVisitor28.visitInnerClass("", "hi!", "hi!", (int) (byte) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj53 = null;
        aSMifierMethodVisitor44.visitLdcInsn(obj53);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter("hi!");
        printWriter56.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor44.print(printWriter56);
        aSMifierMethodVisitor44.visitFieldInsn(0, "hi!", "", "");
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor44.visitJumpInsn(100, label66);
        org.mockito.asm.FieldVisitor fieldVisitor68 = aSMifierClassVisitor28.visitField((int) (short) 1, "hi!", "", "", (java.lang.Object) label66);
        fieldVisitor68.visitEnd();
        org.mockito.asm.Attribute attribute70 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor68.visitAttribute(attribute70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(fieldVisitor68);
    }

    @Test
    public void test04505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04505");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        java.util.List list33 = aSMifierClassVisitor28.getText();
        aSMifierClassVisitor28.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor28.visitAnnotation("", false);
        annotationVisitor37.visitEnum("", "", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test04506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04506");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        printWriter27.print((java.lang.Object) (short) -1);
        printWriter27.flush();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter27);
        printWriter31.write("");
        org.mockito.asm.FieldVisitor fieldVisitor34 = aSMifierClassVisitor15.visitField(0, "", "", "hi!", (java.lang.Object) printWriter31);
        fieldVisitor34.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = fieldVisitor34.visitAnnotation("", true);
        fieldVisitor34.visitEnd();
        fieldVisitor34.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor38);
    }

    @Test
    public void test04507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04507");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitLabel(label4);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        aSMifierMethodVisitor0.visitInsn((int) (byte) 10);
        aSMifierMethodVisitor0.visitInsn((int) (short) 1);
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.write((-1));
        printWriter16.flush();
        java.util.Locale locale20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray27 = null;
        aSMifierMethodVisitor22.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray25, (int) (short) 1, objArray27);
        java.io.PrintWriter printWriter29 = printWriter16.printf(locale20, "", (java.lang.Object[]) strArray25);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter16);
        aSMifierClassVisitor30.visitEnd();
        aSMifierClassVisitor30.visitSource("", "hi!");
        java.lang.String[] strArray40 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor30.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray40);
        aSMifierClassVisitor30.visitInnerClass("", "hi!", "", (int) (short) -1);
        java.lang.String[] strArray51 = org.mockito.asm.util.AbstractVisitor.TYPES;
        org.mockito.asm.MethodVisitor methodVisitor52 = aSMifierClassVisitor30.visitMethod(1, "hi!", "hi!", "", strArray51);
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter("hi!");
        java.util.Locale locale56 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray61 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray63 = null;
        aSMifierMethodVisitor58.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray61, (int) (short) 1, objArray63);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor66.visitTryCatchBlock(label67, label68, label69, "");
        aSMifierMethodVisitor66.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray75 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray77 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor66, strArray75, 1.0f };
        java.io.PrintWriter printWriter78 = printWriter55.printf(locale56, "", (java.lang.Object[]) strArray75);
        printWriter78.println();
        printWriter78.print('a');
        java.io.PrintWriter printWriter82 = new java.io.PrintWriter((java.io.Writer) printWriter78);
        printWriter82.flush();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor84 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter82);
        java.lang.String[] strArray89 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        org.mockito.asm.MethodVisitor methodVisitor90 = aSMifierClassVisitor84.visitMethod((int) (short) 10, "hi!", "", "", strArray89);
        aSMifierMethodVisitor0.visitFrame((int) (short) 10, (int) 'a', (java.lang.Object[]) strArray51, (int) (short) -1, (java.lang.Object[]) strArray89);
        org.mockito.asm.Label label92 = null;
        aSMifierMethodVisitor0.visitLabel(label92);
        org.mockito.asm.Attribute attribute94 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodVisitor52);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(methodVisitor90);
    }

    @Test
    public void test04508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04508");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "");
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.Object obj28 = null;
        org.mockito.asm.FieldVisitor fieldVisitor29 = aSMifierClassVisitor15.visitField(1, "", "", "", obj28);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        printWriter35.write((-1));
        printWriter35.flush();
        java.util.Locale locale39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = null;
        aSMifierMethodVisitor41.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray44, (int) (short) 1, objArray46);
        java.io.PrintWriter printWriter48 = printWriter35.printf(locale39, "", (java.lang.Object[]) strArray44);
        org.mockito.asm.MethodVisitor methodVisitor49 = aSMifierClassVisitor15.visitMethod(1, "hi!", "", "", strArray44);
        methodVisitor49.visitTypeInsn(0, "");
        org.mockito.asm.Label label54 = null;
        methodVisitor49.visitJumpInsn((int) '#', label54);
        org.mockito.asm.Label label56 = null;
        methodVisitor49.visitLabel(label56);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertNotNull(methodVisitor49);
    }

    @Test
    public void test04509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04509");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (byte) 0);
        java.util.List list32 = aSMifierClassVisitor15.getText();
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter("hi!");
        printWriter38.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter43 = printWriter38.format("", (java.lang.Object[]) strArray42);
        org.mockito.asm.MethodVisitor methodVisitor44 = aSMifierClassVisitor15.visitMethod(0, "", "hi!", "hi!", strArray42);
        aSMifierClassVisitor15.visitOuterClass("hi!", "hi!", "hi!");
        aSMifierClassVisitor15.visitSource("", "");
        org.mockito.asm.Attribute attribute52 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor15.visitAttribute(attribute52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(methodVisitor44);
    }

    @Test
    public void test04510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04510");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitLabel(label29);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (-1));
    }

    @Test
    public void test04511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04511");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("hi!");
        printWriter2.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter6 = printWriter2.append((java.lang.CharSequence) "");
        printWriter2.print((int) (byte) -1);
        printWriter2.write("", (int) (byte) 1, (int) (short) 0);
        printWriter2.print((double) (byte) -1);
        aSMifierMethodVisitor0.print(printWriter2);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "");
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitLabel(label19);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (short) 0);
        org.junit.Assert.assertNotNull(printWriter6);
    }

    @Test
    public void test04512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04512");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 100, label14);
        aSMifierMethodVisitor0.visitMaxs(10, (int) ' ');
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, (int) (byte) 1);
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 100, label23);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", true);
        java.lang.Object obj30 = null;
        annotationVisitor28.visit("", obj30);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor28);
    }

    @Test
    public void test04513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04513");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter3, true);
        java.util.Locale locale6 = null;
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("hi!");
        printWriter9.print(false);
        java.util.Locale locale12 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitInsn((int) ' ');
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj39 = null;
        aSMifierMethodVisitor30.visitLdcInsn(obj39);
        org.mockito.asm.Label label41 = null;
        int[] intArray48 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label[] labelArray62 = new org.mockito.asm.Label[] { label61 };
        aSMifierMethodVisitor49.visitTableSwitchInsn(0, (int) (byte) 10, label60, labelArray62);
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label41, intArray48, labelArray62);
        aSMifierMethodVisitor14.visitTableSwitchInsn((int) '4', (int) '#', label29, labelArray62);
        java.io.PrintWriter printWriter66 = printWriter9.format(locale12, "hi!", (java.lang.Object[]) labelArray62);
        java.io.PrintWriter printWriter67 = printWriter5.printf(locale6, "", (java.lang.Object[]) labelArray62);
        printWriter5.println((int) '#');
        printWriter5.println(0L);
        printWriter5.println((long) (byte) 0);
        printWriter5.println("");
        printWriter5.close();
        printWriter5.close();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray62);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(printWriter67);
    }

    @Test
    public void test04514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04514");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter16 = printWriter12.append((java.lang.CharSequence) "");
        printWriter8.println((java.lang.Object) printWriter16);
        printWriter16.println((double) 10.0f);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        aSMifierMethodVisitor20.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list33 = aSMifierMethodVisitor20.getText();
        aSMifierMethodVisitor20.visitCode();
        printWriter16.println((java.lang.Object) aSMifierMethodVisitor20);
        printWriter16.close();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(list33);
    }

    @Test
    public void test04515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04515");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor28.visitLocalVariable("hi!", "hi!", "hi!", label37, label38, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor28.visitAnnotation("", true);
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj54 = null;
        aSMifierMethodVisitor45.visitLdcInsn(obj54);
        org.mockito.asm.Label label56 = null;
        int[] intArray63 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] { label76 };
        aSMifierMethodVisitor64.visitTableSwitchInsn(0, (int) (byte) 10, label75, labelArray77);
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label56, intArray63, labelArray77);
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label44, intArray63, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter26.printf("hi!", (java.lang.Object[]) labelArray80);
        printWriter82.print((int) (byte) 10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor85 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter82);
        printWriter82.println(0L);
        printWriter82.write((int) (byte) 10);
        printWriter82.println("hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
    }

    @Test
    public void test04516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04516");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append(' ');
        printWriter28.println(true);
        printWriter28.println((float) (-1L));
        printWriter28.println((long) (byte) 10);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
    }

    @Test
    public void test04517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04517");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", true);
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label26);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label30);
        org.mockito.asm.Label label34 = null;
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        java.util.Locale locale37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray44 = null;
        aSMifierMethodVisitor39.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray42, (int) (short) 1, objArray44);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label48, label49, label50, "");
        aSMifierMethodVisitor47.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray56 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray58 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor47, strArray56, 1.0f };
        java.io.PrintWriter printWriter59 = printWriter36.printf(locale37, "", (java.lang.Object[]) strArray56);
        char[] charArray66 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter59.println(charArray66);
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter((java.io.Writer) printWriter59, true);
        boolean boolean70 = printWriter69.checkError();
        java.io.PrintWriter printWriter72 = printWriter69.append((java.lang.CharSequence) "");
        java.util.Locale locale73 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor75 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor75.visitTryCatchBlock(label76, label77, label78, "");
        aSMifierMethodVisitor75.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj84 = null;
        aSMifierMethodVisitor75.visitLdcInsn(obj84);
        aSMifierMethodVisitor75.visitEnd();
        aSMifierMethodVisitor75.visitMaxs((int) (byte) 0, (int) (short) 1);
        org.mockito.asm.Label label92 = null;
        org.mockito.asm.Label[] labelArray93 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor75.visitTableSwitchInsn((-1), (int) (byte) 0, label92, labelArray93);
        java.io.PrintWriter printWriter95 = printWriter72.printf(locale73, "", (java.lang.Object[]) labelArray93);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 10, (int) (short) 10, label34, labelArray93);
        org.mockito.asm.Label label98 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label98);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(labelArray93);
        org.junit.Assert.assertNotNull(printWriter95);
    }

    @Test
    public void test04518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04518");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.println((float) (short) 0);
        java.io.PrintWriter printWriter7 = printWriter1.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter9 = printWriter1.append('#');
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter13 = printWriter9.append((java.lang.CharSequence) "", 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter7);
        org.junit.Assert.assertNotNull(printWriter9);
    }

    @Test
    public void test04519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04519");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitFieldInsn(100, "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitInsn(0);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray29 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray31 = null;
        aSMifierMethodVisitor26.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray29, (int) (short) 1, objArray31);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor34.visitTryCatchBlock(label35, label36, label37, "");
        aSMifierMethodVisitor34.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray43 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray45 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor34, strArray43, 1.0f };
        java.io.PrintWriter printWriter46 = printWriter23.printf(locale24, "", (java.lang.Object[]) strArray43);
        aSMifierMethodVisitor0.print(printWriter23);
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "hi!", false);
        annotationVisitor52.visitEnum("hi!", "", "");
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor52);
    }

    @Test
    public void test04520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04520");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation(100, "", true);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "", "", "");
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label24, label25, (int) '4');
        aSMifierMethodVisitor0.visitInsn((int) (byte) 0);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor15);
    }

    @Test
    public void test04521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04521");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter33 = printWriter31.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter33);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor34.visitAnnotation("hi!", true);
        java.lang.String[] strArray43 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor34.visit(1, (int) (short) 10, "hi!", "", "", strArray43);
        aSMifierClassVisitor15.visit(0, (int) (byte) 0, "", "hi!", "", strArray43);
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        java.util.Locale locale53 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray58 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray60 = null;
        aSMifierMethodVisitor55.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray58, (int) (short) 1, objArray60);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor63.visitTryCatchBlock(label64, label65, label66, "");
        aSMifierMethodVisitor63.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray72 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray74 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor63, strArray72, 1.0f };
        java.io.PrintWriter printWriter75 = printWriter52.printf(locale53, "", (java.lang.Object[]) strArray72);
        printWriter75.print("hi!");
        java.io.PrintWriter printWriter78 = new java.io.PrintWriter((java.io.Writer) printWriter75);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor79 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter78);
        aSMifierClassVisitor79.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = aSMifierClassVisitor79.visitAnnotation("hi!", true);
        aSMifierClassVisitor79.visitEnd();
        java.lang.String[] strArray92 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierClassVisitor79.visit(0, (int) (short) 100, "hi!", "hi!", "", strArray92);
        aSMifierClassVisitor15.visit((int) (byte) 10, 10, "", "", "", strArray92);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(annotationVisitor85);
        org.junit.Assert.assertNotNull(strArray92);
    }

    @Test
    public void test04522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04522");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor0.visitMaxs(100, (int) '4');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) 'a');
        aSMifierMethodVisitor0.visitEnd();
        java.lang.Class<?> wildcardClass16 = aSMifierMethodVisitor0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test04523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04523");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = printWriter1.append((java.lang.CharSequence) "");
        printWriter22.close();
        java.io.PrintWriter printWriter25 = printWriter22.append(' ');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj35 = null;
        aSMifierMethodVisitor26.visitLdcInsn(obj35);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor26.visitJumpInsn((int) (short) 1, label38);
        aSMifierMethodVisitor26.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor26.visitParameterAnnotation((int) (byte) 1, "", true);
        aSMifierMethodVisitor26.visitInsn((int) (short) 1);
        printWriter22.print((java.lang.Object) aSMifierMethodVisitor26);
        printWriter22.println((long) 100);
        printWriter22.print((double) (byte) 0);
        printWriter22.write("");
        printWriter22.write("", (int) (byte) 0, (int) (byte) 100);
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(annotationVisitor46);
    }

    @Test
    public void test04524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04524");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        java.io.PrintWriter printWriter37 = printWriter34.append((java.lang.CharSequence) "");
        printWriter34.print((float) 10);
        printWriter34.print((float) 'a');
        printWriter34.println("hi!");
        printWriter34.print((double) (-1.0f));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(printWriter37);
    }

    @Test
    public void test04525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04525");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list14 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list16 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitInsn((int) '4');
        aSMifierMethodVisitor0.visitMaxs((int) (short) 100, (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((-1), 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list16);
    }

    @Test
    public void test04526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04526");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        printWriter24.print((long) (byte) -1);
        printWriter24.flush();
        printWriter24.write("hi!");
        // The following exception was thrown during execution in test generation
        try {
            printWriter24.write("", (int) (byte) 10, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 20");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test04527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04527");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label21, label22, label23, "");
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label29, label30, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", false);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label38);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, (int) '4');
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 100, (int) (short) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierMethodVisitor0.visitParameterAnnotation((int) ' ', "hi!", true);
        aSMifierMethodVisitor0.visitMethodInsn((int) ' ', "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 1, (int) ' ');
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor49);
    }

    @Test
    public void test04528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04528");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter5.write("");
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("hi!");
        java.util.Locale locale10 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray15 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray17 = null;
        aSMifierMethodVisitor12.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray15, (int) (short) 1, objArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray29 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray31 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor20, strArray29, 1.0f };
        java.io.PrintWriter printWriter32 = printWriter9.printf(locale10, "", (java.lang.Object[]) strArray29);
        char[] charArray39 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter32.println(charArray39);
        printWriter5.print(charArray39);
        java.io.PrintWriter printWriter42 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor43 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter42);
        aSMifierClassVisitor43.visitSource("", "hi!");
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        printWriter52.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter56 = printWriter52.append((java.lang.CharSequence) "");
        printWriter52.print((double) 1);
        java.io.PrintWriter printWriter60 = printWriter52.append((java.lang.CharSequence) "hi!");
        printWriter52.print(false);
        java.lang.CharSequence charSequence63 = null;
        java.io.PrintWriter printWriter64 = printWriter52.append(charSequence63);
        printWriter52.print((double) (-1));
        org.mockito.asm.FieldVisitor fieldVisitor67 = aSMifierClassVisitor43.visitField((int) (byte) 0, "hi!", "hi!", "hi!", (java.lang.Object) printWriter52);
        printWriter5.println((java.lang.Object) fieldVisitor67);
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = fieldVisitor67.visitAnnotation("hi!", true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertNotNull(fieldVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor71);
    }

    @Test
    public void test04529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04529");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter5.println((-1));
        printWriter5.println();
        printWriter5.write((int) '#');
        printWriter5.println((double) (-1.0f));
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter16 = printWriter5.append((java.lang.CharSequence) "", (int) '#', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test04530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04530");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter9.println(false);
        printWriter9.println(true);
        printWriter9.print((-1));
        printWriter9.write((int) (byte) 1);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
    }

    @Test
    public void test04531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04531");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        java.util.List list12 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label14, label15, label16, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "hi!", true);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) 'a');
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label31, label32, (int) (byte) 100);
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list36 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(list36);
    }

    @Test
    public void test04532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04532");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label27, label28, (int) (short) 100);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor23);
    }

    @Test
    public void test04533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04533");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = printWriter1.append((java.lang.CharSequence) "");
        printWriter22.close();
        java.io.PrintWriter printWriter25 = printWriter22.append(' ');
        printWriter25.print((float) (short) 1);
        printWriter25.close();
        printWriter25.println("");
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter25);
    }

    @Test
    public void test04534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04534");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", true);
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        java.util.Locale locale28 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray33 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray35 = null;
        aSMifierMethodVisitor30.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray33, (int) (short) 1, objArray35);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor38.visitTryCatchBlock(label39, label40, label41, "");
        aSMifierMethodVisitor38.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray47 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray49 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor38, strArray47, 1.0f };
        java.io.PrintWriter printWriter50 = printWriter27.printf(locale28, "", (java.lang.Object[]) strArray47);
        printWriter50.print("hi!");
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter((java.io.Writer) printWriter50);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor54 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter53);
        aSMifierClassVisitor54.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierClassVisitor54.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        aSMifierMethodVisitor65.visitTryCatchBlock(label66, label67, label68, "");
        aSMifierMethodVisitor65.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj74 = null;
        aSMifierMethodVisitor65.visitLdcInsn(obj74);
        aSMifierMethodVisitor65.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label82 = null;
        org.mockito.asm.Label label83 = null;
        aSMifierMethodVisitor65.visitLocalVariable("hi!", "hi!", "hi!", label82, label83, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor89 = aSMifierMethodVisitor65.visitParameterAnnotation(0, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor90 = aSMifierClassVisitor54.visitField((int) ' ', "hi!", "hi!", "", (java.lang.Object) aSMifierMethodVisitor65);
        org.mockito.asm.Label label92 = null;
        aSMifierMethodVisitor65.visitLineNumber(1, label92);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) label92);
        org.mockito.asm.Label label96 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label96);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor89);
        org.junit.Assert.assertNotNull(fieldVisitor90);
    }

    @Test
    public void test04535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04535");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        printWriter1.print(0L);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        aSMifierMethodVisitor8.visitTryCatchBlock(label9, label10, label11, "");
        aSMifierMethodVisitor8.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj17 = null;
        aSMifierMethodVisitor8.visitLdcInsn(obj17);
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter("hi!");
        printWriter20.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor8.print(printWriter20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor25.visitTryCatchBlock(label26, label27, label28, "");
        aSMifierMethodVisitor25.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj34 = null;
        aSMifierMethodVisitor25.visitLdcInsn(obj34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor25.visitJumpInsn((int) (short) 1, label37);
        aSMifierMethodVisitor25.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor25.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label44, labelArray45);
        java.io.PrintWriter printWriter47 = printWriter20.printf("", (java.lang.Object[]) labelArray45);
        printWriter47.println();
        printWriter1.println((java.lang.Object) printWriter47);
        printWriter1.println(false);
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(printWriter47);
    }

    @Test
    public void test04536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04536");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter24.println(1L);
        // The following exception was thrown during execution in test generation
        try {
            printWriter24.write("", (int) (short) 1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 53");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test04537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04537");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.util.List list5 = aSMifierClassVisitor4.text;
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter("hi!");
        printWriter11.print(false);
        java.io.PrintWriter printWriter15 = printWriter11.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter15, true);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.Writer) printWriter15);
        printWriter18.write("");
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        java.util.Locale locale23 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray28 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray30 = null;
        aSMifierMethodVisitor25.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray28, (int) (short) 1, objArray30);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor33.visitTryCatchBlock(label34, label35, label36, "");
        aSMifierMethodVisitor33.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray44 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor33, strArray42, 1.0f };
        java.io.PrintWriter printWriter45 = printWriter22.printf(locale23, "", (java.lang.Object[]) strArray42);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.Writer) printWriter45, true);
        printWriter18.println((java.lang.Object) printWriter47);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor50.visitTryCatchBlock(label51, label52, label53, "");
        aSMifierMethodVisitor50.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor50.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label62 = null;
        int[] intArray64 = new int[] { (byte) 0 };
        java.io.PrintWriter printWriter66 = new java.io.PrintWriter("hi!");
        printWriter66.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor70 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor70.visitTryCatchBlock(label71, label72, label73, "");
        aSMifierMethodVisitor70.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        org.mockito.asm.Label[] labelArray83 = new org.mockito.asm.Label[] { label82 };
        aSMifierMethodVisitor70.visitTableSwitchInsn(0, (int) (byte) 10, label81, labelArray83);
        java.io.PrintWriter printWriter85 = printWriter66.printf("hi!", (java.lang.Object[]) labelArray83);
        aSMifierMethodVisitor50.visitLookupSwitchInsn(label62, intArray64, labelArray83);
        java.io.PrintWriter printWriter87 = printWriter18.printf("hi!", (java.lang.Object[]) labelArray83);
        printWriter18.print((long) (-1));
        org.mockito.asm.FieldVisitor fieldVisitor90 = aSMifierClassVisitor4.visitField((int) (byte) -1, "hi!", "", "", (java.lang.Object) (-1));
        fieldVisitor90.visitEnd();
        org.mockito.asm.Attribute attribute92 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor90.visitAttribute(attribute92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(printWriter45);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0]");
        org.junit.Assert.assertNotNull(labelArray83);
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(printWriter87);
        org.junit.Assert.assertNotNull(fieldVisitor90);
    }

    @Test
    public void test04538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04538");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 1, "", true);
        aSMifierMethodVisitor0.visitInsn((int) (short) 1);
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 0, label24);
        aSMifierMethodVisitor0.visitMaxs(10, (int) (byte) 0);
        aSMifierMethodVisitor0.visitVarInsn(0, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 10, (int) (byte) 100);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, (int) (short) 0);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor45);
    }

    @Test
    public void test04539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04539");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.Attribute attribute32 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor15.visitAttribute(attribute32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
    }

    @Test
    public void test04540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04540");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", true);
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label26);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 10, label30);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test04541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04541");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 10, (int) (byte) 10);
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor0.visitLabel(label31);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) -1, "", true);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 1, "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitIincInsn(1, (int) ' ');
        org.junit.Assert.assertNotNull(annotationVisitor36);
    }

    @Test
    public void test04542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04542");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter1.print(false);
        java.lang.CharSequence charSequence12 = null;
        java.io.PrintWriter printWriter13 = printWriter1.append(charSequence12);
        printWriter1.print(' ');
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter19 = printWriter17.append('a');
        printWriter19.print(0);
        printWriter1.println((java.lang.Object) printWriter19);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter((java.io.Writer) printWriter19);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter27 = printWriter19.append((java.lang.CharSequence) "", (int) ' ', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -33");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(printWriter19);
    }

    @Test
    public void test04543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04543");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        printWriter24.println(false);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        boolean boolean29 = printWriter28.checkError();
        printWriter28.flush();
        printWriter28.print((long) 0);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter((java.io.Writer) printWriter28);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test04544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04544");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        printWriter1.println(true);
        printWriter1.close();
        printWriter1.write((int) (byte) 1);
    }

    @Test
    public void test04545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04545");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.println((float) (short) 0);
        printWriter1.print(true);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("hi!");
        printWriter9.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter13 = printWriter9.append((java.lang.CharSequence) "");
        printWriter9.print((int) (byte) -1);
        printWriter9.print((double) (byte) 1);
        printWriter9.close();
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter9);
        boolean boolean20 = printWriter9.checkError();
        printWriter9.println((long) (byte) 100);
        printWriter9.println(false);
        java.lang.Object obj25 = null;
        printWriter9.println(obj25);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        printWriter28.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter32 = printWriter28.append((java.lang.CharSequence) "");
        printWriter28.print((int) (byte) -1);
        printWriter28.print((double) (byte) 1);
        printWriter28.close();
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.Writer) printWriter28);
        boolean boolean39 = printWriter28.checkError();
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        printWriter41.print((java.lang.Object) (short) -1);
        printWriter41.flush();
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        java.util.Locale locale47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray54 = null;
        aSMifierMethodVisitor49.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray52, (int) (short) 1, objArray54);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor57.visitTryCatchBlock(label58, label59, label60, "");
        aSMifierMethodVisitor57.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray66 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray68 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor57, strArray66, 1.0f };
        java.io.PrintWriter printWriter69 = printWriter46.printf(locale47, "", (java.lang.Object[]) strArray66);
        char[] charArray76 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter69.println(charArray76);
        printWriter41.print(charArray76);
        printWriter28.write(charArray76, (-1), (int) (short) 10);
        printWriter9.println(charArray76);
        printWriter1.print(charArray76);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test04546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04546");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 1, "hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "", true);
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "hi!", "");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor21);
    }

    @Test
    public void test04547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04547");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        org.mockito.asm.Attribute attribute28 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor27.visitAttribute(attribute28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test04548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04548");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter8 = printWriter6.append((java.lang.CharSequence) "");
        printWriter8.print("");
        java.io.PrintWriter printWriter12 = printWriter8.append((java.lang.CharSequence) "");
        printWriter12.write((int) (byte) 100);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter8);
        org.junit.Assert.assertNotNull(printWriter12);
    }

    @Test
    public void test04549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04549");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append(' ');
        printWriter28.println(true);
        java.io.PrintWriter printWriter32 = printWriter28.append('a');
        printWriter28.print((int) (short) 10);
        printWriter28.println("");
        printWriter28.print(false);
        printWriter28.println((long) (byte) 100);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(printWriter32);
    }

    @Test
    public void test04550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04550");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        boolean boolean36 = printWriter34.checkError();
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter39 = printWriter34.format("hi!", (java.lang.Object[]) strArray38);
        printWriter39.println((double) (short) 100);
        printWriter39.write(0);
        java.io.PrintWriter printWriter45 = printWriter39.append((java.lang.CharSequence) "hi!");
        java.lang.Class<?> wildcardClass46 = printWriter39.getClass();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(printWriter45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test04551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04551");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, 1);
        aSMifierMethodVisitor0.visitIincInsn((int) 'a', (int) (byte) 100);
        aSMifierMethodVisitor0.visitVarInsn((int) '#', 100);
        aSMifierMethodVisitor0.visitMethodInsn((int) '4', "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 10, 0);
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label33, label34, 10);
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test04552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04552");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label20, label21, label22, "hi!");
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        printWriter26.write((-1));
        printWriter26.flush();
        java.util.Locale locale30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray37 = null;
        aSMifierMethodVisitor32.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray35, (int) (short) 1, objArray37);
        java.io.PrintWriter printWriter39 = printWriter26.printf(locale30, "", (java.lang.Object[]) strArray35);
        aSMifierMethodVisitor0.print(printWriter39);
        aSMifierMethodVisitor0.visitMethodInsn(10, "hi!", "", "");
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label46, label47, label48, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(0, "hi!", "hi!", "");
        aSMifierMethodVisitor51.visitVarInsn((int) (byte) 10, 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor51.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor51);
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn((int) (byte) -1, "", "", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test04553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04553");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append(' ');
        printWriter28.println(true);
        java.io.PrintWriter printWriter32 = printWriter28.append('a');
        printWriter28.println("");
        printWriter28.println((int) (short) 10);
        printWriter28.println((int) (byte) 100);
        printWriter28.println((float) (short) 0);
        printWriter28.print('#');
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter((java.io.Writer) printWriter28, true);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(printWriter32);
    }

    @Test
    public void test04554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04554");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label22, label23, label24, "hi!");
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "hi!", label30, label31, 0);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", 0);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        org.junit.Assert.assertNotNull(annotationVisitor15);
    }

    @Test
    public void test04555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04555");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list14 = aSMifierMethodVisitor0.text;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((int) (byte) -1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(list14);
    }

    @Test
    public void test04556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04556");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        printWriter36.write((-1));
        printWriter36.flush();
        java.util.Locale locale40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray47 = null;
        aSMifierMethodVisitor42.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray45, (int) (short) 1, objArray47);
        java.io.PrintWriter printWriter49 = printWriter36.printf(locale40, "", (java.lang.Object[]) strArray45);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor50 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter36);
        aSMifierClassVisitor50.visitEnd();
        aSMifierClassVisitor50.visitSource("", "hi!");
        java.lang.String[] strArray60 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor50.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray60);
        aSMifierClassVisitor50.visitInnerClass("", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor71 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray74 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray76 = null;
        aSMifierMethodVisitor71.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray74, (int) (short) 1, objArray76);
        org.mockito.asm.MethodVisitor methodVisitor78 = aSMifierClassVisitor50.visitMethod((int) (short) 0, "", "", "hi!", strArray74);
        org.mockito.asm.MethodVisitor methodVisitor79 = aSMifierClassVisitor15.visitMethod((int) '4', "hi!", "", "", strArray74);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "");
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(methodVisitor78);
        org.junit.Assert.assertNotNull(methodVisitor79);
    }

    @Test
    public void test04557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04557");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label19, label20, (int) '4');
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "");
    }

    @Test
    public void test04558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04558");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("hi!");
        printWriter9.print(false);
        java.io.PrintWriter printWriter13 = printWriter9.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter((java.io.Writer) printWriter13, true);
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter((java.io.Writer) printWriter13);
        printWriter16.write("");
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter("hi!");
        java.util.Locale locale21 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray26 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray28 = null;
        aSMifierMethodVisitor23.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray26, (int) (short) 1, objArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray40 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray42 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor31, strArray40, 1.0f };
        java.io.PrintWriter printWriter43 = printWriter20.printf(locale21, "", (java.lang.Object[]) strArray40);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter((java.io.Writer) printWriter43, true);
        printWriter16.println((java.lang.Object) printWriter45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor48.visitTryCatchBlock(label49, label50, label51, "");
        aSMifierMethodVisitor48.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor48.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label60 = null;
        int[] intArray62 = new int[] { (byte) 0 };
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter("hi!");
        printWriter64.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor68.visitTryCatchBlock(label69, label70, label71, "");
        aSMifierMethodVisitor68.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label[] labelArray81 = new org.mockito.asm.Label[] { label80 };
        aSMifierMethodVisitor68.visitTableSwitchInsn(0, (int) (byte) 10, label79, labelArray81);
        java.io.PrintWriter printWriter83 = printWriter64.printf("hi!", (java.lang.Object[]) labelArray81);
        aSMifierMethodVisitor48.visitLookupSwitchInsn(label60, intArray62, labelArray81);
        java.io.PrintWriter printWriter85 = printWriter16.printf("hi!", (java.lang.Object[]) labelArray81);
        printWriter7.print((java.lang.Object) "hi!");
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0]");
        org.junit.Assert.assertNotNull(labelArray81);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertNotNull(printWriter85);
    }

    @Test
    public void test04559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04559");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        aSMifierMethodVisitor0.visitMethodInsn(10, "", "hi!", "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label17, label18, (int) (short) -1);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        aSMifierMethodVisitor24.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor24.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label36 = null;
        int[] intArray38 = new int[] { (byte) 0 };
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] { label56 };
        aSMifierMethodVisitor44.visitTableSwitchInsn(0, (int) (byte) 10, label55, labelArray57);
        java.io.PrintWriter printWriter59 = printWriter40.printf("hi!", (java.lang.Object[]) labelArray57);
        aSMifierMethodVisitor24.visitLookupSwitchInsn(label36, intArray38, labelArray57);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) ' ', 0, label23, labelArray57);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 10, 100);
        aSMifierMethodVisitor0.visitFieldInsn((int) '#', "hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0]");
        org.junit.Assert.assertNotNull(labelArray57);
        org.junit.Assert.assertNotNull(printWriter59);
    }

    @Test
    public void test04560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04560");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 1, "hi!", true);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) ' ', label19);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label22);
        aSMifierMethodVisitor0.visitFieldInsn((int) 'a', "", "", "");
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        printWriter30.write((-1));
        printWriter30.flush();
        java.util.Locale locale34 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = null;
        aSMifierMethodVisitor36.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray39, (int) (short) 1, objArray41);
        java.io.PrintWriter printWriter43 = printWriter30.printf(locale34, "", (java.lang.Object[]) strArray39);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor44 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter30);
        aSMifierClassVisitor44.visitEnd();
        aSMifierClassVisitor44.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor53.visitTryCatchBlock(label54, label55, label56, "");
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor53.visitLocalVariable("hi!", "hi!", "hi!", label62, label63, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor53.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor53.visitAnnotationDefault();
        annotationVisitor69.visitEnum("", "hi!", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor74 = aSMifierClassVisitor44.visitField((int) '#', "", "", "", (java.lang.Object) "hi!");
        aSMifierClassVisitor44.visitSource("", "");
        aSMifierClassVisitor44.visitInnerClass("hi!", "", "", (int) ' ');
        java.lang.String[] strArray89 = new java.lang.String[] { "", "hi!" };
        org.mockito.asm.MethodVisitor methodVisitor90 = aSMifierClassVisitor44.visitMethod((int) (byte) 0, "hi!", "hi!", "", strArray89);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        aSMifierMethodVisitor0.visitIincInsn(1, (int) (byte) 100);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(annotationVisitor69);
        org.junit.Assert.assertNotNull(fieldVisitor74);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(methodVisitor90);
    }

    @Test
    public void test04561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04561");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println((int) (short) 10);
        printWriter24.println((int) 'a');
        printWriter24.println((double) 0);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test04562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04562");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        aSMifierClassVisitor27.visitSource("", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test04563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04563");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.print('a');
        printWriter24.print("hi!");
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter33 = printWriter24.append('a');
        printWriter24.print('#');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter33);
    }

    @Test
    public void test04564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04564");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = annotationVisitor61.visitArray("");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        aSMifierMethodVisitor65.visitTryCatchBlock(label66, label67, label68, "");
        aSMifierMethodVisitor65.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj74 = null;
        aSMifierMethodVisitor65.visitLdcInsn(obj74);
        org.mockito.asm.Label label77 = null;
        aSMifierMethodVisitor65.visitJumpInsn((int) (short) 1, label77);
        aSMifierMethodVisitor65.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label82 = null;
        aSMifierMethodVisitor65.visitLabel(label82);
        aSMifierMethodVisitor65.visitInsn(100);
        annotationVisitor61.visit("", (java.lang.Object) aSMifierMethodVisitor65);
        aSMifierMethodVisitor65.visitMultiANewArrayInsn("", (int) (byte) 0);
        aSMifierMethodVisitor65.visitMaxs(1, (int) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor95 = aSMifierMethodVisitor65.visitAnnotation("hi!", true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(annotationVisitor95);
    }

    @Test
    public void test04565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04565");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        boolean boolean6 = printWriter5.checkError();
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        java.util.Locale locale9 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray14 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray16 = null;
        aSMifierMethodVisitor11.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray14, (int) (short) 1, objArray16);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor19.visitTryCatchBlock(label20, label21, label22, "");
        aSMifierMethodVisitor19.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray28 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray30 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor19, strArray28, 1.0f };
        java.io.PrintWriter printWriter31 = printWriter8.printf(locale9, "", (java.lang.Object[]) strArray28);
        boolean boolean32 = printWriter31.checkError();
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter36 = printWriter34.append('a');
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter("hi!");
        printWriter38.println((-1.0d));
        printWriter34.print((java.lang.Object) (-1.0d));
        java.io.PrintWriter printWriter43 = printWriter34.append('a');
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter("hi!");
        java.util.Locale locale46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray51 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray53 = null;
        aSMifierMethodVisitor48.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray51, (int) (short) 1, objArray53);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor56.visitTryCatchBlock(label57, label58, label59, "");
        aSMifierMethodVisitor56.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray65 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray67 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor56, strArray65, 1.0f };
        java.io.PrintWriter printWriter68 = printWriter45.printf(locale46, "", (java.lang.Object[]) strArray65);
        char[] charArray75 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter68.println(charArray75);
        printWriter68.write(1);
        printWriter43.print((java.lang.Object) 1);
        char[] charArray80 = new char[] {};
        printWriter43.print(charArray80);
        printWriter31.println(charArray80);
        // The following exception was thrown during execution in test generation
        try {
            printWriter5.write(charArray80, (int) (short) -1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[]");
    }

    @Test
    public void test04566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04566");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        printWriter12.println("");
        printWriter12.println((long) (byte) 0);
        printWriter12.println("hi!");
    }

    @Test
    public void test04567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04567");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor5 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor9.visitInsn((int) (byte) 100);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor9.visitLabel(label22);
        aSMifierMethodVisitor9.visitTypeInsn((int) (byte) 10, "");
        org.mockito.asm.Label label29 = null;
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "");
        printWriter31.print((double) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor39.visitJumpInsn((int) (short) 1, label51);
        aSMifierMethodVisitor39.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor39.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor39.visitAnnotationDefault();
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter("hi!");
        printWriter63.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor67.visitTryCatchBlock(label68, label69, label70, "");
        aSMifierMethodVisitor67.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] { label79 };
        aSMifierMethodVisitor67.visitTableSwitchInsn(0, (int) (byte) 10, label78, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter63.printf("hi!", (java.lang.Object[]) labelArray80);
        java.lang.String[] strArray84 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor39.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray80, 1, (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter86 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray80);
        aSMifierMethodVisitor9.visitTableSwitchInsn((int) ' ', 0, label29, labelArray80);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (-1), label8, labelArray80);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.junit.Assert.assertNotNull(annotationVisitor5);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter86);
    }

    @Test
    public void test04568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04568");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label27 = null;
        int[] intArray34 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        aSMifierMethodVisitor16.visitLookupSwitchInsn(label27, intArray34, labelArray48);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) '4', (int) '#', label15, labelArray48);
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label52, label53, label54, "hi!");
        aSMifierMethodVisitor0.visitMethodInsn(0, "", "", "");
        aSMifierMethodVisitor0.visitInsn((int) 'a');
        aSMifierMethodVisitor0.visitMaxs(10, 100);
        aSMifierMethodVisitor0.visitTypeInsn((int) '#', "");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray48);
    }

    @Test
    public void test04569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04569");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor7.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor7.visitAnnotationDefault();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        java.io.PrintWriter printWriter50 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray48);
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor7.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray48, 1, (java.lang.Object[]) strArray52);
        java.io.PrintWriter printWriter54 = printWriter1.format("hi!", (java.lang.Object[]) strArray52);
        printWriter1.write("hi!");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printWriter54);
    }

    @Test
    public void test04570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04570");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs(1, 10);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter("hi!");
        printWriter65.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor69.visitTryCatchBlock(label70, label71, label72, "");
        aSMifierMethodVisitor69.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label[] labelArray82 = new org.mockito.asm.Label[] { label81 };
        aSMifierMethodVisitor69.visitTableSwitchInsn(0, (int) (byte) 10, label80, labelArray82);
        java.io.PrintWriter printWriter84 = printWriter65.printf("hi!", (java.lang.Object[]) labelArray82);
        printWriter65.print((float) 1L);
        aSMifierMethodVisitor0.print(printWriter65);
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 10, "", "hi!", "hi!");
        aSMifierMethodVisitor0.visitTypeInsn(100, "hi!");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray82);
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test04571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04571");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        printWriter24.println(false);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        boolean boolean29 = printWriter28.checkError();
        printWriter28.write("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter35 = printWriter28.append((java.lang.CharSequence) "", (int) '4', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test04572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04572");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("hi!");
        printWriter2.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter6 = printWriter2.append((java.lang.CharSequence) "");
        printWriter2.print((int) (byte) -1);
        printWriter2.write("", (int) (byte) 1, (int) (short) 0);
        printWriter2.print((double) (byte) -1);
        aSMifierMethodVisitor0.print(printWriter2);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "", "hi!", "hi!");
        org.mockito.asm.Attribute attribute21 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter6);
    }

    @Test
    public void test04573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04573");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        printWriter14.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter19 = printWriter14.format("", (java.lang.Object[]) strArray18);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) strArray18);
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitTypeInsn((int) '#', "");
        aSMifierMethodVisitor0.visitIntInsn((int) '#', (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(annotationVisitor21);
    }

    @Test
    public void test04574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04574");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        printWriter12.println("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor18 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter12);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.write((-1));
        printWriter24.flush();
        java.util.Locale locale28 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray33 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray35 = null;
        aSMifierMethodVisitor30.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray33, (int) (short) 1, objArray35);
        java.io.PrintWriter printWriter37 = printWriter24.printf(locale28, "", (java.lang.Object[]) strArray33);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor38 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        aSMifierClassVisitor38.visitEnd();
        aSMifierClassVisitor38.visitSource("", "hi!");
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor38.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray48);
        org.mockito.asm.MethodVisitor methodVisitor50 = aSMifierClassVisitor18.visitMethod(0, "", "hi!", "hi!", strArray48);
        aSMifierClassVisitor18.visitOuterClass("hi!", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierClassVisitor18.visitAnnotation("", false);
        org.mockito.asm.Attribute attribute58 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor18.visitAttribute(attribute58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(methodVisitor50);
        org.junit.Assert.assertNotNull(annotationVisitor57);
    }

    @Test
    public void test04575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04575");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLabel(label17);
        aSMifierMethodVisitor0.visitInsn(100);
        java.util.List list21 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLabel(label22);
        aSMifierMethodVisitor0.visitMaxs((int) '4', (int) (byte) 100);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        org.junit.Assert.assertNotNull(list21);
    }

    @Test
    public void test04576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04576");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label18);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 0, "");
        aSMifierMethodVisitor0.visitVarInsn(0, 0);
        aSMifierMethodVisitor0.visitFieldInsn(10, "", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor0.visitLineNumber(100, label34);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test04577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04577");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitSource("hi!", "hi!");
        aSMifierClassVisitor15.visitInnerClass("hi!", "", "hi!", (int) (byte) -1);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
    }

    @Test
    public void test04578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04578");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        printWriter14.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter19 = printWriter14.format("", (java.lang.Object[]) strArray18);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) strArray18);
        aSMifierMethodVisitor0.visitIntInsn(1, (int) (byte) 1);
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLineNumber(0, label25);
        aSMifierMethodVisitor0.visitMaxs((int) '4', (int) (short) 100);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, (int) (short) 1);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(printWriter19);
    }

    @Test
    public void test04579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04579");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs(1, 10);
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label65);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, (int) (byte) 100);
        org.mockito.asm.Label label75 = null;
        aSMifierMethodVisitor0.visitLabel(label75);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
    }

    @Test
    public void test04580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04580");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitInsn((int) (byte) 100);
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor0.visitLabel(label13);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 10, "");
        org.mockito.asm.Label label20 = null;
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter26 = printWriter22.append((java.lang.CharSequence) "");
        printWriter22.print((double) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj39 = null;
        aSMifierMethodVisitor30.visitLdcInsn(obj39);
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor30.visitJumpInsn((int) (short) 1, label42);
        aSMifierMethodVisitor30.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor30.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor30.visitAnnotationDefault();
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter("hi!");
        printWriter54.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        java.io.PrintWriter printWriter73 = printWriter54.printf("hi!", (java.lang.Object[]) labelArray71);
        java.lang.String[] strArray75 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor30.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray71, 1, (java.lang.Object[]) strArray75);
        java.io.PrintWriter printWriter77 = printWriter22.printf("hi!", (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) ' ', 0, label20, labelArray71);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 0, "hi!");
        org.mockito.asm.Label label82 = null;
        org.mockito.asm.Label label83 = null;
        org.mockito.asm.Label label84 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label82, label83, label84, "");
        org.mockito.asm.Label label88 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label88);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(printWriter77);
    }

    @Test
    public void test04581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04581");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor8 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitIntInsn(10, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn((int) (byte) -1, "");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor8);
    }

    @Test
    public void test04582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04582");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) -1, "hi!", false);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label19, label20, label21, "hi!");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
    }

    @Test
    public void test04583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04583");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        aSMifierClassVisitor28.visitOuterClass("hi!", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor28.visitAnnotation("", true);
        aSMifierClassVisitor28.visitEnd();
        java.util.List list40 = aSMifierClassVisitor28.text;
        org.mockito.asm.Attribute attribute41 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor28.visitAttribute(attribute41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(list40);
    }

    @Test
    public void test04584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04584");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.write((-1));
        printWriter22.flush();
        java.util.Locale locale26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray31 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray33 = null;
        aSMifierMethodVisitor28.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray31, (int) (short) 1, objArray33);
        java.io.PrintWriter printWriter35 = printWriter22.printf(locale26, "", (java.lang.Object[]) strArray31);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter22);
        aSMifierClassVisitor36.visitEnd();
        aSMifierClassVisitor36.visitSource("", "hi!");
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor36.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray46);
        org.mockito.asm.MethodVisitor methodVisitor48 = aSMifierClassVisitor15.visitMethod((int) (short) 100, "hi!", "hi!", "", strArray46);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("hi!", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor57.visitTryCatchBlock(label58, label59, label60, "");
        aSMifierMethodVisitor57.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor57.visitJumpInsn(1, label67);
        aSMifierMethodVisitor57.visitEnd();
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor57.visitLabel(label70);
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierMethodVisitor57.visitAnnotationDefault();
        org.mockito.asm.FieldVisitor fieldVisitor73 = aSMifierClassVisitor15.visitField((int) ' ', "", "", "", (java.lang.Object) annotationVisitor72);
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = fieldVisitor73.visitAnnotation("hi!", true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertNotNull(fieldVisitor73);
        org.junit.Assert.assertNotNull(annotationVisitor76);
    }

    @Test
    public void test04585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04585");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) (short) 1);
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test04586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04586");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) -1);
        aSMifierMethodVisitor0.visitFieldInsn(100, "", "hi!", "hi!");
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label68, label69, label70, "hi!");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
    }

    @Test
    public void test04587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04587");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn((int) ' ', (int) (short) 10);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list28 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list28);
    }

    @Test
    public void test04588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04588");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLabel(label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation(1, "", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = annotationVisitor15.visitArray("hi!");
        annotationVisitor15.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor17);
    }

    @Test
    public void test04589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04589");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", true);
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label67, label68, label69, "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) ' ', 0);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "");
        org.mockito.asm.Label label83 = null;
        org.mockito.asm.Label label84 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label83, label84, (int) (short) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor87 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.lang.Class<?> wildcardClass88 = annotationVisitor87.getClass();
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(annotationVisitor87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test04590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04590");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor28.visitAnnotation("", false);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        java.util.Locale locale44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray49 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray51 = null;
        aSMifierMethodVisitor46.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray49, (int) (short) 1, objArray51);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor54.visitTryCatchBlock(label55, label56, label57, "");
        aSMifierMethodVisitor54.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray63 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray65 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor54, strArray63, 1.0f };
        java.io.PrintWriter printWriter66 = printWriter43.printf(locale44, "", (java.lang.Object[]) strArray63);
        org.mockito.asm.MethodVisitor methodVisitor67 = aSMifierClassVisitor28.visitMethod((int) (short) 0, "", "hi!", "", strArray63);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(methodVisitor67);
    }

    @Test
    public void test04591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04591");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        java.util.List list26 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 0);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 0, "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = annotationVisitor35.visitArray("");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = annotationVisitor37.visitAnnotation("hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = annotationVisitor40.visitArray("");
        annotationVisitor42.visitEnum("", "hi!", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor42);
    }

    @Test
    public void test04592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04592");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor28);
    }

    @Test
    public void test04593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04593");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        aSMifierMethodVisitor39.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor39.visitLocalVariable("hi!", "hi!", "hi!", label56, label57, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor39.visitParameterAnnotation(0, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor64 = aSMifierClassVisitor28.visitField((int) ' ', "hi!", "hi!", "", (java.lang.Object) aSMifierMethodVisitor39);
        java.lang.String[] strArray69 = null;
        org.mockito.asm.MethodVisitor methodVisitor70 = aSMifierClassVisitor28.visitMethod(0, "hi!", "hi!", "", strArray69);
        aSMifierClassVisitor28.visitInnerClass("hi!", "", "hi!", (int) (short) 1);
        aSMifierClassVisitor28.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(methodVisitor70);
    }

    @Test
    public void test04594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04594");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label23, label24, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 10, "hi!", false);
        aSMifierMethodVisitor0.visitVarInsn((int) '4', 0);
        java.lang.Class<?> wildcardClass34 = aSMifierMethodVisitor0.getClass();
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test04595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04595");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        printWriter1.print((float) 1L);
        printWriter1.flush();
        printWriter1.print((long) (short) 0);
        printWriter1.println(10);
        printWriter1.println("hi!");
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
    }

    @Test
    public void test04596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04596");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter1.write((int) (short) 1);
        printWriter1.write(0);
        java.io.PrintWriter printWriter15 = printWriter1.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("hi!");
        java.util.Locale locale18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray23 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray25 = null;
        aSMifierMethodVisitor20.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray23, (int) (short) 1, objArray25);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray37 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray39 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor28, strArray37, 1.0f };
        java.io.PrintWriter printWriter40 = printWriter17.printf(locale18, "", (java.lang.Object[]) strArray37);
        char[] charArray47 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter40.println(charArray47);
        char[] charArray49 = new char[] {};
        printWriter40.print(charArray49);
        printWriter1.print(charArray49);
        java.io.PrintWriter printWriter53 = printWriter1.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter56 = printWriter54.append('#');
        printWriter56.println((int) (short) 0);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[]");
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(printWriter56);
    }

    @Test
    public void test04597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04597");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        java.io.PrintWriter printWriter36 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter("hi!");
        java.util.Locale locale39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = null;
        aSMifierMethodVisitor41.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray44, (int) (short) 1, objArray46);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray58 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray60 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor49, strArray58, 1.0f };
        java.io.PrintWriter printWriter61 = printWriter38.printf(locale39, "", (java.lang.Object[]) strArray58);
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter((java.io.Writer) printWriter61, true);
        printWriter63.println('a');
        printWriter36.println((java.lang.Object) 'a');
        printWriter36.println(false);
        printWriter36.print(false);
        java.lang.Object[] objArray72 = null;
        java.io.PrintWriter printWriter73 = printWriter36.format("hi!", objArray72);
        printWriter73.print(1.0d);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(printWriter73);
    }

    @Test
    public void test04598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04598");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        java.util.Locale locale13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray20 = null;
        aSMifierMethodVisitor15.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray18, (int) (short) 1, objArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor23, strArray32, 1.0f };
        java.io.PrintWriter printWriter35 = printWriter12.printf(locale13, "", (java.lang.Object[]) strArray32);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, true);
        printWriter8.println((java.lang.Object) printWriter37);
        java.io.PrintWriter printWriter40 = printWriter8.append((java.lang.CharSequence) "");
        printWriter40.print((double) '#');
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter40);
    }

    @Test
    public void test04599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04599");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter24.print((float) 10L);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor37 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        aSMifierClassVisitor37.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = null;
        aSMifierMethodVisitor43.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray46, (int) (short) 1, objArray48);
        aSMifierMethodVisitor43.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor43.visitMethodInsn((int) (short) 10, "hi!", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor60 = aSMifierClassVisitor37.visitField(100, "hi!", "hi!", "hi!", (java.lang.Object) "");
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = fieldVisitor60.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = fieldVisitor60.visitAnnotation("", false);
        org.mockito.asm.Attribute attribute67 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor60.visitAttribute(attribute67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(fieldVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(annotationVisitor66);
    }

    @Test
    public void test04600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04600");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor0.visitMaxs(100, (int) '4');
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label13);
        aSMifierMethodVisitor0.visitCode();
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("hi!");
        printWriter17.write((-1));
        printWriter17.flush();
        java.util.Locale locale21 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray26 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray28 = null;
        aSMifierMethodVisitor23.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray26, (int) (short) 1, objArray28);
        java.io.PrintWriter printWriter30 = printWriter17.printf(locale21, "", (java.lang.Object[]) strArray26);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter17);
        aSMifierClassVisitor31.visitEnd();
        aSMifierClassVisitor31.visitSource("", "hi!");
        java.lang.String[] strArray41 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor31.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray41);
        aSMifierClassVisitor31.visitInnerClass("", "hi!", "", (int) (byte) 0);
        java.util.List list48 = aSMifierClassVisitor31.getText();
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter("hi!");
        printWriter54.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray58 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter59 = printWriter54.format("", (java.lang.Object[]) strArray58);
        org.mockito.asm.MethodVisitor methodVisitor60 = aSMifierClassVisitor31.visitMethod(0, "", "hi!", "hi!", strArray58);
        aSMifierClassVisitor31.visitOuterClass("hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierClassVisitor31);
        aSMifierMethodVisitor0.visitInsn(100);
        aSMifierMethodVisitor0.visitMaxs((int) '4', (int) (byte) 10);
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label71, label72, label73, "");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(methodVisitor60);
    }

    @Test
    public void test04601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04601");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitIincInsn((int) '#', (int) (byte) -1);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor8 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        org.junit.Assert.assertNotNull(annotationVisitor8);
    }

    @Test
    public void test04602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04602");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label7 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label7);
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = annotationVisitor11.visitArray("hi!");
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(annotationVisitor13);
    }

    @Test
    public void test04603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04603");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.print((int) ' ');
        java.lang.Object obj29 = null;
        printWriter24.print(obj29);
        printWriter24.println(false);
        java.io.PrintWriter printWriter34 = printWriter24.append('4');
        printWriter24.print(' ');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter34);
    }

    @Test
    public void test04604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04604");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label21 = null;
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray29 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray31 = null;
        aSMifierMethodVisitor26.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray29, (int) (short) 1, objArray31);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor34.visitTryCatchBlock(label35, label36, label37, "");
        aSMifierMethodVisitor34.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray43 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray45 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor34, strArray43, 1.0f };
        java.io.PrintWriter printWriter46 = printWriter23.printf(locale24, "", (java.lang.Object[]) strArray43);
        java.io.PrintWriter printWriter48 = printWriter46.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter50 = printWriter46.append((java.lang.CharSequence) "hi!");
        printWriter46.print(false);
        java.util.Locale locale53 = null;
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter("hi!");
        printWriter56.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter60 = printWriter56.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor62.visitTryCatchBlock(label63, label64, label65, "");
        aSMifierMethodVisitor62.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj71 = null;
        aSMifierMethodVisitor62.visitLdcInsn(obj71);
        org.mockito.asm.Label label74 = null;
        aSMifierMethodVisitor62.visitJumpInsn((int) (short) 1, label74);
        aSMifierMethodVisitor62.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label[] labelArray82 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor62.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label81, labelArray82);
        java.io.PrintWriter printWriter84 = printWriter60.printf("", (java.lang.Object[]) labelArray82);
        java.io.PrintWriter printWriter85 = printWriter46.printf(locale53, "hi!", (java.lang.Object[]) labelArray82);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) -1, 10, label21, labelArray82);
        org.mockito.asm.Label label87 = null;
        org.mockito.asm.Label label88 = null;
        org.mockito.asm.Label label89 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label87, label88, label89, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor95 = aSMifierMethodVisitor0.visitParameterAnnotation((int) ' ', "", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor98 = annotationVisitor95.visitAnnotation("", "");
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(labelArray82);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(annotationVisitor95);
        org.junit.Assert.assertNotNull(annotationVisitor98);
    }

    @Test
    public void test04605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04605");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor7.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor7.visitAnnotationDefault();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        java.io.PrintWriter printWriter50 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray48);
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor7.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray48, 1, (java.lang.Object[]) strArray52);
        java.io.PrintWriter printWriter54 = printWriter1.format("hi!", (java.lang.Object[]) strArray52);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor55.visitAnnotation("", true);
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter("hi!");
        printWriter64.println((-1.0d));
        printWriter64.print((long) ' ');
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter((java.io.Writer) printWriter64);
        org.mockito.asm.FieldVisitor fieldVisitor70 = aSMifierClassVisitor55.visitField(0, "", "hi!", "hi!", (java.lang.Object) printWriter69);
        printWriter69.close();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(fieldVisitor70);
    }

    @Test
    public void test04606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04606");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj45 = null;
        aSMifierMethodVisitor36.visitLdcInsn(obj45);
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor36.visitJumpInsn((int) (short) 1, label48);
        aSMifierMethodVisitor36.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor36.visitParameterAnnotation((int) (byte) 1, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor57 = aSMifierClassVisitor31.visitField((int) (byte) 0, "", "", "", (java.lang.Object) aSMifierMethodVisitor36);
        fieldVisitor57.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = fieldVisitor57.visitAnnotation("hi!", true);
        org.mockito.asm.Attribute attribute62 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor57.visitAttribute(attribute62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(annotationVisitor61);
    }

    @Test
    public void test04607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04607");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label27 = null;
        int[] intArray34 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        aSMifierMethodVisitor16.visitLookupSwitchInsn(label27, intArray34, labelArray48);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) '4', (int) '#', label15, labelArray48);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label55, label56, (int) (short) 0);
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor0.visitLabel(label59);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray48);
    }

    @Test
    public void test04608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04608");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label17);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label20);
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (int) (short) 10);
        java.util.List list25 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(list25);
    }

    @Test
    public void test04609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04609");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierClassVisitor15.visitAnnotation("", false);
        aSMifierClassVisitor15.visitSource("hi!", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj40 = null;
        aSMifierMethodVisitor31.visitLdcInsn(obj40);
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor31.visitJumpInsn((int) (short) 1, label43);
        aSMifierMethodVisitor31.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor31.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor31.visitAnnotationDefault();
        aSMifierMethodVisitor31.visitInsn((int) (byte) 1);
        aSMifierMethodVisitor31.visitVarInsn(100, 0);
        aSMifierMethodVisitor31.visitMultiANewArrayInsn("", (int) (byte) -1);
        aSMifierMethodVisitor31.visitEnd();
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor31.visitLineNumber((int) 'a', label62);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor31.visitParameterAnnotation((int) (byte) -1, "hi!", false);
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor31.visitLocalVariable("", "hi!", "hi!", label71, label72, (int) (short) 1);
        org.mockito.asm.FieldVisitor fieldVisitor75 = aSMifierClassVisitor15.visitField((int) (short) 0, "", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor31);
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = fieldVisitor75.visitAnnotation("", true);
        java.lang.Class<?> wildcardClass79 = annotationVisitor78.getClass();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(fieldVisitor75);
        org.junit.Assert.assertNotNull(annotationVisitor78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test04610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04610");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor0.visitInsn((int) (short) 100);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "", "", "hi!");
    }

    @Test
    public void test04611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04611");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        printWriter1.print(0L);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print(0.0d);
        printWriter1.print((int) 'a');
        java.util.Locale locale14 = null;
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("hi!");
        printWriter17.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter22 = printWriter17.format("", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter23 = printWriter1.format(locale14, "", (java.lang.Object[]) strArray21);
        printWriter23.print((long) 100);
        java.io.PrintWriter printWriter27 = printWriter23.append(' ');
        java.lang.Class<?> wildcardClass28 = printWriter27.getClass();
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test04612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04612");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        printWriter1.print((float) 1L);
        printWriter1.flush();
        printWriter1.println(false);
        printWriter1.println(true);
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
    }

    @Test
    public void test04613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04613");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor0.visitInsn(1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 0);
        aSMifierMethodVisitor0.visitInsn((int) (short) 100);
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 1, label17);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor21.visitTryCatchBlock(label22, label23, label24, "");
        aSMifierMethodVisitor21.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj30 = null;
        aSMifierMethodVisitor21.visitLdcInsn(obj30);
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor21.visitJumpInsn((int) (short) 1, label33);
        aSMifierMethodVisitor21.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj50 = null;
        aSMifierMethodVisitor41.visitLdcInsn(obj50);
        org.mockito.asm.Label label52 = null;
        int[] intArray59 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor60.visitTryCatchBlock(label61, label62, label63, "");
        aSMifierMethodVisitor60.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label[] labelArray73 = new org.mockito.asm.Label[] { label72 };
        aSMifierMethodVisitor60.visitTableSwitchInsn(0, (int) (byte) 10, label71, labelArray73);
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label52, intArray59, labelArray73);
        aSMifierMethodVisitor21.visitTableSwitchInsn((int) 'a', 10, label40, labelArray73);
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierMethodVisitor21.visitAnnotation("", true);
        org.mockito.asm.Label label81 = null;
        aSMifierMethodVisitor21.visitJumpInsn((int) (byte) 0, label81);
        org.mockito.asm.Label label83 = null;
        aSMifierMethodVisitor21.visitLabel(label83);
        aSMifierMethodVisitor21.visitMaxs((int) '4', (int) ' ');
        annotationVisitor19.visit("", (java.lang.Object) aSMifierMethodVisitor21);
        aSMifierMethodVisitor21.visitMaxs((int) '#', 10);
        aSMifierMethodVisitor21.visitInsn((int) ' ');
        java.util.List list94 = aSMifierMethodVisitor21.text;
        aSMifierMethodVisitor21.visitMultiANewArrayInsn("", (int) (byte) -1);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray73);
        org.junit.Assert.assertNotNull(annotationVisitor79);
        org.junit.Assert.assertNotNull(list94);
    }

    @Test
    public void test04614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04614");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list22 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(list22);
    }

    @Test
    public void test04615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04615");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitOuterClass("", "", "hi!");
        aSMifierClassVisitor28.visitSource("hi!", "hi!");
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "");
        org.mockito.asm.Attribute attribute47 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor28.visitAttribute(attribute47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor35);
    }

    @Test
    public void test04616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04616");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        java.util.List list12 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        org.junit.Assert.assertNotNull(list12);
    }

    @Test
    public void test04617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04617");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter24.println(1L);
        printWriter24.println((-1L));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj41 = null;
        aSMifierMethodVisitor32.visitLdcInsn(obj41);
        aSMifierMethodVisitor32.visitInsn((int) ' ');
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor48.visitTryCatchBlock(label49, label50, label51, "");
        aSMifierMethodVisitor48.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj57 = null;
        aSMifierMethodVisitor48.visitLdcInsn(obj57);
        org.mockito.asm.Label label59 = null;
        int[] intArray66 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor67.visitTryCatchBlock(label68, label69, label70, "");
        aSMifierMethodVisitor67.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] { label79 };
        aSMifierMethodVisitor67.visitTableSwitchInsn(0, (int) (byte) 10, label78, labelArray80);
        aSMifierMethodVisitor48.visitLookupSwitchInsn(label59, intArray66, labelArray80);
        aSMifierMethodVisitor32.visitTableSwitchInsn((int) '4', (int) '#', label47, labelArray80);
        java.io.PrintWriter printWriter84 = printWriter24.format("hi!", (java.lang.Object[]) labelArray80);
        printWriter84.println((long) 100);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test04618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04618");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        aSMifierMethodVisitor0.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label20, label21, label22, "hi!");
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label25, label26, label27, "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 1, "hi!", "", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test04619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04619");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter27 = printWriter23.append((java.lang.CharSequence) "");
        printWriter27.close();
        printWriter27.println(true);
        java.util.Locale locale31 = null;
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter36 = printWriter34.append('a');
        printWriter34.print("hi!");
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter34, false);
        printWriter40.write("hi!");
        printWriter40.println(' ');
        java.util.Locale locale45 = null;
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        java.util.Locale locale49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray56 = null;
        aSMifierMethodVisitor51.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray54, (int) (short) 1, objArray56);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor59.visitTryCatchBlock(label60, label61, label62, "");
        aSMifierMethodVisitor59.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray68 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray70 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor59, strArray68, 1.0f };
        java.io.PrintWriter printWriter71 = printWriter48.printf(locale49, "", (java.lang.Object[]) strArray68);
        java.io.PrintWriter printWriter72 = printWriter40.printf(locale45, "", (java.lang.Object[]) strArray68);
        java.io.PrintWriter printWriter73 = printWriter27.format(locale31, "", (java.lang.Object[]) strArray68);
        aSMifierClassVisitor15.visit(0, (int) (short) 10, "hi!", "hi!", "", strArray68);
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitInnerClass("hi!", "", "", (int) (short) 1);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(printWriter73);
    }

    @Test
    public void test04620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04620");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        java.util.List list14 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMaxs((int) (short) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotation("", true);
        java.lang.Object obj21 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj21);
        aSMifierMethodVisitor0.visitFieldInsn((int) 'a', "hi!", "", "");
        org.mockito.asm.Label label30 = null;
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        printWriter32.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] { label48 };
        aSMifierMethodVisitor36.visitTableSwitchInsn(0, (int) (byte) 10, label47, labelArray49);
        java.io.PrintWriter printWriter51 = printWriter32.printf("hi!", (java.lang.Object[]) labelArray49);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (short) 100, (int) (short) 1, label30, labelArray49);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((-1), 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(printWriter51);
    }

    @Test
    public void test04621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04621");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        java.util.List list24 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 10, (int) (short) 100);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label31, label32, (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = annotationVisitor35.visitAnnotation("", "");
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor38);
    }

    @Test
    public void test04622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04622");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs(1, 10);
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor0.visitLabel(label64);
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label66, label67, label68, "");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 100);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs(0, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
    }

    @Test
    public void test04623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04623");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        printWriter1.print((float) 1L);
        printWriter1.flush();
        printWriter1.println(false);
        printWriter1.println((double) 100);
        printWriter1.println((int) (byte) -1);
        printWriter1.print((long) 0);
        printWriter1.println((int) '4');
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
    }

    @Test
    public void test04624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04624");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor7.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor7.visitAnnotationDefault();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        java.io.PrintWriter printWriter50 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray48);
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor7.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray48, 1, (java.lang.Object[]) strArray52);
        java.io.PrintWriter printWriter54 = printWriter1.format("hi!", (java.lang.Object[]) strArray52);
        printWriter1.print(0.0f);
        printWriter1.println((long) 10);
        printWriter1.write("hi!");
        printWriter1.flush();
        boolean boolean62 = printWriter1.checkError();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test04625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04625");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        java.util.Locale locale13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray20 = null;
        aSMifierMethodVisitor15.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray18, (int) (short) 1, objArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor23, strArray32, 1.0f };
        java.io.PrintWriter printWriter35 = printWriter12.printf(locale13, "", (java.lang.Object[]) strArray32);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, true);
        printWriter8.println((java.lang.Object) printWriter37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor40.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label52 = null;
        int[] intArray54 = new int[] { (byte) 0 };
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter("hi!");
        printWriter56.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor60.visitTryCatchBlock(label61, label62, label63, "");
        aSMifierMethodVisitor60.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label[] labelArray73 = new org.mockito.asm.Label[] { label72 };
        aSMifierMethodVisitor60.visitTableSwitchInsn(0, (int) (byte) 10, label71, labelArray73);
        java.io.PrintWriter printWriter75 = printWriter56.printf("hi!", (java.lang.Object[]) labelArray73);
        aSMifierMethodVisitor40.visitLookupSwitchInsn(label52, intArray54, labelArray73);
        java.io.PrintWriter printWriter77 = printWriter8.printf("hi!", (java.lang.Object[]) labelArray73);
        boolean boolean78 = printWriter77.checkError();
        printWriter77.write("", (int) (byte) 1, 0);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0]");
        org.junit.Assert.assertNotNull(labelArray73);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test04626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04626");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) ' ', label20);
        aSMifierMethodVisitor0.visitIntInsn((int) '#', (int) (short) 1);
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLabel(label25);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 0, "", "hi!", "");
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label32, label33, label34, "hi!");
        aSMifierMethodVisitor0.visitIntInsn(100, 0);
        aSMifierMethodVisitor0.visitIincInsn((int) '#', (int) (short) 100);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "", "hi!", "");
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(annotationVisitor46);
    }

    @Test
    public void test04627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04627");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        java.io.PrintWriter printWriter37 = printWriter34.append((java.lang.CharSequence) "");
        printWriter34.print((float) 10);
        printWriter34.write("hi!");
        printWriter34.println((long) ' ');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(printWriter37);
    }

    @Test
    public void test04628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04628");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "hi!", "");
        aSMifierMethodVisitor0.visitTypeInsn((int) '4', "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test04629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04629");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotation("", false);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        java.util.Locale locale19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray24 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray26 = null;
        aSMifierMethodVisitor21.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray24, (int) (short) 1, objArray26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor29.visitTryCatchBlock(label30, label31, label32, "");
        aSMifierMethodVisitor29.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray40 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor29, strArray38, 1.0f };
        java.io.PrintWriter printWriter41 = printWriter18.printf(locale19, "", (java.lang.Object[]) strArray38);
        java.io.PrintWriter printWriter43 = printWriter41.append((java.lang.CharSequence) "");
        printWriter41.print((long) (byte) 10);
        aSMifierMethodVisitor0.print(printWriter41);
        printWriter41.println();
        printWriter41.print((double) 0L);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertNotNull(printWriter43);
    }

    @Test
    public void test04630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04630");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        aSMifierMethodVisitor0.visitFieldInsn(1, "hi!", "", "");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test04631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04631");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor4.visitSource("", "hi!");
        aSMifierClassVisitor4.visitInnerClass("", "hi!", "hi!", (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor4.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor15);
    }

    @Test
    public void test04632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04632");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter24.println(1L);
        printWriter24.println((-1L));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj41 = null;
        aSMifierMethodVisitor32.visitLdcInsn(obj41);
        aSMifierMethodVisitor32.visitInsn((int) ' ');
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor48.visitTryCatchBlock(label49, label50, label51, "");
        aSMifierMethodVisitor48.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj57 = null;
        aSMifierMethodVisitor48.visitLdcInsn(obj57);
        org.mockito.asm.Label label59 = null;
        int[] intArray66 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor67.visitTryCatchBlock(label68, label69, label70, "");
        aSMifierMethodVisitor67.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] { label79 };
        aSMifierMethodVisitor67.visitTableSwitchInsn(0, (int) (byte) 10, label78, labelArray80);
        aSMifierMethodVisitor48.visitLookupSwitchInsn(label59, intArray66, labelArray80);
        aSMifierMethodVisitor32.visitTableSwitchInsn((int) '4', (int) '#', label47, labelArray80);
        java.io.PrintWriter printWriter84 = printWriter24.format("hi!", (java.lang.Object[]) labelArray80);
        printWriter24.print((long) 'a');
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter90 = printWriter24.append((java.lang.CharSequence) "", (int) '#', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test04633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04633");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 10, "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor27.visitEnum("hi!", "", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor27);
    }

    @Test
    public void test04634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04634");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        java.util.List list22 = aSMifierClassVisitor15.getText();
        java.util.List list23 = aSMifierClassVisitor15.text;
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.write((-1));
        printWriter29.flush();
        java.util.Locale locale33 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray40 = null;
        aSMifierMethodVisitor35.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray38, (int) (short) 1, objArray40);
        java.io.PrintWriter printWriter42 = printWriter29.printf(locale33, "", (java.lang.Object[]) strArray38);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor43 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter29);
        aSMifierClassVisitor43.visitEnd();
        aSMifierClassVisitor43.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor52.visitTryCatchBlock(label53, label54, label55, "");
        org.mockito.asm.FieldVisitor fieldVisitor58 = aSMifierClassVisitor43.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor63.visitTryCatchBlock(label64, label65, label66, "");
        aSMifierMethodVisitor63.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj72 = null;
        aSMifierMethodVisitor63.visitLdcInsn(obj72);
        aSMifierMethodVisitor63.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list76 = aSMifierMethodVisitor63.getText();
        org.mockito.asm.FieldVisitor fieldVisitor77 = aSMifierClassVisitor43.visitField((int) (byte) -1, "", "", "", (java.lang.Object) list76);
        org.mockito.asm.FieldVisitor fieldVisitor78 = aSMifierClassVisitor15.visitField(10, "", "hi!", "", (java.lang.Object) aSMifierClassVisitor43);
        aSMifierClassVisitor43.visitInnerClass("hi!", "hi!", "hi!", (-1));
        aSMifierClassVisitor43.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor89 = aSMifierClassVisitor43.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(list76);
        org.junit.Assert.assertNotNull(fieldVisitor77);
        org.junit.Assert.assertNotNull(fieldVisitor78);
        org.junit.Assert.assertNotNull(annotationVisitor89);
    }

    @Test
    public void test04635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04635");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        printWriter34.println("");
        printWriter34.print((int) ' ');
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter((java.io.Writer) printWriter34, false);
        java.io.PrintWriter printWriter44 = printWriter34.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor45.visitLocalVariable("hi!", "hi!", "hi!", label54, label55, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor45.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor45.visitAnnotationDefault();
        java.util.List list62 = aSMifierMethodVisitor45.getText();
        printWriter34.println((java.lang.Object) aSMifierMethodVisitor45);
        aSMifierMethodVisitor45.visitMethodInsn((int) (byte) 0, "", "", "hi!");
        aSMifierMethodVisitor45.visitFieldInsn((int) (byte) 100, "", "", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(list62);
    }

    @Test
    public void test04636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04636");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitInsn((int) (byte) 100);
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor0.visitLabel(label13);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 10, "");
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, (int) (short) 0);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 100, label22);
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "hi!", label27, label28, (int) (byte) -1);
    }

    @Test
    public void test04637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04637");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        org.mockito.asm.Label label29 = null;
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "");
        printWriter31.print((double) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor39.visitJumpInsn((int) (short) 1, label51);
        aSMifierMethodVisitor39.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor39.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor39.visitAnnotationDefault();
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter("hi!");
        printWriter63.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor67.visitTryCatchBlock(label68, label69, label70, "");
        aSMifierMethodVisitor67.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] { label79 };
        aSMifierMethodVisitor67.visitTableSwitchInsn(0, (int) (byte) 10, label78, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter63.printf("hi!", (java.lang.Object[]) labelArray80);
        java.lang.String[] strArray84 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor39.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray80, 1, (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter86 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray80);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (short) 100, (int) (short) 1, label29, labelArray80);
        org.mockito.asm.Label label88 = null;
        org.mockito.asm.Label label89 = null;
        org.mockito.asm.Label label90 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label88, label89, label90, "");
        aSMifierMethodVisitor0.visitTypeInsn(0, "");
        org.mockito.asm.Attribute attribute96 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter86);
    }

    @Test
    public void test04638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04638");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label27 = null;
        int[] intArray34 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        aSMifierMethodVisitor16.visitLookupSwitchInsn(label27, intArray34, labelArray48);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) '4', (int) '#', label15, labelArray48);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label55, label56, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, (int) (byte) 100);
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label68, label69, label70, "");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test04639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04639");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.lang.Object[] objArray27 = null;
        java.io.PrintWriter printWriter28 = printWriter25.printf("hi!", objArray27);
        printWriter25.println(100);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        java.util.Locale locale33 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray40 = null;
        aSMifierMethodVisitor35.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray38, (int) (short) 1, objArray40);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor43.visitTryCatchBlock(label44, label45, label46, "");
        aSMifierMethodVisitor43.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray54 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor43, strArray52, 1.0f };
        java.io.PrintWriter printWriter55 = printWriter32.printf(locale33, "", (java.lang.Object[]) strArray52);
        java.io.PrintWriter printWriter57 = printWriter55.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter59 = printWriter55.append((java.lang.CharSequence) "hi!");
        printWriter59.print("hi!");
        char[] charArray68 = new char[] { 'a', '#', ' ', ' ', '4', 'a' };
        printWriter59.println(charArray68);
        printWriter25.write(charArray68);
        printWriter25.println((long) ' ');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a#  4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a#  4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a, #,  ,  , 4, a]");
    }

    @Test
    public void test04640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04640");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter5.print((float) 'a');
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        // The following exception was thrown during execution in test generation
        try {
            printWriter5.write("", 0, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test04641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04641");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("hi!");
        printWriter2.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter6 = printWriter2.append((java.lang.CharSequence) "");
        printWriter2.print((int) (byte) -1);
        printWriter2.write("", (int) (byte) 1, (int) (short) 0);
        printWriter2.print((double) (byte) -1);
        aSMifierMethodVisitor0.print(printWriter2);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = annotationVisitor18.visitArray("hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = annotationVisitor18.visitAnnotation("hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = annotationVisitor18.visitArray("hi!");
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(annotationVisitor25);
    }

    @Test
    public void test04642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04642");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println((int) (short) 10);
        printWriter24.print('#');
        printWriter24.print(false);
        java.io.PrintWriter printWriter32 = printWriter24.append('#');
        java.io.PrintWriter printWriter34 = printWriter24.append('a');
        printWriter34.println("hi!");
        printWriter34.close();
        boolean boolean38 = printWriter34.checkError();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test04643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04643");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        java.util.Locale locale23 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray28 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray30 = null;
        aSMifierMethodVisitor25.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray28, (int) (short) 1, objArray30);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor33.visitTryCatchBlock(label34, label35, label36, "");
        aSMifierMethodVisitor33.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray44 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor33, strArray42, 1.0f };
        java.io.PrintWriter printWriter45 = printWriter22.printf(locale23, "", (java.lang.Object[]) strArray42);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.Writer) printWriter45, true);
        printWriter20.print((java.lang.Object) printWriter47);
        java.io.PrintWriter printWriter50 = printWriter20.append('4');
        printWriter20.write("");
        printWriter20.write("hi!");
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(printWriter45);
        org.junit.Assert.assertNotNull(printWriter50);
    }

    @Test
    public void test04644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04644");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor15);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 100, (int) '#');
        aSMifierMethodVisitor0.visitInsn((int) (short) 100);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label27);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "hi!", false);
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label36, label37, (int) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, 10);
        aSMifierMethodVisitor0.visitInsn(0);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor42);
    }

    @Test
    public void test04645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04645");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor0.visitMaxs(100, (int) '4');
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label18, label19, (int) (byte) 1);
        aSMifierMethodVisitor0.visitCode();
    }

    @Test
    public void test04646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04646");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor28.visitLocalVariable("hi!", "hi!", "hi!", label37, label38, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor28.visitAnnotation("", true);
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj54 = null;
        aSMifierMethodVisitor45.visitLdcInsn(obj54);
        org.mockito.asm.Label label56 = null;
        int[] intArray63 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] { label76 };
        aSMifierMethodVisitor64.visitTableSwitchInsn(0, (int) (byte) 10, label75, labelArray77);
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label56, intArray63, labelArray77);
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label44, intArray63, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter26.printf("hi!", (java.lang.Object[]) labelArray80);
        java.io.PrintWriter printWriter84 = printWriter82.append('a');
        java.io.PrintWriter printWriter86 = new java.io.PrintWriter((java.io.Writer) printWriter82, false);
        boolean boolean87 = printWriter86.checkError();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test04647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04647");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print(false);
        printWriter39.println(false);
        printWriter39.print(0L);
        java.io.PrintWriter printWriter47 = printWriter39.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("hi!");
        printWriter50.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter55 = printWriter50.format("", (java.lang.Object[]) strArray54);
        java.io.PrintWriter printWriter56 = printWriter39.printf("hi!", (java.lang.Object[]) strArray54);
        aSMifierClassVisitor28.visit((int) ' ', (int) '#', "", "", "hi!", strArray54);
        aSMifierClassVisitor28.visitSource("", "hi!");
        aSMifierClassVisitor28.visitEnd();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(printWriter56);
    }

    @Test
    public void test04648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04648");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj35 = null;
        aSMifierMethodVisitor26.visitLdcInsn(obj35);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor26.visitJumpInsn((int) (short) 1, label38);
        aSMifierMethodVisitor26.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor46.visitTryCatchBlock(label47, label48, label49, "");
        aSMifierMethodVisitor46.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj55 = null;
        aSMifierMethodVisitor46.visitLdcInsn(obj55);
        org.mockito.asm.Label label57 = null;
        int[] intArray64 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        aSMifierMethodVisitor65.visitTryCatchBlock(label66, label67, label68, "");
        aSMifierMethodVisitor65.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label[] labelArray78 = new org.mockito.asm.Label[] { label77 };
        aSMifierMethodVisitor65.visitTableSwitchInsn(0, (int) (byte) 10, label76, labelArray78);
        aSMifierMethodVisitor46.visitLookupSwitchInsn(label57, intArray64, labelArray78);
        aSMifierMethodVisitor26.visitTableSwitchInsn((int) 'a', 10, label45, labelArray78);
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = aSMifierMethodVisitor26.visitAnnotation("", true);
        org.mockito.asm.Label label86 = null;
        aSMifierMethodVisitor26.visitJumpInsn((int) (byte) 0, label86);
        org.mockito.asm.Label label88 = null;
        aSMifierMethodVisitor26.visitLabel(label88);
        aSMifierMethodVisitor26.visitMaxs((int) (byte) 0, (int) (short) 100);
        printWriter24.println((java.lang.Object) aSMifierMethodVisitor26);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor94 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        aSMifierClassVisitor94.visitOuterClass("", "", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray78);
        org.junit.Assert.assertNotNull(annotationVisitor84);
    }

    @Test
    public void test04649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04649");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((int) (byte) -1);
        printWriter1.print((double) (byte) 1);
        printWriter1.close();
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        java.util.Locale locale13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray20 = null;
        aSMifierMethodVisitor15.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray18, (int) (short) 1, objArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor23, strArray32, 1.0f };
        java.io.PrintWriter printWriter35 = printWriter12.printf(locale13, "", (java.lang.Object[]) strArray32);
        java.io.PrintWriter printWriter37 = printWriter35.append((java.lang.CharSequence) "");
        printWriter35.write((int) (byte) 0);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        java.util.Locale locale42 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray47 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray49 = null;
        aSMifierMethodVisitor44.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray47, (int) (short) 1, objArray49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor52.visitTryCatchBlock(label53, label54, label55, "");
        aSMifierMethodVisitor52.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray61 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray63 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor52, strArray61, 1.0f };
        java.io.PrintWriter printWriter64 = printWriter41.printf(locale42, "", (java.lang.Object[]) strArray61);
        char[] charArray71 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter64.println(charArray71);
        printWriter35.print(charArray71);
        printWriter1.write(charArray71, (int) 'a', 0);
        printWriter1.print("");
        printWriter1.write("hi!");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test04650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04650");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label21 = null;
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray29 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray31 = null;
        aSMifierMethodVisitor26.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray29, (int) (short) 1, objArray31);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor34.visitTryCatchBlock(label35, label36, label37, "");
        aSMifierMethodVisitor34.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray43 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray45 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor34, strArray43, 1.0f };
        java.io.PrintWriter printWriter46 = printWriter23.printf(locale24, "", (java.lang.Object[]) strArray43);
        java.io.PrintWriter printWriter48 = printWriter46.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter50 = printWriter46.append((java.lang.CharSequence) "hi!");
        printWriter46.print(false);
        java.util.Locale locale53 = null;
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter("hi!");
        printWriter56.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter60 = printWriter56.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor62.visitTryCatchBlock(label63, label64, label65, "");
        aSMifierMethodVisitor62.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj71 = null;
        aSMifierMethodVisitor62.visitLdcInsn(obj71);
        org.mockito.asm.Label label74 = null;
        aSMifierMethodVisitor62.visitJumpInsn((int) (short) 1, label74);
        aSMifierMethodVisitor62.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label[] labelArray82 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor62.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label81, labelArray82);
        java.io.PrintWriter printWriter84 = printWriter60.printf("", (java.lang.Object[]) labelArray82);
        java.io.PrintWriter printWriter85 = printWriter46.printf(locale53, "hi!", (java.lang.Object[]) labelArray82);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) -1, 10, label21, labelArray82);
        org.mockito.asm.Label label87 = null;
        org.mockito.asm.Label label88 = null;
        org.mockito.asm.Label label89 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label87, label88, label89, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor94 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.mockito.asm.Label label95 = null;
        aSMifierMethodVisitor0.visitLabel(label95);
        aSMifierMethodVisitor0.visitIntInsn((int) 'a', (-1));
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(labelArray82);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(annotationVisitor94);
    }

    @Test
    public void test04651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04651");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitInsn((int) (byte) 100);
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor0.visitLabel(label13);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor15.visitEnum("hi!", "hi!", "hi!");
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label[] labelArray39 = new org.mockito.asm.Label[] { label38 };
        aSMifierMethodVisitor26.visitTableSwitchInsn(0, (int) (byte) 10, label37, labelArray39);
        java.io.PrintWriter printWriter41 = printWriter22.printf("hi!", (java.lang.Object[]) labelArray39);
        java.io.PrintWriter printWriter43 = printWriter22.append((java.lang.CharSequence) "");
        printWriter43.close();
        java.io.PrintWriter printWriter46 = printWriter43.append(' ');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label48, label49, label50, "");
        aSMifierMethodVisitor47.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj56 = null;
        aSMifierMethodVisitor47.visitLdcInsn(obj56);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor47.visitAnnotationDefault();
        printWriter46.println((java.lang.Object) aSMifierMethodVisitor47);
        annotationVisitor15.visit("hi!", (java.lang.Object) printWriter46);
        printWriter46.print(true);
        printWriter46.close();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(labelArray39);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(annotationVisitor58);
    }

    @Test
    public void test04652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04652");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.println((float) (short) 0);
        printWriter1.println((long) 10);
    }

    @Test
    public void test04653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04653");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list13 = aSMifierMethodVisitor0.text;
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        printWriter15.write((-1));
        printWriter15.flush();
        java.util.Locale locale19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray24 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray26 = null;
        aSMifierMethodVisitor21.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray24, (int) (short) 1, objArray26);
        java.io.PrintWriter printWriter28 = printWriter15.printf(locale19, "", (java.lang.Object[]) strArray24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter15);
        aSMifierClassVisitor29.visitEnd();
        aSMifierClassVisitor29.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor29.visitEnd();
        aSMifierClassVisitor29.visitOuterClass("", "", "hi!");
        aSMifierClassVisitor29.visitEnd();
        aSMifierClassVisitor29.visitSource("", "");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierClassVisitor29);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor49.visitMaxs(100, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor49.visitParameterAnnotation(100, "", false);
        org.mockito.asm.FieldVisitor fieldVisitor65 = aSMifierClassVisitor29.visitField((int) (short) 1, "", "", "", (java.lang.Object) aSMifierMethodVisitor49);
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierClassVisitor29.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(fieldVisitor65);
        org.junit.Assert.assertNotNull(annotationVisitor68);
    }

    @Test
    public void test04654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04654");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs((int) (byte) -1, 10);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label28, label29, label30, "hi!");
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 10, "");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test04655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04655");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitOuterClass("", "", "hi!");
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter("hi!");
        java.util.Locale locale46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray51 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray53 = null;
        aSMifierMethodVisitor48.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray51, (int) (short) 1, objArray53);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor56.visitTryCatchBlock(label57, label58, label59, "");
        aSMifierMethodVisitor56.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray65 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray67 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor56, strArray65, 1.0f };
        java.io.PrintWriter printWriter68 = printWriter45.printf(locale46, "", (java.lang.Object[]) strArray65);
        char[] charArray75 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter68.println(charArray75);
        java.io.PrintWriter printWriter78 = new java.io.PrintWriter((java.io.Writer) printWriter68, true);
        printWriter78.print((float) (byte) 10);
        org.mockito.asm.FieldVisitor fieldVisitor81 = aSMifierClassVisitor28.visitField((int) ' ', "hi!", "", "", (java.lang.Object) printWriter78);
        boolean boolean82 = printWriter78.checkError();
        printWriter78.print('4');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(fieldVisitor81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test04656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04656");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter17 = printWriter15.append('a');
        printWriter15.print("hi!");
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter((java.io.Writer) printWriter15, false);
        printWriter21.write("hi!");
        printWriter21.println(' ');
        printWriter21.write((int) (short) 10);
        printWriter21.print(false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) false);
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 1, "hi!", "", "hi!");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(printWriter17);
    }

    @Test
    public void test04657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04657");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append(' ');
        printWriter28.println(true);
        printWriter28.flush();
        printWriter28.println((long) (short) 0);
        printWriter28.print(' ');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        java.io.PrintWriter printWriter38 = printWriter28.append('#');
        printWriter38.write((int) (byte) 10);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(printWriter38);
    }

    @Test
    public void test04658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04658");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor24.visitLocalVariable("hi!", "hi!", "hi!", label33, label34, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor24.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor24.visitAnnotationDefault();
        annotationVisitor40.visitEnum("", "hi!", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor45 = aSMifierClassVisitor15.visitField((int) '#', "", "", "", (java.lang.Object) "hi!");
        aSMifierClassVisitor15.visitSource("", "");
        aSMifierClassVisitor15.visitInnerClass("hi!", "", "", (int) ' ');
        java.lang.Object obj58 = null;
        org.mockito.asm.FieldVisitor fieldVisitor59 = aSMifierClassVisitor15.visitField((-1), "hi!", "hi!", "", obj58);
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = fieldVisitor59.visitAnnotation("hi!", false);
        org.mockito.asm.Attribute attribute63 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor59.visitAttribute(attribute63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor62);
    }

    @Test
    public void test04659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04659");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        aSMifierMethodVisitor0.visitVarInsn(100, 0);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) -1);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label31);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) -1, "hi!", false);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) -1, (int) '4');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) ' ');
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor36);
    }

    @Test
    public void test04660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04660");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        aSMifierMethodVisitor31.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj40 = null;
        aSMifierMethodVisitor31.visitLdcInsn(obj40);
        aSMifierMethodVisitor31.visitInsn((int) ' ');
        aSMifierMethodVisitor31.visitIincInsn((int) (byte) 100, (int) (short) 1);
        aSMifierMethodVisitor31.visitTypeInsn((int) (byte) 0, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor31.visitAnnotationDefault();
        org.mockito.asm.FieldVisitor fieldVisitor51 = aSMifierClassVisitor15.visitField((int) (short) 10, "hi!", "", "", (java.lang.Object) aSMifierMethodVisitor31);
        fieldVisitor51.visitEnd();
        org.mockito.asm.Attribute attribute53 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor51.visitAttribute(attribute53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor51);
    }

    @Test
    public void test04661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04661");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLabel(label17);
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter("hi!");
        printWriter20.write((-1));
        printWriter20.flush();
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray29 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray31 = null;
        aSMifierMethodVisitor26.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray29, (int) (short) 1, objArray31);
        java.io.PrintWriter printWriter33 = printWriter20.printf(locale24, "", (java.lang.Object[]) strArray29);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter20);
        printWriter20.print((double) 'a');
        printWriter20.print(false);
        aSMifierMethodVisitor0.print(printWriter20);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter33);
    }

    @Test
    public void test04662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04662");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        printWriter1.print((long) 0);
        boolean boolean7 = printWriter1.checkError();
        printWriter1.close();
        printWriter1.print((int) (short) -1);
        java.io.PrintWriter printWriter12 = printWriter1.append(' ');
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(printWriter12);
    }

    @Test
    public void test04663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04663");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.io.PrintWriter printWriter33 = printWriter26.append('4');
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter26);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter26, false);
        printWriter26.close();
        printWriter26.println((float) (byte) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj49 = null;
        aSMifierMethodVisitor40.visitLdcInsn(obj49);
        aSMifierMethodVisitor40.visitInsn((int) ' ');
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor40.visitJumpInsn(100, label54);
        aSMifierMethodVisitor40.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor40.visitCode();
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor40.visitLineNumber((int) (byte) 0, label61);
        printWriter26.println((java.lang.Object) (byte) 0);
        printWriter26.println(' ');
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter((java.io.Writer) printWriter26, true);
        printWriter26.print((long) (byte) 100);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter33);
    }

    @Test
    public void test04664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04664");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter6.println();
        printWriter6.print((float) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor11.visitTryCatchBlock(label12, label13, label14, "");
        aSMifierMethodVisitor11.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj20 = null;
        aSMifierMethodVisitor11.visitLdcInsn(obj20);
        aSMifierMethodVisitor11.visitInsn((int) ' ');
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor11.visitJumpInsn(100, label25);
        aSMifierMethodVisitor11.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label30 = null;
        int[] intArray31 = new int[] {};
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter37 = printWriter33.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor39.visitJumpInsn((int) (short) 1, label51);
        aSMifierMethodVisitor39.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label[] labelArray59 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label58, labelArray59);
        java.io.PrintWriter printWriter61 = printWriter37.printf("", (java.lang.Object[]) labelArray59);
        aSMifierMethodVisitor11.visitLookupSwitchInsn(label30, intArray31, labelArray59);
        java.io.PrintWriter printWriter63 = printWriter6.printf("", (java.lang.Object[]) labelArray59);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter6, true);
        java.io.PrintWriter printWriter67 = printWriter6.append(' ');
        printWriter67.println(0.0f);
        printWriter67.flush();
        java.io.PrintWriter printWriter72 = printWriter67.append('#');
        printWriter67.write((int) (byte) 100);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(labelArray59);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(printWriter72);
    }

    @Test
    public void test04665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04665");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label23, label24, 0);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 100, "", true);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test04666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04666");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println((-1.0d));
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter5.print("hi!");
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter5, false);
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        printWriter5.println((int) (short) 100);
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test04667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04667");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", true);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        printWriter49.print("hi!");
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter((java.io.Writer) printWriter49);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor53 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter52);
        aSMifierClassVisitor53.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierClassVisitor53.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierClassVisitor53.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) false);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 10, 10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 100);
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor0.visitLabel(label70);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor62);
    }

    @Test
    public void test04668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04668");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor24.visitLocalVariable("hi!", "hi!", "hi!", label33, label34, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor24.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor24.visitAnnotationDefault();
        annotationVisitor40.visitEnum("", "hi!", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor45 = aSMifierClassVisitor15.visitField((int) '#', "", "", "", (java.lang.Object) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor50.visitTryCatchBlock(label51, label52, label53, "");
        aSMifierMethodVisitor50.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj59 = null;
        aSMifierMethodVisitor50.visitLdcInsn(obj59);
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor50.visitJumpInsn((int) (short) 1, label62);
        aSMifierMethodVisitor50.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor50.visitLabel(label67);
        aSMifierMethodVisitor50.visitInsn(100);
        java.util.List list71 = aSMifierMethodVisitor50.getText();
        aSMifierMethodVisitor50.visitFieldInsn((int) '4', "hi!", "hi!", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor77 = aSMifierClassVisitor15.visitField((int) ' ', "", "", "hi!", (java.lang.Object) "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = fieldVisitor77.visitAnnotation("hi!", true);
        annotationVisitor80.visitEnum("hi!", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor86 = annotationVisitor80.visitArray("");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(fieldVisitor77);
        org.junit.Assert.assertNotNull(annotationVisitor80);
        org.junit.Assert.assertNotNull(annotationVisitor86);
    }

    @Test
    public void test04669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04669");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (byte) 0);
        java.util.List list32 = aSMifierClassVisitor15.getText();
        aSMifierClassVisitor15.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor15.visitAnnotation("", true);
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(annotationVisitor38);
    }

    @Test
    public void test04670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04670");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitFieldInsn(100, "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitInsn(0);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray29 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray31 = null;
        aSMifierMethodVisitor26.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray29, (int) (short) 1, objArray31);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor34.visitTryCatchBlock(label35, label36, label37, "");
        aSMifierMethodVisitor34.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray43 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray45 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor34, strArray43, 1.0f };
        java.io.PrintWriter printWriter46 = printWriter23.printf(locale24, "", (java.lang.Object[]) strArray43);
        aSMifierMethodVisitor0.print(printWriter23);
        printWriter23.println('a');
        // The following exception was thrown during execution in test generation
        try {
            printWriter23.write("hi!", 0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(printWriter46);
    }

    @Test
    public void test04671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04671");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter("hi!");
        printWriter5.println((-1.0d));
        printWriter1.print((java.lang.Object) (-1.0d));
        java.io.PrintWriter printWriter10 = printWriter1.append('a');
        printWriter10.print((double) ' ');
        printWriter10.println();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter10);
    }

    @Test
    public void test04672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04672");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter34.print((float) (byte) 10);
        printWriter34.println((float) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray44 = null;
        aSMifierMethodVisitor39.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray42, (int) (short) 1, objArray44);
        aSMifierMethodVisitor39.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor39.visitLdcInsn((java.lang.Object) ' ');
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor39.visitLineNumber((int) (short) 0, label54);
        printWriter34.println((java.lang.Object) (short) 0);
        printWriter34.println((double) (byte) 0);
        printWriter34.write("");
        printWriter34.close();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(strArray42);
    }

    @Test
    public void test04673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04673");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor24.visitLocalVariable("hi!", "hi!", "hi!", label33, label34, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor24.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor24.visitAnnotationDefault();
        annotationVisitor40.visitEnum("", "hi!", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor45 = aSMifierClassVisitor15.visitField((int) '#', "", "", "", (java.lang.Object) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor50.visitTryCatchBlock(label51, label52, label53, "");
        aSMifierMethodVisitor50.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj59 = null;
        aSMifierMethodVisitor50.visitLdcInsn(obj59);
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor50.visitJumpInsn((int) (short) 1, label62);
        aSMifierMethodVisitor50.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor50.visitLabel(label67);
        aSMifierMethodVisitor50.visitInsn(100);
        java.util.List list71 = aSMifierMethodVisitor50.getText();
        aSMifierMethodVisitor50.visitFieldInsn((int) '4', "hi!", "hi!", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor77 = aSMifierClassVisitor15.visitField((int) ' ', "", "", "hi!", (java.lang.Object) "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = fieldVisitor77.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = annotationVisitor80.visitArray("");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(fieldVisitor77);
        org.junit.Assert.assertNotNull(annotationVisitor80);
        org.junit.Assert.assertNotNull(annotationVisitor82);
    }

    @Test
    public void test04674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04674");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, (int) (short) 10);
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label64, label65, label66, "hi!");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 10);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 1, "hi!", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor79);
    }

    @Test
    public void test04675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04675");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj18 = null;
        aSMifierMethodVisitor9.visitLdcInsn(obj18);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor9.visitJumpInsn((int) (short) 1, label21);
        aSMifierMethodVisitor9.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor9.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor9.visitAnnotationDefault();
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] { label49 };
        aSMifierMethodVisitor37.visitTableSwitchInsn(0, (int) (byte) 10, label48, labelArray50);
        java.io.PrintWriter printWriter52 = printWriter33.printf("hi!", (java.lang.Object[]) labelArray50);
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor9.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray50, 1, (java.lang.Object[]) strArray54);
        java.io.PrintWriter printWriter56 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray50);
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter("hi!");
        printWriter59.write((-1));
        printWriter59.print((double) (byte) 10);
        java.util.Locale locale64 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor66.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label72 = null;
        java.io.PrintWriter printWriter74 = new java.io.PrintWriter("hi!");
        printWriter74.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor78 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        aSMifierMethodVisitor78.visitTryCatchBlock(label79, label80, label81, "");
        aSMifierMethodVisitor78.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label89 = null;
        org.mockito.asm.Label label90 = null;
        org.mockito.asm.Label[] labelArray91 = new org.mockito.asm.Label[] { label90 };
        aSMifierMethodVisitor78.visitTableSwitchInsn(0, (int) (byte) 10, label89, labelArray91);
        java.io.PrintWriter printWriter93 = printWriter74.printf("hi!", (java.lang.Object[]) labelArray91);
        aSMifierMethodVisitor66.visitTableSwitchInsn(1, (int) (short) 10, label72, labelArray91);
        java.io.PrintWriter printWriter95 = printWriter59.format(locale64, "hi!", (java.lang.Object[]) labelArray91);
        java.io.PrintWriter printWriter96 = printWriter1.printf("", (java.lang.Object[]) labelArray91);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor97 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print((-1L));
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(labelArray91);
        org.junit.Assert.assertNotNull(printWriter93);
        org.junit.Assert.assertNotNull(printWriter95);
        org.junit.Assert.assertNotNull(printWriter96);
    }

    @Test
    public void test04676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04676");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        java.io.PrintWriter printWriter36 = printWriter24.append((java.lang.CharSequence) "");
        printWriter36.print("");
        java.io.PrintWriter printWriter40 = printWriter36.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label[] labelArray54 = new org.mockito.asm.Label[] { label53 };
        aSMifierMethodVisitor41.visitTableSwitchInsn(0, (int) (byte) 10, label52, labelArray54);
        aSMifierMethodVisitor41.visitTypeInsn((int) (short) 10, "hi!");
        aSMifierMethodVisitor41.visitMaxs((int) (byte) 1, (int) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor41.visitAnnotation("", false);
        printWriter36.println((java.lang.Object) aSMifierMethodVisitor41);
        printWriter36.print((int) '4');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(labelArray54);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test04677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04677");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter24.print((float) 10L);
        printWriter24.print((long) 'a');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test04678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04678");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        java.util.List list24 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 10, (int) (short) 100);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        java.util.Locale locale30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray37 = null;
        aSMifierMethodVisitor32.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray35, (int) (short) 1, objArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray49 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray51 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor40, strArray49, 1.0f };
        java.io.PrintWriter printWriter52 = printWriter29.printf(locale30, "", (java.lang.Object[]) strArray49);
        char[] charArray59 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter52.println(charArray59);
        java.io.PrintWriter printWriter62 = new java.io.PrintWriter((java.io.Writer) printWriter52, true);
        boolean boolean63 = printWriter62.checkError();
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter((java.io.Writer) printWriter62);
        aSMifierMethodVisitor0.print(printWriter62);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) '4');
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test04679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04679");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label22);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        printWriter25.print(false);
        java.io.PrintWriter printWriter29 = printWriter25.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter29, true);
        printWriter31.print(0.0d);
        printWriter31.print((float) (-1L));
        printWriter31.print("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter31);
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label39, label40, label41, "");
        org.junit.Assert.assertNotNull(printWriter29);
    }

    @Test
    public void test04680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04680");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.lang.Class<?> wildcardClass13 = annotationVisitor12.getClass();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test04681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04681");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println((-1.0d));
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter("hi!");
        printWriter5.print(false);
        java.io.PrintWriter printWriter9 = printWriter5.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter5.println((double) (-1L));
        java.util.Locale locale13 = null;
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((java.lang.Object) (short) -1);
        printWriter16.flush();
        java.util.Locale locale20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor22.visitLocalVariable("hi!", "hi!", "hi!", label31, label32, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor22.visitAnnotation("", true);
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label50 = null;
        int[] intArray57 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label50, intArray57, labelArray71);
        org.mockito.asm.Label[] labelArray74 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label38, intArray57, labelArray74);
        java.io.PrintWriter printWriter76 = printWriter16.format(locale20, "hi!", (java.lang.Object[]) labelArray74);
        java.io.PrintWriter printWriter77 = printWriter5.format(locale13, "hi!", (java.lang.Object[]) labelArray74);
        printWriter1.println((java.lang.Object) printWriter5);
        printWriter5.println();
        printWriter5.print((double) (byte) 0);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(labelArray74);
        org.junit.Assert.assertNotNull(printWriter76);
        org.junit.Assert.assertNotNull(printWriter77);
    }

    @Test
    public void test04682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04682");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        aSMifierMethodVisitor0.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label20, label21, label22, "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 10, (int) (byte) 0);
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label29);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
    }

    @Test
    public void test04683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04683");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 10, "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = annotationVisitor17.visitArray("hi!");
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test04684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04684");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.println('a');
        printWriter26.println((int) ' ');
        printWriter26.print((double) 1L);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test04685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04685");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter1.write((int) (short) 1);
        printWriter1.write(0);
        printWriter1.close();
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter19 = printWriter17.append('a');
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter((java.io.Writer) printWriter19, true);
        java.util.Locale locale22 = null;
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        printWriter25.print(false);
        java.util.Locale locale28 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj39 = null;
        aSMifierMethodVisitor30.visitLdcInsn(obj39);
        aSMifierMethodVisitor30.visitInsn((int) ' ');
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor46.visitTryCatchBlock(label47, label48, label49, "");
        aSMifierMethodVisitor46.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj55 = null;
        aSMifierMethodVisitor46.visitLdcInsn(obj55);
        org.mockito.asm.Label label57 = null;
        int[] intArray64 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        aSMifierMethodVisitor65.visitTryCatchBlock(label66, label67, label68, "");
        aSMifierMethodVisitor65.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label[] labelArray78 = new org.mockito.asm.Label[] { label77 };
        aSMifierMethodVisitor65.visitTableSwitchInsn(0, (int) (byte) 10, label76, labelArray78);
        aSMifierMethodVisitor46.visitLookupSwitchInsn(label57, intArray64, labelArray78);
        aSMifierMethodVisitor30.visitTableSwitchInsn((int) '4', (int) '#', label45, labelArray78);
        java.io.PrintWriter printWriter82 = printWriter25.format(locale28, "hi!", (java.lang.Object[]) labelArray78);
        java.io.PrintWriter printWriter83 = printWriter21.printf(locale22, "", (java.lang.Object[]) labelArray78);
        java.io.PrintWriter printWriter84 = printWriter1.format("", (java.lang.Object[]) labelArray78);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray78);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test04686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04686");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLabel(label17);
        aSMifierMethodVisitor0.visitInsn(100);
        java.util.List list21 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLabel(label22);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter27 = printWriter25.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj37 = null;
        aSMifierMethodVisitor28.visitLdcInsn(obj37);
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor28.visitJumpInsn((int) (short) 1, label40);
        aSMifierMethodVisitor28.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor28.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierMethodVisitor28.visitAnnotationDefault();
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        printWriter52.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor56.visitTryCatchBlock(label57, label58, label59, "");
        aSMifierMethodVisitor56.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label[] labelArray69 = new org.mockito.asm.Label[] { label68 };
        aSMifierMethodVisitor56.visitTableSwitchInsn(0, (int) (byte) 10, label67, labelArray69);
        java.io.PrintWriter printWriter71 = printWriter52.printf("hi!", (java.lang.Object[]) labelArray69);
        java.lang.String[] strArray73 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor28.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray69, 1, (java.lang.Object[]) strArray73);
        printWriter27.println((java.lang.Object) strArray73);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) strArray73);
        java.util.List list77 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.mockito.asm.Label label84 = null;
        org.mockito.asm.Label label85 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label84, label85, (int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn((int) (byte) -1, "");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(labelArray69);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(list77);
        org.junit.Assert.assertNotNull(annotationVisitor80);
    }

    @Test
    public void test04687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04687");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        boolean boolean6 = printWriter5.checkError();
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        java.util.Locale locale9 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray14 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray16 = null;
        aSMifierMethodVisitor11.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray14, (int) (short) 1, objArray16);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor19.visitTryCatchBlock(label20, label21, label22, "");
        aSMifierMethodVisitor19.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray28 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray30 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor19, strArray28, 1.0f };
        java.io.PrintWriter printWriter31 = printWriter8.printf(locale9, "", (java.lang.Object[]) strArray28);
        printWriter31.print("hi!");
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter31);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor35 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter34);
        aSMifierClassVisitor35.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierClassVisitor35.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor46.visitTryCatchBlock(label47, label48, label49, "");
        aSMifierMethodVisitor46.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj55 = null;
        aSMifierMethodVisitor46.visitLdcInsn(obj55);
        aSMifierMethodVisitor46.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor46.visitLocalVariable("hi!", "hi!", "hi!", label63, label64, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = aSMifierMethodVisitor46.visitParameterAnnotation(0, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor71 = aSMifierClassVisitor35.visitField((int) ' ', "hi!", "hi!", "", (java.lang.Object) aSMifierMethodVisitor46);
        java.lang.String[] strArray76 = null;
        org.mockito.asm.MethodVisitor methodVisitor77 = aSMifierClassVisitor35.visitMethod(0, "hi!", "hi!", "", strArray76);
        methodVisitor77.visitIincInsn(100, (int) (short) 1);
        printWriter5.print((java.lang.Object) methodVisitor77);
        printWriter5.println(1);
        printWriter5.println((int) '4');
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(fieldVisitor71);
        org.junit.Assert.assertNotNull(methodVisitor77);
    }

    @Test
    public void test04688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04688");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 100);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) 'a', label19);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 10, 0);
        java.util.List list24 = aSMifierMethodVisitor0.text;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn((int) (byte) -1, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list24);
    }

    @Test
    public void test04689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04689");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitFieldInsn(100, "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "hi!", label23, label24, (int) (short) 1);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label30, label31, (int) (byte) 10);
        org.junit.Assert.assertNotNull(annotationVisitor13);
    }

    @Test
    public void test04690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04690");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label21, label22, label23, "");
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label29, label30, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", false);
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label38);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (byte) -1);
        aSMifierMethodVisitor0.visitVarInsn(10, 0);
        org.mockito.asm.Attribute attribute50 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor43);
    }

    @Test
    public void test04691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04691");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        boolean boolean6 = printWriter1.checkError();
        printWriter1.print((float) (byte) 10);
        printWriter1.print(0.0f);
        printWriter1.println('a');
        printWriter1.print((double) 1);
        printWriter1.print((long) 100);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test04692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04692");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, (int) (short) -1);
        aSMifierMethodVisitor0.visitVarInsn((int) ' ', 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label[] labelArray23 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTableSwitchInsn(10, (int) (short) 10, label22, labelArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test04693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04693");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter3.print(0);
        printWriter3.print((int) '#');
        printWriter3.println();
        org.junit.Assert.assertNotNull(printWriter3);
    }

    @Test
    public void test04694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04694");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor12.visitEnum("hi!", "", "");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor12);
    }

    @Test
    public void test04695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04695");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.write((-1));
        printWriter22.flush();
        java.util.Locale locale26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray31 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray33 = null;
        aSMifierMethodVisitor28.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray31, (int) (short) 1, objArray33);
        java.io.PrintWriter printWriter35 = printWriter22.printf(locale26, "", (java.lang.Object[]) strArray31);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter22);
        aSMifierClassVisitor36.visitEnd();
        aSMifierClassVisitor36.visitSource("", "hi!");
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor36.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray46);
        org.mockito.asm.MethodVisitor methodVisitor48 = aSMifierClassVisitor15.visitMethod((int) (short) 100, "hi!", "hi!", "", strArray46);
        aSMifierClassVisitor15.visitInnerClass("", "", "", (int) (short) 100);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "hi!");
        java.util.List list59 = aSMifierClassVisitor15.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodVisitor48);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(annotationVisitor62);
    }

    @Test
    public void test04696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04696");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitMaxs(0, (-1));
        aSMifierMethodVisitor9.visitCode();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor9);
        aSMifierMethodVisitor9.visitVarInsn((int) (short) 10, (int) (short) 10);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj35 = null;
        aSMifierMethodVisitor26.visitLdcInsn(obj35);
        aSMifierMethodVisitor26.visitEnd();
        aSMifierMethodVisitor26.visitMaxs((int) (byte) 0, (int) (short) 1);
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label[] labelArray44 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor26.visitTableSwitchInsn((-1), (int) (byte) 0, label43, labelArray44);
        aSMifierMethodVisitor9.visitTableSwitchInsn(0, (int) '4', label25, labelArray44);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor9.visitFieldInsn((-1), "hi!", "hi!", "");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(labelArray44);
    }

    @Test
    public void test04697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04697");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", true);
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label26);
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLabel(label28);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitAnnotation("", true);
        annotationVisitor32.visitEnd();
        annotationVisitor32.visitEnum("", "", "");
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test04698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04698");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label22);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        printWriter25.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter29 = printWriter25.append((java.lang.CharSequence) "");
        printWriter25.print((int) (byte) -1);
        printWriter25.print((double) (byte) 1);
        printWriter25.close();
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter((java.io.Writer) printWriter25);
        boolean boolean36 = printWriter25.checkError();
        printWriter25.println((long) (byte) 100);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter25, true);
        aSMifierMethodVisitor0.print(printWriter40);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) '#');
        aSMifierMethodVisitor0.visitMaxs((int) (short) 10, 1);
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label48, label49, label50, "hi!");
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test04699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04699");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        annotationVisitor58.visitEnum("", "hi!", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj73 = null;
        aSMifierMethodVisitor64.visitLdcInsn(obj73);
        aSMifierMethodVisitor64.visitInsn((int) ' ');
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor64.visitJumpInsn(100, label78);
        aSMifierMethodVisitor64.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor64.visitCode();
        org.mockito.asm.Label label85 = null;
        aSMifierMethodVisitor64.visitLineNumber((int) (byte) 1, label85);
        aSMifierMethodVisitor64.visitVarInsn((int) '4', 1);
        annotationVisitor58.visit("", (java.lang.Object) aSMifierMethodVisitor64);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
    }

    @Test
    public void test04700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04700");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs((int) (short) 100, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 1, "", false);
        aSMifierMethodVisitor0.visitVarInsn((int) ' ', (int) (byte) 1);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "hi!", "hi!", "");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test04701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04701");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        aSMifierMethodVisitor0.visitMethodInsn(10, "", "hi!", "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label17, label18, (int) (short) -1);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label25, label26, (int) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLabel(label30);
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor0.visitLineNumber(100, label33);
        org.junit.Assert.assertNotNull(annotationVisitor29);
    }

    @Test
    public void test04702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04702");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.write((-1));
        printWriter22.flush();
        java.util.Locale locale26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray31 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray33 = null;
        aSMifierMethodVisitor28.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray31, (int) (short) 1, objArray33);
        java.io.PrintWriter printWriter35 = printWriter22.printf(locale26, "", (java.lang.Object[]) strArray31);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter22);
        aSMifierClassVisitor36.visitEnd();
        aSMifierClassVisitor36.visitSource("", "hi!");
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor36.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray46);
        org.mockito.asm.MethodVisitor methodVisitor48 = aSMifierClassVisitor15.visitMethod((int) (short) 100, "hi!", "hi!", "", strArray46);
        aSMifierClassVisitor15.visitInnerClass("", "", "", (int) (short) 100);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "hi!");
        java.util.List list59 = aSMifierClassVisitor15.getText();
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierClassVisitor15.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodVisitor48);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(annotationVisitor63);
    }

    @Test
    public void test04703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04703");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 10);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label78);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, (int) (short) 100);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label85 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label85);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "hi!");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn((-1), "hi!", "hi!", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
    }

    @Test
    public void test04704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04704");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter34.print((float) (byte) 10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor37 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter34);
        printWriter34.write((int) ' ');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test04705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04705");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        boolean boolean6 = printWriter1.checkError();
        printWriter1.println((double) 0);
        java.io.PrintWriter printWriter10 = printWriter1.append('a');
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        java.util.Locale locale13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray20 = null;
        aSMifierMethodVisitor15.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray18, (int) (short) 1, objArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor23, strArray32, 1.0f };
        java.io.PrintWriter printWriter35 = printWriter12.printf(locale13, "", (java.lang.Object[]) strArray32);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, true);
        printWriter35.print("");
        java.io.PrintWriter printWriter41 = printWriter35.append('#');
        printWriter1.println((java.lang.Object) printWriter41);
        printWriter41.print("hi!");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter41);
    }

    @Test
    public void test04706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04706");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] { label12 };
        aSMifierMethodVisitor0.visitTableSwitchInsn(0, (int) (byte) 10, label11, labelArray13);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 10, "hi!");
        org.mockito.asm.Label label20 = null;
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        java.util.Locale locale23 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray28 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray30 = null;
        aSMifierMethodVisitor25.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray28, (int) (short) 1, objArray30);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor33.visitTryCatchBlock(label34, label35, label36, "");
        aSMifierMethodVisitor33.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray44 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor33, strArray42, 1.0f };
        java.io.PrintWriter printWriter45 = printWriter22.printf(locale23, "", (java.lang.Object[]) strArray42);
        printWriter45.println((int) (short) 10);
        printWriter45.print('#');
        printWriter45.print(false);
        java.io.PrintWriter printWriter53 = printWriter45.append('#');
        java.io.PrintWriter printWriter55 = printWriter45.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor57.visitTryCatchBlock(label58, label59, label60, "");
        aSMifierMethodVisitor57.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor57.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label69 = null;
        int[] intArray71 = new int[] { (byte) 0 };
        java.io.PrintWriter printWriter73 = new java.io.PrintWriter("hi!");
        printWriter73.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor77.visitTryCatchBlock(label78, label79, label80, "");
        aSMifierMethodVisitor77.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label88 = null;
        org.mockito.asm.Label label89 = null;
        org.mockito.asm.Label[] labelArray90 = new org.mockito.asm.Label[] { label89 };
        aSMifierMethodVisitor77.visitTableSwitchInsn(0, (int) (byte) 10, label88, labelArray90);
        java.io.PrintWriter printWriter92 = printWriter73.printf("hi!", (java.lang.Object[]) labelArray90);
        aSMifierMethodVisitor57.visitLookupSwitchInsn(label69, intArray71, labelArray90);
        java.io.PrintWriter printWriter94 = printWriter45.printf("hi!", (java.lang.Object[]) labelArray90);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 0, label20, labelArray90);
        org.mockito.asm.Attribute attribute96 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(printWriter45);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0]");
        org.junit.Assert.assertNotNull(labelArray90);
        org.junit.Assert.assertNotNull(printWriter92);
        org.junit.Assert.assertNotNull(printWriter94);
    }

    @Test
    public void test04707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04707");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter16 = printWriter12.append((java.lang.CharSequence) "");
        printWriter8.println((java.lang.Object) printWriter16);
        printWriter16.println((double) 10.0f);
        printWriter16.print(10);
        printWriter16.print(false);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        printWriter25.print(false);
        java.io.PrintWriter printWriter29 = printWriter25.append((java.lang.CharSequence) "hi!");
        printWriter29.println((-1));
        printWriter29.println(100);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter((java.io.Writer) printWriter29, true);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter("hi!");
        printWriter37.write((-1));
        printWriter37.flush();
        java.lang.Object[] objArray42 = null;
        java.io.PrintWriter printWriter43 = printWriter37.format("hi!", objArray42);
        printWriter37.print("hi!");
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter("hi!");
        java.util.Locale locale48 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray53 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray55 = null;
        aSMifierMethodVisitor50.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray53, (int) (short) 1, objArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray67 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray69 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor58, strArray67, 1.0f };
        java.io.PrintWriter printWriter70 = printWriter47.printf(locale48, "", (java.lang.Object[]) strArray67);
        char[] charArray77 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter70.println(charArray77);
        char[] charArray79 = new char[] {};
        printWriter70.print(charArray79);
        printWriter37.write(charArray79);
        printWriter35.println(charArray79);
        printWriter16.print(charArray79);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[]");
    }

    @Test
    public void test04708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04708");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter5.print("");
        printWriter5.print((float) (-1L));
        printWriter5.println((double) 1);
        char[] charArray12 = null;
        // The following exception was thrown during execution in test generation
        try {
            printWriter5.write(charArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test04709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04709");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label18);
        aSMifierMethodVisitor0.visitFieldInsn(1, "", "", "");
        aSMifierMethodVisitor0.visitIincInsn((-1), 10);
        aSMifierMethodVisitor0.visitInsn((int) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor30);
    }

    @Test
    public void test04710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04710");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        java.util.List list22 = aSMifierClassVisitor15.getText();
        java.util.List list23 = aSMifierClassVisitor15.text;
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.write((-1));
        printWriter29.flush();
        java.util.Locale locale33 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray40 = null;
        aSMifierMethodVisitor35.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray38, (int) (short) 1, objArray40);
        java.io.PrintWriter printWriter42 = printWriter29.printf(locale33, "", (java.lang.Object[]) strArray38);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor43 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter29);
        aSMifierClassVisitor43.visitEnd();
        aSMifierClassVisitor43.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor52.visitTryCatchBlock(label53, label54, label55, "");
        org.mockito.asm.FieldVisitor fieldVisitor58 = aSMifierClassVisitor43.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor63.visitTryCatchBlock(label64, label65, label66, "");
        aSMifierMethodVisitor63.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj72 = null;
        aSMifierMethodVisitor63.visitLdcInsn(obj72);
        aSMifierMethodVisitor63.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list76 = aSMifierMethodVisitor63.getText();
        org.mockito.asm.FieldVisitor fieldVisitor77 = aSMifierClassVisitor43.visitField((int) (byte) -1, "", "", "", (java.lang.Object) list76);
        org.mockito.asm.FieldVisitor fieldVisitor78 = aSMifierClassVisitor15.visitField(10, "", "hi!", "", (java.lang.Object) aSMifierClassVisitor43);
        aSMifierClassVisitor43.visitSource("", "");
        aSMifierClassVisitor43.visitInnerClass("hi!", "", "", (int) (byte) 1);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(list76);
        org.junit.Assert.assertNotNull(fieldVisitor77);
        org.junit.Assert.assertNotNull(fieldVisitor78);
    }

    @Test
    public void test04711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04711");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray5 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter6 = printWriter1.format("", (java.lang.Object[]) strArray5);
        printWriter6.println('a');
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        java.util.Locale locale11 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray16 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray18 = null;
        aSMifierMethodVisitor13.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray16, (int) (short) 1, objArray18);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor21.visitTryCatchBlock(label22, label23, label24, "");
        aSMifierMethodVisitor21.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor21, strArray30, 1.0f };
        java.io.PrintWriter printWriter33 = printWriter10.printf(locale11, "", (java.lang.Object[]) strArray30);
        printWriter33.println();
        printWriter33.println((long) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter43 = printWriter39.append((java.lang.CharSequence) "");
        printWriter39.print((int) (byte) -1);
        printWriter39.write("", (int) (byte) 1, (int) (short) 0);
        printWriter39.print((double) (byte) -1);
        aSMifierMethodVisitor37.print(printWriter39);
        printWriter39.write((int) (byte) 100);
        printWriter33.println((java.lang.Object) (byte) 100);
        printWriter33.println((int) 'a');
        java.io.PrintWriter printWriter59 = printWriter33.append('#');
        printWriter59.println("");
        printWriter59.write("", (int) (short) 10, 0);
        java.io.PrintWriter printWriter66 = new java.io.PrintWriter((java.io.Writer) printWriter59);
        printWriter6.print((java.lang.Object) printWriter66);
        printWriter6.println('a');
        // The following exception was thrown during execution in test generation
        try {
            printWriter6.write("hi!", (int) '4', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 104");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(printWriter59);
    }

    @Test
    public void test04712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04712");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter1.println();
        java.util.Locale locale9 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor11.visitTryCatchBlock(label12, label13, label14, "");
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor11.visitLocalVariable("hi!", "hi!", "hi!", label20, label21, (int) (byte) 10);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        printWriter25.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray29 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter30 = printWriter25.format("", (java.lang.Object[]) strArray29);
        aSMifierMethodVisitor11.visitLdcInsn((java.lang.Object) strArray29);
        java.io.PrintWriter printWriter32 = printWriter1.printf(locale9, "", (java.lang.Object[]) strArray29);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter((java.io.Writer) printWriter32);
        printWriter32.println((int) (short) -1);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(printWriter32);
    }

    @Test
    public void test04713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04713");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj45 = null;
        aSMifierMethodVisitor36.visitLdcInsn(obj45);
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor36.visitJumpInsn((int) (short) 1, label48);
        aSMifierMethodVisitor36.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor36.visitParameterAnnotation((int) (byte) 1, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor57 = aSMifierClassVisitor31.visitField((int) (byte) 0, "", "", "", (java.lang.Object) aSMifierMethodVisitor36);
        aSMifierClassVisitor31.visitInnerClass("", "", "hi!", (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierClassVisitor31.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierClassVisitor31.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(annotationVisitor68);
    }

    @Test
    public void test04714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04714");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("hi!");
        printWriter26.print(false);
        java.io.PrintWriter printWriter32 = printWriter26.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter34 = printWriter32.append('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor35 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter32);
        printWriter32.write(100);
        printWriter32.println((long) ' ');
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter((java.io.Writer) printWriter32, true);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter((java.io.Writer) printWriter32);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(printWriter34);
    }

    @Test
    public void test04715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04715");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 0, "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = annotationVisitor15.visitArray("hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = annotationVisitor17.visitAnnotation("hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = annotationVisitor17.visitAnnotation("", "");
        annotationVisitor17.visitEnum("", "", "");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor23);
    }

    @Test
    public void test04716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04716");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor14.visitFieldInsn((int) (byte) 0, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitMultiANewArrayInsn("", (int) (short) -1);
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label35, label36, label37, "hi!");
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label40, label41, label42, "");
    }

    @Test
    public void test04717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04717");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        printWriter10.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter14 = printWriter10.append((java.lang.CharSequence) "");
        printWriter10.print((double) 1);
        java.io.PrintWriter printWriter18 = printWriter10.append((java.lang.CharSequence) "hi!");
        printWriter10.print(false);
        java.lang.CharSequence charSequence21 = null;
        java.io.PrintWriter printWriter22 = printWriter10.append(charSequence21);
        printWriter10.print((double) (-1));
        org.mockito.asm.FieldVisitor fieldVisitor25 = aSMifierClassVisitor1.visitField((int) (byte) 0, "hi!", "hi!", "hi!", (java.lang.Object) printWriter10);
        org.mockito.asm.Attribute attribute26 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor25.visitAttribute(attribute26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(fieldVisitor25);
    }

    @Test
    public void test04718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04718");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        aSMifierMethodVisitor39.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor39.visitLocalVariable("hi!", "hi!", "hi!", label56, label57, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor39.visitParameterAnnotation(0, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor64 = aSMifierClassVisitor28.visitField((int) ' ', "hi!", "hi!", "", (java.lang.Object) aSMifierMethodVisitor39);
        java.lang.String[] strArray69 = null;
        org.mockito.asm.MethodVisitor methodVisitor70 = aSMifierClassVisitor28.visitMethod(0, "hi!", "hi!", "", strArray69);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierClassVisitor28.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = annotationVisitor73.visitArray("");
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = annotationVisitor75.visitAnnotation("hi!", "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(methodVisitor70);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(annotationVisitor75);
        org.junit.Assert.assertNotNull(annotationVisitor78);
    }

    @Test
    public void test04719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04719");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        java.io.PrintWriter printWriter7 = printWriter1.append('#');
        printWriter1.close();
        printWriter1.println('#');
        org.junit.Assert.assertNotNull(printWriter7);
    }

    @Test
    public void test04720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04720");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        aSMifierMethodVisitor4.visitTryCatchBlock(label5, label6, label7, "");
        aSMifierMethodVisitor4.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj13 = null;
        aSMifierMethodVisitor4.visitLdcInsn(obj13);
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor4.visitJumpInsn((int) (short) 1, label16);
        aSMifierMethodVisitor4.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor4.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor4.visitAnnotationDefault();
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        printWriter28.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] { label44 };
        aSMifierMethodVisitor32.visitTableSwitchInsn(0, (int) (byte) 10, label43, labelArray45);
        java.io.PrintWriter printWriter47 = printWriter28.printf("hi!", (java.lang.Object[]) labelArray45);
        java.lang.String[] strArray49 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor4.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray45, 1, (java.lang.Object[]) strArray49);
        printWriter3.println((java.lang.Object) strArray49);
        printWriter3.write("hi!", 100, (int) (byte) -1);
        printWriter3.println(true);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray49);
    }

    @Test
    public void test04721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04721");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.print((double) (byte) 10);
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter("hi!");
        java.util.Locale locale8 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray13 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray15 = null;
        aSMifierMethodVisitor10.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray13, (int) (short) 1, objArray15);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor18.visitTryCatchBlock(label19, label20, label21, "");
        aSMifierMethodVisitor18.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray27 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray29 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor18, strArray27, 1.0f };
        java.io.PrintWriter printWriter30 = printWriter7.printf(locale8, "", (java.lang.Object[]) strArray27);
        char[] charArray37 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter30.println(charArray37);
        printWriter1.print(charArray37);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor40 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println((long) (byte) -1);
        printWriter1.write((int) (short) -1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test04722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04722");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.print((double) (byte) 10);
        java.util.Locale locale6 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label14 = null;
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label[] labelArray33 = new org.mockito.asm.Label[] { label32 };
        aSMifierMethodVisitor20.visitTableSwitchInsn(0, (int) (byte) 10, label31, labelArray33);
        java.io.PrintWriter printWriter35 = printWriter16.printf("hi!", (java.lang.Object[]) labelArray33);
        aSMifierMethodVisitor8.visitTableSwitchInsn(1, (int) (short) 10, label14, labelArray33);
        java.io.PrintWriter printWriter37 = printWriter1.format(locale6, "hi!", (java.lang.Object[]) labelArray33);
        printWriter37.write((int) (byte) 1);
        java.io.PrintWriter printWriter43 = printWriter37.append((java.lang.CharSequence) "hi!", 0, (int) (byte) 1);
        java.lang.Object[] objArray45 = null;
        java.io.PrintWriter printWriter46 = printWriter37.format("hi!", objArray45);
        printWriter46.write((-1));
        java.io.PrintWriter printWriter50 = printWriter46.append('#');
        boolean boolean51 = printWriter46.checkError();
        org.junit.Assert.assertNotNull(labelArray33);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test04723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04723");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter24.print((float) 10L);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor37 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        aSMifierClassVisitor37.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = null;
        aSMifierMethodVisitor43.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray46, (int) (short) 1, objArray48);
        aSMifierMethodVisitor43.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor43.visitMethodInsn((int) (short) 10, "hi!", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor60 = aSMifierClassVisitor37.visitField(100, "hi!", "hi!", "hi!", (java.lang.Object) "");
        aSMifierClassVisitor37.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierClassVisitor37.visitAnnotation("", true);
        aSMifierClassVisitor37.visitSource("hi!", "hi!");
        aSMifierClassVisitor37.visitSource("hi!", "hi!");
        org.mockito.asm.Attribute attribute71 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor37.visitAttribute(attribute71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(fieldVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test04724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04724");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLabel(label17);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        java.util.Locale locale22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray27 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray29 = null;
        aSMifierMethodVisitor24.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray27, (int) (short) 1, objArray29);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray41 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray43 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor32, strArray41, 1.0f };
        java.io.PrintWriter printWriter44 = printWriter21.printf(locale22, "", (java.lang.Object[]) strArray41);
        java.io.PrintWriter printWriter46 = printWriter44.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter48 = printWriter44.append(' ');
        printWriter48.print(1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter48);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 10, (int) (byte) 10);
        aSMifierMethodVisitor0.visitIincInsn((int) '#', (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertNotNull(annotationVisitor58);
    }

    @Test
    public void test04725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04725");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor0.visitInsn(1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 0);
        aSMifierMethodVisitor0.visitInsn((int) (short) 100);
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 1, label17);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 100, label20);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.print((java.lang.Object) (short) -1);
        printWriter23.flush();
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter23);
        aSMifierMethodVisitor0.print(printWriter23);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 0);
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitLineNumber(1, label32);
        aSMifierMethodVisitor0.visitMaxs((int) 'a', (int) (short) 1);
    }

    @Test
    public void test04726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04726");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label28, label29, (int) (short) 1);
        aSMifierMethodVisitor0.visitIntInsn((int) '#', (int) 'a');
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label35, label36, label37, "hi!");
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (byte) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) -1, 0);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test04727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04727");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.print((int) ' ');
        java.lang.Object obj29 = null;
        printWriter24.print(obj29);
        printWriter24.println(false);
        printWriter24.print('#');
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter36.print(false);
        printWriter36.print("");
        boolean boolean41 = printWriter36.checkError();
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("hi!");
        java.util.Locale locale45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray50 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray52 = null;
        aSMifierMethodVisitor47.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray50, (int) (short) 1, objArray52);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor55.visitTryCatchBlock(label56, label57, label58, "");
        aSMifierMethodVisitor55.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray64 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray66 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor55, strArray64, 1.0f };
        java.io.PrintWriter printWriter67 = printWriter44.printf(locale45, "", (java.lang.Object[]) strArray64);
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter((java.io.Writer) printWriter67, true);
        printWriter69.print("");
        printWriter69.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor74 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter69);
        java.lang.String[] strArray79 = new java.lang.String[] {};
        org.mockito.asm.MethodVisitor methodVisitor80 = aSMifierClassVisitor74.visitMethod(0, "", "", "hi!", strArray79);
        java.io.PrintWriter printWriter81 = printWriter36.printf("", (java.lang.Object[]) strArray79);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor82 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter81);
        org.mockito.asm.Attribute attribute83 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor82.visitAttribute(attribute83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(methodVisitor80);
        org.junit.Assert.assertNotNull(printWriter81);
    }

    @Test
    public void test04728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04728");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter5.close();
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("hi!");
        printWriter9.print(false);
        java.io.PrintWriter printWriter13 = printWriter9.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor15.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor15.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj24 = null;
        aSMifierMethodVisitor15.visitLdcInsn(obj24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor15.visitJumpInsn((int) (short) 1, label27);
        aSMifierMethodVisitor15.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor15.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor15.visitAnnotationDefault();
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor43.visitTryCatchBlock(label44, label45, label46, "");
        aSMifierMethodVisitor43.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] { label55 };
        aSMifierMethodVisitor43.visitTableSwitchInsn(0, (int) (byte) 10, label54, labelArray56);
        java.io.PrintWriter printWriter58 = printWriter39.printf("hi!", (java.lang.Object[]) labelArray56);
        java.lang.String[] strArray60 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor15.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray56, 1, (java.lang.Object[]) strArray60);
        java.io.PrintWriter printWriter62 = printWriter9.format("hi!", (java.lang.Object[]) strArray60);
        java.io.PrintWriter printWriter63 = printWriter5.format("", (java.lang.Object[]) strArray60);
        java.io.PrintWriter printWriter67 = printWriter63.append((java.lang.CharSequence) "hi!", 1, 1);
        printWriter67.println(false);
        printWriter67.println('a');
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(printWriter67);
    }

    @Test
    public void test04729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04729");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label12 = null;
        int[] intArray14 = new int[] { (byte) 0 };
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label[] labelArray33 = new org.mockito.asm.Label[] { label32 };
        aSMifierMethodVisitor20.visitTableSwitchInsn(0, (int) (byte) 10, label31, labelArray33);
        java.io.PrintWriter printWriter35 = printWriter16.printf("hi!", (java.lang.Object[]) labelArray33);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label12, intArray14, labelArray33);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label38, label39, label40, "hi!");
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("hi!");
        printWriter44.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor48.visitTryCatchBlock(label49, label50, label51, "");
        aSMifierMethodVisitor48.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label[] labelArray61 = new org.mockito.asm.Label[] { label60 };
        aSMifierMethodVisitor48.visitTableSwitchInsn(0, (int) (byte) 10, label59, labelArray61);
        java.io.PrintWriter printWriter63 = printWriter44.printf("hi!", (java.lang.Object[]) labelArray61);
        java.io.PrintWriter printWriter65 = printWriter44.append((java.lang.CharSequence) "");
        printWriter65.close();
        java.io.PrintWriter printWriter68 = printWriter65.append(' ');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor69.visitTryCatchBlock(label70, label71, label72, "");
        aSMifierMethodVisitor69.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj78 = null;
        aSMifierMethodVisitor69.visitLdcInsn(obj78);
        org.mockito.asm.Label label81 = null;
        aSMifierMethodVisitor69.visitJumpInsn((int) (short) 1, label81);
        aSMifierMethodVisitor69.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor89 = aSMifierMethodVisitor69.visitParameterAnnotation((int) (byte) 1, "", true);
        aSMifierMethodVisitor69.visitInsn((int) (short) 1);
        printWriter65.print((java.lang.Object) aSMifierMethodVisitor69);
        printWriter65.print(false);
        printWriter65.close();
        java.io.PrintWriter printWriter97 = printWriter65.append((java.lang.CharSequence) "");
        aSMifierMethodVisitor0.print(printWriter97);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(labelArray33);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(labelArray61);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(printWriter65);
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertNotNull(annotationVisitor89);
        org.junit.Assert.assertNotNull(printWriter97);
    }

    @Test
    public void test04730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04730");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor24.visitLocalVariable("hi!", "hi!", "hi!", label33, label34, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor24.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor24.visitAnnotationDefault();
        annotationVisitor40.visitEnum("", "hi!", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor45 = aSMifierClassVisitor15.visitField((int) '#', "", "", "", (java.lang.Object) "hi!");
        aSMifierClassVisitor15.visitSource("", "");
        org.mockito.asm.FieldVisitor fieldVisitor54 = aSMifierClassVisitor15.visitField(0, "", "", "", (java.lang.Object) 10);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter("hi!");
        java.util.Locale locale57 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray62 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray64 = null;
        aSMifierMethodVisitor59.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray62, (int) (short) 1, objArray64);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor67.visitTryCatchBlock(label68, label69, label70, "");
        aSMifierMethodVisitor67.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray76 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray78 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor67, strArray76, 1.0f };
        java.io.PrintWriter printWriter79 = printWriter56.printf(locale57, "", (java.lang.Object[]) strArray76);
        char[] charArray86 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter79.println(charArray86);
        printWriter79.print(true);
        aSMifierClassVisitor15.print(printWriter79);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test04731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04731");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor28.visitSource("hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierClassVisitor28.visitAnnotation("hi!", false);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierClassVisitor28.visitAnnotation("", true);
        aSMifierClassVisitor28.visitInnerClass("", "", "", (-1));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor45);
    }

    @Test
    public void test04732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04732");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((int) (byte) -1, "hi!", "", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test04733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04733");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label[] labelArray27 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor7.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label26, labelArray27);
        java.io.PrintWriter printWriter29 = printWriter5.printf("", (java.lang.Object[]) labelArray27);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter29, true);
        printWriter29.println((float) (-1L));
        printWriter29.print((double) (short) 100);
        printWriter29.print(true);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(labelArray27);
        org.junit.Assert.assertNotNull(printWriter29);
    }

    @Test
    public void test04734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04734");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitSource("", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitLdcInsn((java.lang.Object) (short) 100);
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor42.visitTryCatchBlock(label45, label46, label47, "hi!");
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor42.visitLineNumber((int) (byte) 0, label51);
        org.mockito.asm.FieldVisitor fieldVisitor53 = aSMifierClassVisitor28.visitField(100, "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = fieldVisitor53.visitAnnotation("hi!", true);
        fieldVisitor53.visitEnd();
        org.mockito.asm.Attribute attribute58 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor53.visitAttribute(attribute58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(fieldVisitor53);
        org.junit.Assert.assertNotNull(annotationVisitor56);
    }

    @Test
    public void test04735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04735");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        org.mockito.asm.Label label29 = null;
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "");
        printWriter31.print((double) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor39.visitJumpInsn((int) (short) 1, label51);
        aSMifierMethodVisitor39.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor39.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor39.visitAnnotationDefault();
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter("hi!");
        printWriter63.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor67.visitTryCatchBlock(label68, label69, label70, "");
        aSMifierMethodVisitor67.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] { label79 };
        aSMifierMethodVisitor67.visitTableSwitchInsn(0, (int) (byte) 10, label78, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter63.printf("hi!", (java.lang.Object[]) labelArray80);
        java.lang.String[] strArray84 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor39.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray80, 1, (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter86 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray80);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (short) 100, (int) (short) 1, label29, labelArray80);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label90 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label90);
        org.mockito.asm.Attribute attribute92 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter86);
    }

    @Test
    public void test04736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04736");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor28.visitLocalVariable("hi!", "hi!", "hi!", label37, label38, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor28.visitAnnotation("", true);
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj54 = null;
        aSMifierMethodVisitor45.visitLdcInsn(obj54);
        org.mockito.asm.Label label56 = null;
        int[] intArray63 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] { label76 };
        aSMifierMethodVisitor64.visitTableSwitchInsn(0, (int) (byte) 10, label75, labelArray77);
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label56, intArray63, labelArray77);
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label44, intArray63, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter26.printf("hi!", (java.lang.Object[]) labelArray80);
        java.io.PrintWriter printWriter84 = printWriter82.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor85 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter84);
        aSMifierClassVisitor85.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor85.visitOuterClass("", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor96 = aSMifierClassVisitor85.visitAnnotation("", false);
        aSMifierClassVisitor85.visitSource("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(annotationVisitor96);
    }

    @Test
    public void test04737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04737");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((-1), 100);
        org.mockito.asm.Attribute attribute70 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
    }

    @Test
    public void test04738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04738");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor7.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor7.visitAnnotationDefault();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        java.io.PrintWriter printWriter50 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray48);
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor7.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray48, 1, (java.lang.Object[]) strArray52);
        java.io.PrintWriter printWriter54 = printWriter1.format("hi!", (java.lang.Object[]) strArray52);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor55.visitAnnotation("", true);
        aSMifierClassVisitor55.visitInnerClass("", "", "", (-1));
        aSMifierClassVisitor55.visitSource("hi!", "hi!");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
    }

    @Test
    public void test04739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04739");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.write((int) (byte) 0);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        java.util.Locale locale31 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray36 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray38 = null;
        aSMifierMethodVisitor33.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray36, (int) (short) 1, objArray38);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray50 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray52 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor41, strArray50, 1.0f };
        java.io.PrintWriter printWriter53 = printWriter30.printf(locale31, "", (java.lang.Object[]) strArray50);
        char[] charArray60 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter53.println(charArray60);
        printWriter24.print(charArray60);
        printWriter24.println(100.0f);
        printWriter24.write((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor67 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        printWriter24.println((int) (short) -1);
        printWriter24.println((double) (short) 10);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test04740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04740");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter5.print("");
        printWriter5.print((float) (short) -1);
        printWriter5.print('a');
        printWriter5.println(0.0f);
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test04741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04741");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 100);
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label26, label27, (int) (byte) 1);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label30, label31, label32, "hi!");
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test04742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04742");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        printWriter27.flush();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter33 = printWriter31.append('a');
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        printWriter35.println((-1.0d));
        printWriter31.print((java.lang.Object) (-1.0d));
        java.io.PrintWriter printWriter40 = printWriter31.append('a');
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        java.util.Locale locale43 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray50 = null;
        aSMifierMethodVisitor45.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray48, (int) (short) 1, objArray50);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor53.visitTryCatchBlock(label54, label55, label56, "");
        aSMifierMethodVisitor53.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray62 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray64 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor53, strArray62, 1.0f };
        java.io.PrintWriter printWriter65 = printWriter42.printf(locale43, "", (java.lang.Object[]) strArray62);
        char[] charArray72 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter65.println(charArray72);
        printWriter65.write(1);
        printWriter40.print((java.lang.Object) 1);
        char[] charArray77 = new char[] {};
        printWriter40.print(charArray77);
        printWriter27.write(charArray77);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertNotNull(printWriter65);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[]");
    }

    @Test
    public void test04743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04743");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, 0);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor0.visitAnnotation("", true);
        annotationVisitor73.visitEnd();
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationVisitor73);
    }

    @Test
    public void test04744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04744");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 0, "hi!", false);
        annotationVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = annotationVisitor15.visitAnnotation("", "hi!");
        annotationVisitor19.visitEnum("", "hi!", "");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test04745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04745");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.println(false);
        printWriter24.println();
        // The following exception was thrown during execution in test generation
        try {
            printWriter24.write("hi!", (int) '#', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 135");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test04746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04746");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "hi!", "hi!", (int) (byte) 1);
        aSMifierClassVisitor28.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor28.visitAnnotation("", true);
        org.mockito.asm.FieldVisitor fieldVisitor43 = aSMifierClassVisitor28.visitField((int) (byte) 10, "", "", "", (java.lang.Object) 10.0d);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierClassVisitor28.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierClassVisitor28.visitAnnotation("", false);
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitInnerClass("", "hi!", "", (int) 'a');
        aSMifierClassVisitor28.visitInnerClass("hi!", "", "hi!", (int) (byte) 10);
        aSMifierClassVisitor28.visitOuterClass("", "", "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(annotationVisitor49);
    }

    @Test
    public void test04747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04747");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label17, label18, 1);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitParameterAnnotation(100, "", true);
        org.mockito.asm.Label label28 = null;
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        printWriter30.print(false);
        java.io.PrintWriter printWriter34 = printWriter30.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter34, true);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        printWriter34.print(0);
        java.util.Locale locale40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor42.visitTryCatchBlock(label43, label44, label45, "");
        aSMifierMethodVisitor42.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj51 = null;
        aSMifierMethodVisitor42.visitLdcInsn(obj51);
        aSMifierMethodVisitor42.visitInsn((int) ' ');
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor42.visitJumpInsn(100, label56);
        aSMifierMethodVisitor42.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label61 = null;
        int[] intArray62 = new int[] {};
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter("hi!");
        printWriter64.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter68 = printWriter64.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor70 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor70.visitTryCatchBlock(label71, label72, label73, "");
        aSMifierMethodVisitor70.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj79 = null;
        aSMifierMethodVisitor70.visitLdcInsn(obj79);
        org.mockito.asm.Label label82 = null;
        aSMifierMethodVisitor70.visitJumpInsn((int) (short) 1, label82);
        aSMifierMethodVisitor70.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label89 = null;
        org.mockito.asm.Label[] labelArray90 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor70.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label89, labelArray90);
        java.io.PrintWriter printWriter92 = printWriter68.printf("", (java.lang.Object[]) labelArray90);
        aSMifierMethodVisitor42.visitLookupSwitchInsn(label61, intArray62, labelArray90);
        java.io.PrintWriter printWriter94 = printWriter34.printf(locale40, "hi!", (java.lang.Object[]) labelArray90);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (short) -1, 0, label28, labelArray90);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 100, (int) (short) 1);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertNotNull(labelArray90);
        org.junit.Assert.assertNotNull(printWriter92);
        org.junit.Assert.assertNotNull(printWriter94);
    }

    @Test
    public void test04748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04748");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs(0, 1);
        aSMifierMethodVisitor0.visitTypeInsn(0, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 10, "hi!", false);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitJumpInsn(0, label27);
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitLabel(label29);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor25);
    }

    @Test
    public void test04749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04749");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitSource("hi!", "");
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.write((-1));
        printWriter39.flush();
        java.util.Locale locale43 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray50 = null;
        aSMifierMethodVisitor45.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray48, (int) (short) 1, objArray50);
        java.io.PrintWriter printWriter52 = printWriter39.printf(locale43, "", (java.lang.Object[]) strArray48);
        org.mockito.asm.MethodVisitor methodVisitor53 = aSMifierClassVisitor15.visitMethod((int) (byte) 0, "", "", "hi!", strArray48);
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = methodVisitor53.visitParameterAnnotation((int) '#', "hi!", true);
        methodVisitor53.visitFieldInsn((int) 'a', "", "hi!", "");
        org.mockito.asm.Label label64 = null;
        methodVisitor53.visitJumpInsn(1, label64);
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        methodVisitor53.visitTryCatchBlock(label66, label67, label68, "hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(methodVisitor53);
        org.junit.Assert.assertNotNull(annotationVisitor57);
    }

    @Test
    public void test04750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04750");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        printWriter24.println(false);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter24.println((float) 'a');
        printWriter24.print((long) '4');
        // The following exception was thrown during execution in test generation
        try {
            printWriter24.write("", (int) ' ', (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 42");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test04751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04751");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        printWriter1.print((float) 1L);
        printWriter1.flush();
        printWriter1.println(false);
        printWriter1.print((long) (short) 10);
        java.io.PrintWriter printWriter29 = printWriter1.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj39 = null;
        aSMifierMethodVisitor30.visitLdcInsn(obj39);
        aSMifierMethodVisitor30.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor30.visitLocalVariable("hi!", "hi!", "hi!", label47, label48, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor30.visitParameterAnnotation(0, "", true);
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor30.visitJumpInsn(10, label56);
        aSMifierMethodVisitor30.visitCode();
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor30.visitLocalVariable("", "hi!", "hi!", label62, label63, (int) (byte) 10);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor30.visitLocalVariable("hi!", "", "hi!", label69, label70, (int) '#');
        aSMifierMethodVisitor30.visitTypeInsn((int) (byte) 1, "hi!");
        printWriter1.println((java.lang.Object) aSMifierMethodVisitor30);
        aSMifierMethodVisitor30.visitFieldInsn((int) (byte) 1, "", "", "");
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(annotationVisitor54);
    }

    @Test
    public void test04752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04752");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        java.util.List list6 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitFieldInsn((int) '#', "", "", "hi!");
        aSMifierMethodVisitor0.visitInsn((int) '4');
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        printWriter15.print(false);
        printWriter15.println(false);
        boolean boolean20 = printWriter15.checkError();
        printWriter15.println((double) 0);
        java.io.PrintWriter printWriter24 = printWriter15.append('a');
        printWriter24.print((double) 100L);
        aSMifierMethodVisitor0.print(printWriter24);
        aSMifierMethodVisitor0.visitVarInsn((int) '#', (int) 'a');
        aSMifierMethodVisitor0.visitInsn((int) (byte) 0);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test04753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04753");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn(0, label18);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "hi!", label24, label25, 0);
    }

    @Test
    public void test04754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04754");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor15);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 10, label22);
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "");
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label27, label28, label29, "hi!");
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor35.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { (byte) 0 };
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        printWriter51.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor55.visitTryCatchBlock(label56, label57, label58, "");
        aSMifierMethodVisitor55.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] { label67 };
        aSMifierMethodVisitor55.visitTableSwitchInsn(0, (int) (byte) 10, label66, labelArray68);
        java.io.PrintWriter printWriter70 = printWriter51.printf("hi!", (java.lang.Object[]) labelArray68);
        aSMifierMethodVisitor35.visitLookupSwitchInsn(label47, intArray49, labelArray68);
        aSMifierMethodVisitor0.visitTableSwitchInsn(1, 0, label34, labelArray68);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 0, "hi!", "", "");
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label81, label82, (int) (short) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor87 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor91 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 1, "hi!", true);
        aSMifierMethodVisitor0.visitMaxs(100, (int) ' ');
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(annotationVisitor87);
        org.junit.Assert.assertNotNull(annotationVisitor91);
    }

    @Test
    public void test04755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04755");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label19, labelArray20);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (-1));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor34.visitTryCatchBlock(label35, label36, label37, "");
        aSMifierMethodVisitor34.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor34.visitMaxs(100, (int) (short) -1);
        aSMifierMethodVisitor34.visitIincInsn((int) (short) 0, (-1));
        aSMifierMethodVisitor34.visitInsn((int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor34.visitAnnotationDefault();
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor34.visitTryCatchBlock(label52, label53, label54, "hi!");
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor34.visitLabel(label57);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) label57);
        org.junit.Assert.assertNotNull(labelArray20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test04756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04756");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj37 = null;
        aSMifierMethodVisitor28.visitLdcInsn(obj37);
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor28.visitJumpInsn((int) (short) 1, label40);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor28.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor43.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor43.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor28.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor43);
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 100, (int) '#');
        aSMifierMethodVisitor28.visitTypeInsn(10, "hi!");
        printWriter27.println((java.lang.Object) "hi!");
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter("hi!");
        printWriter57.print(false);
        printWriter57.println(false);
        boolean boolean62 = printWriter57.checkError();
        printWriter57.println((double) 0);
        java.io.PrintWriter printWriter66 = printWriter57.append('a');
        printWriter66.println('#');
        printWriter27.println((java.lang.Object) printWriter66);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(printWriter66);
    }

    @Test
    public void test04757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04757");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor0.visitInsn((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test04758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04758");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.println(false);
        printWriter24.println(0);
        printWriter24.close();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor32 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        aSMifierClassVisitor32.visitInnerClass("hi!", "hi!", "hi!", (int) (short) 0);
        aSMifierClassVisitor32.visitSource("", "");
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        printWriter46.print((java.lang.Object) (short) -1);
        printWriter46.flush();
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter((java.io.Writer) printWriter46);
        printWriter46.println((float) 10);
        printWriter46.flush();
        org.mockito.asm.FieldVisitor fieldVisitor54 = aSMifierClassVisitor32.visitField((int) (short) 10, "hi!", "", "hi!", (java.lang.Object) printWriter46);
        org.mockito.asm.Attribute attribute55 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor54.visitAttribute(attribute55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(fieldVisitor54);
    }

    @Test
    public void test04759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04759");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        char[] charArray56 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter49.println(charArray56);
        printWriter24.print(charArray56);
        printWriter24.print(true);
        java.io.PrintWriter printWriter62 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter64 = printWriter24.append((java.lang.CharSequence) "");
        printWriter64.print(true);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(printWriter64);
    }

    @Test
    public void test04760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04760");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs(1, 10);
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor0.visitLabel(label64);
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label66, label67, label68, "");
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 10, "");
        aSMifierMethodVisitor0.visitIincInsn(10, (int) (byte) 0);
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label77, label78, label79, "");
        org.mockito.asm.Label label83 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 100, label83);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 1, (int) 'a');
        aSMifierMethodVisitor0.visitTypeInsn(0, "");
        org.mockito.asm.Label label93 = null;
        org.mockito.asm.Label[] labelArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 10, (int) ' ', label93, labelArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
    }

    @Test
    public void test04761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04761");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter3.print(0);
        printWriter3.print((int) '#');
        printWriter3.println('#');
        printWriter3.println((-1));
        org.junit.Assert.assertNotNull(printWriter3);
    }

    @Test
    public void test04762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04762");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = null;
        aSMifierMethodVisitor36.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray39, (int) (short) 1, objArray41);
        org.mockito.asm.MethodVisitor methodVisitor43 = aSMifierClassVisitor15.visitMethod((int) (short) 0, "", "", "hi!", strArray39);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        aSMifierClassVisitor15.visitInnerClass("", "", "hi!", (-1));
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor48);
    }

    @Test
    public void test04763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04763");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, (int) (short) -1);
        aSMifierMethodVisitor0.visitVarInsn((int) ' ', 1);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label18 = null;
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter("hi!");
        printWriter20.print(false);
        printWriter20.println(false);
        java.io.PrintWriter printWriter26 = printWriter20.append('#');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor27.visitTryCatchBlock(label28, label29, label30, "");
        aSMifierMethodVisitor27.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj36 = null;
        aSMifierMethodVisitor27.visitLdcInsn(obj36);
        aSMifierMethodVisitor27.visitInsn((int) ' ');
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor27.visitJumpInsn(100, label41);
        aSMifierMethodVisitor27.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label46 = null;
        int[] intArray47 = new int[] {};
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter("hi!");
        printWriter49.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter53 = printWriter49.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor55.visitTryCatchBlock(label56, label57, label58, "");
        aSMifierMethodVisitor55.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj64 = null;
        aSMifierMethodVisitor55.visitLdcInsn(obj64);
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor55.visitJumpInsn((int) (short) 1, label67);
        aSMifierMethodVisitor55.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label[] labelArray75 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor55.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label74, labelArray75);
        java.io.PrintWriter printWriter77 = printWriter53.printf("", (java.lang.Object[]) labelArray75);
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label46, intArray47, labelArray75);
        printWriter20.println((java.lang.Object) intArray47);
        org.mockito.asm.Label[] labelArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitLookupSwitchInsn(label18, intArray47, labelArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(labelArray75);
        org.junit.Assert.assertNotNull(printWriter77);
    }

    @Test
    public void test04764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04764");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(true);
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        boolean boolean11 = printWriter10.checkError();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test04765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04765");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label74, label75, label76, "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label80, label81, label82, "");
        org.mockito.asm.Label label86 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 100, label86);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 1, 100);
        aSMifierMethodVisitor0.visitIntInsn(0, (int) 'a');
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
    }

    @Test
    public void test04766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04766");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "hi!", "hi!", (int) (byte) 1);
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj49 = null;
        aSMifierMethodVisitor40.visitLdcInsn(obj49);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor40.visitJumpInsn((int) (short) 1, label52);
        aSMifierMethodVisitor40.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor40.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor40.visitAnnotationDefault();
        aSMifierMethodVisitor40.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor40.visitLabel(label64);
        java.util.List list66 = aSMifierMethodVisitor40.getText();
        aSMifierMethodVisitor40.visitMultiANewArrayInsn("", (int) (short) 0);
        java.io.PrintWriter printWriter73 = new java.io.PrintWriter("hi!");
        printWriter73.write((-1));
        printWriter73.flush();
        java.util.Locale locale77 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor79 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray82 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray84 = null;
        aSMifierMethodVisitor79.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray82, (int) (short) 1, objArray84);
        java.io.PrintWriter printWriter86 = printWriter73.printf(locale77, "", (java.lang.Object[]) strArray82);
        java.lang.Object[] objArray88 = null;
        aSMifierMethodVisitor40.visitFrame((int) (short) 1, 10, (java.lang.Object[]) strArray82, (int) (short) -1, objArray88);
        org.mockito.asm.MethodVisitor methodVisitor90 = aSMifierClassVisitor28.visitMethod((int) (short) 0, "hi!", "hi!", "", strArray82);
        methodVisitor90.visitTypeInsn((int) (short) 100, "hi!");
        org.mockito.asm.Label label94 = null;
        org.mockito.asm.Label label95 = null;
        org.mockito.asm.Label label96 = null;
        methodVisitor90.visitTryCatchBlock(label94, label95, label96, "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(printWriter86);
        org.junit.Assert.assertNotNull(methodVisitor90);
    }

    @Test
    public void test04767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04767");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) -1, "hi!", false);
        annotationVisitor17.visitEnd();
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
    }

    @Test
    public void test04768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04768");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        java.io.PrintWriter printWriter7 = printWriter1.append('#');
        printWriter7.print((long) 0);
        printWriter7.println((int) (byte) -1);
        printWriter7.print(false);
        org.junit.Assert.assertNotNull(printWriter7);
    }

    @Test
    public void test04769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04769");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = null;
        aSMifierMethodVisitor36.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray39, (int) (short) 1, objArray41);
        org.mockito.asm.MethodVisitor methodVisitor43 = aSMifierClassVisitor15.visitMethod((int) (short) 0, "", "", "hi!", strArray39);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        aSMifierClassVisitor15.visitEnd();
        java.util.List list50 = aSMifierClassVisitor15.getText();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(list50);
    }

    @Test
    public void test04770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04770");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "hi!", "hi!", (int) (byte) 1);
        aSMifierClassVisitor28.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor28.visitAnnotation("", true);
        org.mockito.asm.FieldVisitor fieldVisitor43 = aSMifierClassVisitor28.visitField((int) (byte) 10, "", "", "", (java.lang.Object) 10.0d);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierClassVisitor28.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierClassVisitor28.visitAnnotation("", false);
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitSource("", "hi!");
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter61 = printWriter59.append('a');
        printWriter59.print("hi!");
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter59, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor66 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter59);
        java.io.PrintWriter printWriter72 = new java.io.PrintWriter("hi!");
        printWriter72.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray76 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter77 = printWriter72.format("", (java.lang.Object[]) strArray76);
        org.mockito.asm.MethodVisitor methodVisitor78 = aSMifierClassVisitor66.visitMethod((int) (byte) 1, "", "", "hi!", strArray76);
        org.mockito.asm.MethodVisitor methodVisitor79 = aSMifierClassVisitor28.visitMethod((int) (short) 100, "", "hi!", "hi!", strArray76);
        org.mockito.asm.AnnotationVisitor annotationVisitor83 = methodVisitor79.visitParameterAnnotation((int) (byte) 100, "hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = annotationVisitor83.visitArray("hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(methodVisitor78);
        org.junit.Assert.assertNotNull(methodVisitor79);
        org.junit.Assert.assertNotNull(annotationVisitor83);
        org.junit.Assert.assertNotNull(annotationVisitor85);
    }

    @Test
    public void test04771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04771");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list13 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, 0);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 1, label18);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label24);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 1, (int) (byte) 1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test04772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04772");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitMaxs(0, (-1));
        aSMifierMethodVisitor9.visitCode();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor9);
        aSMifierMethodVisitor9.visitMultiANewArrayInsn("hi!", (int) (byte) -1);
        java.util.List list23 = aSMifierMethodVisitor9.getText();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor9.visitFieldInsn((int) (byte) -1, "hi!", "hi!", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list23);
    }

    @Test
    public void test04773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04773");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        java.util.List list22 = aSMifierClassVisitor15.getText();
        java.util.List list23 = aSMifierClassVisitor15.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierClassVisitor15.visitAnnotation("", false);
        annotationVisitor26.visitEnum("hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(annotationVisitor26);
    }

    @Test
    public void test04774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04774");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter5.write("");
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("hi!");
        java.util.Locale locale10 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray15 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray17 = null;
        aSMifierMethodVisitor12.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray15, (int) (short) 1, objArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray29 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray31 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor20, strArray29, 1.0f };
        java.io.PrintWriter printWriter32 = printWriter9.printf(locale10, "", (java.lang.Object[]) strArray29);
        char[] charArray39 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter32.println(charArray39);
        printWriter5.print(charArray39);
        printWriter5.println((int) (short) 1);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test04775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04775");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        boolean boolean27 = printWriter24.checkError();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test04776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04776");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.write((-1));
        printWriter22.flush();
        java.util.Locale locale26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray31 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray33 = null;
        aSMifierMethodVisitor28.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray31, (int) (short) 1, objArray33);
        java.io.PrintWriter printWriter35 = printWriter22.printf(locale26, "", (java.lang.Object[]) strArray31);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter22);
        aSMifierClassVisitor36.visitEnd();
        aSMifierClassVisitor36.visitSource("", "hi!");
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor36.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray46);
        org.mockito.asm.MethodVisitor methodVisitor48 = aSMifierClassVisitor15.visitMethod((int) (short) 100, "hi!", "hi!", "", strArray46);
        aSMifierClassVisitor15.visitInnerClass("", "", "", (int) (short) 100);
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierClassVisitor15.visitAnnotation("", true);
        annotationVisitor57.visitEnum("", "", "hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor57);
    }

    @Test
    public void test04777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04777");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor39.visitJumpInsn((int) (short) 1, label51);
        aSMifierMethodVisitor39.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor39.visitLineNumber((int) (short) 0, label57);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor39.visitAnnotation("", true);
        org.mockito.asm.FieldVisitor fieldVisitor62 = aSMifierClassVisitor15.visitField((int) (short) 100, "", "hi!", "", (java.lang.Object) annotationVisitor61);
        fieldVisitor62.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = fieldVisitor62.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = fieldVisitor62.visitAnnotation("", true);
        annotationVisitor69.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor62);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(annotationVisitor69);
    }

    @Test
    public void test04778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04778");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        printWriter14.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter19 = printWriter14.format("", (java.lang.Object[]) strArray18);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) strArray18);
        aSMifierMethodVisitor0.visitIntInsn(1, (int) (byte) 1);
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLineNumber(0, label25);
        aSMifierMethodVisitor0.visitMaxs((int) '4', (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 0);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(annotationVisitor30);
    }

    @Test
    public void test04779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04779");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        printWriter7.print(0.0d);
        java.util.Locale locale10 = null;
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter15 = printWriter13.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor16.visitJumpInsn((int) (short) 1, label28);
        aSMifierMethodVisitor16.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor16.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor16.visitAnnotationDefault();
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] { label56 };
        aSMifierMethodVisitor44.visitTableSwitchInsn(0, (int) (byte) 10, label55, labelArray57);
        java.io.PrintWriter printWriter59 = printWriter40.printf("hi!", (java.lang.Object[]) labelArray57);
        java.lang.String[] strArray61 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor16.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray57, 1, (java.lang.Object[]) strArray61);
        printWriter15.println((java.lang.Object) strArray61);
        java.io.PrintWriter printWriter64 = printWriter7.printf(locale10, "hi!", (java.lang.Object[]) strArray61);
        java.io.PrintWriter printWriter66 = printWriter7.append('#');
        java.io.PrintWriter printWriter68 = new java.io.PrintWriter((java.io.Writer) printWriter66, true);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor69 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter66);
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierClassVisitor69.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(labelArray57);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(annotationVisitor72);
    }

    @Test
    public void test04780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04780");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        char[] charArray56 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter49.println(charArray56);
        printWriter24.print(charArray56);
        printWriter24.print(true);
        printWriter24.println(false);
        java.lang.Class<?> wildcardClass63 = printWriter24.getClass();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test04781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04781");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitMaxs((int) '4', (int) (short) -1);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor83 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label87 = null;
        org.mockito.asm.Label label88 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label87, label88, (int) (byte) 10);
        org.mockito.asm.Label label91 = null;
        org.mockito.asm.Label label92 = null;
        org.mockito.asm.Label label93 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label91, label92, label93, "");
        aSMifierMethodVisitor0.visitIincInsn(0, (-1));
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(annotationVisitor82);
        org.junit.Assert.assertNotNull(annotationVisitor83);
    }

    @Test
    public void test04782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04782");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs(1, 10);
        aSMifierMethodVisitor0.visitTypeInsn(100, "");
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "hi!", true);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 100, "hi!");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor73);
    }

    @Test
    public void test04783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04783");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        java.util.List list26 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 0);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 100, label33);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        java.util.Locale locale37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray44 = null;
        aSMifierMethodVisitor39.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray42, (int) (short) 1, objArray44);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label48, label49, label50, "");
        aSMifierMethodVisitor47.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray56 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray58 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor47, strArray56, 1.0f };
        java.io.PrintWriter printWriter59 = printWriter36.printf(locale37, "", (java.lang.Object[]) strArray56);
        java.io.PrintWriter printWriter61 = printWriter59.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter63 = printWriter59.append(' ');
        printWriter63.print(1);
        printWriter63.println(false);
        printWriter63.print((double) (-1L));
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor70 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter63);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) -1, 1);
        aSMifierMethodVisitor0.visitVarInsn((int) '4', (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(annotationVisitor78);
    }

    @Test
    public void test04784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04784");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 1, "hi!", "", "hi!");
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label22, label23, (int) (byte) 10);
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor29.visitTryCatchBlock(label30, label31, label32, "");
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor29.visitLocalVariable("hi!", "hi!", "hi!", label38, label39, (int) (byte) 10);
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj54 = null;
        aSMifierMethodVisitor45.visitLdcInsn(obj54);
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor45.visitJumpInsn((int) (short) 1, label57);
        aSMifierMethodVisitor45.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor45.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierMethodVisitor45.visitAnnotationDefault();
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter("hi!");
        printWriter69.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor73 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor73.visitTryCatchBlock(label74, label75, label76, "");
        aSMifierMethodVisitor73.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label84 = null;
        org.mockito.asm.Label label85 = null;
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] { label85 };
        aSMifierMethodVisitor73.visitTableSwitchInsn(0, (int) (byte) 10, label84, labelArray86);
        java.io.PrintWriter printWriter88 = printWriter69.printf("hi!", (java.lang.Object[]) labelArray86);
        java.lang.String[] strArray90 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor45.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray86, 1, (java.lang.Object[]) strArray90);
        aSMifierMethodVisitor29.visitTableSwitchInsn((int) (byte) 1, (int) (byte) 100, label44, labelArray86);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) -1, (int) (byte) 10, label28, labelArray86);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(strArray90);
    }

    @Test
    public void test04785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04785");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label17, label18, (int) (byte) 1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter26 = printWriter22.append((java.lang.CharSequence) "");
        printWriter22.print((double) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj39 = null;
        aSMifierMethodVisitor30.visitLdcInsn(obj39);
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor30.visitJumpInsn((int) (short) 1, label42);
        aSMifierMethodVisitor30.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor30.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor30.visitAnnotationDefault();
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter("hi!");
        printWriter54.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        java.io.PrintWriter printWriter73 = printWriter54.printf("hi!", (java.lang.Object[]) labelArray71);
        java.lang.String[] strArray75 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor30.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray71, 1, (java.lang.Object[]) strArray75);
        java.io.PrintWriter printWriter77 = printWriter22.printf("hi!", (java.lang.Object[]) labelArray71);
        printWriter77.println((long) 100);
        aSMifierMethodVisitor0.print(printWriter77);
        java.util.List list81 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) ' ');
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(list81);
    }

    @Test
    public void test04786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04786");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label16, label17, (int) (short) 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) '4');
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, 0);
        aSMifierMethodVisitor0.visitIincInsn(0, 10);
    }

    @Test
    public void test04787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04787");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor24.visitLocalVariable("hi!", "hi!", "hi!", label33, label34, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor24.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor24.visitAnnotationDefault();
        annotationVisitor40.visitEnum("", "hi!", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor45 = aSMifierClassVisitor15.visitField((int) '#', "", "", "", (java.lang.Object) "hi!");
        aSMifierClassVisitor15.visitSource("", "");
        org.mockito.asm.FieldVisitor fieldVisitor54 = aSMifierClassVisitor15.visitField(0, "", "", "", (java.lang.Object) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierClassVisitor15.visitAnnotation("", false);
        aSMifierClassVisitor15.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(annotationVisitor57);
    }

    @Test
    public void test04788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04788");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        printWriter1.print("hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter1.println();
        java.util.Locale locale9 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor11.visitTryCatchBlock(label12, label13, label14, "");
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor11.visitLocalVariable("hi!", "hi!", "hi!", label20, label21, (int) (byte) 10);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        printWriter25.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray29 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter30 = printWriter25.format("", (java.lang.Object[]) strArray29);
        aSMifierMethodVisitor11.visitLdcInsn((java.lang.Object) strArray29);
        java.io.PrintWriter printWriter32 = printWriter1.printf(locale9, "", (java.lang.Object[]) strArray29);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter((java.io.Writer) printWriter32);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter33);
        aSMifierClassVisitor34.visitInnerClass("", "", "hi!", 100);
        aSMifierClassVisitor34.visitSource("", "");
        aSMifierClassVisitor34.visitOuterClass("", "hi!", "");
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(printWriter32);
    }

    @Test
    public void test04789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04789");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", true);
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label26);
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 1, label29);
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 1, label32);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 100, 1);
        java.io.PrintWriter printWriter37 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.print(printWriter37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test04790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04790");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label28, label29, (int) (short) 1);
        aSMifierMethodVisitor0.visitIntInsn((int) '#', (int) 'a');
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 100, (int) (byte) 0);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, (int) '#');
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 10, "", "hi!", "");
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor0.visitJumpInsn(0, label47);
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor0.visitLabel(label49);
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 10, "hi!", "", "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test04791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04791");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        aSMifierMethodVisitor4.visitTryCatchBlock(label5, label6, label7, "");
        aSMifierMethodVisitor4.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj13 = null;
        aSMifierMethodVisitor4.visitLdcInsn(obj13);
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor4.visitJumpInsn((int) (short) 1, label16);
        aSMifierMethodVisitor4.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor4.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor4.visitAnnotationDefault();
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        printWriter28.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] { label44 };
        aSMifierMethodVisitor32.visitTableSwitchInsn(0, (int) (byte) 10, label43, labelArray45);
        java.io.PrintWriter printWriter47 = printWriter28.printf("hi!", (java.lang.Object[]) labelArray45);
        java.lang.String[] strArray49 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor4.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray45, 1, (java.lang.Object[]) strArray49);
        printWriter3.println((java.lang.Object) strArray49);
        printWriter3.println("hi!");
        printWriter3.println((long) (short) -1);
        printWriter3.print((float) (byte) 0);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray49);
    }

    @Test
    public void test04792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04792");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        java.io.PrintWriter printWriter10 = printWriter5.append(' ');
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter15 = printWriter13.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter15);
        java.lang.String[] strArray22 = null;
        aSMifierClassVisitor16.visit((int) (short) 1, (int) '#', "hi!", "hi!", "", strArray22);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor28.visitLocalVariable("hi!", "hi!", "hi!", label37, label38, (int) (byte) 10);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        printWriter42.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter47 = printWriter42.format("", (java.lang.Object[]) strArray46);
        aSMifierMethodVisitor28.visitLdcInsn((java.lang.Object) strArray46);
        org.mockito.asm.MethodVisitor methodVisitor49 = aSMifierClassVisitor16.visitMethod((int) (byte) 1, "hi!", "hi!", "hi!", strArray46);
        java.io.PrintWriter printWriter50 = printWriter5.format("hi!", (java.lang.Object[]) strArray46);
        printWriter5.println(true);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(methodVisitor49);
        org.junit.Assert.assertNotNull(printWriter50);
    }

    @Test
    public void test04793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04793");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter44 = printWriter40.append((java.lang.CharSequence) "");
        printWriter44.close();
        java.util.Locale locale46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor48.visitTryCatchBlock(label49, label50, label51, "");
        aSMifierMethodVisitor48.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj57 = null;
        aSMifierMethodVisitor48.visitLdcInsn(obj57);
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor48.visitJumpInsn((int) (short) 1, label60);
        aSMifierMethodVisitor48.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor48.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor48.visitAnnotationDefault();
        java.io.PrintWriter printWriter72 = new java.io.PrintWriter("hi!");
        printWriter72.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor76 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        aSMifierMethodVisitor76.visitTryCatchBlock(label77, label78, label79, "");
        aSMifierMethodVisitor76.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label87 = null;
        org.mockito.asm.Label label88 = null;
        org.mockito.asm.Label[] labelArray89 = new org.mockito.asm.Label[] { label88 };
        aSMifierMethodVisitor76.visitTableSwitchInsn(0, (int) (byte) 10, label87, labelArray89);
        java.io.PrintWriter printWriter91 = printWriter72.printf("hi!", (java.lang.Object[]) labelArray89);
        java.lang.String[] strArray93 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor48.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray89, 1, (java.lang.Object[]) strArray93);
        java.io.PrintWriter printWriter95 = printWriter44.format(locale46, "", (java.lang.Object[]) strArray93);
        org.mockito.asm.MethodVisitor methodVisitor96 = aSMifierClassVisitor28.visitMethod((int) (short) 10, "", "", "hi!", strArray93);
        org.mockito.asm.AnnotationVisitor annotationVisitor99 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(labelArray89);
        org.junit.Assert.assertNotNull(printWriter91);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(printWriter95);
        org.junit.Assert.assertNotNull(methodVisitor96);
        org.junit.Assert.assertNotNull(annotationVisitor99);
    }

    @Test
    public void test04794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04794");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor17.visitTryCatchBlock(label18, label19, label20, "");
        aSMifierMethodVisitor17.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj26 = null;
        aSMifierMethodVisitor17.visitLdcInsn(obj26);
        org.mockito.asm.Label label28 = null;
        int[] intArray35 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] { label48 };
        aSMifierMethodVisitor36.visitTableSwitchInsn(0, (int) (byte) 10, label47, labelArray49);
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label28, intArray35, labelArray49);
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label16, intArray35, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor0.visitLineNumber(10, label56);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor54);
    }

    @Test
    public void test04795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04795");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        java.util.List list33 = aSMifierClassVisitor28.getText();
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitSource("", "hi!");
        aSMifierClassVisitor28.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor28.visitInnerClass("", "", "", (int) '#');
        org.mockito.asm.Attribute attribute47 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor28.visitAttribute(attribute47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list33);
    }

    @Test
    public void test04796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04796");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println((int) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj18 = null;
        aSMifierMethodVisitor9.visitLdcInsn(obj18);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor9.visitJumpInsn((int) (short) 1, label21);
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor9.visitAnnotationDefault();
        printWriter1.println((java.lang.Object) aSMifierMethodVisitor9);
        printWriter1.print((long) '#');
        char[] charArray27 = null;
        // The following exception was thrown during execution in test generation
        try {
            printWriter1.write(charArray27, (int) 'a', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor23);
    }

    @Test
    public void test04797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04797");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 1, "", true);
        aSMifierMethodVisitor0.visitInsn((int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "");
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitParameterAnnotation(100, "", true);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) ' ');
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label33, label34, label35, "hi!");
        org.mockito.asm.Attribute attribute38 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor29);
    }

    @Test
    public void test04798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04798");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((int) (byte) -1);
        printWriter1.print((double) (byte) 1);
        printWriter1.close();
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter11.println();
        java.io.PrintWriter printWriter14 = printWriter11.append('#');
        printWriter14.print(10.0d);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        printWriter18.print((java.lang.Object) (short) -1);
        printWriter18.println((float) (short) 0);
        printWriter18.println((float) 1L);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter18);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter25);
        printWriter26.println("");
        printWriter26.print("");
        printWriter14.println((java.lang.Object) "");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter14);
    }

    @Test
    public void test04799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04799");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        printWriter34.write("hi!");
        printWriter34.close();
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        printWriter41.write((-1));
        printWriter41.flush();
        java.util.Locale locale45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray50 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray52 = null;
        aSMifierMethodVisitor47.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray50, (int) (short) 1, objArray52);
        java.io.PrintWriter printWriter54 = printWriter41.printf(locale45, "", (java.lang.Object[]) strArray50);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter41);
        aSMifierClassVisitor55.visitEnd();
        aSMifierClassVisitor55.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        org.mockito.asm.FieldVisitor fieldVisitor70 = aSMifierClassVisitor55.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label67);
        printWriter34.println((java.lang.Object) aSMifierClassVisitor55);
        printWriter34.print(' ');
        printWriter34.println();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(fieldVisitor70);
    }

    @Test
    public void test04800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04800");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitIincInsn((int) '#', (int) (byte) -1);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 10, (int) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor7.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor7);
    }

    @Test
    public void test04801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04801");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        aSMifierClassVisitor15.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor31);
    }

    @Test
    public void test04802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04802");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter27 = printWriter23.append((java.lang.CharSequence) "");
        printWriter27.close();
        printWriter27.println(true);
        java.util.Locale locale31 = null;
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter36 = printWriter34.append('a');
        printWriter34.print("hi!");
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter34, false);
        printWriter40.write("hi!");
        printWriter40.println(' ');
        java.util.Locale locale45 = null;
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        java.util.Locale locale49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray56 = null;
        aSMifierMethodVisitor51.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray54, (int) (short) 1, objArray56);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor59.visitTryCatchBlock(label60, label61, label62, "");
        aSMifierMethodVisitor59.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray68 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray70 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor59, strArray68, 1.0f };
        java.io.PrintWriter printWriter71 = printWriter48.printf(locale49, "", (java.lang.Object[]) strArray68);
        java.io.PrintWriter printWriter72 = printWriter40.printf(locale45, "", (java.lang.Object[]) strArray68);
        java.io.PrintWriter printWriter73 = printWriter27.format(locale31, "", (java.lang.Object[]) strArray68);
        aSMifierClassVisitor15.visit(0, (int) (short) 10, "hi!", "hi!", "", strArray68);
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitOuterClass("hi!", "hi!", "hi!");
        org.mockito.asm.Attribute attribute83 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor15.visitAttribute(attribute83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(printWriter73);
    }

    @Test
    public void test04803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04803");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = null;
        aSMifierMethodVisitor36.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray39, (int) (short) 1, objArray41);
        org.mockito.asm.MethodVisitor methodVisitor43 = aSMifierClassVisitor15.visitMethod((int) (short) 0, "", "", "hi!", strArray39);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        java.util.List list47 = aSMifierClassVisitor15.text;
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("hi!");
        printWriter53.write((-1));
        printWriter53.print((double) (byte) 10);
        java.util.Locale locale58 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor60.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label66 = null;
        java.io.PrintWriter printWriter68 = new java.io.PrintWriter("hi!");
        printWriter68.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor72 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        aSMifierMethodVisitor72.visitTryCatchBlock(label73, label74, label75, "");
        aSMifierMethodVisitor72.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label83 = null;
        org.mockito.asm.Label label84 = null;
        org.mockito.asm.Label[] labelArray85 = new org.mockito.asm.Label[] { label84 };
        aSMifierMethodVisitor72.visitTableSwitchInsn(0, (int) (byte) 10, label83, labelArray85);
        java.io.PrintWriter printWriter87 = printWriter68.printf("hi!", (java.lang.Object[]) labelArray85);
        aSMifierMethodVisitor60.visitTableSwitchInsn(1, (int) (short) 10, label66, labelArray85);
        java.io.PrintWriter printWriter89 = printWriter53.format(locale58, "hi!", (java.lang.Object[]) labelArray85);
        printWriter89.write((int) (byte) 1);
        java.io.PrintWriter printWriter95 = printWriter89.append((java.lang.CharSequence) "hi!", 0, (int) (byte) 1);
        org.mockito.asm.FieldVisitor fieldVisitor96 = aSMifierClassVisitor15.visitField((-1), "", "", "hi!", (java.lang.Object) "hi!");
        org.mockito.asm.Attribute attribute97 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor96.visitAttribute(attribute97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(labelArray85);
        org.junit.Assert.assertNotNull(printWriter87);
        org.junit.Assert.assertNotNull(printWriter89);
        org.junit.Assert.assertNotNull(printWriter95);
        org.junit.Assert.assertNotNull(fieldVisitor96);
    }

    @Test
    public void test04804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04804");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter("hi!");
        java.util.Locale locale8 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray13 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray15 = null;
        aSMifierMethodVisitor10.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray13, (int) (short) 1, objArray15);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor18.visitTryCatchBlock(label19, label20, label21, "");
        aSMifierMethodVisitor18.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray27 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray29 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor18, strArray27, 1.0f };
        java.io.PrintWriter printWriter30 = printWriter7.printf(locale8, "", (java.lang.Object[]) strArray27);
        java.io.PrintWriter printWriter32 = printWriter30.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter34 = printWriter30.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        java.util.Locale locale37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray44 = null;
        aSMifierMethodVisitor39.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray42, (int) (short) 1, objArray44);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label48, label49, label50, "");
        aSMifierMethodVisitor47.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray56 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray58 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor47, strArray56, 1.0f };
        java.io.PrintWriter printWriter59 = printWriter36.printf(locale37, "", (java.lang.Object[]) strArray56);
        char[] charArray66 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter59.println(charArray66);
        printWriter34.print(charArray66);
        printWriter1.print(charArray66);
        printWriter1.println((long) (-1));
        printWriter1.println(false);
        java.io.PrintWriter printWriter74 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test04805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04805");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs(0, 1);
        aSMifierMethodVisitor0.visitTypeInsn(0, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) '4');
        aSMifierMethodVisitor0.visitInsn((int) (short) 10);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, (int) (short) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 1, "hi!", false);
        aSMifierMethodVisitor0.visitIincInsn((int) ' ', (-1));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor30);
    }

    @Test
    public void test04806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04806");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        char[] charArray56 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter49.println(charArray56);
        printWriter24.print(charArray56);
        printWriter24.print(true);
        java.io.PrintWriter printWriter62 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter64 = printWriter24.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor65 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter64);
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierClassVisitor65.visitAnnotation("hi!", true);
        aSMifierClassVisitor65.visitInnerClass("", "", "", (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierClassVisitor65.visitAnnotation("hi!", true);
        aSMifierClassVisitor65.visitSource("", "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(annotationVisitor76);
    }

    @Test
    public void test04807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04807");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitFieldInsn(100, "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitInsn(0);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray29 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray31 = null;
        aSMifierMethodVisitor26.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray29, (int) (short) 1, objArray31);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor34.visitTryCatchBlock(label35, label36, label37, "");
        aSMifierMethodVisitor34.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray43 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray45 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor34, strArray43, 1.0f };
        java.io.PrintWriter printWriter46 = printWriter23.printf(locale24, "", (java.lang.Object[]) strArray43);
        aSMifierMethodVisitor0.print(printWriter23);
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, (int) (short) 0);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(annotationVisitor48);
    }

    @Test
    public void test04808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04808");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        printWriter14.println((double) (-1.0f));
        printWriter14.println((int) '4');
        printWriter14.println();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
    }

    @Test
    public void test04809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04809");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitSource("hi!", "");
        aSMifierClassVisitor15.visitInnerClass("hi!", "hi!", "hi!", (int) (short) 1);
        aSMifierClassVisitor15.visitSource("hi!", "");
        org.mockito.asm.Attribute attribute42 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor15.visitAttribute(attribute42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
    }

    @Test
    public void test04810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04810");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label15);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 100, label18);
        aSMifierMethodVisitor0.visitIincInsn((int) 'a', (int) '4');
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label23, label24, label25, "");
    }

    @Test
    public void test04811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04811");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 0, "hi!", false);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter("hi!");
        java.util.Locale locale20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray27 = null;
        aSMifierMethodVisitor22.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray25, (int) (short) 1, objArray27);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor30, strArray39, 1.0f };
        java.io.PrintWriter printWriter42 = printWriter19.printf(locale20, "", (java.lang.Object[]) strArray39);
        printWriter42.println();
        printWriter42.print('a');
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter((java.io.Writer) printWriter42);
        printWriter46.flush();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor48 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter46);
        java.lang.String[] strArray53 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        org.mockito.asm.MethodVisitor methodVisitor54 = aSMifierClassVisitor48.visitMethod((int) (short) 10, "hi!", "", "", strArray53);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter("hi!");
        java.util.Locale locale58 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray63 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray65 = null;
        aSMifierMethodVisitor60.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray63, (int) (short) 1, objArray65);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor68.visitTryCatchBlock(label69, label70, label71, "");
        aSMifierMethodVisitor68.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray77 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray79 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor68, strArray77, 1.0f };
        java.io.PrintWriter printWriter80 = printWriter57.printf(locale58, "", (java.lang.Object[]) strArray77);
        printWriter80.println();
        printWriter80.print('a');
        java.io.PrintWriter printWriter84 = new java.io.PrintWriter((java.io.Writer) printWriter80);
        printWriter84.flush();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor86 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter84);
        java.lang.String[] strArray91 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        org.mockito.asm.MethodVisitor methodVisitor92 = aSMifierClassVisitor86.visitMethod((int) (short) 10, "hi!", "", "", strArray91);
        aSMifierMethodVisitor0.visitFrame((-1), 100, (java.lang.Object[]) strArray53, (int) (byte) 100, (java.lang.Object[]) strArray91);
        aSMifierMethodVisitor0.visitIincInsn((int) '#', (int) (short) 1);
        java.util.List list97 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(methodVisitor54);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(methodVisitor92);
        org.junit.Assert.assertNotNull(list97);
    }

    @Test
    public void test04812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04812");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor15);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 10, label22);
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLabel(label24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 100, label27);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor29.visitTryCatchBlock(label30, label31, label32, "");
        aSMifierMethodVisitor29.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj38 = null;
        aSMifierMethodVisitor29.visitLdcInsn(obj38);
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor29.visitJumpInsn((int) (short) 1, label41);
        aSMifierMethodVisitor29.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor29.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierMethodVisitor29.visitAnnotationDefault();
        aSMifierMethodVisitor29.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor29.visitAnnotationDefault();
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor29.visitLocalVariable("hi!", "hi!", "", label57, label58, (int) (short) 1);
        aSMifierMethodVisitor29.visitIntInsn((int) '#', (int) 'a');
        aSMifierMethodVisitor29.visitIntInsn((int) (short) 100, (int) (byte) 0);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor29);
        org.mockito.asm.Label label68 = null;
        aSMifierMethodVisitor29.visitLabel(label68);
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor29.visitJumpInsn((int) 'a', label71);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor29.visitInsn((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(annotationVisitor53);
    }

    @Test
    public void test04813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04813");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, (int) (short) 10);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label10 = null;
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.write((-1));
        printWriter12.flush();
        java.util.Locale locale16 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = null;
        aSMifierMethodVisitor18.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray21, (int) (short) 1, objArray23);
        java.io.PrintWriter printWriter25 = printWriter12.printf(locale16, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter27 = printWriter25.append((java.lang.CharSequence) "hi!");
        printWriter27.println(false);
        java.util.Locale locale30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj41 = null;
        aSMifierMethodVisitor32.visitLdcInsn(obj41);
        aSMifierMethodVisitor32.visitEnd();
        aSMifierMethodVisitor32.visitMaxs((int) (byte) 0, (int) (short) 1);
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor50.visitTryCatchBlock(label51, label52, label53, "");
        aSMifierMethodVisitor50.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj59 = null;
        aSMifierMethodVisitor50.visitLdcInsn(obj59);
        org.mockito.asm.Label label61 = null;
        int[] intArray68 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor69.visitTryCatchBlock(label70, label71, label72, "");
        aSMifierMethodVisitor69.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label[] labelArray82 = new org.mockito.asm.Label[] { label81 };
        aSMifierMethodVisitor69.visitTableSwitchInsn(0, (int) (byte) 10, label80, labelArray82);
        aSMifierMethodVisitor50.visitLookupSwitchInsn(label61, intArray68, labelArray82);
        aSMifierMethodVisitor32.visitTableSwitchInsn((int) '4', (int) (short) 10, label49, labelArray82);
        java.io.PrintWriter printWriter86 = printWriter27.format(locale30, "hi!", (java.lang.Object[]) labelArray82);
        aSMifierMethodVisitor0.visitTableSwitchInsn((-1), (int) ' ', label10, labelArray82);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray82);
        org.junit.Assert.assertNotNull(printWriter86);
    }

    @Test
    public void test04814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04814");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        aSMifierMethodVisitor39.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor39.visitLocalVariable("hi!", "hi!", "hi!", label56, label57, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor39.visitParameterAnnotation(0, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor64 = aSMifierClassVisitor28.visitField((int) ' ', "hi!", "hi!", "", (java.lang.Object) aSMifierMethodVisitor39);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = fieldVisitor64.visitAnnotation("", true);
        annotationVisitor67.visitEnum("", "hi!", "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor67);
    }

    @Test
    public void test04815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04815");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label18);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        java.util.Locale locale22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray27 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray29 = null;
        aSMifierMethodVisitor24.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray27, (int) (short) 1, objArray29);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor32.visitTryCatchBlock(label33, label34, label35, "");
        aSMifierMethodVisitor32.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray41 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray43 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor32, strArray41, 1.0f };
        java.io.PrintWriter printWriter44 = printWriter21.printf(locale22, "", (java.lang.Object[]) strArray41);
        boolean boolean45 = printWriter21.checkError();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) boolean45);
        aSMifierMethodVisitor0.visitMaxs((int) ' ', (int) '4');
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor54.visitEnum("", "", "");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(annotationVisitor54);
    }

    @Test
    public void test04816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04816");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) -1, label13);
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter20 = printWriter16.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj31 = null;
        aSMifierMethodVisitor22.visitLdcInsn(obj31);
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor22.visitJumpInsn((int) (short) 1, label34);
        aSMifierMethodVisitor22.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label[] labelArray42 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor22.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label41, labelArray42);
        java.io.PrintWriter printWriter44 = printWriter20.printf("", (java.lang.Object[]) labelArray42);
        aSMifierMethodVisitor0.print(printWriter44);
        printWriter44.println(0);
        java.util.Locale locale48 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray53 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray55 = null;
        aSMifierMethodVisitor50.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray53, (int) (short) 1, objArray55);
        java.io.PrintWriter printWriter57 = printWriter44.printf(locale48, "", objArray55);
        printWriter44.println('#');
        printWriter44.print((-1));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(labelArray42);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(printWriter57);
    }

    @Test
    public void test04817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04817");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label14);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 100);
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 1, "", "", "");
        aSMifierMethodVisitor0.visitMaxs(100, 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitParameterAnnotation((int) 'a', "hi!", true);
        annotationVisitor31.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor31);
    }

    @Test
    public void test04818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04818");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label27, label28, (int) (byte) 10);
        java.io.PrintWriter printWriter31 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.print(printWriter31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test04819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04819");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        printWriter36.print(false);
        java.util.Locale locale39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor41.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { (byte) 0 };
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter("hi!");
        printWriter57.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor61.visitTryCatchBlock(label62, label63, label64, "");
        aSMifierMethodVisitor61.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label[] labelArray74 = new org.mockito.asm.Label[] { label73 };
        aSMifierMethodVisitor61.visitTableSwitchInsn(0, (int) (byte) 10, label72, labelArray74);
        java.io.PrintWriter printWriter76 = printWriter57.printf("hi!", (java.lang.Object[]) labelArray74);
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label53, intArray55, labelArray74);
        java.io.PrintWriter printWriter78 = printWriter36.printf(locale39, "", (java.lang.Object[]) labelArray74);
        java.io.PrintWriter printWriter80 = printWriter78.append(' ');
        boolean boolean81 = printWriter78.checkError();
        boolean boolean82 = printWriter78.checkError();
        printWriter78.flush();
        printWriter78.println(1L);
        java.io.PrintWriter printWriter87 = printWriter78.append(' ');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0]");
        org.junit.Assert.assertNotNull(labelArray74);
        org.junit.Assert.assertNotNull(printWriter76);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(printWriter87);
    }

    @Test
    public void test04820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04820");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((int) (byte) -1);
        printWriter1.print((double) (byte) 1);
        printWriter1.close();
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter11.println();
        printWriter11.println((double) (byte) 100);
        printWriter11.print((long) (byte) 100);
        printWriter11.println();
        printWriter11.print((int) 'a');
        printWriter11.write(100);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.println((int) (short) -1);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor26 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter23);
        aSMifierClassVisitor26.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor26.visitSource("", "");
        aSMifierClassVisitor26.visitEnd();
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter44 = printWriter40.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor46.visitTryCatchBlock(label47, label48, label49, "");
        aSMifierMethodVisitor46.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj55 = null;
        aSMifierMethodVisitor46.visitLdcInsn(obj55);
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor46.visitJumpInsn((int) (short) 1, label58);
        aSMifierMethodVisitor46.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label[] labelArray66 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor46.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label65, labelArray66);
        java.io.PrintWriter printWriter68 = printWriter44.printf("", (java.lang.Object[]) labelArray66);
        printWriter68.println('a');
        java.io.PrintWriter printWriter72 = new java.io.PrintWriter("hi!");
        printWriter72.write((-1));
        printWriter72.flush();
        java.lang.Object[] objArray77 = null;
        java.io.PrintWriter printWriter78 = printWriter72.format("hi!", objArray77);
        printWriter72.print(true);
        printWriter68.print((java.lang.Object) printWriter72);
        printWriter68.print((float) (short) 100);
        org.mockito.asm.FieldVisitor fieldVisitor84 = aSMifierClassVisitor26.visitField((int) (byte) 1, "hi!", "", "", (java.lang.Object) printWriter68);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor85 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter68);
        printWriter68.write("hi!");
        printWriter11.println((java.lang.Object) printWriter68);
        printWriter68.print(true);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(labelArray66);
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(fieldVisitor84);
    }

    @Test
    public void test04821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04821");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs((int) (byte) -1, 10);
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "hi!", "", "");
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitLabel(label32);
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor0.visitJumpInsn(100, label35);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.Label label42 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitJumpInsn((-1), label42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test04822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04822");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label22);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = annotationVisitor24.visitArray("");
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor26);
    }

    @Test
    public void test04823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04823");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("");
        printWriter26.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        org.mockito.asm.MethodVisitor methodVisitor37 = aSMifierClassVisitor31.visitMethod(0, "", "", "hi!", strArray36);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter47 = printWriter43.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj58 = null;
        aSMifierMethodVisitor49.visitLdcInsn(obj58);
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor49.visitJumpInsn((int) (short) 1, label61);
        aSMifierMethodVisitor49.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label[] labelArray69 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor49.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label68, labelArray69);
        java.io.PrintWriter printWriter71 = printWriter47.printf("", (java.lang.Object[]) labelArray69);
        printWriter71.println('a');
        org.mockito.asm.FieldVisitor fieldVisitor74 = aSMifierClassVisitor31.visitField((int) 'a', "hi!", "hi!", "hi!", (java.lang.Object) printWriter71);
        aSMifierClassVisitor31.visitOuterClass("hi!", "", "hi!");
        aSMifierClassVisitor31.visitEnd();
        org.mockito.asm.Attribute attribute80 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor31.visitAttribute(attribute80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodVisitor37);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(labelArray69);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(fieldVisitor74);
    }

    @Test
    public void test04824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04824");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println((-1.0d));
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter("hi!");
        printWriter5.print(false);
        java.io.PrintWriter printWriter9 = printWriter5.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter5.println((double) (-1L));
        java.util.Locale locale13 = null;
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((java.lang.Object) (short) -1);
        printWriter16.flush();
        java.util.Locale locale20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor22.visitLocalVariable("hi!", "hi!", "hi!", label31, label32, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor22.visitAnnotation("", true);
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label50 = null;
        int[] intArray57 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label50, intArray57, labelArray71);
        org.mockito.asm.Label[] labelArray74 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label38, intArray57, labelArray74);
        java.io.PrintWriter printWriter76 = printWriter16.format(locale20, "hi!", (java.lang.Object[]) labelArray74);
        java.io.PrintWriter printWriter77 = printWriter5.format(locale13, "hi!", (java.lang.Object[]) labelArray74);
        printWriter1.println((java.lang.Object) printWriter5);
        printWriter1.print((long) 'a');
        printWriter1.print("hi!");
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(labelArray74);
        org.junit.Assert.assertNotNull(printWriter76);
        org.junit.Assert.assertNotNull(printWriter77);
    }

    @Test
    public void test04825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04825");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitTypeInsn((int) '#', "");
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLabel(label26);
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label28, label29, label30, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor36);
    }

    @Test
    public void test04826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04826");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) -1, "", true);
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "hi!", label26, label27, 0);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label30, label31, label32, "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test04827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04827");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label19, labelArray20);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "");
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        printWriter26.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter30 = printWriter26.append((java.lang.CharSequence) "");
        printWriter26.print("");
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter26, true);
        aSMifierMethodVisitor0.print(printWriter26);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 1, "hi!", false);
        org.junit.Assert.assertNotNull(labelArray20);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(annotationVisitor39);
    }

    @Test
    public void test04828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04828");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print((double) 'a');
        java.io.PrintWriter printWriter19 = printWriter1.append((java.lang.CharSequence) "");
        java.util.Locale locale20 = null;
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter27 = printWriter23.append((java.lang.CharSequence) "");
        printWriter27.close();
        printWriter27.println(true);
        java.util.Locale locale31 = null;
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter36 = printWriter34.append('a');
        printWriter34.print("hi!");
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter34, false);
        printWriter40.write("hi!");
        printWriter40.println(' ');
        java.util.Locale locale45 = null;
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        java.util.Locale locale49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray56 = null;
        aSMifierMethodVisitor51.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray54, (int) (short) 1, objArray56);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor59.visitTryCatchBlock(label60, label61, label62, "");
        aSMifierMethodVisitor59.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray68 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray70 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor59, strArray68, 1.0f };
        java.io.PrintWriter printWriter71 = printWriter48.printf(locale49, "", (java.lang.Object[]) strArray68);
        java.io.PrintWriter printWriter72 = printWriter40.printf(locale45, "", (java.lang.Object[]) strArray68);
        java.io.PrintWriter printWriter73 = printWriter27.format(locale31, "", (java.lang.Object[]) strArray68);
        java.io.PrintWriter printWriter74 = printWriter19.format(locale20, "hi!", (java.lang.Object[]) strArray68);
        java.io.PrintWriter printWriter76 = new java.io.PrintWriter("hi!");
        printWriter76.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter80 = printWriter76.append((java.lang.CharSequence) "");
        printWriter76.print("");
        java.io.PrintWriter printWriter84 = new java.io.PrintWriter((java.io.Writer) printWriter76, true);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor85 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter84);
        printWriter84.write("hi!");
        printWriter84.println("");
        java.io.PrintWriter printWriter90 = new java.io.PrintWriter((java.io.Writer) printWriter84);
        printWriter84.flush();
        printWriter74.println((java.lang.Object) printWriter84);
        char[] charArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            printWriter74.println(charArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(printWriter74);
        org.junit.Assert.assertNotNull(printWriter80);
    }

    @Test
    public void test04829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04829");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.print('a');
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter28.flush();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter((java.io.Writer) printWriter28, true);
        printWriter32.println();
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter((java.io.Writer) printWriter32, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter32);
        aSMifierClassVisitor36.visitOuterClass("hi!", "", "");
        aSMifierClassVisitor36.visitEnd();
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter("hi!");
        printWriter47.write((-1));
        printWriter47.flush();
        java.util.Locale locale51 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray56 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray58 = null;
        aSMifierMethodVisitor53.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray56, (int) (short) 1, objArray58);
        java.io.PrintWriter printWriter60 = printWriter47.printf(locale51, "", (java.lang.Object[]) strArray56);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor61 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter47);
        aSMifierClassVisitor61.visitEnd();
        aSMifierClassVisitor61.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor61.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = aSMifierClassVisitor61.visitAnnotation("hi!", false);
        aSMifierClassVisitor61.visitEnd();
        java.lang.String[] strArray76 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        org.mockito.asm.MethodVisitor methodVisitor77 = aSMifierClassVisitor61.visitMethod(0, "", "hi!", "hi!", strArray76);
        org.mockito.asm.MethodVisitor methodVisitor78 = aSMifierClassVisitor36.visitMethod((int) '4', "", "", "hi!", strArray76);
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = methodVisitor78.visitParameterAnnotation((int) (short) 1, "", false);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(methodVisitor77);
        org.junit.Assert.assertNotNull(methodVisitor78);
        org.junit.Assert.assertNotNull(annotationVisitor82);
    }

    @Test
    public void test04830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04830");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, (int) (short) 1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitLabel(label21);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor29);
    }

    @Test
    public void test04831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04831");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.lang.Object[] objArray6 = null;
        java.io.PrintWriter printWriter7 = printWriter1.format("hi!", objArray6);
        printWriter1.print(true);
        printWriter1.print((double) (byte) 1);
        org.junit.Assert.assertNotNull(printWriter7);
    }

    @Test
    public void test04832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04832");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter34.print((float) (byte) 10);
        java.io.PrintWriter printWriter38 = printWriter34.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor39 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter38);
        java.util.List list40 = aSMifierClassVisitor39.getText();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(list40);
    }

    @Test
    public void test04833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04833");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        aSMifierMethodVisitor5.visitTryCatchBlock(label6, label7, label8, "");
        aSMifierMethodVisitor5.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] { label17 };
        aSMifierMethodVisitor5.visitTableSwitchInsn(0, (int) (byte) 10, label16, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = printWriter1.append((java.lang.CharSequence) "");
        printWriter22.close();
        printWriter22.print(false);
        printWriter22.println('#');
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter22);
    }

    @Test
    public void test04834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04834");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.write((-1));
        printWriter29.flush();
        java.util.Locale locale33 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray40 = null;
        aSMifierMethodVisitor35.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray38, (int) (short) 1, objArray40);
        java.io.PrintWriter printWriter42 = printWriter29.printf(locale33, "", (java.lang.Object[]) strArray38);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor43 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter29);
        aSMifierClassVisitor43.visitEnd();
        aSMifierClassVisitor43.visitSource("", "hi!");
        java.lang.String[] strArray53 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor43.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray53);
        aSMifierClassVisitor43.visitInnerClass("", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray67 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray69 = null;
        aSMifierMethodVisitor64.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray67, (int) (short) 1, objArray69);
        org.mockito.asm.MethodVisitor methodVisitor71 = aSMifierClassVisitor43.visitMethod((int) (short) 0, "", "", "hi!", strArray67);
        java.io.PrintWriter printWriter78 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter80 = printWriter78.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor81 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter80);
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = aSMifierClassVisitor81.visitAnnotation("hi!", true);
        java.lang.String[] strArray90 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor81.visit(1, (int) (short) 10, "hi!", "", "", strArray90);
        aSMifierClassVisitor43.visit((-1), (int) (byte) 10, "", "", "", strArray90);
        java.io.PrintWriter printWriter93 = printWriter26.format("", (java.lang.Object[]) strArray90);
        printWriter26.println();
        java.io.PrintWriter printWriter98 = printWriter26.append((java.lang.CharSequence) "hi!", 0, (int) (short) 1);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(methodVisitor71);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertNotNull(annotationVisitor84);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(printWriter93);
        org.junit.Assert.assertNotNull(printWriter98);
    }

    @Test
    public void test04835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04835");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        printWriter27.print((java.lang.Object) (short) -1);
        printWriter27.flush();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter27);
        printWriter31.write("");
        org.mockito.asm.FieldVisitor fieldVisitor34 = aSMifierClassVisitor15.visitField(0, "", "", "hi!", (java.lang.Object) printWriter31);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor42.visitTryCatchBlock(label43, label44, label45, "");
        aSMifierMethodVisitor42.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj51 = null;
        aSMifierMethodVisitor42.visitLdcInsn(obj51);
        aSMifierMethodVisitor42.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor54 = aSMifierClassVisitor15.visitField((-1), "hi!", "hi!", "", (java.lang.Object) aSMifierMethodVisitor42);
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor54);
    }

    @Test
    public void test04836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04836");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter24.print("");
        java.io.PrintWriter printWriter30 = printWriter24.append('#');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor31.visitTryCatchBlock(label32, label33, label34, "");
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor31.visitLocalVariable("hi!", "hi!", "hi!", label40, label41, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor31.visitAnnotationDefault();
        aSMifierMethodVisitor31.visitMultiANewArrayInsn("hi!", (int) ' ');
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierMethodVisitor31.visitAnnotationDefault();
        aSMifierMethodVisitor31.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor31.visitAnnotation("", false);
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter("hi!");
        printWriter54.print(false);
        java.io.PrintWriter printWriter58 = printWriter54.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter54);
        printWriter59.println();
        printWriter59.write("hi!");
        aSMifierMethodVisitor31.print(printWriter59);
        aSMifierMethodVisitor31.visitIntInsn(1, 0);
        aSMifierMethodVisitor31.visitMaxs((int) (byte) -1, (int) (short) 10);
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label label74 = null;
        aSMifierMethodVisitor31.visitLocalVariable("", "", "", label73, label74, (int) '4');
        printWriter30.println((java.lang.Object) "");
        printWriter30.println('4');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(printWriter58);
    }

    @Test
    public void test04837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04837");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor0.visitInsn(1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 0);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitIincInsn((int) 'a', (int) '4');
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) ' ', label24);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test04838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04838");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 10);
        aSMifierMethodVisitor0.visitInsn((int) '#');
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor0.visitJumpInsn(1, label80);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
    }

    @Test
    public void test04839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04839");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 10);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label78);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, (int) (short) 100);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label85 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label85);
        aSMifierMethodVisitor0.visitVarInsn(100, 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor93 = aSMifierMethodVisitor0.visitParameterAnnotation(100, "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor94 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(annotationVisitor93);
        org.junit.Assert.assertNotNull(annotationVisitor94);
    }

    @Test
    public void test04840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04840");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor0.visitInsn(100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list20 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label24, label25, (int) (short) 1);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitJumpInsn(0, label30);
        org.junit.Assert.assertNotNull(list20);
    }

    @Test
    public void test04841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04841");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierClassVisitor15.visitAnnotation("", false);
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter32 = printWriter30.append('a');
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.println((-1.0d));
        printWriter30.print((java.lang.Object) (-1.0d));
        java.io.PrintWriter printWriter39 = printWriter30.append('a');
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        java.util.Locale locale42 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray47 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray49 = null;
        aSMifierMethodVisitor44.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray47, (int) (short) 1, objArray49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor52.visitTryCatchBlock(label53, label54, label55, "");
        aSMifierMethodVisitor52.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray61 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray63 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor52, strArray61, 1.0f };
        java.io.PrintWriter printWriter64 = printWriter41.printf(locale42, "", (java.lang.Object[]) strArray61);
        char[] charArray71 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter64.println(charArray71);
        printWriter64.write(1);
        printWriter39.print((java.lang.Object) 1);
        printWriter39.print((double) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor79 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray82 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray84 = null;
        aSMifierMethodVisitor79.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray82, (int) (short) 1, objArray84);
        java.io.PrintWriter printWriter86 = printWriter39.format("", objArray84);
        printWriter39.print("hi!");
        java.io.PrintWriter printWriter90 = printWriter39.append(' ');
        java.util.Locale locale91 = null;
        java.lang.String[] strArray93 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter94 = printWriter90.format(locale91, "", (java.lang.Object[]) strArray93);
        org.mockito.asm.MethodVisitor methodVisitor95 = aSMifierClassVisitor15.visitMethod((int) (short) -1, "hi!", "", "", strArray93);
        methodVisitor95.visitIincInsn((int) (short) 100, (int) (byte) 100);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(printWriter86);
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(printWriter94);
        org.junit.Assert.assertNotNull(methodVisitor95);
    }

    @Test
    public void test04842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04842");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 100);
        org.mockito.asm.Label label3 = null;
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label3, label4, label5, "hi!");
        org.mockito.asm.Label label9 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label9);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 100, (int) (short) -1);
    }

    @Test
    public void test04843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04843");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "");
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.Object obj28 = null;
        org.mockito.asm.FieldVisitor fieldVisitor29 = aSMifierClassVisitor15.visitField(1, "", "", "", obj28);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = fieldVisitor29.visitAnnotation("hi!", true);
        fieldVisitor29.visitEnd();
        org.mockito.asm.Attribute attribute34 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor29.visitAttribute(attribute34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test04844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04844");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 1, "", true);
        aSMifierMethodVisitor0.visitInsn((int) (short) 1);
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 0, label24);
        aSMifierMethodVisitor0.visitMaxs(10, (int) (byte) 0);
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLineNumber((-1), label30);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", true);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor0.visitLabel(label37);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor35);
    }

    @Test
    public void test04845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04845");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("hi!", "");
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
    }

    @Test
    public void test04846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04846");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "", "");
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray28 = null;
        org.mockito.asm.MethodVisitor methodVisitor29 = aSMifierClassVisitor15.visitMethod((-1), "", "hi!", "", strArray28);
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "");
        aSMifierClassVisitor15.visitOuterClass("hi!", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierClassVisitor15.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(methodVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor43);
    }

    @Test
    public void test04847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04847");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter3);
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierClassVisitor4.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = annotationVisitor7.visitAnnotation("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = annotationVisitor7.visitAnnotation("", "hi!");
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(annotationVisitor13);
    }

    @Test
    public void test04848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04848");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.println((float) (short) 0);
        printWriter1.println((float) 1L);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter8);
        java.io.PrintWriter printWriter11 = printWriter8.append('#');
        printWriter11.println(10.0d);
        org.junit.Assert.assertNotNull(printWriter11);
    }

    @Test
    public void test04849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04849");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor7.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor7.visitAnnotationDefault();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        java.io.PrintWriter printWriter50 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray48);
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor7.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray48, 1, (java.lang.Object[]) strArray52);
        java.io.PrintWriter printWriter54 = printWriter1.format("hi!", (java.lang.Object[]) strArray52);
        printWriter1.print(0.0f);
        printWriter1.print((long) ' ');
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter("hi!");
        java.util.Locale locale62 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray67 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray69 = null;
        aSMifierMethodVisitor64.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray67, (int) (short) 1, objArray69);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor72 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        aSMifierMethodVisitor72.visitTryCatchBlock(label73, label74, label75, "");
        aSMifierMethodVisitor72.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray81 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray83 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor72, strArray81, 1.0f };
        java.io.PrintWriter printWriter84 = printWriter61.printf(locale62, "", (java.lang.Object[]) strArray81);
        boolean boolean85 = printWriter84.checkError();
        printWriter84.write("hi!");
        org.mockito.asm.Attribute[] attributeArray89 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        java.io.PrintWriter printWriter90 = printWriter84.format("", (java.lang.Object[]) attributeArray89);
        java.io.PrintWriter printWriter91 = printWriter1.printf("", (java.lang.Object[]) attributeArray89);
        // The following exception was thrown during execution in test generation
        try {
            printWriter1.write("hi!", 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(attributeArray89);
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertNotNull(printWriter91);
    }

    @Test
    public void test04850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04850");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label19, labelArray20);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitMethodInsn(0, "", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(labelArray20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor45);
    }

    @Test
    public void test04851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04851");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.print((double) (byte) 10);
        java.util.Locale locale6 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label14 = null;
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label[] labelArray33 = new org.mockito.asm.Label[] { label32 };
        aSMifierMethodVisitor20.visitTableSwitchInsn(0, (int) (byte) 10, label31, labelArray33);
        java.io.PrintWriter printWriter35 = printWriter16.printf("hi!", (java.lang.Object[]) labelArray33);
        aSMifierMethodVisitor8.visitTableSwitchInsn(1, (int) (short) 10, label14, labelArray33);
        java.io.PrintWriter printWriter37 = printWriter1.format(locale6, "hi!", (java.lang.Object[]) labelArray33);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor38 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter("hi!");
        java.util.Locale locale46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray51 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray53 = null;
        aSMifierMethodVisitor48.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray51, (int) (short) 1, objArray53);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor56.visitTryCatchBlock(label57, label58, label59, "");
        aSMifierMethodVisitor56.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray65 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray67 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor56, strArray65, 1.0f };
        java.io.PrintWriter printWriter68 = printWriter45.printf(locale46, "", (java.lang.Object[]) strArray65);
        printWriter68.print("hi!");
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter((java.io.Writer) printWriter68);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor72 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter71);
        aSMifierClassVisitor72.visitOuterClass("hi!", "hi!", "hi!");
        java.util.List list77 = aSMifierClassVisitor72.getText();
        aSMifierClassVisitor72.visitSource("hi!", "");
        aSMifierClassVisitor72.visitSource("hi!", "");
        java.lang.String[] strArray88 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        org.mockito.asm.MethodVisitor methodVisitor89 = aSMifierClassVisitor72.visitMethod((int) (byte) 1, "", "hi!", "", strArray88);
        aSMifierClassVisitor38.visit((int) 'a', 1, "hi!", "hi!", "", strArray88);
        aSMifierClassVisitor38.visitEnd();
        org.junit.Assert.assertNotNull(labelArray33);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertNotNull(list77);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(methodVisitor89);
    }

    @Test
    public void test04852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04852");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        aSMifierMethodVisitor39.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor39.visitLocalVariable("hi!", "hi!", "hi!", label56, label57, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor39.visitParameterAnnotation(0, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor64 = aSMifierClassVisitor28.visitField((int) ' ', "hi!", "hi!", "", (java.lang.Object) aSMifierMethodVisitor39);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = fieldVisitor64.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = fieldVisitor64.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = fieldVisitor64.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = annotationVisitor73.visitArray("");
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = annotationVisitor73.visitArray("hi!");
        annotationVisitor77.visitEnum("", "", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(annotationVisitor75);
        org.junit.Assert.assertNotNull(annotationVisitor77);
    }

    @Test
    public void test04853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04853");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        char[] charArray56 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter49.println(charArray56);
        printWriter24.print(charArray56);
        printWriter24.print(true);
        java.io.PrintWriter printWriter62 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.print((float) '4');
        printWriter24.println();
        printWriter24.write("hi!");
        java.io.PrintWriter printWriter69 = printWriter24.append((java.lang.CharSequence) "hi!");
        printWriter24.print((int) (short) 100);
        boolean boolean72 = printWriter24.checkError();
        printWriter24.println((long) (short) 1);
        printWriter24.flush();
        printWriter24.println();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor77 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        printWriter24.println();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test04854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04854");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        printWriter5.println((float) 0L);
        java.io.PrintWriter printWriter11 = printWriter5.append((java.lang.CharSequence) "");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter11);
    }

    @Test
    public void test04855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04855");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "", "");
        aSMifierClassVisitor15.visitInnerClass("", "", "hi!", (int) (short) 100);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test04856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04856");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        aSMifierMethodVisitor6.visitTryCatchBlock(label7, label8, label9, "");
        aSMifierMethodVisitor6.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj15 = null;
        aSMifierMethodVisitor6.visitLdcInsn(obj15);
        aSMifierMethodVisitor6.visitInsn((int) ' ');
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj31 = null;
        aSMifierMethodVisitor22.visitLdcInsn(obj31);
        org.mockito.asm.Label label33 = null;
        int[] intArray40 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label[] labelArray54 = new org.mockito.asm.Label[] { label53 };
        aSMifierMethodVisitor41.visitTableSwitchInsn(0, (int) (byte) 10, label52, labelArray54);
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label33, intArray40, labelArray54);
        aSMifierMethodVisitor6.visitTableSwitchInsn((int) '4', (int) '#', label21, labelArray54);
        java.io.PrintWriter printWriter58 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray54);
        printWriter1.println(0L);
        printWriter1.close();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor62.visitTryCatchBlock(label63, label64, label65, "");
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor62.visitLocalVariable("hi!", "hi!", "hi!", label71, label72, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = aSMifierMethodVisitor62.visitAnnotation("", true);
        annotationVisitor77.visitEnum("hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = annotationVisitor77.visitAnnotation("", "");
        annotationVisitor77.visitEnd();
        printWriter1.println((java.lang.Object) annotationVisitor77);
        annotationVisitor77.visitEnum("", "", "");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray54);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(annotationVisitor77);
        org.junit.Assert.assertNotNull(annotationVisitor84);
    }

    @Test
    public void test04857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04857");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.println(0.0f);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierClassVisitor29.visitAnnotation("", false);
        annotationVisitor32.visitEnum("", "", "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test04858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04858");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor24.visitEnum("hi!", "", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor30.visitMaxs(100, (int) (short) -1);
        aSMifierMethodVisitor30.visitIincInsn((int) (short) 0, (-1));
        aSMifierMethodVisitor30.visitInsn((int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierMethodVisitor30.visitAnnotationDefault();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label48, label49, label50, "hi!");
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor30.visitLabel(label53);
        annotationVisitor24.visit("hi!", (java.lang.Object) label53);
        annotationVisitor24.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor47);
    }

    @Test
    public void test04859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04859");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitOuterClass("hi!", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj53 = null;
        aSMifierMethodVisitor44.visitLdcInsn(obj53);
        aSMifierMethodVisitor44.visitEnd();
        aSMifierMethodVisitor44.visitCode();
        org.mockito.asm.FieldVisitor fieldVisitor57 = aSMifierClassVisitor28.visitField((int) ' ', "", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor44);
        aSMifierMethodVisitor44.visitVarInsn((int) (short) 1, (int) (short) 0);
        aSMifierMethodVisitor44.visitMaxs(0, (int) '#');
        java.util.List list64 = aSMifierMethodVisitor44.text;
        aSMifierMethodVisitor44.visitIincInsn((int) (short) 0, (-1));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(list64);
    }

    @Test
    public void test04860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04860");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.print('a');
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter28.flush();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        aSMifierClassVisitor30.visitSource("hi!", "");
        aSMifierClassVisitor30.visitOuterClass("hi!", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierClassVisitor30.visitAnnotation("", true);
        aSMifierClassVisitor30.visitOuterClass("hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test04861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04861");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        java.util.List list13 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 1);
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLabel(label17);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 10);
        org.junit.Assert.assertNotNull(list13);
    }

    @Test
    public void test04862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04862");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label6 = null;
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        printWriter8.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label[] labelArray25 = new org.mockito.asm.Label[] { label24 };
        aSMifierMethodVisitor12.visitTableSwitchInsn(0, (int) (byte) 10, label23, labelArray25);
        java.io.PrintWriter printWriter27 = printWriter8.printf("hi!", (java.lang.Object[]) labelArray25);
        aSMifierMethodVisitor0.visitTableSwitchInsn(1, (int) (short) 10, label6, labelArray25);
        org.mockito.asm.Label label31 = null;
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter37 = printWriter33.append((java.lang.CharSequence) "");
        printWriter33.print((double) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj50 = null;
        aSMifierMethodVisitor41.visitLdcInsn(obj50);
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor41.visitJumpInsn((int) (short) 1, label53);
        aSMifierMethodVisitor41.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor41.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor41.visitAnnotationDefault();
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter("hi!");
        printWriter65.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor69.visitTryCatchBlock(label70, label71, label72, "");
        aSMifierMethodVisitor69.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label[] labelArray82 = new org.mockito.asm.Label[] { label81 };
        aSMifierMethodVisitor69.visitTableSwitchInsn(0, (int) (byte) 10, label80, labelArray82);
        java.io.PrintWriter printWriter84 = printWriter65.printf("hi!", (java.lang.Object[]) labelArray82);
        java.lang.String[] strArray86 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor41.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray82, 1, (java.lang.Object[]) strArray86);
        java.io.PrintWriter printWriter88 = printWriter33.printf("hi!", (java.lang.Object[]) labelArray82);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) ' ', (-1), label31, labelArray82);
        org.mockito.asm.AnnotationVisitor annotationVisitor93 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) -1, "hi!", false);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, (int) (byte) -1);
        aSMifierMethodVisitor0.visitIntInsn((int) '#', (int) (short) 10);
        org.junit.Assert.assertNotNull(labelArray25);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(labelArray82);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(annotationVisitor93);
    }

    @Test
    public void test04863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04863");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.write((-1));
        printWriter22.flush();
        java.util.Locale locale26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray31 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray33 = null;
        aSMifierMethodVisitor28.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray31, (int) (short) 1, objArray33);
        java.io.PrintWriter printWriter35 = printWriter22.printf(locale26, "", (java.lang.Object[]) strArray31);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter22);
        aSMifierClassVisitor36.visitEnd();
        aSMifierClassVisitor36.visitSource("", "hi!");
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor36.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray46);
        org.mockito.asm.MethodVisitor methodVisitor48 = aSMifierClassVisitor15.visitMethod((int) (short) 100, "hi!", "hi!", "", strArray46);
        aSMifierClassVisitor15.visitInnerClass("", "", "", (int) (short) 100);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("hi!", "", "hi!");
        aSMifierClassVisitor15.visitSource("", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor66.visitTryCatchBlock(label67, label68, label69, "");
        aSMifierMethodVisitor66.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj75 = null;
        aSMifierMethodVisitor66.visitLdcInsn(obj75);
        aSMifierMethodVisitor66.visitInsn((int) ' ');
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor66.visitJumpInsn(100, label80);
        aSMifierMethodVisitor66.visitCode();
        aSMifierMethodVisitor66.visitMultiANewArrayInsn("", (int) (byte) 100);
        java.util.List list86 = aSMifierMethodVisitor66.text;
        org.mockito.asm.FieldVisitor fieldVisitor87 = aSMifierClassVisitor15.visitField((int) (byte) 10, "", "", "", (java.lang.Object) list86);
        org.mockito.asm.Attribute attribute88 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor87.visitAttribute(attribute88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodVisitor48);
        org.junit.Assert.assertNotNull(list86);
        org.junit.Assert.assertNotNull(fieldVisitor87);
    }

    @Test
    public void test04864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04864");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor3 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label4 = null;
        org.mockito.asm.Label label5 = null;
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor3.visitTryCatchBlock(label4, label5, label6, "");
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor3.visitLocalVariable("hi!", "hi!", "hi!", label12, label13, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor3.visitAnnotation("", true);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor3.visitLookupSwitchInsn(label19, intArray38, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray55, (int) (short) 100, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitMaxs((int) '4', (int) (short) -1);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (short) 10);
        org.mockito.asm.Label label81 = null;
        aSMifierMethodVisitor0.visitLineNumber(0, label81);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(labelArray71);
    }

    @Test
    public void test04865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04865");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter16 = printWriter12.append((java.lang.CharSequence) "");
        printWriter8.println((java.lang.Object) printWriter16);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter("hi!");
        java.util.Locale locale20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray27 = null;
        aSMifierMethodVisitor22.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray25, (int) (short) 1, objArray27);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor30, strArray39, 1.0f };
        java.io.PrintWriter printWriter42 = printWriter19.printf(locale20, "", (java.lang.Object[]) strArray39);
        printWriter42.print('#');
        printWriter42.println(false);
        printWriter42.write("hi!");
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("hi!");
        java.util.Locale locale51 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray56 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray58 = null;
        aSMifierMethodVisitor53.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray56, (int) (short) 1, objArray58);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor61.visitTryCatchBlock(label62, label63, label64, "");
        aSMifierMethodVisitor61.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray70 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray72 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor61, strArray70, 1.0f };
        java.io.PrintWriter printWriter73 = printWriter50.printf(locale51, "", (java.lang.Object[]) strArray70);
        char[] charArray80 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter73.println(charArray80);
        printWriter42.println(charArray80);
        printWriter8.print(charArray80);
        printWriter8.print((long) '#');
        printWriter8.close();
        java.io.PrintWriter printWriter88 = new java.io.PrintWriter((java.io.Writer) printWriter8, false);
        boolean boolean89 = printWriter8.checkError();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test04866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04866");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label19, labelArray20);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 1, 10);
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '#', label26);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(labelArray20);
    }

    @Test
    public void test04867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04867");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter16 = printWriter12.append((java.lang.CharSequence) "");
        printWriter8.println((java.lang.Object) printWriter16);
        printWriter16.print((long) (byte) 10);
        printWriter16.println(10.0d);
        java.io.PrintWriter printWriter23 = printWriter16.append((java.lang.CharSequence) "");
        printWriter23.print((-1));
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        java.util.Locale locale29 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray34 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray36 = null;
        aSMifierMethodVisitor31.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray34, (int) (short) 1, objArray36);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray50 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor39, strArray48, 1.0f };
        java.io.PrintWriter printWriter51 = printWriter28.printf(locale29, "", (java.lang.Object[]) strArray48);
        printWriter51.print("hi!");
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter((java.io.Writer) printWriter51);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter54);
        aSMifierClassVisitor55.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierClassVisitor55.visitAnnotation("hi!", true);
        aSMifierClassVisitor55.visitEnd();
        java.lang.String[] strArray68 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierClassVisitor55.visit(0, (int) (short) 100, "hi!", "hi!", "", strArray68);
        java.io.PrintWriter printWriter70 = printWriter23.printf("hi!", (java.lang.Object[]) strArray68);
        java.io.PrintWriter printWriter72 = printWriter23.append((java.lang.CharSequence) "hi!");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(printWriter72);
    }

    @Test
    public void test04868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04868");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, 0);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitMaxs(0, 0);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 10, (int) (byte) 10);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        org.mockito.asm.Label label83 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label81, label82, label83, "");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationVisitor73);
    }

    @Test
    public void test04869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04869");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((int) (byte) -1);
        printWriter1.write("", (int) (byte) 1, (int) (short) 0);
        printWriter1.print((double) (byte) -1);
        boolean boolean14 = printWriter1.checkError();
        printWriter1.print((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            printWriter1.write("", (int) (short) 1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 33");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test04870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04870");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor5 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.Label label6 = null;
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        printWriter8.print(false);
        printWriter8.println(false);
        java.io.PrintWriter printWriter14 = printWriter8.append('#');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor15.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor15.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj24 = null;
        aSMifierMethodVisitor15.visitLdcInsn(obj24);
        aSMifierMethodVisitor15.visitInsn((int) ' ');
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor15.visitJumpInsn(100, label29);
        aSMifierMethodVisitor15.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label34 = null;
        int[] intArray35 = new int[] {};
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter("hi!");
        printWriter37.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter41 = printWriter37.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor43.visitTryCatchBlock(label44, label45, label46, "");
        aSMifierMethodVisitor43.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj52 = null;
        aSMifierMethodVisitor43.visitLdcInsn(obj52);
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor43.visitJumpInsn((int) (short) 1, label55);
        aSMifierMethodVisitor43.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label[] labelArray63 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor43.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label62, labelArray63);
        java.io.PrintWriter printWriter65 = printWriter41.printf("", (java.lang.Object[]) labelArray63);
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label34, intArray35, labelArray63);
        printWriter8.println((java.lang.Object) intArray35);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor68.visitFieldInsn((int) ' ', "hi!", "", "");
        aSMifierMethodVisitor68.visitEnd();
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor78 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        aSMifierMethodVisitor78.visitTryCatchBlock(label79, label80, label81, "");
        aSMifierMethodVisitor78.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label89 = null;
        org.mockito.asm.Label label90 = null;
        org.mockito.asm.Label[] labelArray91 = new org.mockito.asm.Label[] { label90 };
        aSMifierMethodVisitor78.visitTableSwitchInsn(0, (int) (byte) 10, label89, labelArray91);
        aSMifierMethodVisitor68.visitTableSwitchInsn((int) (byte) 100, 0, label77, labelArray91);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label6, intArray35, labelArray91);
        org.junit.Assert.assertNotNull(annotationVisitor5);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertNotNull(labelArray63);
        org.junit.Assert.assertNotNull(printWriter65);
        org.junit.Assert.assertNotNull(labelArray91);
    }

    @Test
    public void test04871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04871");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list13 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray17 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray19 = null;
        aSMifierMethodVisitor14.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray17, (int) (short) 1, objArray19);
        aSMifierMethodVisitor14.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor14.visitLdcInsn((java.lang.Object) ' ');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test04872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04872");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        java.io.PrintWriter printWriter7 = printWriter1.append('#');
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter7, false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor11.visitTryCatchBlock(label12, label13, label14, "");
        aSMifierMethodVisitor11.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitInsn((int) (byte) 100);
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor11.visitLabel(label24);
        aSMifierMethodVisitor11.visitTypeInsn((int) (byte) 10, "");
        org.mockito.asm.Label label31 = null;
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter37 = printWriter33.append((java.lang.CharSequence) "");
        printWriter33.print((double) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj50 = null;
        aSMifierMethodVisitor41.visitLdcInsn(obj50);
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor41.visitJumpInsn((int) (short) 1, label53);
        aSMifierMethodVisitor41.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor41.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor41.visitAnnotationDefault();
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter("hi!");
        printWriter65.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor69.visitTryCatchBlock(label70, label71, label72, "");
        aSMifierMethodVisitor69.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label[] labelArray82 = new org.mockito.asm.Label[] { label81 };
        aSMifierMethodVisitor69.visitTableSwitchInsn(0, (int) (byte) 10, label80, labelArray82);
        java.io.PrintWriter printWriter84 = printWriter65.printf("hi!", (java.lang.Object[]) labelArray82);
        java.lang.String[] strArray86 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor41.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray82, 1, (java.lang.Object[]) strArray86);
        java.io.PrintWriter printWriter88 = printWriter33.printf("hi!", (java.lang.Object[]) labelArray82);
        aSMifierMethodVisitor11.visitTableSwitchInsn((int) ' ', 0, label31, labelArray82);
        java.io.PrintWriter printWriter90 = printWriter9.printf("", (java.lang.Object[]) labelArray82);
        // The following exception was thrown during execution in test generation
        try {
            printWriter9.write("hi!", (int) (byte) 1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 101");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter7);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(labelArray82);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test04873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04873");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label17, label18, (int) (byte) 1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter26 = printWriter22.append((java.lang.CharSequence) "");
        printWriter22.print((double) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj39 = null;
        aSMifierMethodVisitor30.visitLdcInsn(obj39);
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor30.visitJumpInsn((int) (short) 1, label42);
        aSMifierMethodVisitor30.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor30.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor30.visitAnnotationDefault();
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter("hi!");
        printWriter54.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        java.io.PrintWriter printWriter73 = printWriter54.printf("hi!", (java.lang.Object[]) labelArray71);
        java.lang.String[] strArray75 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor30.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray71, 1, (java.lang.Object[]) strArray75);
        java.io.PrintWriter printWriter77 = printWriter22.printf("hi!", (java.lang.Object[]) labelArray71);
        printWriter77.println((long) 100);
        aSMifierMethodVisitor0.print(printWriter77);
        java.util.List list81 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "hi!", "");
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(list81);
    }

    @Test
    public void test04874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04874");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((-1), 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor73.visitEnum("", "", "");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertNotNull(annotationVisitor73);
    }

    @Test
    public void test04875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04875");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMaxs((int) (short) -1, (int) (short) 100);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label19);
        aSMifierMethodVisitor0.visitIincInsn(10, (int) (byte) 0);
        aSMifierMethodVisitor0.visitMaxs(10, (-1));
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, 1);
    }

    @Test
    public void test04876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04876");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        printWriter14.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter19 = printWriter14.format("", (java.lang.Object[]) strArray18);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) strArray18);
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn((int) ' ', (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(annotationVisitor27);
    }

    @Test
    public void test04877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04877");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 100, label14);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) 1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test04878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04878");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        java.util.List list6 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitFieldInsn((int) '#', "", "", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 1, (int) (short) 100);
        aSMifierMethodVisitor0.visitIntInsn(0, 10);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label18, label19, label20, "");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 1);
        org.junit.Assert.assertNotNull(list6);
    }

    @Test
    public void test04879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04879");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        aSMifierMethodVisitor6.visitTryCatchBlock(label7, label8, label9, "");
        aSMifierMethodVisitor6.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj15 = null;
        aSMifierMethodVisitor6.visitLdcInsn(obj15);
        aSMifierMethodVisitor6.visitInsn((int) ' ');
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj31 = null;
        aSMifierMethodVisitor22.visitLdcInsn(obj31);
        org.mockito.asm.Label label33 = null;
        int[] intArray40 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label[] labelArray54 = new org.mockito.asm.Label[] { label53 };
        aSMifierMethodVisitor41.visitTableSwitchInsn(0, (int) (byte) 10, label52, labelArray54);
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label33, intArray40, labelArray54);
        aSMifierMethodVisitor6.visitTableSwitchInsn((int) '4', (int) '#', label21, labelArray54);
        java.io.PrintWriter printWriter58 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray54);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.io.PrintWriter printWriter61 = printWriter58.append('#');
        printWriter61.println("hi!");
        printWriter61.print(0);
        printWriter61.println('#');
        boolean boolean68 = printWriter61.checkError();
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray54);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test04880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04880");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        aSMifierMethodVisitor0.visitInsn((int) (short) 1);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 0, "hi!", "", "");
        java.util.List list21 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "hi!");
        org.mockito.asm.Attribute attribute25 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list21);
    }

    @Test
    public void test04881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04881");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        java.util.List list33 = aSMifierClassVisitor28.getText();
        org.mockito.asm.FieldVisitor fieldVisitor39 = aSMifierClassVisitor28.visitField((int) (short) -1, "", "hi!", "", (java.lang.Object) 10.0f);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = fieldVisitor39.visitAnnotation("hi!", true);
        org.mockito.asm.Attribute attribute43 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor39.visitAttribute(attribute43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor42);
    }

    @Test
    public void test04882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04882");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, (int) (short) 10);
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label64, label65, label66, "hi!");
        aSMifierMethodVisitor0.visitMethodInsn(10, "", "", "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) '#');
        java.util.List list77 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitInsn((int) 'a');
        aSMifierMethodVisitor0.visitIntInsn((int) '4', 100);
        aSMifierMethodVisitor0.visitMaxs((int) '#', (int) 'a');
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(list77);
    }

    @Test
    public void test04883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04883");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitInsn(0);
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "");
        aSMifierMethodVisitor0.visitIntInsn(0, 0);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test04884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04884");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        org.mockito.asm.Label label29 = null;
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "");
        printWriter31.print((double) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor39.visitJumpInsn((int) (short) 1, label51);
        aSMifierMethodVisitor39.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor39.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor39.visitAnnotationDefault();
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter("hi!");
        printWriter63.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor67.visitTryCatchBlock(label68, label69, label70, "");
        aSMifierMethodVisitor67.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] { label79 };
        aSMifierMethodVisitor67.visitTableSwitchInsn(0, (int) (byte) 10, label78, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter63.printf("hi!", (java.lang.Object[]) labelArray80);
        java.lang.String[] strArray84 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor39.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray80, 1, (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter86 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray80);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (short) 100, (int) (short) 1, label29, labelArray80);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label90 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) -1, label90);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter86);
    }

    @Test
    public void test04885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04885");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs(1, 10);
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor0.visitLabel(label64);
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label66, label67, label68, "");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 100);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs(0, (int) '#');
        aSMifierMethodVisitor0.visitInsn((int) (short) 0);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
    }

    @Test
    public void test04886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04886");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        char[] charArray54 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter47.println(charArray54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        boolean boolean58 = printWriter57.checkError();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter57.write("hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter57);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, 0);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "hi!", "");
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label72);
        org.mockito.asm.Label label74 = null;
        aSMifierMethodVisitor0.visitLabel(label74);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, 100);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test04887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04887");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label19, labelArray20);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 0, "");
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 100, label29);
        org.junit.Assert.assertNotNull(labelArray20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test04888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04888");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        java.io.PrintWriter printWriter36 = printWriter24.append((java.lang.CharSequence) "");
        printWriter36.print("");
        java.io.PrintWriter printWriter40 = printWriter36.append((java.lang.CharSequence) "");
        printWriter36.println((float) 100L);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter("hi!");
        printWriter45.write((-1));
        printWriter45.flush();
        java.util.Locale locale49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray56 = null;
        aSMifierMethodVisitor51.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray54, (int) (short) 1, objArray56);
        java.io.PrintWriter printWriter58 = printWriter45.printf(locale49, "", (java.lang.Object[]) strArray54);
        java.io.PrintWriter printWriter59 = printWriter36.printf("hi!", (java.lang.Object[]) strArray54);
        printWriter36.print((long) '#');
        printWriter36.println(false);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter67 = printWriter36.append((java.lang.CharSequence) "hi!", 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(printWriter59);
    }

    @Test
    public void test04889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04889");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.println();
        java.io.PrintWriter printWriter29 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.flush();
        printWriter24.println("");
        java.util.Locale locale33 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitFieldInsn((int) ' ', "hi!", "", "");
        aSMifierMethodVisitor35.visitEnd();
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label[] labelArray58 = new org.mockito.asm.Label[] { label57 };
        aSMifierMethodVisitor45.visitTableSwitchInsn(0, (int) (byte) 10, label56, labelArray58);
        aSMifierMethodVisitor35.visitTableSwitchInsn((int) (byte) 100, 0, label44, labelArray58);
        java.io.PrintWriter printWriter61 = printWriter24.format(locale33, "hi!", (java.lang.Object[]) labelArray58);
        char[] charArray62 = null;
        // The following exception was thrown during execution in test generation
        try {
            printWriter61.write(charArray62, 10, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(labelArray58);
        org.junit.Assert.assertNotNull(printWriter61);
    }

    @Test
    public void test04890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04890");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        aSMifierClassVisitor15.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
    }

    @Test
    public void test04891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04891");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 0, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLabel(label26);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test04892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04892");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitMaxs(0, (-1));
        aSMifierMethodVisitor9.visitCode();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor9);
        aSMifierMethodVisitor9.visitMultiANewArrayInsn("hi!", (int) (byte) -1);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label23, label24, label25, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor9.visitAnnotation("hi!", false);
        aSMifierMethodVisitor9.visitMultiANewArrayInsn("", (int) (short) 10);
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label34, label35, label36, "");
        org.junit.Assert.assertNotNull(annotationVisitor30);
    }

    @Test
    public void test04893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04893");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label16, label17, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs((int) (byte) -1, 10);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 100, label29);
        aSMifierMethodVisitor0.visitFieldInsn(100, "hi!", "", "");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test04894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04894");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.println(false);
        printWriter24.println(0);
        printWriter24.close();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor32 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        aSMifierClassVisitor32.visitInnerClass("hi!", "hi!", "hi!", (int) (short) 0);
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("hi!");
        java.util.Locale locale45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray50 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray52 = null;
        aSMifierMethodVisitor47.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray50, (int) (short) 1, objArray52);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor55.visitTryCatchBlock(label56, label57, label58, "");
        aSMifierMethodVisitor55.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray64 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray66 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor55, strArray64, 1.0f };
        java.io.PrintWriter printWriter67 = printWriter44.printf(locale45, "", (java.lang.Object[]) strArray64);
        java.io.PrintWriter printWriter69 = printWriter67.append((java.lang.CharSequence) "");
        printWriter67.println(0.0f);
        printWriter67.print(1.0f);
        java.io.PrintWriter printWriter74 = new java.io.PrintWriter((java.io.Writer) printWriter67);
        java.util.Locale locale75 = null;
        java.lang.String[] strArray77 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter78 = printWriter74.printf(locale75, "hi!", (java.lang.Object[]) strArray77);
        aSMifierClassVisitor32.visit(1, (int) (short) 0, "hi!", "hi!", "", strArray77);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(printWriter78);
    }

    @Test
    public void test04895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04895");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        org.mockito.asm.Label label29 = null;
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "");
        printWriter31.print((double) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor39.visitJumpInsn((int) (short) 1, label51);
        aSMifierMethodVisitor39.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor39.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor39.visitAnnotationDefault();
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter("hi!");
        printWriter63.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor67.visitTryCatchBlock(label68, label69, label70, "");
        aSMifierMethodVisitor67.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] { label79 };
        aSMifierMethodVisitor67.visitTableSwitchInsn(0, (int) (byte) 10, label78, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter63.printf("hi!", (java.lang.Object[]) labelArray80);
        java.lang.String[] strArray84 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor39.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray80, 1, (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter86 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray80);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (short) 100, (int) (short) 1, label29, labelArray80);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitVarInsn(10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs((int) ' ', (int) (short) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor95 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor95.visitEnum("hi!", "", "");
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter86);
        org.junit.Assert.assertNotNull(annotationVisitor95);
    }

    @Test
    public void test04896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04896");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        aSMifierMethodVisitor0.visitMethodInsn(10, "", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label14, label15, label16, "hi!");
        aSMifierMethodVisitor0.visitIntInsn(1, 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test04897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04897");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) (short) 1);
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLabel(label16);
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label21, label22, (int) (short) -1);
        aSMifierMethodVisitor0.visitMaxs((-1), 10);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label31, label32, (int) 'a');
        aSMifierMethodVisitor0.visitInsn(100);
    }

    @Test
    public void test04898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04898");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list14 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list16 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitInsn((int) '4');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) '4');
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list16);
    }

    @Test
    public void test04899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04899");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        java.util.List list33 = aSMifierClassVisitor28.getText();
        aSMifierClassVisitor28.visitSource("hi!", "");
        aSMifierClassVisitor28.visitSource("hi!", "");
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter("hi!");
        printWriter45.print(false);
        java.io.PrintWriter printWriter49 = printWriter45.append((java.lang.CharSequence) "hi!");
        printWriter45.println(true);
        org.mockito.asm.FieldVisitor fieldVisitor52 = aSMifierClassVisitor28.visitField((int) (byte) 10, "", "", "", (java.lang.Object) true);
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = fieldVisitor52.visitAnnotation("hi!", true);
        fieldVisitor52.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = fieldVisitor52.visitAnnotation("", true);
        fieldVisitor52.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = fieldVisitor52.visitAnnotation("", false);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor63);
    }

    @Test
    public void test04900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04900");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label17);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label20);
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (int) (short) 10);
        aSMifierMethodVisitor0.visitInsn((int) '#');
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label30, label31, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(10, (int) '#');
    }

    @Test
    public void test04901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04901");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj18 = null;
        aSMifierMethodVisitor9.visitLdcInsn(obj18);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor9.visitJumpInsn((int) (short) 1, label21);
        aSMifierMethodVisitor9.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor9.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor9.visitAnnotationDefault();
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] { label49 };
        aSMifierMethodVisitor37.visitTableSwitchInsn(0, (int) (byte) 10, label48, labelArray50);
        java.io.PrintWriter printWriter52 = printWriter33.printf("hi!", (java.lang.Object[]) labelArray50);
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor9.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray50, 1, (java.lang.Object[]) strArray54);
        java.io.PrintWriter printWriter56 = printWriter1.printf("hi!", (java.lang.Object[]) labelArray50);
        printWriter56.println((long) 100);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter56);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(printWriter56);
    }

    @Test
    public void test04902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04902");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter1.print(false);
        java.lang.CharSequence charSequence12 = null;
        java.io.PrintWriter printWriter13 = printWriter1.append(charSequence12);
        printWriter1.close();
        java.io.PrintWriter printWriter16 = printWriter1.append((java.lang.CharSequence) "");
        java.util.Locale locale17 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor19.visitTryCatchBlock(label20, label21, label22, "");
        aSMifierMethodVisitor19.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj28 = null;
        aSMifierMethodVisitor19.visitLdcInsn(obj28);
        aSMifierMethodVisitor19.visitInsn((int) ' ');
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor19.visitJumpInsn(100, label33);
        aSMifierMethodVisitor19.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor19.visitCode();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor42.visitTryCatchBlock(label43, label44, label45, "");
        aSMifierMethodVisitor42.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj51 = null;
        aSMifierMethodVisitor42.visitLdcInsn(obj51);
        aSMifierMethodVisitor42.visitInsn((int) ' ');
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor42.visitJumpInsn(100, label56);
        aSMifierMethodVisitor42.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label61 = null;
        int[] intArray62 = new int[] {};
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter("hi!");
        printWriter64.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter68 = printWriter64.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor70 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor70.visitTryCatchBlock(label71, label72, label73, "");
        aSMifierMethodVisitor70.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj79 = null;
        aSMifierMethodVisitor70.visitLdcInsn(obj79);
        org.mockito.asm.Label label82 = null;
        aSMifierMethodVisitor70.visitJumpInsn((int) (short) 1, label82);
        aSMifierMethodVisitor70.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label89 = null;
        org.mockito.asm.Label[] labelArray90 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor70.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label89, labelArray90);
        java.io.PrintWriter printWriter92 = printWriter68.printf("", (java.lang.Object[]) labelArray90);
        aSMifierMethodVisitor42.visitLookupSwitchInsn(label61, intArray62, labelArray90);
        aSMifierMethodVisitor19.visitTableSwitchInsn((int) (byte) 10, 0, label41, labelArray90);
        java.io.PrintWriter printWriter95 = printWriter16.format(locale17, "", (java.lang.Object[]) labelArray90);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertNotNull(labelArray90);
        org.junit.Assert.assertNotNull(printWriter92);
        org.junit.Assert.assertNotNull(printWriter95);
    }

    @Test
    public void test04903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04903");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitFieldInsn(100, "hi!", "", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitInsn(0);
        aSMifierMethodVisitor0.visitFieldInsn(100, "", "", "hi!");
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) ' ', label28);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor35.visitLocalVariable("hi!", "hi!", "hi!", label44, label45, (int) (byte) 10);
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter("hi!");
        printWriter49.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray53 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter54 = printWriter49.format("", (java.lang.Object[]) strArray53);
        aSMifierMethodVisitor35.visitLdcInsn((java.lang.Object) strArray53);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor35.visitAnnotationDefault();
        annotationVisitor33.visit("hi!", (java.lang.Object) aSMifierMethodVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(annotationVisitor56);
    }

    @Test
    public void test04904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04904");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, (-1));
        aSMifierMethodVisitor0.visitInsn((int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitParameterAnnotation(100, "", false);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 10, (int) (short) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Attribute attribute27 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(annotationVisitor26);
    }

    @Test
    public void test04905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04905");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        boolean boolean35 = printWriter34.checkError();
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        printWriter36.print(false);
        java.util.Locale locale39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor41.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { (byte) 0 };
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter("hi!");
        printWriter57.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor61.visitTryCatchBlock(label62, label63, label64, "");
        aSMifierMethodVisitor61.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.Label[] labelArray74 = new org.mockito.asm.Label[] { label73 };
        aSMifierMethodVisitor61.visitTableSwitchInsn(0, (int) (byte) 10, label72, labelArray74);
        java.io.PrintWriter printWriter76 = printWriter57.printf("hi!", (java.lang.Object[]) labelArray74);
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label53, intArray55, labelArray74);
        java.io.PrintWriter printWriter78 = printWriter36.printf(locale39, "", (java.lang.Object[]) labelArray74);
        printWriter78.println('a');
        printWriter78.write("hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0]");
        org.junit.Assert.assertNotNull(labelArray74);
        org.junit.Assert.assertNotNull(printWriter76);
        org.junit.Assert.assertNotNull(printWriter78);
    }

    @Test
    public void test04906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04906");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMaxs((int) (short) -1, (int) (short) 100);
        java.lang.Object obj17 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj17);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 100, "", true);
        aSMifierMethodVisitor0.visitInsn(10);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test04907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04907");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) (short) 1);
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLabel(label16);
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label21, label22, (int) (short) -1);
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 10, "", "", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, (int) (byte) 100);
        aSMifierMethodVisitor0.visitIntInsn((int) 'a', 100);
    }

    @Test
    public void test04908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04908");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append(' ');
        printWriter28.println(true);
        java.io.PrintWriter printWriter32 = printWriter28.append('a');
        printWriter28.println("");
        java.io.PrintWriter printWriter36 = printWriter28.append((java.lang.CharSequence) "");
        printWriter36.print((long) '#');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(printWriter36);
    }

    @Test
    public void test04909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04909");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter("hi!");
        java.util.Locale locale8 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray13 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray15 = null;
        aSMifierMethodVisitor10.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray13, (int) (short) 1, objArray15);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor18.visitTryCatchBlock(label19, label20, label21, "");
        aSMifierMethodVisitor18.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray27 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray29 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor18, strArray27, 1.0f };
        java.io.PrintWriter printWriter30 = printWriter7.printf(locale8, "", (java.lang.Object[]) strArray27);
        printWriter30.print('#');
        printWriter30.println();
        java.io.PrintWriter printWriter35 = printWriter30.append((java.lang.CharSequence) "");
        printWriter30.flush();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter30);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) -1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(printWriter35);
    }

    @Test
    public void test04910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04910");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitLabel(label4);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 10, "", "", "");
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 1, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label15, label16, label17, "hi!");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test04911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04911");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.print((double) 1);
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "hi!");
        printWriter1.write((int) (short) 1);
        printWriter1.write(0);
        printWriter1.close();
        printWriter1.print(' ');
        printWriter1.println();
        printWriter1.println(true);
        printWriter1.println((long) (short) -1);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter9);
    }

    @Test
    public void test04912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04912");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test04913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04913");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label23, label24, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 10, "hi!", false);
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 100, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor0.visitJumpInsn(10, label36);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor34);
    }

    @Test
    public void test04914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04914");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label6 = null;
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        printWriter8.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label[] labelArray25 = new org.mockito.asm.Label[] { label24 };
        aSMifierMethodVisitor12.visitTableSwitchInsn(0, (int) (byte) 10, label23, labelArray25);
        java.io.PrintWriter printWriter27 = printWriter8.printf("hi!", (java.lang.Object[]) labelArray25);
        aSMifierMethodVisitor0.visitTableSwitchInsn(1, (int) (short) 10, label6, labelArray25);
        org.mockito.asm.Label label31 = null;
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter37 = printWriter33.append((java.lang.CharSequence) "");
        printWriter33.print((double) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj50 = null;
        aSMifierMethodVisitor41.visitLdcInsn(obj50);
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor41.visitJumpInsn((int) (short) 1, label53);
        aSMifierMethodVisitor41.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor41.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor41.visitAnnotationDefault();
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter("hi!");
        printWriter65.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor69.visitTryCatchBlock(label70, label71, label72, "");
        aSMifierMethodVisitor69.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label[] labelArray82 = new org.mockito.asm.Label[] { label81 };
        aSMifierMethodVisitor69.visitTableSwitchInsn(0, (int) (byte) 10, label80, labelArray82);
        java.io.PrintWriter printWriter84 = printWriter65.printf("hi!", (java.lang.Object[]) labelArray82);
        java.lang.String[] strArray86 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor41.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray82, 1, (java.lang.Object[]) strArray86);
        java.io.PrintWriter printWriter88 = printWriter33.printf("hi!", (java.lang.Object[]) labelArray82);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) ' ', (-1), label31, labelArray82);
        org.mockito.asm.AnnotationVisitor annotationVisitor93 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) -1, "hi!", false);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, (int) (byte) -1);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 1, (int) 'a');
        org.junit.Assert.assertNotNull(labelArray25);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(labelArray82);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(annotationVisitor93);
    }

    @Test
    public void test04915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04915");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter16 = printWriter12.append((java.lang.CharSequence) "");
        printWriter8.println((java.lang.Object) printWriter16);
        printWriter16.print((long) (byte) 10);
        printWriter16.println(10.0d);
        java.io.PrintWriter printWriter23 = printWriter16.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor24 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter16);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter16);
        printWriter25.print(1);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(printWriter23);
    }

    @Test
    public void test04916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04916");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter3 = printWriter1.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter3);
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierClassVisitor4.visitAnnotation("hi!", true);
        aSMifierClassVisitor4.visitEnd();
        aSMifierClassVisitor4.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(annotationVisitor7);
    }

    @Test
    public void test04917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04917");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append('4');
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter26);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
    }

    @Test
    public void test04918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04918");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor0.visitInsn(1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 0);
        aSMifierMethodVisitor0.visitMethodInsn(0, "hi!", "", "");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitInsn((int) '4');
        aSMifierMethodVisitor0.visitInsn((int) (byte) 0);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test04919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04919");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("hi!");
        java.util.Locale locale29 = null;
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter34 = printWriter32.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj44 = null;
        aSMifierMethodVisitor35.visitLdcInsn(obj44);
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor35.visitJumpInsn((int) (short) 1, label47);
        aSMifierMethodVisitor35.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor35.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierMethodVisitor35.visitAnnotationDefault();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter("hi!");
        printWriter59.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor63.visitTryCatchBlock(label64, label65, label66, "");
        aSMifierMethodVisitor63.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label[] labelArray76 = new org.mockito.asm.Label[] { label75 };
        aSMifierMethodVisitor63.visitTableSwitchInsn(0, (int) (byte) 10, label74, labelArray76);
        java.io.PrintWriter printWriter78 = printWriter59.printf("hi!", (java.lang.Object[]) labelArray76);
        java.lang.String[] strArray80 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor35.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray76, 1, (java.lang.Object[]) strArray80);
        printWriter34.println((java.lang.Object) strArray80);
        java.io.PrintWriter printWriter83 = printWriter26.format(locale29, "hi!", (java.lang.Object[]) strArray80);
        printWriter26.write("hi!");
        java.io.PrintWriter printWriter87 = new java.io.PrintWriter((java.io.Writer) printWriter26, true);
        printWriter87.flush();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(labelArray76);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(printWriter83);
    }

    @Test
    public void test04920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04920");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("hi!");
        java.util.Locale locale29 = null;
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter34 = printWriter32.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj44 = null;
        aSMifierMethodVisitor35.visitLdcInsn(obj44);
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor35.visitJumpInsn((int) (short) 1, label47);
        aSMifierMethodVisitor35.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor35.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierMethodVisitor35.visitAnnotationDefault();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter("hi!");
        printWriter59.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor63.visitTryCatchBlock(label64, label65, label66, "");
        aSMifierMethodVisitor63.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label[] labelArray76 = new org.mockito.asm.Label[] { label75 };
        aSMifierMethodVisitor63.visitTableSwitchInsn(0, (int) (byte) 10, label74, labelArray76);
        java.io.PrintWriter printWriter78 = printWriter59.printf("hi!", (java.lang.Object[]) labelArray76);
        java.lang.String[] strArray80 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor35.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray76, 1, (java.lang.Object[]) strArray80);
        printWriter34.println((java.lang.Object) strArray80);
        java.io.PrintWriter printWriter83 = printWriter26.format(locale29, "hi!", (java.lang.Object[]) strArray80);
        printWriter26.write("hi!");
        java.io.PrintWriter printWriter87 = new java.io.PrintWriter((java.io.Writer) printWriter26, true);
        printWriter87.print("hi!");
        // The following exception was thrown during execution in test generation
        try {
            printWriter87.write("hi!", 10, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 11");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(labelArray76);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(printWriter83);
    }

    @Test
    public void test04921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04921");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitEnd();
        java.lang.String[] strArray41 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierClassVisitor28.visit(0, (int) (short) 100, "hi!", "hi!", "", strArray41);
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        java.util.Locale locale49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray56 = null;
        aSMifierMethodVisitor51.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray54, (int) (short) 1, objArray56);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor59.visitTryCatchBlock(label60, label61, label62, "");
        aSMifierMethodVisitor59.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray68 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray70 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor59, strArray68, 1.0f };
        java.io.PrintWriter printWriter71 = printWriter48.printf(locale49, "", (java.lang.Object[]) strArray68);
        java.io.PrintWriter printWriter73 = new java.io.PrintWriter((java.io.Writer) printWriter71, true);
        printWriter71.print("");
        java.io.PrintWriter printWriter77 = printWriter71.append('#');
        printWriter71.print((long) (short) -1);
        org.mockito.asm.FieldVisitor fieldVisitor80 = aSMifierClassVisitor28.visitField((-1), "", "", "hi!", (java.lang.Object) (short) -1);
        aSMifierClassVisitor28.visitOuterClass("", "hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor87 = aSMifierClassVisitor28.visitAnnotation("", false);
        org.mockito.asm.Attribute attribute88 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor28.visitAttribute(attribute88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(fieldVisitor80);
        org.junit.Assert.assertNotNull(annotationVisitor87);
    }

    @Test
    public void test04922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04922");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        printWriter10.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter14 = printWriter10.append((java.lang.CharSequence) "");
        printWriter10.print((double) 1);
        java.io.PrintWriter printWriter18 = printWriter10.append((java.lang.CharSequence) "hi!");
        printWriter10.print(false);
        java.lang.CharSequence charSequence21 = null;
        java.io.PrintWriter printWriter22 = printWriter10.append(charSequence21);
        printWriter10.print((double) (-1));
        org.mockito.asm.FieldVisitor fieldVisitor25 = aSMifierClassVisitor1.visitField((int) (byte) 0, "hi!", "hi!", "hi!", (java.lang.Object) printWriter10);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = fieldVisitor25.visitAnnotation("", true);
        fieldVisitor25.visitEnd();
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(fieldVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor28);
    }

    @Test
    public void test04923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04923");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        java.io.PrintWriter printWriter36 = printWriter24.append((java.lang.CharSequence) "");
        printWriter24.print((float) 10L);
        printWriter24.write("", (int) (short) 1, (int) (short) -1);
        printWriter24.println((float) 10L);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter36);
    }

    @Test
    public void test04924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04924");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitOuterClass("hi!", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitOuterClass("hi!", "", "");
        aSMifierClassVisitor28.visitEnd();
        aSMifierClassVisitor28.visitSource("hi!", "");
        org.mockito.asm.Attribute attribute51 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor28.visitAttribute(attribute51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor42);
    }

    @Test
    public void test04925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04925");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter5.print(0);
        printWriter5.println('a');
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test04926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04926");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.print((double) (byte) 10);
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter("hi!");
        java.util.Locale locale8 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray13 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray15 = null;
        aSMifierMethodVisitor10.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray13, (int) (short) 1, objArray15);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor18.visitTryCatchBlock(label19, label20, label21, "");
        aSMifierMethodVisitor18.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray27 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray29 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor18, strArray27, 1.0f };
        java.io.PrintWriter printWriter30 = printWriter7.printf(locale8, "", (java.lang.Object[]) strArray27);
        char[] charArray37 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter30.println(charArray37);
        printWriter1.print(charArray37);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor40 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor40.visitOuterClass("", "", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor49.visitTryCatchBlock(label50, label51, label52, "");
        aSMifierMethodVisitor49.visitIntInsn(0, (int) (short) 100);
        aSMifierMethodVisitor49.visitInsn(1);
        aSMifierMethodVisitor49.visitMultiANewArrayInsn("", (int) (byte) 0);
        aSMifierMethodVisitor49.visitInsn((int) (short) 100);
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor49.visitLineNumber((int) (short) 1, label66);
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor49.visitJumpInsn((int) (byte) 100, label69);
        java.io.PrintWriter printWriter72 = new java.io.PrintWriter("hi!");
        printWriter72.print((java.lang.Object) (short) -1);
        printWriter72.flush();
        java.io.PrintWriter printWriter76 = new java.io.PrintWriter((java.io.Writer) printWriter72);
        aSMifierMethodVisitor49.print(printWriter72);
        java.io.PrintWriter printWriter79 = printWriter72.append((java.lang.CharSequence) "");
        org.mockito.asm.FieldVisitor fieldVisitor80 = aSMifierClassVisitor40.visitField(10, "", "", "hi!", (java.lang.Object) "");
        aSMifierClassVisitor40.visitSource("", "");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertNotNull(fieldVisitor80);
    }

    @Test
    public void test04927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04927");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor15.visitField((int) (short) -1, "hi!", "hi!", "", (java.lang.Object) label27);
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter39 = printWriter37.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj49 = null;
        aSMifierMethodVisitor40.visitLdcInsn(obj49);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor40.visitJumpInsn((int) (short) 1, label52);
        aSMifierMethodVisitor40.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor40.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor40.visitAnnotationDefault();
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter("hi!");
        printWriter64.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor68.visitTryCatchBlock(label69, label70, label71, "");
        aSMifierMethodVisitor68.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label[] labelArray81 = new org.mockito.asm.Label[] { label80 };
        aSMifierMethodVisitor68.visitTableSwitchInsn(0, (int) (byte) 10, label79, labelArray81);
        java.io.PrintWriter printWriter83 = printWriter64.printf("hi!", (java.lang.Object[]) labelArray81);
        java.lang.String[] strArray85 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor40.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray81, 1, (java.lang.Object[]) strArray85);
        printWriter39.println((java.lang.Object) strArray85);
        org.mockito.asm.MethodVisitor methodVisitor88 = aSMifierClassVisitor15.visitMethod(100, "hi!", "", "", strArray85);
        methodVisitor88.visitMaxs((int) (byte) 0, 100);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(labelArray81);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(methodVisitor88);
    }

    @Test
    public void test04928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04928");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        printWriter1.print(0L);
        printWriter1.println("hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor10.visitTryCatchBlock(label11, label12, label13, "");
        aSMifierMethodVisitor10.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj19 = null;
        aSMifierMethodVisitor10.visitLdcInsn(obj19);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor10.visitJumpInsn((int) (short) 1, label22);
        aSMifierMethodVisitor10.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor10.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor10.visitAnnotationDefault();
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor38.visitTryCatchBlock(label39, label40, label41, "");
        aSMifierMethodVisitor38.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label[] labelArray51 = new org.mockito.asm.Label[] { label50 };
        aSMifierMethodVisitor38.visitTableSwitchInsn(0, (int) (byte) 10, label49, labelArray51);
        java.io.PrintWriter printWriter53 = printWriter34.printf("hi!", (java.lang.Object[]) labelArray51);
        java.lang.String[] strArray55 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor10.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray51, 1, (java.lang.Object[]) strArray55);
        aSMifierMethodVisitor10.visitMaxs((int) (byte) 0, (int) (byte) 100);
        printWriter1.print((java.lang.Object) aSMifierMethodVisitor10);
        aSMifierMethodVisitor10.visitIntInsn(0, (int) (byte) 100);
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor10.visitJumpInsn((int) (short) 1, label65);
        aSMifierMethodVisitor10.visitVarInsn((int) (short) 0, 10);
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor10.visitLabel(label70);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(labelArray51);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(strArray55);
    }

    @Test
    public void test04929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04929");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        printWriter1.print('4');
        printWriter1.print(true);
        printWriter1.write("");
        printWriter1.println((double) (short) -1);
        printWriter1.flush();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
    }

    @Test
    public void test04930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04930");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        printWriter26.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter30 = printWriter26.append((java.lang.CharSequence) "");
        printWriter30.close();
        printWriter30.println((int) (short) 10);
        org.mockito.asm.FieldVisitor fieldVisitor34 = aSMifierClassVisitor15.visitField((int) (short) 0, "hi!", "hi!", "", (java.lang.Object) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = fieldVisitor34.visitAnnotation("hi!", false);
        fieldVisitor34.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = fieldVisitor34.visitAnnotation("", true);
        annotationVisitor41.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(fieldVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor41);
    }

    @Test
    public void test04931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04931");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitOuterClass("hi!", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitOuterClass("", "", "hi!");
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter("hi!");
        java.util.Locale locale46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray51 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray53 = null;
        aSMifierMethodVisitor48.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray51, (int) (short) 1, objArray53);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor56.visitTryCatchBlock(label57, label58, label59, "");
        aSMifierMethodVisitor56.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray65 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray67 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor56, strArray65, 1.0f };
        java.io.PrintWriter printWriter68 = printWriter45.printf(locale46, "", (java.lang.Object[]) strArray65);
        char[] charArray75 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter68.println(charArray75);
        java.io.PrintWriter printWriter78 = new java.io.PrintWriter((java.io.Writer) printWriter68, true);
        printWriter78.print((float) (byte) 10);
        org.mockito.asm.FieldVisitor fieldVisitor81 = aSMifierClassVisitor28.visitField((int) ' ', "hi!", "", "", (java.lang.Object) printWriter78);
        aSMifierClassVisitor28.visitInnerClass("hi!", "", "hi!", (int) ' ');
        aSMifierClassVisitor28.visitSource("", "");
        aSMifierClassVisitor28.visitOuterClass("", "hi!", "hi!");
        java.util.List list94 = aSMifierClassVisitor28.text;
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(fieldVisitor81);
        org.junit.Assert.assertNotNull(list94);
    }

    @Test
    public void test04932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04932");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label[] labelArray27 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor7.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label26, labelArray27);
        java.io.PrintWriter printWriter29 = printWriter5.printf("", (java.lang.Object[]) labelArray27);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter29, true);
        printWriter29.println((float) (-1L));
        printWriter29.write((int) (byte) -1);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter29, true);
        char[] charArray38 = null;
        // The following exception was thrown during execution in test generation
        try {
            printWriter29.write(charArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(labelArray27);
        org.junit.Assert.assertNotNull(printWriter29);
    }

    @Test
    public void test04933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04933");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor20.visitLocalVariable("hi!", "hi!", "hi!", label29, label30, (int) (byte) 10);
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj45 = null;
        aSMifierMethodVisitor36.visitLdcInsn(obj45);
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor36.visitJumpInsn((int) (short) 1, label48);
        aSMifierMethodVisitor36.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor36.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor36.visitAnnotationDefault();
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter("hi!");
        printWriter60.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] { label76 };
        aSMifierMethodVisitor64.visitTableSwitchInsn(0, (int) (byte) 10, label75, labelArray77);
        java.io.PrintWriter printWriter79 = printWriter60.printf("hi!", (java.lang.Object[]) labelArray77);
        java.lang.String[] strArray81 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor36.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray77, 1, (java.lang.Object[]) strArray81);
        aSMifierMethodVisitor20.visitTableSwitchInsn((int) (byte) 1, (int) (byte) 100, label35, labelArray77);
        aSMifierMethodVisitor20.visitMethodInsn(1, "", "", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor89 = aSMifierClassVisitor15.visitField((int) (byte) 1, "hi!", "hi!", "", (java.lang.Object) "");
        java.lang.String[] strArray94 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        org.mockito.asm.MethodVisitor methodVisitor95 = aSMifierClassVisitor15.visitMethod((int) (byte) 0, "", "", "hi!", strArray94);
        aSMifierClassVisitor15.visitSource("hi!", "");
        aSMifierClassVisitor15.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(fieldVisitor89);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(methodVisitor95);
    }

    @Test
    public void test04934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04934");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label17, label18, (int) (byte) 1);
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label21, label22, label23, "");
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "", label29, label30, (int) (byte) 1);
        aSMifierMethodVisitor0.visitIntInsn(10, (int) (short) 10);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label37);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 0, "", "hi!", "");
    }

    @Test
    public void test04935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04935");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label7 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label7);
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label15, label16, label17, "");
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj23 = null;
        aSMifierMethodVisitor14.visitLdcInsn(obj23);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        printWriter26.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor14.print(printWriter26);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor14.visitAnnotation("", false);
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor14.visitLabel(label33);
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor14.visitJumpInsn((int) (byte) 0, label36);
        annotationVisitor12.visit("hi!", (java.lang.Object) (byte) 0);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test04936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04936");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter1.checkError();
        printWriter1.print((double) 1L);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter28.write((int) '#');
        printWriter28.print((long) '4');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor33 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test04937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04937");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter5.write("");
        printWriter5.print(0L);
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter5, false);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter((java.io.Writer) printWriter11);
        printWriter11.print((float) (byte) 100);
        printWriter11.println(1.0f);
    }

    @Test
    public void test04938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04938");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 1);
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLabel(label17);
        aSMifierMethodVisitor0.visitInsn(100);
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label24, label25, (int) (short) 100);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "", label31, label32, 100);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        printWriter36.write((-1));
        printWriter36.flush();
        java.util.Locale locale40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray47 = null;
        aSMifierMethodVisitor42.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray45, (int) (short) 1, objArray47);
        java.io.PrintWriter printWriter49 = printWriter36.printf(locale40, "", (java.lang.Object[]) strArray45);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor50 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter36);
        aSMifierClassVisitor50.visitEnd();
        aSMifierClassVisitor50.visitSource("", "hi!");
        java.lang.String[] strArray60 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor50.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray60);
        aSMifierClassVisitor50.visitInnerClass("", "hi!", "", (int) (short) -1);
        java.lang.String[] strArray71 = org.mockito.asm.util.AbstractVisitor.TYPES;
        org.mockito.asm.MethodVisitor methodVisitor72 = aSMifierClassVisitor50.visitMethod(1, "hi!", "hi!", "", strArray71);
        java.io.PrintWriter printWriter78 = new java.io.PrintWriter("hi!");
        printWriter78.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter82 = printWriter78.append((java.lang.CharSequence) "");
        printWriter78.print((int) (byte) -1);
        printWriter78.print((double) (byte) 1);
        printWriter78.close();
        java.io.PrintWriter printWriter88 = new java.io.PrintWriter((java.io.Writer) printWriter78);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor89 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter78);
        org.mockito.asm.FieldVisitor fieldVisitor90 = aSMifierClassVisitor50.visitField((int) (byte) -1, "", "", "hi!", (java.lang.Object) aSMifierClassVisitor89);
        aSMifierClassVisitor50.visitOuterClass("hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(methodVisitor72);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(fieldVisitor90);
    }

    @Test
    public void test04939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04939");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) ' ');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 10, "", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        aSMifierMethodVisitor22.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj31 = null;
        aSMifierMethodVisitor22.visitLdcInsn(obj31);
        aSMifierMethodVisitor22.visitInsn((int) ' ');
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor22.visitJumpInsn(100, label36);
        aSMifierMethodVisitor22.visitIntInsn(10, (int) ' ');
        aSMifierMethodVisitor22.visitCode();
        aSMifierMethodVisitor22.visitVarInsn(0, (int) (byte) 100);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor22);
        aSMifierMethodVisitor22.visitCode();
        aSMifierMethodVisitor22.visitCode();
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor22.visitLabel(label48);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor21);
    }

    @Test
    public void test04940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04940");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = printWriter24.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter28 = printWriter24.append(' ');
        printWriter28.println((float) '4');
        printWriter28.println(0);
        printWriter28.println((float) 0);
        printWriter28.print(false);
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter39 = printWriter28.format("hi!", (java.lang.Object[]) strArray38);
        printWriter28.print(true);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(printWriter39);
    }

    @Test
    public void test04941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04941");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotation("", true);
        java.util.List list17 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs(0, (int) (short) 100);
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label21, label22, label23, "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(list17);
    }

    @Test
    public void test04942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04942");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.flush();
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println((float) 10);
        printWriter1.flush();
        printWriter1.write("");
        java.io.PrintWriter printWriter12 = printWriter1.append((java.lang.CharSequence) "");
        printWriter1.write(0);
        org.junit.Assert.assertNotNull(printWriter12);
    }

    @Test
    public void test04943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04943");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list14 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list16 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "hi!", false);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        java.util.Locale locale26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray31 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray33 = null;
        aSMifierMethodVisitor28.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray31, (int) (short) 1, objArray33);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray47 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor36, strArray45, 1.0f };
        java.io.PrintWriter printWriter48 = printWriter25.printf(locale26, "", (java.lang.Object[]) strArray45);
        boolean boolean49 = printWriter48.checkError();
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter((java.io.Writer) printWriter48);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor51 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter50);
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter((java.io.Writer) printWriter50, true);
        printWriter50.flush();
        aSMifierMethodVisitor0.print(printWriter50);
        java.lang.Class<?> wildcardClass56 = aSMifierMethodVisitor0.getClass();
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test04944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04944");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter31.format("", (java.lang.Object[]) strArray35);
        aSMifierClassVisitor15.visit((int) (byte) -1, (int) (short) 0, "", "", "hi!", strArray35);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "hi!", (int) '#');
        aSMifierClassVisitor15.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
    }

    @Test
    public void test04945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04945");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitCode();
        java.util.List list7 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "hi!", "", "hi!");
        org.junit.Assert.assertNotNull(list7);
    }

    @Test
    public void test04946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04946");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "", "hi!", (int) 'a');
        java.util.List list34 = aSMifierClassVisitor28.getText();
        aSMifierClassVisitor28.visitOuterClass("", "", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor43.visitTryCatchBlock(label44, label45, label46, "");
        aSMifierMethodVisitor43.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj52 = null;
        aSMifierMethodVisitor43.visitLdcInsn(obj52);
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter("hi!");
        printWriter55.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor43.print(printWriter55);
        java.util.List list59 = aSMifierMethodVisitor43.text;
        aSMifierMethodVisitor43.visitFieldInsn(0, "", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor65 = aSMifierClassVisitor28.visitField(1, "", "hi!", "", (java.lang.Object) "");
        aSMifierClassVisitor28.visitInnerClass("", "", "hi!", 0);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(fieldVisitor65);
    }

    @Test
    public void test04947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04947");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        printWriter1.println(false);
        java.io.PrintWriter printWriter7 = printWriter1.append('#');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        aSMifierMethodVisitor8.visitTryCatchBlock(label9, label10, label11, "");
        aSMifierMethodVisitor8.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj17 = null;
        aSMifierMethodVisitor8.visitLdcInsn(obj17);
        aSMifierMethodVisitor8.visitInsn((int) ' ');
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor8.visitJumpInsn(100, label22);
        aSMifierMethodVisitor8.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label27 = null;
        int[] intArray28 = new int[] {};
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        printWriter30.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter34 = printWriter30.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor36.visitTryCatchBlock(label37, label38, label39, "");
        aSMifierMethodVisitor36.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj45 = null;
        aSMifierMethodVisitor36.visitLdcInsn(obj45);
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor36.visitJumpInsn((int) (short) 1, label48);
        aSMifierMethodVisitor36.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label55, labelArray56);
        java.io.PrintWriter printWriter58 = printWriter34.printf("", (java.lang.Object[]) labelArray56);
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label27, intArray28, labelArray56);
        printWriter1.println((java.lang.Object) intArray28);
        java.io.PrintWriter printWriter62 = printWriter1.append((java.lang.CharSequence) "");
        org.junit.Assert.assertNotNull(printWriter7);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(printWriter62);
    }

    @Test
    public void test04948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04948");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "hi!", label24, label25, (int) '4');
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        java.util.Locale locale30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray37 = null;
        aSMifierMethodVisitor32.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray35, (int) (short) 1, objArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor40.visitTryCatchBlock(label41, label42, label43, "");
        aSMifierMethodVisitor40.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray49 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray51 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor40, strArray49, 1.0f };
        java.io.PrintWriter printWriter52 = printWriter29.printf(locale30, "", (java.lang.Object[]) strArray49);
        java.io.PrintWriter printWriter54 = printWriter52.append((java.lang.CharSequence) "");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter54);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter54, true);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(printWriter54);
    }

    @Test
    public void test04949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04949");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label17, label18, 1);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 0, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = annotationVisitor27.visitAnnotation("hi!", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = annotationVisitor30.visitAnnotation("hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = annotationVisitor30.visitAnnotation("", "");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(annotationVisitor36);
    }

    @Test
    public void test04950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04950");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter24.println(true);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter31.print((long) (byte) 1);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test04951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04951");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter6.println();
        printWriter6.print((float) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor11.visitTryCatchBlock(label12, label13, label14, "");
        aSMifierMethodVisitor11.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj20 = null;
        aSMifierMethodVisitor11.visitLdcInsn(obj20);
        aSMifierMethodVisitor11.visitInsn((int) ' ');
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor11.visitJumpInsn(100, label25);
        aSMifierMethodVisitor11.visitIntInsn(10, (int) ' ');
        org.mockito.asm.Label label30 = null;
        int[] intArray31 = new int[] {};
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter37 = printWriter33.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor39.visitJumpInsn((int) (short) 1, label51);
        aSMifierMethodVisitor39.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label[] labelArray59 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label58, labelArray59);
        java.io.PrintWriter printWriter61 = printWriter37.printf("", (java.lang.Object[]) labelArray59);
        aSMifierMethodVisitor11.visitLookupSwitchInsn(label30, intArray31, labelArray59);
        java.io.PrintWriter printWriter63 = printWriter6.printf("", (java.lang.Object[]) labelArray59);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter6, true);
        printWriter6.print("");
        java.io.PrintWriter printWriter71 = printWriter6.append((java.lang.CharSequence) "hi!", 0, 0);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor72 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter71);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter76 = printWriter71.append((java.lang.CharSequence) "hi!", (int) '#', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(labelArray59);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(printWriter71);
    }

    @Test
    public void test04952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04952");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 0);
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitLabel(label4);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 10, "", "", "");
        aSMifierMethodVisitor0.visitInsn((int) (short) 10);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 1, "", "", "");
        org.mockito.asm.Label label20 = null;
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter24 = printWriter22.append('a');
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        java.util.Locale locale27 = null;
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        printWriter30.print(false);
        java.util.Locale locale33 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj44 = null;
        aSMifierMethodVisitor35.visitLdcInsn(obj44);
        aSMifierMethodVisitor35.visitInsn((int) ' ');
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor51.visitTryCatchBlock(label52, label53, label54, "");
        aSMifierMethodVisitor51.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj60 = null;
        aSMifierMethodVisitor51.visitLdcInsn(obj60);
        org.mockito.asm.Label label62 = null;
        int[] intArray69 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor70 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor70.visitTryCatchBlock(label71, label72, label73, "");
        aSMifierMethodVisitor70.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        org.mockito.asm.Label[] labelArray83 = new org.mockito.asm.Label[] { label82 };
        aSMifierMethodVisitor70.visitTableSwitchInsn(0, (int) (byte) 10, label81, labelArray83);
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label62, intArray69, labelArray83);
        aSMifierMethodVisitor35.visitTableSwitchInsn((int) '4', (int) '#', label50, labelArray83);
        java.io.PrintWriter printWriter87 = printWriter30.format(locale33, "hi!", (java.lang.Object[]) labelArray83);
        java.io.PrintWriter printWriter88 = printWriter26.printf(locale27, "", (java.lang.Object[]) labelArray83);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (short) 0, (int) '#', label20, labelArray83);
        org.mockito.asm.AnnotationVisitor annotationVisitor90 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor94 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 100, "hi!", true);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray83);
        org.junit.Assert.assertNotNull(printWriter87);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(annotationVisitor90);
        org.junit.Assert.assertNotNull(annotationVisitor94);
    }

    @Test
    public void test04953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04953");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitOuterClass("", "hi!", "hi!");
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor15.visitAnnotation("hi!", false);
        aSMifierClassVisitor15.visitEnd();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        org.mockito.asm.MethodVisitor methodVisitor31 = aSMifierClassVisitor15.visitMethod(0, "", "hi!", "hi!", strArray30);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = methodVisitor31.visitAnnotation("", true);
        org.mockito.asm.Label label35 = null;
        methodVisitor31.visitLabel(label35);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor34);
    }

    @Test
    public void test04954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04954");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 1, "", true);
        aSMifierMethodVisitor0.visitInsn((int) (short) 1);
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (byte) 0, label24);
        aSMifierMethodVisitor0.visitMaxs(10, (int) (byte) 0);
        aSMifierMethodVisitor0.visitVarInsn(0, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 10, (int) (byte) 100);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, (int) (short) 0);
        aSMifierMethodVisitor0.visitFieldInsn(0, "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test04955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04955");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 0, label18);
        aSMifierMethodVisitor0.visitMaxs(1, (int) '#');
        aSMifierMethodVisitor0.visitIincInsn((-1), 1);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label27);
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label29, label30, label31, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, (int) '4');
        org.junit.Assert.assertNotNull(annotationVisitor16);
    }

    @Test
    public void test04956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04956");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, (int) '4');
        java.util.List list24 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Attribute attribute29 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(annotationVisitor28);
    }

    @Test
    public void test04957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04957");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        boolean boolean25 = printWriter24.checkError();
        printWriter24.println(false);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter24.println((float) 'a');
        printWriter24.print('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor34.visitTryCatchBlock(label35, label36, label37, "");
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor34.visitLocalVariable("hi!", "hi!", "hi!", label43, label44, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierMethodVisitor34.visitAnnotationDefault();
        aSMifierMethodVisitor34.visitMultiANewArrayInsn("hi!", (int) ' ');
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor34.visitLineNumber((int) (short) 100, label52);
        aSMifierMethodVisitor34.visitVarInsn((int) 'a', (int) (short) 100);
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor60.visitFieldInsn((int) ' ', "hi!", "", "");
        aSMifierMethodVisitor60.visitEnd();
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor70 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor70.visitTryCatchBlock(label71, label72, label73, "");
        aSMifierMethodVisitor70.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        org.mockito.asm.Label[] labelArray83 = new org.mockito.asm.Label[] { label82 };
        aSMifierMethodVisitor70.visitTableSwitchInsn(0, (int) (byte) 10, label81, labelArray83);
        aSMifierMethodVisitor60.visitTableSwitchInsn((int) (byte) 100, 0, label69, labelArray83);
        aSMifierMethodVisitor34.visitTableSwitchInsn((int) (byte) 1, (int) '#', label59, labelArray83);
        java.io.PrintWriter printWriter87 = printWriter24.format("hi!", (java.lang.Object[]) labelArray83);
        printWriter24.println("");
        printWriter24.println();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(labelArray83);
        org.junit.Assert.assertNotNull(printWriter87);
    }

    @Test
    public void test04958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04958");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.print('a');
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter28.flush();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        aSMifierClassVisitor30.visitSource("hi!", "");
        aSMifierClassVisitor30.visitOuterClass("hi!", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierClassVisitor30.visitAnnotation("", true);
        aSMifierClassVisitor30.visitOuterClass("hi!", "hi!", "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test04959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04959");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (short) 100);
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor15);
        java.util.List list21 = aSMifierMethodVisitor15.getText();
        aSMifierMethodVisitor15.visitEnd();
        aSMifierMethodVisitor15.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list21);
    }

    @Test
    public void test04960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04960");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '4', label16);
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test04961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04961");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor28.visitTryCatchBlock(label29, label30, label31, "");
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor28.visitLocalVariable("hi!", "hi!", "hi!", label37, label38, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor28.visitAnnotation("", true);
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor45.visitTryCatchBlock(label46, label47, label48, "");
        aSMifierMethodVisitor45.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj54 = null;
        aSMifierMethodVisitor45.visitLdcInsn(obj54);
        org.mockito.asm.Label label56 = null;
        int[] intArray63 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor64.visitTryCatchBlock(label65, label66, label67, "");
        aSMifierMethodVisitor64.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.Label label76 = null;
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] { label76 };
        aSMifierMethodVisitor64.visitTableSwitchInsn(0, (int) (byte) 10, label75, labelArray77);
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label56, intArray63, labelArray77);
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label44, intArray63, labelArray80);
        java.io.PrintWriter printWriter82 = printWriter26.printf("hi!", (java.lang.Object[]) labelArray80);
        java.io.PrintWriter printWriter84 = printWriter82.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor85 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter84);
        java.io.PrintWriter printWriter86 = new java.io.PrintWriter((java.io.Writer) printWriter84);
        printWriter86.print((double) (short) 0);
        printWriter86.write("hi!", (int) ' ', 0);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test04962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04962");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        aSMifierClassVisitor28.visitSource("", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor42.visitTryCatchBlock(label43, label44, label45, "");
        aSMifierMethodVisitor42.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj51 = null;
        aSMifierMethodVisitor42.visitLdcInsn(obj51);
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor42.visitJumpInsn((int) (short) 1, label54);
        aSMifierMethodVisitor42.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor42.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierMethodVisitor42.visitAnnotationDefault();
        java.io.PrintWriter printWriter66 = new java.io.PrintWriter("hi!");
        printWriter66.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor70 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor70.visitTryCatchBlock(label71, label72, label73, "");
        aSMifierMethodVisitor70.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label label82 = null;
        org.mockito.asm.Label[] labelArray83 = new org.mockito.asm.Label[] { label82 };
        aSMifierMethodVisitor70.visitTableSwitchInsn(0, (int) (byte) 10, label81, labelArray83);
        java.io.PrintWriter printWriter85 = printWriter66.printf("hi!", (java.lang.Object[]) labelArray83);
        java.lang.String[] strArray87 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor42.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray83, 1, (java.lang.Object[]) strArray87);
        aSMifierMethodVisitor42.visitMaxs((int) (byte) 0, (int) (byte) 100);
        org.mockito.asm.FieldVisitor fieldVisitor92 = aSMifierClassVisitor28.visitField(0, "", "hi!", "hi!", (java.lang.Object) (byte) 100);
        fieldVisitor92.visitEnd();
        fieldVisitor92.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor97 = fieldVisitor92.visitAnnotation("", false);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(labelArray83);
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(fieldVisitor92);
        org.junit.Assert.assertNotNull(annotationVisitor97);
    }

    @Test
    public void test04963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04963");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (byte) 0);
        java.util.List list32 = aSMifierClassVisitor15.getText();
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter("hi!");
        printWriter38.print((java.lang.Object) (short) -1);
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter43 = printWriter38.format("", (java.lang.Object[]) strArray42);
        org.mockito.asm.MethodVisitor methodVisitor44 = aSMifierClassVisitor15.visitMethod(0, "", "hi!", "hi!", strArray42);
        methodVisitor44.visitMultiANewArrayInsn("hi!", 0);
        methodVisitor44.visitFieldInsn((int) '4', "", "", "hi!");
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        methodVisitor44.visitLocalVariable("", "hi!", "", label56, label57, (int) (short) 1);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(methodVisitor44);
    }

    @Test
    public void test04964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04964");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        printWriter7.print((long) (short) 1);
        printWriter7.print(' ');
        printWriter7.print((float) (short) -1);
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        java.util.Locale locale16 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = null;
        aSMifierMethodVisitor18.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray21, (int) (short) 1, objArray23);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor26.visitTryCatchBlock(label27, label28, label29, "");
        aSMifierMethodVisitor26.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray37 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor26, strArray35, 1.0f };
        java.io.PrintWriter printWriter38 = printWriter15.printf(locale16, "", (java.lang.Object[]) strArray35);
        boolean boolean39 = printWriter38.checkError();
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter43 = printWriter41.append('a');
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter("hi!");
        printWriter45.println((-1.0d));
        printWriter41.print((java.lang.Object) (-1.0d));
        java.io.PrintWriter printWriter50 = printWriter41.append('a');
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        java.util.Locale locale53 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray58 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray60 = null;
        aSMifierMethodVisitor55.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray58, (int) (short) 1, objArray60);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor63.visitTryCatchBlock(label64, label65, label66, "");
        aSMifierMethodVisitor63.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray72 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray74 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor63, strArray72, 1.0f };
        java.io.PrintWriter printWriter75 = printWriter52.printf(locale53, "", (java.lang.Object[]) strArray72);
        char[] charArray82 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter75.println(charArray82);
        printWriter75.write(1);
        printWriter50.print((java.lang.Object) 1);
        char[] charArray87 = new char[] {};
        printWriter50.print(charArray87);
        printWriter38.println(charArray87);
        printWriter7.print(charArray87);
        java.io.PrintWriter printWriter92 = printWriter7.append((java.lang.CharSequence) "hi!");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[]");
        org.junit.Assert.assertNotNull(printWriter92);
    }

    @Test
    public void test04965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04965");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        printWriter12.println("");
        printWriter12.println((long) (byte) 0);
        printWriter12.print((float) 0);
    }

    @Test
    public void test04966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04966");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label9, label10, (int) (byte) 10);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor16.visitTryCatchBlock(label17, label18, label19, "");
        aSMifierMethodVisitor16.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor16.visitLdcInsn(obj25);
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor16.visitJumpInsn((int) (short) 1, label28);
        aSMifierMethodVisitor16.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor16.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor16.visitAnnotationDefault();
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor44.visitTryCatchBlock(label45, label46, label47, "");
        aSMifierMethodVisitor44.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] { label56 };
        aSMifierMethodVisitor44.visitTableSwitchInsn(0, (int) (byte) 10, label55, labelArray57);
        java.io.PrintWriter printWriter59 = printWriter40.printf("hi!", (java.lang.Object[]) labelArray57);
        java.lang.String[] strArray61 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor16.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray57, 1, (java.lang.Object[]) strArray61);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 1, (int) (byte) 100, label15, labelArray57);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, (int) 'a');
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(labelArray57);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(strArray61);
    }

    @Test
    public void test04967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04967");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label[] labelArray27 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor7.visitTableSwitchInsn((int) (byte) 0, (int) (byte) 0, label26, labelArray27);
        java.io.PrintWriter printWriter29 = printWriter5.printf("", (java.lang.Object[]) labelArray27);
        printWriter29.println('a');
        printWriter29.print(false);
        printWriter29.print((long) (byte) 100);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter29, true);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter41 = printWriter29.append((java.lang.CharSequence) "hi!", 10, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(labelArray27);
        org.junit.Assert.assertNotNull(printWriter29);
    }

    @Test
    public void test04968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04968");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter5.close();
        printWriter5.println(true);
        printWriter5.println((double) '#');
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter5.print((float) 0);
        printWriter5.print((double) 'a');
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        printWriter17.print((int) '4');
        org.junit.Assert.assertNotNull(printWriter5);
    }

    @Test
    public void test04969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04969");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list13 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 100, "", true);
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (int) (byte) 100);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test04970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04970");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        printWriter12.println("");
        printWriter12.println(false);
        java.io.PrintWriter printWriter23 = printWriter12.append((java.lang.CharSequence) "hi!", 0, 0);
        printWriter23.println(false);
        org.junit.Assert.assertNotNull(printWriter23);
    }

    @Test
    public void test04971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04971");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '#', label21);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, 1);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor29);
    }

    @Test
    public void test04972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04972");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print('#');
        printWriter24.print((int) ' ');
        java.lang.Object obj29 = null;
        printWriter24.print(obj29);
        printWriter24.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor33 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        printWriter24.println((long) (byte) 100);
        printWriter24.print((int) (short) 1);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter((java.io.Writer) printWriter24, false);
        boolean boolean40 = printWriter24.checkError();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test04973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04973");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) '#', label21);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "hi!", true);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label34 = null;
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        printWriter36.print(false);
        java.util.Locale locale39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label42, label43, label44, "");
        aSMifierMethodVisitor41.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj50 = null;
        aSMifierMethodVisitor41.visitLdcInsn(obj50);
        aSMifierMethodVisitor41.visitInsn((int) ' ');
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor57.visitTryCatchBlock(label58, label59, label60, "");
        aSMifierMethodVisitor57.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj66 = null;
        aSMifierMethodVisitor57.visitLdcInsn(obj66);
        org.mockito.asm.Label label68 = null;
        int[] intArray75 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor76 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        aSMifierMethodVisitor76.visitTryCatchBlock(label77, label78, label79, "");
        aSMifierMethodVisitor76.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label87 = null;
        org.mockito.asm.Label label88 = null;
        org.mockito.asm.Label[] labelArray89 = new org.mockito.asm.Label[] { label88 };
        aSMifierMethodVisitor76.visitTableSwitchInsn(0, (int) (byte) 10, label87, labelArray89);
        aSMifierMethodVisitor57.visitLookupSwitchInsn(label68, intArray75, labelArray89);
        aSMifierMethodVisitor41.visitTableSwitchInsn((int) '4', (int) '#', label56, labelArray89);
        java.io.PrintWriter printWriter93 = printWriter36.format(locale39, "hi!", (java.lang.Object[]) labelArray89);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, (int) 'a', label34, labelArray89);
        aSMifierMethodVisitor0.visitTypeInsn(10, "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray89);
        org.junit.Assert.assertNotNull(printWriter93);
    }

    @Test
    public void test04974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04974");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 100, label61);
        aSMifierMethodVisitor0.visitTypeInsn(1, "hi!");
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label69, label70, 1);
        aSMifierMethodVisitor0.visitMethodInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) '#');
        org.mockito.asm.Label label84 = null;
        org.mockito.asm.Label label85 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label84, label85, (int) (short) 1);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
    }

    @Test
    public void test04975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04975");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        char[] charArray31 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter24.println(charArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter24.print((float) 10L);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor37 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        aSMifierClassVisitor37.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = null;
        aSMifierMethodVisitor43.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray46, (int) (short) 1, objArray48);
        aSMifierMethodVisitor43.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor43.visitMethodInsn((int) (short) 10, "hi!", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor60 = aSMifierClassVisitor37.visitField(100, "hi!", "hi!", "hi!", (java.lang.Object) "");
        aSMifierClassVisitor37.visitEnd();
        aSMifierClassVisitor37.visitOuterClass("hi!", "hi!", "hi!");
        aSMifierClassVisitor37.visitOuterClass("hi!", "", "");
        aSMifierClassVisitor37.visitInnerClass("hi!", "", "", (int) (byte) 10);
        org.mockito.asm.Attribute attribute75 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor37.visitAttribute(attribute75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(fieldVisitor60);
    }

    @Test
    public void test04976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04976");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list13 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", false);
        java.util.List list18 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 100, "hi!", "", "hi!");
        org.mockito.asm.Attribute attribute24 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(list18);
    }

    @Test
    public void test04977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04977");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitOuterClass("", "", "hi!");
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        java.util.Locale locale37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray42 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray44 = null;
        aSMifierMethodVisitor39.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray42, (int) (short) 1, objArray44);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label48, label49, label50, "");
        aSMifierMethodVisitor47.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray56 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray58 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor47, strArray56, 1.0f };
        java.io.PrintWriter printWriter59 = printWriter36.printf(locale37, "", (java.lang.Object[]) strArray56);
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter((java.io.Writer) printWriter59, true);
        printWriter61.print("");
        printWriter61.print('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor66 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter61);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        org.mockito.asm.MethodVisitor methodVisitor72 = aSMifierClassVisitor66.visitMethod(0, "", "", "hi!", strArray71);
        org.mockito.asm.MethodVisitor methodVisitor73 = aSMifierClassVisitor15.visitMethod((int) (short) 100, "hi!", "hi!", "", strArray71);
        java.lang.String[] strArray78 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        org.mockito.asm.MethodVisitor methodVisitor79 = aSMifierClassVisitor15.visitMethod((int) '4', "", "", "", strArray78);
        org.mockito.asm.Attribute attribute80 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor15.visitAttribute(attribute80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(methodVisitor72);
        org.junit.Assert.assertNotNull(methodVisitor73);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(methodVisitor79);
    }

    @Test
    public void test04978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04978");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) (short) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label25, label26, label27, "hi!");
        aSMifierMethodVisitor0.visitMaxs((int) (byte) -1, (int) '#');
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor0.visitLabel(label33);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test04979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04979");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitMaxs(0, (-1));
        aSMifierMethodVisitor0.visitMethodInsn(10, "", "hi!", "hi!");
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label17, label18, (int) (short) -1);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "", "", label25, label26, (int) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitFieldInsn(10, "", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor36);
    }

    @Test
    public void test04980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04980");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.print("hi!");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor28.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        aSMifierMethodVisitor39.visitTypeInsn(0, "hi!");
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor39.visitLocalVariable("hi!", "hi!", "hi!", label56, label57, (int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor39.visitParameterAnnotation(0, "", true);
        org.mockito.asm.FieldVisitor fieldVisitor64 = aSMifierClassVisitor28.visitField((int) ' ', "hi!", "hi!", "", (java.lang.Object) aSMifierMethodVisitor39);
        java.lang.String[] strArray69 = null;
        org.mockito.asm.MethodVisitor methodVisitor70 = aSMifierClassVisitor28.visitMethod(0, "hi!", "hi!", "", strArray69);
        java.io.PrintWriter printWriter76 = new java.io.PrintWriter("hi!");
        printWriter76.write((-1));
        printWriter76.flush();
        java.util.Locale locale80 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor82 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray85 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray87 = null;
        aSMifierMethodVisitor82.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray85, (int) (short) 1, objArray87);
        java.io.PrintWriter printWriter89 = printWriter76.printf(locale80, "", (java.lang.Object[]) strArray85);
        org.mockito.asm.MethodVisitor methodVisitor90 = aSMifierClassVisitor28.visitMethod((int) ' ', "hi!", "hi!", "hi!", strArray85);
        java.util.List list91 = aSMifierClassVisitor28.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor94 = aSMifierClassVisitor28.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(methodVisitor70);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(printWriter89);
        org.junit.Assert.assertNotNull(methodVisitor90);
        org.junit.Assert.assertNotNull(list91);
        org.junit.Assert.assertNotNull(annotationVisitor94);
    }

    @Test
    public void test04981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04981");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = null;
        aSMifierMethodVisitor29.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray32, (int) (short) 1, objArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor37, strArray46, 1.0f };
        java.io.PrintWriter printWriter49 = printWriter26.printf(locale27, "", (java.lang.Object[]) strArray46);
        char[] charArray56 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter49.println(charArray56);
        printWriter24.print(charArray56);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        printWriter24.write("");
        printWriter24.print(0.0f);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, #, 4, #,  ]");
    }

    @Test
    public void test04982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04982");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.print('a');
        printWriter24.println();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor30.visitTryCatchBlock(label31, label32, label33, "");
        aSMifierMethodVisitor30.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        aSMifierMethodVisitor30.visitMaxs(100, (int) (short) -1);
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { (byte) 0 };
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        printWriter46.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor50.visitTryCatchBlock(label51, label52, label53, "");
        aSMifierMethodVisitor50.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label[] labelArray63 = new org.mockito.asm.Label[] { label62 };
        aSMifierMethodVisitor50.visitTableSwitchInsn(0, (int) (byte) 10, label61, labelArray63);
        java.io.PrintWriter printWriter65 = printWriter46.printf("hi!", (java.lang.Object[]) labelArray63);
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label42, intArray44, labelArray63);
        java.io.PrintWriter printWriter67 = printWriter24.printf("hi!", (java.lang.Object[]) labelArray63);
        java.io.PrintWriter printWriter69 = printWriter24.append('#');
        java.io.PrintWriter printWriter71 = printWriter69.append(' ');
        java.lang.Object obj72 = null;
        printWriter71.println(obj72);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0]");
        org.junit.Assert.assertNotNull(labelArray63);
        org.junit.Assert.assertNotNull(printWriter65);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertNotNull(printWriter71);
    }

    @Test
    public void test04983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04983");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 10);
        java.util.List list13 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 1, "hi!", true);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) ' ', label19);
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor23);
    }

    @Test
    public void test04984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04984");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        printWriter24.println();
        printWriter24.print('a');
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter28.flush();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        aSMifierClassVisitor30.visitSource("hi!", "");
        aSMifierClassVisitor30.visitOuterClass("hi!", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierClassVisitor30.visitAnnotation("", true);
        aSMifierClassVisitor30.visitInnerClass("", "hi!", "", (int) (short) 0);
        aSMifierClassVisitor30.visitInnerClass("", "hi!", "hi!", (int) (byte) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor55.visitTryCatchBlock(label56, label57, label58, "");
        aSMifierMethodVisitor55.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj64 = null;
        aSMifierMethodVisitor55.visitLdcInsn(obj64);
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor55.visitJumpInsn((int) (short) 1, label67);
        aSMifierMethodVisitor55.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor55.visitLineNumber((int) (short) 0, label73);
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = aSMifierMethodVisitor55.visitAnnotation("", true);
        aSMifierMethodVisitor55.visitIntInsn((int) (short) 1, (int) (byte) 0);
        org.mockito.asm.FieldVisitor fieldVisitor81 = aSMifierClassVisitor30.visitField(1, "", "", "hi!", (java.lang.Object) aSMifierMethodVisitor55);
        aSMifierMethodVisitor55.visitTypeInsn(1, "");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor77);
        org.junit.Assert.assertNotNull(fieldVisitor81);
    }

    @Test
    public void test04985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04985");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray3 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray5 = null;
        aSMifierMethodVisitor0.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray3, (int) (short) 1, objArray5);
        aSMifierMethodVisitor0.visitFieldInsn(0, "", "", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list13 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, 0);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 1, label18);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray30 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray32 = null;
        aSMifierMethodVisitor27.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray30, (int) (short) 1, objArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor35, strArray44, 1.0f };
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale25, "", (java.lang.Object[]) strArray44);
        java.io.PrintWriter printWriter49 = printWriter47.append((java.lang.CharSequence) "");
        printWriter47.println(0.0f);
        printWriter47.print(1.0f);
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter((java.io.Writer) printWriter47);
        printWriter54.println(false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) false);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(printWriter49);
    }

    @Test
    public void test04986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04986");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "hi!");
        aSMifierMethodVisitor0.visitInsn(100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 100, "", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.util.List list25 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(annotationVisitor26);
    }

    @Test
    public void test04987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04987");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        printWriter12.println("");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor22.visitLocalVariable("hi!", "hi!", "hi!", label31, label32, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor22.visitAnnotation("", true);
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label50 = null;
        int[] intArray57 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label50, intArray57, labelArray71);
        org.mockito.asm.Label[] labelArray74 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label38, intArray57, labelArray74);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor77.visitTryCatchBlock(label78, label79, label80, "");
        aSMifierMethodVisitor77.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label88 = null;
        org.mockito.asm.Label label89 = null;
        org.mockito.asm.Label[] labelArray90 = new org.mockito.asm.Label[] { label89 };
        aSMifierMethodVisitor77.visitTableSwitchInsn(0, (int) (byte) 10, label88, labelArray90);
        aSMifierMethodVisitor19.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray74, (int) (short) 100, (java.lang.Object[]) labelArray90);
        java.io.PrintWriter printWriter93 = printWriter12.printf("hi!", (java.lang.Object[]) labelArray74);
        java.io.PrintWriter printWriter95 = new java.io.PrintWriter((java.io.Writer) printWriter12, true);
        printWriter12.write((int) ' ');
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(labelArray74);
        org.junit.Assert.assertNotNull(labelArray90);
        org.junit.Assert.assertNotNull(printWriter93);
    }

    @Test
    public void test04988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04988");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "");
        printWriter5.close();
        java.util.Locale locale7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label10, label11, label12, "");
        aSMifierMethodVisitor9.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj18 = null;
        aSMifierMethodVisitor9.visitLdcInsn(obj18);
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor9.visitJumpInsn((int) (short) 1, label21);
        aSMifierMethodVisitor9.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor9.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor9.visitAnnotationDefault();
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor37.visitTryCatchBlock(label38, label39, label40, "");
        aSMifierMethodVisitor37.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] { label49 };
        aSMifierMethodVisitor37.visitTableSwitchInsn(0, (int) (byte) 10, label48, labelArray50);
        java.io.PrintWriter printWriter52 = printWriter33.printf("hi!", (java.lang.Object[]) labelArray50);
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor9.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray50, 1, (java.lang.Object[]) strArray54);
        java.io.PrintWriter printWriter56 = printWriter5.format(locale7, "", (java.lang.Object[]) strArray54);
        printWriter56.println(true);
        printWriter56.print('4');
        printWriter56.println("");
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(printWriter56);
    }

    @Test
    public void test04989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04989");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        aSMifierClassVisitor15.visitSource("", "hi!");
        java.lang.String[] strArray25 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor15.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray25);
        aSMifierClassVisitor15.visitInnerClass("", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray39 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray41 = null;
        aSMifierMethodVisitor36.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray39, (int) (short) 1, objArray41);
        org.mockito.asm.MethodVisitor methodVisitor43 = aSMifierClassVisitor15.visitMethod((int) (short) 0, "", "", "hi!", strArray39);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierClassVisitor15.visitAnnotation("hi!", true);
        java.util.List list47 = aSMifierClassVisitor15.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitIincInsn((int) '#', (int) (byte) -1);
        aSMifierMethodVisitor52.visitIincInsn((int) (short) 10, (int) (byte) 0);
        org.mockito.asm.FieldVisitor fieldVisitor59 = aSMifierClassVisitor15.visitField((int) (byte) 1, "", "", "", (java.lang.Object) aSMifierMethodVisitor52);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor52.visitParameterAnnotation(0, "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = annotationVisitor63.visitArray("");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(fieldVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(annotationVisitor65);
    }

    @Test
    public void test04990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04990");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((java.lang.Object) (short) -1);
        printWriter1.println((float) (short) 0);
        printWriter1.println((float) 1L);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter8);
        printWriter8.println(' ');
    }

    @Test
    public void test04991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04991");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label21, label22, label23, "");
        aSMifierMethodVisitor20.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj29 = null;
        aSMifierMethodVisitor20.visitLdcInsn(obj29);
        org.mockito.asm.Label label31 = null;
        int[] intArray38 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] { label51 };
        aSMifierMethodVisitor39.visitTableSwitchInsn(0, (int) (byte) 10, label50, labelArray52);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label31, intArray38, labelArray52);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) 'a', 10, label19, labelArray52);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitMaxs(1, 10);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter("hi!");
        printWriter65.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.Label label72 = null;
        aSMifierMethodVisitor69.visitTryCatchBlock(label70, label71, label72, "");
        aSMifierMethodVisitor69.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.Label label81 = null;
        org.mockito.asm.Label[] labelArray82 = new org.mockito.asm.Label[] { label81 };
        aSMifierMethodVisitor69.visitTableSwitchInsn(0, (int) (byte) 10, label80, labelArray82);
        java.io.PrintWriter printWriter84 = printWriter65.printf("hi!", (java.lang.Object[]) labelArray82);
        printWriter65.print((float) 1L);
        aSMifierMethodVisitor0.print(printWriter65);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitVarInsn(0, (int) (byte) 0);
        org.mockito.asm.Label label92 = null;
        aSMifierMethodVisitor0.visitLabel(label92);
        org.mockito.asm.Label label94 = null;
        org.mockito.asm.Label label95 = null;
        org.mockito.asm.Label label96 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label94, label95, label96, "");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(labelArray82);
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test04992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04992");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((java.lang.Object) (short) -1);
        aSMifierMethodVisitor0.print(printWriter12);
        printWriter12.println("");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor22.visitTryCatchBlock(label23, label24, label25, "");
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor22.visitLocalVariable("hi!", "hi!", "hi!", label31, label32, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor22.visitAnnotation("", true);
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor39.visitTryCatchBlock(label40, label41, label42, "");
        aSMifierMethodVisitor39.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj48 = null;
        aSMifierMethodVisitor39.visitLdcInsn(obj48);
        org.mockito.asm.Label label50 = null;
        int[] intArray57 = new int[] { ' ', 'a', 100, (byte) 10, '4', (byte) -1 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor58.visitTryCatchBlock(label59, label60, label61, "");
        aSMifierMethodVisitor58.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] { label70 };
        aSMifierMethodVisitor58.visitTableSwitchInsn(0, (int) (byte) 10, label69, labelArray71);
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label50, intArray57, labelArray71);
        org.mockito.asm.Label[] labelArray74 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label38, intArray57, labelArray74);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label78 = null;
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor77.visitTryCatchBlock(label78, label79, label80, "");
        aSMifierMethodVisitor77.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label88 = null;
        org.mockito.asm.Label label89 = null;
        org.mockito.asm.Label[] labelArray90 = new org.mockito.asm.Label[] { label89 };
        aSMifierMethodVisitor77.visitTableSwitchInsn(0, (int) (byte) 10, label88, labelArray90);
        aSMifierMethodVisitor19.visitFrame((int) (short) 100, (int) (byte) -1, (java.lang.Object[]) labelArray74, (int) (short) 100, (java.lang.Object[]) labelArray90);
        java.io.PrintWriter printWriter93 = printWriter12.printf("hi!", (java.lang.Object[]) labelArray74);
        java.io.PrintWriter printWriter95 = printWriter93.append((java.lang.CharSequence) "");
        printWriter95.println("hi!");
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[32, 97, 100, 10, 52, -1]");
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(labelArray74);
        org.junit.Assert.assertNotNull(labelArray90);
        org.junit.Assert.assertNotNull(printWriter93);
        org.junit.Assert.assertNotNull(printWriter95);
    }

    @Test
    public void test04993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04993");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        java.util.Locale locale2 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray7 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray9 = null;
        aSMifierMethodVisitor4.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray7, (int) (short) 1, objArray9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor12.visitTryCatchBlock(label13, label14, label15, "");
        aSMifierMethodVisitor12.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray21 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor12, strArray21, 1.0f };
        java.io.PrintWriter printWriter24 = printWriter1.printf(locale2, "", (java.lang.Object[]) strArray21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter26.print("hi!");
        printWriter26.println('a');
        printWriter26.println(false);
        printWriter26.close();
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter37 = printWriter35.append('a');
        printWriter35.println(100.0f);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        java.io.PrintWriter printWriter43 = printWriter41.append('a');
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter("hi!");
        printWriter45.println((-1.0d));
        printWriter41.print((java.lang.Object) (-1.0d));
        java.io.PrintWriter printWriter50 = printWriter41.append('a');
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        java.util.Locale locale53 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray58 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray60 = null;
        aSMifierMethodVisitor55.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray58, (int) (short) 1, objArray60);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.Label label66 = null;
        aSMifierMethodVisitor63.visitTryCatchBlock(label64, label65, label66, "");
        aSMifierMethodVisitor63.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray72 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray74 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor63, strArray72, 1.0f };
        java.io.PrintWriter printWriter75 = printWriter52.printf(locale53, "", (java.lang.Object[]) strArray72);
        char[] charArray82 = new char[] { 'a', '4', '#', '4', '#', ' ' };
        printWriter75.println(charArray82);
        printWriter75.write(1);
        printWriter50.print((java.lang.Object) 1);
        char[] charArray87 = new char[] {};
        printWriter50.print(charArray87);
        printWriter35.println(charArray87);
        printWriter26.println(charArray87);
        printWriter26.flush();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "a4#4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "a4#4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[a, 4, #, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[]");
    }

    @Test
    public void test04994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04994");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 10, 0);
        aSMifierMethodVisitor0.visitFieldInsn(100, "", "hi!", "");
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print(false);
        java.io.PrintWriter printWriter20 = printWriter16.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.Writer) printWriter20, true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter((java.io.Writer) printWriter20);
        printWriter23.write("");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        printWriter27.print((java.lang.Object) (short) -1);
        java.io.PrintWriter printWriter31 = printWriter27.append((java.lang.CharSequence) "");
        printWriter23.println((java.lang.Object) printWriter31);
        printWriter31.println((double) 10.0f);
        printWriter31.print(false);
        aSMifierMethodVisitor0.print(printWriter31);
        printWriter31.close();
        java.io.PrintWriter printWriter40 = printWriter31.append('a');
        java.lang.Class<?> wildcardClass41 = printWriter40.getClass();
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test04995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04995");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter5, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter5);
        printWriter8.write("");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        java.util.Locale locale13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray18 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray20 = null;
        aSMifierMethodVisitor15.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray18, (int) (short) 1, objArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label24, label25, label26, "");
        aSMifierMethodVisitor23.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '4', (short) 10, aSMifierMethodVisitor23, strArray32, 1.0f };
        java.io.PrintWriter printWriter35 = printWriter12.printf(locale13, "", (java.lang.Object[]) strArray32);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, true);
        printWriter8.println((java.lang.Object) printWriter37);
        printWriter37.println((double) 100);
        printWriter37.print('#');
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(printWriter35);
    }

    @Test
    public void test04996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04996");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 0, (int) (short) 1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 1);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLabel(label18);
        aSMifierMethodVisitor0.visitVarInsn(1, (int) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitTypeInsn((int) ' ', "");
        org.junit.Assert.assertNotNull(annotationVisitor25);
    }

    @Test
    public void test04997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04997");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label23, label24, 0);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 10, (int) (short) 100);
        java.util.List list34 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitIincInsn((-1), (int) (byte) 100);
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) -1, label39);
        org.junit.Assert.assertNotNull(list34);
    }

    @Test
    public void test04998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04998");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.write((-1));
        printWriter1.flush();
        java.util.Locale locale5 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray10 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray12 = null;
        aSMifierMethodVisitor7.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray10, (int) (short) 1, objArray12);
        java.io.PrintWriter printWriter14 = printWriter1.printf(locale5, "", (java.lang.Object[]) strArray10);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor15.visitEnd();
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.write((-1));
        printWriter22.flush();
        java.util.Locale locale26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.lang.String[] strArray31 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.lang.Object[] objArray33 = null;
        aSMifierMethodVisitor28.visitFrame((int) '4', (int) (byte) 1, (java.lang.Object[]) strArray31, (int) (short) 1, objArray33);
        java.io.PrintWriter printWriter35 = printWriter22.printf(locale26, "", (java.lang.Object[]) strArray31);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter22);
        aSMifierClassVisitor36.visitEnd();
        aSMifierClassVisitor36.visitSource("", "hi!");
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.TYPES;
        aSMifierClassVisitor36.visit((int) ' ', (int) (byte) 100, "", "hi!", "", strArray46);
        org.mockito.asm.MethodVisitor methodVisitor48 = aSMifierClassVisitor15.visitMethod((int) (short) 100, "hi!", "hi!", "", strArray46);
        aSMifierClassVisitor15.visitInnerClass("", "", "", (int) (short) 100);
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierClassVisitor15.visitAnnotation("", true);
        aSMifierClassVisitor15.visitEnd();
        org.mockito.asm.Attribute attribute59 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor15.visitAttribute(attribute59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor57);
    }

    @Test
    public void test04999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04999");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label1, label2, label3, "");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj9 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj9);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label12);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, 100);
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 0, label18);
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 1, "hi!", true);
        aSMifierMethodVisitor0.visitInsn((int) (short) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor26.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(annotationVisitor26);
    }

    @Test
    public void test05000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test05000");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print(false);
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor7.visitTryCatchBlock(label8, label9, label10, "");
        aSMifierMethodVisitor7.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor7.visitLdcInsn(obj16);
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label19);
        aSMifierMethodVisitor7.visitIntInsn((int) (byte) 100, 100);
        aSMifierMethodVisitor7.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor7.visitAnnotationDefault();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((java.lang.Object) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor35.visitTryCatchBlock(label36, label37, label38, "");
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 10, (int) (byte) -1);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] { label47 };
        aSMifierMethodVisitor35.visitTableSwitchInsn(0, (int) (byte) 10, label46, labelArray48);
        java.io.PrintWriter printWriter50 = printWriter31.printf("hi!", (java.lang.Object[]) labelArray48);
        java.lang.String[] strArray52 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        aSMifierMethodVisitor7.visitFrame((int) (short) 100, (-1), (java.lang.Object[]) labelArray48, 1, (java.lang.Object[]) strArray52);
        java.io.PrintWriter printWriter54 = printWriter1.format("hi!", (java.lang.Object[]) strArray52);
        printWriter54.println((long) 1);
        java.io.PrintWriter printWriter58 = printWriter54.append((java.lang.CharSequence) "");
        printWriter54.println((int) 'a');
        printWriter54.println('#');
        java.lang.Object obj63 = null;
        printWriter54.print(obj63);
        printWriter54.flush();
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(printWriter58);
    }
}

