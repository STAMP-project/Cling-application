import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test02001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02001");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double double15 = graggBulirschStoerIntegrator6.getMaxStep();
        double[] doubleArray20 = new double[] { '4', (byte) 10 };
        double[] doubleArray21 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator22 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray20, doubleArray21);
        double double23 = graggBulirschStoerIntegrator22.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator22.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double29 = graggBulirschStoerIntegrator22.getCurrentSignedStepsize();
        double double30 = graggBulirschStoerIntegrator22.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler31 = graggBulirschStoerIntegrator22.getStepHandler();
        boolean boolean32 = stepHandler31.requiresDenseOutput();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler31);
        java.lang.String str34 = graggBulirschStoerIntegrator6.getName();
        java.lang.String str35 = graggBulirschStoerIntegrator6.getName();
        java.lang.String str36 = graggBulirschStoerIntegrator6.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction37, (double) (-1.0f), (double) 10L, (int) (short) 0);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 35.0d + "'", double15 == 35.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 18.708286933869708d + "'", double23 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 18.708286933869708d + "'", double29 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str34, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str35, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str36, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02002");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction8, 0.0d, (double) (-1.0f), (int) (short) 10);
        graggBulirschStoerIntegrator6.setOrderControl(0, (double) 2, 0.0d);
        double double17 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double[] doubleArray22 = new double[] { '4', (byte) 10 };
        double[] doubleArray23 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray22, doubleArray23);
        double double25 = graggBulirschStoerIntegrator24.getCurrentStepStart();
        graggBulirschStoerIntegrator24.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator24.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        double[] doubleArray39 = new double[] { '4', (byte) 10 };
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray39, doubleArray40);
        double double42 = graggBulirschStoerIntegrator41.getCurrentStepStart();
        graggBulirschStoerIntegrator41.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        graggBulirschStoerIntegrator41.addSwitchingFunction(switchingFunction48, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray57 = new double[] { '4', (byte) 10 };
        double[] doubleArray58 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray57, doubleArray58);
        double double60 = graggBulirschStoerIntegrator59.getCurrentStepStart();
        double[] doubleArray65 = new double[] { '4', (byte) 10 };
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray65, doubleArray66);
        org.apache.commons.math.ode.StepHandler stepHandler68 = graggBulirschStoerIntegrator67.getStepHandler();
        graggBulirschStoerIntegrator59.setStepHandler(stepHandler68);
        graggBulirschStoerIntegrator41.setStepHandler(stepHandler68);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator71 = null;
        stepHandler68.handleStep(stepInterpolator71, false);
        graggBulirschStoerIntegrator24.setStepHandler(stepHandler68);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler68);
        org.apache.commons.math.ode.StepHandler stepHandler76 = graggBulirschStoerIntegrator6.getStepHandler();
        stepHandler76.reset();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 18.708286933869708d + "'", double17 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertNotNull(stepHandler68);
        org.junit.Assert.assertNotNull(stepHandler76);
    }

    @Test
    public void test02003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02003");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray11 = new double[] { 10, 100, (byte) 0 };
        boolean boolean12 = switchingFunctionsHandler6.reset((double) 0, doubleArray11);
        double[] doubleArray19 = new double[] { 0.0d, 0, (short) 100, 'a', 3.1622776601683795d, (short) 0 };
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator20 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1L, (double) 'a', doubleArray11, doubleArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray26 = new double[] { 10, 100, (byte) 0 };
        boolean boolean27 = switchingFunctionsHandler21.reset((double) 0, doubleArray26);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler21.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray36 = new double[] { 10, 100, (byte) 0 };
        boolean boolean37 = switchingFunctionsHandler31.reset((double) 0, doubleArray36);
        boolean boolean38 = switchingFunctionsHandler21.reset((double) 100.0f, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator39 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, (double) (byte) -1, doubleArray11, doubleArray36);
        double[] doubleArray45 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray50 = new double[] { '4', (byte) 10 };
        double[] doubleArray51 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator52 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray50, doubleArray51);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator53 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray45, doubleArray51);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator54 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, (double) 3, doubleArray11, doubleArray45);
        graggBulirschStoerIntegrator54.setStabilityCheck(false, (int) (byte) 100, (-1), (double) 2);
        org.apache.commons.math.ode.StepHandler stepHandler60 = graggBulirschStoerIntegrator54.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 100.0, 97.0, 3.1622776601683795, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[]");
        org.junit.Assert.assertNotNull(stepHandler60);
    }

    @Test
    public void test02004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02004");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        double[] doubleArray12 = new double[] { '4', (byte) 10 };
        double[] doubleArray13 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray12, doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.reset(18.708286933869708d, doubleArray13);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler0.add(switchingFunction16, Double.NaN, (-1.0d), (int) (byte) 10);
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.stop();
        boolean boolean23 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler0.add(switchingFunction24, (double) 0.0f, (double) (short) 10, (int) (byte) 0);
        double double29 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray36 = new double[] { 10, 100, (byte) 0 };
        boolean boolean37 = switchingFunctionsHandler31.reset((double) 0, doubleArray36);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler31.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray46 = new double[] { 10, 100, (byte) 0 };
        boolean boolean47 = switchingFunctionsHandler41.reset((double) 0, doubleArray46);
        boolean boolean48 = switchingFunctionsHandler31.reset((double) 100.0f, doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted((double) 0L, doubleArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test02005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02005");
        double[] doubleArray5 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray10 = new double[] { '4', (byte) 10 };
        double[] doubleArray11 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator12 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray10, doubleArray11);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator13 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray5, doubleArray11);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        graggBulirschStoerIntegrator13.addSwitchingFunction(switchingFunction14, (double) (byte) 100, 35.0d, (int) '#');
        double[] doubleArray23 = new double[] { '4', (byte) 10 };
        double[] doubleArray24 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator25 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray23, doubleArray24);
        double double26 = graggBulirschStoerIntegrator25.getCurrentStepStart();
        double[] doubleArray31 = new double[] { '4', (byte) 10 };
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator33 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray31, doubleArray32);
        org.apache.commons.math.ode.StepHandler stepHandler34 = graggBulirschStoerIntegrator33.getStepHandler();
        graggBulirschStoerIntegrator25.setStepHandler(stepHandler34);
        graggBulirschStoerIntegrator25.setOrderControl((int) (short) -1, (double) (-1L), (double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler40 = graggBulirschStoerIntegrator25.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        stepHandler40.handleStep(stepInterpolator41, true);
        graggBulirschStoerIntegrator13.setStepHandler(stepHandler40);
        boolean boolean45 = stepHandler40.requiresDenseOutput();
        stepHandler40.reset();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertNotNull(stepHandler40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test02006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02006");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test02007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02007");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "Gragg-Bulirsch-Stoer");
        java.lang.Class<?> wildcardClass3 = functionEvaluationException2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test02008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02008");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setInterpolationControl(false, (int) (byte) 1);
        java.lang.String str18 = graggBulirschStoerIntegrator6.getName();
        double double19 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double20 = graggBulirschStoerIntegrator6.getMinStep();
        double double21 = graggBulirschStoerIntegrator6.getMaxStep();
        graggBulirschStoerIntegrator6.setOrderControl((int) (short) 100, (double) (-1.0f), (double) 100.0f);
        graggBulirschStoerIntegrator6.setInitialStepSize((double) 0);
        org.apache.commons.math.ode.StepHandler stepHandler28 = graggBulirschStoerIntegrator6.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str18, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 18.708286933869708d + "'", double19 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 35.0d + "'", double21 == 35.0d);
        org.junit.Assert.assertNotNull(stepHandler28);
    }

    @Test
    public void test02009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02009");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray7 = new double[] { 10, 100, (byte) 0 };
        boolean boolean8 = switchingFunctionsHandler2.reset((double) 0, doubleArray7);
        double[] doubleArray14 = new double[] { '4', (byte) 10 };
        double[] doubleArray15 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator16 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray14, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler2.reset(18.708286933869708d, doubleArray15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler18.add(switchingFunction19, 35.0d, 100.0d, (int) 'a');
        double double24 = switchingFunctionsHandler18.getEventTime();
        double[] doubleArray30 = new double[] { '4', (byte) 10 };
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray30, doubleArray31);
        boolean boolean33 = switchingFunctionsHandler18.reset((double) 3, doubleArray30);
        double[] doubleArray42 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray47 = new double[] { '4', (byte) 10 };
        double[] doubleArray48 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray47, doubleArray48);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray42, doubleArray48);
        double[] doubleArray56 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray61 = new double[] { '4', (byte) 10 };
        double[] doubleArray62 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray61, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray56, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator65 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) (short) 100, doubleArray48, doubleArray56);
        boolean boolean66 = switchingFunctionsHandler18.reset((double) (byte) 10, doubleArray56);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0L, (double) 2, doubleArray15, doubleArray56);
        graggBulirschStoerIntegrator67.setInterpolationControl(true, (int) ' ');
        double double71 = graggBulirschStoerIntegrator67.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction72 = null;
        graggBulirschStoerIntegrator67.addSwitchingFunction(switchingFunction72, 32.0d, 32.0d, 1);
        graggBulirschStoerIntegrator67.setStabilityCheck(true, (int) ' ', 10, 0.0d);
        double double82 = graggBulirschStoerIntegrator67.getCurrentStepStart();
        graggBulirschStoerIntegrator67.setInterpolationControl(true, (int) (byte) 10);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2.0d + "'", double71 == 2.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
    }

    @Test
    public void test02010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02010");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler6 = graggBulirschStoerIntegrator4.getStepHandler();
        double double7 = graggBulirschStoerIntegrator4.getMinStep();
        double double8 = graggBulirschStoerIntegrator4.getMinStep();
        java.lang.String str9 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setOrderControl((int) (byte) 1, (double) (-1), Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler14 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator15 = null;
        stepHandler14.handleStep(stepInterpolator15, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        stepHandler14.handleStep(stepInterpolator18, true);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str9, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler14);
    }

    @Test
    public void test02011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02011");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        org.apache.commons.math.ode.StepHandler stepHandler7 = graggBulirschStoerIntegrator6.getStepHandler();
        double double8 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler9 = graggBulirschStoerIntegrator6.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler10 = graggBulirschStoerIntegrator6.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction11, (double) 2, (double) 2, (int) (byte) 1);
        java.lang.String str16 = graggBulirschStoerIntegrator6.getName();
        double double17 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double[] doubleArray22 = new double[] { '4', (byte) 10 };
        double[] doubleArray23 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray22, doubleArray23);
        double double25 = graggBulirschStoerIntegrator24.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator24.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double31 = graggBulirschStoerIntegrator24.getCurrentSignedStepsize();
        double double32 = graggBulirschStoerIntegrator24.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler33 = graggBulirschStoerIntegrator24.getStepHandler();
        double double34 = graggBulirschStoerIntegrator24.getMinStep();
        graggBulirschStoerIntegrator24.setStepsizeControl(0.0d, (double) 0, (double) ' ', (-1.0d));
        graggBulirschStoerIntegrator24.setInterpolationControl(false, (int) '4');
        double[] doubleArray47 = new double[] { '4', (byte) 10 };
        double[] doubleArray48 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray47, doubleArray48);
        double double50 = graggBulirschStoerIntegrator49.getCurrentStepStart();
        graggBulirschStoerIntegrator49.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        graggBulirschStoerIntegrator49.addSwitchingFunction(switchingFunction56, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray65 = new double[] { '4', (byte) 10 };
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray65, doubleArray66);
        double double68 = graggBulirschStoerIntegrator67.getCurrentStepStart();
        double[] doubleArray73 = new double[] { '4', (byte) 10 };
        double[] doubleArray74 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray73, doubleArray74);
        org.apache.commons.math.ode.StepHandler stepHandler76 = graggBulirschStoerIntegrator75.getStepHandler();
        graggBulirschStoerIntegrator67.setStepHandler(stepHandler76);
        graggBulirschStoerIntegrator49.setStepHandler(stepHandler76);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        stepHandler76.handleStep(stepInterpolator79, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator82 = null;
        stepHandler76.handleStep(stepInterpolator82, false);
        graggBulirschStoerIntegrator24.setStepHandler(stepHandler76);
        stepHandler76.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler76);
        java.lang.String str88 = graggBulirschStoerIntegrator6.getName();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 18.708286933869708d + "'", double8 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str16, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 18.708286933869708d + "'", double17 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 18.708286933869708d + "'", double25 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 18.708286933869708d + "'", double31 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertNotNull(stepHandler76);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str88, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02012");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1.0f), (double) (-1.0f), (double) 100.0f, (double) (byte) -1);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        double[] doubleArray17 = new double[] { '4', (byte) 10 };
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray17, doubleArray18);
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator19.getStepHandler();
        graggBulirschStoerIntegrator11.setStepHandler(stepHandler20);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        stepHandler20.handleStep(stepInterpolator22, false);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler20);
        java.lang.String str26 = graggBulirschStoerIntegrator4.getName();
        java.lang.String str27 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setInitialStepSize(100.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str26, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02013");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test02014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02014");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, 10.0d, (double) 100, 18.708286933869708d);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 0, 100.0d, (double) (short) 100, (double) 0);
        org.apache.commons.math.ode.StepHandler stepHandler11 = graggBulirschStoerIntegrator4.getStepHandler();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 3.1622776601683795d + "'", double5 == 3.1622776601683795d);
        org.junit.Assert.assertNotNull(stepHandler11);
    }

    @Test
    public void test02015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02015");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1L, (double) 10L, 97.0d, (double) (byte) 10);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double18 = graggBulirschStoerIntegrator11.getCurrentSignedStepsize();
        double double19 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator11.getStepHandler();
        graggBulirschStoerIntegrator11.setInterpolationControl(true, (int) (short) 1);
        java.lang.String str24 = graggBulirschStoerIntegrator11.getName();
        org.apache.commons.math.ode.StepHandler stepHandler25 = graggBulirschStoerIntegrator11.getStepHandler();
        boolean boolean26 = stepHandler25.requiresDenseOutput();
        boolean boolean27 = stepHandler25.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        stepHandler25.handleStep(stepInterpolator28, true);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        stepHandler25.handleStep(stepInterpolator31, true);
        boolean boolean34 = stepHandler25.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler25);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 18.708286933869708d + "'", double12 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 18.708286933869708d + "'", double18 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str24, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test02016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02016");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(18.566368063325246d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1");
    }

    @Test
    public void test02017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02017");
        java.lang.Object[] objArray9 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("", objArray9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException15);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray22);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray22);
        java.lang.Object[] objArray31 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("", objArray31);
        java.lang.Throwable[] throwableArray33 = mathException32.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException(3.1622776601683795d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Object[]) strArray22, (java.lang.Throwable) mathException32);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException32);
        mathException16.addSuppressed((java.lang.Throwable) derivativeException35);
        java.lang.Object[] objArray37 = mathException16.getArguments();
        java.lang.Throwable throwable38 = null;
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("", objArray37, throwable38);
        java.lang.Object[] objArray46 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("", objArray46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException47);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException47);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException49);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: Gragg-Bulirsch-Stoer", objArray37, (java.lang.Throwable) mathException53);
        java.lang.String str55 = mathException53.toString();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org.apache.commons.math.MathException: " + "'", str55, "org.apache.commons.math.MathException: ");
    }

    @Test
    public void test02018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02018");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        graggBulirschStoerIntegrator6.setStabilityCheck(false, 0, (int) (byte) 10, (-0.0d));
        double double18 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setOrderControl(2, (double) 'a', (double) (short) 0);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test02019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02019");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (double) 100.0f, (double) (byte) 1, (double) 1);
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        java.lang.String str6 = graggBulirschStoerIntegrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str6, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02020");
        java.lang.Throwable throwable4 = null;
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("Gragg-Bulirsch-Stoer", throwable4);
        java.lang.Object[] objArray6 = mathException5.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, (java.lang.Throwable) mathException5);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException7);
        java.lang.String str9 = functionEvaluationException7.toString();
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: Gragg-Bulirsch-Stoer" + "'", str9, "org.apache.commons.math.FunctionEvaluationException: Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02021");
        java.lang.Object[] objArray6 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("", objArray6);
        java.lang.Throwable[] throwableArray8 = mathException7.getSuppressed();
        java.lang.String str9 = mathException7.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException7);
        java.lang.String str11 = integratorException10.toString();
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str11, "org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test02022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02022");
        java.lang.String[] strArray10 = new java.lang.String[] { "Gragg-Bulirsch-Stoer", "hi!", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((-0.0d), "", (java.lang.Object[]) strArray10);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("Evaluation failed for argument = hi!", (java.lang.Object[]) strArray10);
        java.lang.String str15 = mathException14.toString();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.commons.math.MathException: Evaluation failed for argument = hi!" + "'", str15, "org.apache.commons.math.MathException: Evaluation failed for argument = hi!");
    }

    @Test
    public void test02023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02023");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator11.addSwitchingFunction(switchingFunction18, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        double double30 = graggBulirschStoerIntegrator29.getCurrentStepStart();
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = graggBulirschStoerIntegrator37.getStepHandler();
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator11.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 100, (int) ' ', (double) (byte) 0);
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (short) 0, 3, (double) '4');
        double[] doubleArray56 = new double[] { '4', (byte) 10 };
        double[] doubleArray57 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator58 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray56, doubleArray57);
        double double59 = graggBulirschStoerIntegrator58.getCurrentStepStart();
        double[] doubleArray64 = new double[] { '4', (byte) 10 };
        double[] doubleArray65 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator66 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray64, doubleArray65);
        org.apache.commons.math.ode.StepHandler stepHandler67 = graggBulirschStoerIntegrator66.getStepHandler();
        graggBulirschStoerIntegrator58.setStepHandler(stepHandler67);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        stepHandler67.handleStep(stepInterpolator69, false);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler67);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (byte) 10, (double) 100, (double) 0.0f, 100.0d);
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (int) (byte) 0);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) '#');
        graggBulirschStoerIntegrator4.setOrderControl((int) (byte) 0, 10.0d, (double) (short) 100);
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations87 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler89 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray94 = new double[] { 10, 100, (byte) 0 };
        boolean boolean95 = switchingFunctionsHandler89.reset((double) 0, doubleArray94);
        double[] doubleArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator4.integrate(firstOrderDifferentialEquations87, (double) 0, doubleArray94, (double) 'a', doubleArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertNotNull(stepHandler67);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test02024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02024");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        double double3 = functionEvaluationException2.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "");
        functionEvaluationException2.addSuppressed((java.lang.Throwable) functionEvaluationException6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException6);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
    }

    @Test
    public void test02025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02025");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction15, (double) (byte) 100, (double) (short) 100, (int) 'a');
        java.lang.String str20 = graggBulirschStoerIntegrator6.getName();
        double double21 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double double22 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 35.0d + "'", double14 == 35.0d);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str20, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 18.708286933869708d + "'", double22 == 18.708286933869708d);
    }

    @Test
    public void test02026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02026");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) (short) -1, 0.0d, 100);
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        switchingFunctionsHandler0.add(switchingFunction13, 0.0d, (double) (-1), (int) 'a');
        boolean boolean18 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = switchingFunctionsHandler0.evaluateStep(stepInterpolator19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test02027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02027");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator11.addSwitchingFunction(switchingFunction18, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        double double30 = graggBulirschStoerIntegrator29.getCurrentStepStart();
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = graggBulirschStoerIntegrator37.getStepHandler();
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator11.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler38);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction42 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction42, 35.0d, 0.0d, (int) (byte) 100);
        double double47 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 10L, Double.NaN, (double) (byte) 0, (double) (short) 1);
        graggBulirschStoerIntegrator4.setOrderControl(1, (double) 10, (double) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction57, (double) 100.0f, (double) 10L, (-1));
        java.lang.String str62 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (short) 10, (double) 1, (double) (byte) 0, 97.0d);
        graggBulirschStoerIntegrator4.setStepsizeControl(0.0d, (double) 1, (double) '4', (double) 'a');
        graggBulirschStoerIntegrator4.setOrderControl(2, 0.0d, 3.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction77 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction77, (double) (byte) 100, (double) 'a', (int) (short) 1);
        graggBulirschStoerIntegrator4.setOrderControl(10, (double) ' ', (-0.0d));
        graggBulirschStoerIntegrator4.setInterpolationControl(true, (int) '4');
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str62, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02028");
        java.lang.Throwable throwable7 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("", throwable7);
        java.lang.Object[] objArray10 = mathException9.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray10);
        java.lang.Object[] objArray12 = functionEvaluationException11.getArguments();
        double double13 = functionEvaluationException11.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) functionEvaluationException11);
        double double15 = functionEvaluationException14.getArgument();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
    }

    @Test
    public void test02029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02029");
        java.lang.String[] strArray10 = new java.lang.String[] { "Gragg-Bulirsch-Stoer", "hi!", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException(35.0d, (java.lang.Throwable) integratorException15);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test02030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02030");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setOrderControl((-1), (-1.0d), (double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction12, (double) (byte) 10, 2.0d, (int) ' ');
        graggBulirschStoerIntegrator6.setOrderControl(2, (double) ' ', (double) 1.0f);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator25 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray30 = new double[] { '4', (byte) 10 };
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray30, doubleArray31);
        double double33 = graggBulirschStoerIntegrator32.getCurrentStepStart();
        graggBulirschStoerIntegrator32.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator32.addSwitchingFunction(switchingFunction39, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray48 = new double[] { '4', (byte) 10 };
        double[] doubleArray49 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray48, doubleArray49);
        double double51 = graggBulirschStoerIntegrator50.getCurrentStepStart();
        double[] doubleArray56 = new double[] { '4', (byte) 10 };
        double[] doubleArray57 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator58 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray56, doubleArray57);
        org.apache.commons.math.ode.StepHandler stepHandler59 = graggBulirschStoerIntegrator58.getStepHandler();
        graggBulirschStoerIntegrator50.setStepHandler(stepHandler59);
        graggBulirschStoerIntegrator32.setStepHandler(stepHandler59);
        graggBulirschStoerIntegrator25.setStepHandler(stepHandler59);
        org.apache.commons.math.ode.StepHandler stepHandler63 = graggBulirschStoerIntegrator25.getStepHandler();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler63);
        java.lang.Class<?> wildcardClass65 = stepHandler63.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[]");
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertNotNull(stepHandler63);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test02031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02031");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException7);
        java.lang.Object[] objArray9 = integratorException8.getArguments();
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", objArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException17);
        double[] doubleArray24 = new double[] { '4', (byte) 10 };
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator26 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray24, doubleArray25);
        double double27 = graggBulirschStoerIntegrator26.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator26.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        java.lang.String str33 = graggBulirschStoerIntegrator26.getName();
        double[] doubleArray39 = new double[] { '4', (byte) 10 };
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray39, doubleArray40);
        double double42 = graggBulirschStoerIntegrator41.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator41.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double48 = graggBulirschStoerIntegrator41.getCurrentSignedStepsize();
        double double49 = graggBulirschStoerIntegrator41.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator41.getStepHandler();
        double double51 = graggBulirschStoerIntegrator41.getMinStep();
        graggBulirschStoerIntegrator41.setOrderControl((int) (short) 1, (double) 0.0f, (double) 1.0f);
        double[] doubleArray60 = new double[] { '4', (byte) 10 };
        double[] doubleArray61 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator62 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray60, doubleArray61);
        double double63 = graggBulirschStoerIntegrator62.getCurrentStepStart();
        double[] doubleArray68 = new double[] { '4', (byte) 10 };
        double[] doubleArray69 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator70 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray68, doubleArray69);
        org.apache.commons.math.ode.StepHandler stepHandler71 = graggBulirschStoerIntegrator70.getStepHandler();
        graggBulirschStoerIntegrator62.setStepHandler(stepHandler71);
        java.lang.Object[] objArray73 = new java.lang.Object[] { integratorException8, derivativeException19, str33, '#', 0.0f, graggBulirschStoerIntegrator62 };
        org.apache.commons.math.ode.IntegratorException integratorException74 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", objArray73);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) integratorException74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException78);
        integratorException74.addSuppressed((java.lang.Throwable) mathException79);
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Throwable) derivativeException81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException(17.88854381999832d, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) mathException82);
        java.lang.Object[] objArray84 = mathException82.getArguments();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 18.708286933869708d + "'", double27 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str33, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 18.708286933869708d + "'", double42 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 18.708286933869708d + "'", double48 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[]");
        org.junit.Assert.assertNotNull(stepHandler71);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
    }

    @Test
    public void test02032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02032");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        java.lang.Object[] objArray17 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", objArray17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray9, (java.lang.Throwable) integratorException22);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray9);
        java.lang.Throwable throwable26 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray9, throwable26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray9);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!, 1, 10.0, 4, 100]");
    }

    @Test
    public void test02033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02033");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray7 = new double[] { 10, 100, (byte) 0 };
        boolean boolean8 = switchingFunctionsHandler2.reset((double) 0, doubleArray7);
        double[] doubleArray16 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray16, doubleArray22);
        double[] doubleArray30 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray30, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator39 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) (short) 100, doubleArray22, doubleArray30);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) -1, (double) (byte) 10, doubleArray7, doubleArray22);
        double double41 = graggBulirschStoerIntegrator40.getCurrentStepStart();
        double double42 = graggBulirschStoerIntegrator40.getCurrentStepStart();
        graggBulirschStoerIntegrator40.setStepsizeControl(0.0d, 2.0d, (double) (-1), 35.0d);
        double double48 = graggBulirschStoerIntegrator40.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator40.addSwitchingFunction(switchingFunction49, 0.0d, 22.80350850198276d, 100);
        double double54 = graggBulirschStoerIntegrator40.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
    }

    @Test
    public void test02034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02034");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double[] doubleArray10 = new double[] { '4', (byte) 10 };
        double[] doubleArray11 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator12 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray10, doubleArray11);
        double double13 = graggBulirschStoerIntegrator12.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator12.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double19 = graggBulirschStoerIntegrator12.getCurrentSignedStepsize();
        double double20 = graggBulirschStoerIntegrator12.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler21 = graggBulirschStoerIntegrator12.getStepHandler();
        double double22 = graggBulirschStoerIntegrator12.getMinStep();
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        org.apache.commons.math.ode.StepHandler stepHandler30 = graggBulirschStoerIntegrator29.getStepHandler();
        stepHandler30.reset();
        stepHandler30.reset();
        graggBulirschStoerIntegrator12.setStepHandler(stepHandler30);
        boolean boolean34 = stepHandler30.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler30);
        double double36 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (short) 100, (double) (short) 10, (double) ' ', (double) (byte) 0);
        graggBulirschStoerIntegrator4.setInterpolationControl(true, (int) ' ');
        double double45 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator51 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        double double52 = graggBulirschStoerIntegrator51.getCurrentSignedStepsize();
        double[] doubleArray57 = new double[] { '4', (byte) 10 };
        double[] doubleArray58 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray57, doubleArray58);
        double double60 = graggBulirschStoerIntegrator59.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator59.setOrderControl((-1), (-1.0d), (double) 10L);
        double[] doubleArray69 = new double[] { '4', (byte) 10 };
        double[] doubleArray70 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator71 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray69, doubleArray70);
        org.apache.commons.math.ode.StepHandler stepHandler72 = graggBulirschStoerIntegrator71.getStepHandler();
        stepHandler72.reset();
        stepHandler72.reset();
        graggBulirschStoerIntegrator59.setStepHandler(stepHandler72);
        graggBulirschStoerIntegrator51.setStepHandler(stepHandler72);
        double double77 = graggBulirschStoerIntegrator51.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler78 = graggBulirschStoerIntegrator51.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler78);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator80 = null;
        stepHandler78.handleStep(stepInterpolator80, false);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 18.708286933869708d + "'", double19 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 18.708286933869708d + "'", double60 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
        org.junit.Assert.assertNotNull(stepHandler72);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler78);
    }

    @Test
    public void test02035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02035");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getMinStep();
        double double17 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double18 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double double19 = graggBulirschStoerIntegrator6.getMaxStep();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, 10.0d, (double) 100, 18.708286933869708d);
        double[] doubleArray29 = new double[] { '4', (byte) 10 };
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray29, doubleArray30);
        double double32 = graggBulirschStoerIntegrator31.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator31.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double38 = graggBulirschStoerIntegrator31.getCurrentSignedStepsize();
        double double39 = graggBulirschStoerIntegrator31.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler40 = graggBulirschStoerIntegrator31.getStepHandler();
        double double41 = graggBulirschStoerIntegrator31.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler42 = graggBulirschStoerIntegrator31.getStepHandler();
        graggBulirschStoerIntegrator24.setStepHandler(stepHandler42);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler42);
        double double45 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator6.getStepHandler();
        stepHandler46.reset();
        stepHandler46.reset();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 18.708286933869708d + "'", double17 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 35.0d + "'", double19 == 35.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 18.708286933869708d + "'", double32 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 18.708286933869708d + "'", double38 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(stepHandler40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(stepHandler46);
    }

    @Test
    public void test02036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02036");
        java.lang.Object[] objArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.ode.IntegratorException integratorException2 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", objArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02037");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, (java.lang.Throwable) mathException4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException4);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) derivativeException6);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException6);
    }

    @Test
    public void test02038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02038");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        java.lang.String str4 = functionEvaluationException3.getPattern();
        java.lang.String str5 = functionEvaluationException3.getPattern();
        java.lang.Object[] objArray6 = functionEvaluationException3.getArguments();
        double double7 = functionEvaluationException3.getArgument();
        java.lang.Object[] objArray8 = functionEvaluationException3.getArguments();
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: Gragg-Bulirsch-Stoer", objArray8, throwable9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) mathException10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException11);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Evaluation failed for argument = {0}" + "'", str4, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Evaluation failed for argument = {0}" + "'", str5, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[100.0]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 100.0d + "'", double7 == 100.0d);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[100.0]");
    }

    @Test
    public void test02039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02039");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-1.0d), (double) 1L, (double) 1, 0.0d);
    }

    @Test
    public void test02040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02040");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getMinStep();
        double double17 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double18 = graggBulirschStoerIntegrator6.getMinStep();
        graggBulirschStoerIntegrator6.setInitialStepSize((double) 1.0f);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction21, 0.0d, 0.0d, (int) (byte) -1);
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 10.0f, (double) 1L, (double) 'a', 32.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 18.708286933869708d + "'", double17 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
    }

    @Test
    public void test02041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02041");
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!");
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) mathException2);
        org.apache.commons.math.ode.IntegratorException integratorException4 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException2);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.ode.DerivativeException: ");
        java.lang.Object[] objArray11 = functionEvaluationException10.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", objArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray11);
        mathException2.addSuppressed((java.lang.Throwable) mathException13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException2);
        java.lang.String str16 = mathException15.toString();
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!" + "'", str16, "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!");
    }

    @Test
    public void test02042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02042");
        java.lang.Object[] objArray9 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("", objArray9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException13);
        java.lang.Object[] objArray15 = derivativeException13.getArguments();
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("");
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException17);
        derivativeException13.addSuppressed((java.lang.Throwable) integratorException18);
        java.lang.Throwable[] throwableArray20 = integratorException18.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Object[]) throwableArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray20);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test02043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02043");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f);
        java.lang.String str5 = functionEvaluationException4.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        functionEvaluationException4.addSuppressed((java.lang.Throwable) functionEvaluationException7);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Throwable) functionEvaluationException7);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException7);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = hi!", (java.lang.Throwable) integratorException10);
        java.lang.String str12 = mathException11.getPattern();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Evaluation failed for argument = {0}" + "'", str5, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = hi!" + "'", str12, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = hi!");
    }

    @Test
    public void test02044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02044");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray9);
        java.lang.Object[] objArray18 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("", objArray18);
        java.lang.Throwable[] throwableArray20 = mathException19.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException(3.1622776601683795d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Object[]) strArray9, (java.lang.Throwable) mathException19);
        java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("", objArray30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException31);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException31);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Throwable) derivativeException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray9, (java.lang.Throwable) derivativeException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray9);
        java.lang.String str39 = functionEvaluationException38.toString();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: " + "'", str39, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test02045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02045");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        graggBulirschStoerIntegrator6.setStepsizeControl((double) (byte) 10, 0.0d, (double) 0, 0.0d);
        graggBulirschStoerIntegrator6.setStepsizeControl(0.0d, (double) (-1.0f), (double) (-1.0f), (double) ' ');
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        double double24 = graggBulirschStoerIntegrator23.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator23.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double30 = graggBulirschStoerIntegrator23.getCurrentSignedStepsize();
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        double double38 = graggBulirschStoerIntegrator37.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator37.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double44 = graggBulirschStoerIntegrator37.getCurrentSignedStepsize();
        double double45 = graggBulirschStoerIntegrator37.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator37.getStepHandler();
        boolean boolean47 = stepHandler46.requiresDenseOutput();
        boolean boolean48 = stepHandler46.requiresDenseOutput();
        stepHandler46.reset();
        stepHandler46.reset();
        stepHandler46.reset();
        graggBulirschStoerIntegrator23.setStepHandler(stepHandler46);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler46);
        org.apache.commons.math.ode.StepHandler stepHandler54 = graggBulirschStoerIntegrator6.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 18.708286933869708d + "'", double24 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 18.708286933869708d + "'", double30 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 18.708286933869708d + "'", double38 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 18.708286933869708d + "'", double44 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(stepHandler54);
    }

    @Test
    public void test02046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02046");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(1.0d, 9.848857801796104d, (double) 0.0f, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray15 = new double[] { 10, 100, (byte) 0 };
        boolean boolean16 = switchingFunctionsHandler10.reset((double) 0, doubleArray15);
        double[] doubleArray23 = new double[] { 0.0d, 0, (short) 100, 'a', 3.1622776601683795d, (short) 0 };
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1L, (double) 'a', doubleArray15, doubleArray23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray32 = new double[] { 10, 100, (byte) 0 };
        boolean boolean33 = switchingFunctionsHandler27.reset((double) 0, doubleArray32);
        double[] doubleArray40 = new double[] { 0.0d, 0, (short) 100, 'a', 3.1622776601683795d, (short) 0 };
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1L, (double) 'a', doubleArray32, doubleArray40);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) (-1L), doubleArray15, doubleArray40);
        double[] doubleArray47 = new double[] { '4', (byte) 10 };
        double[] doubleArray48 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray47, doubleArray48);
        double double50 = graggBulirschStoerIntegrator49.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator49.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double[] doubleArray60 = new double[] { '4', (byte) 10 };
        double[] doubleArray61 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator62 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray60, doubleArray61);
        double double63 = graggBulirschStoerIntegrator62.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator62.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        org.apache.commons.math.ode.StepHandler stepHandler69 = graggBulirschStoerIntegrator62.getStepHandler();
        graggBulirschStoerIntegrator49.setStepHandler(stepHandler69);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator71 = null;
        stepHandler69.handleStep(stepInterpolator71, true);
        boolean boolean74 = stepHandler69.requiresDenseOutput();
        graggBulirschStoerIntegrator42.setStepHandler(stepHandler69);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler69);
        stepHandler69.reset();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, 97.0, 3.1622776601683795, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 0.0, 100.0, 97.0, 3.1622776601683795, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 18.708286933869708d + "'", double50 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 18.708286933869708d + "'", double63 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test02047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02047");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        java.lang.Object[] objArray10 = functionEvaluationException9.getArguments();
        java.lang.Throwable throwable11 = null;
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray10, throwable11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", objArray10, (java.lang.Throwable) functionEvaluationException15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", objArray10);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", objArray10);
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray28);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray28, (java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.ode.IntegratorException: ");
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray28, (java.lang.Throwable) functionEvaluationException38);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", strArray28);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Object[]) strArray28);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: ", objArray10, (java.lang.Throwable) mathException41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException42);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0]");
        org.junit.Assert.assertNotNull(strArray28);
    }

    @Test
    public void test02048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02048");
        double[] doubleArray5 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray10 = new double[] { '4', (byte) 10 };
        double[] doubleArray11 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator12 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray10, doubleArray11);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator13 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray5, doubleArray11);
        graggBulirschStoerIntegrator13.setStepsizeControl((-1.0d), (double) 0, (double) 10, (double) 1L);
        double double19 = graggBulirschStoerIntegrator13.getCurrentStepStart();
        graggBulirschStoerIntegrator13.setInitialStepSize((double) 100);
        double double22 = graggBulirschStoerIntegrator13.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 100.0d + "'", double22 == 100.0d);
    }

    @Test
    public void test02049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02049");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        java.lang.String str6 = graggBulirschStoerIntegrator4.getName();
        double double7 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction8, (double) (byte) 1, (double) (short) -1, (int) (byte) 1);
        double[] doubleArray17 = new double[] { '4', (byte) 10 };
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray17, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction26, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        double double38 = graggBulirschStoerIntegrator37.getCurrentStepStart();
        graggBulirschStoerIntegrator37.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator37.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        double[] doubleArray52 = new double[] { '4', (byte) 10 };
        double[] doubleArray53 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator54 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray52, doubleArray53);
        double double55 = graggBulirschStoerIntegrator54.getCurrentStepStart();
        graggBulirschStoerIntegrator54.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction61 = null;
        graggBulirschStoerIntegrator54.addSwitchingFunction(switchingFunction61, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray70 = new double[] { '4', (byte) 10 };
        double[] doubleArray71 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator72 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray70, doubleArray71);
        double double73 = graggBulirschStoerIntegrator72.getCurrentStepStart();
        double[] doubleArray78 = new double[] { '4', (byte) 10 };
        double[] doubleArray79 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator80 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray78, doubleArray79);
        org.apache.commons.math.ode.StepHandler stepHandler81 = graggBulirschStoerIntegrator80.getStepHandler();
        graggBulirschStoerIntegrator72.setStepHandler(stepHandler81);
        graggBulirschStoerIntegrator54.setStepHandler(stepHandler81);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator84 = null;
        stepHandler81.handleStep(stepInterpolator84, false);
        graggBulirschStoerIntegrator37.setStepHandler(stepHandler81);
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler81);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator89 = null;
        stepHandler81.handleStep(stepInterpolator89, false);
        boolean boolean92 = stepHandler81.requiresDenseOutput();
        stepHandler81.reset();
        boolean boolean94 = stepHandler81.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler81);
        graggBulirschStoerIntegrator4.setInterpolationControl(true, (int) '4');
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str6, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[]");
        org.junit.Assert.assertNotNull(stepHandler81);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test02050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02050");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray9, (java.lang.Throwable) functionEvaluationException14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Throwable) integratorException16);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException18);
        java.lang.Throwable[] throwableArray20 = mathException19.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray20);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray20);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test02051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02051");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray7 = new double[] { 10, 100, (byte) 0 };
        boolean boolean8 = switchingFunctionsHandler2.reset((double) 0, doubleArray7);
        double[] doubleArray14 = new double[] { '4', (byte) 10 };
        double[] doubleArray15 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator16 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray14, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler2.reset(18.708286933869708d, doubleArray15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler18.add(switchingFunction19, 35.0d, 100.0d, (int) 'a');
        double double24 = switchingFunctionsHandler18.getEventTime();
        double[] doubleArray30 = new double[] { '4', (byte) 10 };
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray30, doubleArray31);
        boolean boolean33 = switchingFunctionsHandler18.reset((double) 3, doubleArray30);
        double[] doubleArray42 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray47 = new double[] { '4', (byte) 10 };
        double[] doubleArray48 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray47, doubleArray48);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray42, doubleArray48);
        double[] doubleArray56 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray61 = new double[] { '4', (byte) 10 };
        double[] doubleArray62 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray61, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray56, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator65 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) (short) 100, doubleArray48, doubleArray56);
        boolean boolean66 = switchingFunctionsHandler18.reset((double) (byte) 10, doubleArray56);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0L, (double) 2, doubleArray15, doubleArray56);
        graggBulirschStoerIntegrator67.setInterpolationControl(true, (int) ' ');
        double double71 = graggBulirschStoerIntegrator67.getMaxStep();
        graggBulirschStoerIntegrator67.setInterpolationControl(false, 0);
        double double75 = graggBulirschStoerIntegrator67.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler76 = graggBulirschStoerIntegrator67.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2.0d + "'", double71 == 2.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2.0d + "'", double75 == 2.0d);
        org.junit.Assert.assertNotNull(stepHandler76);
    }

    @Test
    public void test02052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02052");
        java.lang.String[] strArray15 = new java.lang.String[] { "Gragg-Bulirsch-Stoer", "hi!", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = hi!", (java.lang.Object[]) strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test02053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02053");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator6.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        graggBulirschStoerIntegrator6.setOrderControl((int) (short) -1, (double) 10.0f, (double) 0);
        double[] doubleArray25 = new double[] { '4', (byte) 10 };
        double[] doubleArray26 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator27 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray25, doubleArray26);
        double double28 = graggBulirschStoerIntegrator27.getCurrentStepStart();
        graggBulirschStoerIntegrator27.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        graggBulirschStoerIntegrator27.addSwitchingFunction(switchingFunction34, (double) (short) 10, (double) 2, (int) '#');
        graggBulirschStoerIntegrator27.setStabilityCheck(false, (int) '4', (int) '4', (double) 100.0f);
        double[] doubleArray48 = new double[] { '4', (byte) 10 };
        double[] doubleArray49 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray48, doubleArray49);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator50.getStepHandler();
        stepHandler51.reset();
        stepHandler51.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator54 = null;
        stepHandler51.handleStep(stepInterpolator54, true);
        graggBulirschStoerIntegrator27.setStepHandler(stepHandler51);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler51);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction59, (double) 1.0f, (double) (short) 100, 3);
        java.lang.String str64 = graggBulirschStoerIntegrator6.getName();
        double double65 = graggBulirschStoerIntegrator6.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str64, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 35.0d + "'", double65 == 35.0d);
    }

    @Test
    public void test02054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02054");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, (java.lang.Throwable) mathException4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException4);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) derivativeException6);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException7);
    }

    @Test
    public void test02055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02055");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.ode.IntegratorException integratorException5 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException4);
        java.lang.Object[] objArray13 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", objArray13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException14);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Throwable) derivativeException16);
        integratorException5.addSuppressed((java.lang.Throwable) derivativeException16);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) derivativeException16);
        java.lang.Object[] objArray20 = mathException19.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ", objArray20);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
    }

    @Test
    public void test02056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02056");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setInterpolationControl(true, 0);
        double[] doubleArray22 = new double[] { '4', (byte) 10 };
        double[] doubleArray23 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray22, doubleArray23);
        double double25 = graggBulirschStoerIntegrator24.getCurrentStepStart();
        graggBulirschStoerIntegrator24.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        graggBulirschStoerIntegrator24.addSwitchingFunction(switchingFunction31, (double) (short) 10, (double) 2, (int) '#');
        graggBulirschStoerIntegrator24.setStabilityCheck(false, (int) '4', (int) '4', (double) 100.0f);
        double[] doubleArray45 = new double[] { '4', (byte) 10 };
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray45, doubleArray46);
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator47.getStepHandler();
        stepHandler48.reset();
        stepHandler48.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        stepHandler48.handleStep(stepInterpolator51, true);
        graggBulirschStoerIntegrator24.setStepHandler(stepHandler48);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler48);
        double double56 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler57 = null;
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator6.setStepHandler(stepHandler57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
    }

    @Test
    public void test02057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02057");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setInterpolationControl(false, (int) (byte) 1);
        java.lang.String str18 = graggBulirschStoerIntegrator6.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction19, (double) 100, (double) (short) 10, (int) (byte) 1);
        graggBulirschStoerIntegrator6.setStabilityCheck(false, (int) (short) -1, (int) (short) 0, (double) (short) 100);
        double double29 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str18, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
    }

    @Test
    public void test02058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02058");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator11.addSwitchingFunction(switchingFunction18, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        double double30 = graggBulirschStoerIntegrator29.getCurrentStepStart();
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = graggBulirschStoerIntegrator37.getStepHandler();
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator11.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 100, (int) ' ', (double) (byte) 0);
        double[] doubleArray51 = new double[] { '4', (byte) 10 };
        double[] doubleArray52 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator53 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray51, doubleArray52);
        double double54 = graggBulirschStoerIntegrator53.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator53.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double60 = graggBulirschStoerIntegrator53.getCurrentSignedStepsize();
        double double61 = graggBulirschStoerIntegrator53.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler62 = graggBulirschStoerIntegrator53.getStepHandler();
        boolean boolean63 = stepHandler62.requiresDenseOutput();
        boolean boolean64 = stepHandler62.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler62);
        double double66 = graggBulirschStoerIntegrator4.getMinStep();
        double[] doubleArray71 = new double[] { '4', (byte) 10 };
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray71, doubleArray72);
        double double74 = graggBulirschStoerIntegrator73.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator73.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double80 = graggBulirschStoerIntegrator73.getCurrentSignedStepsize();
        double double81 = graggBulirschStoerIntegrator73.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler82 = graggBulirschStoerIntegrator73.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler82);
        graggBulirschStoerIntegrator4.setInitialStepSize(18.708286933869708d);
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (byte) -1, 0, (double) 0);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 0L);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 18.708286933869708d + "'", double54 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 18.708286933869708d + "'", double60 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 18.708286933869708d + "'", double74 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 18.708286933869708d + "'", double80 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(stepHandler82);
    }

    @Test
    public void test02059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02059");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double[] doubleArray10 = new double[] { '4', (byte) 10 };
        double[] doubleArray11 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator12 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray10, doubleArray11);
        double double13 = graggBulirschStoerIntegrator12.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator12.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double19 = graggBulirschStoerIntegrator12.getCurrentSignedStepsize();
        double double20 = graggBulirschStoerIntegrator12.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler21 = graggBulirschStoerIntegrator12.getStepHandler();
        double double22 = graggBulirschStoerIntegrator12.getMinStep();
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        org.apache.commons.math.ode.StepHandler stepHandler30 = graggBulirschStoerIntegrator29.getStepHandler();
        stepHandler30.reset();
        stepHandler30.reset();
        graggBulirschStoerIntegrator12.setStepHandler(stepHandler30);
        boolean boolean34 = stepHandler30.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler30);
        double double36 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (short) 100, (double) (short) 10, (double) ' ', (double) (byte) 0);
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (byte) -1, (int) (short) 1, 0.0d);
        java.lang.String str47 = graggBulirschStoerIntegrator4.getName();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 18.708286933869708d + "'", double19 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str47, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02060");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(100.0d, (double) 10L, 0.0d, (double) (-1));
    }

    @Test
    public void test02061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02061");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        java.lang.String str15 = graggBulirschStoerIntegrator6.getName();
        graggBulirschStoerIntegrator6.setOrderControl(10, (double) 100, (double) 3);
        graggBulirschStoerIntegrator6.setOrderControl((int) ' ', 0.0d, (-1.0d));
        graggBulirschStoerIntegrator6.setInitialStepSize(17.88854381999832d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str15, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02062");
        double[] doubleArray7 = new double[] { (short) 100, 3, 'a' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        switchingFunctionsHandler8.add(switchingFunction9, 35.0d, 100.0d, (int) 'a');
        double double14 = switchingFunctionsHandler8.getEventTime();
        double[] doubleArray20 = new double[] { '4', (byte) 10 };
        double[] doubleArray21 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator22 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray20, doubleArray21);
        boolean boolean23 = switchingFunctionsHandler8.reset((double) 3, doubleArray20);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', 10.0d, doubleArray7, doubleArray20);
        double[] doubleArray30 = new double[] { (short) 100, 3, 'a' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        switchingFunctionsHandler31.add(switchingFunction32, 35.0d, 100.0d, (int) 'a');
        double double37 = switchingFunctionsHandler31.getEventTime();
        double[] doubleArray43 = new double[] { '4', (byte) 10 };
        double[] doubleArray44 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray43, doubleArray44);
        boolean boolean46 = switchingFunctionsHandler31.reset((double) 3, doubleArray43);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', 10.0d, doubleArray30, doubleArray43);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0L, 1.0d, doubleArray20, doubleArray30);
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator48.getStepHandler();
        double double50 = graggBulirschStoerIntegrator48.getCurrentStepStart();
        double[] doubleArray55 = new double[] { '4', (byte) 10 };
        double[] doubleArray56 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray55, doubleArray56);
        org.apache.commons.math.ode.StepHandler stepHandler58 = graggBulirschStoerIntegrator57.getStepHandler();
        double double59 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler60 = graggBulirschStoerIntegrator57.getStepHandler();
        graggBulirschStoerIntegrator48.setStepHandler(stepHandler60);
        double double62 = graggBulirschStoerIntegrator48.getMinStep();
        double double63 = graggBulirschStoerIntegrator48.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 3.0, 97.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 3.0, 97.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[]");
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 18.708286933869708d + "'", double59 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
    }

    @Test
    public void test02063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02063");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray10, (java.lang.Throwable) functionEvaluationException15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.ode.IntegratorException: ");
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray10, (java.lang.Throwable) functionEvaluationException20);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", strArray10);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray10);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = -1", (java.lang.Object[]) strArray10);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test02064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02064");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        java.lang.String str14 = graggBulirschStoerIntegrator6.getName();
        graggBulirschStoerIntegrator6.setStabilityCheck(false, (int) (byte) 100, 0, Double.NaN);
        double double20 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setInterpolationControl(false, 0);
        org.apache.commons.math.ode.StepHandler stepHandler24 = graggBulirschStoerIntegrator6.getStepHandler();
        stepHandler24.reset();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str14, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 18.708286933869708d + "'", double20 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler24);
    }

    @Test
    public void test02065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02065");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException1 = new org.apache.commons.math.FunctionEvaluationException(18.566368063325246d);
    }

    @Test
    public void test02066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02066");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction6, (double) (byte) 0, (double) 0, (int) '#');
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (short) -1, (double) 100, (double) 100, (double) (byte) 100);
        double double16 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        double double24 = graggBulirschStoerIntegrator23.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator23.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double30 = graggBulirschStoerIntegrator23.getCurrentSignedStepsize();
        double double31 = graggBulirschStoerIntegrator23.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler32 = graggBulirschStoerIntegrator23.getStepHandler();
        double double33 = graggBulirschStoerIntegrator23.getMinStep();
        double[] doubleArray38 = new double[] { '4', (byte) 10 };
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray38, doubleArray39);
        org.apache.commons.math.ode.StepHandler stepHandler41 = graggBulirschStoerIntegrator40.getStepHandler();
        stepHandler41.reset();
        stepHandler41.reset();
        graggBulirschStoerIntegrator23.setStepHandler(stepHandler41);
        double double45 = graggBulirschStoerIntegrator23.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        graggBulirschStoerIntegrator23.addSwitchingFunction(switchingFunction46, (double) (-1), (double) (short) 10, (int) (short) 10);
        double double51 = graggBulirschStoerIntegrator23.getMaxStep();
        graggBulirschStoerIntegrator23.setStepsizeControl(31.622776601683793d, 0.0d, 18.708286933869708d, (double) (short) 1);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        double double62 = graggBulirschStoerIntegrator61.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        graggBulirschStoerIntegrator61.addSwitchingFunction(switchingFunction63, (double) (byte) 0, (double) 0, (int) '#');
        graggBulirschStoerIntegrator61.setOrderControl(2, (double) (short) 10, (double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler72 = graggBulirschStoerIntegrator61.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator73 = null;
        stepHandler72.handleStep(stepInterpolator73, true);
        graggBulirschStoerIntegrator23.setStepHandler(stepHandler72);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator77 = null;
        stepHandler72.handleStep(stepInterpolator77, true);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler72);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 18.708286933869708d + "'", double24 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 18.708286933869708d + "'", double30 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(stepHandler32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 35.0d + "'", double51 == 35.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler72);
    }

    @Test
    public void test02067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02067");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException5);
        java.lang.Object[] objArray7 = integratorException6.getArguments();
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", objArray14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException15);
        double[] doubleArray22 = new double[] { '4', (byte) 10 };
        double[] doubleArray23 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray22, doubleArray23);
        double double25 = graggBulirschStoerIntegrator24.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator24.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        java.lang.String str31 = graggBulirschStoerIntegrator24.getName();
        double[] doubleArray37 = new double[] { '4', (byte) 10 };
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator39 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray37, doubleArray38);
        double double40 = graggBulirschStoerIntegrator39.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator39.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double46 = graggBulirschStoerIntegrator39.getCurrentSignedStepsize();
        double double47 = graggBulirschStoerIntegrator39.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator39.getStepHandler();
        double double49 = graggBulirschStoerIntegrator39.getMinStep();
        graggBulirschStoerIntegrator39.setOrderControl((int) (short) 1, (double) 0.0f, (double) 1.0f);
        double[] doubleArray58 = new double[] { '4', (byte) 10 };
        double[] doubleArray59 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray58, doubleArray59);
        double double61 = graggBulirschStoerIntegrator60.getCurrentStepStart();
        double[] doubleArray66 = new double[] { '4', (byte) 10 };
        double[] doubleArray67 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray66, doubleArray67);
        org.apache.commons.math.ode.StepHandler stepHandler69 = graggBulirschStoerIntegrator68.getStepHandler();
        graggBulirschStoerIntegrator60.setStepHandler(stepHandler69);
        java.lang.Object[] objArray71 = new java.lang.Object[] { integratorException6, derivativeException17, str31, '#', 0.0f, graggBulirschStoerIntegrator60 };
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) integratorException72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException76);
        integratorException72.addSuppressed((java.lang.Throwable) mathException77);
        org.apache.commons.math.ode.DerivativeException derivativeException79 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException77);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Throwable) derivativeException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException80);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 18.708286933869708d + "'", double25 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str31, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 18.708286933869708d + "'", double40 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 18.708286933869708d + "'", double46 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]");
        org.junit.Assert.assertNotNull(stepHandler69);
        org.junit.Assert.assertNotNull(objArray71);
    }

    @Test
    public void test02068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02068");
        java.lang.String[] strArray8 = new java.lang.String[] { "Gragg-Bulirsch-Stoer", "hi!", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: ", strArray8);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray8);
        java.lang.Throwable[] throwableArray12 = mathException11.getSuppressed();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test02069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02069");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 100, (double) (short) 10, 52.0d, (double) 100.0f);
        java.lang.String str5 = graggBulirschStoerIntegrator4.getName();
        double double6 = graggBulirschStoerIntegrator4.getMaxStep();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str5, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
    }

    @Test
    public void test02070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02070");
        java.lang.Object[] objArray12 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray12);
        java.lang.Object[] objArray15 = integratorException14.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "Gragg-Bulirsch-Stoer", objArray15);
        java.lang.Throwable throwable22 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", throwable22);
        java.lang.Object[] objArray25 = mathException24.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.FunctionEvaluationException: ", objArray25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: ", objArray15, (java.lang.Throwable) functionEvaluationException26);
        java.lang.Object[] objArray33 = new java.lang.Object[] { '4', 2, (byte) 10 };
        java.lang.Object[] objArray41 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("", objArray41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray41);
        java.lang.Object[] objArray44 = integratorException43.getArguments();
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("hi!", objArray33, (java.lang.Throwable) integratorException43);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) integratorException43);
        functionEvaluationException26.addSuppressed((java.lang.Throwable) integratorException43);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 10", (java.lang.Throwable) functionEvaluationException26);
        java.lang.Object[] objArray49 = functionEvaluationException26.getArguments();
        java.lang.Object[] objArray58 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("", objArray58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException59);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException59);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException61);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) derivativeException61);
        java.lang.Throwable[] throwableArray64 = derivativeException61.getSuppressed();
        java.lang.Object[] objArray73 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("", objArray73);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException74);
        org.apache.commons.math.ode.DerivativeException derivativeException76 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException74);
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException76);
        org.apache.commons.math.ode.IntegratorException integratorException78 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException77);
        java.lang.Object[] objArray79 = derivativeException77.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException82);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException84 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray79, (java.lang.Throwable) mathException83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray64, (java.lang.Throwable) functionEvaluationException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", objArray49, (java.lang.Throwable) functionEvaluationException84);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException86);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[4, 2, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[4, 2, 10]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
    }

    @Test
    public void test02071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02071");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        java.lang.Object[] objArray9 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", throwable13);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", objArray9, (java.lang.Throwable) mathException15);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException16);
        java.lang.Throwable[] throwableArray18 = integratorException17.getSuppressed();
        java.lang.Object[] objArray26 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", objArray26);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray26);
        java.lang.Object[] objArray29 = integratorException28.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) integratorException28);
        functionEvaluationException3.addSuppressed((java.lang.Throwable) integratorException28);
        java.lang.Object[] objArray32 = integratorException28.getArguments();
        java.lang.Object[] objArray33 = integratorException28.getArguments();
        java.lang.Throwable[] throwableArray34 = integratorException28.getSuppressed();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray38);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray34, (java.lang.Throwable) integratorException40);
        java.lang.Object[] objArray42 = mathException41.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException43);
        java.lang.Object[] objArray45 = integratorException43.getArguments();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, 10]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
    }

    @Test
    public void test02072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02072");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) (short) -1, 0.0d, 100);
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        double double13 = switchingFunctionsHandler0.getEventTime();
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray23 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray28 = new double[] { '4', (byte) 10 };
        double[] doubleArray29 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator30 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray28, doubleArray29);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray23, doubleArray29);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        switchingFunctionsHandler32.add(switchingFunction33, 35.0d, 100.0d, (int) 'a');
        double double38 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray44 = new double[] { '4', (byte) 10 };
        double[] doubleArray45 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray44, doubleArray45);
        boolean boolean47 = switchingFunctionsHandler32.reset((double) 3, doubleArray44);
        double[] doubleArray56 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray61 = new double[] { '4', (byte) 10 };
        double[] doubleArray62 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray61, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray56, doubleArray62);
        double[] doubleArray70 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray75 = new double[] { '4', (byte) 10 };
        double[] doubleArray76 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray75, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray70, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) (short) 100, doubleArray62, doubleArray70);
        boolean boolean80 = switchingFunctionsHandler32.reset((double) (byte) 10, doubleArray70);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator81 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (-1.0d), doubleArray29, doubleArray70);
        boolean boolean82 = switchingFunctionsHandler0.reset(17.88854381999832d, doubleArray29);
        double double83 = switchingFunctionsHandler0.getEventTime();
        boolean boolean84 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test02073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02073");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray7 = new double[] { 10, 100, (byte) 0 };
        boolean boolean8 = switchingFunctionsHandler2.reset((double) 0, doubleArray7);
        double[] doubleArray15 = new double[] { 0.0d, 0, (short) 100, 'a', 3.1622776601683795d, (short) 0 };
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator16 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1L, (double) 'a', doubleArray7, doubleArray15);
        double double17 = graggBulirschStoerIntegrator16.getMaxStep();
        double[] doubleArray22 = new double[] { '4', (byte) 10 };
        double[] doubleArray23 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray22, doubleArray23);
        double double25 = graggBulirschStoerIntegrator24.getCurrentStepStart();
        graggBulirschStoerIntegrator24.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator24.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        graggBulirschStoerIntegrator24.setOrderControl((int) (short) -1, (double) 10.0f, (double) 0);
        double[] doubleArray43 = new double[] { '4', (byte) 10 };
        double[] doubleArray44 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray43, doubleArray44);
        double double46 = graggBulirschStoerIntegrator45.getCurrentStepStart();
        graggBulirschStoerIntegrator45.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        graggBulirschStoerIntegrator45.addSwitchingFunction(switchingFunction52, (double) (short) 10, (double) 2, (int) '#');
        graggBulirschStoerIntegrator45.setStabilityCheck(false, (int) '4', (int) '4', (double) 100.0f);
        double[] doubleArray66 = new double[] { '4', (byte) 10 };
        double[] doubleArray67 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray66, doubleArray67);
        org.apache.commons.math.ode.StepHandler stepHandler69 = graggBulirschStoerIntegrator68.getStepHandler();
        stepHandler69.reset();
        stepHandler69.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator72 = null;
        stepHandler69.handleStep(stepInterpolator72, true);
        graggBulirschStoerIntegrator45.setStepHandler(stepHandler69);
        graggBulirschStoerIntegrator24.setStepHandler(stepHandler69);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator77 = null;
        stepHandler69.handleStep(stepInterpolator77, false);
        graggBulirschStoerIntegrator16.setStepHandler(stepHandler69);
        stepHandler69.reset();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, 97.0, 3.1622776601683795, 0.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 97.0d + "'", double17 == 97.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]");
        org.junit.Assert.assertNotNull(stepHandler69);
    }

    @Test
    public void test02074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02074");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "Gragg-Bulirsch-Stoer");
        double double3 = functionEvaluationException2.getArgument();
        double double4 = functionEvaluationException2.getArgument();
        double double5 = functionEvaluationException2.getArgument();
        java.lang.String str6 = functionEvaluationException2.toString();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-1.0d) + "'", double3 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-1.0d) + "'", double4 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-1.0d) + "'", double5 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: Gragg-Bulirsch-Stoer" + "'", str6, "org.apache.commons.math.FunctionEvaluationException: Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02075");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0");
    }

    @Test
    public void test02076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02076");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(32.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test02077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02077");
        java.lang.Object[] objArray9 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("", objArray9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException13);
        java.lang.Object[] objArray15 = derivativeException13.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 10, (java.lang.Throwable) derivativeException13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException16);
        java.lang.Object[] objArray25 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", objArray25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException26);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) derivativeException28);
        java.lang.Throwable[] throwableArray30 = derivativeException28.getSuppressed();
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException28);
        functionEvaluationException16.addSuppressed((java.lang.Throwable) mathException31);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 9.849", (java.lang.Throwable) integratorException33);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray30);
    }

    @Test
    public void test02078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02078");
        java.lang.String[] strArray12 = new java.lang.String[] { "Gragg-Bulirsch-Stoer", "hi!", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray12);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) derivativeException15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException(17.88854381999832d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException17);
        double double19 = functionEvaluationException17.getArgument();
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Throwable) functionEvaluationException17);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 17.88854381999832d + "'", double19 == 17.88854381999832d);
    }

    @Test
    public void test02079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02079");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 0);
        double double8 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        java.lang.String str9 = graggBulirschStoerIntegrator4.getName();
        double double10 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        double double11 = graggBulirschStoerIntegrator4.getMinStep();
        double double12 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler13 = graggBulirschStoerIntegrator4.getStepHandler();
        stepHandler13.reset();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str9, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler13);
    }

    @Test
    public void test02080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02080");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction13, (double) (short) 10, (double) 2, (int) '#');
        org.apache.commons.math.ode.StepHandler stepHandler18 = graggBulirschStoerIntegrator6.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction19, (double) 2, (double) 10.0f, (int) (byte) 0);
        double double24 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations25 = null;
        double[] doubleArray27 = null;
        double[] doubleArray36 = new double[] { (short) 100, 3, 'a' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        switchingFunctionsHandler37.add(switchingFunction38, 35.0d, 100.0d, (int) 'a');
        double double43 = switchingFunctionsHandler37.getEventTime();
        double[] doubleArray49 = new double[] { '4', (byte) 10 };
        double[] doubleArray50 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator51 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray49, doubleArray50);
        boolean boolean52 = switchingFunctionsHandler37.reset((double) 3, doubleArray49);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator53 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', 10.0d, doubleArray36, doubleArray49);
        double[] doubleArray56 = new double[] {};
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        switchingFunctionsHandler57.add(switchingFunction58, 35.0d, 100.0d, (int) 'a');
        double double63 = switchingFunctionsHandler57.getEventTime();
        double[] doubleArray69 = new double[] { '4', (byte) 10 };
        double[] doubleArray70 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator71 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray69, doubleArray70);
        boolean boolean72 = switchingFunctionsHandler57.reset((double) 3, doubleArray69);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (double) 10, doubleArray56, doubleArray69);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator74 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, (double) (-1), doubleArray36, doubleArray56);
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator6.integrate(firstOrderDifferentialEquations25, 0.0d, doubleArray27, (-1.0d), doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 3.0, 97.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test02081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02081");
        java.lang.String[] strArray13 = new java.lang.String[] { "Gragg-Bulirsch-Stoer", "hi!", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) ' ');
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray13, (java.lang.Throwable) functionEvaluationException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray13);
        java.lang.String str23 = functionEvaluationException22.toString();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: Gragg-Bulirsch-Stoer" + "'", str23, "org.apache.commons.math.FunctionEvaluationException: Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02082");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction15, (double) (byte) 100, (double) (short) 100, (int) 'a');
        double double20 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double double21 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double22 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double double23 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double24 = graggBulirschStoerIntegrator6.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 35.0d + "'", double14 == 35.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 18.708286933869708d + "'", double21 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 18.708286933869708d + "'", double23 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
    }

    @Test
    public void test02083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02083");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setInitialStepSize(35.0d);
        double double10 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setInitialStepSize((-1.0d));
        graggBulirschStoerIntegrator6.setInitialStepSize(100.0d);
        graggBulirschStoerIntegrator6.setStabilityCheck(true, 0, (int) (byte) 10, (double) 10L);
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 3, (double) 100.0f, 4.229485053762256d, (double) (short) 10);
        double double25 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStabilityCheck(false, 10, (int) (byte) 10, (double) (short) 10);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 18.708286933869708d + "'", double10 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 18.708286933869708d + "'", double25 == 18.708286933869708d);
    }

    @Test
    public void test02084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02084");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction6, (double) (byte) 0, (double) 0, (int) '#');
        graggBulirschStoerIntegrator4.setOrderControl(2, (double) (short) 10, (double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator4.getStepHandler();
        double double16 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 0, (int) ' ', (double) (short) 100);
        java.lang.String str22 = graggBulirschStoerIntegrator4.getName();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str22, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02085");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException1 = new org.apache.commons.math.FunctionEvaluationException((double) 10);
        org.apache.commons.math.ode.IntegratorException integratorException2 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException1);
    }

    @Test
    public void test02086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02086");
        java.lang.Object[] objArray11 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("", objArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) derivativeException14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException16);
        java.lang.Object[] objArray18 = functionEvaluationException16.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException16);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("Evaluation failed for argument = -1", (java.lang.Throwable) functionEvaluationException16);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) functionEvaluationException16);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException21);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
    }

    @Test
    public void test02087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02087");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        org.apache.commons.math.ode.StepHandler stepHandler7 = graggBulirschStoerIntegrator6.getStepHandler();
        java.lang.String str8 = graggBulirschStoerIntegrator6.getName();
        double double9 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction10, 0.0d, (double) 10, (int) (byte) 10);
        java.lang.String str15 = graggBulirschStoerIntegrator6.getName();
        double[] doubleArray20 = new double[] { '4', (byte) 10 };
        double[] doubleArray21 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator22 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray20, doubleArray21);
        double double23 = graggBulirschStoerIntegrator22.getCurrentStepStart();
        graggBulirschStoerIntegrator22.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator22.setInterpolationControl(true, 2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        graggBulirschStoerIntegrator22.addSwitchingFunction(switchingFunction32, (double) (short) 1, 18.708286933869708d, (int) (byte) 100);
        org.apache.commons.math.ode.StepHandler stepHandler37 = graggBulirschStoerIntegrator22.getStepHandler();
        double[] doubleArray42 = new double[] { '4', (byte) 10 };
        double[] doubleArray43 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator44 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray42, doubleArray43);
        double double45 = graggBulirschStoerIntegrator44.getCurrentStepStart();
        graggBulirschStoerIntegrator44.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator44.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        double double55 = graggBulirschStoerIntegrator44.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator44.setStabilityCheck(true, (int) 'a', (int) (byte) 100, 35.0d);
        double[] doubleArray65 = new double[] { '4', (byte) 10 };
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray65, doubleArray66);
        double double68 = graggBulirschStoerIntegrator67.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator67.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double74 = graggBulirschStoerIntegrator67.getCurrentSignedStepsize();
        double double75 = graggBulirschStoerIntegrator67.getCurrentStepStart();
        graggBulirschStoerIntegrator67.setInterpolationControl(false, (int) (byte) 1);
        java.lang.String str79 = graggBulirschStoerIntegrator67.getName();
        org.apache.commons.math.ode.StepHandler stepHandler80 = graggBulirschStoerIntegrator67.getStepHandler();
        graggBulirschStoerIntegrator44.setStepHandler(stepHandler80);
        graggBulirschStoerIntegrator22.setStepHandler(stepHandler80);
        boolean boolean83 = stepHandler80.requiresDenseOutput();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler80);
        boolean boolean85 = stepHandler80.requiresDenseOutput();
        boolean boolean86 = stepHandler80.requiresDenseOutput();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str8, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 18.708286933869708d + "'", double9 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str15, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(stepHandler37);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 18.708286933869708d + "'", double55 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 18.708286933869708d + "'", double68 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 18.708286933869708d + "'", double74 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str79, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test02088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02088");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "org.apache.commons.math.MathException: Evaluation failed for argument = 3");
    }

    @Test
    public void test02089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02089");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator6.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        double double17 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler18 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setStabilityCheck(false, 3, 100, Double.NaN);
        double double24 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double double25 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStabilityCheck(false, (int) (byte) 10, 0, Double.NaN);
        double double31 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 18.708286933869708d + "'", double17 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 18.708286933869708d + "'", double25 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 18.708286933869708d + "'", double31 == 18.708286933869708d);
    }

    @Test
    public void test02090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02090");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3");
    }

    @Test
    public void test02091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02091");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler0.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray15 = new double[] { 10, 100, (byte) 0 };
        boolean boolean16 = switchingFunctionsHandler10.reset((double) 0, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler0.reset((double) 100.0f, doubleArray15);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler0.add(switchingFunction18, (double) 1.0f, (double) 10, (int) (short) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler0.add(switchingFunction23, 18.708286933869708d, (double) (-1.0f), 10);
        boolean boolean28 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler0.add(switchingFunction29, 97.0d, 9.848857801796104d, (-1));
        boolean boolean34 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test02092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02092");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        switchingFunctionsHandler4.add(switchingFunction5, 35.0d, 100.0d, (int) 'a');
        double double10 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray16 = new double[] { '4', (byte) 10 };
        double[] doubleArray17 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator18 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray16, doubleArray17);
        boolean boolean19 = switchingFunctionsHandler4.reset((double) 3, doubleArray16);
        switchingFunctionsHandler0.stepAccepted((double) 'a', doubleArray16);
        double double21 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
    }

    @Test
    public void test02093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02093");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "Evaluation failed for argument = {0}");
        double double5 = functionEvaluationException4.getArgument();
        java.lang.Throwable[] throwableArray6 = functionEvaluationException4.getSuppressed();
        java.lang.String[] strArray14 = new java.lang.String[] { "Gragg-Bulirsch-Stoer", "hi!", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, "org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) derivativeException17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException17);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException17);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 2.0d + "'", double5 == 2.0d);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test02094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02094");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setOrderControl((-1), (-1.0d), (double) 10L);
        double[] doubleArray16 = new double[] { '4', (byte) 10 };
        double[] doubleArray17 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator18 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray16, doubleArray17);
        org.apache.commons.math.ode.StepHandler stepHandler19 = graggBulirschStoerIntegrator18.getStepHandler();
        stepHandler19.reset();
        stepHandler19.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler19);
        org.apache.commons.math.ode.StepHandler stepHandler23 = graggBulirschStoerIntegrator6.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction24, (double) 0, (double) (short) -1, (int) (byte) 10);
        double[] doubleArray33 = new double[] { '4', (byte) 10 };
        double[] doubleArray34 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator35 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray33, doubleArray34);
        double double36 = graggBulirschStoerIntegrator35.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator35.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double42 = graggBulirschStoerIntegrator35.getCurrentSignedStepsize();
        double double43 = graggBulirschStoerIntegrator35.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler44 = graggBulirschStoerIntegrator35.getStepHandler();
        double double45 = graggBulirschStoerIntegrator35.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator35.getStepHandler();
        stepHandler46.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler46);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction49, 52.0d, 100.0d, 100);
        graggBulirschStoerIntegrator6.setStabilityCheck(true, (int) (short) 10, (int) (short) 0, 1.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]");
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertNotNull(stepHandler23);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 18.708286933869708d + "'", double36 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 18.708286933869708d + "'", double42 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler46);
    }

    @Test
    public void test02095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02095");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) 0, (double) (short) 0, (double) (short) -1);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentSignedStepsize();
        java.lang.String str13 = graggBulirschStoerIntegrator11.getName();
        graggBulirschStoerIntegrator11.setInitialStepSize((double) (short) 10);
        java.lang.String str16 = graggBulirschStoerIntegrator11.getName();
        java.lang.String str17 = graggBulirschStoerIntegrator11.getName();
        org.apache.commons.math.ode.StepHandler stepHandler18 = graggBulirschStoerIntegrator11.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction20, (double) 100L, (double) (short) 100, (int) (byte) 0);
        double double25 = graggBulirschStoerIntegrator4.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 18.708286933869708d + "'", double12 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str13, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str16, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str17, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
    }

    @Test
    public void test02096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02096");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler2.add(switchingFunction3, 35.0d, 100.0d, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray14 = new double[] { 10, 100, (byte) 0 };
        boolean boolean15 = switchingFunctionsHandler9.reset((double) 0, doubleArray14);
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        boolean boolean24 = switchingFunctionsHandler9.reset(18.708286933869708d, doubleArray22);
        boolean boolean25 = switchingFunctionsHandler2.reset((double) (byte) 0, doubleArray22);
        boolean boolean26 = switchingFunctionsHandler0.reset((double) 0, doubleArray22);
        double double27 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        switchingFunctionsHandler0.add(switchingFunction28, (double) 3, (double) ' ', (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        switchingFunctionsHandler0.add(switchingFunction33, (double) (short) 1, (double) 3, (int) (short) 0);
        boolean boolean38 = switchingFunctionsHandler0.stop();
        double[] doubleArray47 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray52 = new double[] { '4', (byte) 10 };
        double[] doubleArray53 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator54 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray52, doubleArray53);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray47, doubleArray53);
        double[] doubleArray61 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray66 = new double[] { '4', (byte) 10 };
        double[] doubleArray67 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray66, doubleArray67);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray61, doubleArray67);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator70 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) (short) 100, doubleArray53, doubleArray61);
        boolean boolean71 = switchingFunctionsHandler0.reset((double) 0, doubleArray61);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction72 = null;
        switchingFunctionsHandler0.add(switchingFunction72, (double) 1, (double) 10.0f, (int) 'a');
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test02097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02097");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double[] doubleArray12 = new double[] { '4', (byte) 10 };
        double[] doubleArray13 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray12, doubleArray13);
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator14.getStepHandler();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler15);
        graggBulirschStoerIntegrator6.setOrderControl((int) (short) -1, (double) (-1L), (double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler21 = graggBulirschStoerIntegrator6.getStepHandler();
        java.lang.String str22 = graggBulirschStoerIntegrator6.getName();
        graggBulirschStoerIntegrator6.setOrderControl(2, 4.229485053762256d, (double) 1L);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str22, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02098");
        java.lang.String[] strArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.ode.DerivativeException derivativeException2 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02099");
        java.lang.Object[] objArray2 = new java.lang.Object[] {};
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.FunctionEvaluationException: ", objArray2);
        java.lang.Object[] objArray13 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", objArray13);
        java.lang.Object[] objArray15 = mathException14.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", objArray15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException16);
        functionEvaluationException3.addSuppressed((java.lang.Throwable) mathException17);
        double double19 = functionEvaluationException3.getArgument();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test02100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02100");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray7);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", objArray16);
        java.lang.Throwable[] throwableArray18 = mathException17.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException(3.1622776601683795d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Object[]) strArray7, (java.lang.Throwable) mathException17);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException21);
        java.lang.Object[] objArray23 = derivativeException21.getArguments();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!]");
    }

    @Test
    public void test02101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02101");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = {0}");
    }

    @Test
    public void test02102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02102");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction15, (double) (byte) 100, (double) (short) 100, (int) 'a');
        double double20 = graggBulirschStoerIntegrator6.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler21 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setInterpolationControl(true, (int) (short) -1);
        graggBulirschStoerIntegrator6.setInterpolationControl(true, (int) (byte) 0);
        double[] doubleArray32 = new double[] { '4', (byte) 10 };
        double[] doubleArray33 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator34 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray32, doubleArray33);
        double double35 = graggBulirschStoerIntegrator34.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator34.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double[] doubleArray45 = new double[] { '4', (byte) 10 };
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray45, doubleArray46);
        double double48 = graggBulirschStoerIntegrator47.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator47.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        org.apache.commons.math.ode.StepHandler stepHandler54 = graggBulirschStoerIntegrator47.getStepHandler();
        graggBulirschStoerIntegrator34.setStepHandler(stepHandler54);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        stepHandler54.handleStep(stepInterpolator56, true);
        stepHandler54.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler54);
        graggBulirschStoerIntegrator6.setInitialStepSize((double) '4');
        double double63 = graggBulirschStoerIntegrator6.getMaxStep();
        graggBulirschStoerIntegrator6.setInterpolationControl(true, (int) (byte) 0);
        double double67 = graggBulirschStoerIntegrator6.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 35.0d + "'", double14 == 35.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 35.0d + "'", double20 == 35.0d);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 18.708286933869708d + "'", double35 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 18.708286933869708d + "'", double48 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 35.0d + "'", double63 == 35.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 35.0d + "'", double67 == 35.0d);
    }

    @Test
    public void test02103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02103");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, 35.0d, 100.0d, (int) 'a');
        double double6 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) 100.0f, (-1.0d), (int) (short) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test02104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02104");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray9 = new double[] { 10, 100, (byte) 0 };
        boolean boolean10 = switchingFunctionsHandler4.reset((double) 0, doubleArray9);
        double[] doubleArray17 = new double[] { 0.0d, 0, (short) 100, 'a', 3.1622776601683795d, (short) 0 };
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator18 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1L, (double) 'a', doubleArray9, doubleArray17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray26 = new double[] { 10, 100, (byte) 0 };
        boolean boolean27 = switchingFunctionsHandler21.reset((double) 0, doubleArray26);
        double[] doubleArray34 = new double[] { 0.0d, 0, (short) 100, 'a', 3.1622776601683795d, (short) 0 };
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator35 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1L, (double) 'a', doubleArray26, doubleArray34);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator36 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) (-1L), doubleArray9, doubleArray34);
        double[] doubleArray41 = new double[] { '4', (byte) 10 };
        double[] doubleArray42 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray41, doubleArray42);
        double double44 = graggBulirschStoerIntegrator43.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator43.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double[] doubleArray54 = new double[] { '4', (byte) 10 };
        double[] doubleArray55 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray54, doubleArray55);
        double double57 = graggBulirschStoerIntegrator56.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator56.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        org.apache.commons.math.ode.StepHandler stepHandler63 = graggBulirschStoerIntegrator56.getStepHandler();
        graggBulirschStoerIntegrator43.setStepHandler(stepHandler63);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator65 = null;
        stepHandler63.handleStep(stepInterpolator65, true);
        boolean boolean68 = stepHandler63.requiresDenseOutput();
        graggBulirschStoerIntegrator36.setStepHandler(stepHandler63);
        graggBulirschStoerIntegrator36.setOrderControl(10, (double) ' ', 0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler74 = null;
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator36.setStepHandler(stepHandler74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 0.0, 100.0, 97.0, 3.1622776601683795, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 100.0, 97.0, 3.1622776601683795, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 18.708286933869708d + "'", double44 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 18.708286933869708d + "'", double57 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test02105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02105");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(32.0d, "org.apache.commons.math.MathException: Evaluation failed for argument = 3");
    }

    @Test
    public void test02106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02106");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        org.apache.commons.math.ode.StepHandler stepHandler7 = graggBulirschStoerIntegrator6.getStepHandler();
        double double8 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double9 = graggBulirschStoerIntegrator6.getMaxStep();
        graggBulirschStoerIntegrator6.setInitialStepSize((double) 100);
        graggBulirschStoerIntegrator6.setStepsizeControl(100.0d, (double) 100, Double.NaN, (double) (byte) 10);
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        double double24 = graggBulirschStoerIntegrator23.getCurrentStepStart();
        graggBulirschStoerIntegrator23.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        graggBulirschStoerIntegrator23.addSwitchingFunction(switchingFunction30, (double) (short) 10, (double) 2, (int) '#');
        graggBulirschStoerIntegrator23.setStabilityCheck(false, (int) '4', (int) '4', (double) 100.0f);
        double[] doubleArray44 = new double[] { '4', (byte) 10 };
        double[] doubleArray45 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray44, doubleArray45);
        org.apache.commons.math.ode.StepHandler stepHandler47 = graggBulirschStoerIntegrator46.getStepHandler();
        stepHandler47.reset();
        stepHandler47.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        stepHandler47.handleStep(stepInterpolator50, true);
        graggBulirschStoerIntegrator23.setStepHandler(stepHandler47);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler47);
        double double55 = graggBulirschStoerIntegrator6.getMaxStep();
        double double56 = graggBulirschStoerIntegrator6.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 18.708286933869708d + "'", double8 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 35.0d + "'", double9 == 35.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 35.0d + "'", double55 == 35.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
    }

    @Test
    public void test02107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02107");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) (short) -1, 0.0d, 100);
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        double double13 = switchingFunctionsHandler0.getEventTime();
        boolean boolean14 = switchingFunctionsHandler0.stop();
        double double15 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = switchingFunctionsHandler0.evaluateStep(stepInterpolator16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
    }

    @Test
    public void test02108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02108");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        org.apache.commons.math.ode.StepHandler stepHandler7 = graggBulirschStoerIntegrator6.getStepHandler();
        double double8 = graggBulirschStoerIntegrator6.getMinStep();
        double[] doubleArray13 = new double[] { '4', (byte) 10 };
        double[] doubleArray14 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator15 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray13, doubleArray14);
        double double16 = graggBulirschStoerIntegrator15.getCurrentStepStart();
        graggBulirschStoerIntegrator15.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator15.setInterpolationControl(true, 2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        graggBulirschStoerIntegrator15.addSwitchingFunction(switchingFunction25, (double) (short) 1, 18.708286933869708d, (int) (byte) 100);
        org.apache.commons.math.ode.StepHandler stepHandler30 = graggBulirschStoerIntegrator15.getStepHandler();
        boolean boolean31 = stepHandler30.requiresDenseOutput();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler30);
        graggBulirschStoerIntegrator6.setStabilityCheck(true, 0, (-1), 100.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction38, (-0.0d), (double) (byte) 100, (int) (short) 1);
        double double43 = graggBulirschStoerIntegrator6.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 10.0d + "'", double43 == 10.0d);
    }

    @Test
    public void test02109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02109");
        java.lang.Object[] objArray12 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray12);
        java.lang.Object[] objArray15 = integratorException14.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "Gragg-Bulirsch-Stoer", objArray15);
        java.lang.Throwable throwable22 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", throwable22);
        java.lang.Object[] objArray25 = mathException24.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.FunctionEvaluationException: ", objArray25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: ", objArray15, (java.lang.Throwable) functionEvaluationException26);
        java.lang.Object[] objArray33 = new java.lang.Object[] { '4', 2, (byte) 10 };
        java.lang.Object[] objArray41 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("", objArray41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray41);
        java.lang.Object[] objArray44 = integratorException43.getArguments();
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("hi!", objArray33, (java.lang.Throwable) integratorException43);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) integratorException43);
        functionEvaluationException26.addSuppressed((java.lang.Throwable) integratorException43);
        java.lang.Object[] objArray54 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("", objArray54);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException55);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException55);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException62);
        mathException59.addSuppressed((java.lang.Throwable) integratorException63);
        integratorException43.addSuppressed((java.lang.Throwable) mathException59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Throwable) mathException59);
        org.apache.commons.math.ode.IntegratorException integratorException67 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException66);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[4, 2, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[4, 2, 10]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!, 1, 10.0, 4, 100]");
    }

    @Test
    public void test02110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02110");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException1 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f);
        java.lang.String str2 = functionEvaluationException1.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        functionEvaluationException1.addSuppressed((java.lang.Throwable) functionEvaluationException4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException4);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException6);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Evaluation failed for argument = {0}" + "'", str2, "Evaluation failed for argument = {0}");
    }

    @Test
    public void test02111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02111");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray5);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray5, (java.lang.Throwable) functionEvaluationException10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Throwable) integratorException12);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException14);
        java.lang.Class<?> wildcardClass16 = mathException14.getClass();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test02112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02112");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction8, 0.0d, (double) (-1.0f), (int) (short) 10);
        graggBulirschStoerIntegrator6.setOrderControl(0, (double) 2, 0.0d);
        double double17 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double18 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 18.708286933869708d + "'", double17 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test02113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02113");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction13, (double) (short) 10, (double) 2, (int) '#');
        org.apache.commons.math.ode.StepHandler stepHandler18 = graggBulirschStoerIntegrator6.getStepHandler();
        double[] doubleArray23 = new double[] { '4', (byte) 10 };
        double[] doubleArray24 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator25 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray23, doubleArray24);
        double double26 = graggBulirschStoerIntegrator25.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator25.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double32 = graggBulirschStoerIntegrator25.getCurrentSignedStepsize();
        double double33 = graggBulirschStoerIntegrator25.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        graggBulirschStoerIntegrator25.addSwitchingFunction(switchingFunction34, (double) (byte) 100, (double) (short) 100, (int) 'a');
        double double39 = graggBulirschStoerIntegrator25.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler40 = graggBulirschStoerIntegrator25.getStepHandler();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler40);
        graggBulirschStoerIntegrator6.setStabilityCheck(true, (int) '#', (int) (short) 0, (double) 1);
        double double47 = graggBulirschStoerIntegrator6.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 18.708286933869708d + "'", double26 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 18.708286933869708d + "'", double32 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 35.0d + "'", double33 == 35.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 35.0d + "'", double39 == 35.0d);
        org.junit.Assert.assertNotNull(stepHandler40);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 35.0d + "'", double47 == 35.0d);
    }

    @Test
    public void test02114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02114");
        java.lang.Throwable throwable7 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("", throwable7);
        java.lang.Object[] objArray10 = mathException9.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray10);
        java.lang.Object[] objArray12 = functionEvaluationException11.getArguments();
        double double13 = functionEvaluationException11.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) functionEvaluationException11);
        java.lang.Class<?> wildcardClass15 = functionEvaluationException11.getClass();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02115");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler2.add(switchingFunction3, 35.0d, 100.0d, (int) 'a');
        double double8 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray14 = new double[] { '4', (byte) 10 };
        double[] doubleArray15 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator16 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray14, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler2.reset((double) 3, doubleArray14);
        double[] doubleArray26 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray31 = new double[] { '4', (byte) 10 };
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator33 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray31, doubleArray32);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator34 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray26, doubleArray32);
        double[] doubleArray40 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray45 = new double[] { '4', (byte) 10 };
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray45, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray40, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) (short) 100, doubleArray32, doubleArray40);
        boolean boolean50 = switchingFunctionsHandler2.reset((double) (byte) 10, doubleArray40);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray58 = new double[] { 10, 100, (byte) 0 };
        boolean boolean59 = switchingFunctionsHandler53.reset((double) 0, doubleArray58);
        double[] doubleArray66 = new double[] { 0.0d, 0, (short) 100, 'a', 3.1622776601683795d, (short) 0 };
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1L, (double) 'a', doubleArray58, doubleArray66);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (-0.0d), doubleArray40, doubleArray58);
        org.apache.commons.math.ode.StepHandler stepHandler69 = graggBulirschStoerIntegrator68.getStepHandler();
        double double70 = graggBulirschStoerIntegrator68.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler71 = null;
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator68.setStepHandler(stepHandler71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 100.0, 97.0, 3.1622776601683795, 0.0]");
        org.junit.Assert.assertNotNull(stepHandler69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.0d) + "'", double70 == (-0.0d));
    }

    @Test
    public void test02116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02116");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setInterpolationControl(false, (int) (byte) 1);
        java.lang.String str18 = graggBulirschStoerIntegrator6.getName();
        org.apache.commons.math.ode.StepHandler stepHandler19 = graggBulirschStoerIntegrator6.getStepHandler();
        java.lang.String str20 = graggBulirschStoerIntegrator6.getName();
        graggBulirschStoerIntegrator6.setOrderControl((int) (byte) 10, (double) (byte) -1, 1.0d);
        double double25 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str18, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str20, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
    }

    @Test
    public void test02117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02117");
        java.lang.Object[] objArray8 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("", objArray8);
        java.lang.Throwable[] throwableArray10 = mathException9.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException11);
        java.lang.String str14 = mathException13.toString();
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.apache.commons.math.MathException: " + "'", str14, "org.apache.commons.math.MathException: ");
    }

    @Test
    public void test02118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02118");
        java.lang.String[] strArray17 = new java.lang.String[] { "Gragg-Bulirsch-Stoer", "hi!", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: hi!", strArray17);
        java.lang.Object[] objArray34 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("", objArray34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException35);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Throwable) derivativeException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray17, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException(22.80350850198276d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray17);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!, 1, 10.0, 4, 100]");
    }

    @Test
    public void test02119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02119");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, 10.0d, (double) 100, 18.708286933869708d);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 0, 100.0d, (double) (short) 100, (double) 0);
        double[] doubleArray15 = new double[] { '4', (byte) 10 };
        double[] doubleArray16 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator17 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray15, doubleArray16);
        double double18 = graggBulirschStoerIntegrator17.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator17.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double[] doubleArray28 = new double[] { '4', (byte) 10 };
        double[] doubleArray29 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator30 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray28, doubleArray29);
        double double31 = graggBulirschStoerIntegrator30.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator30.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        org.apache.commons.math.ode.StepHandler stepHandler37 = graggBulirschStoerIntegrator30.getStepHandler();
        graggBulirschStoerIntegrator17.setStepHandler(stepHandler37);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler37);
        boolean boolean40 = stepHandler37.requiresDenseOutput();
        java.lang.Class<?> wildcardClass41 = stepHandler37.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 3.1622776601683795d + "'", double5 == 3.1622776601683795d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 18.708286933869708d + "'", double18 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 18.708286933869708d + "'", double31 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test02120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02120");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray7 = new double[] { 10, 100, (byte) 0 };
        boolean boolean8 = switchingFunctionsHandler2.reset((double) 0, doubleArray7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray14 = new double[] { 10, 100, (byte) 0 };
        boolean boolean15 = switchingFunctionsHandler9.reset((double) 0, doubleArray14);
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        boolean boolean24 = switchingFunctionsHandler9.reset(18.708286933869708d, doubleArray22);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator25 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, 35.0d, doubleArray7, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator25.addSwitchingFunction(switchingFunction26, 35.0d, (double) (short) 10, (int) (byte) 1);
        graggBulirschStoerIntegrator25.setOrderControl((int) (byte) -1, (double) (short) 0, 32.0d);
        graggBulirschStoerIntegrator25.setStepsizeControl((double) 10, 10.0d, (-1.0d), (double) 100L);
        org.apache.commons.math.ode.StepHandler stepHandler40 = graggBulirschStoerIntegrator25.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        stepHandler40.handleStep(stepInterpolator41, true);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(stepHandler40);
    }

    @Test
    public void test02121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02121");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "Evaluation failed for argument = {0}");
        double double6 = functionEvaluationException5.getArgument();
        java.lang.Throwable[] throwableArray7 = functionEvaluationException5.getSuppressed();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        java.lang.Object[] objArray22 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", objArray22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException23);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException26);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray14, (java.lang.Throwable) integratorException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException33);
        java.lang.Object[] objArray35 = integratorException34.getArguments();
        java.lang.Throwable throwable41 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("", throwable41);
        java.lang.Object[] objArray44 = mathException43.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.FunctionEvaluationException: ", objArray44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: ", objArray35, (java.lang.Throwable) functionEvaluationException45);
        java.lang.Object[] objArray50 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable54 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable54);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("", throwable54);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("hi!", objArray50, (java.lang.Throwable) mathException56);
        functionEvaluationException45.addSuppressed((java.lang.Throwable) mathException56);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray14, (java.lang.Throwable) mathException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray14);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) mathException61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException(9.848857801796104d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray7);
        double double64 = functionEvaluationException63.getArgument();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 2.0d + "'", double6 == 2.0d);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!, 10]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 9.848857801796104d + "'", double64 == 9.848857801796104d);
    }

    @Test
    public void test02122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02122");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double[] doubleArray12 = new double[] { '4', (byte) 10 };
        double[] doubleArray13 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray12, doubleArray13);
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator14.getStepHandler();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler15);
        graggBulirschStoerIntegrator6.setOrderControl((int) (short) -1, (double) (-1L), (double) 10);
        double double21 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler22 = graggBulirschStoerIntegrator6.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler23 = graggBulirschStoerIntegrator6.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction24, (double) 1.0f, (double) 10, (int) ' ');
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 18.708286933869708d + "'", double21 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertNotNull(stepHandler23);
    }

    @Test
    public void test02123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02123");
        java.lang.Object[] objArray12 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray12);
        java.lang.Object[] objArray15 = integratorException14.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException(35.0d, "", objArray15);
        java.lang.Object[] objArray24 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", objArray24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException25);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) derivativeException27);
        java.lang.Throwable[] throwableArray30 = derivativeException27.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", objArray15, (java.lang.Throwable) derivativeException27);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", objArray15);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException32);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException33);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException34);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray30);
    }

    @Test
    public void test02124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02124");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "Evaluation failed for argument = {0}");
        double double5 = functionEvaluationException4.getArgument();
        java.lang.Throwable[] throwableArray6 = functionEvaluationException4.getSuppressed();
        java.lang.String[] strArray14 = new java.lang.String[] { "Gragg-Bulirsch-Stoer", "hi!", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, "org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) derivativeException17);
        java.lang.String str19 = functionEvaluationException18.getPattern();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 2.0d + "'", double5 == 2.0d);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: hi!" + "'", str19, "org.apache.commons.math.FunctionEvaluationException: hi!");
    }

    @Test
    public void test02125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02125");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getMinStep();
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = graggBulirschStoerIntegrator23.getStepHandler();
        stepHandler24.reset();
        stepHandler24.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler24);
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 3, (double) (short) 100, (double) 2, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler33 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) (short) 1, Double.NaN, 1.0d, (double) ' ');
        graggBulirschStoerIntegrator6.setStabilityCheck(false, 100, 0, (double) 2);
        java.lang.String str44 = graggBulirschStoerIntegrator6.getName();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02126");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction6, (double) (byte) 0, (double) 0, (int) '#');
        graggBulirschStoerIntegrator4.setOrderControl(2, (double) (short) 10, (double) 10);
        double[] doubleArray19 = new double[] { '4', (byte) 10 };
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray19, doubleArray20);
        org.apache.commons.math.ode.StepHandler stepHandler22 = graggBulirschStoerIntegrator21.getStepHandler();
        stepHandler22.reset();
        stepHandler22.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler22);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction26, 3.0d, (-0.0d), (int) '#');
        double double31 = graggBulirschStoerIntegrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction32, (double) 100, 52.0d, (int) '4');
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
    }

    @Test
    public void test02127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02127");
        java.lang.Object[] objArray7 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable11 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("", throwable11);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", objArray7, (java.lang.Throwable) mathException13);
        java.lang.Object[] objArray24 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", objArray24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray24);
        java.lang.Object[] objArray27 = integratorException26.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "Gragg-Bulirsch-Stoer", objArray27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException(18.708286933869708d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", objArray7, (java.lang.Throwable) functionEvaluationException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.MathException: hi!", (java.lang.Throwable) functionEvaluationException28);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException30);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[hi!, 10]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!, 1, 10.0, 4, 100]");
    }

    @Test
    public void test02128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02128");
        java.lang.Object[] objArray6 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("", objArray6);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        java.lang.Object[] objArray12 = derivativeException10.getArguments();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("");
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException14);
        derivativeException10.addSuppressed((java.lang.Throwable) integratorException15);
        java.lang.Throwable[] throwableArray17 = integratorException15.getSuppressed();
        java.lang.Throwable throwable18 = null;
        // The following exception was thrown during execution in test generation
        try {
            integratorException15.addSuppressed(throwable18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test02129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02129");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException2);
        java.lang.Object[] objArray4 = functionEvaluationException2.getArguments();
        java.lang.Class<?> wildcardClass5 = functionEvaluationException2.getClass();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test02130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02130");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setOrderControl((-1), (-1.0d), (double) 10L);
        double[] doubleArray16 = new double[] { '4', (byte) 10 };
        double[] doubleArray17 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator18 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray16, doubleArray17);
        org.apache.commons.math.ode.StepHandler stepHandler19 = graggBulirschStoerIntegrator18.getStepHandler();
        stepHandler19.reset();
        stepHandler19.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler19);
        org.apache.commons.math.ode.StepHandler stepHandler23 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setStepsizeControl(18.708286933869708d, 18.708286933869708d, (double) 0, (double) ' ');
        graggBulirschStoerIntegrator6.setInterpolationControl(true, 100);
        double[] doubleArray37 = new double[] { (short) 100, 3, 'a' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        switchingFunctionsHandler38.add(switchingFunction39, 35.0d, 100.0d, (int) 'a');
        double double44 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray50 = new double[] { '4', (byte) 10 };
        double[] doubleArray51 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator52 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray50, doubleArray51);
        boolean boolean53 = switchingFunctionsHandler38.reset((double) 3, doubleArray50);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator54 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', 10.0d, doubleArray37, doubleArray50);
        java.lang.String str55 = graggBulirschStoerIntegrator54.getName();
        double[] doubleArray60 = new double[] { '4', (byte) 10 };
        double[] doubleArray61 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator62 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray60, doubleArray61);
        double double63 = graggBulirschStoerIntegrator62.getCurrentStepStart();
        graggBulirschStoerIntegrator62.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator62.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        double double73 = graggBulirschStoerIntegrator62.getCurrentSignedStepsize();
        java.lang.String str74 = graggBulirschStoerIntegrator62.getName();
        double double75 = graggBulirschStoerIntegrator62.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction76 = null;
        graggBulirschStoerIntegrator62.addSwitchingFunction(switchingFunction76, (double) 100, (double) (byte) 0, 1);
        java.lang.String str81 = graggBulirschStoerIntegrator62.getName();
        double double82 = graggBulirschStoerIntegrator62.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction83 = null;
        graggBulirschStoerIntegrator62.addSwitchingFunction(switchingFunction83, (double) (short) 1, (double) ' ', (int) (byte) 10);
        org.apache.commons.math.ode.StepHandler stepHandler88 = graggBulirschStoerIntegrator62.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator89 = null;
        stepHandler88.handleStep(stepInterpolator89, false);
        graggBulirschStoerIntegrator54.setStepHandler(stepHandler88);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler88);
        double double94 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]");
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertNotNull(stepHandler23);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 3.0, 97.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str55, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 18.708286933869708d + "'", double73 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str74, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str81, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertNotNull(stepHandler88);
        org.junit.Assert.assertTrue(Double.isNaN(double94));
    }

    @Test
    public void test02131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02131");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray7);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray7, (java.lang.Throwable) functionEvaluationException12);
        java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("", objArray21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, (java.lang.Throwable) derivativeException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray7, (java.lang.Throwable) derivativeException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, (java.lang.Throwable) derivativeException24);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) derivativeException29);
        java.lang.String str31 = mathException30.getPattern();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: " + "'", str31, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test02132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02132");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction6, (double) (byte) 0, (double) 0, (int) '#');
        graggBulirschStoerIntegrator4.setOrderControl(2, (double) (short) 10, (double) 10);
        graggBulirschStoerIntegrator4.setOrderControl((int) (short) 0, (double) (byte) -1, (double) (byte) 100);
        double[] doubleArray23 = new double[] { '4', (byte) 10 };
        double[] doubleArray24 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator25 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray23, doubleArray24);
        double double26 = graggBulirschStoerIntegrator25.getCurrentStepStart();
        graggBulirschStoerIntegrator25.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator25.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        double double36 = graggBulirschStoerIntegrator25.getCurrentSignedStepsize();
        java.lang.String str37 = graggBulirschStoerIntegrator25.getName();
        double double38 = graggBulirschStoerIntegrator25.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator25.addSwitchingFunction(switchingFunction39, (double) 100, (double) (byte) 0, 1);
        java.lang.String str44 = graggBulirschStoerIntegrator25.getName();
        double double45 = graggBulirschStoerIntegrator25.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        graggBulirschStoerIntegrator25.addSwitchingFunction(switchingFunction46, (double) (short) 1, (double) ' ', (int) (byte) 10);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator25.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator52 = null;
        stepHandler51.handleStep(stepInterpolator52, false);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler51);
        stepHandler51.reset();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 18.708286933869708d + "'", double36 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str37, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(stepHandler51);
    }

    @Test
    public void test02133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02133");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) (short) -1, 0.0d, 100);
        boolean boolean12 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        switchingFunctionsHandler0.add(switchingFunction13, 9.848857801796104d, (double) (short) 10, (int) (byte) 0);
        double double18 = switchingFunctionsHandler0.getEventTime();
        boolean boolean19 = switchingFunctionsHandler0.stop();
        double[] doubleArray25 = new double[] {};
        double[] doubleArray31 = new double[] { (short) 100, 3, 'a' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        switchingFunctionsHandler32.add(switchingFunction33, 35.0d, 100.0d, (int) 'a');
        double double38 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray44 = new double[] { '4', (byte) 10 };
        double[] doubleArray45 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray44, doubleArray45);
        boolean boolean47 = switchingFunctionsHandler32.reset((double) 3, doubleArray44);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', 10.0d, doubleArray31, doubleArray44);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-1.0d), (double) (short) 100, doubleArray25, doubleArray44);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray57 = new double[] { 10, 100, (byte) 0 };
        boolean boolean58 = switchingFunctionsHandler52.reset((double) 0, doubleArray57);
        double[] doubleArray64 = new double[] { '4', (byte) 10 };
        double[] doubleArray65 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator66 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray64, doubleArray65);
        boolean boolean67 = switchingFunctionsHandler52.reset(18.708286933869708d, doubleArray65);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler68 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray73 = new double[] { 10, 100, (byte) 0 };
        boolean boolean74 = switchingFunctionsHandler68.reset((double) 0, doubleArray73);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 3, 97.0d, doubleArray65, doubleArray73);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator76 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(100.0d, 0.0d, doubleArray44, doubleArray73);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted(22.80350850198276d, doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 3.0, 97.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test02134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02134");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getMinStep();
        java.lang.String str17 = graggBulirschStoerIntegrator6.getName();
        java.lang.String str18 = graggBulirschStoerIntegrator6.getName();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str17, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str18, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02135");
        double[] doubleArray2 = null;
        double[] doubleArray10 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray15 = new double[] { '4', (byte) 10 };
        double[] doubleArray16 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator17 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray15, doubleArray16);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator18 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray10, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler19.add(switchingFunction20, 35.0d, 100.0d, (int) 'a');
        double double25 = switchingFunctionsHandler19.getEventTime();
        double[] doubleArray31 = new double[] { '4', (byte) 10 };
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator33 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray31, doubleArray32);
        boolean boolean34 = switchingFunctionsHandler19.reset((double) 3, doubleArray31);
        double[] doubleArray43 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray48 = new double[] { '4', (byte) 10 };
        double[] doubleArray49 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray48, doubleArray49);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator51 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray43, doubleArray49);
        double[] doubleArray57 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray62 = new double[] { '4', (byte) 10 };
        double[] doubleArray63 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray62, doubleArray63);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator65 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray57, doubleArray63);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator66 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) (short) 100, doubleArray49, doubleArray57);
        boolean boolean67 = switchingFunctionsHandler19.reset((double) (byte) 10, doubleArray57);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (-1.0d), doubleArray16, doubleArray57);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', (double) (byte) 100, doubleArray2, doubleArray57);
        graggBulirschStoerIntegrator69.setInitialStepSize((double) 10L);
        double double72 = graggBulirschStoerIntegrator69.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 32.0d + "'", double72 == 32.0d);
    }

    @Test
    public void test02136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02136");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 3);
        java.lang.String str7 = functionEvaluationException6.getPattern();
        java.lang.Object[] objArray8 = functionEvaluationException6.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Throwable) functionEvaluationException6);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException(35.0d, (java.lang.Throwable) functionEvaluationException6);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException(3.0d, (java.lang.Throwable) functionEvaluationException10);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException12);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Evaluation failed for argument = {0}" + "'", str7, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[3.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[3.0]");
    }

    @Test
    public void test02137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02137");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("", objArray15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray7, (java.lang.Throwable) integratorException20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException26);
        java.lang.Object[] objArray28 = integratorException27.getArguments();
        java.lang.Throwable throwable34 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("", throwable34);
        java.lang.Object[] objArray37 = mathException36.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.FunctionEvaluationException: ", objArray37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: ", objArray28, (java.lang.Throwable) functionEvaluationException38);
        java.lang.Object[] objArray43 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable47 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable47);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("", throwable47);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", objArray43, (java.lang.Throwable) mathException49);
        functionEvaluationException38.addSuppressed((java.lang.Throwable) mathException49);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException38);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray7, (java.lang.Throwable) mathException52);
        java.lang.Object[] objArray54 = mathException53.getArguments();
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("hi!", objArray54);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray54);
        java.lang.Class<?> wildcardClass57 = integratorException56.getClass();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!, 10]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test02138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02138");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) '#', (double) (byte) 1, 0.0d, (double) 100L);
        org.apache.commons.math.ode.StepHandler stepHandler13 = graggBulirschStoerIntegrator6.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler14 = graggBulirschStoerIntegrator6.getStepHandler();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations15 = null;
        double[] doubleArray17 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray26 = new double[] { 10, 100, (byte) 0 };
        boolean boolean27 = switchingFunctionsHandler21.reset((double) 0, doubleArray26);
        double[] doubleArray33 = new double[] { '4', (byte) 10 };
        double[] doubleArray34 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator35 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray33, doubleArray34);
        boolean boolean36 = switchingFunctionsHandler21.reset(18.708286933869708d, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray42 = new double[] { 10, 100, (byte) 0 };
        boolean boolean43 = switchingFunctionsHandler37.reset((double) 0, doubleArray42);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator44 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 3, 97.0d, doubleArray34, doubleArray42);
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator6.integrate(firstOrderDifferentialEquations15, (double) (short) 0, doubleArray17, (-1.0d), doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test02139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02139");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double[] doubleArray12 = new double[] { '4', (byte) 10 };
        double[] doubleArray13 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray12, doubleArray13);
        double double15 = graggBulirschStoerIntegrator14.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator14.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double[] doubleArray25 = new double[] { '4', (byte) 10 };
        double[] doubleArray26 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator27 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray25, doubleArray26);
        double double28 = graggBulirschStoerIntegrator27.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator27.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        org.apache.commons.math.ode.StepHandler stepHandler34 = graggBulirschStoerIntegrator27.getStepHandler();
        graggBulirschStoerIntegrator14.setStepHandler(stepHandler34);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler34);
        double double37 = graggBulirschStoerIntegrator6.getMinStep();
        java.lang.String str38 = graggBulirschStoerIntegrator6.getName();
        org.apache.commons.math.ode.StepHandler stepHandler39 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setInitialStepSize((double) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction42 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction42, 52.0d, 35.0d, (int) '4');
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 18.708286933869708d + "'", double15 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 18.708286933869708d + "'", double28 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str38, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler39);
    }

    @Test
    public void test02140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02140");
        java.lang.String[] strArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.ode.DerivativeException derivativeException2 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: ", strArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02141");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction8, 0.0d, (double) (-1.0f), (int) (short) 10);
        java.lang.String str13 = graggBulirschStoerIntegrator6.getName();
        java.lang.String str14 = graggBulirschStoerIntegrator6.getName();
        double[] doubleArray19 = new double[] { '4', (byte) 10 };
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray19, doubleArray20);
        graggBulirschStoerIntegrator21.setStepsizeControl((double) (byte) 10, 0.0d, (double) 0, 0.0d);
        graggBulirschStoerIntegrator21.setStepsizeControl(0.0d, (double) (-1.0f), (double) (-1.0f), (double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler32 = graggBulirschStoerIntegrator21.getStepHandler();
        boolean boolean33 = stepHandler32.requiresDenseOutput();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler32);
        double double35 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-1.0d), (double) 100.0f, (double) ' ', 10.0d);
        org.apache.commons.math.ode.StepHandler stepHandler41 = graggBulirschStoerIntegrator40.getStepHandler();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler41);
        graggBulirschStoerIntegrator6.setInterpolationControl(false, (int) (byte) 10);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str13, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str14, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(stepHandler32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(stepHandler41);
    }

    @Test
    public void test02142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02142");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray10, (java.lang.Throwable) functionEvaluationException15);
        java.lang.Object[] objArray24 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", objArray24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, (java.lang.Throwable) derivativeException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray10, (java.lang.Throwable) derivativeException27);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Evaluation failed for argument = {0}", (java.lang.Object[]) strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) mathException32);
        double double34 = functionEvaluationException33.getArgument();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
    }

    @Test
    public void test02143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02143");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction13, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray22 = new double[] { '4', (byte) 10 };
        double[] doubleArray23 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray22, doubleArray23);
        double double25 = graggBulirschStoerIntegrator24.getCurrentStepStart();
        double[] doubleArray30 = new double[] { '4', (byte) 10 };
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray30, doubleArray31);
        org.apache.commons.math.ode.StepHandler stepHandler33 = graggBulirschStoerIntegrator32.getStepHandler();
        graggBulirschStoerIntegrator24.setStepHandler(stepHandler33);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler33);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        stepHandler33.handleStep(stepInterpolator36, true);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        stepHandler33.handleStep(stepInterpolator39, false);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertNotNull(stepHandler33);
    }

    @Test
    public void test02144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02144");
        java.lang.Object[] objArray5 = new java.lang.Object[] { '4', 2, (byte) 10 };
        java.lang.Object[] objArray13 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray13);
        java.lang.Object[] objArray16 = integratorException15.getArguments();
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!", objArray5, (java.lang.Throwable) integratorException15);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) integratorException15);
        java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray30);
        java.lang.Object[] objArray33 = integratorException32.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException(35.0d, "", objArray33);
        java.lang.Object[] objArray42 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("", objArray42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException43);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException43);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) derivativeException45);
        java.lang.Throwable[] throwableArray48 = derivativeException45.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", objArray33, (java.lang.Throwable) derivativeException45);
        java.lang.Object[] objArray56 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable60 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("", throwable60);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("hi!", objArray56, (java.lang.Throwable) mathException62);
        org.apache.commons.math.ode.IntegratorException integratorException64 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException63);
        java.lang.Throwable[] throwableArray65 = integratorException64.getSuppressed();
        java.lang.Object[] objArray73 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("", objArray73);
        org.apache.commons.math.ode.IntegratorException integratorException75 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray73);
        java.lang.Object[] objArray76 = integratorException75.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray65, (java.lang.Throwable) integratorException75);
        java.lang.Object[] objArray78 = integratorException75.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', (java.lang.Throwable) integratorException75);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException75);
        functionEvaluationException49.addSuppressed((java.lang.Throwable) mathException80);
        org.apache.commons.math.ode.DerivativeException derivativeException82 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException80);
        integratorException15.addSuppressed((java.lang.Throwable) mathException80);
        java.lang.Throwable[] throwableArray84 = mathException80.getSuppressed();
        java.lang.String str85 = mathException80.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException86 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException80);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[4, 2, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[4, 2, 10]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!, 10]");
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str85, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02145");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, 35.0d, 100.0d, (int) 'a');
        double double6 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray12 = new double[] { '4', (byte) 10 };
        double[] doubleArray13 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray12, doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.reset((double) 3, doubleArray12);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler0.add(switchingFunction16, (double) (byte) 1, (double) 2, (int) (short) 0);
        double[] doubleArray27 = new double[] { (short) 100, 3, 'a' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler28.add(switchingFunction29, 35.0d, 100.0d, (int) 'a');
        double double34 = switchingFunctionsHandler28.getEventTime();
        double[] doubleArray40 = new double[] { '4', (byte) 10 };
        double[] doubleArray41 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray40, doubleArray41);
        boolean boolean43 = switchingFunctionsHandler28.reset((double) 3, doubleArray40);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator44 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', 10.0d, doubleArray27, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted(3.0d, doubleArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 3.0, 97.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test02146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02146");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 0);
        double double8 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double[] doubleArray13 = new double[] { '4', (byte) 10 };
        double[] doubleArray14 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator15 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray13, doubleArray14);
        double double16 = graggBulirschStoerIntegrator15.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator15.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double22 = graggBulirschStoerIntegrator15.getCurrentSignedStepsize();
        double double23 = graggBulirschStoerIntegrator15.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        graggBulirschStoerIntegrator15.addSwitchingFunction(switchingFunction24, (double) (byte) 100, (double) (short) 100, (int) 'a');
        double double29 = graggBulirschStoerIntegrator15.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler30 = graggBulirschStoerIntegrator15.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler30);
        double double32 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler33 = graggBulirschStoerIntegrator4.getStepHandler();
        double[] doubleArray38 = new double[] { '4', (byte) 10 };
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray38, doubleArray39);
        double double41 = graggBulirschStoerIntegrator40.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator40.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double47 = graggBulirschStoerIntegrator40.getCurrentSignedStepsize();
        double double48 = graggBulirschStoerIntegrator40.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator40.getStepHandler();
        boolean boolean50 = stepHandler49.requiresDenseOutput();
        boolean boolean51 = stepHandler49.requiresDenseOutput();
        stepHandler49.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler49);
        double double54 = graggBulirschStoerIntegrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 18.708286933869708d + "'", double16 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 18.708286933869708d + "'", double22 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 35.0d + "'", double23 == 35.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 35.0d + "'", double29 == 35.0d);
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 18.708286933869708d + "'", double41 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 18.708286933869708d + "'", double47 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
    }

    @Test
    public void test02147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02147");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) (short) -1, 0.0d, 100);
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        double double13 = switchingFunctionsHandler0.getEventTime();
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        double double16 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray24 = new double[] { '4', (byte) 10 };
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator26 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray24, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray32 = new double[] { 10, 100, (byte) 0 };
        boolean boolean33 = switchingFunctionsHandler27.reset((double) 0, doubleArray32);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = switchingFunctionsHandler27.evaluateStep(stepInterpolator34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray42 = new double[] { 10, 100, (byte) 0 };
        boolean boolean43 = switchingFunctionsHandler37.reset((double) 0, doubleArray42);
        boolean boolean44 = switchingFunctionsHandler27.reset((double) 100.0f, doubleArray42);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        switchingFunctionsHandler27.add(switchingFunction45, (double) (byte) 1, (double) 0, (int) (short) -1);
        boolean boolean50 = switchingFunctionsHandler27.isEmpty();
        boolean boolean51 = switchingFunctionsHandler27.isEmpty();
        double double52 = switchingFunctionsHandler27.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray59 = new double[] { 10, 100, (byte) 0 };
        boolean boolean60 = switchingFunctionsHandler54.reset((double) 0, doubleArray59);
        double[] doubleArray66 = new double[] { '4', (byte) 10 };
        double[] doubleArray67 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray66, doubleArray67);
        boolean boolean69 = switchingFunctionsHandler54.reset(18.708286933869708d, doubleArray67);
        boolean boolean70 = switchingFunctionsHandler54.isEmpty();
        boolean boolean71 = switchingFunctionsHandler54.stop();
        double[] doubleArray78 = new double[] { (short) 100, 3, 'a' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler79 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction80 = null;
        switchingFunctionsHandler79.add(switchingFunction80, 35.0d, 100.0d, (int) 'a');
        double double85 = switchingFunctionsHandler79.getEventTime();
        double[] doubleArray91 = new double[] { '4', (byte) 10 };
        double[] doubleArray92 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator93 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray91, doubleArray92);
        boolean boolean94 = switchingFunctionsHandler79.reset((double) 3, doubleArray91);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator95 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', 10.0d, doubleArray78, doubleArray91);
        boolean boolean96 = switchingFunctionsHandler54.reset(0.0d, doubleArray78);
        boolean boolean97 = switchingFunctionsHandler27.reset((double) 1L, doubleArray78);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator98 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 1, (double) (byte) -1, doubleArray24, doubleArray78);
        boolean boolean99 = switchingFunctionsHandler0.reset((double) 10, doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 3.0, 97.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test02148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02148");
        java.lang.Object[] objArray12 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("", objArray12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, (java.lang.Throwable) derivativeException15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, (java.lang.Throwable) functionEvaluationException16);
        java.lang.Throwable[] throwableArray18 = functionEvaluationException17.getSuppressed();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray18);
        java.lang.Object[] objArray20 = mathException19.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", objArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException(100.0d);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, (java.lang.Throwable) functionEvaluationException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "", objArray20, (java.lang.Throwable) functionEvaluationException25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException26);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
    }

    @Test
    public void test02149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02149");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double[] doubleArray10 = new double[] { '4', (byte) 10 };
        double[] doubleArray11 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator12 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray10, doubleArray11);
        double double13 = graggBulirschStoerIntegrator12.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator12.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double19 = graggBulirschStoerIntegrator12.getCurrentSignedStepsize();
        double double20 = graggBulirschStoerIntegrator12.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler21 = graggBulirschStoerIntegrator12.getStepHandler();
        double double22 = graggBulirschStoerIntegrator12.getMinStep();
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        org.apache.commons.math.ode.StepHandler stepHandler30 = graggBulirschStoerIntegrator29.getStepHandler();
        stepHandler30.reset();
        stepHandler30.reset();
        graggBulirschStoerIntegrator12.setStepHandler(stepHandler30);
        boolean boolean34 = stepHandler30.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler30);
        double double36 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction37, (double) (short) -1, (double) (byte) 100, 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction42 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction42, (double) (-1), 52.0d, (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 18.708286933869708d + "'", double19 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
    }

    @Test
    public void test02150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02150");
        java.lang.Object[] objArray3 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable7 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("", throwable7);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", objArray3, (java.lang.Throwable) mathException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException10);
        java.lang.String str12 = mathException10.toString();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[hi!, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str12, "org.apache.commons.math.MathException: hi!");
    }

    @Test
    public void test02151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02151");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler2.add(switchingFunction3, 35.0d, 100.0d, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray14 = new double[] { 10, 100, (byte) 0 };
        boolean boolean15 = switchingFunctionsHandler9.reset((double) 0, doubleArray14);
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        boolean boolean24 = switchingFunctionsHandler9.reset(18.708286933869708d, doubleArray22);
        boolean boolean25 = switchingFunctionsHandler2.reset((double) (byte) 0, doubleArray22);
        boolean boolean26 = switchingFunctionsHandler0.reset((double) 0, doubleArray22);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler0.evaluateStep(stepInterpolator27);
        boolean boolean29 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        switchingFunctionsHandler0.add(switchingFunction30, 3.0d, (double) (short) 10, (-1));
        boolean boolean35 = switchingFunctionsHandler0.stop();
        boolean boolean36 = switchingFunctionsHandler0.stop();
        double double37 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
    }

    @Test
    public void test02152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02152");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getMinStep();
        graggBulirschStoerIntegrator6.setOrderControl((int) (short) 1, (double) 0.0f, (double) 1.0f);
        graggBulirschStoerIntegrator6.setInitialStepSize(35.0d);
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        org.apache.commons.math.ode.StepHandler stepHandler30 = graggBulirschStoerIntegrator29.getStepHandler();
        double double31 = graggBulirschStoerIntegrator29.getCurrentSignedStepsize();
        double double32 = graggBulirschStoerIntegrator29.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        graggBulirschStoerIntegrator29.addSwitchingFunction(switchingFunction33, 3.1622776601683795d, (double) 10L, 2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        graggBulirschStoerIntegrator29.addSwitchingFunction(switchingFunction38, (double) 1, (double) 3, (int) 'a');
        java.lang.String str43 = graggBulirschStoerIntegrator29.getName();
        java.lang.String str44 = graggBulirschStoerIntegrator29.getName();
        double[] doubleArray49 = new double[] { '4', (byte) 10 };
        double[] doubleArray50 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator51 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray49, doubleArray50);
        double double52 = graggBulirschStoerIntegrator51.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator51.setStepsizeControl((double) '#', (double) (byte) 1, 0.0d, (double) 100L);
        org.apache.commons.math.ode.StepHandler stepHandler58 = graggBulirschStoerIntegrator51.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler59 = graggBulirschStoerIntegrator51.getStepHandler();
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler59);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler59);
        double double62 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double63 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 18.708286933869708d + "'", double31 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 35.0d + "'", double32 == 35.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str43, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 18.708286933869708d + "'", double52 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 18.708286933869708d + "'", double62 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
    }

    @Test
    public void test02153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02153");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getMinStep();
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = graggBulirschStoerIntegrator23.getStepHandler();
        stepHandler24.reset();
        stepHandler24.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler24);
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 3, (double) (short) 100, (double) 2, (double) (byte) -1);
        double double33 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
    }

    @Test
    public void test02154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02154");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException6);
        java.lang.Object[] objArray8 = integratorException7.getArguments();
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("", objArray15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException16);
        double[] doubleArray23 = new double[] { '4', (byte) 10 };
        double[] doubleArray24 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator25 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray23, doubleArray24);
        double double26 = graggBulirschStoerIntegrator25.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator25.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        java.lang.String str32 = graggBulirschStoerIntegrator25.getName();
        double[] doubleArray38 = new double[] { '4', (byte) 10 };
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray38, doubleArray39);
        double double41 = graggBulirschStoerIntegrator40.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator40.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double47 = graggBulirschStoerIntegrator40.getCurrentSignedStepsize();
        double double48 = graggBulirschStoerIntegrator40.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator40.getStepHandler();
        double double50 = graggBulirschStoerIntegrator40.getMinStep();
        graggBulirschStoerIntegrator40.setOrderControl((int) (short) 1, (double) 0.0f, (double) 1.0f);
        double[] doubleArray59 = new double[] { '4', (byte) 10 };
        double[] doubleArray60 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray59, doubleArray60);
        double double62 = graggBulirschStoerIntegrator61.getCurrentStepStart();
        double[] doubleArray67 = new double[] { '4', (byte) 10 };
        double[] doubleArray68 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray67, doubleArray68);
        org.apache.commons.math.ode.StepHandler stepHandler70 = graggBulirschStoerIntegrator69.getStepHandler();
        graggBulirschStoerIntegrator61.setStepHandler(stepHandler70);
        java.lang.Object[] objArray72 = new java.lang.Object[] { integratorException7, derivativeException18, str32, '#', 0.0f, graggBulirschStoerIntegrator61 };
        org.apache.commons.math.ode.IntegratorException integratorException73 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", objArray72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) integratorException73);
        java.lang.Throwable[] throwableArray75 = integratorException73.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) 3);
        java.lang.String str78 = functionEvaluationException77.getPattern();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray75, (java.lang.Throwable) functionEvaluationException77);
        java.lang.String str80 = mathException79.getPattern();
        java.lang.Object[] objArray81 = mathException79.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException((double) '#', (java.lang.Throwable) mathException79);
        java.lang.Object[] objArray83 = mathException79.getArguments();
        java.lang.String str84 = mathException79.getPattern();
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 18.708286933869708d + "'", double26 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str32, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 18.708286933869708d + "'", double41 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 18.708286933869708d + "'", double47 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[]");
        org.junit.Assert.assertNotNull(stepHandler70);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Evaluation failed for argument = {0}" + "'", str78, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: " + "'", str80, "org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: " + "'", str84, "org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test02155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02155");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction13, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray22 = new double[] { '4', (byte) 10 };
        double[] doubleArray23 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray22, doubleArray23);
        double double25 = graggBulirschStoerIntegrator24.getCurrentStepStart();
        graggBulirschStoerIntegrator24.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator24.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        double[] doubleArray39 = new double[] { '4', (byte) 10 };
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray39, doubleArray40);
        double double42 = graggBulirschStoerIntegrator41.getCurrentStepStart();
        graggBulirschStoerIntegrator41.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        graggBulirschStoerIntegrator41.addSwitchingFunction(switchingFunction48, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray57 = new double[] { '4', (byte) 10 };
        double[] doubleArray58 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray57, doubleArray58);
        double double60 = graggBulirschStoerIntegrator59.getCurrentStepStart();
        double[] doubleArray65 = new double[] { '4', (byte) 10 };
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray65, doubleArray66);
        org.apache.commons.math.ode.StepHandler stepHandler68 = graggBulirschStoerIntegrator67.getStepHandler();
        graggBulirschStoerIntegrator59.setStepHandler(stepHandler68);
        graggBulirschStoerIntegrator41.setStepHandler(stepHandler68);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator71 = null;
        stepHandler68.handleStep(stepInterpolator71, false);
        graggBulirschStoerIntegrator24.setStepHandler(stepHandler68);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler68);
        double[] doubleArray80 = new double[] { '4', (byte) 10 };
        double[] doubleArray81 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator82 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray80, doubleArray81);
        org.apache.commons.math.ode.StepHandler stepHandler83 = graggBulirschStoerIntegrator82.getStepHandler();
        stepHandler83.reset();
        stepHandler83.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator86 = null;
        stepHandler83.handleStep(stepInterpolator86, true);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler83);
        org.apache.commons.math.ode.StepHandler stepHandler90 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setInterpolationControl(false, (-1));
        graggBulirschStoerIntegrator6.setStabilityCheck(false, (int) (byte) 100, (int) (byte) 1, (double) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertNotNull(stepHandler68);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(stepHandler83);
        org.junit.Assert.assertNotNull(stepHandler90);
    }

    @Test
    public void test02156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02156");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ");
        org.apache.commons.math.ode.IntegratorException integratorException2 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException1);
    }

    @Test
    public void test02157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02157");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 'a', 0.0d, (-0.0d), (double) (short) 10);
    }

    @Test
    public void test02158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02158");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        boolean boolean7 = switchingFunctionsHandler0.isEmpty();
        double double8 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray15 = new double[] { 10, 100, (byte) 0 };
        boolean boolean16 = switchingFunctionsHandler10.reset((double) 0, doubleArray15);
        double[] doubleArray22 = new double[] { '4', (byte) 10 };
        double[] doubleArray23 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray22, doubleArray23);
        boolean boolean25 = switchingFunctionsHandler10.reset(18.708286933869708d, doubleArray23);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler10.add(switchingFunction26, Double.NaN, (-1.0d), (int) (byte) 10);
        double[] doubleArray36 = new double[] { '4', (byte) 10 };
        double[] doubleArray37 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray36, doubleArray37);
        boolean boolean39 = switchingFunctionsHandler10.reset(0.0d, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray48 = new double[] { 10, 100, (byte) 0 };
        boolean boolean49 = switchingFunctionsHandler43.reset((double) 0, doubleArray48);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray55 = new double[] { 10, 100, (byte) 0 };
        boolean boolean56 = switchingFunctionsHandler50.reset((double) 0, doubleArray55);
        double[] doubleArray62 = new double[] { '4', (byte) 10 };
        double[] doubleArray63 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray62, doubleArray63);
        boolean boolean65 = switchingFunctionsHandler50.reset(18.708286933869708d, doubleArray63);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator66 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, 35.0d, doubleArray48, doubleArray63);
        boolean boolean67 = switchingFunctionsHandler10.reset(0.0d, doubleArray63);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 0, doubleArray63);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        switchingFunctionsHandler0.add(switchingFunction69, 32.0d, (-1.0d), (int) (short) 1);
        boolean boolean74 = switchingFunctionsHandler0.stop();
        boolean boolean75 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction76 = null;
        switchingFunctionsHandler0.add(switchingFunction76, (double) (byte) 10, 0.0d, 3);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator81 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean82 = switchingFunctionsHandler0.evaluateStep(stepInterpolator81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test02159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02159");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: hi!", strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException(0.0d);
        double double18 = functionEvaluationException17.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', (java.lang.Throwable) functionEvaluationException17);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray9, (java.lang.Throwable) mathException20);
        java.lang.String str22 = functionEvaluationException21.toString();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: " + "'", str22, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test02160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02160");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) 1, (double) '#', (double) 2);
        graggBulirschStoerIntegrator4.setOrderControl((int) (short) 0, (double) (short) 100, (-0.0d));
        double double9 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction10, (double) 10.0f, 100.0d, 0);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test02161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02161");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setStabilityCheck(false, (int) 'a', 10, (double) 2);
        double double21 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setOrderControl((int) ' ', (double) 1, Double.NaN);
        graggBulirschStoerIntegrator6.setStepsizeControl((double) (short) 0, (double) (-1L), (double) (short) 100, (double) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 18.708286933869708d + "'", double21 == 18.708286933869708d);
    }

    @Test
    public void test02162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02162");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double[] doubleArray12 = new double[] { '4', (byte) 10 };
        double[] doubleArray13 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray12, doubleArray13);
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator14.getStepHandler();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler15);
        java.lang.String str17 = graggBulirschStoerIntegrator6.getName();
        double double18 = graggBulirschStoerIntegrator6.getMinStep();
        java.lang.String str19 = graggBulirschStoerIntegrator6.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction20, (double) (byte) 1, 100.0d, (int) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction25, (double) (byte) 0, (double) (-1L), (int) '#');
        double double30 = graggBulirschStoerIntegrator6.getMinStep();
        graggBulirschStoerIntegrator6.setInitialStepSize(52.0d);
        double double33 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str17, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str19, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 18.708286933869708d + "'", double33 == 18.708286933869708d);
    }

    @Test
    public void test02163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02163");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Object[]) strArray6);
        java.lang.Object[] objArray17 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", objArray17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray17);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", objArray17);
        java.lang.String str21 = integratorException20.getPattern();
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException20);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray6, (java.lang.Throwable) mathException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((-0.0d), "", (java.lang.Object[]) strArray6);
        double double26 = functionEvaluationException25.getArgument();
        double double27 = functionEvaluationException25.getArgument();
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException25);
        java.lang.Object[] objArray37 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("", objArray37);
        java.lang.Object[] objArray39 = mathException38.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", objArray39);
        java.lang.Object[] objArray51 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("", objArray51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException52);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, (java.lang.Throwable) derivativeException54);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) functionEvaluationException55);
        java.lang.Object[] objArray57 = mathException56.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, (java.lang.Throwable) mathException56);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Throwable) functionEvaluationException58);
        double double60 = functionEvaluationException58.getArgument();
        functionEvaluationException40.addSuppressed((java.lang.Throwable) functionEvaluationException58);
        java.lang.Object[] objArray62 = functionEvaluationException58.getArguments();
        java.lang.Throwable[] throwableArray63 = functionEvaluationException58.getSuppressed();
        derivativeException28.addSuppressed((java.lang.Throwable) functionEvaluationException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException67);
        double double69 = functionEvaluationException67.getArgument();
        derivativeException28.addSuppressed((java.lang.Throwable) functionEvaluationException67);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException28);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0" + "'", str21, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-0.0d) + "'", double26 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.0d) + "'", double27 == (-0.0d));
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 10.0d + "'", double60 == 10.0d);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 100.0d + "'", double69 == 100.0d);
    }

    @Test
    public void test02164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02164");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        java.lang.String str8 = graggBulirschStoerIntegrator6.getName();
        double double9 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction10, (double) 1, 0.0d, (int) ' ');
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str8, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 18.708286933869708d + "'", double9 == 18.708286933869708d);
    }

    @Test
    public void test02165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02165");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        org.apache.commons.math.ode.StepHandler stepHandler7 = graggBulirschStoerIntegrator6.getStepHandler();
        double double8 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler9 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setInterpolationControl(true, (int) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler13 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setInterpolationControl(false, 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction17, 32.0d, (double) (short) 0, (int) (byte) -1);
        double double22 = graggBulirschStoerIntegrator6.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 18.708286933869708d + "'", double8 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
    }

    @Test
    public void test02166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02166");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator6.setInterpolationControl(true, 2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction16, (double) (short) 1, 18.708286933869708d, (int) (byte) 100);
        org.apache.commons.math.ode.StepHandler stepHandler21 = graggBulirschStoerIntegrator6.getStepHandler();
        double double22 = graggBulirschStoerIntegrator6.getMinStep();
        double double23 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test02167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02167");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, 10.0d, (double) 100, 18.708286933869708d);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double18 = graggBulirschStoerIntegrator11.getCurrentSignedStepsize();
        double double19 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator11.getStepHandler();
        double double21 = graggBulirschStoerIntegrator11.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler22 = graggBulirschStoerIntegrator11.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler22);
        double double24 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction25, 52.0d, (double) 100.0f, (int) ' ');
        graggBulirschStoerIntegrator4.setStepsizeControl(0.0d, 18.708286933869708d, (double) (-1), (double) (short) 100);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (-1.0f), (double) ' ', (double) 10L, 59.16079783099616d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 18.708286933869708d + "'", double12 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 18.708286933869708d + "'", double18 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test02168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02168");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction8, 0.0d, (double) (-1.0f), (int) (short) 10);
        graggBulirschStoerIntegrator6.setStabilityCheck(true, 100, 2, 100.0d);
        double double18 = graggBulirschStoerIntegrator6.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction19, 32.0d, 1.0d, (int) (short) -1);
        double[] doubleArray28 = new double[] { '4', (byte) 10 };
        double[] doubleArray29 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator30 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray28, doubleArray29);
        org.apache.commons.math.ode.StepHandler stepHandler31 = graggBulirschStoerIntegrator30.getStepHandler();
        stepHandler31.reset();
        stepHandler31.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler31);
        java.lang.String str35 = graggBulirschStoerIntegrator6.getName();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str35, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02169");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 100, 100.0d, 35.0d, (double) (short) 10);
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (int) '4');
        double double8 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double double9 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        double double10 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        java.lang.String str11 = graggBulirschStoerIntegrator4.getName();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 100.0d + "'", double8 == 100.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str11, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02170");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(2.0d, (double) (-1), (double) 0, Double.NaN);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (-1), 0.0d, 52.0d, 22.80350850198276d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction10, (double) 10, 17.88854381999832d, (int) 'a');
    }

    @Test
    public void test02171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02171");
        java.lang.Object[] objArray9 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("", objArray9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Throwable) derivativeException14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException14);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException(17.88854381999832d, (java.lang.Throwable) mathException17);
        double double19 = functionEvaluationException18.getArgument();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 17.88854381999832d + "'", double19 == 17.88854381999832d);
    }

    @Test
    public void test02172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02172");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        org.apache.commons.math.ode.StepHandler stepHandler13 = graggBulirschStoerIntegrator6.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler14 = graggBulirschStoerIntegrator6.getStepHandler();
        boolean boolean15 = stepHandler14.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        stepHandler14.handleStep(stepInterpolator16, true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test02173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02173");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        java.lang.Object[] objArray17 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", objArray17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray9, (java.lang.Throwable) integratorException22);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray9);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray9);
        java.lang.Throwable throwable32 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("", throwable32);
        java.lang.Object[] objArray35 = mathException34.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: ", objArray35);
        java.lang.Throwable[] throwableArray37 = functionEvaluationException36.getSuppressed();
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 10", (java.lang.Object[]) strArray9, (java.lang.Throwable) functionEvaluationException36);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = hi!", strArray9);
        java.lang.Throwable throwable45 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("", throwable45);
        java.lang.Object[] objArray48 = mathException47.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.FunctionEvaluationException: ", objArray48);
        double double50 = functionEvaluationException49.getArgument();
        double double51 = functionEvaluationException49.getArgument();
        java.lang.Object[] objArray52 = functionEvaluationException49.getArguments();
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException49);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 10", (java.lang.Object[]) strArray9, (java.lang.Throwable) functionEvaluationException49);
        java.lang.Class<?> wildcardClass55 = strArray9.getClass();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test02174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02174");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        org.apache.commons.math.ode.StepHandler stepHandler7 = graggBulirschStoerIntegrator6.getStepHandler();
        double double8 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler9 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setInterpolationControl(false, (int) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction13, (double) 10.0f, 2.0d, (int) ' ');
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 2, (double) '#', (double) 100L, 52.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction23, (double) 1.0f, 97.0d, 0);
        double double28 = graggBulirschStoerIntegrator6.getMinStep();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator33 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray38 = new double[] { '4', (byte) 10 };
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray38, doubleArray39);
        double double41 = graggBulirschStoerIntegrator40.getCurrentStepStart();
        graggBulirschStoerIntegrator40.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction47 = null;
        graggBulirschStoerIntegrator40.addSwitchingFunction(switchingFunction47, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray56 = new double[] { '4', (byte) 10 };
        double[] doubleArray57 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator58 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray56, doubleArray57);
        double double59 = graggBulirschStoerIntegrator58.getCurrentStepStart();
        double[] doubleArray64 = new double[] { '4', (byte) 10 };
        double[] doubleArray65 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator66 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray64, doubleArray65);
        org.apache.commons.math.ode.StepHandler stepHandler67 = graggBulirschStoerIntegrator66.getStepHandler();
        graggBulirschStoerIntegrator58.setStepHandler(stepHandler67);
        graggBulirschStoerIntegrator40.setStepHandler(stepHandler67);
        graggBulirschStoerIntegrator33.setStepHandler(stepHandler67);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction71 = null;
        graggBulirschStoerIntegrator33.addSwitchingFunction(switchingFunction71, 35.0d, 0.0d, (int) (byte) 100);
        org.apache.commons.math.ode.StepHandler stepHandler76 = graggBulirschStoerIntegrator33.getStepHandler();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler76);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 18.708286933869708d + "'", double8 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertNotNull(stepHandler67);
        org.junit.Assert.assertNotNull(stepHandler76);
    }

    @Test
    public void test02175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02175");
        java.lang.Throwable throwable8 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("", throwable8);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.FunctionEvaluationException: ", objArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException16);
        java.lang.Object[] objArray18 = integratorException17.getArguments();
        java.lang.Object[] objArray25 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", objArray25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException26);
        double[] doubleArray33 = new double[] { '4', (byte) 10 };
        double[] doubleArray34 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator35 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray33, doubleArray34);
        double double36 = graggBulirschStoerIntegrator35.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator35.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        java.lang.String str42 = graggBulirschStoerIntegrator35.getName();
        double[] doubleArray48 = new double[] { '4', (byte) 10 };
        double[] doubleArray49 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray48, doubleArray49);
        double double51 = graggBulirschStoerIntegrator50.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator50.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double57 = graggBulirschStoerIntegrator50.getCurrentSignedStepsize();
        double double58 = graggBulirschStoerIntegrator50.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler59 = graggBulirschStoerIntegrator50.getStepHandler();
        double double60 = graggBulirschStoerIntegrator50.getMinStep();
        graggBulirschStoerIntegrator50.setOrderControl((int) (short) 1, (double) 0.0f, (double) 1.0f);
        double[] doubleArray69 = new double[] { '4', (byte) 10 };
        double[] doubleArray70 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator71 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray69, doubleArray70);
        double double72 = graggBulirschStoerIntegrator71.getCurrentStepStart();
        double[] doubleArray77 = new double[] { '4', (byte) 10 };
        double[] doubleArray78 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray77, doubleArray78);
        org.apache.commons.math.ode.StepHandler stepHandler80 = graggBulirschStoerIntegrator79.getStepHandler();
        graggBulirschStoerIntegrator71.setStepHandler(stepHandler80);
        java.lang.Object[] objArray82 = new java.lang.Object[] { integratorException17, derivativeException28, str42, '#', 0.0f, graggBulirschStoerIntegrator71 };
        org.apache.commons.math.ode.IntegratorException integratorException83 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", objArray82);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException84 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.DerivativeException: ", objArray11, (java.lang.Throwable) integratorException83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: Evaluation failed for argument = hi!", objArray11);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 18.708286933869708d + "'", double36 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str42, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 18.708286933869708d + "'", double51 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 18.708286933869708d + "'", double57 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 10.0d + "'", double60 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[]");
        org.junit.Assert.assertNotNull(stepHandler80);
        org.junit.Assert.assertNotNull(objArray82);
    }

    @Test
    public void test02176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02176");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0.0f, 18.708286933869708d, 1.0d, 18.708286933869708d);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, (int) '#', (int) (short) 100, (double) 10.0f);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        switchingFunctionsHandler12.add(switchingFunction13, 35.0d, 100.0d, (int) 'a');
        double double18 = switchingFunctionsHandler12.getEventTime();
        double[] doubleArray24 = new double[] { '4', (byte) 10 };
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator26 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray24, doubleArray25);
        boolean boolean27 = switchingFunctionsHandler12.reset((double) 3, doubleArray24);
        double[] doubleArray36 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray41 = new double[] { '4', (byte) 10 };
        double[] doubleArray42 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray41, doubleArray42);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator44 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray36, doubleArray42);
        double[] doubleArray50 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray55 = new double[] { '4', (byte) 10 };
        double[] doubleArray56 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray55, doubleArray56);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator58 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray50, doubleArray56);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) (short) 100, doubleArray42, doubleArray50);
        boolean boolean60 = switchingFunctionsHandler12.reset((double) (byte) 10, doubleArray50);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler63 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray68 = new double[] { 10, 100, (byte) 0 };
        boolean boolean69 = switchingFunctionsHandler63.reset((double) 0, doubleArray68);
        double[] doubleArray76 = new double[] { 0.0d, 0, (short) 100, 'a', 3.1622776601683795d, (short) 0 };
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1L, (double) 'a', doubleArray68, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (-0.0d), doubleArray50, doubleArray68);
        org.apache.commons.math.ode.StepHandler stepHandler79 = graggBulirschStoerIntegrator78.getStepHandler();
        stepHandler79.reset();
        boolean boolean81 = stepHandler79.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler79);
        stepHandler79.reset();
        java.lang.Class<?> wildcardClass84 = stepHandler79.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 0.0, 100.0, 97.0, 3.1622776601683795, 0.0]");
        org.junit.Assert.assertNotNull(stepHandler79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test02177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02177");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-0.0d), (double) (-1.0f), (double) (byte) 10, (double) 10);
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test02178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02178");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double[] doubleArray10 = new double[] { '4', (byte) 10 };
        double[] doubleArray11 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator12 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray10, doubleArray11);
        double double13 = graggBulirschStoerIntegrator12.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator12.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double19 = graggBulirschStoerIntegrator12.getCurrentSignedStepsize();
        double double20 = graggBulirschStoerIntegrator12.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler21 = graggBulirschStoerIntegrator12.getStepHandler();
        double double22 = graggBulirschStoerIntegrator12.getMinStep();
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        org.apache.commons.math.ode.StepHandler stepHandler30 = graggBulirschStoerIntegrator29.getStepHandler();
        stepHandler30.reset();
        stepHandler30.reset();
        graggBulirschStoerIntegrator12.setStepHandler(stepHandler30);
        boolean boolean34 = stepHandler30.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler30);
        double double36 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction37, 52.0d, (double) 100, (int) '4');
        java.lang.String str42 = graggBulirschStoerIntegrator4.getName();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 18.708286933869708d + "'", double19 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str42, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02179");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler0.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray15 = new double[] { 10, 100, (byte) 0 };
        boolean boolean16 = switchingFunctionsHandler10.reset((double) 0, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler0.reset((double) 100.0f, doubleArray15);
        double[] doubleArray26 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray31 = new double[] { '4', (byte) 10 };
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator33 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray31, doubleArray32);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator34 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray26, doubleArray32);
        double[] doubleArray40 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray45 = new double[] { '4', (byte) 10 };
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray45, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray40, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) (short) 100, doubleArray32, doubleArray40);
        boolean boolean50 = switchingFunctionsHandler0.reset((double) 1, doubleArray40);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler0.evaluateStep(stepInterpolator51);
        boolean boolean53 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        switchingFunctionsHandler57.add(switchingFunction58, 35.0d, 100.0d, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray69 = new double[] { 10, 100, (byte) 0 };
        boolean boolean70 = switchingFunctionsHandler64.reset((double) 0, doubleArray69);
        double[] doubleArray76 = new double[] { '4', (byte) 10 };
        double[] doubleArray77 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray76, doubleArray77);
        boolean boolean79 = switchingFunctionsHandler64.reset(18.708286933869708d, doubleArray77);
        boolean boolean80 = switchingFunctionsHandler57.reset((double) (byte) 0, doubleArray77);
        boolean boolean81 = switchingFunctionsHandler55.reset((double) 0, doubleArray77);
        switchingFunctionsHandler0.stepAccepted((double) 10.0f, doubleArray77);
        java.lang.Class<?> wildcardClass83 = switchingFunctionsHandler0.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test02180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02180");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getMinStep();
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = graggBulirschStoerIntegrator23.getStepHandler();
        stepHandler24.reset();
        stepHandler24.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler24);
        double double28 = graggBulirschStoerIntegrator6.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction29, (double) (-1), (double) (short) 10, (int) (short) 10);
        graggBulirschStoerIntegrator6.setInitialStepSize((double) (short) 100);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
    }

    @Test
    public void test02181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02181");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Object[]) strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: hi!", strArray5);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException9);
        java.lang.String str11 = mathException10.toString();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!" + "'", str11, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!");
    }

    @Test
    public void test02182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02182");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getMinStep();
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = graggBulirschStoerIntegrator23.getStepHandler();
        stepHandler24.reset();
        stepHandler24.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler24);
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 3, (double) (short) 100, (double) 2, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler33 = graggBulirschStoerIntegrator6.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction34, (double) 1.0f, 18.708286933869708d, (int) (short) -1);
        double double39 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        java.lang.String str40 = graggBulirschStoerIntegrator6.getName();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str40, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02183");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler0.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray15 = new double[] { 10, 100, (byte) 0 };
        boolean boolean16 = switchingFunctionsHandler10.reset((double) 0, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler0.reset((double) 100.0f, doubleArray15);
        double double18 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler0.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler0.add(switchingFunction21, (double) (short) 100, (double) (byte) 0, 2);
        double double26 = switchingFunctionsHandler0.getEventTime();
        double double27 = switchingFunctionsHandler0.getEventTime();
        double double28 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
    }

    @Test
    public void test02184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02184");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator11.addSwitchingFunction(switchingFunction18, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        double double30 = graggBulirschStoerIntegrator29.getCurrentStepStart();
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = graggBulirschStoerIntegrator37.getStepHandler();
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator11.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 100, (int) ' ', (double) (byte) 0);
        double[] doubleArray51 = new double[] { '4', (byte) 10 };
        double[] doubleArray52 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator53 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray51, doubleArray52);
        double double54 = graggBulirschStoerIntegrator53.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator53.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double60 = graggBulirschStoerIntegrator53.getCurrentSignedStepsize();
        double double61 = graggBulirschStoerIntegrator53.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler62 = graggBulirschStoerIntegrator53.getStepHandler();
        boolean boolean63 = stepHandler62.requiresDenseOutput();
        boolean boolean64 = stepHandler62.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler62);
        double double66 = graggBulirschStoerIntegrator4.getMinStep();
        double[] doubleArray71 = new double[] { '4', (byte) 10 };
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray71, doubleArray72);
        double double74 = graggBulirschStoerIntegrator73.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator73.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double80 = graggBulirschStoerIntegrator73.getCurrentSignedStepsize();
        double double81 = graggBulirschStoerIntegrator73.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler82 = graggBulirschStoerIntegrator73.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler82);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction84 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction84, (double) 0.0f, (double) '#', (int) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler89 = graggBulirschStoerIntegrator4.getStepHandler();
        double double90 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 2, 35.0d, (double) ' ', (double) 0.0f);
        double double96 = graggBulirschStoerIntegrator4.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 18.708286933869708d + "'", double54 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 18.708286933869708d + "'", double60 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 18.708286933869708d + "'", double74 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 18.708286933869708d + "'", double80 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(stepHandler82);
        org.junit.Assert.assertNotNull(stepHandler89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
    }

    @Test
    public void test02185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02185");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        java.lang.String str8 = graggBulirschStoerIntegrator6.getName();
        graggBulirschStoerIntegrator6.setInitialStepSize((double) (short) 10);
        java.lang.String str11 = graggBulirschStoerIntegrator6.getName();
        graggBulirschStoerIntegrator6.setInitialStepSize(18.708286933869708d);
        java.lang.String str14 = graggBulirschStoerIntegrator6.getName();
        double double15 = graggBulirschStoerIntegrator6.getMaxStep();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) (short) -1, (double) 10, 10.0d, 10.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str8, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str11, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str14, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 35.0d + "'", double15 == 35.0d);
    }

    @Test
    public void test02186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02186");
        java.lang.Object[] objArray5 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("", throwable9);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", objArray5, (java.lang.Throwable) mathException11);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException12);
        java.lang.Throwable[] throwableArray14 = integratorException13.getSuppressed();
        java.lang.Object[] objArray25 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", objArray25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray25);
        java.lang.Object[] objArray28 = integratorException27.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException(35.0d, "", objArray28);
        java.lang.Object[] objArray36 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("", objArray36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException37);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", objArray28, (java.lang.Throwable) derivativeException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) mathException41);
        java.lang.String str43 = functionEvaluationException42.toString();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!, 10]");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!" + "'", str43, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!");
    }

    @Test
    public void test02187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02187");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, 35.0d, 100.0d, (int) 'a');
        double double6 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray12 = new double[] { '4', (byte) 10 };
        double[] doubleArray13 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray12, doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.reset((double) 3, doubleArray12);
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray27 = new double[] { 10, 100, (byte) 0 };
        boolean boolean28 = switchingFunctionsHandler22.reset((double) 0, doubleArray27);
        double[] doubleArray34 = new double[] { '4', (byte) 10 };
        double[] doubleArray35 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator36 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray34, doubleArray35);
        boolean boolean37 = switchingFunctionsHandler22.reset(18.708286933869708d, doubleArray35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        switchingFunctionsHandler38.add(switchingFunction39, 35.0d, 100.0d, (int) 'a');
        double double44 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray50 = new double[] { '4', (byte) 10 };
        double[] doubleArray51 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator52 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray50, doubleArray51);
        boolean boolean53 = switchingFunctionsHandler38.reset((double) 3, doubleArray50);
        double[] doubleArray62 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray67 = new double[] { '4', (byte) 10 };
        double[] doubleArray68 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray67, doubleArray68);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator70 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray62, doubleArray68);
        double[] doubleArray76 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray81 = new double[] { '4', (byte) 10 };
        double[] doubleArray82 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator83 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray81, doubleArray82);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator84 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray76, doubleArray82);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator85 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) (short) 100, doubleArray68, doubleArray76);
        boolean boolean86 = switchingFunctionsHandler38.reset((double) (byte) 10, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator87 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0L, (double) 2, doubleArray35, doubleArray76);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler88 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray93 = new double[] { 10, 100, (byte) 0 };
        boolean boolean94 = switchingFunctionsHandler88.reset((double) 0, doubleArray93);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator95 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), 2.0d, doubleArray76, doubleArray93);
        boolean boolean96 = switchingFunctionsHandler0.reset((double) (byte) 100, doubleArray93);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator97 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean98 = switchingFunctionsHandler0.evaluateStep(stepInterpolator97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test02188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02188");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator11.addSwitchingFunction(switchingFunction18, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        double double30 = graggBulirschStoerIntegrator29.getCurrentStepStart();
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = graggBulirschStoerIntegrator37.getStepHandler();
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator11.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler38);
        double double42 = graggBulirschStoerIntegrator4.getMinStep();
        graggBulirschStoerIntegrator4.setOrderControl(3, 3.1622776601683795d, (double) (-1.0f));
        double double47 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setInitialStepSize(100.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler48);
    }

    @Test
    public void test02189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02189");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray13 = new double[] { 10, 100, (byte) 0 };
        boolean boolean14 = switchingFunctionsHandler8.reset((double) 0, doubleArray13);
        double[] doubleArray21 = new double[] { 0.0d, 0, (short) 100, 'a', 3.1622776601683795d, (short) 0 };
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator22 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1L, (double) 'a', doubleArray13, doubleArray21);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray28 = new double[] { 10, 100, (byte) 0 };
        boolean boolean29 = switchingFunctionsHandler23.reset((double) 0, doubleArray28);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler23.evaluateStep(stepInterpolator30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray38 = new double[] { 10, 100, (byte) 0 };
        boolean boolean39 = switchingFunctionsHandler33.reset((double) 0, doubleArray38);
        boolean boolean40 = switchingFunctionsHandler23.reset((double) 100.0f, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, (double) (byte) -1, doubleArray13, doubleArray38);
        double[] doubleArray44 = new double[] {};
        double[] doubleArray50 = new double[] { (short) 100, 3, 'a' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        switchingFunctionsHandler51.add(switchingFunction52, 35.0d, 100.0d, (int) 'a');
        double double57 = switchingFunctionsHandler51.getEventTime();
        double[] doubleArray63 = new double[] { '4', (byte) 10 };
        double[] doubleArray64 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator65 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray63, doubleArray64);
        boolean boolean66 = switchingFunctionsHandler51.reset((double) 3, doubleArray63);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', 10.0d, doubleArray50, doubleArray63);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-1.0d), (double) (short) 100, doubleArray44, doubleArray63);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-1.0d), (double) 100L, doubleArray13, doubleArray63);
        double[] doubleArray75 = new double[] { (short) 100, 3, 'a' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler76 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction77 = null;
        switchingFunctionsHandler76.add(switchingFunction77, 35.0d, 100.0d, (int) 'a');
        double double82 = switchingFunctionsHandler76.getEventTime();
        double[] doubleArray88 = new double[] { '4', (byte) 10 };
        double[] doubleArray89 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator90 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray88, doubleArray89);
        boolean boolean91 = switchingFunctionsHandler76.reset((double) 3, doubleArray88);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator92 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', 10.0d, doubleArray75, doubleArray88);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator93 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(52.0d, (-0.0d), doubleArray13, doubleArray75);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction94 = null;
        graggBulirschStoerIntegrator93.addSwitchingFunction(switchingFunction94, 100.0d, (double) 10.0f, 0);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 100.0, 97.0, 3.1622776601683795, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 3.0, 97.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 3.0, 97.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test02190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02190");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator6.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        double double24 = graggBulirschStoerIntegrator23.getCurrentStepStart();
        graggBulirschStoerIntegrator23.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        graggBulirschStoerIntegrator23.addSwitchingFunction(switchingFunction30, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray39 = new double[] { '4', (byte) 10 };
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray39, doubleArray40);
        double double42 = graggBulirschStoerIntegrator41.getCurrentStepStart();
        double[] doubleArray47 = new double[] { '4', (byte) 10 };
        double[] doubleArray48 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray47, doubleArray48);
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator49.getStepHandler();
        graggBulirschStoerIntegrator41.setStepHandler(stepHandler50);
        graggBulirschStoerIntegrator23.setStepHandler(stepHandler50);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        stepHandler50.handleStep(stepInterpolator53, false);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler50);
        double double57 = graggBulirschStoerIntegrator6.getMaxStep();
        java.lang.Class<?> wildcardClass58 = graggBulirschStoerIntegrator6.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 35.0d + "'", double57 == 35.0d);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test02191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02191");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setStabilityCheck(false, (int) 'a', 10, (double) 2);
        double double21 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setOrderControl((int) ' ', (double) 1, Double.NaN);
        graggBulirschStoerIntegrator6.setInterpolationControl(false, 2);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 18.708286933869708d + "'", double21 == 18.708286933869708d);
    }

    @Test
    public void test02192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02192");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) '4', (double) '#', 3.1622776601683795d, 0.0d);
        graggBulirschStoerIntegrator4.setOrderControl((int) '#', (-0.0d), 0.0d);
        double double9 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test02193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02193");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) '#', (double) '4', (double) (byte) 0);
        double double5 = graggBulirschStoerIntegrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
    }

    @Test
    public void test02194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02194");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 9.849");
    }

    @Test
    public void test02195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02195");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getMinStep();
        graggBulirschStoerIntegrator6.setStepsizeControl(0.0d, (double) 0, (double) ' ', (-1.0d));
        graggBulirschStoerIntegrator6.setInterpolationControl(false, (int) '4');
        double[] doubleArray29 = new double[] { '4', (byte) 10 };
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray29, doubleArray30);
        double double32 = graggBulirschStoerIntegrator31.getCurrentStepStart();
        graggBulirschStoerIntegrator31.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        graggBulirschStoerIntegrator31.addSwitchingFunction(switchingFunction38, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray47 = new double[] { '4', (byte) 10 };
        double[] doubleArray48 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray47, doubleArray48);
        double double50 = graggBulirschStoerIntegrator49.getCurrentStepStart();
        double[] doubleArray55 = new double[] { '4', (byte) 10 };
        double[] doubleArray56 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray55, doubleArray56);
        org.apache.commons.math.ode.StepHandler stepHandler58 = graggBulirschStoerIntegrator57.getStepHandler();
        graggBulirschStoerIntegrator49.setStepHandler(stepHandler58);
        graggBulirschStoerIntegrator31.setStepHandler(stepHandler58);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator61 = null;
        stepHandler58.handleStep(stepInterpolator61, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator64 = null;
        stepHandler58.handleStep(stepInterpolator64, false);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler58);
        double double68 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[]");
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 18.708286933869708d + "'", double68 == 18.708286933869708d);
    }

    @Test
    public void test02196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02196");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10L, 0.0d, (double) (byte) -1, (double) (short) -1);
    }

    @Test
    public void test02197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02197");
        double[] doubleArray2 = new double[] {};
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler3.add(switchingFunction4, 35.0d, 100.0d, (int) 'a');
        double double9 = switchingFunctionsHandler3.getEventTime();
        double[] doubleArray15 = new double[] { '4', (byte) 10 };
        double[] doubleArray16 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator17 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray15, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler3.reset((double) 3, doubleArray15);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (double) 10, doubleArray2, doubleArray15);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        double[] doubleArray25 = new double[] { '4', (byte) 10 };
        double[] doubleArray26 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator27 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray25, doubleArray26);
        double double28 = graggBulirschStoerIntegrator27.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator27.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double34 = graggBulirschStoerIntegrator27.getCurrentSignedStepsize();
        double double35 = graggBulirschStoerIntegrator27.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler36 = graggBulirschStoerIntegrator27.getStepHandler();
        double double37 = graggBulirschStoerIntegrator27.getMinStep();
        graggBulirschStoerIntegrator27.setStepsizeControl(0.0d, (double) 0, (double) ' ', (-1.0d));
        graggBulirschStoerIntegrator27.setInitialStepSize((-1.0d));
        org.apache.commons.math.ode.StepHandler stepHandler45 = graggBulirschStoerIntegrator27.getStepHandler();
        stepHandler45.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        stepHandler45.handleStep(stepInterpolator47, false);
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler45);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator19.getStepHandler();
        double double52 = graggBulirschStoerIntegrator19.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 18.708286933869708d + "'", double28 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 18.708286933869708d + "'", double34 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 10.0d + "'", double52 == 10.0d);
    }

    @Test
    public void test02198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02198");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        java.lang.Object[] objArray11 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable15 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", throwable15);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!", objArray11, (java.lang.Throwable) mathException17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException18);
        java.lang.Throwable[] throwableArray20 = integratorException19.getSuppressed();
        java.lang.Object[] objArray28 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("", objArray28);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray28);
        java.lang.Object[] objArray31 = integratorException30.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) integratorException30);
        functionEvaluationException5.addSuppressed((java.lang.Throwable) integratorException30);
        java.lang.Object[] objArray34 = integratorException30.getArguments();
        java.lang.Object[] objArray35 = integratorException30.getArguments();
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", objArray35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", objArray35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.MathException: hi!", objArray35);
        java.lang.Class<?> wildcardClass39 = functionEvaluationException38.getClass();
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, 10]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test02199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02199");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        java.lang.String str6 = graggBulirschStoerIntegrator4.getName();
        double double7 = graggBulirschStoerIntegrator4.getMaxStep();
        double double8 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler9 = null;
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator4.setStepHandler(stepHandler9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str6, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test02200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02200");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getMinStep();
        graggBulirschStoerIntegrator6.setStepsizeControl(0.0d, (double) 0, (double) ' ', (-1.0d));
        double double22 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setInitialStepSize(1.0d);
        double double25 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction26, (double) '#', (double) 1.0f, (int) (short) 100);
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        double double38 = graggBulirschStoerIntegrator37.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator37.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double44 = graggBulirschStoerIntegrator37.getCurrentSignedStepsize();
        double double45 = graggBulirschStoerIntegrator37.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator37.getStepHandler();
        double double47 = graggBulirschStoerIntegrator37.getMinStep();
        double double48 = graggBulirschStoerIntegrator37.getCurrentSignedStepsize();
        double double49 = graggBulirschStoerIntegrator37.getCurrentStepStart();
        double double50 = graggBulirschStoerIntegrator37.getMaxStep();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, 10.0d, (double) 100, 18.708286933869708d);
        double[] doubleArray60 = new double[] { '4', (byte) 10 };
        double[] doubleArray61 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator62 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray60, doubleArray61);
        double double63 = graggBulirschStoerIntegrator62.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator62.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double69 = graggBulirschStoerIntegrator62.getCurrentSignedStepsize();
        double double70 = graggBulirschStoerIntegrator62.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler71 = graggBulirschStoerIntegrator62.getStepHandler();
        double double72 = graggBulirschStoerIntegrator62.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler73 = graggBulirschStoerIntegrator62.getStepHandler();
        graggBulirschStoerIntegrator55.setStepHandler(stepHandler73);
        graggBulirschStoerIntegrator37.setStepHandler(stepHandler73);
        double double76 = graggBulirschStoerIntegrator37.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler77 = graggBulirschStoerIntegrator37.getStepHandler();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler77);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 18.708286933869708d + "'", double25 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 18.708286933869708d + "'", double38 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 18.708286933869708d + "'", double44 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 18.708286933869708d + "'", double48 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 35.0d + "'", double50 == 35.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 18.708286933869708d + "'", double63 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 18.708286933869708d + "'", double69 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(stepHandler71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 10.0d + "'", double72 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler73);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertNotNull(stepHandler77);
    }

    @Test
    public void test02201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02201");
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable5);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("", throwable5);
        java.lang.Object[] objArray8 = mathException7.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException7);
        java.lang.Throwable[] throwableArray10 = mathException7.getSuppressed();
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray10);
        java.lang.Class<?> wildcardClass13 = throwableArray10.getClass();
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02202");
        java.lang.Object[] objArray17 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", objArray17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray17);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException(35.0d, "", objArray20);
        java.lang.Object[] objArray28 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("", objArray28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException29);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!", objArray20, (java.lang.Throwable) derivativeException31);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", objArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "", objArray20);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("Evaluation failed for argument = {0}", objArray20);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: Gragg-Bulirsch-Stoer", objArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.MathException: Evaluation failed for argument = 97", (java.lang.Throwable) integratorException37);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!, 1, 10.0, 4, 100]");
    }

    @Test
    public void test02203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02203");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setInterpolationControl(true, (int) (short) 1);
        java.lang.String str19 = graggBulirschStoerIntegrator6.getName();
        java.lang.String str20 = graggBulirschStoerIntegrator6.getName();
        double double21 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str19, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str20, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double21));
    }

    @Test
    public void test02204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02204");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double[] doubleArray17 = new double[] { '4', (byte) 10 };
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray17, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        org.apache.commons.math.ode.StepHandler stepHandler26 = graggBulirschStoerIntegrator19.getStepHandler();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler26);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction28, (double) 0L, 100.0d, 0);
        graggBulirschStoerIntegrator6.setStabilityCheck(false, (int) '4', (int) 'a', (double) (byte) 100);
        double double38 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double39 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 18.708286933869708d + "'", double20 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 18.708286933869708d + "'", double38 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 18.708286933869708d + "'", double39 == 18.708286933869708d);
    }

    @Test
    public void test02205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02205");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler2.add(switchingFunction3, 35.0d, 100.0d, (int) 'a');
        double double8 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray14 = new double[] { '4', (byte) 10 };
        double[] doubleArray15 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator16 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray14, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler2.reset((double) 3, doubleArray14);
        double[] doubleArray26 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray31 = new double[] { '4', (byte) 10 };
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator33 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray31, doubleArray32);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator34 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray26, doubleArray32);
        double[] doubleArray40 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray45 = new double[] { '4', (byte) 10 };
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray45, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray40, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) (short) 100, doubleArray32, doubleArray40);
        boolean boolean50 = switchingFunctionsHandler2.reset((double) (byte) 10, doubleArray40);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray58 = new double[] { 10, 100, (byte) 0 };
        boolean boolean59 = switchingFunctionsHandler53.reset((double) 0, doubleArray58);
        double[] doubleArray66 = new double[] { 0.0d, 0, (short) 100, 'a', 3.1622776601683795d, (short) 0 };
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1L, (double) 'a', doubleArray58, doubleArray66);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (-0.0d), doubleArray40, doubleArray58);
        org.apache.commons.math.ode.StepHandler stepHandler69 = graggBulirschStoerIntegrator68.getStepHandler();
        double double70 = graggBulirschStoerIntegrator68.getMinStep();
        double double71 = graggBulirschStoerIntegrator68.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction72 = null;
        graggBulirschStoerIntegrator68.addSwitchingFunction(switchingFunction72, 3.0d, 1.0d, 1);
        graggBulirschStoerIntegrator68.setInterpolationControl(false, 10);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 100.0, 97.0, 3.1622776601683795, 0.0]");
        org.junit.Assert.assertNotNull(stepHandler69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
    }

    @Test
    public void test02206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02206");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setOrderControl((-1), (-1.0d), (double) 10L);
        double[] doubleArray16 = new double[] { '4', (byte) 10 };
        double[] doubleArray17 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator18 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray16, doubleArray17);
        org.apache.commons.math.ode.StepHandler stepHandler19 = graggBulirschStoerIntegrator18.getStepHandler();
        stepHandler19.reset();
        stepHandler19.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler19);
        org.apache.commons.math.ode.StepHandler stepHandler23 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setStepsizeControl(18.708286933869708d, 18.708286933869708d, (double) 0, (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction29, (double) 0L, (double) (byte) 100, (int) (short) 10);
        org.apache.commons.math.ode.StepHandler stepHandler34 = graggBulirschStoerIntegrator6.getStepHandler();
        java.lang.Class<?> wildcardClass35 = stepHandler34.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]");
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertNotNull(stepHandler23);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test02207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02207");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException2);
        java.lang.Object[] objArray4 = mathException3.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ");
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("", objArray4, (java.lang.Throwable) functionEvaluationException7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException8);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
    }

    @Test
    public void test02208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02208");
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", objArray16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray16);
        java.lang.Object[] objArray19 = integratorException18.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "Gragg-Bulirsch-Stoer", objArray19);
        java.lang.Throwable throwable26 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", throwable26);
        java.lang.Object[] objArray29 = mathException28.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.FunctionEvaluationException: ", objArray29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: ", objArray19, (java.lang.Throwable) functionEvaluationException30);
        java.lang.Object[] objArray37 = new java.lang.Object[] { '4', 2, (byte) 10 };
        java.lang.Object[] objArray45 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("", objArray45);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray45);
        java.lang.Object[] objArray48 = integratorException47.getArguments();
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("hi!", objArray37, (java.lang.Throwable) integratorException47);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) integratorException47);
        functionEvaluationException30.addSuppressed((java.lang.Throwable) integratorException47);
        java.lang.Object[] objArray58 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("", objArray58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException59);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException59);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException61);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.ode.IntegratorException integratorException67 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException66);
        mathException63.addSuppressed((java.lang.Throwable) integratorException67);
        integratorException47.addSuppressed((java.lang.Throwable) mathException63);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Throwable) mathException63);
        java.lang.Object[] objArray71 = mathException63.getArguments();
        java.lang.Object[] objArray78 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("", objArray78);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException79);
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException79);
        org.apache.commons.math.ode.DerivativeException derivativeException82 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException81);
        org.apache.commons.math.ode.IntegratorException integratorException83 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException83);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "Evaluation failed for argument = -1", objArray71, (java.lang.Throwable) mathException84);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException86 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", objArray71);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[4, 2, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[4, 2, 10]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[hi!, 1, 10.0, 4, 100]");
    }

    @Test
    public void test02209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02209");
        java.lang.Object[] objArray8 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("", objArray8);
        java.lang.Throwable[] throwableArray10 = mathException9.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "Gragg-Bulirsch-Stoer");
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException15);
        java.lang.Object[] objArray17 = integratorException16.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 10L);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 10", objArray17, (java.lang.Throwable) functionEvaluationException19);
        functionEvaluationException11.addSuppressed((java.lang.Throwable) functionEvaluationException19);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
    }

    @Test
    public void test02210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02210");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction7, (double) ' ', (double) ' ', (int) '#');
        graggBulirschStoerIntegrator6.setStepsizeControl(10.0d, (double) (-1), (double) (short) -1, (double) 0L);
        graggBulirschStoerIntegrator6.setInitialStepSize(18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
    }

    @Test
    public void test02211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02211");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setInterpolationControl(true, (int) (short) 1);
        java.lang.String str19 = graggBulirschStoerIntegrator6.getName();
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator6.getStepHandler();
        java.lang.String str21 = graggBulirschStoerIntegrator6.getName();
        graggBulirschStoerIntegrator6.setInitialStepSize((double) 2);
        graggBulirschStoerIntegrator6.setInitialStepSize((double) (-1));
        double double26 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double double27 = graggBulirschStoerIntegrator6.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str19, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str21, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
    }

    @Test
    public void test02212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02212");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double[] doubleArray20 = new double[] { '4', (byte) 10 };
        double[] doubleArray21 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator22 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray20, doubleArray21);
        double double23 = graggBulirschStoerIntegrator22.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator22.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double29 = graggBulirschStoerIntegrator22.getCurrentSignedStepsize();
        double double30 = graggBulirschStoerIntegrator22.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler31 = graggBulirschStoerIntegrator22.getStepHandler();
        double double32 = graggBulirschStoerIntegrator22.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler33 = graggBulirschStoerIntegrator22.getStepHandler();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler33);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction35, 0.0d, (-0.0d), (int) (byte) 0);
        double double40 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) (short) 0, 35.0d, 22.80350850198276d, 2.0d);
        graggBulirschStoerIntegrator6.setStepsizeControl(18.566368063325246d, 10.0d, (double) 3, (double) 1L);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 18.708286933869708d + "'", double23 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 18.708286933869708d + "'", double29 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 18.708286933869708d + "'", double40 == 18.708286933869708d);
    }

    @Test
    public void test02213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02213");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler2.add(switchingFunction3, 35.0d, 100.0d, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray14 = new double[] { 10, 100, (byte) 0 };
        boolean boolean15 = switchingFunctionsHandler9.reset((double) 0, doubleArray14);
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        boolean boolean24 = switchingFunctionsHandler9.reset(18.708286933869708d, doubleArray22);
        boolean boolean25 = switchingFunctionsHandler2.reset((double) (byte) 0, doubleArray22);
        boolean boolean26 = switchingFunctionsHandler0.reset((double) 0, doubleArray22);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler0.evaluateStep(stepInterpolator27);
        boolean boolean29 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        switchingFunctionsHandler0.add(switchingFunction30, 3.0d, (double) (short) 10, (-1));
        boolean boolean35 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray44 = new double[] { 10, 100, (byte) 0 };
        boolean boolean45 = switchingFunctionsHandler39.reset((double) 0, doubleArray44);
        double[] doubleArray52 = new double[] { 0.0d, 0, (short) 100, 'a', 3.1622776601683795d, (short) 0 };
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator53 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1L, (double) 'a', doubleArray44, doubleArray52);
        boolean boolean54 = switchingFunctionsHandler0.reset(35.0d, doubleArray52);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean56 = switchingFunctionsHandler0.evaluateStep(stepInterpolator55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 100.0, 97.0, 3.1622776601683795, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test02214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02214");
        java.lang.Object[] objArray11 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("", objArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) derivativeException14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException16);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", objArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = hi!", objArray20);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", objArray20);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
    }

    @Test
    public void test02215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02215");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "Evaluation failed for argument = {0}");
        double double4 = functionEvaluationException3.getArgument();
        java.lang.Throwable[] throwableArray5 = functionEvaluationException3.getSuppressed();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.Object[] objArray20 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("", objArray20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException21);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray12, (java.lang.Throwable) integratorException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException31);
        java.lang.Object[] objArray33 = integratorException32.getArguments();
        java.lang.Throwable throwable39 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("", throwable39);
        java.lang.Object[] objArray42 = mathException41.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.FunctionEvaluationException: ", objArray42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: ", objArray33, (java.lang.Throwable) functionEvaluationException43);
        java.lang.Object[] objArray48 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable52 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("", throwable52);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("hi!", objArray48, (java.lang.Throwable) mathException54);
        functionEvaluationException43.addSuppressed((java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray12);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray5, (java.lang.Throwable) mathException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException59);
        java.lang.Throwable[] throwableArray62 = mathException61.getSuppressed();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 2.0d + "'", double4 == 2.0d);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!, 10]");
        org.junit.Assert.assertNotNull(throwableArray62);
    }

    @Test
    public void test02216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02216");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray9, (java.lang.Throwable) functionEvaluationException14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray9);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", (java.lang.Object[]) strArray9);
        java.lang.Object[] objArray28 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("", objArray28);
        java.lang.Throwable[] throwableArray30 = mathException29.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "", (java.lang.Object[]) throwableArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.FunctionEvaluationException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray30, (java.lang.Throwable) functionEvaluationException34);
        java.lang.Throwable[] throwableArray36 = functionEvaluationException34.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray9, (java.lang.Throwable) functionEvaluationException34);
        java.lang.String str38 = functionEvaluationException37.toString();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: " + "'", str38, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test02217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02217");
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("", objArray10);
        java.lang.Throwable[] throwableArray12 = mathException11.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "", (java.lang.Object[]) throwableArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.FunctionEvaluationException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) functionEvaluationException16);
        java.lang.String str18 = functionEvaluationException17.getPattern();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer" + "'", str18, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02218");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ");
    }

    @Test
    public void test02219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02219");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setInterpolationControl(true, (int) (short) 1);
        java.lang.String str19 = graggBulirschStoerIntegrator6.getName();
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator6.getStepHandler();
        java.lang.String str21 = graggBulirschStoerIntegrator6.getName();
        graggBulirschStoerIntegrator6.setInitialStepSize((double) (short) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction24, 3.0d, 97.0d, 1);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str19, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str21, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02220");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray8);
        java.lang.Object[] objArray17 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", objArray17);
        java.lang.Throwable[] throwableArray19 = mathException18.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException(3.1622776601683795d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: ", strArray8);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray8);
        java.lang.Throwable[] throwableArray24 = mathException23.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException23);
        java.lang.String str26 = mathException23.getPattern();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str26, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test02221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02221");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        java.lang.String str8 = graggBulirschStoerIntegrator6.getName();
        graggBulirschStoerIntegrator6.setInitialStepSize((double) (short) 10);
        java.lang.String str11 = graggBulirschStoerIntegrator6.getName();
        java.lang.String str12 = graggBulirschStoerIntegrator6.getName();
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction14, 97.0d, (double) (short) 1, (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction19, (double) (short) -1, 3.0d, (int) (short) 0);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str8, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str11, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str12, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
    }

    @Test
    public void test02222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02222");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator11.addSwitchingFunction(switchingFunction18, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        double double30 = graggBulirschStoerIntegrator29.getCurrentStepStart();
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = graggBulirschStoerIntegrator37.getStepHandler();
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator11.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 100, (int) ' ', (double) (byte) 0);
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (short) 0, 3, (double) '4');
        double[] doubleArray56 = new double[] { '4', (byte) 10 };
        double[] doubleArray57 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator58 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray56, doubleArray57);
        double double59 = graggBulirschStoerIntegrator58.getCurrentStepStart();
        double[] doubleArray64 = new double[] { '4', (byte) 10 };
        double[] doubleArray65 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator66 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray64, doubleArray65);
        org.apache.commons.math.ode.StepHandler stepHandler67 = graggBulirschStoerIntegrator66.getStepHandler();
        graggBulirschStoerIntegrator58.setStepHandler(stepHandler67);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        stepHandler67.handleStep(stepInterpolator69, false);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler67);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (byte) 10, (double) 100, (double) 0.0f, 100.0d);
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (int) (byte) 0);
        graggBulirschStoerIntegrator4.setInitialStepSize(9.848857801796104d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertNotNull(stepHandler67);
    }

    @Test
    public void test02223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02223");
        java.lang.Object[] objArray9 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("", objArray9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, (java.lang.Throwable) derivativeException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) functionEvaluationException13);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException13);
        double double16 = functionEvaluationException13.getArgument();
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException13);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1.0d) + "'", double16 == (-1.0d));
    }

    @Test
    public void test02224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02224");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler0.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray15 = new double[] { 10, 100, (byte) 0 };
        boolean boolean16 = switchingFunctionsHandler10.reset((double) 0, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler0.reset((double) 100.0f, doubleArray15);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler0.add(switchingFunction18, (double) (byte) 1, (double) 0, (int) (short) -1);
        double double23 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler0.add(switchingFunction24, (double) (short) 1, (double) 10L, (int) 'a');
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = switchingFunctionsHandler0.evaluateStep(stepInterpolator29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test02225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02225");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        double[] doubleArray12 = new double[] { '4', (byte) 10 };
        double[] doubleArray13 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray12, doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.reset(18.708286933869708d, doubleArray13);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler0.add(switchingFunction16, Double.NaN, (-1.0d), (int) (byte) 10);
        double[] doubleArray25 = new double[] { (byte) 10, 1L, (byte) 10 };
        boolean boolean26 = switchingFunctionsHandler0.reset((double) 10L, doubleArray25);
        boolean boolean27 = switchingFunctionsHandler0.stop();
        boolean boolean28 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler0.add(switchingFunction29, (double) (-1), (double) 1L, (int) 'a');
        boolean boolean34 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        switchingFunctionsHandler0.add(switchingFunction35, 1.0d, (-1.0d), (int) (short) 1);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test02226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02226");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator11.addSwitchingFunction(switchingFunction18, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        double double30 = graggBulirschStoerIntegrator29.getCurrentStepStart();
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = graggBulirschStoerIntegrator37.getStepHandler();
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator11.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 100, (int) ' ', (double) (byte) 0);
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (short) 0, 3, (double) '4');
        double double52 = graggBulirschStoerIntegrator4.getMinStep();
        graggBulirschStoerIntegrator4.setOrderControl(2, 0.0d, 0.0d);
        graggBulirschStoerIntegrator4.setOrderControl((int) (byte) 10, 0.0d, (double) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler61 = graggBulirschStoerIntegrator4.getStepHandler();
        double double62 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler61);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
    }

    @Test
    public void test02227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02227");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f);
        java.lang.String str4 = functionEvaluationException3.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        functionEvaluationException3.addSuppressed((java.lang.Throwable) functionEvaluationException6);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Throwable) functionEvaluationException6);
        java.lang.String str9 = functionEvaluationException8.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Evaluation failed for argument = {0}" + "'", str4, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer" + "'", str9, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02228");
        java.lang.String[] strArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.ode.DerivativeException derivativeException2 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = -1", strArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02229");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler2.add(switchingFunction3, 35.0d, 100.0d, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray14 = new double[] { 10, 100, (byte) 0 };
        boolean boolean15 = switchingFunctionsHandler9.reset((double) 0, doubleArray14);
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        boolean boolean24 = switchingFunctionsHandler9.reset(18.708286933869708d, doubleArray22);
        boolean boolean25 = switchingFunctionsHandler2.reset((double) (byte) 0, doubleArray22);
        boolean boolean26 = switchingFunctionsHandler0.reset((double) 0, doubleArray22);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler0.evaluateStep(stepInterpolator27);
        boolean boolean29 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler0.evaluateStep(stepInterpolator30);
        double double32 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test02230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02230");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        java.lang.Object[] objArray18 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("", objArray18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException22);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray10, (java.lang.Throwable) integratorException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException29);
        java.lang.Object[] objArray31 = integratorException30.getArguments();
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("", throwable37);
        java.lang.Object[] objArray40 = mathException39.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.FunctionEvaluationException: ", objArray40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: ", objArray31, (java.lang.Throwable) functionEvaluationException41);
        java.lang.Object[] objArray46 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable50 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("", throwable50);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("hi!", objArray46, (java.lang.Throwable) mathException52);
        functionEvaluationException41.addSuppressed((java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray10, (java.lang.Throwable) mathException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", strArray10);
        java.lang.Throwable[] throwableArray60 = derivativeException59.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Object[]) throwableArray60);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[hi!, 10]");
        org.junit.Assert.assertNotNull(throwableArray60);
    }

    @Test
    public void test02231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02231");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setInitialStepSize(35.0d);
        double double10 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setInitialStepSize((-1.0d));
        graggBulirschStoerIntegrator6.setInitialStepSize(100.0d);
        graggBulirschStoerIntegrator6.setStabilityCheck(true, 0, 100, (double) 0.0f);
        double double20 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction21, (double) 1, (double) 10, (int) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 18.708286933869708d + "'", double10 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 18.708286933869708d + "'", double20 == 18.708286933869708d);
    }

    @Test
    public void test02232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02232");
        java.lang.Object[] objArray8 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("", objArray8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) derivativeException11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException13);
        java.lang.Object[] objArray15 = functionEvaluationException13.getArguments();
        java.lang.Throwable[] throwableArray16 = functionEvaluationException13.getSuppressed();
        java.lang.Object[] objArray27 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", objArray27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException28);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException28);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException30);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException31);
        java.lang.Object[] objArray33 = derivativeException31.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray33, (java.lang.Throwable) mathException37);
        java.lang.Object[] objArray48 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("", objArray48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException49);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, (java.lang.Throwable) derivativeException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, (java.lang.Throwable) functionEvaluationException52);
        java.lang.Throwable[] throwableArray54 = functionEvaluationException53.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.ode.DerivativeException: ");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray54, (java.lang.Throwable) functionEvaluationException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = hi!", objArray33, (java.lang.Throwable) functionEvaluationException60);
        java.lang.String str63 = functionEvaluationException60.getPattern();
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) functionEvaluationException60);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: " + "'", str63, "org.apache.commons.math.FunctionEvaluationException: ");
    }

    @Test
    public void test02233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02233");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction8, 0.0d, (double) 0L, (int) (short) 1);
        double double13 = graggBulirschStoerIntegrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler14 = graggBulirschStoerIntegrator4.getStepHandler();
        java.lang.Class<?> wildcardClass15 = stepHandler14.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02234");
        java.lang.Object[] objArray7 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("", objArray7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("Gragg-Bulirsch-Stoer", (java.lang.Throwable) derivativeException10);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException10);
        java.lang.String str15 = derivativeException10.getPattern();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test02235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02235");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test02236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02236");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator11.addSwitchingFunction(switchingFunction18, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        double double30 = graggBulirschStoerIntegrator29.getCurrentStepStart();
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = graggBulirschStoerIntegrator37.getStepHandler();
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator11.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 100, (int) ' ', (double) (byte) 0);
        double[] doubleArray51 = new double[] { '4', (byte) 10 };
        double[] doubleArray52 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator53 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray51, doubleArray52);
        double double54 = graggBulirschStoerIntegrator53.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator53.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double60 = graggBulirschStoerIntegrator53.getCurrentSignedStepsize();
        double double61 = graggBulirschStoerIntegrator53.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler62 = graggBulirschStoerIntegrator53.getStepHandler();
        boolean boolean63 = stepHandler62.requiresDenseOutput();
        boolean boolean64 = stepHandler62.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler62);
        double double66 = graggBulirschStoerIntegrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction67, 35.0d, (double) 0, 100);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (byte) 1, 97.0d, (double) (-1.0f), 0.0d);
        graggBulirschStoerIntegrator4.setInterpolationControl(true, 10);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 0, 100, (double) '4');
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 18.708286933869708d + "'", double54 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 18.708286933869708d + "'", double60 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test02237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02237");
        java.lang.Object[] objArray9 = new java.lang.Object[] { '4', 2, (byte) 10 };
        java.lang.Object[] objArray17 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", objArray17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray17);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", objArray9, (java.lang.Throwable) integratorException19);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: ", objArray9);
        java.lang.Throwable throwable23 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException(3.1622776601683795d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", objArray9, throwable23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: ", objArray9);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[4, 2, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[4, 2, 10]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, 1, 10.0, 4, 100]");
    }

    @Test
    public void test02238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02238");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException1 = new org.apache.commons.math.FunctionEvaluationException((double) 3);
        org.apache.commons.math.ode.DerivativeException derivativeException2 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException1);
        java.lang.String str3 = derivativeException2.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 3" + "'", str3, "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 3");
    }

    @Test
    public void test02239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02239");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler0.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray15 = new double[] { 10, 100, (byte) 0 };
        boolean boolean16 = switchingFunctionsHandler10.reset((double) 0, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler0.reset((double) 100.0f, doubleArray15);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler0.add(switchingFunction18, (double) 1.0f, (double) 10, (int) (short) 100);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray31 = new double[] { 10, 100, (byte) 0 };
        boolean boolean32 = switchingFunctionsHandler26.reset((double) 0, doubleArray31);
        double[] doubleArray38 = new double[] { '4', (byte) 10 };
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray38, doubleArray39);
        boolean boolean41 = switchingFunctionsHandler26.reset(18.708286933869708d, doubleArray39);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction42 = null;
        switchingFunctionsHandler26.add(switchingFunction42, Double.NaN, (-1.0d), (int) (byte) 10);
        double[] doubleArray51 = new double[] { (byte) 10, 1L, (byte) 10 };
        boolean boolean52 = switchingFunctionsHandler26.reset((double) 10L, doubleArray51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        switchingFunctionsHandler53.add(switchingFunction54, 35.0d, 100.0d, (int) 'a');
        double double59 = switchingFunctionsHandler53.getEventTime();
        double[] doubleArray65 = new double[] { '4', (byte) 10 };
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray65, doubleArray66);
        boolean boolean68 = switchingFunctionsHandler53.reset((double) 3, doubleArray65);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, (double) (short) 1, doubleArray51, doubleArray65);
        boolean boolean70 = switchingFunctionsHandler0.reset((double) 0, doubleArray51);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction71 = null;
        switchingFunctionsHandler0.add(switchingFunction71, (double) 100.0f, (double) 1L, (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction76 = null;
        switchingFunctionsHandler0.add(switchingFunction76, 2.0d, (double) '4', (int) '4');
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test02240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02240");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray7 = new double[] { 10, 100, (byte) 0 };
        boolean boolean8 = switchingFunctionsHandler2.reset((double) 0, doubleArray7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray14 = new double[] { 10, 100, (byte) 0 };
        boolean boolean15 = switchingFunctionsHandler9.reset((double) 0, doubleArray14);
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        boolean boolean24 = switchingFunctionsHandler9.reset(18.708286933869708d, doubleArray22);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator25 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, 35.0d, doubleArray7, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator25.addSwitchingFunction(switchingFunction26, 35.0d, (double) (short) 10, (int) (byte) 1);
        graggBulirschStoerIntegrator25.setOrderControl((int) (byte) -1, (double) (short) 0, 32.0d);
        graggBulirschStoerIntegrator25.setStabilityCheck(false, (int) (byte) -1, (int) ' ', 0.0d);
        double double40 = graggBulirschStoerIntegrator25.getCurrentStepStart();
        graggBulirschStoerIntegrator25.setStabilityCheck(false, (int) (byte) 100, 10, 52.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
    }

    @Test
    public void test02241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02241");
        java.lang.Object[] objArray12 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray12);
        java.lang.Object[] objArray15 = integratorException14.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException(35.0d, "", objArray15);
        java.lang.Object[] objArray24 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", objArray24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException25);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) derivativeException27);
        java.lang.Throwable[] throwableArray30 = derivativeException27.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", objArray15, (java.lang.Throwable) derivativeException27);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException31);
        java.lang.Throwable[] throwableArray33 = derivativeException32.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray33);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray33);
    }

    @Test
    public void test02242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02242");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator11.addSwitchingFunction(switchingFunction18, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        double double30 = graggBulirschStoerIntegrator29.getCurrentStepStart();
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = graggBulirschStoerIntegrator37.getStepHandler();
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator11.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler38);
        org.apache.commons.math.ode.StepHandler stepHandler42 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (int) (byte) -1);
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (byte) 10, (-1), 100.0d);
        double double51 = graggBulirschStoerIntegrator4.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
    }

    @Test
    public void test02243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02243");
        java.lang.Throwable throwable3 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable3);
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("", throwable3);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException();
        mathException5.addSuppressed((java.lang.Throwable) mathException6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException6);
        java.lang.String str9 = mathException6.toString();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.apache.commons.math.MathException" + "'", str9, "org.apache.commons.math.MathException");
    }

    @Test
    public void test02244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02244");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction6, (double) (byte) 0, (double) 0, (int) '#');
        graggBulirschStoerIntegrator4.setOrderControl(2, (double) (short) 10, (double) 10);
        double[] doubleArray19 = new double[] { '4', (byte) 10 };
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray19, doubleArray20);
        org.apache.commons.math.ode.StepHandler stepHandler22 = graggBulirschStoerIntegrator21.getStepHandler();
        stepHandler22.reset();
        stepHandler22.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler22);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        stepHandler22.handleStep(stepInterpolator26, true);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(stepHandler22);
    }

    @Test
    public void test02245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02245");
        java.lang.Object[] objArray9 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("", objArray9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, (java.lang.Throwable) derivativeException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) functionEvaluationException13);
        java.lang.Object[] objArray15 = mathException14.getArguments();
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ", objArray15);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
    }

    @Test
    public void test02246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02246");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        double[] doubleArray12 = new double[] { '4', (byte) 10 };
        double[] doubleArray13 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray12, doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.reset(18.708286933869708d, doubleArray13);
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        boolean boolean17 = switchingFunctionsHandler0.stop();
        boolean boolean18 = switchingFunctionsHandler0.isEmpty();
        boolean boolean19 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler0.add(switchingFunction20, (double) (byte) 1, 32.0d, (int) 'a');
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test02247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02247");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        boolean boolean7 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler9.add(switchingFunction10, 35.0d, 100.0d, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray21 = new double[] { 10, 100, (byte) 0 };
        boolean boolean22 = switchingFunctionsHandler16.reset((double) 0, doubleArray21);
        double[] doubleArray28 = new double[] { '4', (byte) 10 };
        double[] doubleArray29 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator30 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray28, doubleArray29);
        boolean boolean31 = switchingFunctionsHandler16.reset(18.708286933869708d, doubleArray29);
        boolean boolean32 = switchingFunctionsHandler9.reset((double) (byte) 0, doubleArray29);
        switchingFunctionsHandler0.stepAccepted((-0.0d), doubleArray29);
        double double34 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray41 = new double[] { 10, 100, (byte) 0 };
        boolean boolean42 = switchingFunctionsHandler36.reset((double) 0, doubleArray41);
        double[] doubleArray48 = new double[] { '4', (byte) 10 };
        double[] doubleArray49 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray48, doubleArray49);
        boolean boolean51 = switchingFunctionsHandler36.reset(18.708286933869708d, doubleArray49);
        boolean boolean52 = switchingFunctionsHandler36.isEmpty();
        boolean boolean53 = switchingFunctionsHandler36.stop();
        boolean boolean54 = switchingFunctionsHandler36.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        switchingFunctionsHandler36.add(switchingFunction55, (-1.0d), 59.16079783099616d, 10);
        double double60 = switchingFunctionsHandler36.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray67 = new double[] { 10, 100, (byte) 0 };
        boolean boolean68 = switchingFunctionsHandler62.reset((double) 0, doubleArray67);
        double[] doubleArray74 = new double[] { '4', (byte) 10 };
        double[] doubleArray75 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator76 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray74, doubleArray75);
        boolean boolean77 = switchingFunctionsHandler62.reset(18.708286933869708d, doubleArray75);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction78 = null;
        switchingFunctionsHandler62.add(switchingFunction78, Double.NaN, (-1.0d), (int) (byte) 10);
        double[] doubleArray87 = new double[] { (byte) 10, 1L, (byte) 10 };
        boolean boolean88 = switchingFunctionsHandler62.reset((double) 10L, doubleArray87);
        boolean boolean89 = switchingFunctionsHandler36.reset(59.16079783099616d, doubleArray87);
        switchingFunctionsHandler0.stepAccepted(17.88854381999832d, doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test02248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02248");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, 10.0d, (double) 100, 18.708286933869708d);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 0, 100.0d, (double) (short) 100, (double) 0);
        double[] doubleArray15 = new double[] { '4', (byte) 10 };
        double[] doubleArray16 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator17 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray15, doubleArray16);
        double double18 = graggBulirschStoerIntegrator17.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator17.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double[] doubleArray28 = new double[] { '4', (byte) 10 };
        double[] doubleArray29 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator30 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray28, doubleArray29);
        double double31 = graggBulirschStoerIntegrator30.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator30.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        org.apache.commons.math.ode.StepHandler stepHandler37 = graggBulirschStoerIntegrator30.getStepHandler();
        graggBulirschStoerIntegrator17.setStepHandler(stepHandler37);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler37);
        boolean boolean40 = stepHandler37.requiresDenseOutput();
        stepHandler37.reset();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 3.1622776601683795d + "'", double5 == 3.1622776601683795d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 18.708286933869708d + "'", double18 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 18.708286933869708d + "'", double31 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test02249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02249");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler0.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray15 = new double[] { 10, 100, (byte) 0 };
        boolean boolean16 = switchingFunctionsHandler10.reset((double) 0, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler0.reset((double) 100.0f, doubleArray15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler19.add(switchingFunction20, 35.0d, 100.0d, (int) 'a');
        double double25 = switchingFunctionsHandler19.getEventTime();
        double[] doubleArray31 = new double[] { '4', (byte) 10 };
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator33 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray31, doubleArray32);
        boolean boolean34 = switchingFunctionsHandler19.reset((double) 3, doubleArray31);
        boolean boolean35 = switchingFunctionsHandler0.reset((double) (short) 0, doubleArray31);
        boolean boolean36 = switchingFunctionsHandler0.isEmpty();
        double double37 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler0.evaluateStep(stepInterpolator38);
        boolean boolean40 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        boolean boolean42 = switchingFunctionsHandler0.evaluateStep(stepInterpolator41);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test02250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02250");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 3, "org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test02251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02251");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction15, (double) (byte) 100, (double) (short) 100, (int) 'a');
        double double20 = graggBulirschStoerIntegrator6.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction21, 0.0d, (double) '4', (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction26, (double) (-1), Double.NaN, 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction31, 0.0d, (double) 1L, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction36, (double) (short) 10, (double) (short) 1, 0);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 35.0d + "'", double14 == 35.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 35.0d + "'", double20 == 35.0d);
    }

    @Test
    public void test02252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02252");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray7);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", objArray16);
        java.lang.Throwable[] throwableArray18 = mathException17.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException(3.1622776601683795d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Object[]) strArray7, (java.lang.Throwable) mathException17);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        java.lang.String str21 = derivativeException20.getPattern();
        java.lang.Throwable throwable23 = null;
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("Gragg-Bulirsch-Stoer", throwable23);
        java.lang.Object[] objArray25 = mathException24.getArguments();
        derivativeException20.addSuppressed((java.lang.Throwable) mathException24);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("Evaluation failed for argument = 32", (java.lang.Throwable) mathException24);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
    }

    @Test
    public void test02253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02253");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction15, (double) (byte) 100, (double) (short) 100, (int) 'a');
        double double20 = graggBulirschStoerIntegrator6.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler21 = graggBulirschStoerIntegrator6.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction22, 0.0d, (double) 10, (int) 'a');
        double[] doubleArray31 = new double[] { '4', (byte) 10 };
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator33 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray31, doubleArray32);
        graggBulirschStoerIntegrator33.setStepsizeControl((double) (byte) 10, 0.0d, (double) 0, 0.0d);
        graggBulirschStoerIntegrator33.setStepsizeControl(0.0d, (double) (-1.0f), (double) (-1.0f), (double) ' ');
        double[] doubleArray48 = new double[] { '4', (byte) 10 };
        double[] doubleArray49 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray48, doubleArray49);
        double double51 = graggBulirschStoerIntegrator50.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator50.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double57 = graggBulirschStoerIntegrator50.getCurrentSignedStepsize();
        double[] doubleArray62 = new double[] { '4', (byte) 10 };
        double[] doubleArray63 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray62, doubleArray63);
        double double65 = graggBulirschStoerIntegrator64.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator64.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double71 = graggBulirschStoerIntegrator64.getCurrentSignedStepsize();
        double double72 = graggBulirschStoerIntegrator64.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler73 = graggBulirschStoerIntegrator64.getStepHandler();
        boolean boolean74 = stepHandler73.requiresDenseOutput();
        boolean boolean75 = stepHandler73.requiresDenseOutput();
        stepHandler73.reset();
        stepHandler73.reset();
        stepHandler73.reset();
        graggBulirschStoerIntegrator50.setStepHandler(stepHandler73);
        graggBulirschStoerIntegrator33.setStepHandler(stepHandler73);
        stepHandler73.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler73);
        java.lang.Class<?> wildcardClass83 = stepHandler73.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 35.0d + "'", double14 == 35.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 35.0d + "'", double20 == 35.0d);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 18.708286933869708d + "'", double51 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 18.708286933869708d + "'", double57 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 18.708286933869708d + "'", double65 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 18.708286933869708d + "'", double71 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertNotNull(stepHandler73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test02254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02254");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(97.0d, (double) (byte) 1, (double) 0.0f, (double) 1.0f);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, 52.0d, (double) 100, (int) (short) 100);
        double[] doubleArray14 = new double[] { '4', (byte) 10 };
        double[] doubleArray15 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator16 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray14, doubleArray15);
        double double17 = graggBulirschStoerIntegrator16.getCurrentStepStart();
        double[] doubleArray22 = new double[] { '4', (byte) 10 };
        double[] doubleArray23 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray22, doubleArray23);
        org.apache.commons.math.ode.StepHandler stepHandler25 = graggBulirschStoerIntegrator24.getStepHandler();
        graggBulirschStoerIntegrator16.setStepHandler(stepHandler25);
        graggBulirschStoerIntegrator16.setOrderControl((int) (short) -1, (double) (-1L), (double) 10);
        graggBulirschStoerIntegrator16.setInitialStepSize(0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler33 = graggBulirschStoerIntegrator16.getStepHandler();
        boolean boolean34 = stepHandler33.requiresDenseOutput();
        stepHandler33.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler33);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test02255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02255");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double[] doubleArray12 = new double[] { '4', (byte) 10 };
        double[] doubleArray13 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray12, doubleArray13);
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator14.getStepHandler();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler15);
        graggBulirschStoerIntegrator6.setOrderControl((int) (short) -1, (double) (-1L), (double) 10);
        double double21 = graggBulirschStoerIntegrator6.getMinStep();
        graggBulirschStoerIntegrator6.setStepsizeControl(35.0d, (double) (byte) 1, (double) 10.0f, (double) 100L);
        double[] doubleArray31 = new double[] { '4', (byte) 10 };
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator33 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray31, doubleArray32);
        double double34 = graggBulirschStoerIntegrator33.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator33.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double40 = graggBulirschStoerIntegrator33.getCurrentSignedStepsize();
        double double41 = graggBulirschStoerIntegrator33.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler42 = graggBulirschStoerIntegrator33.getStepHandler();
        double double43 = graggBulirschStoerIntegrator33.getMinStep();
        graggBulirschStoerIntegrator33.setStepsizeControl(0.0d, (double) 0, (double) ' ', (-1.0d));
        double double49 = graggBulirschStoerIntegrator33.getCurrentStepStart();
        graggBulirschStoerIntegrator33.setOrderControl((int) '#', 0.0d, 35.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator33.addSwitchingFunction(switchingFunction54, (double) 100.0f, (double) (byte) -1, 1);
        org.apache.commons.math.ode.StepHandler stepHandler59 = graggBulirschStoerIntegrator33.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        stepHandler59.handleStep(stepInterpolator60, false);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler59);
        graggBulirschStoerIntegrator6.setInterpolationControl(false, 0);
        double double67 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double68 = graggBulirschStoerIntegrator6.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 18.708286933869708d + "'", double34 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 18.708286933869708d + "'", double40 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 10.0d + "'", double43 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 18.708286933869708d + "'", double67 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 10.0d + "'", double68 == 10.0d);
    }

    @Test
    public void test02256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02256");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(18.708286933869708d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: ");
        org.apache.commons.math.ode.IntegratorException integratorException3 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException2);
    }

    @Test
    public void test02257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02257");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setOrderControl((-1), (-1.0d), (double) 10L);
        double[] doubleArray16 = new double[] { '4', (byte) 10 };
        double[] doubleArray17 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator18 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray16, doubleArray17);
        org.apache.commons.math.ode.StepHandler stepHandler19 = graggBulirschStoerIntegrator18.getStepHandler();
        stepHandler19.reset();
        stepHandler19.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler19);
        org.apache.commons.math.ode.StepHandler stepHandler23 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setStepsizeControl(18.708286933869708d, 18.708286933869708d, (double) 0, (double) ' ');
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator33 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        double double34 = graggBulirschStoerIntegrator33.getCurrentSignedStepsize();
        double[] doubleArray39 = new double[] { '4', (byte) 10 };
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray39, doubleArray40);
        double double42 = graggBulirschStoerIntegrator41.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator41.setOrderControl((-1), (-1.0d), (double) 10L);
        double[] doubleArray51 = new double[] { '4', (byte) 10 };
        double[] doubleArray52 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator53 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray51, doubleArray52);
        org.apache.commons.math.ode.StepHandler stepHandler54 = graggBulirschStoerIntegrator53.getStepHandler();
        stepHandler54.reset();
        stepHandler54.reset();
        graggBulirschStoerIntegrator41.setStepHandler(stepHandler54);
        graggBulirschStoerIntegrator33.setStepHandler(stepHandler54);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler54);
        double double60 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]");
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertNotNull(stepHandler23);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 18.708286933869708d + "'", double42 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[]");
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 18.708286933869708d + "'", double60 == 18.708286933869708d);
    }

    @Test
    public void test02258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02258");
        java.lang.Object[] objArray11 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("", objArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        java.lang.Object[] objArray17 = derivativeException15.getArguments();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("");
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException19);
        derivativeException15.addSuppressed((java.lang.Throwable) integratorException20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException(10.0d, (java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.Object[] objArray24 = derivativeException15.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", objArray24);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray37);
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray37, (java.lang.Throwable) functionEvaluationException42);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.ode.IntegratorException: ");
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray37, (java.lang.Throwable) functionEvaluationException47);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray37);
        java.lang.Object[] objArray55 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable59 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("", throwable59);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("hi!", objArray55, (java.lang.Throwable) mathException61);
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException62);
        java.lang.Throwable[] throwableArray64 = integratorException63.getSuppressed();
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Object[]) throwableArray64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray37, (java.lang.Throwable) mathException65);
        java.lang.Object[] objArray79 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("", objArray79);
        java.lang.Throwable[] throwableArray81 = mathException80.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException84 = new org.apache.commons.math.FunctionEvaluationException((double) '#', (java.lang.Throwable) functionEvaluationException83);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, (java.lang.Throwable) functionEvaluationException83);
        functionEvaluationException66.addSuppressed((java.lang.Throwable) functionEvaluationException85);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException87 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) functionEvaluationException85);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("Gragg-Bulirsch-Stoer", objArray24, (java.lang.Throwable) functionEvaluationException87);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException89 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.MathException: ", objArray24);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!, 10]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray81);
    }

    @Test
    public void test02259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02259");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setInterpolationControl(false, (int) (byte) 1);
        java.lang.String str18 = graggBulirschStoerIntegrator6.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction19, (double) 100, (double) (short) 10, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction24, 2.0d, (double) (short) 100, (int) (byte) 0);
        graggBulirschStoerIntegrator6.setStepsizeControl(3.1622776601683795d, (double) 0.0f, (double) 0, (double) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction34, (double) 100, (double) ' ', (int) (byte) 10);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str18, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02260");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) 100.0f, (double) 'a', 0.0d);
        double double5 = graggBulirschStoerIntegrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
    }

    @Test
    public void test02261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02261");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(35.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "");
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException5);
        java.lang.Object[] objArray7 = functionEvaluationException5.getArguments();
        functionEvaluationException2.addSuppressed((java.lang.Throwable) functionEvaluationException5);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
    }

    @Test
    public void test02262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02262");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray8);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Object[]) strArray8);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray19, (java.lang.Throwable) functionEvaluationException24);
        java.lang.Object[] objArray33 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("", objArray33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, (java.lang.Throwable) derivativeException36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray19, (java.lang.Throwable) derivativeException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, (java.lang.Throwable) derivativeException36);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException39);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ");
        mathException40.addSuppressed((java.lang.Throwable) mathException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.MathException: Evaluation failed for argument = 3", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException40);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!, 1, 10.0, 4, 100]");
    }

    @Test
    public void test02263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02263");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double[] doubleArray12 = new double[] { '4', (byte) 10 };
        double[] doubleArray13 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray12, doubleArray13);
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator14.getStepHandler();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler15);
        graggBulirschStoerIntegrator6.setOrderControl((int) (short) -1, (double) (-1L), (double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler21 = graggBulirschStoerIntegrator6.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction22, (double) (-1), 10.0d, (int) 'a');
        graggBulirschStoerIntegrator6.setInterpolationControl(true, (int) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler30 = graggBulirschStoerIntegrator6.getStepHandler();
        java.lang.String str31 = graggBulirschStoerIntegrator6.getName();
        double double32 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str31, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test02264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02264");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test02265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02265");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        java.lang.String str14 = graggBulirschStoerIntegrator6.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction15, (double) 100L, 35.0d, (int) (short) 1);
        double[] doubleArray24 = new double[] { '4', (byte) 10 };
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator26 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray24, doubleArray25);
        double double27 = graggBulirschStoerIntegrator26.getCurrentStepStart();
        graggBulirschStoerIntegrator26.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator26.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        double double37 = graggBulirschStoerIntegrator26.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator26.setStabilityCheck(true, (int) 'a', (int) (byte) 100, 35.0d);
        double[] doubleArray47 = new double[] { '4', (byte) 10 };
        double[] doubleArray48 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray47, doubleArray48);
        double double50 = graggBulirschStoerIntegrator49.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator49.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double56 = graggBulirschStoerIntegrator49.getCurrentSignedStepsize();
        double double57 = graggBulirschStoerIntegrator49.getCurrentStepStart();
        graggBulirschStoerIntegrator49.setInterpolationControl(false, (int) (byte) 1);
        java.lang.String str61 = graggBulirschStoerIntegrator49.getName();
        org.apache.commons.math.ode.StepHandler stepHandler62 = graggBulirschStoerIntegrator49.getStepHandler();
        graggBulirschStoerIntegrator26.setStepHandler(stepHandler62);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler62);
        java.lang.String str65 = graggBulirschStoerIntegrator6.getName();
        double double66 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction67, 0.0d, 18.708286933869708d, (int) (byte) 10);
        graggBulirschStoerIntegrator6.setInterpolationControl(false, (int) (byte) -1);
        java.lang.String str75 = graggBulirschStoerIntegrator6.getName();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str14, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 18.708286933869708d + "'", double37 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 18.708286933869708d + "'", double50 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 18.708286933869708d + "'", double56 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str61, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str65, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str75, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02266");
        java.lang.Object[] objArray8 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("", objArray8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) derivativeException11);
        java.lang.Throwable[] throwableArray14 = derivativeException11.getSuppressed();
        java.lang.Object[] objArray23 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", objArray23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException24);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException27);
        java.lang.Object[] objArray29 = derivativeException27.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray29, (java.lang.Throwable) mathException33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) functionEvaluationException34);
        java.lang.Throwable[] throwableArray36 = functionEvaluationException34.getSuppressed();
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray36);
    }

    @Test
    public void test02267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02267");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        graggBulirschStoerIntegrator6.setStepsizeControl((double) (byte) 10, 0.0d, (double) 0, 0.0d);
        graggBulirschStoerIntegrator6.setStepsizeControl(0.0d, (double) (-1.0f), (double) (-1.0f), (double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler17 = graggBulirschStoerIntegrator6.getStepHandler();
        double[] doubleArray22 = new double[] { '4', (byte) 10 };
        double[] doubleArray23 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray22, doubleArray23);
        double double25 = graggBulirschStoerIntegrator24.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator24.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double31 = graggBulirschStoerIntegrator24.getCurrentSignedStepsize();
        double double32 = graggBulirschStoerIntegrator24.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler33 = graggBulirschStoerIntegrator24.getStepHandler();
        double double34 = graggBulirschStoerIntegrator24.getMinStep();
        double double35 = graggBulirschStoerIntegrator24.getCurrentSignedStepsize();
        double[] doubleArray40 = new double[] { '4', (byte) 10 };
        double[] doubleArray41 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray40, doubleArray41);
        org.apache.commons.math.ode.StepHandler stepHandler43 = graggBulirschStoerIntegrator42.getStepHandler();
        double double44 = graggBulirschStoerIntegrator42.getMinStep();
        double[] doubleArray49 = new double[] { '4', (byte) 10 };
        double[] doubleArray50 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator51 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray49, doubleArray50);
        double double52 = graggBulirschStoerIntegrator51.getCurrentStepStart();
        graggBulirschStoerIntegrator51.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator51.setInterpolationControl(true, 2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction61 = null;
        graggBulirschStoerIntegrator51.addSwitchingFunction(switchingFunction61, (double) (short) 1, 18.708286933869708d, (int) (byte) 100);
        org.apache.commons.math.ode.StepHandler stepHandler66 = graggBulirschStoerIntegrator51.getStepHandler();
        boolean boolean67 = stepHandler66.requiresDenseOutput();
        graggBulirschStoerIntegrator42.setStepHandler(stepHandler66);
        graggBulirschStoerIntegrator24.setStepHandler(stepHandler66);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler66);
        double double71 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 18.708286933869708d + "'", double25 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 18.708286933869708d + "'", double31 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 18.708286933869708d + "'", double35 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(stepHandler66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
    }

    @Test
    public void test02268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02268");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler0.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray15 = new double[] { 10, 100, (byte) 0 };
        boolean boolean16 = switchingFunctionsHandler10.reset((double) 0, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler0.reset((double) 100.0f, doubleArray15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler19.add(switchingFunction20, 35.0d, 100.0d, (int) 'a');
        double double25 = switchingFunctionsHandler19.getEventTime();
        double[] doubleArray31 = new double[] { '4', (byte) 10 };
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator33 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray31, doubleArray32);
        boolean boolean34 = switchingFunctionsHandler19.reset((double) 3, doubleArray31);
        boolean boolean35 = switchingFunctionsHandler0.reset((double) (short) 0, doubleArray31);
        boolean boolean36 = switchingFunctionsHandler0.isEmpty();
        boolean boolean37 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler0.evaluateStep(stepInterpolator38);
        boolean boolean40 = switchingFunctionsHandler0.isEmpty();
        boolean boolean41 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test02269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02269");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0");
    }

    @Test
    public void test02270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02270");
        java.lang.Throwable throwable2 = null;
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException("Gragg-Bulirsch-Stoer", throwable2);
        java.lang.Object[] objArray4 = mathException3.getArguments();
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException3);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Throwable) mathException3);
        java.lang.String str7 = mathException6.toString();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer" + "'", str7, "org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02271");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        java.lang.Object[] objArray3 = functionEvaluationException2.getArguments();
        java.lang.Throwable throwable4 = null;
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray3, throwable4);
        java.lang.Throwable[] throwableArray6 = mathException5.getSuppressed();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[-1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[-1.0]");
        org.junit.Assert.assertNotNull(throwableArray6);
    }

    @Test
    public void test02272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02272");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler0.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray15 = new double[] { 10, 100, (byte) 0 };
        boolean boolean16 = switchingFunctionsHandler10.reset((double) 0, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler0.reset((double) 100.0f, doubleArray15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler19.add(switchingFunction20, 35.0d, 100.0d, (int) 'a');
        double double25 = switchingFunctionsHandler19.getEventTime();
        double[] doubleArray31 = new double[] { '4', (byte) 10 };
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator33 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray31, doubleArray32);
        boolean boolean34 = switchingFunctionsHandler19.reset((double) 3, doubleArray31);
        boolean boolean35 = switchingFunctionsHandler0.reset((double) (short) 0, doubleArray31);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler0.evaluateStep(stepInterpolator36);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler0.evaluateStep(stepInterpolator38);
        double double40 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
    }

    @Test
    public void test02273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02273");
        java.lang.Object[] objArray6 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("", objArray6);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException7);
        java.lang.String str9 = mathException7.toString();
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.apache.commons.math.MathException: " + "'", str9, "org.apache.commons.math.MathException: ");
    }

    @Test
    public void test02274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02274");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator6.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        double double17 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler18 = graggBulirschStoerIntegrator6.getStepHandler();
        java.lang.String str19 = graggBulirschStoerIntegrator6.getName();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray29 = new double[] { '4', (byte) 10 };
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray29, doubleArray30);
        double double32 = graggBulirschStoerIntegrator31.getCurrentStepStart();
        graggBulirschStoerIntegrator31.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        graggBulirschStoerIntegrator31.addSwitchingFunction(switchingFunction38, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray47 = new double[] { '4', (byte) 10 };
        double[] doubleArray48 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray47, doubleArray48);
        double double50 = graggBulirschStoerIntegrator49.getCurrentStepStart();
        double[] doubleArray55 = new double[] { '4', (byte) 10 };
        double[] doubleArray56 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray55, doubleArray56);
        org.apache.commons.math.ode.StepHandler stepHandler58 = graggBulirschStoerIntegrator57.getStepHandler();
        graggBulirschStoerIntegrator49.setStepHandler(stepHandler58);
        graggBulirschStoerIntegrator31.setStepHandler(stepHandler58);
        graggBulirschStoerIntegrator24.setStepHandler(stepHandler58);
        graggBulirschStoerIntegrator24.setStabilityCheck(false, 100, (int) ' ', (double) (byte) 0);
        double[] doubleArray71 = new double[] { '4', (byte) 10 };
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray71, doubleArray72);
        double double74 = graggBulirschStoerIntegrator73.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator73.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double80 = graggBulirschStoerIntegrator73.getCurrentSignedStepsize();
        double double81 = graggBulirschStoerIntegrator73.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler82 = graggBulirschStoerIntegrator73.getStepHandler();
        boolean boolean83 = stepHandler82.requiresDenseOutput();
        boolean boolean84 = stepHandler82.requiresDenseOutput();
        graggBulirschStoerIntegrator24.setStepHandler(stepHandler82);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler82);
        graggBulirschStoerIntegrator6.setOrderControl((int) 'a', (double) 100, (double) 100L);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 18.708286933869708d + "'", double17 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str19, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[]");
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 18.708286933869708d + "'", double74 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 18.708286933869708d + "'", double80 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(stepHandler82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test02275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02275");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException6);
        java.lang.Object[] objArray8 = integratorException7.getArguments();
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("", objArray15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException16);
        double[] doubleArray23 = new double[] { '4', (byte) 10 };
        double[] doubleArray24 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator25 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray23, doubleArray24);
        double double26 = graggBulirschStoerIntegrator25.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator25.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        java.lang.String str32 = graggBulirschStoerIntegrator25.getName();
        double[] doubleArray38 = new double[] { '4', (byte) 10 };
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray38, doubleArray39);
        double double41 = graggBulirschStoerIntegrator40.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator40.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double47 = graggBulirschStoerIntegrator40.getCurrentSignedStepsize();
        double double48 = graggBulirschStoerIntegrator40.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator40.getStepHandler();
        double double50 = graggBulirschStoerIntegrator40.getMinStep();
        graggBulirschStoerIntegrator40.setOrderControl((int) (short) 1, (double) 0.0f, (double) 1.0f);
        double[] doubleArray59 = new double[] { '4', (byte) 10 };
        double[] doubleArray60 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray59, doubleArray60);
        double double62 = graggBulirschStoerIntegrator61.getCurrentStepStart();
        double[] doubleArray67 = new double[] { '4', (byte) 10 };
        double[] doubleArray68 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray67, doubleArray68);
        org.apache.commons.math.ode.StepHandler stepHandler70 = graggBulirschStoerIntegrator69.getStepHandler();
        graggBulirschStoerIntegrator61.setStepHandler(stepHandler70);
        java.lang.Object[] objArray72 = new java.lang.Object[] { integratorException7, derivativeException18, str32, '#', 0.0f, graggBulirschStoerIntegrator61 };
        org.apache.commons.math.ode.IntegratorException integratorException73 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", objArray72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) integratorException73);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException77);
        integratorException73.addSuppressed((java.lang.Throwable) mathException78);
        org.apache.commons.math.ode.IntegratorException integratorException80 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException78);
        org.apache.commons.math.ode.IntegratorException integratorException81 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException78);
        java.lang.Object[] objArray82 = mathException78.getArguments();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Evaluation failed for argument = {0}", objArray82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("", objArray82);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 18.708286933869708d + "'", double26 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str32, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 18.708286933869708d + "'", double41 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 18.708286933869708d + "'", double47 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[]");
        org.junit.Assert.assertNotNull(stepHandler70);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
    }

    @Test
    public void test02276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02276");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        java.lang.String str6 = graggBulirschStoerIntegrator4.getName();
        double double7 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double double8 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 10L);
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations11 = null;
        double[] doubleArray13 = null;
        double[] doubleArray19 = new double[] {};
        double[] doubleArray25 = new double[] { (short) 100, 3, 'a' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        switchingFunctionsHandler26.add(switchingFunction27, 35.0d, 100.0d, (int) 'a');
        double double32 = switchingFunctionsHandler26.getEventTime();
        double[] doubleArray38 = new double[] { '4', (byte) 10 };
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray38, doubleArray39);
        boolean boolean41 = switchingFunctionsHandler26.reset((double) 3, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', 10.0d, doubleArray25, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-1.0d), (double) (short) 100, doubleArray19, doubleArray38);
        double[] doubleArray51 = new double[] { (short) 100, 3, 'a' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        switchingFunctionsHandler52.add(switchingFunction53, 35.0d, 100.0d, (int) 'a');
        double double58 = switchingFunctionsHandler52.getEventTime();
        double[] doubleArray64 = new double[] { '4', (byte) 10 };
        double[] doubleArray65 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator66 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray64, doubleArray65);
        boolean boolean67 = switchingFunctionsHandler52.reset((double) 3, doubleArray64);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', 10.0d, doubleArray51, doubleArray64);
        double[] doubleArray71 = new double[] {};
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler72 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction73 = null;
        switchingFunctionsHandler72.add(switchingFunction73, 35.0d, 100.0d, (int) 'a');
        double double78 = switchingFunctionsHandler72.getEventTime();
        double[] doubleArray84 = new double[] { '4', (byte) 10 };
        double[] doubleArray85 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator86 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray84, doubleArray85);
        boolean boolean87 = switchingFunctionsHandler72.reset((double) 3, doubleArray84);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator88 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (double) 10, doubleArray71, doubleArray84);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator89 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, (double) (-1), doubleArray51, doubleArray71);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator90 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(100.0d, (double) 0.0f, doubleArray19, doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator4.integrate(firstOrderDifferentialEquations11, (-0.0d), doubleArray13, (double) 1.0f, doubleArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str6, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 3.0, 97.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 3.0, 97.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test02277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02277");
        java.lang.Object[] objArray8 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("", objArray8);
        java.lang.Throwable[] throwableArray10 = mathException9.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "", (java.lang.Object[]) throwableArray10);
        java.lang.Throwable[] throwableArray12 = functionEvaluationException11.getSuppressed();
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test02278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02278");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 3);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((-0.0d), "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException5);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException(35.0d, "org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Throwable) functionEvaluationException6);
    }

    @Test
    public void test02279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02279");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray9 = new double[] { 10, 100, (byte) 0 };
        boolean boolean10 = switchingFunctionsHandler4.reset((double) 0, doubleArray9);
        double[] doubleArray17 = new double[] { 0.0d, 0, (short) 100, 'a', 3.1622776601683795d, (short) 0 };
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator18 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1L, (double) 'a', doubleArray9, doubleArray17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray26 = new double[] { 10, 100, (byte) 0 };
        boolean boolean27 = switchingFunctionsHandler21.reset((double) 0, doubleArray26);
        double[] doubleArray34 = new double[] { 0.0d, 0, (short) 100, 'a', 3.1622776601683795d, (short) 0 };
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator35 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1L, (double) 'a', doubleArray26, doubleArray34);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator36 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) (-1L), doubleArray9, doubleArray34);
        double[] doubleArray41 = new double[] { '4', (byte) 10 };
        double[] doubleArray42 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray41, doubleArray42);
        double double44 = graggBulirschStoerIntegrator43.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator43.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double[] doubleArray54 = new double[] { '4', (byte) 10 };
        double[] doubleArray55 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray54, doubleArray55);
        double double57 = graggBulirschStoerIntegrator56.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator56.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        org.apache.commons.math.ode.StepHandler stepHandler63 = graggBulirschStoerIntegrator56.getStepHandler();
        graggBulirschStoerIntegrator43.setStepHandler(stepHandler63);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator65 = null;
        stepHandler63.handleStep(stepInterpolator65, true);
        boolean boolean68 = stepHandler63.requiresDenseOutput();
        graggBulirschStoerIntegrator36.setStepHandler(stepHandler63);
        graggBulirschStoerIntegrator36.setInterpolationControl(false, 10);
        double double73 = graggBulirschStoerIntegrator36.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 0.0, 100.0, 97.0, 3.1622776601683795, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 100.0, 97.0, 3.1622776601683795, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 18.708286933869708d + "'", double44 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 18.708286933869708d + "'", double57 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
    }

    @Test
    public void test02280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02280");
        java.lang.String[] strArray13 = new java.lang.String[] { "Gragg-Bulirsch-Stoer", "hi!", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        java.lang.Object[] objArray27 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable31 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", throwable31);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", objArray27, (java.lang.Throwable) mathException33);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException34);
        java.lang.Throwable[] throwableArray36 = integratorException35.getSuppressed();
        java.lang.Object[] objArray44 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("", objArray44);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray44);
        java.lang.Object[] objArray47 = integratorException46.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray36, (java.lang.Throwable) integratorException46);
        functionEvaluationException21.addSuppressed((java.lang.Throwable) integratorException46);
        java.lang.Object[] objArray50 = integratorException46.getArguments();
        java.lang.Object[] objArray57 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("", objArray57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException58);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException58);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException60);
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException61);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException62);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException63);
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray70);
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray70);
        java.lang.Object[] objArray79 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("", objArray79);
        java.lang.Throwable[] throwableArray81 = mathException80.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException(3.1622776601683795d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Object[]) strArray70, (java.lang.Throwable) mathException80);
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException80);
        mathException64.addSuppressed((java.lang.Throwable) derivativeException83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", objArray50, (java.lang.Throwable) mathException64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException86 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray13, (java.lang.Throwable) mathException85);
        org.apache.commons.math.ode.DerivativeException derivativeException87 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", strArray13);
        java.lang.Object[] objArray88 = derivativeException87.getArguments();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!, 10]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[Gragg-Bulirsch-Stoer, hi!, , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[Gragg-Bulirsch-Stoer, hi!, , hi!, ]");
    }

    @Test
    public void test02281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02281");
        double[] doubleArray7 = new double[] { (short) 100, 3, 'a' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        switchingFunctionsHandler8.add(switchingFunction9, 35.0d, 100.0d, (int) 'a');
        double double14 = switchingFunctionsHandler8.getEventTime();
        double[] doubleArray20 = new double[] { '4', (byte) 10 };
        double[] doubleArray21 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator22 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray20, doubleArray21);
        boolean boolean23 = switchingFunctionsHandler8.reset((double) 3, doubleArray20);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', 10.0d, doubleArray7, doubleArray20);
        double[] doubleArray30 = new double[] { (short) 100, 3, 'a' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        switchingFunctionsHandler31.add(switchingFunction32, 35.0d, 100.0d, (int) 'a');
        double double37 = switchingFunctionsHandler31.getEventTime();
        double[] doubleArray43 = new double[] { '4', (byte) 10 };
        double[] doubleArray44 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray43, doubleArray44);
        boolean boolean46 = switchingFunctionsHandler31.reset((double) 3, doubleArray43);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', 10.0d, doubleArray30, doubleArray43);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0L, 1.0d, doubleArray20, doubleArray30);
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator48.getStepHandler();
        double double50 = graggBulirschStoerIntegrator48.getCurrentStepStart();
        double[] doubleArray55 = new double[] { '4', (byte) 10 };
        double[] doubleArray56 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray55, doubleArray56);
        org.apache.commons.math.ode.StepHandler stepHandler58 = graggBulirschStoerIntegrator57.getStepHandler();
        double double59 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler60 = graggBulirschStoerIntegrator57.getStepHandler();
        graggBulirschStoerIntegrator48.setStepHandler(stepHandler60);
        double double62 = graggBulirschStoerIntegrator48.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 3.0, 97.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 3.0, 97.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[]");
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 18.708286933869708d + "'", double59 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
    }

    @Test
    public void test02282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02282");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        org.apache.commons.math.ode.StepHandler stepHandler7 = graggBulirschStoerIntegrator6.getStepHandler();
        java.lang.String str8 = graggBulirschStoerIntegrator6.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction9, (double) 1, (double) (short) -1, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction14, (double) 1L, 100.0d, (int) (short) 0);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str8, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02283");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double[] doubleArray17 = new double[] { '4', (byte) 10 };
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray17, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        org.apache.commons.math.ode.StepHandler stepHandler26 = graggBulirschStoerIntegrator19.getStepHandler();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler26);
        graggBulirschStoerIntegrator6.setStepsizeControl((-1.0d), (double) ' ', (double) 100L, (double) 'a');
        double[] doubleArray37 = new double[] { '4', (byte) 10 };
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator39 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray37, doubleArray38);
        double double40 = graggBulirschStoerIntegrator39.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator39.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double46 = graggBulirschStoerIntegrator39.getCurrentSignedStepsize();
        double double47 = graggBulirschStoerIntegrator39.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator39.getStepHandler();
        boolean boolean49 = stepHandler48.requiresDenseOutput();
        boolean boolean50 = stepHandler48.requiresDenseOutput();
        stepHandler48.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler48);
        double double53 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        java.lang.String str54 = graggBulirschStoerIntegrator6.getName();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 18.708286933869708d + "'", double20 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 18.708286933869708d + "'", double40 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 18.708286933869708d + "'", double46 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str54, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02284");
        double[] doubleArray2 = new double[] {};
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler3.add(switchingFunction4, 35.0d, 100.0d, (int) 'a');
        double double9 = switchingFunctionsHandler3.getEventTime();
        double[] doubleArray15 = new double[] { '4', (byte) 10 };
        double[] doubleArray16 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator17 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray15, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler3.reset((double) 3, doubleArray15);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (double) 10, doubleArray2, doubleArray15);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        double[] doubleArray25 = new double[] { '4', (byte) 10 };
        double[] doubleArray26 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator27 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray25, doubleArray26);
        double double28 = graggBulirschStoerIntegrator27.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator27.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double34 = graggBulirschStoerIntegrator27.getCurrentSignedStepsize();
        double double35 = graggBulirschStoerIntegrator27.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler36 = graggBulirschStoerIntegrator27.getStepHandler();
        double double37 = graggBulirschStoerIntegrator27.getMinStep();
        graggBulirschStoerIntegrator27.setStepsizeControl(0.0d, (double) 0, (double) ' ', (-1.0d));
        graggBulirschStoerIntegrator27.setInitialStepSize((-1.0d));
        org.apache.commons.math.ode.StepHandler stepHandler45 = graggBulirschStoerIntegrator27.getStepHandler();
        stepHandler45.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        stepHandler45.handleStep(stepInterpolator47, false);
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler45);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator19.getStepHandler();
        java.lang.String str52 = graggBulirschStoerIntegrator19.getName();
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 18.708286933869708d + "'", double28 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 18.708286933869708d + "'", double34 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str52, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02285");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction13, (double) (short) 10, (double) 2, (int) '#');
        org.apache.commons.math.ode.StepHandler stepHandler18 = graggBulirschStoerIntegrator6.getStepHandler();
        double[] doubleArray23 = new double[] { '4', (byte) 10 };
        double[] doubleArray24 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator25 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray23, doubleArray24);
        double double26 = graggBulirschStoerIntegrator25.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator25.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double32 = graggBulirschStoerIntegrator25.getCurrentSignedStepsize();
        double double33 = graggBulirschStoerIntegrator25.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        graggBulirschStoerIntegrator25.addSwitchingFunction(switchingFunction34, (double) (byte) 100, (double) (short) 100, (int) 'a');
        double double39 = graggBulirschStoerIntegrator25.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler40 = graggBulirschStoerIntegrator25.getStepHandler();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler40);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction42 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction42, 0.0d, (double) (short) -1, 2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction47 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction47, (double) 0.0f, (double) (-1.0f), (int) '4');
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 18.708286933869708d + "'", double26 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 18.708286933869708d + "'", double32 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 35.0d + "'", double33 == 35.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 35.0d + "'", double39 == 35.0d);
        org.junit.Assert.assertNotNull(stepHandler40);
    }

    @Test
    public void test02286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02286");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.ode.IntegratorException integratorException4 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException3);
        java.lang.Object[] objArray12 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("", objArray12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException13);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Throwable) derivativeException15);
        integratorException4.addSuppressed((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException18);
        java.lang.String str20 = integratorException19.getPattern();
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: " + "'", str20, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ");
    }

    @Test
    public void test02287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02287");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException5);
        java.lang.Object[] objArray7 = integratorException6.getArguments();
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", objArray14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException15);
        double[] doubleArray22 = new double[] { '4', (byte) 10 };
        double[] doubleArray23 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray22, doubleArray23);
        double double25 = graggBulirschStoerIntegrator24.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator24.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        java.lang.String str31 = graggBulirschStoerIntegrator24.getName();
        double[] doubleArray37 = new double[] { '4', (byte) 10 };
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator39 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray37, doubleArray38);
        double double40 = graggBulirschStoerIntegrator39.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator39.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double46 = graggBulirschStoerIntegrator39.getCurrentSignedStepsize();
        double double47 = graggBulirschStoerIntegrator39.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator39.getStepHandler();
        double double49 = graggBulirschStoerIntegrator39.getMinStep();
        graggBulirschStoerIntegrator39.setOrderControl((int) (short) 1, (double) 0.0f, (double) 1.0f);
        double[] doubleArray58 = new double[] { '4', (byte) 10 };
        double[] doubleArray59 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray58, doubleArray59);
        double double61 = graggBulirschStoerIntegrator60.getCurrentStepStart();
        double[] doubleArray66 = new double[] { '4', (byte) 10 };
        double[] doubleArray67 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray66, doubleArray67);
        org.apache.commons.math.ode.StepHandler stepHandler69 = graggBulirschStoerIntegrator68.getStepHandler();
        graggBulirschStoerIntegrator60.setStepHandler(stepHandler69);
        java.lang.Object[] objArray71 = new java.lang.Object[] { integratorException6, derivativeException17, str31, '#', 0.0f, graggBulirschStoerIntegrator60 };
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) integratorException72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException76);
        integratorException72.addSuppressed((java.lang.Throwable) mathException77);
        org.apache.commons.math.ode.IntegratorException integratorException79 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException77);
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException79);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException(17.88854381999832d, (java.lang.Throwable) derivativeException80);
        java.lang.String str82 = derivativeException80.toString();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 18.708286933869708d + "'", double25 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str31, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 18.708286933869708d + "'", double40 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 18.708286933869708d + "'", double46 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]");
        org.junit.Assert.assertNotNull(stepHandler69);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str82, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test02288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02288");
        double[] doubleArray2 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray8 = new double[] { 10, 100, (byte) 0 };
        boolean boolean9 = switchingFunctionsHandler3.reset((double) 0, doubleArray8);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler3.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray18 = new double[] { 10, 100, (byte) 0 };
        boolean boolean19 = switchingFunctionsHandler13.reset((double) 0, doubleArray18);
        boolean boolean20 = switchingFunctionsHandler3.reset((double) 100.0f, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler3.add(switchingFunction21, (double) 1.0f, (double) 10, (int) (short) 100);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray34 = new double[] { 10, 100, (byte) 0 };
        boolean boolean35 = switchingFunctionsHandler29.reset((double) 0, doubleArray34);
        double[] doubleArray41 = new double[] { '4', (byte) 10 };
        double[] doubleArray42 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray41, doubleArray42);
        boolean boolean44 = switchingFunctionsHandler29.reset(18.708286933869708d, doubleArray42);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        switchingFunctionsHandler29.add(switchingFunction45, Double.NaN, (-1.0d), (int) (byte) 10);
        double[] doubleArray54 = new double[] { (byte) 10, 1L, (byte) 10 };
        boolean boolean55 = switchingFunctionsHandler29.reset((double) 10L, doubleArray54);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        switchingFunctionsHandler56.add(switchingFunction57, 35.0d, 100.0d, (int) 'a');
        double double62 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray68 = new double[] { '4', (byte) 10 };
        double[] doubleArray69 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator70 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray68, doubleArray69);
        boolean boolean71 = switchingFunctionsHandler56.reset((double) 3, doubleArray68);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator72 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, (double) (short) 1, doubleArray54, doubleArray68);
        boolean boolean73 = switchingFunctionsHandler3.reset((double) 0, doubleArray54);
        double[] doubleArray77 = new double[] {};
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler78 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction79 = null;
        switchingFunctionsHandler78.add(switchingFunction79, 35.0d, 100.0d, (int) 'a');
        double double84 = switchingFunctionsHandler78.getEventTime();
        double[] doubleArray90 = new double[] { '4', (byte) 10 };
        double[] doubleArray91 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator92 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray90, doubleArray91);
        boolean boolean93 = switchingFunctionsHandler78.reset((double) 3, doubleArray90);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator94 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (double) 10, doubleArray77, doubleArray90);
        boolean boolean95 = switchingFunctionsHandler3.reset(100.0d, doubleArray77);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator96 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(1.0d, (double) (short) 100, doubleArray2, doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test02289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02289");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        org.apache.commons.math.ode.StepHandler stepHandler7 = graggBulirschStoerIntegrator6.getStepHandler();
        java.lang.String str8 = graggBulirschStoerIntegrator6.getName();
        double double9 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction10, 0.0d, (double) 10, (int) (byte) 10);
        java.lang.String str15 = graggBulirschStoerIntegrator6.getName();
        double double16 = graggBulirschStoerIntegrator6.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction17, Double.NaN, (double) 100, (int) (short) 100);
        org.apache.commons.math.ode.StepHandler stepHandler22 = graggBulirschStoerIntegrator6.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str8, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 18.708286933869708d + "'", double9 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str15, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 35.0d + "'", double16 == 35.0d);
        org.junit.Assert.assertNotNull(stepHandler22);
    }

    @Test
    public void test02290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02290");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setInterpolationControl(false, (int) (byte) 1);
        java.lang.String str18 = graggBulirschStoerIntegrator6.getName();
        org.apache.commons.math.ode.StepHandler stepHandler19 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setOrderControl(0, (double) (short) 100, (double) (-1.0f));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction24, 2.0d, 18.708286933869708d, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction29, 17.88854381999832d, (double) (short) -1, (int) (short) 1);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str18, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler19);
    }

    @Test
    public void test02291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02291");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler0.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray15 = new double[] { 10, 100, (byte) 0 };
        boolean boolean16 = switchingFunctionsHandler10.reset((double) 0, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler0.reset((double) 100.0f, doubleArray15);
        double[] doubleArray26 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray31 = new double[] { '4', (byte) 10 };
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator33 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray31, doubleArray32);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator34 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray26, doubleArray32);
        double[] doubleArray40 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray45 = new double[] { '4', (byte) 10 };
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray45, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray40, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) (short) 100, doubleArray32, doubleArray40);
        boolean boolean50 = switchingFunctionsHandler0.reset((double) 1, doubleArray40);
        boolean boolean51 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test02292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02292");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        double[] doubleArray12 = new double[] { '4', (byte) 10 };
        double[] doubleArray13 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray12, doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.reset(18.708286933869708d, doubleArray13);
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        boolean boolean18 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler0.add(switchingFunction19, (double) (byte) 1, (double) (byte) 0, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler0.add(switchingFunction24, Double.NaN, (double) (-1L), (int) (byte) 1);
        boolean boolean29 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = switchingFunctionsHandler0.evaluateStep(stepInterpolator30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test02293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02293");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        double[] doubleArray12 = new double[] { '4', (byte) 10 };
        double[] doubleArray13 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray12, doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.reset(18.708286933869708d, doubleArray13);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler0.add(switchingFunction16, Double.NaN, (-1.0d), (int) (byte) 10);
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.stop();
        double double23 = switchingFunctionsHandler0.getEventTime();
        double double24 = switchingFunctionsHandler0.getEventTime();
        boolean boolean25 = switchingFunctionsHandler0.stop();
        boolean boolean26 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        switchingFunctionsHandler0.add(switchingFunction27, (double) (-1L), (double) 100, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        switchingFunctionsHandler0.add(switchingFunction32, (double) 1, (double) (byte) 10, 10);
        boolean boolean37 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test02294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02294");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        java.lang.String str16 = graggBulirschStoerIntegrator6.getName();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str16, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02295");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(9.848857801796104d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ");
    }

    @Test
    public void test02296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02296");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler0.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray15 = new double[] { 10, 100, (byte) 0 };
        boolean boolean16 = switchingFunctionsHandler10.reset((double) 0, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler0.reset((double) 100.0f, doubleArray15);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler0.add(switchingFunction18, (double) (byte) 1, (double) 0, (int) (short) -1);
        double double23 = switchingFunctionsHandler0.getEventTime();
        boolean boolean24 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test02297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02297");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray7 = new double[] { 10, 100, (byte) 0 };
        boolean boolean8 = switchingFunctionsHandler2.reset((double) 0, doubleArray7);
        double[] doubleArray14 = new double[] { '4', (byte) 10 };
        double[] doubleArray15 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator16 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray14, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler2.reset(18.708286933869708d, doubleArray15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler18.add(switchingFunction19, 35.0d, 100.0d, (int) 'a');
        double double24 = switchingFunctionsHandler18.getEventTime();
        double[] doubleArray30 = new double[] { '4', (byte) 10 };
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray30, doubleArray31);
        boolean boolean33 = switchingFunctionsHandler18.reset((double) 3, doubleArray30);
        double[] doubleArray42 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray47 = new double[] { '4', (byte) 10 };
        double[] doubleArray48 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray47, doubleArray48);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray42, doubleArray48);
        double[] doubleArray56 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray61 = new double[] { '4', (byte) 10 };
        double[] doubleArray62 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray61, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray56, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator65 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) (short) 100, doubleArray48, doubleArray56);
        boolean boolean66 = switchingFunctionsHandler18.reset((double) (byte) 10, doubleArray56);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0L, (double) 2, doubleArray15, doubleArray56);
        double double68 = graggBulirschStoerIntegrator67.getCurrentSignedStepsize();
        double double69 = graggBulirschStoerIntegrator67.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler70 = graggBulirschStoerIntegrator67.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2.0d + "'", double69 == 2.0d);
        org.junit.Assert.assertNotNull(stepHandler70);
    }

    @Test
    public void test02298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02298");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, 17.88854381999832d, 0.0d, Double.NaN);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, (int) (short) 0, (int) '#', 10.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction10, 0.0d, (double) 100, 0);
        graggBulirschStoerIntegrator4.setInitialStepSize(31.622776601683793d);
    }

    @Test
    public void test02299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02299");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray9);
        java.lang.Object[] objArray18 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("", objArray18);
        java.lang.Throwable[] throwableArray20 = mathException19.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException(3.1622776601683795d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Object[]) strArray9, (java.lang.Throwable) mathException19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray9);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray9);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray9);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test02300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02300");
        java.lang.String[] strArray9 = new java.lang.String[] { "Gragg-Bulirsch-Stoer", "hi!", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 1, (java.lang.Throwable) derivativeException11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException(59.16079783099616d, (java.lang.Throwable) functionEvaluationException13);
        java.lang.String str15 = functionEvaluationException13.toString();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: " + "'", str15, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ");
    }

    @Test
    public void test02301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02301");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getMinStep();
        graggBulirschStoerIntegrator6.setStepsizeControl(0.0d, (double) 0, (double) ' ', (-1.0d));
        double double22 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction23, (double) (-1.0f), (double) (short) 1, (int) (byte) 0);
        graggBulirschStoerIntegrator6.setInitialStepSize((double) 0L);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator34 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler35 = graggBulirschStoerIntegrator34.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler36 = graggBulirschStoerIntegrator34.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        stepHandler36.handleStep(stepInterpolator37, true);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler36);
        double[] doubleArray45 = new double[] { '4', (byte) 10 };
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray45, doubleArray46);
        double double48 = graggBulirschStoerIntegrator47.getCurrentStepStart();
        graggBulirschStoerIntegrator47.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator47.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        double double58 = graggBulirschStoerIntegrator47.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler59 = graggBulirschStoerIntegrator47.getStepHandler();
        java.lang.String str60 = graggBulirschStoerIntegrator47.getName();
        java.lang.String str61 = graggBulirschStoerIntegrator47.getName();
        double[] doubleArray66 = new double[] { '4', (byte) 10 };
        double[] doubleArray67 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray66, doubleArray67);
        org.apache.commons.math.ode.StepHandler stepHandler69 = graggBulirschStoerIntegrator68.getStepHandler();
        double double70 = graggBulirschStoerIntegrator68.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler71 = graggBulirschStoerIntegrator68.getStepHandler();
        graggBulirschStoerIntegrator47.setStepHandler(stepHandler71);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler71);
        java.lang.String str74 = graggBulirschStoerIntegrator6.getName();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 18.708286933869708d + "'", double58 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str60, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str61, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]");
        org.junit.Assert.assertNotNull(stepHandler69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 18.708286933869708d + "'", double70 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str74, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02302");
        double[] doubleArray5 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray10 = new double[] { '4', (byte) 10 };
        double[] doubleArray11 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator12 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray10, doubleArray11);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator13 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray5, doubleArray11);
        graggBulirschStoerIntegrator13.setStepsizeControl((-1.0d), (double) 0, (double) 10, (double) 1L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        graggBulirschStoerIntegrator13.addSwitchingFunction(switchingFunction19, (double) (short) 1, (double) 'a', (int) (short) 10);
        graggBulirschStoerIntegrator13.setOrderControl((int) ' ', (double) (short) -1, (double) 10.0f);
        graggBulirschStoerIntegrator13.setStabilityCheck(false, 100, 0, (-0.0d));
        graggBulirschStoerIntegrator13.setInterpolationControl(false, (int) ' ');
        double double36 = graggBulirschStoerIntegrator13.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1.0d) + "'", double36 == (-1.0d));
    }

    @Test
    public void test02303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02303");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        java.lang.Object[] objArray13 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", objArray13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException18);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray5, (java.lang.Throwable) integratorException18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", strArray5);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException21);
        java.lang.Throwable[] throwableArray23 = integratorException22.getSuppressed();
        java.lang.Object[] objArray24 = integratorException22.getArguments();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
    }

    @Test
    public void test02304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02304");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(3.1622776601683795d, 4.229485053762256d, 97.0d, 0.0d);
    }

    @Test
    public void test02305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02305");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getMinStep();
        graggBulirschStoerIntegrator6.setStepsizeControl(0.0d, (double) 0, (double) ' ', (-1.0d));
        double double22 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setInitialStepSize(1.0d);
        double double25 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction26, (double) '#', (double) 1.0f, (int) (short) 100);
        graggBulirschStoerIntegrator6.setInitialStepSize((double) 1);
        double[] doubleArray37 = new double[] { '4', (byte) 10 };
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator39 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray37, doubleArray38);
        double double40 = graggBulirschStoerIntegrator39.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        graggBulirschStoerIntegrator39.addSwitchingFunction(switchingFunction41, 0.0d, (double) (-1.0f), (int) (short) 10);
        graggBulirschStoerIntegrator39.setOrderControl(0, (double) 2, 0.0d);
        double double50 = graggBulirschStoerIntegrator39.getMinStep();
        double[] doubleArray55 = new double[] { '4', (byte) 10 };
        double[] doubleArray56 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray55, doubleArray56);
        double double58 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator57.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double64 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        double double65 = graggBulirschStoerIntegrator57.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler66 = graggBulirschStoerIntegrator57.getStepHandler();
        double double67 = graggBulirschStoerIntegrator57.getMinStep();
        double double68 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        double double69 = graggBulirschStoerIntegrator57.getCurrentStepStart();
        double double70 = graggBulirschStoerIntegrator57.getMaxStep();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, 10.0d, (double) 100, 18.708286933869708d);
        double[] doubleArray80 = new double[] { '4', (byte) 10 };
        double[] doubleArray81 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator82 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray80, doubleArray81);
        double double83 = graggBulirschStoerIntegrator82.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator82.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double89 = graggBulirschStoerIntegrator82.getCurrentSignedStepsize();
        double double90 = graggBulirschStoerIntegrator82.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler91 = graggBulirschStoerIntegrator82.getStepHandler();
        double double92 = graggBulirschStoerIntegrator82.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler93 = graggBulirschStoerIntegrator82.getStepHandler();
        graggBulirschStoerIntegrator75.setStepHandler(stepHandler93);
        graggBulirschStoerIntegrator57.setStepHandler(stepHandler93);
        graggBulirschStoerIntegrator39.setStepHandler(stepHandler93);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler93);
        boolean boolean98 = stepHandler93.requiresDenseOutput();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 18.708286933869708d + "'", double25 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 18.708286933869708d + "'", double40 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 18.708286933869708d + "'", double58 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 18.708286933869708d + "'", double64 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(stepHandler66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 10.0d + "'", double67 == 10.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 18.708286933869708d + "'", double68 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 35.0d + "'", double70 == 35.0d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 18.708286933869708d + "'", double83 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 18.708286933869708d + "'", double89 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertNotNull(stepHandler91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 10.0d + "'", double92 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler93);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test02306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02306");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStabilityCheck(true, (-1), 0, (double) (-1.0f));
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, 10.0d, (double) 100, 18.708286933869708d);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) 0, 100.0d, (double) (short) 100, (double) 0);
        double[] doubleArray30 = new double[] { '4', (byte) 10 };
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray30, doubleArray31);
        double double33 = graggBulirschStoerIntegrator32.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator32.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double39 = graggBulirschStoerIntegrator32.getCurrentSignedStepsize();
        double double40 = graggBulirschStoerIntegrator32.getCurrentStepStart();
        graggBulirschStoerIntegrator32.setInterpolationControl(false, (int) (byte) 1);
        java.lang.String str44 = graggBulirschStoerIntegrator32.getName();
        org.apache.commons.math.ode.StepHandler stepHandler45 = graggBulirschStoerIntegrator32.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler45);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator51 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-1.0d), (double) 100.0f, (double) ' ', 10.0d);
        org.apache.commons.math.ode.StepHandler stepHandler52 = graggBulirschStoerIntegrator51.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler52);
        stepHandler52.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler52);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler61 = graggBulirschStoerIntegrator60.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler62 = graggBulirschStoerIntegrator60.getStepHandler();
        double double63 = graggBulirschStoerIntegrator60.getMinStep();
        double double64 = graggBulirschStoerIntegrator60.getMinStep();
        java.lang.String str65 = graggBulirschStoerIntegrator60.getName();
        graggBulirschStoerIntegrator60.setOrderControl(1, (double) ' ', Double.NaN);
        graggBulirschStoerIntegrator60.setInterpolationControl(false, 0);
        org.apache.commons.math.ode.StepHandler stepHandler73 = graggBulirschStoerIntegrator60.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator74 = null;
        stepHandler73.handleStep(stepInterpolator74, true);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler73);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 3.1622776601683795d + "'", double20 == 3.1622776601683795d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 18.708286933869708d + "'", double33 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 18.708286933869708d + "'", double39 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertNotNull(stepHandler61);
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str65, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler73);
    }

    @Test
    public void test02307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02307");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        graggBulirschStoerIntegrator6.setStabilityCheck(false, 0, (int) (byte) 10, (-0.0d));
        double double18 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction19, (double) (short) -1, 35.0d, (int) (byte) 0);
        double[] doubleArray28 = new double[] { '4', (byte) 10 };
        double[] doubleArray29 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator30 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray28, doubleArray29);
        double double31 = graggBulirschStoerIntegrator30.getCurrentStepStart();
        graggBulirschStoerIntegrator30.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator30.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        double[] doubleArray45 = new double[] { '4', (byte) 10 };
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray45, doubleArray46);
        double double48 = graggBulirschStoerIntegrator47.getCurrentStepStart();
        graggBulirschStoerIntegrator47.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator47.addSwitchingFunction(switchingFunction54, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray63 = new double[] { '4', (byte) 10 };
        double[] doubleArray64 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator65 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray63, doubleArray64);
        double double66 = graggBulirschStoerIntegrator65.getCurrentStepStart();
        double[] doubleArray71 = new double[] { '4', (byte) 10 };
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray71, doubleArray72);
        org.apache.commons.math.ode.StepHandler stepHandler74 = graggBulirschStoerIntegrator73.getStepHandler();
        graggBulirschStoerIntegrator65.setStepHandler(stepHandler74);
        graggBulirschStoerIntegrator47.setStepHandler(stepHandler74);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator77 = null;
        stepHandler74.handleStep(stepInterpolator77, false);
        graggBulirschStoerIntegrator30.setStepHandler(stepHandler74);
        org.apache.commons.math.ode.StepHandler stepHandler81 = graggBulirschStoerIntegrator30.getStepHandler();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler81);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator83 = null;
        stepHandler81.handleStep(stepInterpolator83, false);
        stepHandler81.reset();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertNotNull(stepHandler74);
        org.junit.Assert.assertNotNull(stepHandler81);
    }

    @Test
    public void test02308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02308");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double double15 = graggBulirschStoerIntegrator6.getMaxStep();
        double[] doubleArray20 = new double[] { '4', (byte) 10 };
        double[] doubleArray21 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator22 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray20, doubleArray21);
        double double23 = graggBulirschStoerIntegrator22.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator22.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double29 = graggBulirschStoerIntegrator22.getCurrentSignedStepsize();
        double double30 = graggBulirschStoerIntegrator22.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler31 = graggBulirschStoerIntegrator22.getStepHandler();
        boolean boolean32 = stepHandler31.requiresDenseOutput();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler31);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction34, 0.0d, (double) (byte) 1, (-1));
        java.lang.String str39 = graggBulirschStoerIntegrator6.getName();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator44 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler45 = graggBulirschStoerIntegrator44.getStepHandler();
        stepHandler45.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler45);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 35.0d + "'", double15 == 35.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 18.708286933869708d + "'", double23 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 18.708286933869708d + "'", double29 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str39, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler45);
    }

    @Test
    public void test02309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02309");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setStabilityCheck(false, (int) 'a', 10, (double) 2);
        graggBulirschStoerIntegrator6.setOrderControl((int) (short) 1, (double) (byte) 10, 18.708286933869708d);
        graggBulirschStoerIntegrator6.setInterpolationControl(true, 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction28, 9.848857801796104d, (double) (byte) 10, 0);
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0, (double) (-1), 4.229485053762256d, (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
    }

    @Test
    public void test02310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02310");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator6.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        double double17 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStabilityCheck(true, (int) 'a', (int) (byte) 100, 35.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction23, 3.1622776601683795d, 3.1622776601683795d, 2);
        graggBulirschStoerIntegrator6.setOrderControl(3, (double) 10L, (double) (short) 1);
        double double32 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double double33 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double[] doubleArray38 = new double[] { '4', (byte) 10 };
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray38, doubleArray39);
        double double41 = graggBulirschStoerIntegrator40.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator40.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double47 = graggBulirschStoerIntegrator40.getCurrentSignedStepsize();
        double double48 = graggBulirschStoerIntegrator40.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator40.getStepHandler();
        double double50 = graggBulirschStoerIntegrator40.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator40.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator52 = null;
        stepHandler51.handleStep(stepInterpolator52, false);
        boolean boolean55 = stepHandler51.requiresDenseOutput();
        stepHandler51.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler51);
        stepHandler51.reset();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 18.708286933869708d + "'", double17 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 18.708286933869708d + "'", double33 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 18.708286933869708d + "'", double41 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 18.708286933869708d + "'", double47 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test02311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02311");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        double double6 = graggBulirschStoerIntegrator4.getMinStep();
        graggBulirschStoerIntegrator4.setStabilityCheck(false, (int) (byte) 100, (int) ' ', 10.0d);
        java.lang.String str12 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 2, (-1.0d), (-1.0d), 18.708286933869708d);
        graggBulirschStoerIntegrator4.setInitialStepSize(18.566368063325246d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction20, 9.848857801796104d, 1.0d, (int) ' ');
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str12, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02312");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double[] doubleArray12 = new double[] { '4', (byte) 10 };
        double[] doubleArray13 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray12, doubleArray13);
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator14.getStepHandler();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler15);
        graggBulirschStoerIntegrator6.setOrderControl((int) (short) -1, (double) (-1L), (double) 10);
        graggBulirschStoerIntegrator6.setInitialStepSize(0.0d);
        double double23 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test02313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02313");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        org.apache.commons.math.ode.StepHandler stepHandler7 = graggBulirschStoerIntegrator6.getStepHandler();
        double double8 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double9 = graggBulirschStoerIntegrator6.getMaxStep();
        graggBulirschStoerIntegrator6.setInitialStepSize(17.88854381999832d);
        org.apache.commons.math.ode.StepHandler stepHandler12 = null;
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator6.setStepHandler(stepHandler12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 18.708286933869708d + "'", double8 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 35.0d + "'", double9 == 35.0d);
    }

    @Test
    public void test02314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02314");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, 10.0d, (double) 100, 18.708286933869708d);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double18 = graggBulirschStoerIntegrator11.getCurrentSignedStepsize();
        double double19 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator11.getStepHandler();
        double double21 = graggBulirschStoerIntegrator11.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler22 = graggBulirschStoerIntegrator11.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler22);
        double double24 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        java.lang.String str25 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction26, (double) (short) 1, 17.88854381999832d, 1);
        double double31 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 18.708286933869708d + "'", double12 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 18.708286933869708d + "'", double18 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str25, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 3.1622776601683795d + "'", double31 == 3.1622776601683795d);
    }

    @Test
    public void test02315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02315");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray5 = functionEvaluationException4.getSuppressed();
        java.lang.Object[] objArray13 = new java.lang.Object[] { '4', 2, (byte) 10 };
        java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("", objArray21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray21);
        java.lang.Object[] objArray24 = integratorException23.getArguments();
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", objArray13, (java.lang.Throwable) integratorException23);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) integratorException23);
        java.lang.String str27 = integratorException23.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) integratorException23);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray5, (java.lang.Throwable) functionEvaluationException28);
        java.lang.Throwable throwable35 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("", throwable35);
        java.lang.Object[] objArray38 = mathException37.getArguments();
        java.lang.Object[] objArray39 = mathException37.getArguments();
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, (java.lang.Throwable) mathException42);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "Evaluation failed for argument = {0}", objArray39, (java.lang.Throwable) mathException42);
        java.lang.Object[] objArray46 = functionEvaluationException45.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray5, (java.lang.Throwable) functionEvaluationException45);
        double double48 = functionEvaluationException47.getArgument();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[4, 2, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[4, 2, 10]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1.0d) + "'", double48 == (-1.0d));
    }

    @Test
    public void test02316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02316");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setOrderControl(2, (double) 1.0f, (double) (byte) 1);
        graggBulirschStoerIntegrator6.setOrderControl(10, 3.1622776601683795d, (double) (short) 100);
        java.lang.String str25 = graggBulirschStoerIntegrator6.getName();
        graggBulirschStoerIntegrator6.setInitialStepSize(0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str25, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02317");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException(17.88854381999832d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException4);
    }

    @Test
    public void test02318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02318");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", objArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException17);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray8, (java.lang.Throwable) integratorException21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException27);
        java.lang.Object[] objArray29 = integratorException28.getArguments();
        java.lang.Throwable throwable35 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("", throwable35);
        java.lang.Object[] objArray38 = mathException37.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.FunctionEvaluationException: ", objArray38);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: ", objArray29, (java.lang.Throwable) functionEvaluationException39);
        java.lang.Object[] objArray44 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable48 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("", throwable48);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!", objArray44, (java.lang.Throwable) mathException50);
        functionEvaluationException39.addSuppressed((java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException39);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray8);
        java.lang.Object[] objArray65 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("", objArray65);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException66);
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException66);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) derivativeException68);
        java.lang.Throwable[] throwableArray70 = derivativeException68.getSuppressed();
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray76);
        java.lang.Object[] objArray84 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("", objArray84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException85);
        org.apache.commons.math.ode.DerivativeException derivativeException87 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException85);
        org.apache.commons.math.ode.DerivativeException derivativeException88 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException87);
        org.apache.commons.math.ode.IntegratorException integratorException89 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException88);
        org.apache.commons.math.ode.IntegratorException integratorException90 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException89);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray76, (java.lang.Throwable) integratorException89);
        org.apache.commons.math.ode.DerivativeException derivativeException92 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", strArray76);
        org.apache.commons.math.ode.IntegratorException integratorException93 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException92);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray70, (java.lang.Throwable) derivativeException92);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray8, (java.lang.Throwable) derivativeException92);
        java.lang.Class<?> wildcardClass96 = mathException95.getClass();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!, 10]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test02319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02319");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        org.apache.commons.math.ode.StepHandler stepHandler7 = graggBulirschStoerIntegrator6.getStepHandler();
        double double8 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler9 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setInterpolationControl(true, (int) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler13 = graggBulirschStoerIntegrator6.getStepHandler();
        double double14 = graggBulirschStoerIntegrator6.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 18.708286933869708d + "'", double8 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
    }

    @Test
    public void test02320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02320");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 100.0d, Double.NaN, (double) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, 35.0d, (double) 0, 0);
        double double10 = graggBulirschStoerIntegrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 100.0d + "'", double10 == 100.0d);
    }

    @Test
    public void test02321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02321");
        java.lang.Throwable throwable6 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable6);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("", throwable6);
        java.lang.Object[] objArray9 = mathException8.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.FunctionEvaluationException: ", objArray9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) functionEvaluationException10);
        java.lang.Object[] objArray23 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", objArray23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray23);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", objArray23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        java.lang.Object[] objArray36 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable40 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("", throwable40);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("hi!", objArray36, (java.lang.Throwable) mathException42);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException43);
        java.lang.Throwable[] throwableArray45 = integratorException44.getSuppressed();
        java.lang.Object[] objArray53 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("", objArray53);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray53);
        java.lang.Object[] objArray56 = integratorException55.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray45, (java.lang.Throwable) integratorException55);
        functionEvaluationException30.addSuppressed((java.lang.Throwable) integratorException55);
        java.lang.Object[] objArray59 = integratorException55.getArguments();
        java.lang.Object[] objArray60 = integratorException55.getArguments();
        java.lang.Throwable[] throwableArray61 = integratorException55.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException63);
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException63);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray61, (java.lang.Throwable) integratorException65);
        java.lang.Throwable[] throwableArray67 = functionEvaluationException66.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException66);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "org.apache.commons.math.ode.DerivativeException: hi!", objArray23, (java.lang.Throwable) functionEvaluationException66);
        mathException12.addSuppressed((java.lang.Throwable) functionEvaluationException66);
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException66);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, 10]");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray67);
    }

    @Test
    public void test02322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02322");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        org.apache.commons.math.ode.StepHandler stepHandler7 = graggBulirschStoerIntegrator6.getStepHandler();
        double double8 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler9 = graggBulirschStoerIntegrator6.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler10 = graggBulirschStoerIntegrator6.getStepHandler();
        double double11 = graggBulirschStoerIntegrator6.getMaxStep();
        double double12 = graggBulirschStoerIntegrator6.getMinStep();
        double double13 = graggBulirschStoerIntegrator6.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction14, (double) '#', 100.0d, (int) (short) -1);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 18.708286933869708d + "'", double8 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 35.0d + "'", double11 == 35.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 35.0d + "'", double13 == 35.0d);
    }

    @Test
    public void test02323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02323");
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", objArray14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray14);
        java.lang.Object[] objArray17 = integratorException16.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "Gragg-Bulirsch-Stoer", objArray17);
        java.lang.Object[] objArray27 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", objArray27);
        java.lang.Object[] objArray29 = mathException28.getArguments();
        java.lang.Object[] objArray36 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("", objArray36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException37);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "", objArray29, (java.lang.Throwable) integratorException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.ode.DerivativeException: ", objArray17, (java.lang.Throwable) integratorException42);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException42);
        java.lang.Object[] objArray46 = derivativeException45.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("", objArray46);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", objArray46);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Evaluation failed for argument = hi!", (java.lang.Throwable) integratorException48);
        java.lang.Object[] objArray59 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("", objArray59);
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray59);
        java.lang.Object[] objArray62 = integratorException61.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "Gragg-Bulirsch-Stoer", objArray62);
        mathException49.addSuppressed((java.lang.Throwable) functionEvaluationException63);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException63);
        double double66 = functionEvaluationException63.getArgument();
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 35.0d + "'", double66 == 35.0d);
    }

    @Test
    public void test02324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02324");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, 59.16079783099616d, 0.0d, (double) 100.0f);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator9 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(9.848857801796104d, (double) '#', (double) 10.0f, 2.0d);
        org.apache.commons.math.ode.StepHandler stepHandler10 = graggBulirschStoerIntegrator9.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler10);
        org.junit.Assert.assertNotNull(stepHandler10);
    }

    @Test
    public void test02325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02325");
        java.lang.Object[] objArray8 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("", objArray8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, (java.lang.Throwable) derivativeException11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) functionEvaluationException12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException14);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[hi!, 1, 10.0, 4, 100]");
    }

    @Test
    public void test02326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02326");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        double[] doubleArray12 = new double[] { '4', (byte) 10 };
        double[] doubleArray13 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray12, doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.reset(18.708286933869708d, doubleArray13);
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        boolean boolean17 = switchingFunctionsHandler0.stop();
        boolean boolean18 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler0.add(switchingFunction19, (-1.0d), 59.16079783099616d, 10);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = switchingFunctionsHandler0.evaluateStep(stepInterpolator24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test02327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02327");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        java.lang.String str8 = graggBulirschStoerIntegrator6.getName();
        graggBulirschStoerIntegrator6.setInitialStepSize((double) (short) 10);
        java.lang.String str11 = graggBulirschStoerIntegrator6.getName();
        java.lang.String str12 = graggBulirschStoerIntegrator6.getName();
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction14, 97.0d, (double) (short) 1, (int) (byte) 10);
        double double19 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction20, 97.0d, (double) (short) 10, (int) (short) 0);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str8, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str11, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str12, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 18.708286933869708d + "'", double19 == 18.708286933869708d);
    }

    @Test
    public void test02328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02328");
        java.lang.Object[] objArray6 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("", objArray6);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException14);
        mathException11.addSuppressed((java.lang.Throwable) integratorException15);
        java.lang.Throwable[] throwableArray17 = mathException11.getSuppressed();
        java.lang.String str18 = mathException11.toString();
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.apache.commons.math.MathException: " + "'", str18, "org.apache.commons.math.MathException: ");
    }

    @Test
    public void test02329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02329");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double double15 = graggBulirschStoerIntegrator6.getMaxStep();
        graggBulirschStoerIntegrator6.setInterpolationControl(false, 10);
        graggBulirschStoerIntegrator6.setOrderControl((-1), 3.1622776601683795d, 17.88854381999832d);
        graggBulirschStoerIntegrator6.setOrderControl((int) (byte) 100, (double) 0, 0.0d);
        double double27 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setInterpolationControl(true, 3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 35.0d + "'", double15 == 35.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
    }

    @Test
    public void test02330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02330");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator6.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        double double17 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        java.lang.String str18 = graggBulirschStoerIntegrator6.getName();
        double double19 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction20, (double) 100, (double) (byte) 0, 1);
        java.lang.String str25 = graggBulirschStoerIntegrator6.getName();
        double double26 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction27, (double) (short) 1, (double) ' ', (int) (byte) 10);
        double double32 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setInitialStepSize(100.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction35, (double) 100.0f, (double) (short) 10, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction40 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction40, 100.0d, (double) 0.0f, (int) (byte) 100);
        double double45 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 18.708286933869708d + "'", double17 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str18, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str25, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 18.708286933869708d + "'", double32 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 18.708286933869708d + "'", double45 == 18.708286933869708d);
    }

    @Test
    public void test02331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02331");
        java.lang.Throwable throwable11 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("", throwable11);
        java.lang.Object[] objArray14 = mathException13.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: ", objArray14);
        java.lang.Object[] objArray19 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable23 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", throwable23);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", objArray19, (java.lang.Throwable) mathException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "org.apache.commons.math.ode.DerivativeException: ", objArray14, (java.lang.Throwable) mathException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "", objArray14);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray14);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", objArray14);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!, 10]");
    }

    @Test
    public void test02332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02332");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator6.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        double double17 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        java.lang.String str18 = graggBulirschStoerIntegrator6.getName();
        graggBulirschStoerIntegrator6.setOrderControl((int) (short) 10, (double) '#', (double) (short) -1);
        java.lang.String str23 = graggBulirschStoerIntegrator6.getName();
        double double24 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 18.708286933869708d + "'", double17 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str18, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str23, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 18.708286933869708d + "'", double24 == 18.708286933869708d);
    }

    @Test
    public void test02333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02333");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator6.setInterpolationControl(true, 2);
        graggBulirschStoerIntegrator6.setOrderControl((int) (short) 100, 10.0d, (double) '4');
        double double20 = graggBulirschStoerIntegrator6.getMaxStep();
        double double21 = graggBulirschStoerIntegrator6.getMaxStep();
        graggBulirschStoerIntegrator6.setInterpolationControl(true, (int) (byte) 10);
        graggBulirschStoerIntegrator6.setInitialStepSize((double) (short) -1);
        double double27 = graggBulirschStoerIntegrator6.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 35.0d + "'", double20 == 35.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 35.0d + "'", double21 == 35.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 35.0d + "'", double27 == 35.0d);
    }

    @Test
    public void test02334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02334");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator11.addSwitchingFunction(switchingFunction18, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        double double30 = graggBulirschStoerIntegrator29.getCurrentStepStart();
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = graggBulirschStoerIntegrator37.getStepHandler();
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator11.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler38);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction42 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction42, 35.0d, 0.0d, (int) (byte) 100);
        double double47 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 10L, Double.NaN, (double) (byte) 0, (double) (short) 1);
        graggBulirschStoerIntegrator4.setOrderControl(1, (double) 10, (double) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction57, (double) 100.0f, (double) 10L, (-1));
        java.lang.String str62 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (short) 10, (double) 1, (double) (byte) 0, 97.0d);
        graggBulirschStoerIntegrator4.setStepsizeControl(0.0d, (double) 1, (double) '4', (double) 'a');
        graggBulirschStoerIntegrator4.setOrderControl(2, 0.0d, 3.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction77 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction77, (double) (byte) 100, (double) 'a', (int) (short) 1);
        double double82 = graggBulirschStoerIntegrator4.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str62, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
    }

    @Test
    public void test02335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02335");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, 35.0d, 100.0d, (int) 'a');
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        switchingFunctionsHandler0.add(switchingFunction8, 0.0d, (double) 1, 2);
        boolean boolean13 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler0.add(switchingFunction14, (double) 1, 2.0d, (int) '#');
        boolean boolean19 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler0.add(switchingFunction20, 100.0d, 9.848857801796104d, 100);
        boolean boolean25 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test02336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02336");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator11.addSwitchingFunction(switchingFunction18, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        double double30 = graggBulirschStoerIntegrator29.getCurrentStepStart();
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = graggBulirschStoerIntegrator37.getStepHandler();
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator11.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 100, (int) ' ', (double) (byte) 0);
        double[] doubleArray51 = new double[] { '4', (byte) 10 };
        double[] doubleArray52 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator53 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray51, doubleArray52);
        double double54 = graggBulirschStoerIntegrator53.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator53.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double60 = graggBulirschStoerIntegrator53.getCurrentSignedStepsize();
        double double61 = graggBulirschStoerIntegrator53.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler62 = graggBulirschStoerIntegrator53.getStepHandler();
        boolean boolean63 = stepHandler62.requiresDenseOutput();
        boolean boolean64 = stepHandler62.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler62);
        double double66 = graggBulirschStoerIntegrator4.getMinStep();
        double[] doubleArray71 = new double[] { '4', (byte) 10 };
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray71, doubleArray72);
        double double74 = graggBulirschStoerIntegrator73.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator73.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double80 = graggBulirschStoerIntegrator73.getCurrentSignedStepsize();
        double double81 = graggBulirschStoerIntegrator73.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler82 = graggBulirschStoerIntegrator73.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler82);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction84 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction84, (double) 0.0f, (double) '#', (int) (byte) -1);
        double double89 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler90 = graggBulirschStoerIntegrator4.getStepHandler();
        double double91 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setStabilityCheck(true, 2, (int) (byte) -1, (double) 10.0f);
        java.lang.String str97 = graggBulirschStoerIntegrator4.getName();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 18.708286933869708d + "'", double54 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 18.708286933869708d + "'", double60 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 18.708286933869708d + "'", double74 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 18.708286933869708d + "'", double80 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(stepHandler82);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertNotNull(stepHandler90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str97, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02337");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setInterpolationControl(false, (int) (byte) 1);
        java.lang.String str18 = graggBulirschStoerIntegrator6.getName();
        org.apache.commons.math.ode.StepHandler stepHandler19 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setOrderControl(0, (double) (short) 100, (double) (-1.0f));
        double double24 = graggBulirschStoerIntegrator6.getMaxStep();
        java.lang.String str25 = graggBulirschStoerIntegrator6.getName();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str18, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 35.0d + "'", double24 == 35.0d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str25, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02338");
        java.lang.Throwable throwable8 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("", throwable8);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray11);
        java.lang.Object[] objArray13 = functionEvaluationException12.getArguments();
        double double14 = functionEvaluationException12.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) functionEvaluationException12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) functionEvaluationException12);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
    }

    @Test
    public void test02339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02339");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test02340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02340");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) '4', (double) 10, Double.NaN, (double) 100L);
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        double double6 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test02341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02341");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        org.apache.commons.math.ode.StepHandler stepHandler7 = graggBulirschStoerIntegrator6.getStepHandler();
        double double8 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler9 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setInterpolationControl(true, (int) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler13 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) (byte) 1, (double) 1, (double) 0, (double) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction19, (double) ' ', 10.0d, 1);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 18.708286933869708d + "'", double8 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertNotNull(stepHandler13);
    }

    @Test
    public void test02342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02342");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray12, (java.lang.Throwable) functionEvaluationException17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Throwable) integratorException19);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException21);
        java.lang.Throwable[] throwableArray23 = mathException22.getSuppressed();
        java.lang.Object[] objArray33 = new java.lang.Object[] { '4', 2, (byte) 10 };
        java.lang.Object[] objArray41 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("", objArray41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray41);
        java.lang.Object[] objArray44 = integratorException43.getArguments();
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("hi!", objArray33, (java.lang.Throwable) integratorException43);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: ", objArray33);
        java.lang.Throwable throwable47 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException(3.1622776601683795d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", objArray33, throwable47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException(17.88854381999832d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", objArray33);
        double double50 = functionEvaluationException49.getArgument();
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) functionEvaluationException49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) functionEvaluationException49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = {0}", (java.lang.Throwable) functionEvaluationException52);
        java.lang.Throwable[] throwableArray54 = functionEvaluationException53.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray54);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[4, 2, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[4, 2, 10]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 17.88854381999832d + "'", double50 == 17.88854381999832d);
        org.junit.Assert.assertNotNull(throwableArray54);
    }

    @Test
    public void test02343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02343");
        java.lang.Object[] objArray8 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("", objArray8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, (java.lang.Throwable) derivativeException11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) functionEvaluationException12);
        double double14 = functionEvaluationException12.getArgument();
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException12);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1.0d) + "'", double14 == (-1.0d));
    }

    @Test
    public void test02344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02344");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = hi!");
    }

    @Test
    public void test02345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02345");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, 10.0d, (double) 100, 18.708286933869708d);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double18 = graggBulirschStoerIntegrator11.getCurrentSignedStepsize();
        double double19 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator11.getStepHandler();
        double double21 = graggBulirschStoerIntegrator11.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler22 = graggBulirschStoerIntegrator11.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler22);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction24, (-1.0d), (double) (-1.0f), (int) ' ');
        java.lang.Class<?> wildcardClass29 = graggBulirschStoerIntegrator4.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 18.708286933869708d + "'", double12 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 18.708286933869708d + "'", double18 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test02346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02346");
        java.lang.Throwable throwable7 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("", throwable7);
        java.lang.Object[] objArray10 = mathException9.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray10);
        double double12 = functionEvaluationException11.getArgument();
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException11);
        double double14 = functionEvaluationException11.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.MathException: Evaluation failed for argument = {0}", (java.lang.Throwable) functionEvaluationException11);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
    }

    @Test
    public void test02347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02347");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) (short) -1, 0.0d, 100);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = switchingFunctionsHandler0.evaluateStep(stepInterpolator12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test02348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02348");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(32.0d, "org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: ");
        java.lang.Class<?> wildcardClass3 = functionEvaluationException2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test02349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02349");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) (short) -1, 0.0d, 100);
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        switchingFunctionsHandler0.add(switchingFunction13, 0.0d, (double) (-1), (int) 'a');
        double double18 = switchingFunctionsHandler0.getEventTime();
        boolean boolean19 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray23 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler24.add(switchingFunction25, 35.0d, 100.0d, (int) 'a');
        double double30 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray36 = new double[] { '4', (byte) 10 };
        double[] doubleArray37 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray36, doubleArray37);
        boolean boolean39 = switchingFunctionsHandler24.reset((double) 3, doubleArray36);
        boolean boolean40 = switchingFunctionsHandler24.stop();
        boolean boolean41 = switchingFunctionsHandler24.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray48 = new double[] { 10, 100, (byte) 0 };
        boolean boolean49 = switchingFunctionsHandler43.reset((double) 0, doubleArray48);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        boolean boolean51 = switchingFunctionsHandler43.evaluateStep(stepInterpolator50);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray58 = new double[] { 10, 100, (byte) 0 };
        boolean boolean59 = switchingFunctionsHandler53.reset((double) 0, doubleArray58);
        switchingFunctionsHandler43.stepAccepted(10.0d, doubleArray58);
        boolean boolean61 = switchingFunctionsHandler24.reset((double) (short) 10, doubleArray58);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator62 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(3.0d, (double) 100, doubleArray23, doubleArray58);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted(59.16079783099616d, doubleArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test02350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02350");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray4);
        java.lang.Class<?> wildcardClass8 = strArray4.getClass();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test02351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02351");
        java.lang.Object[] objArray6 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("", throwable10);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", objArray6, (java.lang.Throwable) mathException12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException13);
        java.lang.Throwable[] throwableArray15 = integratorException14.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray15);
        java.lang.Throwable[] throwableArray17 = integratorException16.getSuppressed();
        java.lang.Throwable throwable21 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable21);
        double double23 = functionEvaluationException22.getArgument();
        java.lang.Throwable throwable26 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable26);
        double double28 = functionEvaluationException27.getArgument();
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException27);
        functionEvaluationException22.addSuppressed((java.lang.Throwable) derivativeException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 10, (java.lang.Throwable) derivativeException29);
        double double32 = functionEvaluationException31.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) functionEvaluationException31);
        double double34 = functionEvaluationException33.getArgument();
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!, 10]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1.0d) + "'", double23 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.0d) + "'", double28 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
    }

    @Test
    public void test02352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02352");
        java.lang.String[] strArray14 = new java.lang.String[] { "Gragg-Bulirsch-Stoer", "hi!", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray14);
        java.lang.Object[] objArray24 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable28 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", throwable28);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("hi!", objArray24, (java.lang.Throwable) mathException30);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("", throwable37);
        java.lang.Object[] objArray40 = mathException39.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.FunctionEvaluationException: ", objArray40);
        double double42 = functionEvaluationException41.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", objArray24, (java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray14, (java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray14);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!, 10]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    }

    @Test
    public void test02353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02353");
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!");
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) mathException2);
        org.apache.commons.math.ode.IntegratorException integratorException4 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException2);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.ode.DerivativeException: ");
        java.lang.Object[] objArray11 = functionEvaluationException10.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", objArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray11);
        mathException2.addSuppressed((java.lang.Throwable) mathException13);
        java.lang.String str15 = mathException13.toString();
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!" + "'", str15, "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!");
    }

    @Test
    public void test02354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02354");
        java.lang.Object[] objArray8 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("", objArray8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) derivativeException11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException13);
        java.lang.Object[] objArray15 = functionEvaluationException13.getArguments();
        java.lang.Throwable[] throwableArray16 = functionEvaluationException13.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray16);
        java.lang.String str18 = integratorException17.toString();
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: " + "'", str18, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test02355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02355");
        java.lang.Object[] objArray8 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("", objArray8);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray8);
        java.lang.Object[] objArray11 = integratorException10.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.ode.DerivativeException: ");
        java.lang.Throwable[] throwableArray15 = functionEvaluationException14.getSuppressed();
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray11, (java.lang.Throwable) functionEvaluationException14);
        double double17 = functionEvaluationException14.getArgument();
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
    }

    @Test
    public void test02356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02356");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getMinStep();
        graggBulirschStoerIntegrator6.setOrderControl((int) (short) 1, (double) 0.0f, (double) 1.0f);
        graggBulirschStoerIntegrator6.setStabilityCheck(true, 2, (int) '4', (double) 10.0f);
        double double26 = graggBulirschStoerIntegrator6.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 35.0d + "'", double26 == 35.0d);
    }

    @Test
    public void test02357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02357");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 3");
    }

    @Test
    public void test02358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02358");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, 35.0d, 100.0d, (int) 'a');
        double double6 = switchingFunctionsHandler0.getEventTime();
        boolean boolean7 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test02359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02359");
        java.lang.String[] strArray13 = new java.lang.String[] { "Gragg-Bulirsch-Stoer", "hi!", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        java.lang.Object[] objArray21 = functionEvaluationException20.getArguments();
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Throwable) functionEvaluationException20);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException20);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Object[]) strArray13, (java.lang.Throwable) functionEvaluationException20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(35.0d, "org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ", strArray13);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1.0]");
    }

    @Test
    public void test02360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02360");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        org.apache.commons.math.ode.StepHandler stepHandler7 = graggBulirschStoerIntegrator6.getStepHandler();
        double double8 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler9 = graggBulirschStoerIntegrator6.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction10, (double) (byte) 10, (double) 2, (int) (byte) 1);
        double double15 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler16 = graggBulirschStoerIntegrator6.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 18.708286933869708d + "'", double8 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(stepHandler16);
    }

    @Test
    public void test02361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02361");
        java.lang.Throwable throwable4 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("", throwable4);
        java.lang.Object[] objArray7 = mathException6.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException6);
        java.lang.Object[] objArray9 = mathException6.getArguments();
        java.lang.Object[] objArray10 = mathException6.getArguments();
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        java.lang.String str14 = derivativeException13.getPattern();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: hi!" + "'", str14, "org.apache.commons.math.FunctionEvaluationException: hi!");
    }

    @Test
    public void test02362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02362");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f);
        java.lang.String str4 = functionEvaluationException3.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        functionEvaluationException3.addSuppressed((java.lang.Throwable) functionEvaluationException6);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Throwable) functionEvaluationException6);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException6);
        java.lang.String str10 = derivativeException9.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Evaluation failed for argument = {0}" + "'", str4, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97" + "'", str10, "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97");
    }

    @Test
    public void test02363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02363");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException6);
        java.lang.Object[] objArray8 = integratorException7.getArguments();
        java.lang.Throwable throwable14 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("", throwable14);
        java.lang.Object[] objArray17 = mathException16.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.FunctionEvaluationException: ", objArray17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: ", objArray8, (java.lang.Throwable) functionEvaluationException18);
        java.lang.Throwable[] throwableArray20 = mathException19.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException19);
        java.lang.Throwable throwable31 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", throwable31);
        java.lang.Object[] objArray34 = mathException33.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.FunctionEvaluationException: ", objArray34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray34);
        java.lang.Object[] objArray43 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("", objArray43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException44);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException44);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException46);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException47);
        java.lang.Object[] objArray49 = derivativeException47.getArguments();
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("");
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException51);
        derivativeException47.addSuppressed((java.lang.Throwable) integratorException52);
        java.lang.Throwable[] throwableArray54 = derivativeException47.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, "org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ", objArray34, (java.lang.Throwable) derivativeException47);
        derivativeException21.addSuppressed((java.lang.Throwable) derivativeException47);
        java.lang.Throwable[] throwableArray57 = derivativeException21.getSuppressed();
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray57);
        java.lang.String str60 = functionEvaluationException59.toString();
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer" + "'", str60, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02364");
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Evaluation failed for argument = {0}");
        java.lang.Object[] objArray4 = mathException3.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray4);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
    }

    @Test
    public void test02365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02365");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 0, Double.NaN, (double) 0L, 52.0d);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        java.lang.String str6 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations7 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler9.add(switchingFunction10, 35.0d, 100.0d, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray21 = new double[] { 10, 100, (byte) 0 };
        boolean boolean22 = switchingFunctionsHandler16.reset((double) 0, doubleArray21);
        double[] doubleArray28 = new double[] { '4', (byte) 10 };
        double[] doubleArray29 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator30 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray28, doubleArray29);
        boolean boolean31 = switchingFunctionsHandler16.reset(18.708286933869708d, doubleArray29);
        boolean boolean32 = switchingFunctionsHandler9.reset((double) (byte) 0, doubleArray29);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        switchingFunctionsHandler34.add(switchingFunction35, 35.0d, 100.0d, (int) 'a');
        double double40 = switchingFunctionsHandler34.getEventTime();
        double[] doubleArray46 = new double[] { '4', (byte) 10 };
        double[] doubleArray47 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray46, doubleArray47);
        boolean boolean49 = switchingFunctionsHandler34.reset((double) 3, doubleArray46);
        double[] doubleArray58 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray63 = new double[] { '4', (byte) 10 };
        double[] doubleArray64 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator65 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray63, doubleArray64);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator66 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray58, doubleArray64);
        double[] doubleArray72 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray77 = new double[] { '4', (byte) 10 };
        double[] doubleArray78 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray77, doubleArray78);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator80 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray72, doubleArray78);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator81 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) (short) 100, doubleArray64, doubleArray72);
        boolean boolean82 = switchingFunctionsHandler34.reset((double) (byte) 10, doubleArray72);
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator4.integrate(firstOrderDifferentialEquations7, (double) (short) 0, doubleArray29, Double.NaN, doubleArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str6, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test02366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02366");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray8);
        java.lang.Object[] objArray17 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", objArray17);
        java.lang.Throwable[] throwableArray19 = mathException18.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException(3.1622776601683795d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: ", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: ", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 3);
        java.lang.String str29 = functionEvaluationException28.getPattern();
        java.lang.Object[] objArray30 = functionEvaluationException28.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Throwable) functionEvaluationException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f);
        functionEvaluationException28.addSuppressed((java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException28);
        derivativeException23.addSuppressed((java.lang.Throwable) functionEvaluationException28);
        java.lang.Throwable[] throwableArray37 = derivativeException23.getSuppressed();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Evaluation failed for argument = {0}" + "'", str29, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[3.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[3.0]");
        org.junit.Assert.assertNotNull(throwableArray37);
    }

    @Test
    public void test02367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02367");
        java.lang.String[] strArray9 = new java.lang.String[] { "Gragg-Bulirsch-Stoer", "hi!", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException13);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException14);
        java.lang.Class<?> wildcardClass16 = integratorException15.getClass();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test02368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02368");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        double[] doubleArray12 = new double[] { '4', (byte) 10 };
        double[] doubleArray13 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray12, doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.reset(18.708286933869708d, doubleArray13);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler0.add(switchingFunction16, Double.NaN, (-1.0d), (int) (byte) 10);
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.stop();
        boolean boolean23 = switchingFunctionsHandler0.stop();
        boolean boolean24 = switchingFunctionsHandler0.isEmpty();
        boolean boolean25 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray32 = new double[] { 10, 100, (byte) 0 };
        boolean boolean33 = switchingFunctionsHandler27.reset((double) 0, doubleArray32);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = switchingFunctionsHandler27.evaluateStep(stepInterpolator34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray42 = new double[] { 10, 100, (byte) 0 };
        boolean boolean43 = switchingFunctionsHandler37.reset((double) 0, doubleArray42);
        switchingFunctionsHandler27.stepAccepted(10.0d, doubleArray42);
        boolean boolean45 = switchingFunctionsHandler27.isEmpty();
        boolean boolean46 = switchingFunctionsHandler27.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray55 = new double[] { 10, 100, (byte) 0 };
        boolean boolean56 = switchingFunctionsHandler50.reset((double) 0, doubleArray55);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray62 = new double[] { 10, 100, (byte) 0 };
        boolean boolean63 = switchingFunctionsHandler57.reset((double) 0, doubleArray62);
        double[] doubleArray69 = new double[] { '4', (byte) 10 };
        double[] doubleArray70 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator71 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray69, doubleArray70);
        boolean boolean72 = switchingFunctionsHandler57.reset(18.708286933869708d, doubleArray70);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, 35.0d, doubleArray55, doubleArray70);
        boolean boolean74 = switchingFunctionsHandler27.reset(3.1622776601683795d, doubleArray70);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted((double) (byte) 0, doubleArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test02369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02369");
        java.lang.String[] strArray10 = new java.lang.String[] { "Gragg-Bulirsch-Stoer", "hi!", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException14);
        java.lang.String str16 = integratorException15.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException15);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer" + "'", str16, "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02370");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test02371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02371");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator6.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        double double17 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        java.lang.String str18 = graggBulirschStoerIntegrator6.getName();
        double double19 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction20, (double) 100, (double) (byte) 0, 1);
        java.lang.String str25 = graggBulirschStoerIntegrator6.getName();
        graggBulirschStoerIntegrator6.setOrderControl((int) 'a', 100.0d, (double) (-1.0f));
        double double30 = graggBulirschStoerIntegrator6.getMinStep();
        graggBulirschStoerIntegrator6.setOrderControl(0, (double) 10, (-0.0d));
        org.apache.commons.math.ode.StepHandler stepHandler35 = graggBulirschStoerIntegrator6.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 18.708286933869708d + "'", double17 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str18, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str25, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler35);
    }

    @Test
    public void test02372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02372");
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable5);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("", throwable5);
        java.lang.Object[] objArray8 = mathException7.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException7);
        java.lang.Throwable[] throwableArray10 = mathException7.getSuppressed();
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = hi!", (java.lang.Object[]) throwableArray10);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
    }

    @Test
    public void test02373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02373");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator11.addSwitchingFunction(switchingFunction18, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        double double30 = graggBulirschStoerIntegrator29.getCurrentStepStart();
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = graggBulirschStoerIntegrator37.getStepHandler();
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator11.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 100, (int) ' ', (double) (byte) 0);
        double[] doubleArray51 = new double[] { '4', (byte) 10 };
        double[] doubleArray52 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator53 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray51, doubleArray52);
        double double54 = graggBulirschStoerIntegrator53.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator53.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double60 = graggBulirschStoerIntegrator53.getCurrentSignedStepsize();
        double double61 = graggBulirschStoerIntegrator53.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler62 = graggBulirschStoerIntegrator53.getStepHandler();
        boolean boolean63 = stepHandler62.requiresDenseOutput();
        boolean boolean64 = stepHandler62.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler62);
        double double66 = graggBulirschStoerIntegrator4.getMinStep();
        java.lang.String str67 = graggBulirschStoerIntegrator4.getName();
        double double68 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 18.708286933869708d + "'", double54 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 18.708286933869708d + "'", double60 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str67, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
    }

    @Test
    public void test02374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02374");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(18.708286933869708d, "");
        java.lang.Throwable[] throwableArray3 = functionEvaluationException2.getSuppressed();
        java.lang.Class<?> wildcardClass4 = throwableArray3.getClass();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test02375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02375");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler0.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray15 = new double[] { 10, 100, (byte) 0 };
        boolean boolean16 = switchingFunctionsHandler10.reset((double) 0, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler0.reset((double) 100.0f, doubleArray15);
        double[] doubleArray26 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray31 = new double[] { '4', (byte) 10 };
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator33 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray31, doubleArray32);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator34 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray26, doubleArray32);
        double[] doubleArray40 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray45 = new double[] { '4', (byte) 10 };
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray45, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray40, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) (short) 100, doubleArray32, doubleArray40);
        boolean boolean50 = switchingFunctionsHandler0.reset((double) 1, doubleArray40);
        double[] doubleArray52 = null;
        boolean boolean53 = switchingFunctionsHandler0.reset((double) 10L, doubleArray52);
        double double54 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray63 = new double[] { 10, 100, (byte) 0 };
        boolean boolean64 = switchingFunctionsHandler58.reset((double) 0, doubleArray63);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray70 = new double[] { 10, 100, (byte) 0 };
        boolean boolean71 = switchingFunctionsHandler65.reset((double) 0, doubleArray70);
        double[] doubleArray77 = new double[] { '4', (byte) 10 };
        double[] doubleArray78 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray77, doubleArray78);
        boolean boolean80 = switchingFunctionsHandler65.reset(18.708286933869708d, doubleArray78);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator81 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, 35.0d, doubleArray63, doubleArray78);
        switchingFunctionsHandler0.stepAccepted(35.0d, doubleArray63);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator83 = null;
        boolean boolean84 = switchingFunctionsHandler0.evaluateStep(stepInterpolator83);
        boolean boolean85 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction86 = null;
        switchingFunctionsHandler0.add(switchingFunction86, (double) (-1L), (double) '#', (int) (short) 100);
        double double91 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
    }

    @Test
    public void test02376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02376");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray13 = new double[] { 10, 100, (byte) 0 };
        boolean boolean14 = switchingFunctionsHandler8.reset((double) 0, doubleArray13);
        double[] doubleArray21 = new double[] { 0.0d, 0, (short) 100, 'a', 3.1622776601683795d, (short) 0 };
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator22 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1L, (double) 'a', doubleArray13, doubleArray21);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray28 = new double[] { 10, 100, (byte) 0 };
        boolean boolean29 = switchingFunctionsHandler23.reset((double) 0, doubleArray28);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler23.evaluateStep(stepInterpolator30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray38 = new double[] { 10, 100, (byte) 0 };
        boolean boolean39 = switchingFunctionsHandler33.reset((double) 0, doubleArray38);
        boolean boolean40 = switchingFunctionsHandler23.reset((double) 100.0f, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, (double) (byte) -1, doubleArray13, doubleArray38);
        double[] doubleArray44 = new double[] {};
        double[] doubleArray50 = new double[] { (short) 100, 3, 'a' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        switchingFunctionsHandler51.add(switchingFunction52, 35.0d, 100.0d, (int) 'a');
        double double57 = switchingFunctionsHandler51.getEventTime();
        double[] doubleArray63 = new double[] { '4', (byte) 10 };
        double[] doubleArray64 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator65 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray63, doubleArray64);
        boolean boolean66 = switchingFunctionsHandler51.reset((double) 3, doubleArray63);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', 10.0d, doubleArray50, doubleArray63);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-1.0d), (double) (short) 100, doubleArray44, doubleArray63);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-1.0d), (double) 100L, doubleArray13, doubleArray63);
        double[] doubleArray75 = new double[] { (short) 100, 3, 'a' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler76 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction77 = null;
        switchingFunctionsHandler76.add(switchingFunction77, 35.0d, 100.0d, (int) 'a');
        double double82 = switchingFunctionsHandler76.getEventTime();
        double[] doubleArray88 = new double[] { '4', (byte) 10 };
        double[] doubleArray89 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator90 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray88, doubleArray89);
        boolean boolean91 = switchingFunctionsHandler76.reset((double) 3, doubleArray88);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator92 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', 10.0d, doubleArray75, doubleArray88);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator93 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(52.0d, (-0.0d), doubleArray13, doubleArray75);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction94 = null;
        graggBulirschStoerIntegrator93.addSwitchingFunction(switchingFunction94, (-0.0d), 22.80350850198276d, (int) (byte) -1);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 100.0, 97.0, 3.1622776601683795, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 3.0, 97.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 3.0, 97.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test02377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02377");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction13, (double) (short) 10, (double) 2, (int) '#');
        graggBulirschStoerIntegrator6.setInitialStepSize((double) (-1));
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
    }

    @Test
    public void test02378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02378");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler0.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray15 = new double[] { 10, 100, (byte) 0 };
        boolean boolean16 = switchingFunctionsHandler10.reset((double) 0, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler0.reset((double) 100.0f, doubleArray15);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = switchingFunctionsHandler0.evaluateStep(stepInterpolator18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler0.add(switchingFunction20, (-0.0d), (double) 100L, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler0.add(switchingFunction25, Double.NaN, (double) (short) 1, (int) '4');
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test02379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02379");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(2.0d, 10.0d, 22.80350850198276d, (double) '4');
    }

    @Test
    public void test02380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02380");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator6.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        double double24 = graggBulirschStoerIntegrator23.getCurrentStepStart();
        graggBulirschStoerIntegrator23.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        graggBulirschStoerIntegrator23.addSwitchingFunction(switchingFunction30, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray39 = new double[] { '4', (byte) 10 };
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray39, doubleArray40);
        double double42 = graggBulirschStoerIntegrator41.getCurrentStepStart();
        double[] doubleArray47 = new double[] { '4', (byte) 10 };
        double[] doubleArray48 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray47, doubleArray48);
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator49.getStepHandler();
        graggBulirschStoerIntegrator41.setStepHandler(stepHandler50);
        graggBulirschStoerIntegrator23.setStepHandler(stepHandler50);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        stepHandler50.handleStep(stepInterpolator53, false);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler50);
        java.lang.String str57 = graggBulirschStoerIntegrator6.getName();
        graggBulirschStoerIntegrator6.setStepsizeControl((-0.0d), (double) 1, (double) (-1L), (double) 100.0f);
        double double63 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setInterpolationControl(true, 10);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str57, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double63));
    }

    @Test
    public void test02381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02381");
        double[] doubleArray5 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray10 = new double[] { '4', (byte) 10 };
        double[] doubleArray11 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator12 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray10, doubleArray11);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator13 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray5, doubleArray11);
        graggBulirschStoerIntegrator13.setStepsizeControl((-1.0d), (double) 0, (double) 10, (double) 1L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        graggBulirschStoerIntegrator13.addSwitchingFunction(switchingFunction19, (double) (short) 1, (double) 'a', (int) (short) 10);
        graggBulirschStoerIntegrator13.setOrderControl(3, (double) '#', 0.0d);
        double double28 = graggBulirschStoerIntegrator13.getCurrentStepStart();
        graggBulirschStoerIntegrator13.setStepsizeControl((double) (short) 10, (-0.0d), (double) 10.0f, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
    }

    @Test
    public void test02382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02382");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler0.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray15 = new double[] { 10, 100, (byte) 0 };
        boolean boolean16 = switchingFunctionsHandler10.reset((double) 0, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler0.reset((double) 100.0f, doubleArray15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler19.add(switchingFunction20, 35.0d, 100.0d, (int) 'a');
        double double25 = switchingFunctionsHandler19.getEventTime();
        double[] doubleArray31 = new double[] { '4', (byte) 10 };
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator33 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray31, doubleArray32);
        boolean boolean34 = switchingFunctionsHandler19.reset((double) 3, doubleArray31);
        boolean boolean35 = switchingFunctionsHandler0.reset((double) (short) 0, doubleArray31);
        boolean boolean36 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        switchingFunctionsHandler0.add(switchingFunction37, (double) (-1.0f), (double) ' ', (int) (byte) 1);
        boolean boolean42 = switchingFunctionsHandler0.isEmpty();
        boolean boolean43 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean45 = switchingFunctionsHandler0.evaluateStep(stepInterpolator44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test02383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02383");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double[] doubleArray12 = new double[] { '4', (byte) 10 };
        double[] doubleArray13 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray12, doubleArray13);
        double double15 = graggBulirschStoerIntegrator14.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator14.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double[] doubleArray25 = new double[] { '4', (byte) 10 };
        double[] doubleArray26 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator27 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray25, doubleArray26);
        double double28 = graggBulirschStoerIntegrator27.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator27.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        org.apache.commons.math.ode.StepHandler stepHandler34 = graggBulirschStoerIntegrator27.getStepHandler();
        graggBulirschStoerIntegrator14.setStepHandler(stepHandler34);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler34);
        double double37 = graggBulirschStoerIntegrator6.getMinStep();
        double[] doubleArray42 = new double[] { '4', (byte) 10 };
        double[] doubleArray43 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator44 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray42, doubleArray43);
        double double45 = graggBulirschStoerIntegrator44.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator44.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double51 = graggBulirschStoerIntegrator44.getCurrentSignedStepsize();
        double double52 = graggBulirschStoerIntegrator44.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler53 = graggBulirschStoerIntegrator44.getStepHandler();
        double[] doubleArray58 = new double[] { '4', (byte) 10 };
        double[] doubleArray59 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray58, doubleArray59);
        double double61 = graggBulirschStoerIntegrator60.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator60.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double67 = graggBulirschStoerIntegrator60.getCurrentSignedStepsize();
        double double68 = graggBulirschStoerIntegrator60.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler69 = graggBulirschStoerIntegrator60.getStepHandler();
        double double70 = graggBulirschStoerIntegrator60.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler71 = graggBulirschStoerIntegrator60.getStepHandler();
        graggBulirschStoerIntegrator44.setStepHandler(stepHandler71);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler71);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction74 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction74, (double) (byte) 100, Double.NaN, (-1));
        java.lang.String str79 = graggBulirschStoerIntegrator6.getName();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator84 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 100, (double) (short) 100, 18.708286933869708d, (double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler85 = graggBulirschStoerIntegrator84.getStepHandler();
        stepHandler85.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler85);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 18.708286933869708d + "'", double15 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 18.708286933869708d + "'", double28 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 18.708286933869708d + "'", double45 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 18.708286933869708d + "'", double51 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 18.708286933869708d + "'", double61 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 18.708286933869708d + "'", double67 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertNotNull(stepHandler69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 10.0d + "'", double70 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler71);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str79, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler85);
    }

    @Test
    public void test02384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02384");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double[] doubleArray10 = new double[] { '4', (byte) 10 };
        double[] doubleArray11 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator12 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray10, doubleArray11);
        double double13 = graggBulirschStoerIntegrator12.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator12.setOrderControl((-1), (-1.0d), (double) 10L);
        double[] doubleArray22 = new double[] { '4', (byte) 10 };
        double[] doubleArray23 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray22, doubleArray23);
        org.apache.commons.math.ode.StepHandler stepHandler25 = graggBulirschStoerIntegrator24.getStepHandler();
        stepHandler25.reset();
        stepHandler25.reset();
        graggBulirschStoerIntegrator12.setStepHandler(stepHandler25);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler25);
        org.apache.commons.math.ode.StepHandler stepHandler30 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler31 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (byte) 10, (double) 1.0f, (double) 100L, (-1.0d));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertNotNull(stepHandler31);
    }

    @Test
    public void test02385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02385");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray7 = new double[] { 10, 100, (byte) 0 };
        boolean boolean8 = switchingFunctionsHandler2.reset((double) 0, doubleArray7);
        double[] doubleArray14 = new double[] { '4', (byte) 10 };
        double[] doubleArray15 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator16 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray14, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler2.reset(18.708286933869708d, doubleArray15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler18.add(switchingFunction19, 35.0d, 100.0d, (int) 'a');
        double double24 = switchingFunctionsHandler18.getEventTime();
        double[] doubleArray30 = new double[] { '4', (byte) 10 };
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray30, doubleArray31);
        boolean boolean33 = switchingFunctionsHandler18.reset((double) 3, doubleArray30);
        double[] doubleArray42 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray47 = new double[] { '4', (byte) 10 };
        double[] doubleArray48 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray47, doubleArray48);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray42, doubleArray48);
        double[] doubleArray56 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray61 = new double[] { '4', (byte) 10 };
        double[] doubleArray62 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray61, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray56, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator65 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) (short) 100, doubleArray48, doubleArray56);
        boolean boolean66 = switchingFunctionsHandler18.reset((double) (byte) 10, doubleArray56);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0L, (double) 2, doubleArray15, doubleArray56);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction68 = null;
        graggBulirschStoerIntegrator67.addSwitchingFunction(switchingFunction68, (double) (byte) 1, (double) 1.0f, 100);
        graggBulirschStoerIntegrator67.setInterpolationControl(false, 2);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test02386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02386");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray5);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray5, (java.lang.Throwable) functionEvaluationException10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) mathException13);
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test02387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02387");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(3.1622776601683795d);
        java.lang.Throwable[] throwableArray3 = functionEvaluationException2.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException4 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray3);
    }

    @Test
    public void test02388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02388");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        java.lang.Object[] objArray17 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", objArray17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray9, (java.lang.Throwable) integratorException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException28);
        java.lang.Object[] objArray30 = integratorException29.getArguments();
        java.lang.Throwable throwable36 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("", throwable36);
        java.lang.Object[] objArray39 = mathException38.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.FunctionEvaluationException: ", objArray39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: ", objArray30, (java.lang.Throwable) functionEvaluationException40);
        java.lang.Object[] objArray45 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable49);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("", throwable49);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", objArray45, (java.lang.Throwable) mathException51);
        functionEvaluationException40.addSuppressed((java.lang.Throwable) mathException51);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray9, (java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray9);
        java.lang.Throwable[] throwableArray59 = functionEvaluationException58.getSuppressed();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!, 10]");
        org.junit.Assert.assertNotNull(throwableArray59);
    }

    @Test
    public void test02389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02389");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, 10.0d, (double) 100, 18.708286933869708d);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (int) (short) 100);
        double double9 = graggBulirschStoerIntegrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction10, 35.0d, (double) '4', 3);
        double double15 = graggBulirschStoerIntegrator4.getMinStep();
        double double16 = graggBulirschStoerIntegrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 3.1622776601683795d + "'", double5 == 3.1622776601683795d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
    }

    @Test
    public void test02390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02390");
        java.lang.Object[] objArray7 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("", objArray7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException14);
        java.lang.Throwable throwable27 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("", throwable27);
        java.lang.Object[] objArray30 = mathException29.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.FunctionEvaluationException: ", objArray30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException(3.1622776601683795d, "org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) functionEvaluationException31);
        java.lang.Throwable[] throwableArray35 = functionEvaluationException31.getSuppressed();
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray35);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Object[]) throwableArray35, (java.lang.Throwable) mathException42);
        integratorException14.addSuppressed((java.lang.Throwable) mathException43);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(throwableArray35);
    }

    @Test
    public void test02391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02391");
        java.lang.Throwable throwable3 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable3);
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("", throwable3);
        java.lang.Object[] objArray6 = mathException5.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException5);
        java.lang.Object[] objArray8 = mathException5.getArguments();
        java.lang.Object[] objArray9 = mathException5.getArguments();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException5);
        java.lang.String str11 = mathException5.getPattern();
        java.lang.String str12 = mathException5.toString();
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.apache.commons.math.MathException: " + "'", str12, "org.apache.commons.math.MathException: ");
    }

    @Test
    public void test02392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02392");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double[] doubleArray12 = new double[] { '4', (byte) 10 };
        double[] doubleArray13 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray12, doubleArray13);
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator14.getStepHandler();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler15);
        graggBulirschStoerIntegrator6.setStabilityCheck(true, (int) (short) -1, (int) '4', (double) 100);
        java.lang.String str22 = graggBulirschStoerIntegrator6.getName();
        graggBulirschStoerIntegrator6.setStabilityCheck(true, (int) (short) 10, 0, (double) 100L);
        java.lang.String str28 = graggBulirschStoerIntegrator6.getName();
        org.apache.commons.math.ode.StepHandler stepHandler29 = graggBulirschStoerIntegrator6.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str22, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str28, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler29);
    }

    @Test
    public void test02393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02393");
        java.lang.Object[] objArray11 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("", objArray11);
        java.lang.Object[] objArray13 = mathException12.getArguments();
        java.lang.Object[] objArray20 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("", objArray20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException21);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "", objArray13, (java.lang.Throwable) integratorException26);
        java.lang.Object[] objArray28 = integratorException26.getArguments();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray36, (java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: Evaluation failed for argument = {0}", strArray36);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", objArray28, (java.lang.Throwable) derivativeException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", objArray28);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(strArray36);
    }

    @Test
    public void test02394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02394");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        java.lang.String str8 = graggBulirschStoerIntegrator6.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction9, (double) 0.0f, (double) (byte) 10, (int) '#');
        graggBulirschStoerIntegrator6.setInitialStepSize((double) 10L);
        double[] doubleArray20 = new double[] { '4', (byte) 10 };
        double[] doubleArray21 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator22 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray20, doubleArray21);
        double double23 = graggBulirschStoerIntegrator22.getCurrentStepStart();
        graggBulirschStoerIntegrator22.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        graggBulirschStoerIntegrator22.addSwitchingFunction(switchingFunction29, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray38 = new double[] { '4', (byte) 10 };
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray38, doubleArray39);
        double double41 = graggBulirschStoerIntegrator40.getCurrentStepStart();
        graggBulirschStoerIntegrator40.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator40.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        double[] doubleArray55 = new double[] { '4', (byte) 10 };
        double[] doubleArray56 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray55, doubleArray56);
        double double58 = graggBulirschStoerIntegrator57.getCurrentStepStart();
        graggBulirschStoerIntegrator57.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction64 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction64, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray73 = new double[] { '4', (byte) 10 };
        double[] doubleArray74 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray73, doubleArray74);
        double double76 = graggBulirschStoerIntegrator75.getCurrentStepStart();
        double[] doubleArray81 = new double[] { '4', (byte) 10 };
        double[] doubleArray82 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator83 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray81, doubleArray82);
        org.apache.commons.math.ode.StepHandler stepHandler84 = graggBulirschStoerIntegrator83.getStepHandler();
        graggBulirschStoerIntegrator75.setStepHandler(stepHandler84);
        graggBulirschStoerIntegrator57.setStepHandler(stepHandler84);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator87 = null;
        stepHandler84.handleStep(stepInterpolator87, false);
        graggBulirschStoerIntegrator40.setStepHandler(stepHandler84);
        graggBulirschStoerIntegrator22.setStepHandler(stepHandler84);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator92 = null;
        stepHandler84.handleStep(stepInterpolator92, true);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler84);
        double double96 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str8, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[]");
        org.junit.Assert.assertNotNull(stepHandler84);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 18.708286933869708d + "'", double96 == 18.708286933869708d);
    }

    @Test
    public void test02395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02395");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double[] doubleArray9 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray14 = new double[] { '4', (byte) 10 };
        double[] doubleArray15 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator16 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray14, doubleArray15);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator17 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray9, doubleArray15);
        switchingFunctionsHandler0.stepAccepted((double) 100.0f, doubleArray15);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler0.add(switchingFunction19, (-0.0d), (double) (short) 1, (int) (short) 1);
        double double24 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = switchingFunctionsHandler0.evaluateStep(stepInterpolator25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test02396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02396");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        java.lang.String str8 = graggBulirschStoerIntegrator6.getName();
        graggBulirschStoerIntegrator6.setInitialStepSize((double) (short) 10);
        java.lang.String str11 = graggBulirschStoerIntegrator6.getName();
        java.lang.String str12 = graggBulirschStoerIntegrator6.getName();
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double[] doubleArray18 = new double[] { '4', (byte) 10 };
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator20 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray18, doubleArray19);
        double double21 = graggBulirschStoerIntegrator20.getCurrentSignedStepsize();
        double[] doubleArray26 = new double[] { '4', (byte) 10 };
        double[] doubleArray27 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator28 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray26, doubleArray27);
        double double29 = graggBulirschStoerIntegrator28.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator28.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double[] doubleArray39 = new double[] { '4', (byte) 10 };
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray39, doubleArray40);
        double double42 = graggBulirschStoerIntegrator41.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator41.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator41.getStepHandler();
        graggBulirschStoerIntegrator28.setStepHandler(stepHandler48);
        graggBulirschStoerIntegrator20.setStepHandler(stepHandler48);
        double double51 = graggBulirschStoerIntegrator20.getMinStep();
        java.lang.String str52 = graggBulirschStoerIntegrator20.getName();
        org.apache.commons.math.ode.StepHandler stepHandler53 = graggBulirschStoerIntegrator20.getStepHandler();
        graggBulirschStoerIntegrator20.setInitialStepSize((double) (short) -1);
        double[] doubleArray60 = new double[] { '4', (byte) 10 };
        double[] doubleArray61 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator62 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray60, doubleArray61);
        double double63 = graggBulirschStoerIntegrator62.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator62.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double69 = graggBulirschStoerIntegrator62.getCurrentSignedStepsize();
        double double70 = graggBulirschStoerIntegrator62.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler71 = graggBulirschStoerIntegrator62.getStepHandler();
        double double72 = graggBulirschStoerIntegrator62.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler73 = graggBulirschStoerIntegrator62.getStepHandler();
        stepHandler73.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator75 = null;
        stepHandler73.handleStep(stepInterpolator75, false);
        graggBulirschStoerIntegrator20.setStepHandler(stepHandler73);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler73);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str8, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str11, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str12, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 18.708286933869708d + "'", double21 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 18.708286933869708d + "'", double29 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 18.708286933869708d + "'", double42 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str52, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 18.708286933869708d + "'", double63 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 18.708286933869708d + "'", double69 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(stepHandler71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 10.0d + "'", double72 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler73);
    }

    @Test
    public void test02397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02397");
        java.lang.Object[] objArray1 = null;
        java.lang.Throwable throwable2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = -1", objArray1, throwable2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02398");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction6, (double) (-1L), (double) 'a', 2);
        double double11 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        java.lang.String str12 = graggBulirschStoerIntegrator4.getName();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str12, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02399");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(3.1622776601683795d);
        double double3 = functionEvaluationException2.getArgument();
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Throwable) functionEvaluationException2);
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 3.1622776601683795d + "'", double3 == 3.1622776601683795d);
    }

    @Test
    public void test02400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02400");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.ode.DerivativeException: ");
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException3);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 10, (java.lang.Throwable) derivativeException4);
        double double6 = functionEvaluationException5.getArgument();
        java.lang.String[] strArray24 = new java.lang.String[] { "Gragg-Bulirsch-Stoer", "hi!", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray24);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", strArray24);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ");
        double double38 = functionEvaluationException37.getArgument();
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray24, (java.lang.Throwable) derivativeException39);
        java.lang.Object[] objArray41 = mathException40.getArguments();
        functionEvaluationException5.addSuppressed((java.lang.Throwable) mathException40);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[Gragg-Bulirsch-Stoer, hi!, , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[Gragg-Bulirsch-Stoer, hi!, , hi!, ]");
    }

    @Test
    public void test02401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02401");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(100.0d, (double) (short) 0, 0.0d, (double) 100.0f);
    }

    @Test
    public void test02402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02402");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        java.lang.String str4 = functionEvaluationException3.getPattern();
        java.lang.String str5 = functionEvaluationException3.getPattern();
        java.lang.Object[] objArray6 = functionEvaluationException3.getArguments();
        double double7 = functionEvaluationException3.getArgument();
        java.lang.Object[] objArray8 = functionEvaluationException3.getArguments();
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: Gragg-Bulirsch-Stoer", objArray8, throwable9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) mathException10);
        java.lang.Class<?> wildcardClass12 = mathException10.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Evaluation failed for argument = {0}" + "'", str4, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Evaluation failed for argument = {0}" + "'", str5, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[100.0]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 100.0d + "'", double7 == 100.0d);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[100.0]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test02403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02403");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator6.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        double double17 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        java.lang.String str18 = graggBulirschStoerIntegrator6.getName();
        graggBulirschStoerIntegrator6.setOrderControl((int) (short) 10, (double) '#', (double) (short) -1);
        double double23 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray31 = new double[] { 10, 100, (byte) 0 };
        boolean boolean32 = switchingFunctionsHandler26.reset((double) 0, doubleArray31);
        double[] doubleArray40 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray45 = new double[] { '4', (byte) 10 };
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray45, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray40, doubleArray46);
        double[] doubleArray54 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray59 = new double[] { '4', (byte) 10 };
        double[] doubleArray60 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray59, doubleArray60);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator62 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray54, doubleArray60);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) (short) 100, doubleArray46, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) -1, (double) (byte) 10, doubleArray31, doubleArray46);
        double double65 = graggBulirschStoerIntegrator64.getCurrentStepStart();
        double[] doubleArray70 = new double[] { '4', (byte) 10 };
        double[] doubleArray71 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator72 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray70, doubleArray71);
        double double73 = graggBulirschStoerIntegrator72.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator72.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double79 = graggBulirschStoerIntegrator72.getCurrentSignedStepsize();
        double double80 = graggBulirschStoerIntegrator72.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler81 = graggBulirschStoerIntegrator72.getStepHandler();
        graggBulirschStoerIntegrator72.setInterpolationControl(true, (int) (short) 1);
        java.lang.String str85 = graggBulirschStoerIntegrator72.getName();
        org.apache.commons.math.ode.StepHandler stepHandler86 = graggBulirschStoerIntegrator72.getStepHandler();
        boolean boolean87 = stepHandler86.requiresDenseOutput();
        graggBulirschStoerIntegrator64.setStepHandler(stepHandler86);
        org.apache.commons.math.ode.StepHandler stepHandler89 = graggBulirschStoerIntegrator64.getStepHandler();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler89);
        double double91 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double double92 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 18.708286933869708d + "'", double17 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str18, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 18.708286933869708d + "'", double23 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 18.708286933869708d + "'", double73 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 18.708286933869708d + "'", double79 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(stepHandler81);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str85, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(stepHandler89);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 18.708286933869708d + "'", double92 == 18.708286933869708d);
    }

    @Test
    public void test02404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02404");
        java.lang.String[] strArray8 = new java.lang.String[] { "Gragg-Bulirsch-Stoer", "hi!", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray8);
        java.lang.Throwable throwable18 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("", throwable18);
        java.lang.Object[] objArray21 = mathException20.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray21);
        java.lang.Object[] objArray23 = functionEvaluationException22.getArguments();
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: ", objArray23);
        integratorException11.addSuppressed((java.lang.Throwable) mathException24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException24);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
    }

    @Test
    public void test02405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02405");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((-0.0d), "org.apache.commons.math.ode.IntegratorException: ");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Throwable) functionEvaluationException5);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) functionEvaluationException5);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException5);
        java.lang.String str9 = integratorException8.getPattern();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str9, "org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test02406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02406");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.ode.IntegratorException integratorException5 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException4);
        java.lang.Object[] objArray6 = integratorException5.getArguments();
        java.lang.Object[] objArray13 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", objArray13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException14);
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        double double24 = graggBulirschStoerIntegrator23.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator23.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        java.lang.String str30 = graggBulirschStoerIntegrator23.getName();
        double[] doubleArray36 = new double[] { '4', (byte) 10 };
        double[] doubleArray37 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray36, doubleArray37);
        double double39 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double45 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double46 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler47 = graggBulirschStoerIntegrator38.getStepHandler();
        double double48 = graggBulirschStoerIntegrator38.getMinStep();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 1, (double) 0.0f, (double) 1.0f);
        double[] doubleArray57 = new double[] { '4', (byte) 10 };
        double[] doubleArray58 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray57, doubleArray58);
        double double60 = graggBulirschStoerIntegrator59.getCurrentStepStart();
        double[] doubleArray65 = new double[] { '4', (byte) 10 };
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray65, doubleArray66);
        org.apache.commons.math.ode.StepHandler stepHandler68 = graggBulirschStoerIntegrator67.getStepHandler();
        graggBulirschStoerIntegrator59.setStepHandler(stepHandler68);
        java.lang.Object[] objArray70 = new java.lang.Object[] { integratorException5, derivativeException16, str30, '#', 0.0f, graggBulirschStoerIntegrator59 };
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", objArray70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) integratorException71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException75);
        integratorException71.addSuppressed((java.lang.Throwable) mathException76);
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException76);
        java.lang.Class<?> wildcardClass79 = mathException76.getClass();
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 18.708286933869708d + "'", double24 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str30, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 18.708286933869708d + "'", double39 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 18.708286933869708d + "'", double45 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertNotNull(stepHandler68);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test02407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02407");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) 100.0f, (double) ' ', (double) 0);
        double double5 = graggBulirschStoerIntegrator4.getMinStep();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations6 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray13 = new double[] { 10, 100, (byte) 0 };
        boolean boolean14 = switchingFunctionsHandler8.reset((double) 0, doubleArray13);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = switchingFunctionsHandler8.evaluateStep(stepInterpolator15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray23 = new double[] { 10, 100, (byte) 0 };
        boolean boolean24 = switchingFunctionsHandler18.reset((double) 0, doubleArray23);
        boolean boolean25 = switchingFunctionsHandler8.reset((double) 100.0f, doubleArray23);
        double double26 = switchingFunctionsHandler8.getEventTime();
        double[] doubleArray34 = new double[] { 0.0f, (-0.0d), (-1.0f), (-1L), 0.0d, 97.0d };
        switchingFunctionsHandler8.stepAccepted((double) 1.0f, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray42 = new double[] { 10, 100, (byte) 0 };
        boolean boolean43 = switchingFunctionsHandler37.reset((double) 0, doubleArray42);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        boolean boolean45 = switchingFunctionsHandler37.evaluateStep(stepInterpolator44);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray52 = new double[] { 10, 100, (byte) 0 };
        boolean boolean53 = switchingFunctionsHandler47.reset((double) 0, doubleArray52);
        boolean boolean54 = switchingFunctionsHandler37.reset((double) 100.0f, doubleArray52);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        switchingFunctionsHandler56.add(switchingFunction57, 35.0d, 100.0d, (int) 'a');
        double double62 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray68 = new double[] { '4', (byte) 10 };
        double[] doubleArray69 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator70 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray68, doubleArray69);
        boolean boolean71 = switchingFunctionsHandler56.reset((double) 3, doubleArray68);
        boolean boolean72 = switchingFunctionsHandler37.reset((double) (short) 0, doubleArray68);
        boolean boolean73 = switchingFunctionsHandler37.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction74 = null;
        switchingFunctionsHandler37.add(switchingFunction74, (double) 1.0f, (double) 1, (int) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction79 = null;
        switchingFunctionsHandler37.add(switchingFunction79, (double) (byte) 1, 3.1622776601683795d, (int) (short) 0);
        double[] doubleArray89 = new double[] { '4', (byte) 10 };
        double[] doubleArray90 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator91 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray89, doubleArray90);
        boolean boolean92 = switchingFunctionsHandler37.reset(0.0d, doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator4.integrate(firstOrderDifferentialEquations6, 17.88854381999832d, doubleArray34, (double) 100L, doubleArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, -0.0, -1.0, -1.0, 0.0, 97.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test02408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02408");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        java.lang.Object[] objArray17 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", objArray17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray9, (java.lang.Throwable) integratorException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException28);
        java.lang.Object[] objArray30 = integratorException29.getArguments();
        java.lang.Throwable throwable36 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("", throwable36);
        java.lang.Object[] objArray39 = mathException38.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.FunctionEvaluationException: ", objArray39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: ", objArray30, (java.lang.Throwable) functionEvaluationException40);
        java.lang.Object[] objArray45 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable49);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("", throwable49);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", objArray45, (java.lang.Throwable) mathException51);
        functionEvaluationException40.addSuppressed((java.lang.Throwable) mathException51);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray9, (java.lang.Throwable) mathException54);
        java.lang.Object[] objArray66 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("", objArray66);
        java.lang.Object[] objArray68 = mathException67.getArguments();
        java.lang.Object[] objArray75 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("", objArray75);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException76);
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException76);
        org.apache.commons.math.ode.DerivativeException derivativeException79 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException78);
        org.apache.commons.math.ode.IntegratorException integratorException80 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException79);
        org.apache.commons.math.ode.IntegratorException integratorException81 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "", objArray68, (java.lang.Throwable) integratorException81);
        java.lang.Object[] objArray83 = integratorException81.getArguments();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Throwable) integratorException81);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException84);
        mathException55.addSuppressed((java.lang.Throwable) mathException85);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException87 = new org.apache.commons.math.FunctionEvaluationException(52.0d, "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) mathException85);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Gragg-Bulirsch-Stoer", (java.lang.Throwable) functionEvaluationException87);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("Gragg-Bulirsch-Stoer", (java.lang.Throwable) functionEvaluationException87);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!, 10]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
    }

    @Test
    public void test02409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02409");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        java.lang.String str13 = graggBulirschStoerIntegrator6.getName();
        org.apache.commons.math.ode.StepHandler stepHandler14 = graggBulirschStoerIntegrator6.getStepHandler();
        java.lang.String str15 = graggBulirschStoerIntegrator6.getName();
        double double16 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double17 = graggBulirschStoerIntegrator6.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str13, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str15, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 18.708286933869708d + "'", double16 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
    }

    @Test
    public void test02410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02410");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator11.addSwitchingFunction(switchingFunction18, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        double double30 = graggBulirschStoerIntegrator29.getCurrentStepStart();
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = graggBulirschStoerIntegrator37.getStepHandler();
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator11.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 100, (int) ' ', (double) (byte) 0);
        double[] doubleArray51 = new double[] { '4', (byte) 10 };
        double[] doubleArray52 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator53 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray51, doubleArray52);
        double double54 = graggBulirschStoerIntegrator53.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator53.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double60 = graggBulirschStoerIntegrator53.getCurrentSignedStepsize();
        double double61 = graggBulirschStoerIntegrator53.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler62 = graggBulirschStoerIntegrator53.getStepHandler();
        boolean boolean63 = stepHandler62.requiresDenseOutput();
        boolean boolean64 = stepHandler62.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler62);
        double double66 = graggBulirschStoerIntegrator4.getMinStep();
        double[] doubleArray71 = new double[] { '4', (byte) 10 };
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray71, doubleArray72);
        double double74 = graggBulirschStoerIntegrator73.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator73.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double80 = graggBulirschStoerIntegrator73.getCurrentSignedStepsize();
        double double81 = graggBulirschStoerIntegrator73.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler82 = graggBulirschStoerIntegrator73.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler82);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction84 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction84, (double) 0.0f, (double) '#', (int) (byte) -1);
        double double89 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler90 = graggBulirschStoerIntegrator4.getStepHandler();
        double double91 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler92 = graggBulirschStoerIntegrator4.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 18.708286933869708d + "'", double54 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 18.708286933869708d + "'", double60 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 18.708286933869708d + "'", double74 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 18.708286933869708d + "'", double80 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(stepHandler82);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertNotNull(stepHandler90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler92);
    }

    @Test
    public void test02411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02411");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}");
    }

    @Test
    public void test02412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02412");
        java.lang.Throwable throwable3 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable3);
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("", throwable3);
        java.lang.Object[] objArray6 = mathException5.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException5);
        java.lang.String str8 = mathException5.getPattern();
        java.lang.Throwable[] throwableArray9 = mathException5.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException5);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test02413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02413");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray5);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray5, (java.lang.Throwable) functionEvaluationException10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Throwable) integratorException12);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException14);
        java.lang.Throwable[] throwableArray16 = mathException14.getSuppressed();
        java.lang.Object[] objArray17 = mathException14.getArguments();
        java.lang.Throwable[] throwableArray18 = mathException14.getSuppressed();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test02414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02414");
        double[] doubleArray5 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray10 = new double[] { '4', (byte) 10 };
        double[] doubleArray11 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator12 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray10, doubleArray11);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator13 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray5, doubleArray11);
        graggBulirschStoerIntegrator13.setStepsizeControl((-1.0d), (double) 0, (double) 10, (double) 1L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        graggBulirschStoerIntegrator13.addSwitchingFunction(switchingFunction19, (double) (short) 1, (double) 'a', (int) (short) 10);
        graggBulirschStoerIntegrator13.setOrderControl((int) ' ', (double) (short) -1, (double) 10.0f);
        double[] doubleArray32 = new double[] { '4', (byte) 10 };
        double[] doubleArray33 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator34 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray32, doubleArray33);
        double double35 = graggBulirschStoerIntegrator34.getCurrentStepStart();
        graggBulirschStoerIntegrator34.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator34.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        org.apache.commons.math.ode.StepHandler stepHandler45 = graggBulirschStoerIntegrator34.getStepHandler();
        stepHandler45.reset();
        stepHandler45.reset();
        graggBulirschStoerIntegrator13.setStepHandler(stepHandler45);
        graggBulirschStoerIntegrator13.setInterpolationControl(false, (int) (short) 0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(stepHandler45);
    }

    @Test
    public void test02415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02415");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException5);
        java.lang.Object[] objArray7 = integratorException6.getArguments();
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", objArray14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException15);
        double[] doubleArray22 = new double[] { '4', (byte) 10 };
        double[] doubleArray23 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray22, doubleArray23);
        double double25 = graggBulirschStoerIntegrator24.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator24.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        java.lang.String str31 = graggBulirschStoerIntegrator24.getName();
        double[] doubleArray37 = new double[] { '4', (byte) 10 };
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator39 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray37, doubleArray38);
        double double40 = graggBulirschStoerIntegrator39.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator39.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double46 = graggBulirschStoerIntegrator39.getCurrentSignedStepsize();
        double double47 = graggBulirschStoerIntegrator39.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator39.getStepHandler();
        double double49 = graggBulirschStoerIntegrator39.getMinStep();
        graggBulirschStoerIntegrator39.setOrderControl((int) (short) 1, (double) 0.0f, (double) 1.0f);
        double[] doubleArray58 = new double[] { '4', (byte) 10 };
        double[] doubleArray59 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray58, doubleArray59);
        double double61 = graggBulirschStoerIntegrator60.getCurrentStepStart();
        double[] doubleArray66 = new double[] { '4', (byte) 10 };
        double[] doubleArray67 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray66, doubleArray67);
        org.apache.commons.math.ode.StepHandler stepHandler69 = graggBulirschStoerIntegrator68.getStepHandler();
        graggBulirschStoerIntegrator60.setStepHandler(stepHandler69);
        java.lang.Object[] objArray71 = new java.lang.Object[] { integratorException6, derivativeException17, str31, '#', 0.0f, graggBulirschStoerIntegrator60 };
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) integratorException72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException76);
        integratorException72.addSuppressed((java.lang.Throwable) mathException77);
        org.apache.commons.math.ode.IntegratorException integratorException79 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException77);
        org.apache.commons.math.ode.IntegratorException integratorException80 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException77);
        java.lang.Object[] objArray81 = mathException77.getArguments();
        java.lang.Throwable throwable83 = null;
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("Gragg-Bulirsch-Stoer", throwable83);
        java.lang.Object[] objArray85 = mathException84.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException86 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", objArray81, (java.lang.Throwable) derivativeException86);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 18.708286933869708d + "'", double25 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str31, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 18.708286933869708d + "'", double40 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 18.708286933869708d + "'", double46 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]");
        org.junit.Assert.assertNotNull(stepHandler69);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
    }

    @Test
    public void test02416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02416");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getMinStep();
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = graggBulirschStoerIntegrator23.getStepHandler();
        stepHandler24.reset();
        stepHandler24.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler24);
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 3, (double) (short) 100, (double) 2, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler33 = graggBulirschStoerIntegrator6.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        stepHandler33.handleStep(stepInterpolator34, true);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        stepHandler33.handleStep(stepInterpolator37, false);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertNotNull(stepHandler33);
    }

    @Test
    public void test02417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02417");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, 52.0d, 3.1622776601683795d, 10.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) (-1), (double) 10, 10);
    }

    @Test
    public void test02418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02418");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray5);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray5, (java.lang.Throwable) functionEvaluationException10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException(1.0d, (java.lang.Throwable) mathException11);
        java.lang.Throwable[] throwableArray13 = mathException11.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException11);
        java.lang.String str15 = mathException11.toString();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.commons.math.MathException: Evaluation failed for argument = hi!" + "'", str15, "org.apache.commons.math.MathException: Evaluation failed for argument = hi!");
    }

    @Test
    public void test02419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02419");
        java.lang.Throwable throwable8 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("", throwable8);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray11);
        java.lang.Throwable throwable21 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", throwable21);
        java.lang.Object[] objArray24 = mathException23.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.FunctionEvaluationException: ", objArray24);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("Gragg-Bulirsch-Stoer");
        java.lang.Throwable[] throwableArray28 = mathException27.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException(3.1622776601683795d, "", objArray24, (java.lang.Throwable) mathException27);
        double double30 = functionEvaluationException29.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray11, (java.lang.Throwable) functionEvaluationException29);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException29);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 3.1622776601683795d + "'", double30 == 3.1622776601683795d);
    }

    @Test
    public void test02420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02420");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator11.addSwitchingFunction(switchingFunction18, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        double double30 = graggBulirschStoerIntegrator29.getCurrentStepStart();
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = graggBulirschStoerIntegrator37.getStepHandler();
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator11.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 100, (int) ' ', (double) (byte) 0);
        graggBulirschStoerIntegrator4.setOrderControl((int) 'a', 1.0d, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction51, 0.0d, (double) (short) -1, 3);
        org.apache.commons.math.ode.StepHandler stepHandler56 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setInterpolationControl(true, 2);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(stepHandler56);
    }

    @Test
    public void test02421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02421");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        boolean boolean7 = switchingFunctionsHandler0.isEmpty();
        double double8 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray15 = new double[] { 10, 100, (byte) 0 };
        boolean boolean16 = switchingFunctionsHandler10.reset((double) 0, doubleArray15);
        double[] doubleArray22 = new double[] { '4', (byte) 10 };
        double[] doubleArray23 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray22, doubleArray23);
        boolean boolean25 = switchingFunctionsHandler10.reset(18.708286933869708d, doubleArray23);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler10.add(switchingFunction26, Double.NaN, (-1.0d), (int) (byte) 10);
        double[] doubleArray36 = new double[] { '4', (byte) 10 };
        double[] doubleArray37 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray36, doubleArray37);
        boolean boolean39 = switchingFunctionsHandler10.reset(0.0d, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray48 = new double[] { 10, 100, (byte) 0 };
        boolean boolean49 = switchingFunctionsHandler43.reset((double) 0, doubleArray48);
        double[] doubleArray57 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray62 = new double[] { '4', (byte) 10 };
        double[] doubleArray63 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray62, doubleArray63);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator65 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray57, doubleArray63);
        double[] doubleArray71 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray76 = new double[] { '4', (byte) 10 };
        double[] doubleArray77 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray76, doubleArray77);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray71, doubleArray77);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator80 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) (short) 100, doubleArray63, doubleArray71);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator81 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) -1, (double) (byte) 10, doubleArray48, doubleArray63);
        boolean boolean82 = switchingFunctionsHandler10.reset(3.1622776601683795d, doubleArray48);
        boolean boolean83 = switchingFunctionsHandler0.reset((double) (byte) 0, doubleArray48);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator84 = null;
        boolean boolean85 = switchingFunctionsHandler0.evaluateStep(stepInterpolator84);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test02422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02422");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction15, (double) (byte) 100, (double) (short) 100, (int) 'a');
        double double20 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double double21 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStabilityCheck(false, (int) 'a', (int) (short) 100, (double) (-1.0f));
        graggBulirschStoerIntegrator6.setInterpolationControl(false, 10);
        double double30 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double31 = graggBulirschStoerIntegrator6.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 35.0d + "'", double14 == 35.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 18.708286933869708d + "'", double21 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 18.708286933869708d + "'", double30 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
    }

    @Test
    public void test02423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02423");
        java.lang.Object[] objArray11 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("", objArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, (java.lang.Throwable) derivativeException14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, (java.lang.Throwable) functionEvaluationException15);
        java.lang.Throwable[] throwableArray17 = functionEvaluationException16.getSuppressed();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray17);
        java.lang.String str19 = mathException18.getPattern();
        java.lang.Throwable[] throwableArray20 = mathException18.getSuppressed();
        java.lang.Object[] objArray33 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("", throwable37);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", objArray33, (java.lang.Throwable) mathException39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException40);
        java.lang.Throwable[] throwableArray42 = integratorException41.getSuppressed();
        java.lang.Object[] objArray50 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("", objArray50);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray50);
        java.lang.Object[] objArray53 = integratorException52.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray42, (java.lang.Throwable) integratorException52);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray42);
        java.lang.Throwable throwable59 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("", throwable59);
        java.lang.Object[] objArray62 = mathException61.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Object[]) throwableArray42, (java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', (java.lang.Throwable) mathException65);
        java.lang.Object[] objArray67 = mathException65.getArguments();
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("", objArray67);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", objArray67);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Throwable) mathException69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = hi!", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) functionEvaluationException70);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Evaluation failed for argument = {0}" + "'", str19, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!, 10]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
    }

    @Test
    public void test02424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02424");
        java.lang.Throwable throwable7 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("", throwable7);
        java.lang.Object[] objArray10 = mathException9.getArguments();
        java.lang.Object[] objArray11 = mathException9.getArguments();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, (java.lang.Throwable) mathException14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "Evaluation failed for argument = {0}", objArray11, (java.lang.Throwable) mathException14);
        java.lang.Object[] objArray18 = functionEvaluationException17.getArguments();
        java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray30);
        java.lang.Object[] objArray33 = integratorException32.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "Gragg-Bulirsch-Stoer", objArray33);
        java.lang.Throwable throwable40 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("", throwable40);
        java.lang.Object[] objArray43 = mathException42.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.FunctionEvaluationException: ", objArray43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: ", objArray33, (java.lang.Throwable) functionEvaluationException44);
        java.lang.Object[] objArray51 = new java.lang.Object[] { '4', 2, (byte) 10 };
        java.lang.Object[] objArray59 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("", objArray59);
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray59);
        java.lang.Object[] objArray62 = integratorException61.getArguments();
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("hi!", objArray51, (java.lang.Throwable) integratorException61);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) integratorException61);
        functionEvaluationException44.addSuppressed((java.lang.Throwable) integratorException61);
        org.apache.commons.math.ode.IntegratorException integratorException66 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 10", objArray18, (java.lang.Throwable) mathException67);
        java.lang.Throwable[] throwableArray69 = mathException67.getSuppressed();
        java.lang.Throwable[] throwableArray70 = mathException67.getSuppressed();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[4, 2, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[4, 2, 10]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray70);
    }

    @Test
    public void test02425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02425");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getMinStep();
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = graggBulirschStoerIntegrator23.getStepHandler();
        stepHandler24.reset();
        stepHandler24.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler24);
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 3, (double) (short) 100, (double) 2, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler33 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) (short) 1, Double.NaN, 1.0d, (double) ' ');
        graggBulirschStoerIntegrator6.setStabilityCheck(false, 100, 0, (double) 2);
        graggBulirschStoerIntegrator6.setStepsizeControl((double) '4', (double) 0.0f, (double) (byte) 0, 4.229485053762256d);
        double double49 = graggBulirschStoerIntegrator6.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 35.0d + "'", double49 == 35.0d);
    }

    @Test
    public void test02426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02426");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, (java.lang.Throwable) mathException4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException4);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) derivativeException6);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException7);
        java.lang.String str9 = functionEvaluationException7.toString();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!" + "'", str9, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!");
    }

    @Test
    public void test02427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02427");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        org.apache.commons.math.ode.StepHandler stepHandler7 = graggBulirschStoerIntegrator6.getStepHandler();
        double double8 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double9 = graggBulirschStoerIntegrator6.getMaxStep();
        graggBulirschStoerIntegrator6.setInitialStepSize(17.88854381999832d);
        graggBulirschStoerIntegrator6.setOrderControl((int) 'a', (double) 10, (double) 1);
        double double16 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 18.708286933869708d + "'", double8 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 35.0d + "'", double9 == 35.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
    }

    @Test
    public void test02428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02428");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable18 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("", throwable18);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", objArray14, (java.lang.Throwable) mathException20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException21);
        java.lang.Throwable[] throwableArray23 = integratorException22.getSuppressed();
        java.lang.Object[] objArray31 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("", objArray31);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray31);
        java.lang.Object[] objArray34 = integratorException33.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) integratorException33);
        functionEvaluationException8.addSuppressed((java.lang.Throwable) integratorException33);
        java.lang.Object[] objArray37 = integratorException33.getArguments();
        java.lang.Object[] objArray38 = integratorException33.getArguments();
        java.lang.Throwable[] throwableArray39 = integratorException33.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) integratorException43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray39);
        java.lang.Throwable throwable46 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException(35.0d, "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray39, throwable46);
        java.lang.Throwable[] throwableArray48 = functionEvaluationException47.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.ode.DerivativeException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray48);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 10]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray48);
    }

    @Test
    public void test02429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02429");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        java.lang.String str7 = graggBulirschStoerIntegrator6.getName();
        java.lang.String str8 = graggBulirschStoerIntegrator6.getName();
        graggBulirschStoerIntegrator6.setInitialStepSize((double) 10L);
        graggBulirschStoerIntegrator6.setStepsizeControl((double) '#', (double) (short) 100, (-0.0d), 0.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction16, (double) 0L, Double.NaN, (int) ' ');
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str7, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str8, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02430");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        graggBulirschStoerIntegrator6.setStepsizeControl((double) (byte) 10, 0.0d, (double) 0, 0.0d);
        graggBulirschStoerIntegrator6.setStepsizeControl(0.0d, (double) (-1.0f), (double) (-1.0f), (double) ' ');
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        double double24 = graggBulirschStoerIntegrator23.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator23.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double30 = graggBulirschStoerIntegrator23.getCurrentSignedStepsize();
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        double double38 = graggBulirschStoerIntegrator37.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator37.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double44 = graggBulirschStoerIntegrator37.getCurrentSignedStepsize();
        double double45 = graggBulirschStoerIntegrator37.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator37.getStepHandler();
        boolean boolean47 = stepHandler46.requiresDenseOutput();
        boolean boolean48 = stepHandler46.requiresDenseOutput();
        stepHandler46.reset();
        stepHandler46.reset();
        stepHandler46.reset();
        graggBulirschStoerIntegrator23.setStepHandler(stepHandler46);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler46);
        boolean boolean54 = stepHandler46.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        stepHandler46.handleStep(stepInterpolator55, false);
        stepHandler46.reset();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 18.708286933869708d + "'", double24 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 18.708286933869708d + "'", double30 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 18.708286933869708d + "'", double38 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 18.708286933869708d + "'", double44 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test02431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02431");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException5);
        java.lang.Object[] objArray7 = integratorException6.getArguments();
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", objArray14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException15);
        double[] doubleArray22 = new double[] { '4', (byte) 10 };
        double[] doubleArray23 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray22, doubleArray23);
        double double25 = graggBulirschStoerIntegrator24.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator24.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        java.lang.String str31 = graggBulirschStoerIntegrator24.getName();
        double[] doubleArray37 = new double[] { '4', (byte) 10 };
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator39 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray37, doubleArray38);
        double double40 = graggBulirschStoerIntegrator39.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator39.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double46 = graggBulirschStoerIntegrator39.getCurrentSignedStepsize();
        double double47 = graggBulirschStoerIntegrator39.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator39.getStepHandler();
        double double49 = graggBulirschStoerIntegrator39.getMinStep();
        graggBulirschStoerIntegrator39.setOrderControl((int) (short) 1, (double) 0.0f, (double) 1.0f);
        double[] doubleArray58 = new double[] { '4', (byte) 10 };
        double[] doubleArray59 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray58, doubleArray59);
        double double61 = graggBulirschStoerIntegrator60.getCurrentStepStart();
        double[] doubleArray66 = new double[] { '4', (byte) 10 };
        double[] doubleArray67 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray66, doubleArray67);
        org.apache.commons.math.ode.StepHandler stepHandler69 = graggBulirschStoerIntegrator68.getStepHandler();
        graggBulirschStoerIntegrator60.setStepHandler(stepHandler69);
        java.lang.Object[] objArray71 = new java.lang.Object[] { integratorException6, derivativeException17, str31, '#', 0.0f, graggBulirschStoerIntegrator60 };
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) integratorException72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "hi!");
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException76);
        integratorException72.addSuppressed((java.lang.Throwable) mathException77);
        java.lang.Throwable[] throwableArray79 = mathException77.getSuppressed();
        java.lang.Throwable throwable82 = null;
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("Gragg-Bulirsch-Stoer", throwable82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("", throwable82);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray79, (java.lang.Throwable) mathException84);
        java.lang.Class<?> wildcardClass86 = mathException84.getClass();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 18.708286933869708d + "'", double25 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str31, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 18.708286933869708d + "'", double40 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 18.708286933869708d + "'", double46 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]");
        org.junit.Assert.assertNotNull(stepHandler69);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test02432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02432");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", objArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException17);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray8, (java.lang.Throwable) integratorException21);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray8);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray8);
        java.lang.Throwable[] throwableArray26 = mathException25.getSuppressed();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray31);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray31, (java.lang.Throwable) functionEvaluationException36);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray26, (java.lang.Throwable) mathException39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException40);
        double double42 = functionEvaluationException40.getArgument();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    }

    @Test
    public void test02433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02433");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator11.addSwitchingFunction(switchingFunction18, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        double double30 = graggBulirschStoerIntegrator29.getCurrentStepStart();
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = graggBulirschStoerIntegrator37.getStepHandler();
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator11.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler38);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction42 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction42, 35.0d, 0.0d, (int) (byte) 100);
        double double47 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 10L, Double.NaN, (double) (byte) 0, (double) (short) 1);
        graggBulirschStoerIntegrator4.setOrderControl(1, (double) 10, (double) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction57, (double) 100.0f, (double) 10L, (-1));
        java.lang.String str62 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (short) 10, (double) 1, (double) (byte) 0, 97.0d);
        graggBulirschStoerIntegrator4.setStepsizeControl(0.0d, (double) 1, (double) '4', (double) 'a');
        java.lang.String str73 = graggBulirschStoerIntegrator4.getName();
        double double74 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str62, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str73, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
    }

    @Test
    public void test02434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02434");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setInterpolationControl(true, (int) (short) 1);
        graggBulirschStoerIntegrator6.setOrderControl((int) '#', (double) 10, 10.0d);
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        double double30 = graggBulirschStoerIntegrator29.getCurrentStepStart();
        graggBulirschStoerIntegrator29.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator29.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        double double40 = graggBulirschStoerIntegrator29.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator29.setStabilityCheck(true, (int) 'a', (int) (byte) 100, 35.0d);
        double[] doubleArray50 = new double[] { '4', (byte) 10 };
        double[] doubleArray51 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator52 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray50, doubleArray51);
        double double53 = graggBulirschStoerIntegrator52.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator52.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double59 = graggBulirschStoerIntegrator52.getCurrentSignedStepsize();
        double double60 = graggBulirschStoerIntegrator52.getCurrentStepStart();
        graggBulirschStoerIntegrator52.setInterpolationControl(false, (int) (byte) 1);
        java.lang.String str64 = graggBulirschStoerIntegrator52.getName();
        org.apache.commons.math.ode.StepHandler stepHandler65 = graggBulirschStoerIntegrator52.getStepHandler();
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler65);
        double double67 = graggBulirschStoerIntegrator29.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler68 = graggBulirschStoerIntegrator29.getStepHandler();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler68);
        java.lang.String str70 = graggBulirschStoerIntegrator6.getName();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 18.708286933869708d + "'", double40 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 18.708286933869708d + "'", double53 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 18.708286933869708d + "'", double59 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str64, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 18.708286933869708d + "'", double67 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str70, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02435");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        double[] doubleArray12 = new double[] { '4', (byte) 10 };
        double[] doubleArray13 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray12, doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.reset(18.708286933869708d, doubleArray13);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler0.add(switchingFunction16, Double.NaN, (-1.0d), (int) (byte) 10);
        double[] doubleArray26 = new double[] { '4', (byte) 10 };
        double[] doubleArray27 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator28 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray26, doubleArray27);
        boolean boolean29 = switchingFunctionsHandler0.reset(0.0d, doubleArray26);
        boolean boolean30 = switchingFunctionsHandler0.isEmpty();
        boolean boolean31 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        switchingFunctionsHandler0.add(switchingFunction32, (double) 0, (double) 100.0f, 100);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean38 = switchingFunctionsHandler0.evaluateStep(stepInterpolator37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test02436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02436");
        java.lang.Throwable throwable1 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, throwable1);
    }

    @Test
    public void test02437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02437");
        java.lang.Object[] objArray6 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("", throwable10);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", objArray6, (java.lang.Throwable) mathException12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException13);
        java.lang.Throwable[] throwableArray15 = integratorException14.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray15);
        java.lang.Throwable[] throwableArray17 = integratorException16.getSuppressed();
        java.lang.Throwable throwable21 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable21);
        double double23 = functionEvaluationException22.getArgument();
        java.lang.Throwable throwable26 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable26);
        double double28 = functionEvaluationException27.getArgument();
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException27);
        functionEvaluationException22.addSuppressed((java.lang.Throwable) derivativeException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 10, (java.lang.Throwable) derivativeException29);
        double double32 = functionEvaluationException31.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) functionEvaluationException31);
        java.lang.String str34 = functionEvaluationException33.getPattern();
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!, 10]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1.0d) + "'", double23 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.0d) + "'", double28 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: " + "'", str34, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ");
    }

    @Test
    public void test02438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02438");
        java.lang.String[] strArray15 = new java.lang.String[] { "Gragg-Bulirsch-Stoer", "hi!", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        java.lang.Object[] objArray33 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("", objArray33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException34);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("Gragg-Bulirsch-Stoer", (java.lang.Throwable) derivativeException36);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = {0}", (java.lang.Throwable) derivativeException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException(3.0d, "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Object[]) strArray15, (java.lang.Throwable) functionEvaluationException41);
        double double43 = functionEvaluationException42.getArgument();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 3.0d + "'", double43 == 3.0d);
    }

    @Test
    public void test02439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02439");
        java.lang.Object[] objArray7 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable11 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("", throwable11);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", objArray7, (java.lang.Throwable) mathException13);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException14);
        java.lang.Throwable[] throwableArray16 = integratorException15.getSuppressed();
        java.lang.Object[] objArray24 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", objArray24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray24);
        java.lang.Object[] objArray27 = integratorException26.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) integratorException26);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray16);
        java.lang.Throwable throwable33 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("", throwable33);
        java.lang.Object[] objArray36 = mathException35.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException35);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) mathException35);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException38);
        java.lang.Throwable[] throwableArray40 = mathException38.getSuppressed();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[hi!, 10]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(throwableArray40);
    }

    @Test
    public void test02440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02440");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double double15 = graggBulirschStoerIntegrator6.getMaxStep();
        double[] doubleArray20 = new double[] { '4', (byte) 10 };
        double[] doubleArray21 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator22 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray20, doubleArray21);
        double double23 = graggBulirschStoerIntegrator22.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator22.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double29 = graggBulirschStoerIntegrator22.getCurrentSignedStepsize();
        double double30 = graggBulirschStoerIntegrator22.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler31 = graggBulirschStoerIntegrator22.getStepHandler();
        boolean boolean32 = stepHandler31.requiresDenseOutput();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler31);
        graggBulirschStoerIntegrator6.setOrderControl((int) 'a', (double) '#', (double) 10.0f);
        double[] doubleArray42 = new double[] { '4', (byte) 10 };
        double[] doubleArray43 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator44 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray42, doubleArray43);
        double double45 = graggBulirschStoerIntegrator44.getCurrentStepStart();
        graggBulirschStoerIntegrator44.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator44.addSwitchingFunction(switchingFunction51, (double) (short) 10, (double) 2, (int) '#');
        org.apache.commons.math.ode.StepHandler stepHandler56 = graggBulirschStoerIntegrator44.getStepHandler();
        double[] doubleArray61 = new double[] { '4', (byte) 10 };
        double[] doubleArray62 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray61, doubleArray62);
        double double64 = graggBulirschStoerIntegrator63.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator63.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double70 = graggBulirschStoerIntegrator63.getCurrentSignedStepsize();
        double double71 = graggBulirschStoerIntegrator63.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction72 = null;
        graggBulirschStoerIntegrator63.addSwitchingFunction(switchingFunction72, (double) (byte) 100, (double) (short) 100, (int) 'a');
        double double77 = graggBulirschStoerIntegrator63.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler78 = graggBulirschStoerIntegrator63.getStepHandler();
        graggBulirschStoerIntegrator44.setStepHandler(stepHandler78);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler78);
        boolean boolean81 = stepHandler78.requiresDenseOutput();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 35.0d + "'", double15 == 35.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 18.708286933869708d + "'", double23 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 18.708286933869708d + "'", double29 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 18.708286933869708d + "'", double64 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 18.708286933869708d + "'", double70 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 35.0d + "'", double71 == 35.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 35.0d + "'", double77 == 35.0d);
        org.junit.Assert.assertNotNull(stepHandler78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test02441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02441");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction13, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray22 = new double[] { '4', (byte) 10 };
        double[] doubleArray23 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray22, doubleArray23);
        double double25 = graggBulirschStoerIntegrator24.getCurrentStepStart();
        graggBulirschStoerIntegrator24.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator24.setOrderControl((int) (byte) 100, (double) 0L, 10.0d);
        double[] doubleArray39 = new double[] { '4', (byte) 10 };
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray39, doubleArray40);
        double double42 = graggBulirschStoerIntegrator41.getCurrentStepStart();
        graggBulirschStoerIntegrator41.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        graggBulirschStoerIntegrator41.addSwitchingFunction(switchingFunction48, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray57 = new double[] { '4', (byte) 10 };
        double[] doubleArray58 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray57, doubleArray58);
        double double60 = graggBulirschStoerIntegrator59.getCurrentStepStart();
        double[] doubleArray65 = new double[] { '4', (byte) 10 };
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray65, doubleArray66);
        org.apache.commons.math.ode.StepHandler stepHandler68 = graggBulirschStoerIntegrator67.getStepHandler();
        graggBulirschStoerIntegrator59.setStepHandler(stepHandler68);
        graggBulirschStoerIntegrator41.setStepHandler(stepHandler68);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator71 = null;
        stepHandler68.handleStep(stepInterpolator71, false);
        graggBulirschStoerIntegrator24.setStepHandler(stepHandler68);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler68);
        double[] doubleArray80 = new double[] { '4', (byte) 10 };
        double[] doubleArray81 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator82 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray80, doubleArray81);
        org.apache.commons.math.ode.StepHandler stepHandler83 = graggBulirschStoerIntegrator82.getStepHandler();
        stepHandler83.reset();
        stepHandler83.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator86 = null;
        stepHandler83.handleStep(stepInterpolator86, true);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler83);
        org.apache.commons.math.ode.StepHandler stepHandler90 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) (short) 10, (double) (byte) 1, (double) 10L, (double) (short) 100);
        java.lang.String str96 = graggBulirschStoerIntegrator6.getName();
        graggBulirschStoerIntegrator6.setInterpolationControl(true, (int) '#');
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertNotNull(stepHandler68);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(stepHandler83);
        org.junit.Assert.assertNotNull(stepHandler90);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str96, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02442");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "");
    }

    @Test
    public void test02443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02443");
        java.lang.Throwable throwable8 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("", throwable8);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.FunctionEvaluationException: ", objArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) mathException13);
        java.lang.Throwable[] throwableArray15 = mathException14.getSuppressed();
        java.lang.Throwable throwable24 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", throwable24);
        java.lang.Object[] objArray27 = mathException26.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray27);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("", throwable37);
        java.lang.Object[] objArray40 = mathException39.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.FunctionEvaluationException: ", objArray40);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("Gragg-Bulirsch-Stoer");
        java.lang.Throwable[] throwableArray44 = mathException43.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException(3.1622776601683795d, "", objArray40, (java.lang.Throwable) mathException43);
        double double46 = functionEvaluationException45.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray27, (java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) functionEvaluationException45);
        java.lang.String str49 = functionEvaluationException45.toString();
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 3.1622776601683795d + "'", double46 == 3.1622776601683795d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: " + "'", str49, "org.apache.commons.math.FunctionEvaluationException: ");
    }

    @Test
    public void test02444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02444");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(100.0d, 100.0d, 0.0d, 0.0d);
    }

    @Test
    public void test02445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02445");
        double[] doubleArray2 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler5.add(switchingFunction6, 35.0d, 100.0d, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray17 = new double[] { 10, 100, (byte) 0 };
        boolean boolean18 = switchingFunctionsHandler12.reset((double) 0, doubleArray17);
        double[] doubleArray24 = new double[] { '4', (byte) 10 };
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator26 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray24, doubleArray25);
        boolean boolean27 = switchingFunctionsHandler12.reset(18.708286933869708d, doubleArray25);
        boolean boolean28 = switchingFunctionsHandler5.reset((double) (byte) 0, doubleArray25);
        boolean boolean29 = switchingFunctionsHandler3.reset((double) 0, doubleArray25);
        double double30 = switchingFunctionsHandler3.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        switchingFunctionsHandler3.add(switchingFunction31, (double) 3, (double) ' ', (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        switchingFunctionsHandler3.add(switchingFunction36, (double) (short) 1, (double) 3, (int) (short) 0);
        boolean boolean41 = switchingFunctionsHandler3.stop();
        double[] doubleArray50 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray55 = new double[] { '4', (byte) 10 };
        double[] doubleArray56 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray55, doubleArray56);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator58 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray50, doubleArray56);
        double[] doubleArray64 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray69 = new double[] { '4', (byte) 10 };
        double[] doubleArray70 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator71 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray69, doubleArray70);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator72 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray64, doubleArray70);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) (short) 100, doubleArray56, doubleArray64);
        boolean boolean74 = switchingFunctionsHandler3.reset((double) 0, doubleArray64);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 100, 2.0d, doubleArray2, doubleArray64);
        double double76 = graggBulirschStoerIntegrator75.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler77 = graggBulirschStoerIntegrator75.getStepHandler();
        graggBulirschStoerIntegrator75.setInterpolationControl(true, (int) ' ');
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertNotNull(stepHandler77);
    }

    @Test
    public void test02446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02446");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        java.lang.Object[] objArray6 = functionEvaluationException5.getArguments();
        java.lang.Throwable throwable7 = null;
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray6, throwable7);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", objArray6, (java.lang.Throwable) functionEvaluationException11);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: ");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "", objArray6, (java.lang.Throwable) mathException14);
        java.lang.String str16 = functionEvaluationException15.getPattern();
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[-1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[-1.0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test02447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02447");
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable5);
        double double7 = functionEvaluationException6.getArgument();
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable10);
        double double12 = functionEvaluationException11.getArgument();
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException11);
        functionEvaluationException6.addSuppressed((java.lang.Throwable) derivativeException13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 10, (java.lang.Throwable) derivativeException13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException13);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException16);
        java.lang.Object[] objArray18 = mathException17.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException(2.0d, "org.apache.commons.math.FunctionEvaluationException: Gragg-Bulirsch-Stoer", (java.lang.Throwable) mathException17);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
    }

    @Test
    public void test02448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02448");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        double double5 = graggBulirschStoerIntegrator4.getMaxStep();
        graggBulirschStoerIntegrator4.setOrderControl((int) (byte) 0, (double) (short) -1, (double) 1L);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test02449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02449");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getMinStep();
        double double17 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double18 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double double19 = graggBulirschStoerIntegrator6.getMaxStep();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, 10.0d, (double) 100, 18.708286933869708d);
        double[] doubleArray29 = new double[] { '4', (byte) 10 };
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray29, doubleArray30);
        double double32 = graggBulirschStoerIntegrator31.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator31.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double38 = graggBulirschStoerIntegrator31.getCurrentSignedStepsize();
        double double39 = graggBulirschStoerIntegrator31.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler40 = graggBulirschStoerIntegrator31.getStepHandler();
        double double41 = graggBulirschStoerIntegrator31.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler42 = graggBulirschStoerIntegrator31.getStepHandler();
        graggBulirschStoerIntegrator24.setStepHandler(stepHandler42);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler42);
        double double45 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double double46 = graggBulirschStoerIntegrator6.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 18.708286933869708d + "'", double17 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 35.0d + "'", double19 == 35.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 18.708286933869708d + "'", double32 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 18.708286933869708d + "'", double38 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(stepHandler40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
    }

    @Test
    public void test02450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02450");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        double double6 = graggBulirschStoerIntegrator4.getMinStep();
        graggBulirschStoerIntegrator4.setStabilityCheck(false, (int) (byte) 100, (int) ' ', 10.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction12, (double) 3, (double) 3, (int) (short) 0);
        double double17 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test02451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02451");
        java.lang.Throwable throwable2 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", throwable2);
    }

    @Test
    public void test02452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02452");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator11.addSwitchingFunction(switchingFunction18, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        double double30 = graggBulirschStoerIntegrator29.getCurrentStepStart();
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = graggBulirschStoerIntegrator37.getStepHandler();
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator11.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 100, (int) ' ', (double) (byte) 0);
        double double47 = graggBulirschStoerIntegrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction48, 0.0d, 1.0d, (int) (short) -1);
        java.lang.String str53 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setStabilityCheck(false, (int) (byte) 1, (int) 'a', (double) 1.0f);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 18.708286933869708d + "'", double47 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str53, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02453");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "org.apache.commons.math.FunctionEvaluationException: hi!");
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException4);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) mathException6);
    }

    @Test
    public void test02454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02454");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getMinStep();
        graggBulirschStoerIntegrator6.setStepsizeControl(0.0d, (double) 0, (double) ' ', (-1.0d));
        graggBulirschStoerIntegrator6.setInterpolationControl(false, (int) '4');
        double double25 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction26, (double) (-1L), 9.848857801796104d, 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction31, 31.622776601683793d, 0.0d, (int) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
    }

    @Test
    public void test02455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02455");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setInitialStepSize(35.0d);
        double double10 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setInitialStepSize((-1.0d));
        graggBulirschStoerIntegrator6.setInitialStepSize(100.0d);
        graggBulirschStoerIntegrator6.setStabilityCheck(true, 0, (int) (byte) 10, (double) 10L);
        graggBulirschStoerIntegrator6.setInitialStepSize((double) 1.0f);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction22, 1.0d, 0.0d, (int) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 18.708286933869708d + "'", double10 == 18.708286933869708d);
    }

    @Test
    public void test02456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02456");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction13, (double) (short) 10, (double) 2, (int) '#');
        org.apache.commons.math.ode.StepHandler stepHandler18 = graggBulirschStoerIntegrator6.getStepHandler();
        double[] doubleArray23 = new double[] { '4', (byte) 10 };
        double[] doubleArray24 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator25 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray23, doubleArray24);
        double double26 = graggBulirschStoerIntegrator25.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator25.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double32 = graggBulirschStoerIntegrator25.getCurrentSignedStepsize();
        double double33 = graggBulirschStoerIntegrator25.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        graggBulirschStoerIntegrator25.addSwitchingFunction(switchingFunction34, (double) (byte) 100, (double) (short) 100, (int) 'a');
        double double39 = graggBulirschStoerIntegrator25.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler40 = graggBulirschStoerIntegrator25.getStepHandler();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler40);
        org.apache.commons.math.ode.StepHandler stepHandler42 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setInterpolationControl(false, 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction46, (double) (short) 100, 0.0d, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction51, (double) 0.0f, 3.0d, (int) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 18.708286933869708d + "'", double26 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 18.708286933869708d + "'", double32 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 35.0d + "'", double33 == 35.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 35.0d + "'", double39 == 35.0d);
        org.junit.Assert.assertNotNull(stepHandler40);
        org.junit.Assert.assertNotNull(stepHandler42);
    }

    @Test
    public void test02457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02457");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray7 = new double[] { 10, 100, (byte) 0 };
        boolean boolean8 = switchingFunctionsHandler2.reset((double) 0, doubleArray7);
        double[] doubleArray14 = new double[] { '4', (byte) 10 };
        double[] doubleArray15 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator16 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray14, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler2.reset(18.708286933869708d, doubleArray15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler18.add(switchingFunction19, 35.0d, 100.0d, (int) 'a');
        double double24 = switchingFunctionsHandler18.getEventTime();
        double[] doubleArray30 = new double[] { '4', (byte) 10 };
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray30, doubleArray31);
        boolean boolean33 = switchingFunctionsHandler18.reset((double) 3, doubleArray30);
        double[] doubleArray42 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray47 = new double[] { '4', (byte) 10 };
        double[] doubleArray48 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray47, doubleArray48);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray42, doubleArray48);
        double[] doubleArray56 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray61 = new double[] { '4', (byte) 10 };
        double[] doubleArray62 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray61, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray56, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator65 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) (short) 100, doubleArray48, doubleArray56);
        boolean boolean66 = switchingFunctionsHandler18.reset((double) (byte) 10, doubleArray56);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0L, (double) 2, doubleArray15, doubleArray56);
        double double68 = graggBulirschStoerIntegrator67.getCurrentSignedStepsize();
        double double69 = graggBulirschStoerIntegrator67.getMaxStep();
        graggBulirschStoerIntegrator67.setStepsizeControl(17.88854381999832d, (double) (-1), 97.0d, (double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler75 = graggBulirschStoerIntegrator67.getStepHandler();
        double double76 = graggBulirschStoerIntegrator67.getMinStep();
        java.lang.String str77 = graggBulirschStoerIntegrator67.getName();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2.0d + "'", double69 == 2.0d);
        org.junit.Assert.assertNotNull(stepHandler75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str77, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02458");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler2.add(switchingFunction3, 35.0d, 100.0d, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray14 = new double[] { 10, 100, (byte) 0 };
        boolean boolean15 = switchingFunctionsHandler9.reset((double) 0, doubleArray14);
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        boolean boolean24 = switchingFunctionsHandler9.reset(18.708286933869708d, doubleArray22);
        boolean boolean25 = switchingFunctionsHandler2.reset((double) (byte) 0, doubleArray22);
        boolean boolean26 = switchingFunctionsHandler0.reset((double) 0, doubleArray22);
        double double27 = switchingFunctionsHandler0.getEventTime();
        boolean boolean28 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler0.add(switchingFunction29, (-1.0d), (double) (byte) 0, 0);
        boolean boolean34 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test02459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02459");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction15, (double) (byte) 100, (double) (short) 100, (int) 'a');
        double double20 = graggBulirschStoerIntegrator6.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler21 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setInterpolationControl(true, (int) (short) -1);
        graggBulirschStoerIntegrator6.setInterpolationControl(true, (int) (byte) 0);
        double[] doubleArray32 = new double[] { '4', (byte) 10 };
        double[] doubleArray33 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator34 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray32, doubleArray33);
        double double35 = graggBulirschStoerIntegrator34.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator34.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double[] doubleArray45 = new double[] { '4', (byte) 10 };
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray45, doubleArray46);
        double double48 = graggBulirschStoerIntegrator47.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator47.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        org.apache.commons.math.ode.StepHandler stepHandler54 = graggBulirschStoerIntegrator47.getStepHandler();
        graggBulirschStoerIntegrator34.setStepHandler(stepHandler54);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        stepHandler54.handleStep(stepInterpolator56, true);
        stepHandler54.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler54);
        graggBulirschStoerIntegrator6.setInitialStepSize((double) '4');
        double double63 = graggBulirschStoerIntegrator6.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction64 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction64, (double) 10.0f, 18.566368063325246d, (int) (byte) -1);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 35.0d + "'", double14 == 35.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 35.0d + "'", double20 == 35.0d);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 18.708286933869708d + "'", double35 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 18.708286933869708d + "'", double48 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 35.0d + "'", double63 == 35.0d);
    }

    @Test
    public void test02460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02460");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler0.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray15 = new double[] { 10, 100, (byte) 0 };
        boolean boolean16 = switchingFunctionsHandler10.reset((double) 0, doubleArray15);
        switchingFunctionsHandler0.stepAccepted(10.0d, doubleArray15);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler0.add(switchingFunction18, (double) 'a', 59.16079783099616d, (int) (short) -1);
        boolean boolean23 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler0.add(switchingFunction24, (double) 100, (double) '#', 1);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test02461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02461");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: ");
    }

    @Test
    public void test02462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02462");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double double15 = graggBulirschStoerIntegrator6.getMaxStep();
        double[] doubleArray20 = new double[] { '4', (byte) 10 };
        double[] doubleArray21 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator22 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray20, doubleArray21);
        double double23 = graggBulirschStoerIntegrator22.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator22.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double29 = graggBulirschStoerIntegrator22.getCurrentSignedStepsize();
        double double30 = graggBulirschStoerIntegrator22.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler31 = graggBulirschStoerIntegrator22.getStepHandler();
        boolean boolean32 = stepHandler31.requiresDenseOutput();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler31);
        java.lang.String str34 = graggBulirschStoerIntegrator6.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction35, (double) (byte) 100, (double) 1, (-1));
        org.apache.commons.math.ode.StepHandler stepHandler40 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setOrderControl((int) (byte) -1, (double) 'a', (double) 0.0f);
        graggBulirschStoerIntegrator6.setStabilityCheck(false, (int) (short) 0, 10, (double) 1.0f);
        double[] doubleArray54 = new double[] { '4', (byte) 10 };
        double[] doubleArray55 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray54, doubleArray55);
        double double57 = graggBulirschStoerIntegrator56.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator56.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        org.apache.commons.math.ode.StepHandler stepHandler63 = graggBulirschStoerIntegrator56.getStepHandler();
        boolean boolean64 = stepHandler63.requiresDenseOutput();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler63);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 35.0d + "'", double15 == 35.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 18.708286933869708d + "'", double23 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 18.708286933869708d + "'", double29 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str34, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler40);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 18.708286933869708d + "'", double57 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test02463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02463");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        org.apache.commons.math.ode.StepHandler stepHandler7 = graggBulirschStoerIntegrator6.getStepHandler();
        double double8 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double9 = graggBulirschStoerIntegrator6.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction10, 3.1622776601683795d, (double) 10L, 2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction15, (double) 1, (double) 3, (int) 'a');
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray29 = new double[] { '4', (byte) 10 };
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray29, doubleArray30);
        double double32 = graggBulirschStoerIntegrator31.getCurrentStepStart();
        graggBulirschStoerIntegrator31.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        graggBulirschStoerIntegrator31.addSwitchingFunction(switchingFunction38, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray47 = new double[] { '4', (byte) 10 };
        double[] doubleArray48 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray47, doubleArray48);
        double double50 = graggBulirschStoerIntegrator49.getCurrentStepStart();
        double[] doubleArray55 = new double[] { '4', (byte) 10 };
        double[] doubleArray56 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray55, doubleArray56);
        org.apache.commons.math.ode.StepHandler stepHandler58 = graggBulirschStoerIntegrator57.getStepHandler();
        graggBulirschStoerIntegrator49.setStepHandler(stepHandler58);
        graggBulirschStoerIntegrator31.setStepHandler(stepHandler58);
        graggBulirschStoerIntegrator24.setStepHandler(stepHandler58);
        graggBulirschStoerIntegrator24.setStabilityCheck(false, 100, (int) ' ', (double) (byte) 0);
        double[] doubleArray71 = new double[] { '4', (byte) 10 };
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray71, doubleArray72);
        double double74 = graggBulirschStoerIntegrator73.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator73.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double80 = graggBulirschStoerIntegrator73.getCurrentSignedStepsize();
        double double81 = graggBulirschStoerIntegrator73.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler82 = graggBulirschStoerIntegrator73.getStepHandler();
        boolean boolean83 = stepHandler82.requiresDenseOutput();
        boolean boolean84 = stepHandler82.requiresDenseOutput();
        graggBulirschStoerIntegrator24.setStepHandler(stepHandler82);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler82);
        graggBulirschStoerIntegrator6.setOrderControl(100, 0.0d, (double) (byte) 1);
        graggBulirschStoerIntegrator6.setStabilityCheck(true, 2, (int) (byte) 1, (double) 100);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 18.708286933869708d + "'", double8 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 35.0d + "'", double9 == 35.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[]");
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 18.708286933869708d + "'", double74 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 18.708286933869708d + "'", double80 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(stepHandler82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test02464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02464");
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", objArray16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray16);
        java.lang.Object[] objArray19 = integratorException18.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "Gragg-Bulirsch-Stoer", objArray19);
        java.lang.Object[] objArray29 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", objArray29);
        java.lang.Object[] objArray31 = mathException30.getArguments();
        java.lang.Object[] objArray38 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("", objArray38);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException39);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException42);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "", objArray31, (java.lang.Throwable) integratorException44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.ode.DerivativeException: ", objArray19, (java.lang.Throwable) integratorException44);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException44);
        java.lang.Object[] objArray48 = derivativeException47.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("", objArray48);
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", objArray48);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", objArray48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException53);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray48, (java.lang.Throwable) functionEvaluationException53);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
    }

    @Test
    public void test02465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02465");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getMinStep();
        graggBulirschStoerIntegrator6.setStepsizeControl(0.0d, (double) 0, (double) ' ', (-1.0d));
        double double22 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction23, (double) (-1.0f), (double) (short) 1, (int) (byte) 0);
        double double28 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        java.lang.String str29 = graggBulirschStoerIntegrator6.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction30, 2.0d, 97.0d, (int) (byte) 10);
        java.lang.String str35 = graggBulirschStoerIntegrator6.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction36, 22.80350850198276d, 4.229485053762256d, 100);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 18.708286933869708d + "'", double28 == 18.708286933869708d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str29, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str35, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02466");
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", objArray14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray14);
        java.lang.Object[] objArray17 = integratorException16.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException(35.0d, "", objArray17);
        java.lang.Object[] objArray25 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", objArray25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException26);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", objArray17, (java.lang.Throwable) derivativeException28);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("hi!", objArray17);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = hi!", objArray17);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray17);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", objArray17);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!, 1, 10.0, 4, 100]");
    }

    @Test
    public void test02467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02467");
        double[] doubleArray5 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray10 = new double[] { '4', (byte) 10 };
        double[] doubleArray11 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator12 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray10, doubleArray11);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator13 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray5, doubleArray11);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        graggBulirschStoerIntegrator13.addSwitchingFunction(switchingFunction14, (double) (byte) 100, 35.0d, (int) '#');
        double[] doubleArray23 = new double[] { '4', (byte) 10 };
        double[] doubleArray24 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator25 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray23, doubleArray24);
        double double26 = graggBulirschStoerIntegrator25.getCurrentStepStart();
        double[] doubleArray31 = new double[] { '4', (byte) 10 };
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator33 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray31, doubleArray32);
        org.apache.commons.math.ode.StepHandler stepHandler34 = graggBulirschStoerIntegrator33.getStepHandler();
        graggBulirschStoerIntegrator25.setStepHandler(stepHandler34);
        graggBulirschStoerIntegrator25.setOrderControl((int) (short) -1, (double) (-1L), (double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler40 = graggBulirschStoerIntegrator25.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        stepHandler40.handleStep(stepInterpolator41, true);
        graggBulirschStoerIntegrator13.setStepHandler(stepHandler40);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator13.addSwitchingFunction(switchingFunction45, (double) (byte) 100, 9.848857801796104d, (int) (byte) 10);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertNotNull(stepHandler40);
    }

    @Test
    public void test02468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02468");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator11.addSwitchingFunction(switchingFunction18, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        double double30 = graggBulirschStoerIntegrator29.getCurrentStepStart();
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = graggBulirschStoerIntegrator37.getStepHandler();
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator11.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 100, (int) ' ', (double) (byte) 0);
        double[] doubleArray51 = new double[] { '4', (byte) 10 };
        double[] doubleArray52 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator53 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray51, doubleArray52);
        double double54 = graggBulirschStoerIntegrator53.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator53.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double60 = graggBulirschStoerIntegrator53.getCurrentSignedStepsize();
        double double61 = graggBulirschStoerIntegrator53.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler62 = graggBulirschStoerIntegrator53.getStepHandler();
        boolean boolean63 = stepHandler62.requiresDenseOutput();
        boolean boolean64 = stepHandler62.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler62);
        double double66 = graggBulirschStoerIntegrator4.getMinStep();
        double[] doubleArray71 = new double[] { '4', (byte) 10 };
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray71, doubleArray72);
        double double74 = graggBulirschStoerIntegrator73.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator73.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double80 = graggBulirschStoerIntegrator73.getCurrentSignedStepsize();
        double double81 = graggBulirschStoerIntegrator73.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler82 = graggBulirschStoerIntegrator73.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler82);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction84 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction84, (double) 0.0f, (double) '#', (int) (byte) -1);
        graggBulirschStoerIntegrator4.setInterpolationControl(true, 100);
        graggBulirschStoerIntegrator4.setOrderControl((int) 'a', (double) (short) 1, (double) 2);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 18.708286933869708d + "'", double54 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 18.708286933869708d + "'", double60 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 18.708286933869708d + "'", double74 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 18.708286933869708d + "'", double80 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(stepHandler82);
    }

    @Test
    public void test02469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02469");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getMinStep();
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = graggBulirschStoerIntegrator23.getStepHandler();
        stepHandler24.reset();
        stepHandler24.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler24);
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 3, (double) (short) 100, (double) 2, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler33 = graggBulirschStoerIntegrator6.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction34, (double) 1.0f, 18.708286933869708d, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction39, 100.0d, (double) (-1), 1);
        graggBulirschStoerIntegrator6.setStabilityCheck(false, 0, 1, (double) (byte) 0);
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 1L, 0.0d, (double) 'a', (double) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertNotNull(stepHandler33);
    }

    @Test
    public void test02470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02470");
        java.lang.Object[] objArray8 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("", objArray8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException12);
        java.lang.Object[] objArray14 = derivativeException12.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", objArray14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("", objArray14);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
    }

    @Test
    public void test02471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02471");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        java.lang.String str3 = functionEvaluationException2.getPattern();
        java.lang.Throwable throwable4 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionEvaluationException2.addSuppressed(throwable4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer" + "'", str3, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02472");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException1 = new org.apache.commons.math.FunctionEvaluationException(3.0d);
        java.lang.String str2 = functionEvaluationException1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3" + "'", str2, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3");
    }

    @Test
    public void test02473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02473");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray5 = new double[] { 10, 100, (byte) 0 };
        boolean boolean6 = switchingFunctionsHandler0.reset((double) 0, doubleArray5);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler0.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray15 = new double[] { 10, 100, (byte) 0 };
        boolean boolean16 = switchingFunctionsHandler10.reset((double) 0, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler0.reset((double) 100.0f, doubleArray15);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler0.add(switchingFunction18, (double) (byte) 1, (double) 0, (int) (short) -1);
        boolean boolean23 = switchingFunctionsHandler0.isEmpty();
        boolean boolean24 = switchingFunctionsHandler0.isEmpty();
        double double25 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray32 = new double[] { 10, 100, (byte) 0 };
        boolean boolean33 = switchingFunctionsHandler27.reset((double) 0, doubleArray32);
        double[] doubleArray39 = new double[] { '4', (byte) 10 };
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray39, doubleArray40);
        boolean boolean42 = switchingFunctionsHandler27.reset(18.708286933869708d, doubleArray40);
        boolean boolean43 = switchingFunctionsHandler27.isEmpty();
        boolean boolean44 = switchingFunctionsHandler27.stop();
        double[] doubleArray51 = new double[] { (short) 100, 3, 'a' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        switchingFunctionsHandler52.add(switchingFunction53, 35.0d, 100.0d, (int) 'a');
        double double58 = switchingFunctionsHandler52.getEventTime();
        double[] doubleArray64 = new double[] { '4', (byte) 10 };
        double[] doubleArray65 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator66 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray64, doubleArray65);
        boolean boolean67 = switchingFunctionsHandler52.reset((double) 3, doubleArray64);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', 10.0d, doubleArray51, doubleArray64);
        boolean boolean69 = switchingFunctionsHandler27.reset(0.0d, doubleArray51);
        boolean boolean70 = switchingFunctionsHandler0.reset((double) 1L, doubleArray51);
        double double71 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction72 = null;
        switchingFunctionsHandler0.add(switchingFunction72, 0.0d, 3.0d, (int) ' ');
        boolean boolean77 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 3.0, 97.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test02474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02474");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0.0f, (double) (byte) 100, 1.0d, (double) '4');
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test02475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02475");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        switchingFunctionsHandler4.add(switchingFunction5, 35.0d, 100.0d, (int) 'a');
        double double10 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray16 = new double[] { '4', (byte) 10 };
        double[] doubleArray17 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator18 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray16, doubleArray17);
        boolean boolean19 = switchingFunctionsHandler4.reset((double) 3, doubleArray16);
        double[] doubleArray28 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray33 = new double[] { '4', (byte) 10 };
        double[] doubleArray34 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator35 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray33, doubleArray34);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator36 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray28, doubleArray34);
        double[] doubleArray42 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray47 = new double[] { '4', (byte) 10 };
        double[] doubleArray48 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray47, doubleArray48);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray42, doubleArray48);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator51 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) (short) 100, doubleArray34, doubleArray42);
        boolean boolean52 = switchingFunctionsHandler4.reset((double) (byte) 10, doubleArray42);
        double[] doubleArray53 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator54 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 'a', (double) 100L, doubleArray42, doubleArray53);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray60 = new double[] { 10, 100, (byte) 0 };
        boolean boolean61 = switchingFunctionsHandler55.reset((double) 0, doubleArray60);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler55.evaluateStep(stepInterpolator62);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray70 = new double[] { 10, 100, (byte) 0 };
        boolean boolean71 = switchingFunctionsHandler65.reset((double) 0, doubleArray70);
        boolean boolean72 = switchingFunctionsHandler55.reset((double) 100.0f, doubleArray70);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler74 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction75 = null;
        switchingFunctionsHandler74.add(switchingFunction75, 35.0d, 100.0d, (int) 'a');
        double double80 = switchingFunctionsHandler74.getEventTime();
        double[] doubleArray86 = new double[] { '4', (byte) 10 };
        double[] doubleArray87 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator88 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray86, doubleArray87);
        boolean boolean89 = switchingFunctionsHandler74.reset((double) 3, doubleArray86);
        boolean boolean90 = switchingFunctionsHandler55.reset((double) (short) 0, doubleArray86);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator91 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) -1, 1.0d, doubleArray53, doubleArray86);
        double double92 = graggBulirschStoerIntegrator91.getCurrentSignedStepsize();
        double double93 = graggBulirschStoerIntegrator91.getCurrentSignedStepsize();
        double double94 = graggBulirschStoerIntegrator91.getMaxStep();
        double double95 = graggBulirschStoerIntegrator91.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double92));
        org.junit.Assert.assertTrue(Double.isNaN(double93));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.0d + "'", double94 == 1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double95));
    }

    @Test
    public void test02476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02476");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getMinStep();
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = graggBulirschStoerIntegrator23.getStepHandler();
        stepHandler24.reset();
        stepHandler24.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler24);
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 3, (double) (short) 100, (double) 2, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler33 = graggBulirschStoerIntegrator6.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction34, (double) 1.0f, 18.708286933869708d, (int) (short) -1);
        double double39 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double[] doubleArray44 = new double[] { '4', (byte) 10 };
        double[] doubleArray45 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray44, doubleArray45);
        double double47 = graggBulirschStoerIntegrator46.getCurrentStepStart();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator52 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 1, (double) (byte) 0, 0.0d, (double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler53 = graggBulirschStoerIntegrator52.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler54 = graggBulirschStoerIntegrator52.getStepHandler();
        boolean boolean55 = stepHandler54.requiresDenseOutput();
        graggBulirschStoerIntegrator46.setStepHandler(stepHandler54);
        double[] doubleArray61 = new double[] { '4', (byte) 10 };
        double[] doubleArray62 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray61, doubleArray62);
        double double64 = graggBulirschStoerIntegrator63.getCurrentStepStart();
        double[] doubleArray69 = new double[] { '4', (byte) 10 };
        double[] doubleArray70 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator71 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray69, doubleArray70);
        org.apache.commons.math.ode.StepHandler stepHandler72 = graggBulirschStoerIntegrator71.getStepHandler();
        graggBulirschStoerIntegrator63.setStepHandler(stepHandler72);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator74 = null;
        stepHandler72.handleStep(stepInterpolator74, false);
        graggBulirschStoerIntegrator46.setStepHandler(stepHandler72);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler72);
        graggBulirschStoerIntegrator6.setInterpolationControl(false, (int) (short) -1);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
        org.junit.Assert.assertNotNull(stepHandler72);
    }

    @Test
    public void test02477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02477");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray9, (java.lang.Throwable) functionEvaluationException14);
        java.lang.Object[] objArray23 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", objArray23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, (java.lang.Throwable) derivativeException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray9, (java.lang.Throwable) derivativeException26);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray9);
        java.lang.Object[] objArray38 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("", objArray38);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, (java.lang.Throwable) derivativeException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) '4', (java.lang.Throwable) derivativeException41);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("Evaluation failed for argument = hi!", (java.lang.Object[]) strArray9, (java.lang.Throwable) derivativeException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) mathException44);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!, 1, 10.0, 4, 100]");
    }

    @Test
    public void test02478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02478");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double double8 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double9 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 18.708286933869708d + "'", double8 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test02479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02479");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction13, (double) (short) 10, (double) 2, (int) '#');
        org.apache.commons.math.ode.StepHandler stepHandler18 = graggBulirschStoerIntegrator6.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction19, (double) 2, (double) 10.0f, (int) (byte) 0);
        double double24 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setInitialStepSize((double) (byte) 10);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test02480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02480");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray6);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray6, (java.lang.Throwable) functionEvaluationException11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray6);
        java.lang.String str15 = derivativeException14.getPattern();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.commons.math.MathException: " + "'", str15, "org.apache.commons.math.MathException: ");
    }

    @Test
    public void test02481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02481");
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("", objArray10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray10);
        java.lang.Object[] objArray13 = integratorException12.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException(35.0d, "", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) integratorException15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException17);
        java.lang.String str19 = mathException17.toString();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: " + "'", str19, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test02482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02482");
        java.lang.Throwable throwable7 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable7);
        double double9 = functionEvaluationException8.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 3, (java.lang.Throwable) functionEvaluationException8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) functionEvaluationException10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, (java.lang.Throwable) mathException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Throwable) mathException12);
        java.lang.Class<?> wildcardClass15 = mathException14.getClass();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02483");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray12, (java.lang.Throwable) functionEvaluationException17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.ode.IntegratorException: ");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray12, (java.lang.Throwable) functionEvaluationException22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray12);
        java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", 10 };
        java.lang.Throwable throwable34 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("", throwable34);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", objArray30, (java.lang.Throwable) mathException36);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException37);
        java.lang.Throwable[] throwableArray39 = integratorException38.getSuppressed();
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Object[]) throwableArray39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException40);
        java.lang.Object[] objArray54 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("", objArray54);
        java.lang.Throwable[] throwableArray56 = mathException55.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) '#', (java.lang.Throwable) functionEvaluationException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, (java.lang.Throwable) functionEvaluationException58);
        functionEvaluationException41.addSuppressed((java.lang.Throwable) functionEvaluationException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) functionEvaluationException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) '#', (java.lang.Throwable) functionEvaluationException60);
        java.lang.String str64 = functionEvaluationException63.getPattern();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 10]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str64, "org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test02484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02484");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator11.addSwitchingFunction(switchingFunction18, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        double double30 = graggBulirschStoerIntegrator29.getCurrentStepStart();
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = graggBulirschStoerIntegrator37.getStepHandler();
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator11.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 100, (int) ' ', (double) (byte) 0);
        double[] doubleArray51 = new double[] { '4', (byte) 10 };
        double[] doubleArray52 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator53 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray51, doubleArray52);
        double double54 = graggBulirschStoerIntegrator53.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator53.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double60 = graggBulirschStoerIntegrator53.getCurrentSignedStepsize();
        double double61 = graggBulirschStoerIntegrator53.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler62 = graggBulirschStoerIntegrator53.getStepHandler();
        boolean boolean63 = stepHandler62.requiresDenseOutput();
        boolean boolean64 = stepHandler62.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler62);
        double double66 = graggBulirschStoerIntegrator4.getMinStep();
        double[] doubleArray71 = new double[] { '4', (byte) 10 };
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray71, doubleArray72);
        double double74 = graggBulirschStoerIntegrator73.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator73.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double80 = graggBulirschStoerIntegrator73.getCurrentSignedStepsize();
        double double81 = graggBulirschStoerIntegrator73.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler82 = graggBulirschStoerIntegrator73.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler82);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction84 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction84, (double) 0.0f, (double) '#', (int) (byte) -1);
        double double89 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler90 = graggBulirschStoerIntegrator4.getStepHandler();
        double double91 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double double92 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        java.lang.String str93 = graggBulirschStoerIntegrator4.getName();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 18.708286933869708d + "'", double54 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 18.708286933869708d + "'", double60 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 18.708286933869708d + "'", double74 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 18.708286933869708d + "'", double80 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(stepHandler82);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertNotNull(stepHandler90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str93, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02485");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 18.708286933869708d, (double) 1, (double) 0);
        double[] doubleArray9 = new double[] { '4', (byte) 10 };
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator11 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray9, doubleArray10);
        double double12 = graggBulirschStoerIntegrator11.getCurrentStepStart();
        graggBulirschStoerIntegrator11.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator11.addSwitchingFunction(switchingFunction18, (double) (short) 10, (double) 2, (int) '#');
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        double double30 = graggBulirschStoerIntegrator29.getCurrentStepStart();
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = graggBulirschStoerIntegrator37.getStepHandler();
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator11.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler38);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 100, (int) ' ', (double) (byte) 0);
        graggBulirschStoerIntegrator4.setOrderControl((int) 'a', 1.0d, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction51, 0.0d, (double) (short) -1, 3);
        org.apache.commons.math.ode.StepHandler stepHandler56 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setInitialStepSize((double) (byte) -1);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(stepHandler56);
    }

    @Test
    public void test02486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02486");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray7 = new double[] { 10, 100, (byte) 0 };
        boolean boolean8 = switchingFunctionsHandler2.reset((double) 0, doubleArray7);
        double[] doubleArray16 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray16, doubleArray22);
        double[] doubleArray30 = new double[] { 1.0d, (byte) 0, 10.0d };
        double[] doubleArray35 = new double[] { '4', (byte) 10 };
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray35, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, doubleArray30, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator39 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) (short) 100, doubleArray22, doubleArray30);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) -1, (double) (byte) 10, doubleArray7, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        graggBulirschStoerIntegrator40.addSwitchingFunction(switchingFunction41, (double) (byte) 10, (double) (short) 1, 0);
        org.apache.commons.math.ode.StepHandler stepHandler46 = null;
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator40.setStepHandler(stepHandler46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
    }

    @Test
    public void test02487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02487");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray4);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray4, (java.lang.Throwable) functionEvaluationException9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException9);
        java.lang.String str12 = functionEvaluationException9.toString();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer" + "'", str12, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02488");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1");
        java.lang.String str3 = functionEvaluationException2.getPattern();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1" + "'", str3, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1");
    }

    @Test
    public void test02489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02489");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", objArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException17);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray8, (java.lang.Throwable) integratorException21);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray8);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "Evaluation failed for argument = -1", (java.lang.Throwable) derivativeException25);
        double double28 = functionEvaluationException27.getArgument();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 100.0d + "'", double28 == 100.0d);
    }

    @Test
    public void test02490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02490");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler17 = graggBulirschStoerIntegrator6.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction18, (double) 1, (double) (byte) 10, (int) (short) 10);
        double double23 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test02491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02491");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        java.lang.String str7 = graggBulirschStoerIntegrator6.getName();
        java.lang.String str8 = graggBulirschStoerIntegrator6.getName();
        graggBulirschStoerIntegrator6.setInitialStepSize((double) 10L);
        graggBulirschStoerIntegrator6.setStabilityCheck(false, (int) '#', 1, 17.88854381999832d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction16, (double) 10.0f, (double) 1, 0);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str7, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str8, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02492");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator6.setInterpolationControl(true, 2);
        graggBulirschStoerIntegrator6.setStabilityCheck(true, (-1), (int) (short) 10, (double) (byte) 10);
        double[] doubleArray25 = new double[] { '4', (byte) 10 };
        double[] doubleArray26 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator27 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray25, doubleArray26);
        double double28 = graggBulirschStoerIntegrator27.getCurrentStepStart();
        double[] doubleArray33 = new double[] { '4', (byte) 10 };
        double[] doubleArray34 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator35 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray33, doubleArray34);
        org.apache.commons.math.ode.StepHandler stepHandler36 = graggBulirschStoerIntegrator35.getStepHandler();
        graggBulirschStoerIntegrator27.setStepHandler(stepHandler36);
        graggBulirschStoerIntegrator27.setOrderControl((int) (short) -1, (double) (-1L), (double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler42 = graggBulirschStoerIntegrator27.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        stepHandler42.handleStep(stepInterpolator43, true);
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler42);
        double double47 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[]");
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 18.708286933869708d + "'", double47 == 18.708286933869708d);
    }

    @Test
    public void test02493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02493");
        double[] doubleArray5 = new double[] { (short) 100, 3, 'a' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler6.add(switchingFunction7, 35.0d, 100.0d, (int) 'a');
        double double12 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray18 = new double[] { '4', (byte) 10 };
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator20 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray18, doubleArray19);
        boolean boolean21 = switchingFunctionsHandler6.reset((double) 3, doubleArray18);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator22 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', 10.0d, doubleArray5, doubleArray18);
        double[] doubleArray27 = new double[] { '4', (byte) 10 };
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray27, doubleArray28);
        double double30 = graggBulirschStoerIntegrator29.getCurrentStepStart();
        graggBulirschStoerIntegrator29.setStepsizeControl((double) 100, (double) 3, 0.0d, (double) (-1));
        graggBulirschStoerIntegrator29.setInterpolationControl(true, 2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator29.addSwitchingFunction(switchingFunction39, (double) (short) 1, 18.708286933869708d, (int) (byte) 100);
        double double44 = graggBulirschStoerIntegrator29.getMaxStep();
        double[] doubleArray49 = new double[] { '4', (byte) 10 };
        double[] doubleArray50 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator51 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray49, doubleArray50);
        double double52 = graggBulirschStoerIntegrator51.getCurrentStepStart();
        double[] doubleArray57 = new double[] { '4', (byte) 10 };
        double[] doubleArray58 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray57, doubleArray58);
        org.apache.commons.math.ode.StepHandler stepHandler60 = graggBulirschStoerIntegrator59.getStepHandler();
        graggBulirschStoerIntegrator51.setStepHandler(stepHandler60);
        java.lang.String str62 = graggBulirschStoerIntegrator51.getName();
        double[] doubleArray67 = new double[] { '4', (byte) 10 };
        double[] doubleArray68 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray67, doubleArray68);
        double double70 = graggBulirschStoerIntegrator69.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator69.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double[] doubleArray80 = new double[] { '4', (byte) 10 };
        double[] doubleArray81 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator82 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray80, doubleArray81);
        double double83 = graggBulirschStoerIntegrator82.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator82.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        org.apache.commons.math.ode.StepHandler stepHandler89 = graggBulirschStoerIntegrator82.getStepHandler();
        graggBulirschStoerIntegrator69.setStepHandler(stepHandler89);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator91 = null;
        stepHandler89.handleStep(stepInterpolator91, true);
        graggBulirschStoerIntegrator51.setStepHandler(stepHandler89);
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler89);
        graggBulirschStoerIntegrator22.setStepHandler(stepHandler89);
        double double97 = graggBulirschStoerIntegrator22.getCurrentSignedStepsize();
        java.lang.String str98 = graggBulirschStoerIntegrator22.getName();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 3.0, 97.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 35.0d + "'", double44 == 35.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertNotNull(stepHandler60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str62, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 18.708286933869708d + "'", double70 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 18.708286933869708d + "'", double83 == 18.708286933869708d);
        org.junit.Assert.assertNotNull(stepHandler89);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 17.88854381999832d + "'", double97 == 17.88854381999832d);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str98, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test02494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02494");
        java.lang.Throwable throwable7 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("", throwable7);
        java.lang.Object[] objArray10 = mathException9.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.FunctionEvaluationException: ", objArray10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException11);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException11);
        java.lang.Object[] objArray14 = integratorException13.getArguments();
        java.lang.Object[] objArray25 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", objArray25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray25);
        java.lang.Object[] objArray28 = integratorException27.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "Gragg-Bulirsch-Stoer", objArray28);
        java.lang.Throwable throwable35 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", throwable35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("", throwable35);
        java.lang.Object[] objArray38 = mathException37.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.FunctionEvaluationException: ", objArray38);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: ", objArray28, (java.lang.Throwable) functionEvaluationException39);
        java.lang.Object[] objArray46 = new java.lang.Object[] { '4', 2, (byte) 10 };
        java.lang.Object[] objArray54 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("", objArray54);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray54);
        java.lang.Object[] objArray57 = integratorException56.getArguments();
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("hi!", objArray46, (java.lang.Throwable) integratorException56);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) integratorException56);
        functionEvaluationException39.addSuppressed((java.lang.Throwable) integratorException56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((-0.0d), "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", objArray14, (java.lang.Throwable) functionEvaluationException39);
        double double62 = functionEvaluationException61.getArgument();
        double double63 = functionEvaluationException61.getArgument();
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException61);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[4, 2, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[4, 2, 10]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.0d) + "'", double62 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.0d) + "'", double63 == (-0.0d));
    }

    @Test
    public void test02495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02495");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        double double15 = graggBulirschStoerIntegrator6.getMaxStep();
        graggBulirschStoerIntegrator6.setInterpolationControl(true, (int) (short) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction19, (double) 100L, Double.NaN, (int) (short) 10);
        graggBulirschStoerIntegrator6.setStepsizeControl(18.708286933869708d, (double) (byte) 0, (-1.0d), (double) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction29, (double) (short) 0, (-1.0d), (int) (byte) 1);
        graggBulirschStoerIntegrator6.setInterpolationControl(false, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction37, Double.NaN, 2.0d, 2);
        double[] doubleArray46 = new double[] { '4', (byte) 10 };
        double[] doubleArray47 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray46, doubleArray47);
        double double49 = graggBulirschStoerIntegrator48.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator48.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double55 = graggBulirschStoerIntegrator48.getCurrentSignedStepsize();
        double double56 = graggBulirschStoerIntegrator48.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler57 = graggBulirschStoerIntegrator48.getStepHandler();
        double double58 = graggBulirschStoerIntegrator48.getMinStep();
        double[] doubleArray63 = new double[] { '4', (byte) 10 };
        double[] doubleArray64 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator65 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray63, doubleArray64);
        org.apache.commons.math.ode.StepHandler stepHandler66 = graggBulirschStoerIntegrator65.getStepHandler();
        stepHandler66.reset();
        stepHandler66.reset();
        graggBulirschStoerIntegrator48.setStepHandler(stepHandler66);
        boolean boolean70 = stepHandler66.requiresDenseOutput();
        boolean boolean71 = stepHandler66.requiresDenseOutput();
        boolean boolean72 = stepHandler66.requiresDenseOutput();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler66);
        double double74 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        graggBulirschStoerIntegrator6.setStabilityCheck(true, (int) '#', (int) (byte) 10, 32.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 35.0d + "'", double15 == 35.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 18.708286933869708d + "'", double49 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 18.708286933869708d + "'", double55 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(stepHandler57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[]");
        org.junit.Assert.assertNotNull(stepHandler66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
    }

    @Test
    public void test02496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02496");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(59.16079783099616d, (double) 1.0f, (-1.0d), (double) ' ');
        graggBulirschStoerIntegrator4.setOrderControl((int) (byte) 100, 2.0d, (double) (short) 0);
    }

    @Test
    public void test02497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02497");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (byte) 1, 10.0d, '4', (byte) 100 };
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", objArray14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray6, (java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray6);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray6);
        java.lang.Throwable[] throwableArray24 = mathException23.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException23);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1, 10.0, 4, 100]");
        org.junit.Assert.assertNotNull(throwableArray24);
    }

    @Test
    public void test02498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02498");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        double double16 = graggBulirschStoerIntegrator6.getMinStep();
        double[] doubleArray21 = new double[] { '4', (byte) 10 };
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray21, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = graggBulirschStoerIntegrator23.getStepHandler();
        stepHandler24.reset();
        stepHandler24.reset();
        graggBulirschStoerIntegrator6.setStepHandler(stepHandler24);
        graggBulirschStoerIntegrator6.setInterpolationControl(false, (int) (short) 100);
        graggBulirschStoerIntegrator6.setStabilityCheck(false, 3, 1, 0.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        graggBulirschStoerIntegrator6.addSwitchingFunction(switchingFunction36, 52.0d, 31.622776601683793d, (int) ' ');
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertNotNull(stepHandler24);
    }

    @Test
    public void test02499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02499");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ");
        double double5 = functionEvaluationException4.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0");
        java.lang.Throwable[] throwableArray9 = functionEvaluationException8.getSuppressed();
        functionEvaluationException4.addSuppressed((java.lang.Throwable) functionEvaluationException8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) functionEvaluationException4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test02500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02500");
        double[] doubleArray4 = new double[] { '4', (byte) 10 };
        double[] doubleArray5 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator6 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) '#', doubleArray4, doubleArray5);
        double double7 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator6.setStepsizeControl((double) 0.0f, 0.0d, (double) 0.0f, (double) '#');
        double double13 = graggBulirschStoerIntegrator6.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator6.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator6.getStepHandler();
        graggBulirschStoerIntegrator6.setInterpolationControl(true, (int) (short) 1);
        java.lang.String str19 = graggBulirschStoerIntegrator6.getName();
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator6.getStepHandler();
        java.lang.String str21 = graggBulirschStoerIntegrator6.getName();
        graggBulirschStoerIntegrator6.setInterpolationControl(false, (int) (short) -1);
        org.apache.commons.math.ode.StepHandler stepHandler25 = graggBulirschStoerIntegrator6.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 18.708286933869708d + "'", double7 == 18.708286933869708d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 18.708286933869708d + "'", double13 == 18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str19, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str21, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler25);
    }
}

