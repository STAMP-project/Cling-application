import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ErrorTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test001");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DateTimeField dateTimeField21 = chronology11.yearOfCentury();
        org.joda.time.DurationField durationField22 = chronology11.eras();
        org.joda.time.DurationField durationField23 = chronology11.centuries();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField22, durationField23, and durationField22", !(durationField22.compareTo(durationField23) == 0) || (Math.signum(durationField22.compareTo(durationField22)) == Math.signum(durationField23.compareTo(durationField22))));
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test002");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        org.joda.time.DateTimeField dateTimeField22 = chronology21.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField23 = dateTimeFieldType0.getField(chronology21);
        org.joda.time.DateTimeZone dateTimeZone24 = chronology21.getZone();
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str27 = dateTimeZone25.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now(dateTimeZone25);
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.LocalDateTime localDateTime31 = localDateTime28.withDurationAdded(readableDuration29, 86399999);
        org.joda.time.DateTimeZone dateTimeZone32 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str34 = dateTimeZone32.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime35 = org.joda.time.LocalDateTime.now(dateTimeZone32);
        org.joda.time.LocalDateTime.Property property36 = localDateTime35.millisOfDay();
        org.joda.time.LocalDateTime localDateTime38 = localDateTime35.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime39 = localDateTime35.toDateTime();
        java.lang.String str40 = dateTime39.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int42 = dateTime39.get(dateTimeFieldType41);
        org.joda.time.Chronology chronology43 = dateTime39.getChronology();
        org.joda.time.DateTimeField dateTimeField44 = chronology43.weekyearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now(dateTimeZone45);
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.millisOfDay();
        long long50 = property49.remainder();
        org.joda.time.LocalDateTime localDateTime51 = property49.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime52 = property49.roundFloorCopy();
        java.lang.String str53 = property49.getAsShortText();
        int int54 = property49.getMinimumValue();
        org.joda.time.LocalDateTime localDateTime56 = property49.addToCopy((long) 53623874);
        int[] intArray58 = chronology43.get((org.joda.time.ReadablePartial) localDateTime56, (long) 53630466);
        org.joda.time.DateTimeZone dateTimeZone60 = org.joda.time.DateTimeZone.forOffsetMillis((int) 'a');
        org.joda.time.LocalDateTime localDateTime61 = org.joda.time.LocalDateTime.now(dateTimeZone60);
        java.util.Date date62 = localDateTime61.toDate();
        int[] intArray64 = chronology43.get((org.joda.time.ReadablePartial) localDateTime61, (long) 99);
        chronology21.validate((org.joda.time.ReadablePartial) localDateTime31, intArray64);
        org.joda.time.Chronology chronology66 = chronology21.withUTC();
        org.joda.time.DurationField durationField67 = chronology66.months();
        org.joda.time.DurationField durationField68 = chronology66.days();
        org.joda.time.DurationField durationField69 = chronology66.eras();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField69, durationField67, and durationField68", !(durationField69.compareTo(durationField67) == 0) || (Math.signum(durationField69.compareTo(durationField68)) == Math.signum(durationField67.compareTo(durationField68))));
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test003");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DateTimeField dateTimeField21 = chronology11.yearOfCentury();
        org.joda.time.DurationField durationField22 = chronology11.eras();
        org.joda.time.DurationField durationField23 = chronology11.eras();
        org.joda.time.DateTimeZone dateTimeZone24 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str26 = dateTimeZone24.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime27 = org.joda.time.LocalDateTime.now(dateTimeZone24);
        org.joda.time.LocalDateTime.Property property28 = localDateTime27.millisOfDay();
        org.joda.time.ReadableInstant readableInstant29 = null;
        long long30 = property28.getDifferenceAsLong(readableInstant29);
        org.joda.time.DurationField durationField31 = property28.getRangeDurationField();
        long long34 = durationField31.add((long) (-292275054), 14);
        long long37 = durationField31.getValueAsLong(10L, (long) 2022);
        int int38 = durationField23.compareTo(durationField31);
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField23, durationField31, and durationField23", !(durationField23.compareTo(durationField31) == 0) || (Math.signum(durationField23.compareTo(durationField23)) == Math.signum(durationField31.compareTo(durationField23))));
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test004");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeField dateTimeField12 = chronology11.weekyearOfCentury();
        org.joda.time.DurationField durationField13 = chronology11.millis();
        org.joda.time.DurationField durationField14 = chronology11.eras();
        org.joda.time.DateTimeField dateTimeField15 = chronology11.minuteOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField13 and durationField14", Math.signum(durationField13.compareTo(durationField14)) == -Math.signum(durationField14.compareTo(durationField13)));
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test005");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DurationField durationField21 = chronology11.weekyears();
        org.joda.time.DateTimeField dateTimeField22 = chronology11.dayOfYear();
        org.joda.time.DurationField durationField23 = chronology11.weeks();
        org.joda.time.DateTimeField dateTimeField24 = chronology11.yearOfEra();
        org.joda.time.DurationField durationField25 = chronology11.months();
        org.joda.time.DurationField durationField26 = chronology11.eras();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField26, durationField21, and durationField23", !(durationField26.compareTo(durationField21) == 0) || (Math.signum(durationField26.compareTo(durationField23)) == Math.signum(durationField21.compareTo(durationField23))));
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test006");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        boolean boolean22 = dateTimeFieldType0.isSupported(chronology21);
        org.joda.time.DurationField durationField23 = chronology21.years();
        org.joda.time.DateTimeField dateTimeField24 = chronology21.hourOfDay();
        org.joda.time.DurationField durationField25 = chronology21.months();
        org.joda.time.DurationField durationField26 = chronology21.eras();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField26, durationField23, and durationField25", !(durationField26.compareTo(durationField23) == 0) || (Math.signum(durationField26.compareTo(durationField25)) == Math.signum(durationField23.compareTo(durationField25))));
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test007");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone9 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str11 = dateTimeZone9.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(dateTimeZone9);
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.millisOfDay();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime12.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now(dateTimeZone17);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime20.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime24 = localDateTime20.toDateTime();
        java.lang.String str25 = dateTime24.toString();
        org.joda.time.DateTime dateTime26 = localDateTime15.toDateTime((org.joda.time.ReadableInstant) dateTime24);
        boolean boolean27 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.LocalDateTime localDateTime34 = localDateTime31.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime35 = localDateTime31.toDateTime();
        java.lang.String str36 = dateTime35.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int38 = dateTime35.get(dateTimeFieldType37);
        org.joda.time.DateTimeZone dateTimeZone39 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str41 = dateTimeZone39.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime42 = org.joda.time.LocalDateTime.now(dateTimeZone39);
        org.joda.time.LocalDateTime.Property property43 = localDateTime42.millisOfDay();
        org.joda.time.LocalDateTime localDateTime45 = localDateTime42.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property46 = localDateTime45.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone47 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str49 = dateTimeZone47.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime50 = org.joda.time.LocalDateTime.now(dateTimeZone47);
        org.joda.time.LocalDateTime.Property property51 = localDateTime50.millisOfDay();
        org.joda.time.LocalDateTime localDateTime53 = localDateTime50.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime54 = localDateTime50.toDateTime();
        java.lang.String str55 = dateTime54.toString();
        org.joda.time.DateTime dateTime56 = localDateTime45.toDateTime((org.joda.time.ReadableInstant) dateTime54);
        boolean boolean57 = dateTime35.isAfter((org.joda.time.ReadableInstant) dateTime54);
        boolean boolean58 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime35);
        java.lang.String str59 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone60 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str62 = dateTimeZone60.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime63 = org.joda.time.LocalDateTime.now(dateTimeZone60);
        org.joda.time.LocalDateTime.Property property64 = localDateTime63.millisOfDay();
        org.joda.time.LocalDateTime localDateTime66 = localDateTime63.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime67 = localDateTime63.toDateTime();
        java.lang.String str68 = dateTime67.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType69 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int70 = dateTime67.get(dateTimeFieldType69);
        org.joda.time.Chronology chronology71 = dateTime67.getChronology();
        java.lang.Object obj72 = null;
        boolean boolean73 = dateTime67.equals(obj72);
        long long74 = dateTime67.getMillis();
        org.joda.time.Instant instant75 = dateTime67.toInstant();
        org.joda.time.DateTimeZone dateTimeZone76 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str78 = dateTimeZone76.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime79 = org.joda.time.LocalDateTime.now(dateTimeZone76);
        org.joda.time.LocalDateTime.Property property80 = localDateTime79.millisOfDay();
        java.lang.String str81 = property80.getName();
        int int82 = property80.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType83 = property80.getFieldType();
        org.joda.time.LocalDateTime localDateTime84 = property80.withMinimumValue();
        org.joda.time.LocalDateTime.Property property85 = localDateTime84.weekOfWeekyear();
        boolean boolean86 = dateTime67.equals((java.lang.Object) property85);
        boolean boolean87 = dateTime7.isAfter((org.joda.time.ReadableInstant) dateTime67);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime24 and instant75", (dateTime24.compareTo(instant75) == 0) == dateTime24.equals(instant75));
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test008");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone9 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str11 = dateTimeZone9.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(dateTimeZone9);
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.millisOfDay();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime12.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now(dateTimeZone17);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime20.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime24 = localDateTime20.toDateTime();
        java.lang.String str25 = dateTime24.toString();
        org.joda.time.DateTime dateTime26 = localDateTime15.toDateTime((org.joda.time.ReadableInstant) dateTime24);
        boolean boolean27 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.Instant instant28 = dateTime7.toInstant();
        java.lang.String str29 = dateTime7.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime24 and instant28", (dateTime24.compareTo(instant28) == 0) == dateTime24.equals(instant28));
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test009");
        org.joda.time.DurationFieldType durationFieldType0 = org.joda.time.DurationFieldType.years();
        java.lang.String str1 = durationFieldType0.getName();
        org.joda.time.DateTimeFieldType dateTimeFieldType2 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone3 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str5 = dateTimeZone3.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime6 = org.joda.time.LocalDateTime.now(dateTimeZone3);
        org.joda.time.LocalDateTime.Property property7 = localDateTime6.millisOfDay();
        org.joda.time.LocalDateTime localDateTime9 = localDateTime6.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime10 = localDateTime6.toDateTime();
        java.lang.String str11 = dateTime10.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType12 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int13 = dateTime10.get(dateTimeFieldType12);
        org.joda.time.Chronology chronology14 = dateTime10.getChronology();
        org.joda.time.DateTimeZone dateTimeZone15 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str17 = dateTimeZone15.getShortName((long) (short) 10);
        long long19 = dateTimeZone15.convertUTCToLocal((long) ' ');
        java.lang.String str20 = dateTimeZone15.toString();
        boolean boolean22 = dateTimeZone15.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology23 = chronology14.withZone(dateTimeZone15);
        org.joda.time.DateTimeField dateTimeField24 = chronology23.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField25 = dateTimeFieldType2.getField(chronology23);
        org.joda.time.Chronology chronology26 = chronology23.withUTC();
        org.joda.time.DurationField durationField27 = durationFieldType0.getField(chronology23);
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.LocalDateTime localDateTime34 = localDateTime31.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime35 = localDateTime31.toDateTime();
        java.lang.String str36 = dateTime35.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int38 = dateTime35.get(dateTimeFieldType37);
        org.joda.time.Chronology chronology39 = dateTime35.getChronology();
        org.joda.time.DateTimeField dateTimeField40 = chronology39.weekyearOfCentury();
        org.joda.time.DurationField durationField41 = chronology39.millis();
        org.joda.time.DurationField durationField42 = chronology39.eras();
        boolean boolean43 = durationFieldType0.isSupported(chronology39);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField27 and durationField42", Math.signum(durationField27.compareTo(durationField42)) == -Math.signum(durationField42.compareTo(durationField27)));
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test010");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone9 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str11 = dateTimeZone9.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(dateTimeZone9);
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.millisOfDay();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime12.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now(dateTimeZone17);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime20.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime24 = localDateTime20.toDateTime();
        java.lang.String str25 = dateTime24.toString();
        org.joda.time.DateTime dateTime26 = localDateTime15.toDateTime((org.joda.time.ReadableInstant) dateTime24);
        boolean boolean27 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.Instant instant28 = dateTime7.toInstant();
        org.joda.time.DateTimeZone dateTimeZone29 = instant28.getZone();
        java.lang.String str30 = dateTimeZone29.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant28", (dateTime7.compareTo(instant28) == 0) == dateTime7.equals(instant28));
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test011");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        org.joda.time.DateTimeField dateTimeField22 = chronology21.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField23 = dateTimeFieldType0.getField(chronology21);
        org.joda.time.DateTimeZone dateTimeZone24 = chronology21.getZone();
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str27 = dateTimeZone25.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now(dateTimeZone25);
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.LocalDateTime localDateTime31 = localDateTime28.withDurationAdded(readableDuration29, 86399999);
        org.joda.time.DateTimeZone dateTimeZone32 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str34 = dateTimeZone32.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime35 = org.joda.time.LocalDateTime.now(dateTimeZone32);
        org.joda.time.LocalDateTime.Property property36 = localDateTime35.millisOfDay();
        org.joda.time.LocalDateTime localDateTime38 = localDateTime35.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime39 = localDateTime35.toDateTime();
        java.lang.String str40 = dateTime39.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int42 = dateTime39.get(dateTimeFieldType41);
        org.joda.time.Chronology chronology43 = dateTime39.getChronology();
        org.joda.time.DateTimeField dateTimeField44 = chronology43.weekyearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now(dateTimeZone45);
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.millisOfDay();
        long long50 = property49.remainder();
        org.joda.time.LocalDateTime localDateTime51 = property49.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime52 = property49.roundFloorCopy();
        java.lang.String str53 = property49.getAsShortText();
        int int54 = property49.getMinimumValue();
        org.joda.time.LocalDateTime localDateTime56 = property49.addToCopy((long) 53623874);
        int[] intArray58 = chronology43.get((org.joda.time.ReadablePartial) localDateTime56, (long) 53630466);
        org.joda.time.DateTimeZone dateTimeZone60 = org.joda.time.DateTimeZone.forOffsetMillis((int) 'a');
        org.joda.time.LocalDateTime localDateTime61 = org.joda.time.LocalDateTime.now(dateTimeZone60);
        java.util.Date date62 = localDateTime61.toDate();
        int[] intArray64 = chronology43.get((org.joda.time.ReadablePartial) localDateTime61, (long) 99);
        chronology21.validate((org.joda.time.ReadablePartial) localDateTime31, intArray64);
        org.joda.time.DurationField durationField66 = chronology21.eras();
        org.joda.time.DurationField durationField67 = chronology21.halfdays();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField66, durationField67, and durationField66", !(durationField66.compareTo(durationField67) == 0) || (Math.signum(durationField66.compareTo(durationField66)) == Math.signum(durationField67.compareTo(durationField66))));
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test012");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone9 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str11 = dateTimeZone9.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(dateTimeZone9);
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.millisOfDay();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime12.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now(dateTimeZone17);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime20.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime24 = localDateTime20.toDateTime();
        java.lang.String str25 = dateTime24.toString();
        org.joda.time.DateTime dateTime26 = localDateTime15.toDateTime((org.joda.time.ReadableInstant) dateTime24);
        boolean boolean27 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.Instant instant28 = dateTime7.toInstant();
        org.joda.time.DateTimeZone dateTimeZone29 = instant28.getZone();
        int int31 = dateTimeZone29.getOffset((long) 53638334);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant28", (dateTime7.compareTo(instant28) == 0) == dateTime7.equals(instant28));
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test013");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        org.joda.time.DateTimeField dateTimeField22 = chronology21.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField23 = dateTimeFieldType0.getField(chronology21);
        org.joda.time.DateTimeZone dateTimeZone24 = chronology21.getZone();
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str27 = dateTimeZone25.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now(dateTimeZone25);
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.LocalDateTime localDateTime31 = localDateTime28.withDurationAdded(readableDuration29, 86399999);
        org.joda.time.DateTimeZone dateTimeZone32 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str34 = dateTimeZone32.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime35 = org.joda.time.LocalDateTime.now(dateTimeZone32);
        org.joda.time.LocalDateTime.Property property36 = localDateTime35.millisOfDay();
        org.joda.time.LocalDateTime localDateTime38 = localDateTime35.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime39 = localDateTime35.toDateTime();
        java.lang.String str40 = dateTime39.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int42 = dateTime39.get(dateTimeFieldType41);
        org.joda.time.Chronology chronology43 = dateTime39.getChronology();
        org.joda.time.DateTimeField dateTimeField44 = chronology43.weekyearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now(dateTimeZone45);
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.millisOfDay();
        long long50 = property49.remainder();
        org.joda.time.LocalDateTime localDateTime51 = property49.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime52 = property49.roundFloorCopy();
        java.lang.String str53 = property49.getAsShortText();
        int int54 = property49.getMinimumValue();
        org.joda.time.LocalDateTime localDateTime56 = property49.addToCopy((long) 53623874);
        int[] intArray58 = chronology43.get((org.joda.time.ReadablePartial) localDateTime56, (long) 53630466);
        org.joda.time.DateTimeZone dateTimeZone60 = org.joda.time.DateTimeZone.forOffsetMillis((int) 'a');
        org.joda.time.LocalDateTime localDateTime61 = org.joda.time.LocalDateTime.now(dateTimeZone60);
        java.util.Date date62 = localDateTime61.toDate();
        int[] intArray64 = chronology43.get((org.joda.time.ReadablePartial) localDateTime61, (long) 99);
        chronology21.validate((org.joda.time.ReadablePartial) localDateTime31, intArray64);
        org.joda.time.DurationField durationField66 = chronology21.eras();
        org.joda.time.DateTimeField dateTimeField67 = chronology21.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField68 = chronology21.monthOfYear();
        org.joda.time.DurationField durationField69 = chronology21.minutes();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField66, durationField69, and durationField66", !(durationField66.compareTo(durationField69) == 0) || (Math.signum(durationField66.compareTo(durationField66)) == Math.signum(durationField69.compareTo(durationField66))));
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test014");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone9 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str11 = dateTimeZone9.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(dateTimeZone9);
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.millisOfDay();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime12.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now(dateTimeZone17);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime20.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime24 = localDateTime20.toDateTime();
        java.lang.String str25 = dateTime24.toString();
        org.joda.time.DateTime dateTime26 = localDateTime15.toDateTime((org.joda.time.ReadableInstant) dateTime24);
        boolean boolean27 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.Instant instant28 = dateTime7.toInstant();
        org.joda.time.DateTimeZone dateTimeZone29 = instant28.getZone();
        java.lang.String str31 = dateTimeZone29.getNameKey((long) 53642504);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant28", (dateTime7.compareTo(instant28) == 0) == dateTime7.equals(instant28));
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test015");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property7 = localDateTime6.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone8 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str10 = dateTimeZone8.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now(dateTimeZone8);
        org.joda.time.LocalDateTime.Property property12 = localDateTime11.millisOfDay();
        org.joda.time.LocalDateTime localDateTime14 = localDateTime11.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime15 = localDateTime11.toDateTime();
        java.lang.String str16 = dateTime15.toString();
        org.joda.time.DateTime dateTime17 = localDateTime6.toDateTime((org.joda.time.ReadableInstant) dateTime15);
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime25 = localDateTime21.toDateTime();
        java.lang.String str26 = dateTime25.toString();
        int int27 = dateTime15.compareTo((org.joda.time.ReadableInstant) dateTime25);
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Set<java.lang.String> strSet29 = locale28.getUnicodeLocaleAttributes();
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.util.Set<java.lang.String> strSet31 = locale30.getUnicodeLocaleAttributes();
        java.lang.Object[] objArray32 = strSet31.toArray();
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.util.Set<java.lang.String> strSet34 = locale33.getUnicodeLocaleAttributes();
        boolean boolean35 = strSet31.removeAll((java.util.Collection<java.lang.String>) strSet34);
        java.util.Locale locale36 = java.util.Locale.ROOT;
        java.util.Set<java.lang.String> strSet37 = locale36.getUnicodeLocaleAttributes();
        org.joda.time.DurationFieldType durationFieldType38 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.DurationFieldType durationFieldType39 = org.joda.time.DurationFieldType.hours();
        org.joda.time.DurationFieldType[] durationFieldTypeArray40 = new org.joda.time.DurationFieldType[] { durationFieldType38, durationFieldType39 };
        org.joda.time.DurationFieldType[] durationFieldTypeArray41 = strSet37.toArray(durationFieldTypeArray40);
        boolean boolean42 = strSet31.containsAll((java.util.Collection<java.lang.String>) strSet37);
        boolean boolean43 = strSet29.removeAll((java.util.Collection<java.lang.String>) strSet31);
        boolean boolean44 = dateTime25.equals((java.lang.Object) strSet29);
        org.joda.time.Instant instant45 = dateTime25.toInstant();
        org.joda.time.Chronology chronology46 = dateTime25.getChronology();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime15 and instant45", (dateTime15.compareTo(instant45) == 0) == dateTime15.equals(instant45));
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test016");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        org.joda.time.DateTimeField dateTimeField22 = chronology21.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField23 = dateTimeFieldType0.getField(chronology21);
        org.joda.time.DateTimeZone dateTimeZone24 = chronology21.getZone();
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str27 = dateTimeZone25.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now(dateTimeZone25);
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.LocalDateTime localDateTime31 = localDateTime28.withDurationAdded(readableDuration29, 86399999);
        org.joda.time.DateTimeZone dateTimeZone32 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str34 = dateTimeZone32.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime35 = org.joda.time.LocalDateTime.now(dateTimeZone32);
        org.joda.time.LocalDateTime.Property property36 = localDateTime35.millisOfDay();
        org.joda.time.LocalDateTime localDateTime38 = localDateTime35.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime39 = localDateTime35.toDateTime();
        java.lang.String str40 = dateTime39.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int42 = dateTime39.get(dateTimeFieldType41);
        org.joda.time.Chronology chronology43 = dateTime39.getChronology();
        org.joda.time.DateTimeField dateTimeField44 = chronology43.weekyearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now(dateTimeZone45);
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.millisOfDay();
        long long50 = property49.remainder();
        org.joda.time.LocalDateTime localDateTime51 = property49.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime52 = property49.roundFloorCopy();
        java.lang.String str53 = property49.getAsShortText();
        int int54 = property49.getMinimumValue();
        org.joda.time.LocalDateTime localDateTime56 = property49.addToCopy((long) 53623874);
        int[] intArray58 = chronology43.get((org.joda.time.ReadablePartial) localDateTime56, (long) 53630466);
        org.joda.time.DateTimeZone dateTimeZone60 = org.joda.time.DateTimeZone.forOffsetMillis((int) 'a');
        org.joda.time.LocalDateTime localDateTime61 = org.joda.time.LocalDateTime.now(dateTimeZone60);
        java.util.Date date62 = localDateTime61.toDate();
        int[] intArray64 = chronology43.get((org.joda.time.ReadablePartial) localDateTime61, (long) 99);
        chronology21.validate((org.joda.time.ReadablePartial) localDateTime31, intArray64);
        org.joda.time.Chronology chronology66 = chronology21.withUTC();
        org.joda.time.DateTimeField dateTimeField67 = chronology21.weekyearOfCentury();
        org.joda.time.DurationField durationField68 = chronology21.weekyears();
        org.joda.time.DateTimeField dateTimeField69 = chronology21.dayOfMonth();
        org.joda.time.DurationField durationField70 = chronology21.eras();
        org.joda.time.DateTimeField dateTimeField71 = chronology21.clockhourOfHalfday();
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField68 and durationField70", Math.signum(durationField68.compareTo(durationField70)) == -Math.signum(durationField70.compareTo(durationField68)));
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test017");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.Chronology chronology12 = chronology11.withUTC();
        org.joda.time.DateTimeField dateTimeField13 = chronology12.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField14 = chronology12.hourOfHalfday();
        org.joda.time.DurationField durationField15 = chronology12.minutes();
        org.joda.time.DurationField durationField16 = chronology12.weekyears();
        org.joda.time.DateTimeField dateTimeField17 = chronology12.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField18 = chronology12.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField19 = chronology12.dayOfWeek();
        org.joda.time.DurationField durationField20 = chronology12.eras();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField20, durationField15, and durationField16", !(durationField20.compareTo(durationField15) == 0) || (Math.signum(durationField20.compareTo(durationField16)) == Math.signum(durationField15.compareTo(durationField16))));
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test018");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DurationField durationField21 = chronology11.weekyears();
        org.joda.time.DateTimeField dateTimeField22 = chronology11.dayOfYear();
        org.joda.time.DurationField durationField23 = chronology11.weeks();
        org.joda.time.LocalDateTime localDateTime24 = org.joda.time.LocalDateTime.now(chronology11);
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str27 = dateTimeZone25.getShortName((long) (short) 10);
        long long29 = dateTimeZone25.convertUTCToLocal((long) ' ');
        java.lang.String str30 = dateTimeZone25.toString();
        boolean boolean32 = dateTimeZone25.equals((java.lang.Object) (short) 100);
        java.util.Locale locale34 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str35 = dateTimeZone25.getShortName((long) (-1), locale34);
        long long38 = dateTimeZone25.convertLocalToUTC((long) (short) 10, true);
        org.joda.time.Chronology chronology39 = chronology11.withZone(dateTimeZone25);
        org.joda.time.DateTimeField dateTimeField40 = chronology11.halfdayOfDay();
        org.joda.time.DurationField durationField41 = chronology11.eras();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField41, durationField21, and durationField23", !(durationField41.compareTo(durationField21) == 0) || (Math.signum(durationField41.compareTo(durationField23)) == Math.signum(durationField21.compareTo(durationField23))));
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test019");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.ReadableInstant readableInstant5 = null;
        long long6 = property4.getDifferenceAsLong(readableInstant5);
        org.joda.time.DurationField durationField7 = property4.getRangeDurationField();
        int int9 = durationField7.getValue(0L);
        int int12 = durationField7.getValue((long) (short) 1, (long) (short) 10);
        int int15 = durationField7.getDifference((long) 53630466, 0L);
        org.joda.time.DurationFieldType durationFieldType16 = durationField7.getType();
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime25 = localDateTime21.toDateTime();
        java.lang.String str26 = dateTime25.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType27 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int28 = dateTime25.get(dateTimeFieldType27);
        org.joda.time.Chronology chronology29 = dateTime25.getChronology();
        org.joda.time.DateTimeZone dateTimeZone30 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str32 = dateTimeZone30.getShortName((long) (short) 10);
        long long34 = dateTimeZone30.convertUTCToLocal((long) ' ');
        java.lang.String str35 = dateTimeZone30.toString();
        boolean boolean37 = dateTimeZone30.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology38 = chronology29.withZone(dateTimeZone30);
        org.joda.time.DateTimeField dateTimeField39 = chronology38.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField40 = dateTimeFieldType17.getField(chronology38);
        org.joda.time.DurationField durationField41 = chronology38.seconds();
        org.joda.time.DateTimeZone dateTimeZone43 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str45 = dateTimeZone43.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime46 = org.joda.time.LocalDateTime.now(dateTimeZone43);
        org.joda.time.LocalDateTime.Property property47 = localDateTime46.millisOfDay();
        org.joda.time.LocalDateTime localDateTime49 = localDateTime46.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime50 = localDateTime46.toDateTime();
        java.lang.String str51 = dateTime50.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType52 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int53 = dateTime50.get(dateTimeFieldType52);
        org.joda.time.Chronology chronology54 = dateTime50.getChronology();
        org.joda.time.DateTimeZone dateTimeZone55 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str57 = dateTimeZone55.getShortName((long) (short) 10);
        long long59 = dateTimeZone55.convertUTCToLocal((long) ' ');
        java.lang.String str60 = dateTimeZone55.toString();
        boolean boolean62 = dateTimeZone55.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology63 = chronology54.withZone(dateTimeZone55);
        org.joda.time.LocalDateTime localDateTime64 = new org.joda.time.LocalDateTime((long) (short) 100, chronology54);
        org.joda.time.LocalDateTime localDateTime66 = localDateTime64.plusYears(1);
        org.joda.time.LocalDateTime localDateTime68 = localDateTime64.withHourOfDay((int) (short) 0);
        org.joda.time.LocalDateTime localDateTime70 = localDateTime64.withYear(53630466);
        int[] intArray72 = chronology38.get((org.joda.time.ReadablePartial) localDateTime70, (long) 53636605);
        org.joda.time.DateTimeField dateTimeField73 = chronology38.yearOfCentury();
        org.joda.time.DurationField durationField74 = durationFieldType16.getField(chronology38);
        org.joda.time.DateTimeField dateTimeField75 = chronology38.weekyearOfCentury();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField7 and durationField74", (durationField7.compareTo(durationField74) == 0) == durationField7.equals(durationField74));
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test020");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime8 = localDateTime3.plusHours((int) ' ');
        org.joda.time.LocalDateTime.Property property9 = localDateTime8.millisOfSecond();
        java.lang.String str10 = property9.getAsText();
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = property9.getFieldType();
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.hours();
        org.joda.time.DateTimeFieldType dateTimeFieldType13 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone14 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str16 = dateTimeZone14.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime17 = org.joda.time.LocalDateTime.now(dateTimeZone14);
        org.joda.time.LocalDateTime.Property property18 = localDateTime17.millisOfDay();
        org.joda.time.LocalDateTime localDateTime20 = localDateTime17.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime21 = localDateTime17.toDateTime();
        java.lang.String str22 = dateTime21.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int24 = dateTime21.get(dateTimeFieldType23);
        org.joda.time.Chronology chronology25 = dateTime21.getChronology();
        org.joda.time.DateTimeZone dateTimeZone26 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str28 = dateTimeZone26.getShortName((long) (short) 10);
        long long30 = dateTimeZone26.convertUTCToLocal((long) ' ');
        java.lang.String str31 = dateTimeZone26.toString();
        boolean boolean33 = dateTimeZone26.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology34 = chronology25.withZone(dateTimeZone26);
        boolean boolean35 = dateTimeFieldType13.isSupported(chronology34);
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str38 = dateTimeZone36.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime39 = org.joda.time.LocalDateTime.now(dateTimeZone36);
        org.joda.time.LocalDateTime.Property property40 = localDateTime39.millisOfDay();
        org.joda.time.LocalDateTime localDateTime42 = localDateTime39.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime43 = localDateTime39.toDateTime();
        java.lang.String str44 = dateTime43.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int46 = dateTime43.get(dateTimeFieldType45);
        org.joda.time.Chronology chronology47 = dateTime43.getChronology();
        org.joda.time.DateTimeZone dateTimeZone48 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str50 = dateTimeZone48.getShortName((long) (short) 10);
        long long52 = dateTimeZone48.convertUTCToLocal((long) ' ');
        java.lang.String str53 = dateTimeZone48.toString();
        boolean boolean55 = dateTimeZone48.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology56 = chronology47.withZone(dateTimeZone48);
        org.joda.time.DurationField durationField57 = chronology47.weekyears();
        org.joda.time.DateTimeField dateTimeField58 = chronology47.dayOfYear();
        org.joda.time.DurationField durationField59 = chronology47.weeks();
        org.joda.time.DateTimeField dateTimeField60 = chronology47.yearOfEra();
        org.joda.time.DateTimeField dateTimeField61 = chronology47.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField62 = dateTimeFieldType13.getField(chronology47);
        org.joda.time.DateTimeField dateTimeField63 = chronology47.clockhourOfDay();
        org.joda.time.DurationField durationField64 = durationFieldType12.getField(chronology47);
        org.joda.time.DateTimeZone dateTimeZone65 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str67 = dateTimeZone65.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime68 = org.joda.time.LocalDateTime.now(dateTimeZone65);
        org.joda.time.LocalDateTime.Property property69 = localDateTime68.millisOfDay();
        org.joda.time.LocalDateTime localDateTime71 = localDateTime68.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime73 = localDateTime68.plusHours((int) ' ');
        org.joda.time.DateTimeFieldType dateTimeFieldType74 = org.joda.time.DateTimeFieldType.weekyearOfCentury();
        int int75 = localDateTime73.get(dateTimeFieldType74);
        org.joda.time.LocalDateTime localDateTime77 = localDateTime73.minusWeeks(4);
        org.joda.time.Chronology chronology78 = localDateTime77.getChronology();
        org.joda.time.DurationField durationField79 = durationFieldType12.getField(chronology78);
        org.joda.time.DateTimeField dateTimeField80 = dateTimeFieldType11.getField(chronology78);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField64 and durationField79", (durationField64.compareTo(durationField79) == 0) == durationField64.equals(durationField79));
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test021");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property7 = localDateTime6.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone8 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str10 = dateTimeZone8.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now(dateTimeZone8);
        org.joda.time.LocalDateTime.Property property12 = localDateTime11.millisOfDay();
        org.joda.time.LocalDateTime localDateTime14 = localDateTime11.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime15 = localDateTime11.toDateTime();
        java.lang.String str16 = dateTime15.toString();
        org.joda.time.DateTime dateTime17 = localDateTime6.toDateTime((org.joda.time.ReadableInstant) dateTime15);
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime25 = localDateTime21.toDateTime();
        java.lang.String str26 = dateTime25.toString();
        int int27 = dateTime15.compareTo((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.LocalDateTime localDateTime34 = localDateTime31.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property35 = localDateTime34.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str38 = dateTimeZone36.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime39 = org.joda.time.LocalDateTime.now(dateTimeZone36);
        org.joda.time.LocalDateTime.Property property40 = localDateTime39.millisOfDay();
        org.joda.time.LocalDateTime localDateTime42 = localDateTime39.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime43 = localDateTime39.toDateTime();
        java.lang.String str44 = dateTime43.toString();
        org.joda.time.DateTime dateTime45 = localDateTime34.toDateTime((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.DateTimeZone dateTimeZone46 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str48 = dateTimeZone46.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime49 = org.joda.time.LocalDateTime.now(dateTimeZone46);
        org.joda.time.LocalDateTime.Property property50 = localDateTime49.millisOfDay();
        org.joda.time.LocalDateTime localDateTime52 = localDateTime49.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime53 = localDateTime49.toDateTime();
        java.lang.String str54 = dateTime53.toString();
        int int55 = dateTime43.compareTo((org.joda.time.ReadableInstant) dateTime53);
        boolean boolean56 = dateTime25.isAfter((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.DateTimeFieldType dateTimeFieldType57 = org.joda.time.DateTimeFieldType.dayOfMonth();
        java.lang.String str58 = dateTimeFieldType57.getName();
        int int59 = dateTime25.get(dateTimeFieldType57);
        boolean boolean61 = dateTime25.equals((java.lang.Object) "2022-02-21T14:54:17.299Z");
        org.joda.time.DateTimeZone dateTimeZone62 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str64 = dateTimeZone62.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime65 = org.joda.time.LocalDateTime.now(dateTimeZone62);
        org.joda.time.LocalDateTime.Property property66 = localDateTime65.millisOfDay();
        org.joda.time.LocalDateTime localDateTime68 = localDateTime65.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime69 = localDateTime65.toDateTime();
        java.lang.String str70 = dateTime69.toString();
        long long71 = dateTime69.getMillis();
        org.joda.time.DateTimeFieldType dateTimeFieldType72 = org.joda.time.DateTimeFieldType.minuteOfDay();
        org.joda.time.DurationFieldType durationFieldType73 = dateTimeFieldType72.getRangeDurationType();
        int int74 = dateTime69.get(dateTimeFieldType72);
        int int75 = dateTime25.get(dateTimeFieldType72);
        org.joda.time.DateTimeZone dateTimeZone77 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str79 = dateTimeZone77.getShortName((long) (short) 10);
        long long81 = dateTimeZone77.convertUTCToLocal((long) ' ');
        java.lang.String str82 = dateTimeZone77.toString();
        long long85 = dateTimeZone77.adjustOffset((long) (short) 100, false);
        org.joda.time.LocalDateTime localDateTime86 = new org.joda.time.LocalDateTime((long) '4', dateTimeZone77);
        org.joda.time.DateTimeZone dateTimeZone87 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str89 = dateTimeZone87.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime90 = org.joda.time.LocalDateTime.now(dateTimeZone87);
        org.joda.time.LocalDateTime.Property property91 = localDateTime90.millisOfDay();
        org.joda.time.LocalDateTime localDateTime93 = localDateTime90.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime94 = localDateTime90.toDateTime();
        java.lang.String str95 = dateTime94.toString();
        int int96 = dateTimeZone77.getOffset((org.joda.time.ReadableInstant) dateTime94);
        org.joda.time.Chronology chronology97 = dateTime94.getChronology();
        org.joda.time.Instant instant98 = dateTime94.toInstant();
        boolean boolean99 = dateTime25.isAfter((org.joda.time.ReadableInstant) dateTime94);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime15 and instant98", (dateTime15.compareTo(instant98) == 0) == dateTime15.equals(instant98));
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test022");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        java.lang.Object obj12 = null;
        boolean boolean13 = dateTime7.equals(obj12);
        long long14 = dateTime7.getMillis();
        org.joda.time.Instant instant15 = dateTime7.toInstant();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now(dateTimeZone16);
        org.joda.time.LocalDateTime.Property property20 = localDateTime19.millisOfDay();
        org.joda.time.LocalDateTime localDateTime22 = localDateTime19.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime23 = localDateTime19.toDateTime();
        java.lang.String str24 = dateTime23.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType25 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int26 = dateTime23.get(dateTimeFieldType25);
        org.joda.time.Chronology chronology27 = dateTime23.getChronology();
        java.lang.Object obj28 = null;
        boolean boolean29 = dateTime23.equals(obj28);
        long long30 = dateTime23.getMillis();
        boolean boolean31 = dateTime7.isAfter((org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.DateTimeZone dateTimeZone32 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str34 = dateTimeZone32.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime35 = org.joda.time.LocalDateTime.now(dateTimeZone32);
        org.joda.time.LocalDateTime.Property property36 = localDateTime35.millisOfDay();
        org.joda.time.LocalDateTime localDateTime38 = localDateTime35.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime40 = localDateTime35.plusHours((int) ' ');
        org.joda.time.DateTimeZone dateTimeZone41 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str43 = dateTimeZone41.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime44 = org.joda.time.LocalDateTime.now(dateTimeZone41);
        org.joda.time.LocalDateTime.Property property45 = localDateTime44.millisOfDay();
        org.joda.time.LocalDateTime localDateTime47 = localDateTime44.withYear((int) (short) 100);
        boolean boolean48 = localDateTime35.isBefore((org.joda.time.ReadablePartial) localDateTime44);
        org.joda.time.LocalDateTime.Property property49 = localDateTime44.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone50 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str52 = dateTimeZone50.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime53 = org.joda.time.LocalDateTime.now(dateTimeZone50);
        org.joda.time.LocalDateTime.Property property54 = localDateTime53.millisOfDay();
        org.joda.time.LocalDateTime localDateTime56 = localDateTime53.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property57 = localDateTime56.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone58 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str60 = dateTimeZone58.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime61 = org.joda.time.LocalDateTime.now(dateTimeZone58);
        org.joda.time.LocalDateTime.Property property62 = localDateTime61.millisOfDay();
        org.joda.time.LocalDateTime localDateTime64 = localDateTime61.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime65 = localDateTime61.toDateTime();
        java.lang.String str66 = dateTime65.toString();
        org.joda.time.DateTime dateTime67 = localDateTime56.toDateTime((org.joda.time.ReadableInstant) dateTime65);
        org.joda.time.DateTimeZone dateTimeZone68 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str70 = dateTimeZone68.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime71 = org.joda.time.LocalDateTime.now(dateTimeZone68);
        org.joda.time.LocalDateTime.Property property72 = localDateTime71.millisOfDay();
        org.joda.time.LocalDateTime localDateTime74 = localDateTime71.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime75 = localDateTime71.toDateTime();
        java.lang.String str76 = dateTime75.toString();
        int int77 = dateTime65.compareTo((org.joda.time.ReadableInstant) dateTime75);
        int int78 = property49.getDifference((org.joda.time.ReadableInstant) dateTime75);
        boolean boolean79 = dateTime23.isBefore((org.joda.time.ReadableInstant) dateTime75);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant15", (dateTime7.compareTo(instant15) == 0) == dateTime7.equals(instant15));
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test023");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeField dateTimeField12 = chronology11.weekyearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime16 = org.joda.time.LocalDateTime.now(dateTimeZone13);
        org.joda.time.LocalDateTime.Property property17 = localDateTime16.millisOfDay();
        long long18 = property17.remainder();
        org.joda.time.LocalDateTime localDateTime19 = property17.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime20 = property17.roundFloorCopy();
        java.lang.String str21 = property17.getAsShortText();
        int int22 = property17.getMinimumValue();
        org.joda.time.LocalDateTime localDateTime24 = property17.addToCopy((long) 53623874);
        int[] intArray26 = chronology11.get((org.joda.time.ReadablePartial) localDateTime24, (long) 53630466);
        org.joda.time.DateTimeField dateTimeField27 = chronology11.era();
        org.joda.time.DateTimeField dateTimeField28 = chronology11.dayOfMonth();
        org.joda.time.DateTimeZone dateTimeZone29 = chronology11.getZone();
        java.lang.String str31 = dateTimeZone29.getNameKey(53639903L);
        org.joda.time.LocalDateTime localDateTime33 = new org.joda.time.LocalDateTime(1645455282133L);
        org.joda.time.DateTimeZone dateTimeZone34 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str36 = dateTimeZone34.getShortName((long) (short) 10);
        long long38 = dateTimeZone34.convertUTCToLocal((long) ' ');
        java.lang.String str39 = dateTimeZone34.toString();
        boolean boolean41 = dateTimeZone34.equals((java.lang.Object) (short) 100);
        java.util.Locale locale43 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str44 = dateTimeZone34.getShortName((long) (-1), locale43);
        org.joda.time.LocalDateTime localDateTime45 = new org.joda.time.LocalDateTime(dateTimeZone34);
        long long47 = dateTimeZone34.nextTransition((long) 8);
        java.lang.String str49 = dateTimeZone34.getNameKey((long) 53630466);
        java.util.TimeZone timeZone50 = dateTimeZone34.toTimeZone();
        org.joda.time.DateTime dateTime51 = localDateTime33.toDateTime(dateTimeZone34);
        int int52 = dateTimeZone29.getOffset((org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.DateTimeZone dateTimeZone53 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str55 = dateTimeZone53.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime56 = org.joda.time.LocalDateTime.now(dateTimeZone53);
        org.joda.time.LocalDateTime.Property property57 = localDateTime56.millisOfDay();
        org.joda.time.LocalDateTime localDateTime59 = localDateTime56.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime60 = localDateTime56.toDateTime();
        java.lang.String str61 = dateTime60.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType62 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int63 = dateTime60.get(dateTimeFieldType62);
        org.joda.time.Chronology chronology64 = dateTime60.getChronology();
        java.lang.Object obj65 = null;
        boolean boolean66 = dateTime60.equals(obj65);
        long long67 = dateTime60.getMillis();
        org.joda.time.Instant instant68 = dateTime60.toInstant();
        org.joda.time.DateTimeZone dateTimeZone69 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str71 = dateTimeZone69.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime72 = org.joda.time.LocalDateTime.now(dateTimeZone69);
        org.joda.time.LocalDateTime.Property property73 = localDateTime72.millisOfDay();
        java.lang.String str74 = property73.getName();
        int int75 = property73.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType76 = property73.getFieldType();
        org.joda.time.LocalDateTime localDateTime77 = property73.withMinimumValue();
        org.joda.time.LocalDateTime.Property property78 = localDateTime77.weekOfWeekyear();
        boolean boolean79 = dateTime60.equals((java.lang.Object) property78);
        org.joda.time.DateTimeZone dateTimeZone80 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str82 = dateTimeZone80.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime83 = org.joda.time.LocalDateTime.now(dateTimeZone80);
        org.joda.time.LocalDateTime.Property property84 = localDateTime83.millisOfDay();
        org.joda.time.LocalDateTime localDateTime86 = localDateTime83.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime87 = localDateTime83.toDateTime();
        java.lang.String str88 = dateTime87.toString();
        org.joda.time.DateTimeZone dateTimeZone89 = dateTime87.getZone();
        long long90 = dateTime87.getMillis();
        int int91 = dateTime60.compareTo((org.joda.time.ReadableInstant) dateTime87);
        int int92 = dateTime51.compareTo((org.joda.time.ReadableInstant) dateTime60);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant68", (dateTime7.compareTo(instant68) == 0) == dateTime7.equals(instant68));
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test024");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        java.lang.Object obj12 = null;
        boolean boolean13 = dateTime7.equals(obj12);
        long long14 = dateTime7.getMillis();
        org.joda.time.Instant instant15 = dateTime7.toInstant();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now(dateTimeZone16);
        org.joda.time.LocalDateTime.Property property20 = localDateTime19.millisOfDay();
        java.lang.String str21 = property20.getName();
        int int22 = property20.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = property20.getFieldType();
        org.joda.time.LocalDateTime localDateTime24 = property20.withMinimumValue();
        org.joda.time.LocalDateTime.Property property25 = localDateTime24.weekOfWeekyear();
        boolean boolean26 = dateTime7.equals((java.lang.Object) property25);
        java.lang.String str27 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.LocalDateTime localDateTime34 = localDateTime31.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property35 = localDateTime34.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str38 = dateTimeZone36.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime39 = org.joda.time.LocalDateTime.now(dateTimeZone36);
        org.joda.time.LocalDateTime.Property property40 = localDateTime39.millisOfDay();
        org.joda.time.LocalDateTime localDateTime42 = localDateTime39.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime43 = localDateTime39.toDateTime();
        java.lang.String str44 = dateTime43.toString();
        org.joda.time.DateTime dateTime45 = localDateTime34.toDateTime((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.DateTimeZone dateTimeZone46 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str48 = dateTimeZone46.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime49 = org.joda.time.LocalDateTime.now(dateTimeZone46);
        org.joda.time.LocalDateTime.Property property50 = localDateTime49.millisOfDay();
        org.joda.time.LocalDateTime localDateTime52 = localDateTime49.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime53 = localDateTime49.toDateTime();
        java.lang.String str54 = dateTime53.toString();
        int int55 = dateTime43.compareTo((org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.DateTimeZone dateTimeZone56 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str58 = dateTimeZone56.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime59 = org.joda.time.LocalDateTime.now(dateTimeZone56);
        org.joda.time.LocalDateTime.Property property60 = localDateTime59.millisOfDay();
        org.joda.time.LocalDateTime localDateTime62 = localDateTime59.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property63 = localDateTime62.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone64 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str66 = dateTimeZone64.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime67 = org.joda.time.LocalDateTime.now(dateTimeZone64);
        org.joda.time.LocalDateTime.Property property68 = localDateTime67.millisOfDay();
        org.joda.time.LocalDateTime localDateTime70 = localDateTime67.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime71 = localDateTime67.toDateTime();
        java.lang.String str72 = dateTime71.toString();
        org.joda.time.DateTime dateTime73 = localDateTime62.toDateTime((org.joda.time.ReadableInstant) dateTime71);
        org.joda.time.DateTimeZone dateTimeZone74 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str76 = dateTimeZone74.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime77 = org.joda.time.LocalDateTime.now(dateTimeZone74);
        org.joda.time.LocalDateTime.Property property78 = localDateTime77.millisOfDay();
        org.joda.time.LocalDateTime localDateTime80 = localDateTime77.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime81 = localDateTime77.toDateTime();
        java.lang.String str82 = dateTime81.toString();
        int int83 = dateTime71.compareTo((org.joda.time.ReadableInstant) dateTime81);
        boolean boolean84 = dateTime53.isAfter((org.joda.time.ReadableInstant) dateTime71);
        org.joda.time.DateTimeFieldType dateTimeFieldType85 = org.joda.time.DateTimeFieldType.dayOfMonth();
        java.lang.String str86 = dateTimeFieldType85.getName();
        int int87 = dateTime53.get(dateTimeFieldType85);
        boolean boolean88 = dateTime7.isSupported(dateTimeFieldType85);
        long long89 = dateTime7.getMillis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant15 and dateTime43", (instant15.compareTo(dateTime43) == 0) == instant15.equals(dateTime43));
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test025");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime8 = localDateTime3.plusHours((int) ' ');
        org.joda.time.ReadablePeriod readablePeriod9 = null;
        org.joda.time.LocalDateTime localDateTime10 = localDateTime3.plus(readablePeriod9);
        org.joda.time.LocalDateTime localDateTime12 = localDateTime3.minusSeconds((int) (byte) 1);
        org.joda.time.DateTimeFieldType dateTimeFieldType13 = org.joda.time.DateTimeFieldType.weekyearOfCentury();
        org.joda.time.DurationFieldType durationFieldType14 = dateTimeFieldType13.getDurationType();
        org.joda.time.DateTimeZone dateTimeZone15 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str17 = dateTimeZone15.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now(dateTimeZone15);
        org.joda.time.LocalDateTime.Property property19 = localDateTime18.millisOfDay();
        org.joda.time.LocalDateTime localDateTime21 = localDateTime18.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime22 = localDateTime18.toDateTime();
        java.lang.String str23 = dateTime22.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType24 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int25 = dateTime22.get(dateTimeFieldType24);
        org.joda.time.Chronology chronology26 = dateTime22.getChronology();
        org.joda.time.DateTimeField dateTimeField27 = chronology26.weekyearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        long long33 = property32.remainder();
        org.joda.time.LocalDateTime localDateTime34 = property32.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime35 = property32.roundFloorCopy();
        java.lang.String str36 = property32.getAsShortText();
        int int37 = property32.getMinimumValue();
        org.joda.time.LocalDateTime localDateTime39 = property32.addToCopy((long) 53623874);
        int[] intArray41 = chronology26.get((org.joda.time.ReadablePartial) localDateTime39, (long) 53630466);
        org.joda.time.DateTimeZone dateTimeZone43 = org.joda.time.DateTimeZone.forOffsetMillis((int) 'a');
        org.joda.time.LocalDateTime localDateTime44 = org.joda.time.LocalDateTime.now(dateTimeZone43);
        java.util.Date date45 = localDateTime44.toDate();
        int[] intArray47 = chronology26.get((org.joda.time.ReadablePartial) localDateTime44, (long) 99);
        org.joda.time.DurationField durationField48 = durationFieldType14.getField(chronology26);
        org.joda.time.LocalDateTime localDateTime50 = localDateTime12.withFieldAdded(durationFieldType14, 22);
        org.joda.time.DateTimeZone dateTimeZone51 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str53 = dateTimeZone51.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime54 = org.joda.time.LocalDateTime.now(dateTimeZone51);
        org.joda.time.LocalDateTime.Property property55 = localDateTime54.millisOfDay();
        org.joda.time.LocalDateTime localDateTime57 = localDateTime54.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime58 = localDateTime54.toDateTime();
        java.lang.String str59 = dateTime58.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType60 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int61 = dateTime58.get(dateTimeFieldType60);
        org.joda.time.Chronology chronology62 = dateTime58.getChronology();
        org.joda.time.Chronology chronology63 = chronology62.withUTC();
        org.joda.time.DateTimeField dateTimeField64 = chronology63.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField65 = chronology63.hourOfHalfday();
        org.joda.time.DurationField durationField66 = chronology63.minutes();
        org.joda.time.DurationField durationField67 = chronology63.weekyears();
        org.joda.time.DateTimeField dateTimeField68 = chronology63.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField69 = chronology63.weekOfWeekyear();
        org.joda.time.DurationField durationField70 = chronology63.days();
        boolean boolean71 = durationFieldType14.isSupported(chronology63);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField48 and durationField67", (durationField48.compareTo(durationField67) == 0) == durationField48.equals(durationField67));
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test026");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        java.lang.Object obj12 = null;
        boolean boolean13 = dateTime7.equals(obj12);
        long long14 = dateTime7.getMillis();
        org.joda.time.Instant instant15 = dateTime7.toInstant();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now(dateTimeZone16);
        org.joda.time.LocalDateTime.Property property20 = localDateTime19.millisOfDay();
        java.lang.String str21 = property20.getName();
        int int22 = property20.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = property20.getFieldType();
        org.joda.time.LocalDateTime localDateTime24 = property20.withMinimumValue();
        org.joda.time.LocalDateTime.Property property25 = localDateTime24.weekOfWeekyear();
        boolean boolean26 = dateTime7.equals((java.lang.Object) property25);
        org.joda.time.DateTimeZone dateTimeZone27 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str29 = dateTimeZone27.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime30 = org.joda.time.LocalDateTime.now(dateTimeZone27);
        org.joda.time.LocalDateTime.Property property31 = localDateTime30.millisOfDay();
        org.joda.time.LocalDateTime localDateTime33 = localDateTime30.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime34 = localDateTime30.toDateTime();
        java.lang.String str35 = dateTime34.toString();
        org.joda.time.DateTimeZone dateTimeZone36 = dateTime34.getZone();
        long long37 = dateTime34.getMillis();
        int int38 = dateTime7.compareTo((org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.DateTimeZone dateTimeZone39 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str41 = dateTimeZone39.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime42 = org.joda.time.LocalDateTime.now(dateTimeZone39);
        org.joda.time.LocalDateTime.Property property43 = localDateTime42.dayOfWeek();
        int int44 = localDateTime42.getMillisOfDay();
        int int45 = localDateTime42.getMillisOfSecond();
        org.joda.time.LocalDateTime localDateTime47 = localDateTime42.withWeekyear(99);
        org.joda.time.LocalDateTime.Property property48 = localDateTime47.monthOfYear();
        int int49 = property48.getMaximumValueOverall();
        org.joda.time.DateTimeZone dateTimeZone50 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str52 = dateTimeZone50.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime53 = org.joda.time.LocalDateTime.now(dateTimeZone50);
        org.joda.time.LocalDateTime.Property property54 = localDateTime53.millisOfDay();
        org.joda.time.LocalDateTime localDateTime56 = localDateTime53.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime57 = localDateTime53.toDateTime();
        java.lang.String str58 = dateTime57.toString();
        long long59 = property48.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime57);
        boolean boolean60 = dateTime7.isAfter((org.joda.time.ReadableInstant) dateTime57);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant15 and dateTime34", (instant15.compareTo(dateTime34) == 0) == instant15.equals(dateTime34));
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test027");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.ReadableInstant readableInstant5 = null;
        long long6 = property4.getDifferenceAsLong(readableInstant5);
        int int7 = property4.getMaximumValue();
        org.joda.time.LocalDateTime localDateTime8 = property4.roundHalfEvenCopy();
        int int9 = localDateTime8.size();
        org.joda.time.DateTimeZone dateTimeZone10 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str12 = dateTimeZone10.getShortName((long) (short) 10);
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        java.lang.Object obj19 = null;
        boolean boolean20 = dateTimeZone13.equals(obj19);
        long long22 = dateTimeZone10.getMillisKeepLocal(dateTimeZone13, (long) 53);
        org.joda.time.DateTime dateTime23 = localDateTime8.toDateTime(dateTimeZone13);
        org.joda.time.DateTimeZone dateTimeZone24 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str26 = dateTimeZone24.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime27 = org.joda.time.LocalDateTime.now(dateTimeZone24);
        org.joda.time.LocalDateTime.Property property28 = localDateTime27.millisOfDay();
        org.joda.time.LocalDateTime localDateTime30 = localDateTime27.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime31 = localDateTime27.toDateTime();
        java.lang.String str32 = dateTime31.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType33 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int34 = dateTime31.get(dateTimeFieldType33);
        org.joda.time.Chronology chronology35 = dateTime31.getChronology();
        java.lang.Object obj36 = null;
        boolean boolean37 = dateTime31.equals(obj36);
        long long38 = dateTime31.getMillis();
        org.joda.time.Instant instant39 = dateTime31.toInstant();
        org.joda.time.DateTimeZone dateTimeZone40 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str42 = dateTimeZone40.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime43 = org.joda.time.LocalDateTime.now(dateTimeZone40);
        org.joda.time.LocalDateTime.Property property44 = localDateTime43.millisOfDay();
        java.lang.String str45 = property44.getName();
        int int46 = property44.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType47 = property44.getFieldType();
        org.joda.time.LocalDateTime localDateTime48 = property44.withMinimumValue();
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.weekOfWeekyear();
        boolean boolean50 = dateTime31.equals((java.lang.Object) property49);
        org.joda.time.DateTimeZone dateTimeZone51 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str53 = dateTimeZone51.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime54 = org.joda.time.LocalDateTime.now(dateTimeZone51);
        org.joda.time.LocalDateTime.Property property55 = localDateTime54.millisOfDay();
        org.joda.time.LocalDateTime localDateTime57 = localDateTime54.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime58 = localDateTime54.toDateTime();
        java.lang.String str59 = dateTime58.toString();
        org.joda.time.DateTimeZone dateTimeZone60 = dateTime58.getZone();
        long long61 = dateTime58.getMillis();
        int int62 = dateTime31.compareTo((org.joda.time.ReadableInstant) dateTime58);
        int int63 = dateTime23.compareTo((org.joda.time.ReadableInstant) dateTime31);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant39 and dateTime58", (instant39.compareTo(dateTime58) == 0) == instant39.equals(dateTime58));
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test028");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.ReadableInstant readableInstant5 = null;
        long long6 = property4.getDifferenceAsLong(readableInstant5);
        org.joda.time.DurationField durationField7 = property4.getRangeDurationField();
        int int9 = durationField7.getValue(0L);
        int int12 = durationField7.getValue((long) (short) 1, (long) (short) 10);
        int int15 = durationField7.getDifference((long) 53630466, 0L);
        org.joda.time.DurationFieldType durationFieldType16 = durationField7.getType();
        org.joda.time.DurationFieldType durationFieldType17 = durationField7.getType();
        org.joda.time.DateTimeFieldType dateTimeFieldType18 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone19 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str21 = dateTimeZone19.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now(dateTimeZone19);
        org.joda.time.LocalDateTime.Property property23 = localDateTime22.millisOfDay();
        org.joda.time.LocalDateTime localDateTime25 = localDateTime22.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime26 = localDateTime22.toDateTime();
        java.lang.String str27 = dateTime26.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int29 = dateTime26.get(dateTimeFieldType28);
        org.joda.time.Chronology chronology30 = dateTime26.getChronology();
        org.joda.time.DateTimeZone dateTimeZone31 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str33 = dateTimeZone31.getShortName((long) (short) 10);
        long long35 = dateTimeZone31.convertUTCToLocal((long) ' ');
        java.lang.String str36 = dateTimeZone31.toString();
        boolean boolean38 = dateTimeZone31.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology39 = chronology30.withZone(dateTimeZone31);
        org.joda.time.DateTimeField dateTimeField40 = chronology39.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField41 = dateTimeFieldType18.getField(chronology39);
        org.joda.time.DateTimeZone dateTimeZone42 = chronology39.getZone();
        org.joda.time.DateTimeZone dateTimeZone43 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str45 = dateTimeZone43.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime46 = org.joda.time.LocalDateTime.now(dateTimeZone43);
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.LocalDateTime localDateTime49 = localDateTime46.withDurationAdded(readableDuration47, 86399999);
        org.joda.time.DateTimeZone dateTimeZone50 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str52 = dateTimeZone50.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime53 = org.joda.time.LocalDateTime.now(dateTimeZone50);
        org.joda.time.LocalDateTime.Property property54 = localDateTime53.millisOfDay();
        org.joda.time.LocalDateTime localDateTime56 = localDateTime53.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime57 = localDateTime53.toDateTime();
        java.lang.String str58 = dateTime57.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType59 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int60 = dateTime57.get(dateTimeFieldType59);
        org.joda.time.Chronology chronology61 = dateTime57.getChronology();
        org.joda.time.DateTimeField dateTimeField62 = chronology61.weekyearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone63 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str65 = dateTimeZone63.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime66 = org.joda.time.LocalDateTime.now(dateTimeZone63);
        org.joda.time.LocalDateTime.Property property67 = localDateTime66.millisOfDay();
        long long68 = property67.remainder();
        org.joda.time.LocalDateTime localDateTime69 = property67.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime70 = property67.roundFloorCopy();
        java.lang.String str71 = property67.getAsShortText();
        int int72 = property67.getMinimumValue();
        org.joda.time.LocalDateTime localDateTime74 = property67.addToCopy((long) 53623874);
        int[] intArray76 = chronology61.get((org.joda.time.ReadablePartial) localDateTime74, (long) 53630466);
        org.joda.time.DateTimeZone dateTimeZone78 = org.joda.time.DateTimeZone.forOffsetMillis((int) 'a');
        org.joda.time.LocalDateTime localDateTime79 = org.joda.time.LocalDateTime.now(dateTimeZone78);
        java.util.Date date80 = localDateTime79.toDate();
        int[] intArray82 = chronology61.get((org.joda.time.ReadablePartial) localDateTime79, (long) 99);
        chronology39.validate((org.joda.time.ReadablePartial) localDateTime49, intArray82);
        org.joda.time.Chronology chronology84 = chronology39.withUTC();
        org.joda.time.DateTimeField dateTimeField85 = chronology39.weekyearOfCentury();
        org.joda.time.DurationField durationField86 = chronology39.weekyears();
        org.joda.time.DateTimeField dateTimeField87 = chronology39.dayOfMonth();
        org.joda.time.DurationField durationField88 = durationFieldType17.getField(chronology39);
        java.lang.String str89 = durationFieldType17.getName();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField7 and durationField88", (durationField7.compareTo(durationField88) == 0) == durationField7.equals(durationField88));
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test029");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DateTimeField dateTimeField21 = chronology11.yearOfCentury();
        org.joda.time.DurationField durationField22 = chronology11.eras();
        org.joda.time.DurationField durationField23 = chronology11.eras();
        org.joda.time.DurationField durationField24 = chronology11.months();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField22, durationField24, and durationField22", !(durationField22.compareTo(durationField24) == 0) || (Math.signum(durationField22.compareTo(durationField22)) == Math.signum(durationField24.compareTo(durationField22))));
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test030");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        java.lang.Object obj12 = null;
        boolean boolean13 = dateTime7.equals(obj12);
        long long14 = dateTime7.getMillis();
        org.joda.time.Instant instant15 = dateTime7.toInstant();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now(dateTimeZone16);
        org.joda.time.LocalDateTime.Property property20 = localDateTime19.millisOfDay();
        java.lang.String str21 = property20.getName();
        int int22 = property20.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = property20.getFieldType();
        org.joda.time.LocalDateTime localDateTime24 = property20.withMinimumValue();
        org.joda.time.LocalDateTime.Property property25 = localDateTime24.weekOfWeekyear();
        boolean boolean26 = dateTime7.equals((java.lang.Object) property25);
        org.joda.time.DateTimeZone dateTimeZone27 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str29 = dateTimeZone27.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime30 = org.joda.time.LocalDateTime.now(dateTimeZone27);
        org.joda.time.LocalDateTime.Property property31 = localDateTime30.millisOfDay();
        org.joda.time.LocalDateTime localDateTime33 = localDateTime30.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime34 = localDateTime30.toDateTime();
        java.lang.String str35 = dateTime34.toString();
        org.joda.time.DateTimeZone dateTimeZone36 = dateTime34.getZone();
        long long37 = dateTime34.getMillis();
        int int38 = dateTime7.compareTo((org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.DateTimeZone dateTimeZone39 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str41 = dateTimeZone39.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime42 = org.joda.time.LocalDateTime.now(dateTimeZone39);
        org.joda.time.LocalDateTime.Property property43 = localDateTime42.millisOfDay();
        org.joda.time.LocalDateTime localDateTime45 = localDateTime42.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime46 = localDateTime42.toDateTime();
        java.lang.String str47 = dateTime46.toString();
        org.joda.time.DateTimeZone dateTimeZone48 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str50 = dateTimeZone48.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime51 = org.joda.time.LocalDateTime.now(dateTimeZone48);
        org.joda.time.LocalDateTime.Property property52 = localDateTime51.millisOfDay();
        org.joda.time.LocalDateTime localDateTime54 = localDateTime51.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property55 = localDateTime54.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone56 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str58 = dateTimeZone56.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime59 = org.joda.time.LocalDateTime.now(dateTimeZone56);
        org.joda.time.LocalDateTime.Property property60 = localDateTime59.millisOfDay();
        org.joda.time.LocalDateTime localDateTime62 = localDateTime59.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime63 = localDateTime59.toDateTime();
        java.lang.String str64 = dateTime63.toString();
        org.joda.time.DateTime dateTime65 = localDateTime54.toDateTime((org.joda.time.ReadableInstant) dateTime63);
        boolean boolean66 = dateTime46.isBefore((org.joda.time.ReadableInstant) dateTime63);
        org.joda.time.DateTimeZone dateTimeZone67 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str69 = dateTimeZone67.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime70 = org.joda.time.LocalDateTime.now(dateTimeZone67);
        org.joda.time.LocalDateTime.Property property71 = localDateTime70.millisOfDay();
        org.joda.time.LocalDateTime localDateTime73 = localDateTime70.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime74 = localDateTime70.toDateTime();
        java.lang.String str75 = dateTime74.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType76 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int77 = dateTime74.get(dateTimeFieldType76);
        int int78 = dateTime63.compareTo((org.joda.time.ReadableInstant) dateTime74);
        boolean boolean79 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime74);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant15 and dateTime34", (instant15.compareTo(dateTime34) == 0) == instant15.equals(dateTime34));
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test031");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        java.lang.Object obj12 = null;
        boolean boolean13 = dateTime7.equals(obj12);
        long long14 = dateTime7.getMillis();
        org.joda.time.Instant instant15 = dateTime7.toInstant();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now(dateTimeZone16);
        org.joda.time.LocalDateTime.Property property20 = localDateTime19.millisOfDay();
        org.joda.time.LocalDateTime localDateTime22 = localDateTime19.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime23 = localDateTime19.toDateTime();
        java.lang.String str24 = dateTime23.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType25 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int26 = dateTime23.get(dateTimeFieldType25);
        org.joda.time.Chronology chronology27 = dateTime23.getChronology();
        java.lang.Object obj28 = null;
        boolean boolean29 = dateTime23.equals(obj28);
        long long30 = dateTime23.getMillis();
        boolean boolean31 = dateTime7.isAfter((org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Instant instant32 = dateTime23.toInstant();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant15", (dateTime7.compareTo(instant15) == 0) == dateTime7.equals(instant15));
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test032");
        org.joda.time.LocalDateTime localDateTime0 = new org.joda.time.LocalDateTime();
        java.lang.String str1 = localDateTime0.toString();
        org.joda.time.LocalDateTime localDateTime3 = localDateTime0.minusMillis(4);
        org.joda.time.LocalDateTime localDateTime5 = localDateTime3.withMinuteOfHour((int) (byte) 10);
        org.joda.time.DateTimeZone dateTimeZone6 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str8 = dateTimeZone6.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime9 = org.joda.time.LocalDateTime.now(dateTimeZone6);
        org.joda.time.LocalDateTime localDateTime11 = localDateTime9.minusMillis((int) (byte) 0);
        int int12 = localDateTime9.getHourOfDay();
        boolean boolean13 = localDateTime5.isAfter((org.joda.time.ReadablePartial) localDateTime9);
        int int14 = localDateTime9.getYearOfEra();
        org.joda.time.DateTimeZone dateTimeZone15 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str17 = dateTimeZone15.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now(dateTimeZone15);
        org.joda.time.LocalDateTime.Property property19 = localDateTime18.millisOfDay();
        org.joda.time.LocalDateTime localDateTime21 = localDateTime18.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime23 = localDateTime18.plusHours((int) ' ');
        int int24 = localDateTime18.getDayOfMonth();
        org.joda.time.LocalDateTime localDateTime26 = localDateTime18.minusMillis(0);
        org.joda.time.LocalDateTime localDateTime28 = localDateTime26.minusSeconds(42931600);
        boolean boolean29 = localDateTime9.isBefore((org.joda.time.ReadablePartial) localDateTime28);
        org.joda.time.DateTimeZone dateTimeZone30 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str32 = dateTimeZone30.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime33 = org.joda.time.LocalDateTime.now(dateTimeZone30);
        org.joda.time.LocalDateTime.Property property34 = localDateTime33.millisOfDay();
        org.joda.time.LocalDateTime localDateTime36 = localDateTime33.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime37 = localDateTime33.toDateTime();
        java.lang.String str38 = dateTime37.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType39 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int40 = dateTime37.get(dateTimeFieldType39);
        org.joda.time.Chronology chronology41 = dateTime37.getChronology();
        java.lang.Object obj42 = null;
        boolean boolean43 = dateTime37.equals(obj42);
        long long44 = dateTime37.getMillis();
        org.joda.time.Instant instant45 = dateTime37.toInstant();
        org.joda.time.DateTimeZone dateTimeZone46 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str48 = dateTimeZone46.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime49 = org.joda.time.LocalDateTime.now(dateTimeZone46);
        org.joda.time.LocalDateTime.Property property50 = localDateTime49.millisOfDay();
        java.lang.String str51 = property50.getName();
        int int52 = property50.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = property50.getFieldType();
        org.joda.time.LocalDateTime localDateTime54 = property50.withMinimumValue();
        org.joda.time.LocalDateTime.Property property55 = localDateTime54.weekOfWeekyear();
        boolean boolean56 = dateTime37.equals((java.lang.Object) property55);
        org.joda.time.DateTimeZone dateTimeZone57 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str59 = dateTimeZone57.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime60 = org.joda.time.LocalDateTime.now(dateTimeZone57);
        org.joda.time.LocalDateTime.Property property61 = localDateTime60.millisOfDay();
        org.joda.time.LocalDateTime localDateTime63 = localDateTime60.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime64 = localDateTime60.toDateTime();
        java.lang.String str65 = dateTime64.toString();
        org.joda.time.DateTimeZone dateTimeZone66 = dateTime64.getZone();
        long long67 = dateTime64.getMillis();
        int int68 = dateTime37.compareTo((org.joda.time.ReadableInstant) dateTime64);
        org.joda.time.DateTime dateTime69 = localDateTime28.toDateTime((org.joda.time.ReadableInstant) dateTime37);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant45 and dateTime64", (instant45.compareTo(dateTime64) == 0) == instant45.equals(dateTime64));
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test033");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime8 = localDateTime3.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime10 = localDateTime8.minusHours((int) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = localDateTime10.withEra((int) (byte) 0);
        org.joda.time.LocalDateTime localDateTime14 = localDateTime12.withDayOfWeek(4);
        org.joda.time.LocalDateTime.Property property15 = localDateTime14.weekOfWeekyear();
        org.joda.time.DurationField durationField16 = property15.getDurationField();
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime25 = localDateTime21.toDateTime();
        java.lang.String str26 = dateTime25.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType27 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int28 = dateTime25.get(dateTimeFieldType27);
        org.joda.time.Chronology chronology29 = dateTime25.getChronology();
        org.joda.time.DateTimeZone dateTimeZone30 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str32 = dateTimeZone30.getShortName((long) (short) 10);
        long long34 = dateTimeZone30.convertUTCToLocal((long) ' ');
        java.lang.String str35 = dateTimeZone30.toString();
        boolean boolean37 = dateTimeZone30.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology38 = chronology29.withZone(dateTimeZone30);
        boolean boolean39 = dateTimeFieldType17.isSupported(chronology38);
        org.joda.time.DateTimeZone dateTimeZone40 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str42 = dateTimeZone40.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime43 = org.joda.time.LocalDateTime.now(dateTimeZone40);
        org.joda.time.LocalDateTime.Property property44 = localDateTime43.millisOfDay();
        org.joda.time.LocalDateTime localDateTime46 = localDateTime43.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime47 = localDateTime43.toDateTime();
        java.lang.String str48 = dateTime47.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType49 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int50 = dateTime47.get(dateTimeFieldType49);
        org.joda.time.Chronology chronology51 = dateTime47.getChronology();
        org.joda.time.DateTimeZone dateTimeZone52 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str54 = dateTimeZone52.getShortName((long) (short) 10);
        long long56 = dateTimeZone52.convertUTCToLocal((long) ' ');
        java.lang.String str57 = dateTimeZone52.toString();
        boolean boolean59 = dateTimeZone52.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology60 = chronology51.withZone(dateTimeZone52);
        org.joda.time.DurationField durationField61 = chronology51.weekyears();
        org.joda.time.DateTimeField dateTimeField62 = chronology51.dayOfYear();
        org.joda.time.DurationField durationField63 = chronology51.weeks();
        org.joda.time.DateTimeField dateTimeField64 = chronology51.yearOfEra();
        org.joda.time.DateTimeField dateTimeField65 = chronology51.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField66 = dateTimeFieldType17.getField(chronology51);
        java.util.Locale locale68 = java.util.Locale.CANADA_FRENCH;
        java.util.Locale locale69 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str70 = locale68.getDisplayCountry(locale69);
        java.util.Locale.Category category71 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale72 = java.util.Locale.FRENCH;
        java.util.Locale.setDefault(category71, locale72);
        java.util.Locale locale74 = java.util.Locale.CANADA_FRENCH;
        java.util.Locale locale75 = locale74.stripExtensions();
        java.lang.String str76 = locale74.getVariant();
        java.util.Locale.setDefault(category71, locale74);
        java.lang.String str78 = locale68.getDisplayScript(locale74);
        java.lang.String str79 = dateTimeField66.getAsText((int) (byte) 10, locale68);
        int int80 = property15.getMaximumShortTextLength(locale68);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField16 and durationField63", (durationField16.compareTo(durationField63) == 0) == durationField16.equals(durationField63));
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test034");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime8 = localDateTime3.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime10 = localDateTime8.withMillisOfDay(53620101);
        org.joda.time.LocalDateTime.Property property11 = localDateTime8.secondOfMinute();
        org.joda.time.LocalDateTime localDateTime12 = property11.roundCeilingCopy();
        int int13 = property11.get();
        org.joda.time.DateTimeZone dateTimeZone14 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str16 = dateTimeZone14.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime17 = org.joda.time.LocalDateTime.now(dateTimeZone14);
        org.joda.time.LocalDateTime.Property property18 = localDateTime17.millisOfDay();
        org.joda.time.LocalDateTime localDateTime20 = localDateTime17.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime21 = localDateTime17.toDateTime();
        java.lang.String str22 = dateTime21.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int24 = dateTime21.get(dateTimeFieldType23);
        org.joda.time.Chronology chronology25 = dateTime21.getChronology();
        java.lang.Object obj26 = null;
        boolean boolean27 = dateTime21.equals(obj26);
        long long28 = dateTime21.getMillis();
        org.joda.time.Instant instant29 = dateTime21.toInstant();
        int int30 = property11.compareTo((org.joda.time.ReadableInstant) instant29);
        org.joda.time.DateTimeZone dateTimeZone31 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str33 = dateTimeZone31.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime34 = org.joda.time.LocalDateTime.now(dateTimeZone31);
        org.joda.time.LocalDateTime.Property property35 = localDateTime34.millisOfDay();
        org.joda.time.LocalDateTime localDateTime37 = localDateTime34.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime39 = localDateTime34.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime41 = localDateTime39.withMillisOfDay(53620101);
        org.joda.time.LocalDateTime.Property property42 = localDateTime39.secondOfMinute();
        org.joda.time.LocalDateTime localDateTime43 = property42.roundCeilingCopy();
        int int44 = property42.get();
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now(dateTimeZone45);
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.millisOfDay();
        org.joda.time.LocalDateTime localDateTime51 = localDateTime48.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime52 = localDateTime48.toDateTime();
        java.lang.String str53 = dateTime52.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType54 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int55 = dateTime52.get(dateTimeFieldType54);
        org.joda.time.Chronology chronology56 = dateTime52.getChronology();
        java.lang.Object obj57 = null;
        boolean boolean58 = dateTime52.equals(obj57);
        long long59 = dateTime52.getMillis();
        org.joda.time.Instant instant60 = dateTime52.toInstant();
        int int61 = property42.compareTo((org.joda.time.ReadableInstant) instant60);
        long long62 = property11.getDifferenceAsLong((org.joda.time.ReadableInstant) instant60);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime21 and instant29", (dateTime21.compareTo(instant29) == 0) == dateTime21.equals(instant29));
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test035");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        org.joda.time.DateTimeField dateTimeField22 = chronology21.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField23 = dateTimeFieldType0.getField(chronology21);
        org.joda.time.DateTimeZone dateTimeZone24 = chronology21.getZone();
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str27 = dateTimeZone25.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now(dateTimeZone25);
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.LocalDateTime localDateTime31 = localDateTime28.withDurationAdded(readableDuration29, 86399999);
        org.joda.time.DateTimeZone dateTimeZone32 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str34 = dateTimeZone32.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime35 = org.joda.time.LocalDateTime.now(dateTimeZone32);
        org.joda.time.LocalDateTime.Property property36 = localDateTime35.millisOfDay();
        org.joda.time.LocalDateTime localDateTime38 = localDateTime35.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime39 = localDateTime35.toDateTime();
        java.lang.String str40 = dateTime39.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int42 = dateTime39.get(dateTimeFieldType41);
        org.joda.time.Chronology chronology43 = dateTime39.getChronology();
        org.joda.time.DateTimeField dateTimeField44 = chronology43.weekyearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now(dateTimeZone45);
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.millisOfDay();
        long long50 = property49.remainder();
        org.joda.time.LocalDateTime localDateTime51 = property49.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime52 = property49.roundFloorCopy();
        java.lang.String str53 = property49.getAsShortText();
        int int54 = property49.getMinimumValue();
        org.joda.time.LocalDateTime localDateTime56 = property49.addToCopy((long) 53623874);
        int[] intArray58 = chronology43.get((org.joda.time.ReadablePartial) localDateTime56, (long) 53630466);
        org.joda.time.DateTimeZone dateTimeZone60 = org.joda.time.DateTimeZone.forOffsetMillis((int) 'a');
        org.joda.time.LocalDateTime localDateTime61 = org.joda.time.LocalDateTime.now(dateTimeZone60);
        java.util.Date date62 = localDateTime61.toDate();
        int[] intArray64 = chronology43.get((org.joda.time.ReadablePartial) localDateTime61, (long) 99);
        chronology21.validate((org.joda.time.ReadablePartial) localDateTime31, intArray64);
        org.joda.time.Chronology chronology66 = chronology21.withUTC();
        org.joda.time.DateTimeField dateTimeField67 = chronology21.weekyearOfCentury();
        org.joda.time.DurationField durationField68 = chronology21.weekyears();
        org.joda.time.DateTimeField dateTimeField69 = chronology21.dayOfMonth();
        org.joda.time.DurationField durationField70 = chronology21.eras();
        org.joda.time.DateTimeField dateTimeField71 = chronology21.yearOfCentury();
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField68 and durationField70", Math.signum(durationField68.compareTo(durationField70)) == -Math.signum(durationField70.compareTo(durationField68)));
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test036");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        java.lang.String str5 = property4.getName();
        org.joda.time.LocalDateTime localDateTime6 = property4.roundHalfFloorCopy();
        org.joda.time.LocalDateTime localDateTime8 = localDateTime6.minusHours((int) (byte) -1);
        int int9 = localDateTime8.getYearOfEra();
        org.joda.time.LocalDateTime.Property property10 = localDateTime8.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField11 = property10.getField();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime15 = org.joda.time.LocalDateTime.now(dateTimeZone12);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.millisOfDay();
        org.joda.time.LocalDateTime localDateTime18 = localDateTime15.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime19 = localDateTime15.toDateTime();
        java.lang.String str20 = dateTime19.toString();
        org.joda.time.DateTimeZone dateTimeZone21 = dateTime19.getZone();
        int int22 = property10.getDifference((org.joda.time.ReadableInstant) dateTime19);
        org.joda.time.DateTimeZone dateTimeZone23 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str25 = dateTimeZone23.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime26 = org.joda.time.LocalDateTime.now(dateTimeZone23);
        org.joda.time.LocalDateTime.Property property27 = localDateTime26.millisOfDay();
        org.joda.time.LocalDateTime localDateTime29 = localDateTime26.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime30 = localDateTime26.toDateTime();
        java.lang.String str31 = dateTime30.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType32 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int33 = dateTime30.get(dateTimeFieldType32);
        org.joda.time.Chronology chronology34 = dateTime30.getChronology();
        java.lang.Object obj35 = null;
        boolean boolean36 = dateTime30.equals(obj35);
        long long37 = dateTime30.getMillis();
        org.joda.time.Instant instant38 = dateTime30.toInstant();
        org.joda.time.DateTimeZone dateTimeZone39 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str41 = dateTimeZone39.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime42 = org.joda.time.LocalDateTime.now(dateTimeZone39);
        org.joda.time.LocalDateTime.Property property43 = localDateTime42.millisOfDay();
        org.joda.time.LocalDateTime localDateTime45 = localDateTime42.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime46 = localDateTime42.toDateTime();
        java.lang.String str47 = dateTime46.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType48 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int49 = dateTime46.get(dateTimeFieldType48);
        org.joda.time.Chronology chronology50 = dateTime46.getChronology();
        java.lang.Object obj51 = null;
        boolean boolean52 = dateTime46.equals(obj51);
        long long53 = dateTime46.getMillis();
        boolean boolean54 = dateTime30.isAfter((org.joda.time.ReadableInstant) dateTime46);
        boolean boolean55 = dateTime19.isBefore((org.joda.time.ReadableInstant) dateTime30);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant38 and dateTime46", (instant38.compareTo(dateTime46) == 0) == instant38.equals(dateTime46));
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test037");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property7 = localDateTime6.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone8 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str10 = dateTimeZone8.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now(dateTimeZone8);
        org.joda.time.LocalDateTime.Property property12 = localDateTime11.millisOfDay();
        org.joda.time.LocalDateTime localDateTime14 = localDateTime11.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime15 = localDateTime11.toDateTime();
        java.lang.String str16 = dateTime15.toString();
        org.joda.time.DateTime dateTime17 = localDateTime6.toDateTime((org.joda.time.ReadableInstant) dateTime15);
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime25 = localDateTime21.toDateTime();
        java.lang.String str26 = dateTime25.toString();
        int int27 = dateTime15.compareTo((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        boolean boolean29 = dateTime15.isEqual(readableInstant28);
        org.joda.time.Instant instant30 = dateTime15.toInstant();
        java.lang.String str31 = dateTime15.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime25 and instant30", (dateTime25.compareTo(instant30) == 0) == dateTime25.equals(instant30));
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test038");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone9 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str11 = dateTimeZone9.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(dateTimeZone9);
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.millisOfDay();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime12.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now(dateTimeZone17);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime20.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime24 = localDateTime20.toDateTime();
        java.lang.String str25 = dateTime24.toString();
        org.joda.time.DateTime dateTime26 = localDateTime15.toDateTime((org.joda.time.ReadableInstant) dateTime24);
        boolean boolean27 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.LocalDateTime localDateTime34 = localDateTime31.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime35 = localDateTime31.toDateTime();
        java.lang.String str36 = dateTime35.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int38 = dateTime35.get(dateTimeFieldType37);
        int int39 = dateTime24.compareTo((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.DateTimeZone dateTimeZone40 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str42 = dateTimeZone40.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime43 = org.joda.time.LocalDateTime.now(dateTimeZone40);
        org.joda.time.LocalDateTime.Property property44 = localDateTime43.millisOfDay();
        org.joda.time.LocalDateTime localDateTime46 = localDateTime43.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime47 = localDateTime43.toDateTime();
        java.lang.String str48 = dateTime47.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType49 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int50 = dateTime47.get(dateTimeFieldType49);
        org.joda.time.DateTimeZone dateTimeZone51 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str53 = dateTimeZone51.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime54 = org.joda.time.LocalDateTime.now(dateTimeZone51);
        org.joda.time.LocalDateTime.Property property55 = localDateTime54.millisOfDay();
        org.joda.time.LocalDateTime localDateTime57 = localDateTime54.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property58 = localDateTime57.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone59 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str61 = dateTimeZone59.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime62 = org.joda.time.LocalDateTime.now(dateTimeZone59);
        org.joda.time.LocalDateTime.Property property63 = localDateTime62.millisOfDay();
        org.joda.time.LocalDateTime localDateTime65 = localDateTime62.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime66 = localDateTime62.toDateTime();
        java.lang.String str67 = dateTime66.toString();
        org.joda.time.DateTime dateTime68 = localDateTime57.toDateTime((org.joda.time.ReadableInstant) dateTime66);
        boolean boolean69 = dateTime47.isAfter((org.joda.time.ReadableInstant) dateTime66);
        boolean boolean70 = dateTime24.isBefore((org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.DateTimeZone dateTimeZone71 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str73 = dateTimeZone71.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime74 = org.joda.time.LocalDateTime.now(dateTimeZone71);
        org.joda.time.LocalDateTime.Property property75 = localDateTime74.millisOfDay();
        org.joda.time.LocalDateTime localDateTime77 = localDateTime74.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime78 = localDateTime74.toDateTime();
        java.lang.String str79 = dateTime78.toString();
        org.joda.time.DateTimeZone dateTimeZone80 = dateTime78.getZone();
        long long81 = dateTime78.getMillis();
        boolean boolean82 = dateTime24.isAfter((org.joda.time.ReadableInstant) dateTime78);
        org.joda.time.Instant instant83 = dateTime24.toInstant();
        org.joda.time.DateTimeFieldType dateTimeFieldType84 = null;
        boolean boolean85 = dateTime24.isSupported(dateTimeFieldType84);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant83", (dateTime7.compareTo(instant83) == 0) == dateTime7.equals(instant83));
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test039");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property7 = localDateTime6.minuteOfHour();
        org.joda.time.LocalDateTime.Property property8 = localDateTime6.millisOfDay();
        java.util.Locale locale10 = new java.util.Locale("days");
        java.util.Locale locale11 = java.util.Locale.CANADA_FRENCH;
        java.util.Locale locale12 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str13 = locale11.getDisplayCountry(locale12);
        java.lang.String str14 = locale11.getDisplayLanguage();
        boolean boolean15 = locale11.hasExtensions();
        java.lang.String str16 = locale10.getDisplayName(locale11);
        boolean boolean17 = property8.equals((java.lang.Object) str16);
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime25 = localDateTime21.toDateTime();
        java.lang.String str26 = dateTime25.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType27 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int28 = dateTime25.get(dateTimeFieldType27);
        org.joda.time.Chronology chronology29 = dateTime25.getChronology();
        java.lang.Object obj30 = null;
        boolean boolean31 = dateTime25.equals(obj30);
        long long32 = dateTime25.getMillis();
        org.joda.time.Instant instant33 = dateTime25.toInstant();
        org.joda.time.DateTimeZone dateTimeZone34 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str36 = dateTimeZone34.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime37 = org.joda.time.LocalDateTime.now(dateTimeZone34);
        org.joda.time.LocalDateTime.Property property38 = localDateTime37.millisOfDay();
        org.joda.time.LocalDateTime localDateTime40 = localDateTime37.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime41 = localDateTime37.toDateTime();
        java.lang.String str42 = dateTime41.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType43 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int44 = dateTime41.get(dateTimeFieldType43);
        org.joda.time.Chronology chronology45 = dateTime41.getChronology();
        java.lang.Object obj46 = null;
        boolean boolean47 = dateTime41.equals(obj46);
        long long48 = dateTime41.getMillis();
        boolean boolean49 = dateTime25.isAfter((org.joda.time.ReadableInstant) dateTime41);
        int int50 = property8.compareTo((org.joda.time.ReadableInstant) dateTime25);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant33 and dateTime41", (instant33.compareTo(dateTime41) == 0) == instant33.equals(dateTime41));
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test040");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeField dateTimeField12 = chronology11.weekyearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime16 = org.joda.time.LocalDateTime.now(dateTimeZone13);
        org.joda.time.LocalDateTime.Property property17 = localDateTime16.millisOfDay();
        long long18 = property17.remainder();
        org.joda.time.LocalDateTime localDateTime19 = property17.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime20 = property17.roundFloorCopy();
        java.lang.String str21 = property17.getAsShortText();
        int int22 = property17.getMinimumValue();
        org.joda.time.LocalDateTime localDateTime24 = property17.addToCopy((long) 53623874);
        int[] intArray26 = chronology11.get((org.joda.time.ReadablePartial) localDateTime24, (long) 53630466);
        org.joda.time.DateTimeField dateTimeField27 = chronology11.secondOfDay();
        org.joda.time.DurationField durationField28 = chronology11.years();
        org.joda.time.DateTimeField dateTimeField29 = chronology11.clockhourOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType30 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone31 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str33 = dateTimeZone31.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime34 = org.joda.time.LocalDateTime.now(dateTimeZone31);
        org.joda.time.LocalDateTime.Property property35 = localDateTime34.millisOfDay();
        org.joda.time.LocalDateTime localDateTime37 = localDateTime34.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime38 = localDateTime34.toDateTime();
        java.lang.String str39 = dateTime38.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType40 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int41 = dateTime38.get(dateTimeFieldType40);
        org.joda.time.Chronology chronology42 = dateTime38.getChronology();
        org.joda.time.DateTimeZone dateTimeZone43 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str45 = dateTimeZone43.getShortName((long) (short) 10);
        long long47 = dateTimeZone43.convertUTCToLocal((long) ' ');
        java.lang.String str48 = dateTimeZone43.toString();
        boolean boolean50 = dateTimeZone43.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology51 = chronology42.withZone(dateTimeZone43);
        org.joda.time.DateTimeField dateTimeField52 = chronology51.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField53 = dateTimeFieldType30.getField(chronology51);
        org.joda.time.Chronology chronology54 = chronology51.withUTC();
        org.joda.time.DurationField durationField55 = chronology54.millis();
        org.joda.time.DurationField durationField56 = chronology54.weekyears();
        org.joda.time.DateTimeField dateTimeField57 = chronology54.weekyear();
        long long60 = dateTimeField57.add((long) 97, 0L);
        org.joda.time.DateTimeZone dateTimeZone61 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str63 = dateTimeZone61.getShortName((long) (short) 10);
        long long65 = dateTimeZone61.convertUTCToLocal((long) ' ');
        boolean boolean66 = dateTimeZone61.isFixed();
        java.util.TimeZone timeZone67 = dateTimeZone61.toTimeZone();
        org.joda.time.LocalDateTime localDateTime68 = new org.joda.time.LocalDateTime((java.lang.Object) long60, dateTimeZone61);
        int int70 = dateTimeZone61.getOffset((long) 53642975);
        org.joda.time.Chronology chronology71 = chronology11.withZone(dateTimeZone61);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField28 and durationField56", (durationField28.compareTo(durationField56) == 0) == durationField28.equals(durationField56));
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test041");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DurationField durationField21 = chronology11.weekyears();
        org.joda.time.DateTimeField dateTimeField22 = chronology11.dayOfYear();
        org.joda.time.DateTimeField dateTimeField23 = chronology11.year();
        int int26 = dateTimeField23.getDifference((long) 53642504, 43199903L);
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone29 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str31 = dateTimeZone29.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime32 = org.joda.time.LocalDateTime.now(dateTimeZone29);
        org.joda.time.LocalDateTime.Property property33 = localDateTime32.millisOfDay();
        org.joda.time.LocalDateTime localDateTime35 = localDateTime32.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime36 = localDateTime32.toDateTime();
        java.lang.String str37 = dateTime36.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType38 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int39 = dateTime36.get(dateTimeFieldType38);
        org.joda.time.Chronology chronology40 = dateTime36.getChronology();
        org.joda.time.DateTimeZone dateTimeZone41 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str43 = dateTimeZone41.getShortName((long) (short) 10);
        long long45 = dateTimeZone41.convertUTCToLocal((long) ' ');
        java.lang.String str46 = dateTimeZone41.toString();
        boolean boolean48 = dateTimeZone41.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology49 = chronology40.withZone(dateTimeZone41);
        boolean boolean50 = dateTimeFieldType28.isSupported(chronology49);
        org.joda.time.DurationField durationField51 = chronology49.years();
        org.joda.time.DateTimeField dateTimeField52 = chronology49.hourOfDay();
        java.util.Locale locale54 = java.util.Locale.ROOT;
        java.util.Set<java.lang.String> strSet55 = locale54.getUnicodeLocaleAttributes();
        java.lang.String str56 = locale54.getLanguage();
        java.util.Locale locale57 = locale54.stripExtensions();
        java.util.Locale locale58 = java.util.Locale.CANADA_FRENCH;
        java.util.Locale locale59 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str60 = locale58.getDisplayCountry(locale59);
        java.lang.String str61 = locale58.getDisplayLanguage();
        java.lang.String str62 = locale54.getDisplayScript(locale58);
        java.lang.String str63 = locale58.getDisplayScript();
        java.lang.String str64 = dateTimeField52.getAsShortText(720, locale58);
        java.lang.String str65 = dateTimeField23.getAsShortText(1645455281013L, locale58);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField21 and durationField51", (durationField21.compareTo(durationField51) == 0) == durationField21.equals(durationField51));
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test042");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.DateTimeZone dateTimeZone11 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str13 = dateTimeZone11.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime14 = org.joda.time.LocalDateTime.now(dateTimeZone11);
        org.joda.time.LocalDateTime.Property property15 = localDateTime14.millisOfDay();
        org.joda.time.LocalDateTime localDateTime17 = localDateTime14.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property18 = localDateTime17.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone19 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str21 = dateTimeZone19.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now(dateTimeZone19);
        org.joda.time.LocalDateTime.Property property23 = localDateTime22.millisOfDay();
        org.joda.time.LocalDateTime localDateTime25 = localDateTime22.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime26 = localDateTime22.toDateTime();
        java.lang.String str27 = dateTime26.toString();
        org.joda.time.DateTime dateTime28 = localDateTime17.toDateTime((org.joda.time.ReadableInstant) dateTime26);
        boolean boolean29 = dateTime7.isAfter((org.joda.time.ReadableInstant) dateTime26);
        org.joda.time.DateTimeFieldType dateTimeFieldType30 = org.joda.time.DateTimeFieldType.dayOfMonth();
        java.lang.String str31 = dateTimeFieldType30.getName();
        boolean boolean32 = dateTime26.isSupported(dateTimeFieldType30);
        org.joda.time.Instant instant33 = dateTime26.toInstant();
        org.joda.time.DateTimeZone dateTimeZone34 = dateTime26.getZone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant33", (dateTime7.compareTo(instant33) == 0) == dateTime7.equals(instant33));
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test043");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        long long5 = property4.remainder();
        org.joda.time.Interval interval6 = property4.toInterval();
        org.joda.time.LocalDateTime localDateTime8 = property4.addToCopy((int) '4');
        org.joda.time.DateTimeZone dateTimeZone9 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str11 = dateTimeZone9.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(dateTimeZone9);
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.millisOfDay();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime12.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime16 = localDateTime12.toDateTime();
        java.lang.String str17 = dateTime16.toString();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property25 = localDateTime24.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone26 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str28 = dateTimeZone26.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime29 = org.joda.time.LocalDateTime.now(dateTimeZone26);
        org.joda.time.LocalDateTime.Property property30 = localDateTime29.millisOfDay();
        org.joda.time.LocalDateTime localDateTime32 = localDateTime29.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime33 = localDateTime29.toDateTime();
        java.lang.String str34 = dateTime33.toString();
        org.joda.time.DateTime dateTime35 = localDateTime24.toDateTime((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean36 = dateTime16.isBefore((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.DateTimeZone dateTimeZone37 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str39 = dateTimeZone37.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime40 = org.joda.time.LocalDateTime.now(dateTimeZone37);
        org.joda.time.LocalDateTime.Property property41 = localDateTime40.millisOfDay();
        org.joda.time.LocalDateTime localDateTime43 = localDateTime40.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime44 = localDateTime40.toDateTime();
        java.lang.String str45 = dateTime44.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType46 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int47 = dateTime44.get(dateTimeFieldType46);
        int int48 = dateTime33.compareTo((org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.DateTimeZone dateTimeZone49 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str51 = dateTimeZone49.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime52 = org.joda.time.LocalDateTime.now(dateTimeZone49);
        org.joda.time.LocalDateTime.Property property53 = localDateTime52.millisOfDay();
        org.joda.time.LocalDateTime localDateTime55 = localDateTime52.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime56 = localDateTime52.toDateTime();
        java.lang.String str57 = dateTime56.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType58 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int59 = dateTime56.get(dateTimeFieldType58);
        org.joda.time.DateTimeZone dateTimeZone60 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str62 = dateTimeZone60.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime63 = org.joda.time.LocalDateTime.now(dateTimeZone60);
        org.joda.time.LocalDateTime.Property property64 = localDateTime63.millisOfDay();
        org.joda.time.LocalDateTime localDateTime66 = localDateTime63.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property67 = localDateTime66.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone68 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str70 = dateTimeZone68.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime71 = org.joda.time.LocalDateTime.now(dateTimeZone68);
        org.joda.time.LocalDateTime.Property property72 = localDateTime71.millisOfDay();
        org.joda.time.LocalDateTime localDateTime74 = localDateTime71.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime75 = localDateTime71.toDateTime();
        java.lang.String str76 = dateTime75.toString();
        org.joda.time.DateTime dateTime77 = localDateTime66.toDateTime((org.joda.time.ReadableInstant) dateTime75);
        boolean boolean78 = dateTime56.isAfter((org.joda.time.ReadableInstant) dateTime75);
        boolean boolean79 = dateTime33.isBefore((org.joda.time.ReadableInstant) dateTime56);
        java.lang.String str80 = dateTime56.toString();
        long long81 = property4.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime56);
        org.joda.time.Instant instant82 = dateTime56.toInstant();
        org.joda.time.Chronology chronology83 = dateTime56.getChronology();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime16 and instant82", (dateTime16.compareTo(instant82) == 0) == dateTime16.equals(instant82));
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test044");
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        org.joda.time.DateTimeField dateTimeField22 = chronology12.yearOfCentury();
        org.joda.time.LocalDateTime localDateTime23 = new org.joda.time.LocalDateTime((long) 69, chronology12);
        org.joda.time.DurationField durationField24 = chronology12.weekyears();
        org.joda.time.DateTimeField dateTimeField25 = chronology12.millisOfSecond();
        org.joda.time.DurationField durationField26 = chronology12.seconds();
        org.joda.time.DateTimeField dateTimeField27 = chronology12.secondOfMinute();
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone29 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str31 = dateTimeZone29.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime32 = org.joda.time.LocalDateTime.now(dateTimeZone29);
        org.joda.time.LocalDateTime.Property property33 = localDateTime32.millisOfDay();
        org.joda.time.LocalDateTime localDateTime35 = localDateTime32.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime36 = localDateTime32.toDateTime();
        java.lang.String str37 = dateTime36.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType38 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int39 = dateTime36.get(dateTimeFieldType38);
        org.joda.time.Chronology chronology40 = dateTime36.getChronology();
        org.joda.time.DateTimeZone dateTimeZone41 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str43 = dateTimeZone41.getShortName((long) (short) 10);
        long long45 = dateTimeZone41.convertUTCToLocal((long) ' ');
        java.lang.String str46 = dateTimeZone41.toString();
        boolean boolean48 = dateTimeZone41.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology49 = chronology40.withZone(dateTimeZone41);
        boolean boolean50 = dateTimeFieldType28.isSupported(chronology49);
        org.joda.time.DurationField durationField51 = chronology49.years();
        org.joda.time.LocalDateTime localDateTime52 = new org.joda.time.LocalDateTime(chronology49);
        long long54 = chronology12.set((org.joda.time.ReadablePartial) localDateTime52, 259200244L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField24 and durationField51", (durationField24.compareTo(durationField51) == 0) == durationField24.equals(durationField51));
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test045");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone9 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str11 = dateTimeZone9.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(dateTimeZone9);
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.millisOfDay();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime12.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now(dateTimeZone17);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime20.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime24 = localDateTime20.toDateTime();
        java.lang.String str25 = dateTime24.toString();
        org.joda.time.DateTime dateTime26 = localDateTime15.toDateTime((org.joda.time.ReadableInstant) dateTime24);
        boolean boolean27 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.LocalDateTime localDateTime34 = localDateTime31.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property35 = localDateTime34.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str38 = dateTimeZone36.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime39 = org.joda.time.LocalDateTime.now(dateTimeZone36);
        org.joda.time.LocalDateTime.Property property40 = localDateTime39.millisOfDay();
        org.joda.time.LocalDateTime localDateTime42 = localDateTime39.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime43 = localDateTime39.toDateTime();
        java.lang.String str44 = dateTime43.toString();
        org.joda.time.DateTime dateTime45 = localDateTime34.toDateTime((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.DateTimeZone dateTimeZone46 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str48 = dateTimeZone46.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime49 = org.joda.time.LocalDateTime.now(dateTimeZone46);
        org.joda.time.LocalDateTime.Property property50 = localDateTime49.millisOfDay();
        org.joda.time.LocalDateTime localDateTime52 = localDateTime49.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime53 = localDateTime49.toDateTime();
        java.lang.String str54 = dateTime53.toString();
        int int55 = dateTime43.compareTo((org.joda.time.ReadableInstant) dateTime53);
        long long56 = dateTime43.getMillis();
        boolean boolean57 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.DateTimeZone dateTimeZone58 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str60 = dateTimeZone58.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime61 = org.joda.time.LocalDateTime.now(dateTimeZone58);
        org.joda.time.LocalDateTime.Property property62 = localDateTime61.millisOfDay();
        org.joda.time.LocalDateTime localDateTime64 = localDateTime61.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime65 = localDateTime61.toDateTime();
        java.lang.String str66 = dateTime65.toString();
        org.joda.time.DateTimeZone dateTimeZone67 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str69 = dateTimeZone67.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime70 = org.joda.time.LocalDateTime.now(dateTimeZone67);
        org.joda.time.LocalDateTime.Property property71 = localDateTime70.millisOfDay();
        org.joda.time.LocalDateTime localDateTime73 = localDateTime70.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property74 = localDateTime73.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone75 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str77 = dateTimeZone75.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime78 = org.joda.time.LocalDateTime.now(dateTimeZone75);
        org.joda.time.LocalDateTime.Property property79 = localDateTime78.millisOfDay();
        org.joda.time.LocalDateTime localDateTime81 = localDateTime78.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime82 = localDateTime78.toDateTime();
        java.lang.String str83 = dateTime82.toString();
        org.joda.time.DateTime dateTime84 = localDateTime73.toDateTime((org.joda.time.ReadableInstant) dateTime82);
        boolean boolean85 = dateTime65.isBefore((org.joda.time.ReadableInstant) dateTime82);
        org.joda.time.Instant instant86 = dateTime65.toInstant();
        java.lang.String str87 = instant86.toString();
        boolean boolean88 = dateTime7.isBefore((org.joda.time.ReadableInstant) instant86);
        org.joda.time.DateTimeZone dateTimeZone89 = dateTime7.getZone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime24 and instant86", (dateTime24.compareTo(instant86) == 0) == dateTime24.equals(instant86));
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test046");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone9 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str11 = dateTimeZone9.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(dateTimeZone9);
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.millisOfDay();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime12.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now(dateTimeZone17);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime20.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime24 = localDateTime20.toDateTime();
        java.lang.String str25 = dateTime24.toString();
        org.joda.time.DateTime dateTime26 = localDateTime15.toDateTime((org.joda.time.ReadableInstant) dateTime24);
        boolean boolean27 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.Instant instant28 = dateTime7.toInstant();
        org.joda.time.Chronology chronology29 = instant28.getChronology();
        org.joda.time.DateTimeField dateTimeField30 = chronology29.minuteOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant28", (dateTime7.compareTo(instant28) == 0) == dateTime7.equals(instant28));
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test047");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime8 = localDateTime3.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime10 = localDateTime8.minusHours((int) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = localDateTime10.withEra((int) (byte) 0);
        org.joda.time.LocalDateTime localDateTime14 = localDateTime12.withDayOfWeek(4);
        org.joda.time.LocalDateTime.Property property15 = localDateTime14.weekOfWeekyear();
        org.joda.time.DurationField durationField16 = property15.getDurationField();
        org.joda.time.LocalDateTime localDateTime17 = property15.roundHalfEvenCopy();
        int int18 = localDateTime17.getYearOfCentury();
        org.joda.time.LocalDateTime.Property property19 = localDateTime17.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone20 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str22 = dateTimeZone20.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime23 = org.joda.time.LocalDateTime.now(dateTimeZone20);
        org.joda.time.LocalDateTime.Property property24 = localDateTime23.millisOfDay();
        org.joda.time.LocalDateTime localDateTime26 = localDateTime23.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime27 = localDateTime23.toDateTime();
        java.lang.String str28 = dateTime27.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType29 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int30 = dateTime27.get(dateTimeFieldType29);
        org.joda.time.Chronology chronology31 = dateTime27.getChronology();
        java.lang.Object obj32 = null;
        boolean boolean33 = dateTime27.equals(obj32);
        long long34 = dateTime27.getMillis();
        org.joda.time.Instant instant35 = dateTime27.toInstant();
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str38 = dateTimeZone36.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime39 = org.joda.time.LocalDateTime.now(dateTimeZone36);
        org.joda.time.LocalDateTime.Property property40 = localDateTime39.millisOfDay();
        java.lang.String str41 = property40.getName();
        int int42 = property40.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType43 = property40.getFieldType();
        org.joda.time.LocalDateTime localDateTime44 = property40.withMinimumValue();
        org.joda.time.LocalDateTime.Property property45 = localDateTime44.weekOfWeekyear();
        boolean boolean46 = dateTime27.equals((java.lang.Object) property45);
        org.joda.time.DateTimeZone dateTimeZone47 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str49 = dateTimeZone47.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime50 = org.joda.time.LocalDateTime.now(dateTimeZone47);
        org.joda.time.LocalDateTime.Property property51 = localDateTime50.millisOfDay();
        org.joda.time.LocalDateTime localDateTime53 = localDateTime50.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime54 = localDateTime50.toDateTime();
        java.lang.String str55 = dateTime54.toString();
        org.joda.time.DateTimeZone dateTimeZone56 = dateTime54.getZone();
        long long57 = dateTime54.getMillis();
        int int58 = dateTime27.compareTo((org.joda.time.ReadableInstant) dateTime54);
        org.joda.time.DateTimeFieldType dateTimeFieldType59 = org.joda.time.DateTimeFieldType.yearOfEra();
        boolean boolean60 = dateTime27.isSupported(dateTimeFieldType59);
        org.joda.time.LocalDateTime localDateTime62 = localDateTime17.withField(dateTimeFieldType59, 53777812);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime27 and instant35", (dateTime27.compareTo(instant35) == 0) == dateTime27.equals(instant35));
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test048");
        org.joda.time.DateTimeZone dateTimeZone2 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str4 = dateTimeZone2.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime5 = org.joda.time.LocalDateTime.now(dateTimeZone2);
        org.joda.time.LocalDateTime.Property property6 = localDateTime5.millisOfDay();
        org.joda.time.LocalDateTime localDateTime8 = localDateTime5.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime9 = localDateTime5.toDateTime();
        java.lang.String str10 = dateTime9.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int12 = dateTime9.get(dateTimeFieldType11);
        org.joda.time.Chronology chronology13 = dateTime9.getChronology();
        org.joda.time.DateTimeField dateTimeField14 = chronology13.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField15 = chronology13.clockhourOfHalfday();
        org.joda.time.LocalDateTime localDateTime16 = new org.joda.time.LocalDateTime((long) (short) 100, chronology13);
        org.joda.time.DateTimeField dateTimeField17 = chronology13.yearOfCentury();
        org.joda.time.LocalDateTime localDateTime18 = new org.joda.time.LocalDateTime(53L, chronology13);
        org.joda.time.DateTimeField dateTimeField19 = chronology13.dayOfMonth();
        org.joda.time.DurationField durationField20 = chronology13.seconds();
        org.joda.time.DurationField durationField21 = chronology13.eras();
        org.joda.time.LocalDateTime localDateTime22 = new org.joda.time.LocalDateTime(chronology13);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField20 and durationField21", Math.signum(durationField20.compareTo(durationField21)) == -Math.signum(durationField21.compareTo(durationField20)));
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test049");
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        long long5 = dateTimeZone1.convertUTCToLocal((long) ' ');
        java.lang.String str6 = dateTimeZone1.toString();
        long long9 = dateTimeZone1.adjustOffset((long) (short) 100, false);
        org.joda.time.LocalDateTime localDateTime10 = new org.joda.time.LocalDateTime((long) '4', dateTimeZone1);
        org.joda.time.DateTimeZone dateTimeZone11 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str13 = dateTimeZone11.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime14 = org.joda.time.LocalDateTime.now(dateTimeZone11);
        org.joda.time.LocalDateTime.Property property15 = localDateTime14.millisOfDay();
        org.joda.time.LocalDateTime localDateTime17 = localDateTime14.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime18 = localDateTime14.toDateTime();
        java.lang.String str19 = dateTime18.toString();
        int int20 = dateTimeZone1.getOffset((org.joda.time.ReadableInstant) dateTime18);
        org.joda.time.Chronology chronology21 = dateTime18.getChronology();
        org.joda.time.Instant instant22 = dateTime18.toInstant();
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = org.joda.time.DateTimeFieldType.weekyearOfCentury();
        int int24 = dateTime18.get(dateTimeFieldType23);
        org.joda.time.DurationFieldType durationFieldType25 = dateTimeFieldType23.getDurationType();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime18 and instant22", (dateTime18.compareTo(instant22) == 0) == dateTime18.equals(instant22));
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test050");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        java.lang.Object obj12 = null;
        boolean boolean13 = dateTime7.equals(obj12);
        long long14 = dateTime7.getMillis();
        org.joda.time.Instant instant15 = dateTime7.toInstant();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now(dateTimeZone16);
        org.joda.time.LocalDateTime.Property property20 = localDateTime19.millisOfDay();
        java.lang.String str21 = property20.getName();
        int int22 = property20.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = property20.getFieldType();
        org.joda.time.LocalDateTime localDateTime24 = property20.withMinimumValue();
        org.joda.time.LocalDateTime.Property property25 = localDateTime24.weekOfWeekyear();
        boolean boolean26 = dateTime7.equals((java.lang.Object) property25);
        java.lang.String str27 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.LocalDateTime localDateTime34 = localDateTime31.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property35 = localDateTime34.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str38 = dateTimeZone36.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime39 = org.joda.time.LocalDateTime.now(dateTimeZone36);
        org.joda.time.LocalDateTime.Property property40 = localDateTime39.millisOfDay();
        org.joda.time.LocalDateTime localDateTime42 = localDateTime39.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime43 = localDateTime39.toDateTime();
        java.lang.String str44 = dateTime43.toString();
        org.joda.time.DateTime dateTime45 = localDateTime34.toDateTime((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.DateTimeZone dateTimeZone46 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str48 = dateTimeZone46.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime49 = org.joda.time.LocalDateTime.now(dateTimeZone46);
        org.joda.time.LocalDateTime.Property property50 = localDateTime49.millisOfDay();
        org.joda.time.LocalDateTime localDateTime52 = localDateTime49.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime53 = localDateTime49.toDateTime();
        java.lang.String str54 = dateTime53.toString();
        int int55 = dateTime43.compareTo((org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.DateTimeZone dateTimeZone56 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str58 = dateTimeZone56.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime59 = org.joda.time.LocalDateTime.now(dateTimeZone56);
        org.joda.time.LocalDateTime.Property property60 = localDateTime59.millisOfDay();
        org.joda.time.LocalDateTime localDateTime62 = localDateTime59.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property63 = localDateTime62.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone64 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str66 = dateTimeZone64.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime67 = org.joda.time.LocalDateTime.now(dateTimeZone64);
        org.joda.time.LocalDateTime.Property property68 = localDateTime67.millisOfDay();
        org.joda.time.LocalDateTime localDateTime70 = localDateTime67.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime71 = localDateTime67.toDateTime();
        java.lang.String str72 = dateTime71.toString();
        org.joda.time.DateTime dateTime73 = localDateTime62.toDateTime((org.joda.time.ReadableInstant) dateTime71);
        org.joda.time.DateTimeZone dateTimeZone74 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str76 = dateTimeZone74.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime77 = org.joda.time.LocalDateTime.now(dateTimeZone74);
        org.joda.time.LocalDateTime.Property property78 = localDateTime77.millisOfDay();
        org.joda.time.LocalDateTime localDateTime80 = localDateTime77.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime81 = localDateTime77.toDateTime();
        java.lang.String str82 = dateTime81.toString();
        int int83 = dateTime71.compareTo((org.joda.time.ReadableInstant) dateTime81);
        boolean boolean84 = dateTime53.isAfter((org.joda.time.ReadableInstant) dateTime71);
        org.joda.time.DateTimeFieldType dateTimeFieldType85 = org.joda.time.DateTimeFieldType.dayOfMonth();
        java.lang.String str86 = dateTimeFieldType85.getName();
        int int87 = dateTime53.get(dateTimeFieldType85);
        boolean boolean88 = dateTime7.isSupported(dateTimeFieldType85);
        org.joda.time.DurationFieldType durationFieldType89 = dateTimeFieldType85.getDurationType();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant15", (dateTime7.compareTo(instant15) == 0) == dateTime7.equals(instant15));
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test051");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        boolean boolean22 = dateTimeFieldType0.isSupported(chronology21);
        org.joda.time.DurationField durationField23 = chronology21.years();
        long long24 = durationField23.getUnitMillis();
        long long26 = durationField23.getMillis(292278993);
        org.joda.time.LocalDateTime localDateTime27 = new org.joda.time.LocalDateTime();
        org.joda.time.LocalDateTime.Property property28 = localDateTime27.millisOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType29 = property28.getFieldType();
        org.joda.time.DateTimeZone dateTimeZone30 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str32 = dateTimeZone30.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime33 = org.joda.time.LocalDateTime.now(dateTimeZone30);
        org.joda.time.LocalDateTime.Property property34 = localDateTime33.millisOfDay();
        org.joda.time.LocalDateTime localDateTime36 = localDateTime33.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime37 = localDateTime33.toDateTime();
        java.lang.String str38 = dateTime37.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType39 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int40 = dateTime37.get(dateTimeFieldType39);
        org.joda.time.Chronology chronology41 = dateTime37.getChronology();
        org.joda.time.DateTimeZone dateTimeZone42 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str44 = dateTimeZone42.getShortName((long) (short) 10);
        long long46 = dateTimeZone42.convertUTCToLocal((long) ' ');
        java.lang.String str47 = dateTimeZone42.toString();
        boolean boolean49 = dateTimeZone42.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology50 = chronology41.withZone(dateTimeZone42);
        org.joda.time.DurationField durationField51 = chronology41.weekyears();
        org.joda.time.DateTimeField dateTimeField52 = chronology41.dayOfYear();
        org.joda.time.DurationField durationField53 = chronology41.weeks();
        org.joda.time.DateTimeField dateTimeField54 = chronology41.yearOfEra();
        boolean boolean55 = dateTimeFieldType29.isSupported(chronology41);
        org.joda.time.DurationField durationField56 = chronology41.millis();
        int int57 = durationField23.compareTo(durationField56);
        int int60 = durationField56.getDifference((long) 1, (long) 497);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField23 and durationField51", (durationField23.compareTo(durationField51) == 0) == durationField23.equals(durationField51));
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test052");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property7 = localDateTime6.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone8 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str10 = dateTimeZone8.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now(dateTimeZone8);
        org.joda.time.LocalDateTime.Property property12 = localDateTime11.millisOfDay();
        org.joda.time.LocalDateTime localDateTime14 = localDateTime11.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime15 = localDateTime11.toDateTime();
        java.lang.String str16 = dateTime15.toString();
        org.joda.time.DateTime dateTime17 = localDateTime6.toDateTime((org.joda.time.ReadableInstant) dateTime15);
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime25 = localDateTime21.toDateTime();
        java.lang.String str26 = dateTime25.toString();
        int int27 = dateTime15.compareTo((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        boolean boolean29 = dateTime15.isEqual(readableInstant28);
        org.joda.time.Instant instant30 = dateTime15.toInstant();
        org.joda.time.Instant instant31 = dateTime15.toInstant();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime25 and instant30", (dateTime25.compareTo(instant30) == 0) == dateTime25.equals(instant30));
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test053");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.clockhourOfHalfday();
        java.lang.String str1 = dateTimeFieldType0.toString();
        org.joda.time.DurationFieldType durationFieldType2 = org.joda.time.DurationFieldType.hours();
        org.joda.time.DateTimeFieldType dateTimeFieldType3 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone4 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str6 = dateTimeZone4.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime7 = org.joda.time.LocalDateTime.now(dateTimeZone4);
        org.joda.time.LocalDateTime.Property property8 = localDateTime7.millisOfDay();
        org.joda.time.LocalDateTime localDateTime10 = localDateTime7.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime11 = localDateTime7.toDateTime();
        java.lang.String str12 = dateTime11.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType13 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int14 = dateTime11.get(dateTimeFieldType13);
        org.joda.time.Chronology chronology15 = dateTime11.getChronology();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        long long20 = dateTimeZone16.convertUTCToLocal((long) ' ');
        java.lang.String str21 = dateTimeZone16.toString();
        boolean boolean23 = dateTimeZone16.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology24 = chronology15.withZone(dateTimeZone16);
        boolean boolean25 = dateTimeFieldType3.isSupported(chronology24);
        org.joda.time.DateTimeZone dateTimeZone26 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str28 = dateTimeZone26.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime29 = org.joda.time.LocalDateTime.now(dateTimeZone26);
        org.joda.time.LocalDateTime.Property property30 = localDateTime29.millisOfDay();
        org.joda.time.LocalDateTime localDateTime32 = localDateTime29.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime33 = localDateTime29.toDateTime();
        java.lang.String str34 = dateTime33.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int36 = dateTime33.get(dateTimeFieldType35);
        org.joda.time.Chronology chronology37 = dateTime33.getChronology();
        org.joda.time.DateTimeZone dateTimeZone38 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str40 = dateTimeZone38.getShortName((long) (short) 10);
        long long42 = dateTimeZone38.convertUTCToLocal((long) ' ');
        java.lang.String str43 = dateTimeZone38.toString();
        boolean boolean45 = dateTimeZone38.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology46 = chronology37.withZone(dateTimeZone38);
        org.joda.time.DurationField durationField47 = chronology37.weekyears();
        org.joda.time.DateTimeField dateTimeField48 = chronology37.dayOfYear();
        org.joda.time.DurationField durationField49 = chronology37.weeks();
        org.joda.time.DateTimeField dateTimeField50 = chronology37.yearOfEra();
        org.joda.time.DateTimeField dateTimeField51 = chronology37.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField52 = dateTimeFieldType3.getField(chronology37);
        org.joda.time.DateTimeField dateTimeField53 = chronology37.clockhourOfDay();
        org.joda.time.DurationField durationField54 = durationFieldType2.getField(chronology37);
        boolean boolean55 = dateTimeFieldType0.isSupported(chronology37);
        org.joda.time.DurationField durationField56 = chronology37.months();
        org.joda.time.DurationField durationField57 = chronology37.years();
        org.joda.time.LocalDateTime localDateTime58 = new org.joda.time.LocalDateTime();
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.LocalDateTime localDateTime61 = localDateTime58.withDurationAdded(readableDuration59, (int) '#');
        org.joda.time.LocalDateTime.Property property62 = localDateTime61.weekyear();
        java.lang.String str63 = property62.getAsString();
        java.lang.String str64 = property62.getName();
        org.joda.time.LocalDateTime localDateTime65 = property62.roundHalfEvenCopy();
        org.joda.time.LocalDateTime localDateTime67 = property62.addToCopy(53628039);
        org.joda.time.LocalDateTime.Property property68 = localDateTime67.weekOfWeekyear();
        int[] intArray70 = chronology37.get((org.joda.time.ReadablePartial) localDateTime67, (long) 53719358);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField47 and durationField57", (durationField47.compareTo(durationField57) == 0) == durationField47.equals(durationField57));
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test054");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.DateTimeZone dateTimeZone11 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str13 = dateTimeZone11.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime14 = org.joda.time.LocalDateTime.now(dateTimeZone11);
        org.joda.time.LocalDateTime.Property property15 = localDateTime14.millisOfDay();
        org.joda.time.LocalDateTime localDateTime17 = localDateTime14.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property18 = localDateTime17.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone19 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str21 = dateTimeZone19.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now(dateTimeZone19);
        org.joda.time.LocalDateTime.Property property23 = localDateTime22.millisOfDay();
        org.joda.time.LocalDateTime localDateTime25 = localDateTime22.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime26 = localDateTime22.toDateTime();
        java.lang.String str27 = dateTime26.toString();
        org.joda.time.DateTime dateTime28 = localDateTime17.toDateTime((org.joda.time.ReadableInstant) dateTime26);
        boolean boolean29 = dateTime7.isAfter((org.joda.time.ReadableInstant) dateTime26);
        org.joda.time.DateTimeFieldType dateTimeFieldType30 = org.joda.time.DateTimeFieldType.dayOfMonth();
        java.lang.String str31 = dateTimeFieldType30.getName();
        boolean boolean32 = dateTime26.isSupported(dateTimeFieldType30);
        org.joda.time.Instant instant33 = dateTime26.toInstant();
        org.joda.time.Chronology chronology34 = dateTime26.getChronology();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant33", (dateTime7.compareTo(instant33) == 0) == dateTime7.equals(instant33));
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test055");
        org.joda.time.DurationFieldType durationFieldType0 = org.joda.time.DurationFieldType.hours();
        org.joda.time.DateTimeFieldType dateTimeFieldType1 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone2 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str4 = dateTimeZone2.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime5 = org.joda.time.LocalDateTime.now(dateTimeZone2);
        org.joda.time.LocalDateTime.Property property6 = localDateTime5.millisOfDay();
        org.joda.time.LocalDateTime localDateTime8 = localDateTime5.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime9 = localDateTime5.toDateTime();
        java.lang.String str10 = dateTime9.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int12 = dateTime9.get(dateTimeFieldType11);
        org.joda.time.Chronology chronology13 = dateTime9.getChronology();
        org.joda.time.DateTimeZone dateTimeZone14 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str16 = dateTimeZone14.getShortName((long) (short) 10);
        long long18 = dateTimeZone14.convertUTCToLocal((long) ' ');
        java.lang.String str19 = dateTimeZone14.toString();
        boolean boolean21 = dateTimeZone14.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology22 = chronology13.withZone(dateTimeZone14);
        boolean boolean23 = dateTimeFieldType1.isSupported(chronology22);
        org.joda.time.DateTimeZone dateTimeZone24 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str26 = dateTimeZone24.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime27 = org.joda.time.LocalDateTime.now(dateTimeZone24);
        org.joda.time.LocalDateTime.Property property28 = localDateTime27.millisOfDay();
        org.joda.time.LocalDateTime localDateTime30 = localDateTime27.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime31 = localDateTime27.toDateTime();
        java.lang.String str32 = dateTime31.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType33 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int34 = dateTime31.get(dateTimeFieldType33);
        org.joda.time.Chronology chronology35 = dateTime31.getChronology();
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str38 = dateTimeZone36.getShortName((long) (short) 10);
        long long40 = dateTimeZone36.convertUTCToLocal((long) ' ');
        java.lang.String str41 = dateTimeZone36.toString();
        boolean boolean43 = dateTimeZone36.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology44 = chronology35.withZone(dateTimeZone36);
        org.joda.time.DurationField durationField45 = chronology35.weekyears();
        org.joda.time.DateTimeField dateTimeField46 = chronology35.dayOfYear();
        org.joda.time.DurationField durationField47 = chronology35.weeks();
        org.joda.time.DateTimeField dateTimeField48 = chronology35.yearOfEra();
        org.joda.time.DateTimeField dateTimeField49 = chronology35.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField50 = dateTimeFieldType1.getField(chronology35);
        org.joda.time.DateTimeField dateTimeField51 = chronology35.clockhourOfDay();
        org.joda.time.DurationField durationField52 = durationFieldType0.getField(chronology35);
        org.joda.time.DateTimeZone dateTimeZone53 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str55 = dateTimeZone53.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime56 = org.joda.time.LocalDateTime.now(dateTimeZone53);
        org.joda.time.LocalDateTime.Property property57 = localDateTime56.millisOfDay();
        org.joda.time.LocalDateTime localDateTime59 = localDateTime56.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime61 = localDateTime56.plusHours((int) ' ');
        org.joda.time.DateTimeFieldType dateTimeFieldType62 = org.joda.time.DateTimeFieldType.weekyearOfCentury();
        int int63 = localDateTime61.get(dateTimeFieldType62);
        org.joda.time.LocalDateTime localDateTime65 = localDateTime61.minusWeeks(4);
        org.joda.time.Chronology chronology66 = localDateTime65.getChronology();
        org.joda.time.DurationField durationField67 = durationFieldType0.getField(chronology66);
        org.joda.time.DurationField durationField68 = chronology66.hours();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField52 and durationField68", (durationField52.compareTo(durationField68) == 0) == durationField52.equals(durationField68));
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test056");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone9 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str11 = dateTimeZone9.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(dateTimeZone9);
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.millisOfDay();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime12.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now(dateTimeZone17);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime20.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime24 = localDateTime20.toDateTime();
        java.lang.String str25 = dateTime24.toString();
        org.joda.time.DateTime dateTime26 = localDateTime15.toDateTime((org.joda.time.ReadableInstant) dateTime24);
        boolean boolean27 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.LocalDateTime localDateTime34 = localDateTime31.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime35 = localDateTime31.toDateTime();
        java.lang.String str36 = dateTime35.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int38 = dateTime35.get(dateTimeFieldType37);
        int int39 = dateTime24.compareTo((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.DateTimeZone dateTimeZone40 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str42 = dateTimeZone40.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime43 = org.joda.time.LocalDateTime.now(dateTimeZone40);
        org.joda.time.LocalDateTime.Property property44 = localDateTime43.millisOfDay();
        org.joda.time.LocalDateTime localDateTime46 = localDateTime43.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime47 = localDateTime43.toDateTime();
        java.lang.String str48 = dateTime47.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType49 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int50 = dateTime47.get(dateTimeFieldType49);
        org.joda.time.DateTimeZone dateTimeZone51 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str53 = dateTimeZone51.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime54 = org.joda.time.LocalDateTime.now(dateTimeZone51);
        org.joda.time.LocalDateTime.Property property55 = localDateTime54.millisOfDay();
        org.joda.time.LocalDateTime localDateTime57 = localDateTime54.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property58 = localDateTime57.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone59 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str61 = dateTimeZone59.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime62 = org.joda.time.LocalDateTime.now(dateTimeZone59);
        org.joda.time.LocalDateTime.Property property63 = localDateTime62.millisOfDay();
        org.joda.time.LocalDateTime localDateTime65 = localDateTime62.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime66 = localDateTime62.toDateTime();
        java.lang.String str67 = dateTime66.toString();
        org.joda.time.DateTime dateTime68 = localDateTime57.toDateTime((org.joda.time.ReadableInstant) dateTime66);
        boolean boolean69 = dateTime47.isAfter((org.joda.time.ReadableInstant) dateTime66);
        boolean boolean70 = dateTime24.isBefore((org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.DateTimeZone dateTimeZone71 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str73 = dateTimeZone71.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime74 = org.joda.time.LocalDateTime.now(dateTimeZone71);
        org.joda.time.LocalDateTime.Property property75 = localDateTime74.millisOfDay();
        org.joda.time.LocalDateTime localDateTime77 = localDateTime74.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime78 = localDateTime74.toDateTime();
        java.lang.String str79 = dateTime78.toString();
        org.joda.time.DateTimeZone dateTimeZone80 = dateTime78.getZone();
        long long81 = dateTime78.getMillis();
        boolean boolean82 = dateTime24.isAfter((org.joda.time.ReadableInstant) dateTime78);
        org.joda.time.Instant instant83 = dateTime24.toInstant();
        java.lang.String str84 = dateTime24.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant83", (dateTime7.compareTo(instant83) == 0) == dateTime7.equals(instant83));
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test057");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DateTimeField dateTimeField21 = chronology11.yearOfCentury();
        org.joda.time.DurationField durationField22 = chronology11.eras();
        org.joda.time.DateTimeField dateTimeField23 = chronology11.yearOfEra();
        org.joda.time.LocalDateTime localDateTime24 = new org.joda.time.LocalDateTime(chronology11);
        org.joda.time.DurationField durationField25 = chronology11.minutes();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField22, durationField25, and durationField22", !(durationField22.compareTo(durationField25) == 0) || (Math.signum(durationField22.compareTo(durationField22)) == Math.signum(durationField25.compareTo(durationField22))));
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test058");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        long long4 = dateTimeZone0.convertUTCToLocal((long) ' ');
        java.lang.String str5 = dateTimeZone0.toString();
        boolean boolean7 = dateTimeZone0.equals((java.lang.Object) (short) 100);
        java.util.Locale locale9 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str10 = dateTimeZone0.getShortName((long) (-1), locale9);
        long long13 = dateTimeZone0.convertLocalToUTC((long) (short) 10, true);
        long long15 = dateTimeZone0.previousTransition((long) 10);
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        long long20 = dateTimeZone16.convertUTCToLocal((long) ' ');
        java.lang.String str21 = dateTimeZone16.toString();
        boolean boolean23 = dateTimeZone16.equals((java.lang.Object) (short) 100);
        java.util.Locale locale25 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str26 = dateTimeZone16.getShortName((long) (-1), locale25);
        long long29 = dateTimeZone16.convertLocalToUTC((long) (short) 10, true);
        boolean boolean30 = dateTimeZone0.equals((java.lang.Object) long29);
        org.joda.time.DateTimeZone dateTimeZone31 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str33 = dateTimeZone31.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime34 = org.joda.time.LocalDateTime.now(dateTimeZone31);
        org.joda.time.LocalDateTime.Property property35 = localDateTime34.millisOfDay();
        org.joda.time.LocalDateTime localDateTime37 = localDateTime34.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime39 = localDateTime34.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime41 = localDateTime39.minusHours((int) (short) 10);
        boolean boolean42 = dateTimeZone0.isLocalDateTimeGap(localDateTime41);
        org.joda.time.DurationFieldType durationFieldType43 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean44 = localDateTime41.isSupported(durationFieldType43);
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now(dateTimeZone45);
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.millisOfDay();
        org.joda.time.LocalDateTime localDateTime51 = localDateTime48.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property52 = localDateTime51.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone53 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str55 = dateTimeZone53.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime56 = org.joda.time.LocalDateTime.now(dateTimeZone53);
        org.joda.time.LocalDateTime.Property property57 = localDateTime56.millisOfDay();
        org.joda.time.LocalDateTime localDateTime59 = localDateTime56.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime60 = localDateTime56.toDateTime();
        java.lang.String str61 = dateTime60.toString();
        org.joda.time.DateTime dateTime62 = localDateTime51.toDateTime((org.joda.time.ReadableInstant) dateTime60);
        org.joda.time.Chronology chronology63 = dateTime62.getChronology();
        org.joda.time.DurationField durationField64 = durationFieldType43.getField(chronology63);
        org.joda.time.DurationField durationField65 = chronology63.seconds();
        org.joda.time.DurationField durationField66 = chronology63.eras();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField66, durationField64, and durationField65", !(durationField66.compareTo(durationField64) == 0) || (Math.signum(durationField66.compareTo(durationField65)) == Math.signum(durationField64.compareTo(durationField65))));
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test059");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.monthOfYear();
        org.joda.time.DurationFieldType durationFieldType1 = dateTimeFieldType0.getDurationType();
        org.joda.time.DateTimeFieldType dateTimeFieldType2 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone3 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str5 = dateTimeZone3.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime6 = org.joda.time.LocalDateTime.now(dateTimeZone3);
        org.joda.time.LocalDateTime.Property property7 = localDateTime6.millisOfDay();
        org.joda.time.LocalDateTime localDateTime9 = localDateTime6.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime10 = localDateTime6.toDateTime();
        java.lang.String str11 = dateTime10.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType12 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int13 = dateTime10.get(dateTimeFieldType12);
        org.joda.time.Chronology chronology14 = dateTime10.getChronology();
        org.joda.time.DateTimeZone dateTimeZone15 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str17 = dateTimeZone15.getShortName((long) (short) 10);
        long long19 = dateTimeZone15.convertUTCToLocal((long) ' ');
        java.lang.String str20 = dateTimeZone15.toString();
        boolean boolean22 = dateTimeZone15.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology23 = chronology14.withZone(dateTimeZone15);
        org.joda.time.DateTimeField dateTimeField24 = chronology23.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField25 = dateTimeFieldType2.getField(chronology23);
        org.joda.time.DateTimeZone dateTimeZone26 = chronology23.getZone();
        org.joda.time.DateTimeField dateTimeField27 = chronology23.halfdayOfDay();
        boolean boolean28 = durationFieldType1.isSupported(chronology23);
        org.joda.time.DurationField durationField29 = chronology23.eras();
        org.joda.time.DateTimeField dateTimeField30 = chronology23.year();
        org.joda.time.DurationField durationField31 = chronology23.seconds();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField29, durationField31, and durationField29", !(durationField29.compareTo(durationField31) == 0) || (Math.signum(durationField29.compareTo(durationField29)) == Math.signum(durationField31.compareTo(durationField29))));
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test060");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.monthOfYear();
        org.joda.time.DurationFieldType durationFieldType1 = dateTimeFieldType0.getDurationType();
        org.joda.time.DateTimeFieldType dateTimeFieldType2 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone3 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str5 = dateTimeZone3.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime6 = org.joda.time.LocalDateTime.now(dateTimeZone3);
        org.joda.time.LocalDateTime.Property property7 = localDateTime6.millisOfDay();
        org.joda.time.LocalDateTime localDateTime9 = localDateTime6.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime10 = localDateTime6.toDateTime();
        java.lang.String str11 = dateTime10.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType12 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int13 = dateTime10.get(dateTimeFieldType12);
        org.joda.time.Chronology chronology14 = dateTime10.getChronology();
        org.joda.time.DateTimeZone dateTimeZone15 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str17 = dateTimeZone15.getShortName((long) (short) 10);
        long long19 = dateTimeZone15.convertUTCToLocal((long) ' ');
        java.lang.String str20 = dateTimeZone15.toString();
        boolean boolean22 = dateTimeZone15.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology23 = chronology14.withZone(dateTimeZone15);
        org.joda.time.DateTimeField dateTimeField24 = chronology23.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField25 = dateTimeFieldType2.getField(chronology23);
        org.joda.time.DateTimeZone dateTimeZone26 = chronology23.getZone();
        org.joda.time.DateTimeField dateTimeField27 = chronology23.halfdayOfDay();
        boolean boolean28 = durationFieldType1.isSupported(chronology23);
        org.joda.time.DurationField durationField29 = chronology23.eras();
        org.joda.time.DurationField durationField30 = chronology23.centuries();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField29, durationField30, and durationField29", !(durationField29.compareTo(durationField30) == 0) || (Math.signum(durationField29.compareTo(durationField29)) == Math.signum(durationField30.compareTo(durationField29))));
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test061");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.DateTimeZone dateTimeZone11 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str13 = dateTimeZone11.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime14 = org.joda.time.LocalDateTime.now(dateTimeZone11);
        org.joda.time.LocalDateTime.Property property15 = localDateTime14.millisOfDay();
        org.joda.time.LocalDateTime localDateTime17 = localDateTime14.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property18 = localDateTime17.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone19 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str21 = dateTimeZone19.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now(dateTimeZone19);
        org.joda.time.LocalDateTime.Property property23 = localDateTime22.millisOfDay();
        org.joda.time.LocalDateTime localDateTime25 = localDateTime22.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime26 = localDateTime22.toDateTime();
        java.lang.String str27 = dateTime26.toString();
        org.joda.time.DateTime dateTime28 = localDateTime17.toDateTime((org.joda.time.ReadableInstant) dateTime26);
        boolean boolean29 = dateTime7.isAfter((org.joda.time.ReadableInstant) dateTime26);
        org.joda.time.DateTimeFieldType dateTimeFieldType30 = org.joda.time.DateTimeFieldType.dayOfMonth();
        java.lang.String str31 = dateTimeFieldType30.getName();
        boolean boolean32 = dateTime26.isSupported(dateTimeFieldType30);
        java.util.Locale locale35 = new java.util.Locale("2022-02-21T14:54:01.939Z", "2022-02-21T14:53:53.634Z");
        boolean boolean36 = dateTime26.equals((java.lang.Object) locale35);
        long long37 = dateTime26.getMillis();
        org.joda.time.DateTimeZone dateTimeZone38 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str40 = dateTimeZone38.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime41 = org.joda.time.LocalDateTime.now(dateTimeZone38);
        org.joda.time.LocalDateTime.Property property42 = localDateTime41.millisOfDay();
        org.joda.time.LocalDateTime localDateTime44 = localDateTime41.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime45 = localDateTime41.toDateTime();
        java.lang.String str46 = dateTime45.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType47 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int48 = dateTime45.get(dateTimeFieldType47);
        org.joda.time.Chronology chronology49 = dateTime45.getChronology();
        java.lang.Object obj50 = null;
        boolean boolean51 = dateTime45.equals(obj50);
        long long52 = dateTime45.getMillis();
        org.joda.time.Instant instant53 = dateTime45.toInstant();
        org.joda.time.DateTimeZone dateTimeZone54 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str56 = dateTimeZone54.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime57 = org.joda.time.LocalDateTime.now(dateTimeZone54);
        org.joda.time.LocalDateTime.Property property58 = localDateTime57.millisOfDay();
        org.joda.time.LocalDateTime localDateTime60 = localDateTime57.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime61 = localDateTime57.toDateTime();
        java.lang.String str62 = dateTime61.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType63 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int64 = dateTime61.get(dateTimeFieldType63);
        org.joda.time.Chronology chronology65 = dateTime61.getChronology();
        java.lang.Object obj66 = null;
        boolean boolean67 = dateTime61.equals(obj66);
        long long68 = dateTime61.getMillis();
        boolean boolean69 = dateTime45.isAfter((org.joda.time.ReadableInstant) dateTime61);
        boolean boolean70 = dateTime26.isEqual((org.joda.time.ReadableInstant) dateTime61);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant53", (dateTime7.compareTo(instant53) == 0) == dateTime7.equals(instant53));
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test062");
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        long long5 = dateTimeZone1.convertUTCToLocal((long) ' ');
        java.lang.String str6 = dateTimeZone1.toString();
        long long9 = dateTimeZone1.adjustOffset((long) (short) 100, false);
        org.joda.time.LocalDateTime localDateTime10 = new org.joda.time.LocalDateTime((long) '4', dateTimeZone1);
        java.util.TimeZone timeZone11 = dateTimeZone1.toTimeZone();
        long long14 = dateTimeZone1.adjustOffset(0L, false);
        org.joda.time.DateTimeZone dateTimeZone15 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str17 = dateTimeZone15.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now(dateTimeZone15);
        org.joda.time.LocalDateTime.Property property19 = localDateTime18.millisOfDay();
        org.joda.time.LocalDateTime localDateTime21 = localDateTime18.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime22 = localDateTime18.toDateTime();
        java.lang.String str23 = dateTime22.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType24 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int25 = dateTime22.get(dateTimeFieldType24);
        org.joda.time.Chronology chronology26 = dateTime22.getChronology();
        java.lang.Object obj27 = null;
        boolean boolean28 = dateTime22.equals(obj27);
        long long29 = dateTime22.getMillis();
        org.joda.time.Instant instant30 = dateTime22.toInstant();
        org.joda.time.DateTimeZone dateTimeZone31 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str33 = dateTimeZone31.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime34 = org.joda.time.LocalDateTime.now(dateTimeZone31);
        org.joda.time.LocalDateTime.Property property35 = localDateTime34.millisOfDay();
        org.joda.time.LocalDateTime localDateTime37 = localDateTime34.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime38 = localDateTime34.toDateTime();
        java.lang.String str39 = dateTime38.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType40 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int41 = dateTime38.get(dateTimeFieldType40);
        org.joda.time.Chronology chronology42 = dateTime38.getChronology();
        java.lang.Object obj43 = null;
        boolean boolean44 = dateTime38.equals(obj43);
        long long45 = dateTime38.getMillis();
        boolean boolean46 = dateTime22.isAfter((org.joda.time.ReadableInstant) dateTime38);
        int int47 = dateTimeZone1.getOffset((org.joda.time.ReadableInstant) dateTime38);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime22 and instant30", (dateTime22.compareTo(instant30) == 0) == dateTime22.equals(instant30));
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test063");
        org.joda.time.DateTimeZone dateTimeZone2 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str4 = dateTimeZone2.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime5 = org.joda.time.LocalDateTime.now(dateTimeZone2);
        org.joda.time.LocalDateTime.Property property6 = localDateTime5.millisOfDay();
        org.joda.time.LocalDateTime localDateTime8 = localDateTime5.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime9 = localDateTime5.toDateTime();
        java.lang.String str10 = dateTime9.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int12 = dateTime9.get(dateTimeFieldType11);
        org.joda.time.Chronology chronology13 = dateTime9.getChronology();
        org.joda.time.DateTimeField dateTimeField14 = chronology13.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField15 = chronology13.clockhourOfHalfday();
        org.joda.time.LocalDateTime localDateTime16 = new org.joda.time.LocalDateTime((long) (short) 100, chronology13);
        org.joda.time.DateTimeField dateTimeField17 = chronology13.yearOfCentury();
        org.joda.time.LocalDateTime localDateTime18 = new org.joda.time.LocalDateTime(53L, chronology13);
        org.joda.time.DateTimeField dateTimeField19 = chronology13.dayOfMonth();
        org.joda.time.DurationField durationField20 = chronology13.seconds();
        org.joda.time.DurationField durationField21 = chronology13.eras();
        org.joda.time.DateTimeField dateTimeField22 = chronology13.secondOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField20 and durationField21", Math.signum(durationField20.compareTo(durationField21)) == -Math.signum(durationField21.compareTo(durationField20)));
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test064");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        java.lang.Object obj12 = null;
        boolean boolean13 = dateTime7.equals(obj12);
        long long14 = dateTime7.getMillis();
        org.joda.time.Instant instant15 = dateTime7.toInstant();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now(dateTimeZone16);
        org.joda.time.LocalDateTime.Property property20 = localDateTime19.millisOfDay();
        java.lang.String str21 = property20.getName();
        int int22 = property20.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = property20.getFieldType();
        org.joda.time.LocalDateTime localDateTime24 = property20.withMinimumValue();
        org.joda.time.LocalDateTime.Property property25 = localDateTime24.weekOfWeekyear();
        boolean boolean26 = dateTime7.equals((java.lang.Object) property25);
        java.lang.String str27 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.LocalDateTime localDateTime34 = localDateTime31.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property35 = localDateTime34.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str38 = dateTimeZone36.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime39 = org.joda.time.LocalDateTime.now(dateTimeZone36);
        org.joda.time.LocalDateTime.Property property40 = localDateTime39.millisOfDay();
        org.joda.time.LocalDateTime localDateTime42 = localDateTime39.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime43 = localDateTime39.toDateTime();
        java.lang.String str44 = dateTime43.toString();
        org.joda.time.DateTime dateTime45 = localDateTime34.toDateTime((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.DateTimeZone dateTimeZone46 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str48 = dateTimeZone46.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime49 = org.joda.time.LocalDateTime.now(dateTimeZone46);
        org.joda.time.LocalDateTime.Property property50 = localDateTime49.millisOfDay();
        org.joda.time.LocalDateTime localDateTime52 = localDateTime49.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime53 = localDateTime49.toDateTime();
        java.lang.String str54 = dateTime53.toString();
        int int55 = dateTime43.compareTo((org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.DateTimeZone dateTimeZone56 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str58 = dateTimeZone56.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime59 = org.joda.time.LocalDateTime.now(dateTimeZone56);
        org.joda.time.LocalDateTime.Property property60 = localDateTime59.millisOfDay();
        org.joda.time.LocalDateTime localDateTime62 = localDateTime59.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property63 = localDateTime62.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone64 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str66 = dateTimeZone64.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime67 = org.joda.time.LocalDateTime.now(dateTimeZone64);
        org.joda.time.LocalDateTime.Property property68 = localDateTime67.millisOfDay();
        org.joda.time.LocalDateTime localDateTime70 = localDateTime67.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime71 = localDateTime67.toDateTime();
        java.lang.String str72 = dateTime71.toString();
        org.joda.time.DateTime dateTime73 = localDateTime62.toDateTime((org.joda.time.ReadableInstant) dateTime71);
        org.joda.time.DateTimeZone dateTimeZone74 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str76 = dateTimeZone74.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime77 = org.joda.time.LocalDateTime.now(dateTimeZone74);
        org.joda.time.LocalDateTime.Property property78 = localDateTime77.millisOfDay();
        org.joda.time.LocalDateTime localDateTime80 = localDateTime77.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime81 = localDateTime77.toDateTime();
        java.lang.String str82 = dateTime81.toString();
        int int83 = dateTime71.compareTo((org.joda.time.ReadableInstant) dateTime81);
        boolean boolean84 = dateTime53.isAfter((org.joda.time.ReadableInstant) dateTime71);
        org.joda.time.DateTimeFieldType dateTimeFieldType85 = org.joda.time.DateTimeFieldType.dayOfMonth();
        java.lang.String str86 = dateTimeFieldType85.getName();
        int int87 = dateTime53.get(dateTimeFieldType85);
        boolean boolean88 = dateTime7.isSupported(dateTimeFieldType85);
        org.joda.time.DateTimeZone dateTimeZone89 = dateTime7.getZone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant15 and dateTime43", (instant15.compareTo(dateTime43) == 0) == instant15.equals(dateTime43));
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test065");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime8 = localDateTime3.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime10 = localDateTime8.withMillisOfDay(53620101);
        org.joda.time.LocalDateTime.Property property11 = localDateTime8.secondOfMinute();
        org.joda.time.LocalDateTime localDateTime12 = property11.roundCeilingCopy();
        int int13 = property11.get();
        org.joda.time.DateTimeZone dateTimeZone14 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str16 = dateTimeZone14.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime17 = org.joda.time.LocalDateTime.now(dateTimeZone14);
        org.joda.time.LocalDateTime.Property property18 = localDateTime17.millisOfDay();
        org.joda.time.LocalDateTime localDateTime20 = localDateTime17.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime21 = localDateTime17.toDateTime();
        java.lang.String str22 = dateTime21.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int24 = dateTime21.get(dateTimeFieldType23);
        org.joda.time.Chronology chronology25 = dateTime21.getChronology();
        java.lang.Object obj26 = null;
        boolean boolean27 = dateTime21.equals(obj26);
        long long28 = dateTime21.getMillis();
        org.joda.time.Instant instant29 = dateTime21.toInstant();
        int int30 = property11.compareTo((org.joda.time.ReadableInstant) instant29);
        java.util.Locale.Builder builder31 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder32 = builder31.clearExtensions();
        java.util.Locale locale33 = builder32.build();
        java.util.Locale locale34 = java.util.Locale.ROOT;
        java.util.Set<java.lang.String> strSet35 = locale34.getUnicodeLocaleAttributes();
        java.lang.String str36 = locale33.getDisplayVariant(locale34);
        java.lang.String str38 = locale33.getExtension('u');
        int int39 = property11.getMaximumShortTextLength(locale33);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime21 and instant29", (dateTime21.compareTo(instant29) == 0) == dateTime21.equals(instant29));
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test066");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.clockhourOfHalfday();
        java.lang.String str1 = dateTimeFieldType0.toString();
        org.joda.time.DurationFieldType durationFieldType2 = org.joda.time.DurationFieldType.hours();
        org.joda.time.DateTimeFieldType dateTimeFieldType3 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone4 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str6 = dateTimeZone4.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime7 = org.joda.time.LocalDateTime.now(dateTimeZone4);
        org.joda.time.LocalDateTime.Property property8 = localDateTime7.millisOfDay();
        org.joda.time.LocalDateTime localDateTime10 = localDateTime7.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime11 = localDateTime7.toDateTime();
        java.lang.String str12 = dateTime11.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType13 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int14 = dateTime11.get(dateTimeFieldType13);
        org.joda.time.Chronology chronology15 = dateTime11.getChronology();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        long long20 = dateTimeZone16.convertUTCToLocal((long) ' ');
        java.lang.String str21 = dateTimeZone16.toString();
        boolean boolean23 = dateTimeZone16.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology24 = chronology15.withZone(dateTimeZone16);
        boolean boolean25 = dateTimeFieldType3.isSupported(chronology24);
        org.joda.time.DateTimeZone dateTimeZone26 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str28 = dateTimeZone26.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime29 = org.joda.time.LocalDateTime.now(dateTimeZone26);
        org.joda.time.LocalDateTime.Property property30 = localDateTime29.millisOfDay();
        org.joda.time.LocalDateTime localDateTime32 = localDateTime29.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime33 = localDateTime29.toDateTime();
        java.lang.String str34 = dateTime33.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int36 = dateTime33.get(dateTimeFieldType35);
        org.joda.time.Chronology chronology37 = dateTime33.getChronology();
        org.joda.time.DateTimeZone dateTimeZone38 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str40 = dateTimeZone38.getShortName((long) (short) 10);
        long long42 = dateTimeZone38.convertUTCToLocal((long) ' ');
        java.lang.String str43 = dateTimeZone38.toString();
        boolean boolean45 = dateTimeZone38.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology46 = chronology37.withZone(dateTimeZone38);
        org.joda.time.DurationField durationField47 = chronology37.weekyears();
        org.joda.time.DateTimeField dateTimeField48 = chronology37.dayOfYear();
        org.joda.time.DurationField durationField49 = chronology37.weeks();
        org.joda.time.DateTimeField dateTimeField50 = chronology37.yearOfEra();
        org.joda.time.DateTimeField dateTimeField51 = chronology37.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField52 = dateTimeFieldType3.getField(chronology37);
        org.joda.time.DateTimeField dateTimeField53 = chronology37.clockhourOfDay();
        org.joda.time.DurationField durationField54 = durationFieldType2.getField(chronology37);
        boolean boolean55 = dateTimeFieldType0.isSupported(chronology37);
        org.joda.time.DurationField durationField56 = chronology37.months();
        org.joda.time.DurationField durationField57 = chronology37.years();
        org.joda.time.DateTimeField dateTimeField58 = chronology37.halfdayOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField47 and durationField57", (durationField47.compareTo(durationField57) == 0) == durationField47.equals(durationField57));
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test067");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        long long4 = dateTimeZone0.convertUTCToLocal((long) ' ');
        org.joda.time.DateTimeZone dateTimeZone5 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str7 = dateTimeZone5.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime8 = org.joda.time.LocalDateTime.now(dateTimeZone5);
        org.joda.time.LocalDateTime.Property property9 = localDateTime8.millisOfDay();
        org.joda.time.LocalDateTime localDateTime11 = localDateTime8.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime12 = localDateTime8.toDateTime();
        java.lang.String str13 = dateTime12.toString();
        org.joda.time.DateTimeZone dateTimeZone14 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str16 = dateTimeZone14.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime17 = org.joda.time.LocalDateTime.now(dateTimeZone14);
        org.joda.time.LocalDateTime.Property property18 = localDateTime17.millisOfDay();
        org.joda.time.LocalDateTime localDateTime20 = localDateTime17.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone22 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str24 = dateTimeZone22.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime25 = org.joda.time.LocalDateTime.now(dateTimeZone22);
        org.joda.time.LocalDateTime.Property property26 = localDateTime25.millisOfDay();
        org.joda.time.LocalDateTime localDateTime28 = localDateTime25.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime29 = localDateTime25.toDateTime();
        java.lang.String str30 = dateTime29.toString();
        org.joda.time.DateTime dateTime31 = localDateTime20.toDateTime((org.joda.time.ReadableInstant) dateTime29);
        boolean boolean32 = dateTime12.isBefore((org.joda.time.ReadableInstant) dateTime29);
        org.joda.time.DateTimeZone dateTimeZone33 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str35 = dateTimeZone33.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime36 = org.joda.time.LocalDateTime.now(dateTimeZone33);
        org.joda.time.LocalDateTime.Property property37 = localDateTime36.millisOfDay();
        org.joda.time.LocalDateTime localDateTime39 = localDateTime36.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime40 = localDateTime36.toDateTime();
        java.lang.String str41 = dateTime40.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType42 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int43 = dateTime40.get(dateTimeFieldType42);
        org.joda.time.DateTimeZone dateTimeZone44 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str46 = dateTimeZone44.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime47 = org.joda.time.LocalDateTime.now(dateTimeZone44);
        org.joda.time.LocalDateTime.Property property48 = localDateTime47.millisOfDay();
        org.joda.time.LocalDateTime localDateTime50 = localDateTime47.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property51 = localDateTime50.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone52 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str54 = dateTimeZone52.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime55 = org.joda.time.LocalDateTime.now(dateTimeZone52);
        org.joda.time.LocalDateTime.Property property56 = localDateTime55.millisOfDay();
        org.joda.time.LocalDateTime localDateTime58 = localDateTime55.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime59 = localDateTime55.toDateTime();
        java.lang.String str60 = dateTime59.toString();
        org.joda.time.DateTime dateTime61 = localDateTime50.toDateTime((org.joda.time.ReadableInstant) dateTime59);
        boolean boolean62 = dateTime40.isAfter((org.joda.time.ReadableInstant) dateTime59);
        boolean boolean63 = dateTime12.isBefore((org.joda.time.ReadableInstant) dateTime40);
        java.lang.String str64 = dateTime12.toString();
        int int65 = dateTimeZone0.getOffset((org.joda.time.ReadableInstant) dateTime12);
        org.joda.time.Instant instant66 = dateTime12.toInstant();
        org.joda.time.DateTimeZone dateTimeZone67 = instant66.getZone();
        long long70 = dateTimeZone67.adjustOffset((long) 91, true);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime12 and instant66", (dateTime12.compareTo(instant66) == 0) == dateTime12.equals(instant66));
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test068");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        org.joda.time.DateTimeField dateTimeField22 = chronology21.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField23 = dateTimeFieldType0.getField(chronology21);
        org.joda.time.Chronology chronology24 = chronology21.withUTC();
        org.joda.time.DurationField durationField25 = chronology24.millis();
        org.joda.time.DurationField durationField26 = chronology24.weekyears();
        org.joda.time.DateTimeField dateTimeField27 = chronology24.dayOfYear();
        org.joda.time.DateTimeField dateTimeField28 = chronology24.yearOfEra();
        org.joda.time.DurationField durationField29 = dateTimeField28.getDurationField();
        boolean boolean30 = dateTimeField28.isSupported();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField26 and durationField29", (durationField26.compareTo(durationField29) == 0) == durationField26.equals(durationField29));
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test069");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeField dateTimeField12 = chronology11.weekyearOfCentury();
        org.joda.time.DurationField durationField13 = chronology11.millis();
        org.joda.time.DurationField durationField14 = chronology11.eras();
        long long18 = chronology11.add((long) 532, (long) 53805180, 975);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField13 and durationField14", Math.signum(durationField13.compareTo(durationField14)) == -Math.signum(durationField14.compareTo(durationField13)));
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test070");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(chronology11);
        org.joda.time.DateTimeField dateTimeField13 = chronology11.dayOfYear();
        org.joda.time.DurationField durationField14 = chronology11.eras();
        org.joda.time.DateTimeZone dateTimeZone15 = chronology11.getZone();
        org.joda.time.DurationField durationField16 = chronology11.weeks();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField14, durationField16, and durationField14", !(durationField14.compareTo(durationField16) == 0) || (Math.signum(durationField14.compareTo(durationField14)) == Math.signum(durationField16.compareTo(durationField14))));
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test071");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.millisOfSecond();
        org.joda.time.DateTimeZone dateTimeZone2 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str4 = dateTimeZone2.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime5 = org.joda.time.LocalDateTime.now(dateTimeZone2);
        org.joda.time.LocalDateTime.Property property6 = localDateTime5.millisOfDay();
        org.joda.time.LocalDateTime localDateTime8 = localDateTime5.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime9 = localDateTime5.toDateTime();
        java.lang.String str10 = dateTime9.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int12 = dateTime9.get(dateTimeFieldType11);
        org.joda.time.Chronology chronology13 = dateTime9.getChronology();
        org.joda.time.DateTimeZone dateTimeZone14 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str16 = dateTimeZone14.getShortName((long) (short) 10);
        long long18 = dateTimeZone14.convertUTCToLocal((long) ' ');
        java.lang.String str19 = dateTimeZone14.toString();
        boolean boolean21 = dateTimeZone14.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology22 = chronology13.withZone(dateTimeZone14);
        org.joda.time.DateTimeField dateTimeField23 = chronology13.yearOfCentury();
        org.joda.time.LocalDateTime localDateTime24 = new org.joda.time.LocalDateTime((long) 69, chronology13);
        org.joda.time.DurationField durationField25 = chronology13.weekyears();
        org.joda.time.DateTimeField dateTimeField26 = chronology13.millisOfSecond();
        org.joda.time.DurationField durationField27 = chronology13.seconds();
        boolean boolean28 = dateTimeFieldType0.isSupported(chronology13);
        org.joda.time.DurationFieldType durationFieldType29 = dateTimeFieldType0.getRangeDurationType();
        java.lang.String str30 = durationFieldType29.toString();
        org.joda.time.DateTimeZone dateTimeZone31 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str33 = dateTimeZone31.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime34 = org.joda.time.LocalDateTime.now(dateTimeZone31);
        org.joda.time.LocalDateTime.Property property35 = localDateTime34.millisOfDay();
        org.joda.time.LocalDateTime localDateTime37 = localDateTime34.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime38 = localDateTime34.toDateTime();
        java.lang.String str39 = dateTime38.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType40 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int41 = dateTime38.get(dateTimeFieldType40);
        org.joda.time.Chronology chronology42 = dateTime38.getChronology();
        org.joda.time.Chronology chronology43 = chronology42.withUTC();
        org.joda.time.DateTimeField dateTimeField44 = chronology43.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField45 = chronology43.hourOfHalfday();
        org.joda.time.DurationField durationField46 = chronology43.minutes();
        org.joda.time.DurationField durationField47 = chronology43.weekyears();
        org.joda.time.DateTimeField dateTimeField48 = chronology43.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField49 = chronology43.weekOfWeekyear();
        org.joda.time.DurationField durationField50 = chronology43.days();
        org.joda.time.DateTimeField dateTimeField51 = chronology43.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField52 = chronology43.dayOfYear();
        org.joda.time.DurationField durationField53 = durationFieldType29.getField(chronology43);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField25 and durationField47", (durationField25.compareTo(durationField47) == 0) == durationField25.equals(durationField47));
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test072");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime8 = localDateTime3.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime10 = localDateTime8.withMillisOfDay(53620101);
        org.joda.time.LocalDateTime localDateTime12 = localDateTime10.minusMonths((-1));
        org.joda.time.LocalDateTime localDateTime14 = localDateTime10.plusSeconds(0);
        org.joda.time.LocalDateTime.Property property15 = localDateTime14.centuryOfEra();
        org.joda.time.LocalDateTime localDateTime16 = property15.roundCeilingCopy();
        org.joda.time.LocalDateTime.Property property17 = localDateTime16.hourOfDay();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime25 = localDateTime21.toDateTime();
        long long26 = property17.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.DateTimeZone dateTimeZone27 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str29 = dateTimeZone27.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime30 = org.joda.time.LocalDateTime.now(dateTimeZone27);
        org.joda.time.LocalDateTime.Property property31 = localDateTime30.millisOfDay();
        org.joda.time.ReadableInstant readableInstant32 = null;
        long long33 = property31.getDifferenceAsLong(readableInstant32);
        java.util.Locale locale34 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str35 = locale34.getISO3Language();
        java.lang.String str36 = property31.getAsShortText(locale34);
        org.joda.time.LocalDateTime localDateTime38 = property31.addToCopy((int) '4');
        org.joda.time.LocalDateTime localDateTime39 = property31.roundHalfEvenCopy();
        org.joda.time.DateTime dateTime40 = localDateTime39.toDateTime();
        boolean boolean41 = dateTime25.isAfter((org.joda.time.ReadableInstant) dateTime40);
        java.lang.String str42 = dateTime25.toString();
        org.joda.time.Instant instant43 = dateTime25.toInstant();
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        long long49 = dateTimeZone45.convertUTCToLocal((long) ' ');
        java.lang.String str50 = dateTimeZone45.toString();
        long long53 = dateTimeZone45.adjustOffset((long) (short) 100, false);
        org.joda.time.LocalDateTime localDateTime54 = new org.joda.time.LocalDateTime((long) '4', dateTimeZone45);
        org.joda.time.DateTimeZone dateTimeZone55 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str57 = dateTimeZone55.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime58 = org.joda.time.LocalDateTime.now(dateTimeZone55);
        org.joda.time.LocalDateTime.Property property59 = localDateTime58.millisOfDay();
        org.joda.time.LocalDateTime localDateTime61 = localDateTime58.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime62 = localDateTime58.toDateTime();
        java.lang.String str63 = dateTime62.toString();
        int int64 = dateTimeZone45.getOffset((org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.Chronology chronology65 = dateTime62.getChronology();
        org.joda.time.Instant instant66 = dateTime62.toInstant();
        boolean boolean67 = dateTime25.isEqual((org.joda.time.ReadableInstant) dateTime62);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime40 and instant43", (dateTime40.compareTo(instant43) == 0) == dateTime40.equals(instant43));
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test073");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        long long5 = property4.remainder();
        org.joda.time.LocalDateTime localDateTime6 = property4.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime7 = property4.roundFloorCopy();
        java.lang.String str8 = property4.getAsShortText();
        int int9 = property4.getMinimumValue();
        org.joda.time.Interval interval10 = property4.toInterval();
        org.joda.time.DateTimeField dateTimeField11 = property4.getField();
        java.lang.String str12 = property4.getAsShortText();
        org.joda.time.LocalDateTime localDateTime14 = property4.addWrapFieldToCopy(894);
        org.joda.time.DateTimeZone dateTimeZone15 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str17 = dateTimeZone15.getShortName((long) (short) 10);
        long long19 = dateTimeZone15.convertUTCToLocal((long) ' ');
        java.lang.String str20 = dateTimeZone15.toString();
        org.joda.time.DateTimeZone dateTimeZone21 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str23 = dateTimeZone21.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime24 = org.joda.time.LocalDateTime.now(dateTimeZone21);
        org.joda.time.LocalDateTime.Property property25 = localDateTime24.millisOfDay();
        org.joda.time.LocalDateTime localDateTime27 = localDateTime24.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property28 = localDateTime27.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone29 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str31 = dateTimeZone29.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime32 = org.joda.time.LocalDateTime.now(dateTimeZone29);
        org.joda.time.LocalDateTime.Property property33 = localDateTime32.millisOfDay();
        org.joda.time.LocalDateTime localDateTime35 = localDateTime32.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime36 = localDateTime32.toDateTime();
        java.lang.String str37 = dateTime36.toString();
        org.joda.time.DateTime dateTime38 = localDateTime27.toDateTime((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.DateTimeZone dateTimeZone39 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str41 = dateTimeZone39.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime42 = org.joda.time.LocalDateTime.now(dateTimeZone39);
        org.joda.time.LocalDateTime.Property property43 = localDateTime42.millisOfDay();
        org.joda.time.LocalDateTime localDateTime45 = localDateTime42.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime46 = localDateTime42.toDateTime();
        java.lang.String str47 = dateTime46.toString();
        int int48 = dateTime36.compareTo((org.joda.time.ReadableInstant) dateTime46);
        long long49 = dateTime36.getMillis();
        int int50 = dateTimeZone15.getOffset((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.LocalDateTime localDateTime51 = org.joda.time.LocalDateTime.now(dateTimeZone15);
        org.joda.time.DateTime dateTime52 = localDateTime14.toDateTime(dateTimeZone15);
        org.joda.time.DateTimeZone dateTimeZone53 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str55 = dateTimeZone53.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime56 = org.joda.time.LocalDateTime.now(dateTimeZone53);
        org.joda.time.LocalDateTime.Property property57 = localDateTime56.millisOfDay();
        org.joda.time.LocalDateTime localDateTime59 = localDateTime56.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime60 = localDateTime56.toDateTime();
        java.lang.String str61 = dateTime60.toString();
        org.joda.time.DateTimeZone dateTimeZone62 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str64 = dateTimeZone62.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime65 = org.joda.time.LocalDateTime.now(dateTimeZone62);
        org.joda.time.LocalDateTime.Property property66 = localDateTime65.millisOfDay();
        org.joda.time.LocalDateTime localDateTime68 = localDateTime65.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property69 = localDateTime68.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone70 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str72 = dateTimeZone70.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime73 = org.joda.time.LocalDateTime.now(dateTimeZone70);
        org.joda.time.LocalDateTime.Property property74 = localDateTime73.millisOfDay();
        org.joda.time.LocalDateTime localDateTime76 = localDateTime73.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime77 = localDateTime73.toDateTime();
        java.lang.String str78 = dateTime77.toString();
        org.joda.time.DateTime dateTime79 = localDateTime68.toDateTime((org.joda.time.ReadableInstant) dateTime77);
        boolean boolean80 = dateTime60.isBefore((org.joda.time.ReadableInstant) dateTime77);
        org.joda.time.Instant instant81 = dateTime60.toInstant();
        boolean boolean82 = dateTime52.isEqual((org.joda.time.ReadableInstant) dateTime60);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime36 and instant81", (dateTime36.compareTo(instant81) == 0) == dateTime36.equals(instant81));
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test074");
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeField dateTimeField13 = chronology12.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField14 = chronology12.clockhourOfHalfday();
        org.joda.time.LocalDateTime localDateTime15 = new org.joda.time.LocalDateTime((long) (short) 100, chronology12);
        org.joda.time.DurationField durationField16 = chronology12.halfdays();
        org.joda.time.LocalDateTime localDateTime17 = new org.joda.time.LocalDateTime(chronology12);
        int int18 = localDateTime17.getWeekOfWeekyear();
        org.joda.time.LocalDateTime localDateTime20 = localDateTime17.plusYears(53636605);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.LocalDateTime localDateTime22 = localDateTime20.plus(readablePeriod21);
        org.joda.time.DateTimeZone dateTimeZone23 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str25 = dateTimeZone23.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime26 = org.joda.time.LocalDateTime.now(dateTimeZone23);
        org.joda.time.LocalDateTime.Property property27 = localDateTime26.millisOfDay();
        org.joda.time.LocalDateTime localDateTime29 = localDateTime26.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime30 = localDateTime26.toDateTime();
        java.lang.String str31 = dateTime30.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType32 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int33 = dateTime30.get(dateTimeFieldType32);
        org.joda.time.Chronology chronology34 = dateTime30.getChronology();
        org.joda.time.DateTimeField dateTimeField35 = chronology34.weekyearOfCentury();
        org.joda.time.DurationField durationField36 = chronology34.millis();
        org.joda.time.DurationField durationField37 = chronology34.eras();
        boolean boolean38 = localDateTime22.equals((java.lang.Object) chronology34);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField16 and durationField37", Math.signum(durationField16.compareTo(durationField37)) == -Math.signum(durationField37.compareTo(durationField16)));
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test075");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        long long4 = dateTimeZone0.convertUTCToLocal((long) ' ');
        org.joda.time.DateTimeZone dateTimeZone5 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str7 = dateTimeZone5.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime8 = org.joda.time.LocalDateTime.now(dateTimeZone5);
        org.joda.time.LocalDateTime.Property property9 = localDateTime8.millisOfDay();
        org.joda.time.LocalDateTime localDateTime11 = localDateTime8.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime12 = localDateTime8.toDateTime();
        java.lang.String str13 = dateTime12.toString();
        org.joda.time.DateTimeZone dateTimeZone14 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str16 = dateTimeZone14.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime17 = org.joda.time.LocalDateTime.now(dateTimeZone14);
        org.joda.time.LocalDateTime.Property property18 = localDateTime17.millisOfDay();
        org.joda.time.LocalDateTime localDateTime20 = localDateTime17.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone22 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str24 = dateTimeZone22.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime25 = org.joda.time.LocalDateTime.now(dateTimeZone22);
        org.joda.time.LocalDateTime.Property property26 = localDateTime25.millisOfDay();
        org.joda.time.LocalDateTime localDateTime28 = localDateTime25.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime29 = localDateTime25.toDateTime();
        java.lang.String str30 = dateTime29.toString();
        org.joda.time.DateTime dateTime31 = localDateTime20.toDateTime((org.joda.time.ReadableInstant) dateTime29);
        boolean boolean32 = dateTime12.isBefore((org.joda.time.ReadableInstant) dateTime29);
        org.joda.time.DateTimeZone dateTimeZone33 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str35 = dateTimeZone33.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime36 = org.joda.time.LocalDateTime.now(dateTimeZone33);
        org.joda.time.LocalDateTime.Property property37 = localDateTime36.millisOfDay();
        org.joda.time.LocalDateTime localDateTime39 = localDateTime36.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime40 = localDateTime36.toDateTime();
        java.lang.String str41 = dateTime40.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType42 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int43 = dateTime40.get(dateTimeFieldType42);
        org.joda.time.DateTimeZone dateTimeZone44 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str46 = dateTimeZone44.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime47 = org.joda.time.LocalDateTime.now(dateTimeZone44);
        org.joda.time.LocalDateTime.Property property48 = localDateTime47.millisOfDay();
        org.joda.time.LocalDateTime localDateTime50 = localDateTime47.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property51 = localDateTime50.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone52 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str54 = dateTimeZone52.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime55 = org.joda.time.LocalDateTime.now(dateTimeZone52);
        org.joda.time.LocalDateTime.Property property56 = localDateTime55.millisOfDay();
        org.joda.time.LocalDateTime localDateTime58 = localDateTime55.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime59 = localDateTime55.toDateTime();
        java.lang.String str60 = dateTime59.toString();
        org.joda.time.DateTime dateTime61 = localDateTime50.toDateTime((org.joda.time.ReadableInstant) dateTime59);
        boolean boolean62 = dateTime40.isAfter((org.joda.time.ReadableInstant) dateTime59);
        boolean boolean63 = dateTime12.isBefore((org.joda.time.ReadableInstant) dateTime40);
        java.lang.String str64 = dateTime12.toString();
        int int65 = dateTimeZone0.getOffset((org.joda.time.ReadableInstant) dateTime12);
        org.joda.time.Instant instant66 = dateTime12.toInstant();
        org.joda.time.Chronology chronology67 = dateTime12.getChronology();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime29 and instant66", (dateTime29.compareTo(instant66) == 0) == dateTime29.equals(instant66));
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test076");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        org.joda.time.DateTimeField dateTimeField22 = chronology21.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField23 = dateTimeFieldType0.getField(chronology21);
        org.joda.time.DurationField durationField24 = chronology21.seconds();
        org.joda.time.DurationField durationField25 = chronology21.weekyears();
        long long29 = chronology21.add((long) 53636605, 349200006L, 53633879);
        org.joda.time.DurationField durationField30 = chronology21.eras();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField30, durationField24, and durationField25", !(durationField30.compareTo(durationField24) == 0) || (Math.signum(durationField30.compareTo(durationField25)) == Math.signum(durationField24.compareTo(durationField25))));
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test077");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone9 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str11 = dateTimeZone9.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(dateTimeZone9);
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.millisOfDay();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime12.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now(dateTimeZone17);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime20.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime24 = localDateTime20.toDateTime();
        java.lang.String str25 = dateTime24.toString();
        org.joda.time.DateTime dateTime26 = localDateTime15.toDateTime((org.joda.time.ReadableInstant) dateTime24);
        boolean boolean27 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.LocalDateTime localDateTime34 = localDateTime31.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property35 = localDateTime34.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str38 = dateTimeZone36.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime39 = org.joda.time.LocalDateTime.now(dateTimeZone36);
        org.joda.time.LocalDateTime.Property property40 = localDateTime39.millisOfDay();
        org.joda.time.LocalDateTime localDateTime42 = localDateTime39.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime43 = localDateTime39.toDateTime();
        java.lang.String str44 = dateTime43.toString();
        org.joda.time.DateTime dateTime45 = localDateTime34.toDateTime((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.DateTimeZone dateTimeZone46 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str48 = dateTimeZone46.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime49 = org.joda.time.LocalDateTime.now(dateTimeZone46);
        org.joda.time.LocalDateTime.Property property50 = localDateTime49.millisOfDay();
        org.joda.time.LocalDateTime localDateTime52 = localDateTime49.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime53 = localDateTime49.toDateTime();
        java.lang.String str54 = dateTime53.toString();
        int int55 = dateTime43.compareTo((org.joda.time.ReadableInstant) dateTime53);
        long long56 = dateTime43.getMillis();
        boolean boolean57 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.Instant instant58 = dateTime7.toInstant();
        long long59 = dateTime7.getMillis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime24 and instant58", (dateTime24.compareTo(instant58) == 0) == dateTime24.equals(instant58));
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test078");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        java.lang.Object obj12 = null;
        boolean boolean13 = dateTime7.equals(obj12);
        long long14 = dateTime7.getMillis();
        org.joda.time.Instant instant15 = dateTime7.toInstant();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now(dateTimeZone16);
        org.joda.time.LocalDateTime.Property property20 = localDateTime19.millisOfDay();
        java.lang.String str21 = property20.getName();
        int int22 = property20.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = property20.getFieldType();
        org.joda.time.LocalDateTime localDateTime24 = property20.withMinimumValue();
        org.joda.time.LocalDateTime.Property property25 = localDateTime24.weekOfWeekyear();
        boolean boolean26 = dateTime7.equals((java.lang.Object) property25);
        org.joda.time.DurationField durationField27 = property25.getRangeDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant15", (dateTime7.compareTo(instant15) == 0) == dateTime7.equals(instant15));
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test079");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        boolean boolean22 = dateTimeFieldType0.isSupported(chronology21);
        org.joda.time.DateTimeZone dateTimeZone23 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str25 = dateTimeZone23.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime26 = org.joda.time.LocalDateTime.now(dateTimeZone23);
        org.joda.time.LocalDateTime.Property property27 = localDateTime26.millisOfDay();
        org.joda.time.LocalDateTime localDateTime29 = localDateTime26.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime30 = localDateTime26.toDateTime();
        java.lang.String str31 = dateTime30.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType32 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int33 = dateTime30.get(dateTimeFieldType32);
        org.joda.time.Chronology chronology34 = dateTime30.getChronology();
        org.joda.time.DateTimeZone dateTimeZone35 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str37 = dateTimeZone35.getShortName((long) (short) 10);
        long long39 = dateTimeZone35.convertUTCToLocal((long) ' ');
        java.lang.String str40 = dateTimeZone35.toString();
        boolean boolean42 = dateTimeZone35.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology43 = chronology34.withZone(dateTimeZone35);
        org.joda.time.DurationField durationField44 = chronology34.weekyears();
        org.joda.time.DateTimeField dateTimeField45 = chronology34.dayOfYear();
        org.joda.time.DurationField durationField46 = chronology34.weeks();
        org.joda.time.DateTimeField dateTimeField47 = chronology34.yearOfEra();
        org.joda.time.DateTimeField dateTimeField48 = chronology34.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField49 = dateTimeFieldType0.getField(chronology34);
        org.joda.time.DateTimeZone dateTimeZone50 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str52 = dateTimeZone50.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime53 = org.joda.time.LocalDateTime.now(dateTimeZone50);
        org.joda.time.LocalDateTime.Property property54 = localDateTime53.millisOfDay();
        org.joda.time.LocalDateTime localDateTime56 = localDateTime53.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime57 = localDateTime53.toDateTime();
        java.lang.String str58 = dateTime57.toString();
        org.joda.time.DateTimeZone dateTimeZone59 = dateTime57.getZone();
        org.joda.time.Chronology chronology60 = dateTime57.getChronology();
        org.joda.time.DateTimeField dateTimeField61 = dateTimeFieldType0.getField(chronology60);
        org.joda.time.DurationField durationField62 = chronology60.halfdays();
        org.joda.time.DateTimeField dateTimeField63 = chronology60.millisOfSecond();
        org.joda.time.DurationField durationField64 = chronology60.eras();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField64, durationField44, and durationField46", !(durationField64.compareTo(durationField44) == 0) || (Math.signum(durationField64.compareTo(durationField46)) == Math.signum(durationField44.compareTo(durationField46))));
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test080");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DateTimeField dateTimeField21 = chronology11.yearOfCentury();
        org.joda.time.DurationField durationField22 = chronology11.eras();
        org.joda.time.DateTimeField dateTimeField23 = chronology11.yearOfEra();
        org.joda.time.LocalDateTime localDateTime24 = new org.joda.time.LocalDateTime(chronology11);
        org.joda.time.DateTimeField dateTimeField25 = chronology11.weekOfWeekyear();
        org.joda.time.DurationField durationField26 = chronology11.minutes();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField22, durationField26, and durationField22", !(durationField22.compareTo(durationField26) == 0) || (Math.signum(durationField22.compareTo(durationField22)) == Math.signum(durationField26.compareTo(durationField22))));
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test081");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DateTimeField dateTimeField21 = chronology20.weekOfWeekyear();
        org.joda.time.DurationField durationField22 = chronology20.hours();
        org.joda.time.DateTimeField dateTimeField23 = chronology20.hourOfDay();
        org.joda.time.DurationField durationField24 = chronology20.eras();
        org.joda.time.DateTimeField dateTimeField25 = chronology20.weekOfWeekyear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField22 and durationField24", Math.signum(durationField22.compareTo(durationField24)) == -Math.signum(durationField24.compareTo(durationField22)));
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test082");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.DateTimeZone dateTimeZone11 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str13 = dateTimeZone11.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime14 = org.joda.time.LocalDateTime.now(dateTimeZone11);
        org.joda.time.LocalDateTime.Property property15 = localDateTime14.millisOfDay();
        org.joda.time.LocalDateTime localDateTime17 = localDateTime14.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property18 = localDateTime17.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone19 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str21 = dateTimeZone19.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now(dateTimeZone19);
        org.joda.time.LocalDateTime.Property property23 = localDateTime22.millisOfDay();
        org.joda.time.LocalDateTime localDateTime25 = localDateTime22.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime26 = localDateTime22.toDateTime();
        java.lang.String str27 = dateTime26.toString();
        org.joda.time.DateTime dateTime28 = localDateTime17.toDateTime((org.joda.time.ReadableInstant) dateTime26);
        boolean boolean29 = dateTime7.isAfter((org.joda.time.ReadableInstant) dateTime26);
        org.joda.time.DateTimeFieldType dateTimeFieldType30 = org.joda.time.DateTimeFieldType.dayOfMonth();
        java.lang.String str31 = dateTimeFieldType30.getName();
        boolean boolean32 = dateTime26.isSupported(dateTimeFieldType30);
        org.joda.time.Instant instant33 = dateTime26.toInstant();
        long long34 = dateTime26.getMillis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant33", (dateTime7.compareTo(instant33) == 0) == dateTime7.equals(instant33));
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test083");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DurationField durationField21 = chronology11.weekyears();
        org.joda.time.DateTimeField dateTimeField22 = chronology11.dayOfYear();
        org.joda.time.DurationField durationField23 = chronology11.weeks();
        org.joda.time.DateTimeField dateTimeField24 = chronology11.yearOfEra();
        org.joda.time.DateTimeField dateTimeField25 = chronology11.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField26 = chronology11.dayOfWeek();
        org.joda.time.LocalDateTime localDateTime27 = new org.joda.time.LocalDateTime(chronology11);
        org.joda.time.DurationField durationField28 = chronology11.years();
        org.joda.time.DateTimeField dateTimeField29 = chronology11.dayOfYear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField21 and durationField28", (durationField21.compareTo(durationField28) == 0) == durationField21.equals(durationField28));
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test084");
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        org.joda.time.DurationField durationField22 = chronology12.weekyears();
        org.joda.time.DateTimeField dateTimeField23 = chronology12.dayOfYear();
        org.joda.time.DurationField durationField24 = chronology12.weeks();
        org.joda.time.DateTimeField dateTimeField25 = chronology12.yearOfEra();
        org.joda.time.DateTimeField dateTimeField26 = chronology12.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField27 = chronology12.dayOfWeek();
        org.joda.time.LocalDateTime localDateTime28 = new org.joda.time.LocalDateTime(chronology12);
        org.joda.time.DateTimeField dateTimeField29 = chronology12.dayOfWeek();
        org.joda.time.DurationField durationField30 = chronology12.years();
        org.joda.time.LocalDateTime localDateTime31 = new org.joda.time.LocalDateTime((-10746135117L), chronology12);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField22 and durationField30", (durationField22.compareTo(durationField30) == 0) == durationField22.equals(durationField30));
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test085");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        org.joda.time.DateTimeField dateTimeField22 = chronology21.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField23 = dateTimeFieldType0.getField(chronology21);
        org.joda.time.DateTimeField dateTimeField24 = chronology21.monthOfYear();
        org.joda.time.DateTimeField dateTimeField25 = chronology21.year();
        org.joda.time.ReadablePeriod readablePeriod26 = null;
        long long29 = chronology21.add(readablePeriod26, (-97L), 53658739);
        org.joda.time.DurationField durationField30 = chronology21.eras();
        org.joda.time.DateTimeField dateTimeField31 = chronology21.secondOfMinute();
        org.joda.time.DurationField durationField32 = chronology21.weekyears();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField30, durationField32, and durationField30", !(durationField30.compareTo(durationField32) == 0) || (Math.signum(durationField30.compareTo(durationField30)) == Math.signum(durationField32.compareTo(durationField30))));
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test086");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DurationField durationField21 = chronology11.weekyears();
        org.joda.time.DateTimeField dateTimeField22 = chronology11.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField23 = chronology11.dayOfWeek();
        org.joda.time.LocalDateTime localDateTime25 = new org.joda.time.LocalDateTime((long) 54);
        org.joda.time.DateTimeFieldType dateTimeFieldType26 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone27 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str29 = dateTimeZone27.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime30 = org.joda.time.LocalDateTime.now(dateTimeZone27);
        org.joda.time.LocalDateTime.Property property31 = localDateTime30.millisOfDay();
        org.joda.time.LocalDateTime localDateTime33 = localDateTime30.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime34 = localDateTime30.toDateTime();
        java.lang.String str35 = dateTime34.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int37 = dateTime34.get(dateTimeFieldType36);
        org.joda.time.Chronology chronology38 = dateTime34.getChronology();
        org.joda.time.DateTimeZone dateTimeZone39 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str41 = dateTimeZone39.getShortName((long) (short) 10);
        long long43 = dateTimeZone39.convertUTCToLocal((long) ' ');
        java.lang.String str44 = dateTimeZone39.toString();
        boolean boolean46 = dateTimeZone39.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology47 = chronology38.withZone(dateTimeZone39);
        boolean boolean48 = dateTimeFieldType26.isSupported(chronology47);
        org.joda.time.DurationField durationField49 = chronology47.years();
        org.joda.time.DateTimeField dateTimeField50 = chronology47.hourOfDay();
        org.joda.time.DurationField durationField51 = chronology47.months();
        org.joda.time.DateTimeZone dateTimeZone52 = chronology47.getZone();
        org.joda.time.Chronology chronology53 = chronology47.withUTC();
        org.joda.time.DateTimeZone dateTimeZone54 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str56 = dateTimeZone54.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime57 = org.joda.time.LocalDateTime.now(dateTimeZone54);
        org.joda.time.LocalDateTime.Property property58 = localDateTime57.millisOfDay();
        org.joda.time.LocalDateTime localDateTime60 = localDateTime57.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime62 = localDateTime57.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime64 = localDateTime62.minusHours((int) (short) 10);
        int int65 = localDateTime62.getMinuteOfHour();
        org.joda.time.ReadablePeriod readablePeriod66 = null;
        org.joda.time.LocalDateTime localDateTime67 = localDateTime62.minus(readablePeriod66);
        java.util.Date date68 = localDateTime62.toDate();
        org.joda.time.LocalDateTime localDateTime69 = org.joda.time.LocalDateTime.fromDateFields(date68);
        int[] intArray71 = chronology53.get((org.joda.time.ReadablePartial) localDateTime69, (long) 109);
        int int72 = dateTimeField23.getMinimumValue((org.joda.time.ReadablePartial) localDateTime25, intArray71);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField21 and durationField49", (durationField21.compareTo(durationField49) == 0) == durationField21.equals(durationField49));
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test087");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.clockhourOfHalfday();
        java.lang.String str1 = dateTimeFieldType0.toString();
        org.joda.time.DurationFieldType durationFieldType2 = org.joda.time.DurationFieldType.hours();
        org.joda.time.DateTimeFieldType dateTimeFieldType3 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone4 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str6 = dateTimeZone4.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime7 = org.joda.time.LocalDateTime.now(dateTimeZone4);
        org.joda.time.LocalDateTime.Property property8 = localDateTime7.millisOfDay();
        org.joda.time.LocalDateTime localDateTime10 = localDateTime7.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime11 = localDateTime7.toDateTime();
        java.lang.String str12 = dateTime11.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType13 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int14 = dateTime11.get(dateTimeFieldType13);
        org.joda.time.Chronology chronology15 = dateTime11.getChronology();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        long long20 = dateTimeZone16.convertUTCToLocal((long) ' ');
        java.lang.String str21 = dateTimeZone16.toString();
        boolean boolean23 = dateTimeZone16.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology24 = chronology15.withZone(dateTimeZone16);
        boolean boolean25 = dateTimeFieldType3.isSupported(chronology24);
        org.joda.time.DateTimeZone dateTimeZone26 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str28 = dateTimeZone26.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime29 = org.joda.time.LocalDateTime.now(dateTimeZone26);
        org.joda.time.LocalDateTime.Property property30 = localDateTime29.millisOfDay();
        org.joda.time.LocalDateTime localDateTime32 = localDateTime29.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime33 = localDateTime29.toDateTime();
        java.lang.String str34 = dateTime33.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int36 = dateTime33.get(dateTimeFieldType35);
        org.joda.time.Chronology chronology37 = dateTime33.getChronology();
        org.joda.time.DateTimeZone dateTimeZone38 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str40 = dateTimeZone38.getShortName((long) (short) 10);
        long long42 = dateTimeZone38.convertUTCToLocal((long) ' ');
        java.lang.String str43 = dateTimeZone38.toString();
        boolean boolean45 = dateTimeZone38.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology46 = chronology37.withZone(dateTimeZone38);
        org.joda.time.DurationField durationField47 = chronology37.weekyears();
        org.joda.time.DateTimeField dateTimeField48 = chronology37.dayOfYear();
        org.joda.time.DurationField durationField49 = chronology37.weeks();
        org.joda.time.DateTimeField dateTimeField50 = chronology37.yearOfEra();
        org.joda.time.DateTimeField dateTimeField51 = chronology37.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField52 = dateTimeFieldType3.getField(chronology37);
        org.joda.time.DateTimeField dateTimeField53 = chronology37.clockhourOfDay();
        org.joda.time.DurationField durationField54 = durationFieldType2.getField(chronology37);
        boolean boolean55 = dateTimeFieldType0.isSupported(chronology37);
        org.joda.time.DurationFieldType durationFieldType56 = dateTimeFieldType0.getDurationType();
        java.lang.String str57 = durationFieldType56.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType58 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone59 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str61 = dateTimeZone59.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime62 = org.joda.time.LocalDateTime.now(dateTimeZone59);
        org.joda.time.LocalDateTime.Property property63 = localDateTime62.millisOfDay();
        org.joda.time.LocalDateTime localDateTime65 = localDateTime62.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime66 = localDateTime62.toDateTime();
        java.lang.String str67 = dateTime66.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType68 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int69 = dateTime66.get(dateTimeFieldType68);
        org.joda.time.Chronology chronology70 = dateTime66.getChronology();
        org.joda.time.DateTimeZone dateTimeZone71 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str73 = dateTimeZone71.getShortName((long) (short) 10);
        long long75 = dateTimeZone71.convertUTCToLocal((long) ' ');
        java.lang.String str76 = dateTimeZone71.toString();
        boolean boolean78 = dateTimeZone71.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology79 = chronology70.withZone(dateTimeZone71);
        boolean boolean80 = dateTimeFieldType58.isSupported(chronology79);
        org.joda.time.DurationField durationField81 = chronology79.years();
        org.joda.time.DateTimeField dateTimeField82 = chronology79.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField83 = chronology79.halfdayOfDay();
        org.joda.time.DateTimeField dateTimeField84 = chronology79.year();
        boolean boolean85 = durationFieldType56.isSupported(chronology79);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField47 and durationField81", (durationField47.compareTo(durationField81) == 0) == durationField47.equals(durationField81));
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test088");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime8 = localDateTime3.plusHours((int) ' ');
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.weekyearOfCentury();
        int int10 = localDateTime8.get(dateTimeFieldType9);
        org.joda.time.LocalDateTime localDateTime12 = localDateTime8.minusWeeks(4);
        org.joda.time.Chronology chronology13 = localDateTime12.getChronology();
        org.joda.time.DateTimeField dateTimeField14 = chronology13.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField15 = chronology13.dayOfYear();
        java.util.Locale locale17 = java.util.Locale.forLanguageTag("53645814");
        java.lang.String str18 = locale17.getDisplayVariant();
        int int19 = dateTimeField15.getMaximumShortTextLength(locale17);
        java.lang.String str20 = dateTimeField15.toString();
        int int21 = dateTimeField15.getMinimumValue();
        long long23 = dateTimeField15.roundHalfFloor((long) (short) 10);
        org.joda.time.DurationField durationField24 = dateTimeField15.getRangeDurationField();
        org.joda.time.ReadablePartial readablePartial25 = null;
        org.joda.time.DateTimeFieldType dateTimeFieldType26 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone27 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str29 = dateTimeZone27.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime30 = org.joda.time.LocalDateTime.now(dateTimeZone27);
        org.joda.time.LocalDateTime.Property property31 = localDateTime30.millisOfDay();
        org.joda.time.LocalDateTime localDateTime33 = localDateTime30.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime34 = localDateTime30.toDateTime();
        java.lang.String str35 = dateTime34.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int37 = dateTime34.get(dateTimeFieldType36);
        org.joda.time.Chronology chronology38 = dateTime34.getChronology();
        org.joda.time.DateTimeZone dateTimeZone39 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str41 = dateTimeZone39.getShortName((long) (short) 10);
        long long43 = dateTimeZone39.convertUTCToLocal((long) ' ');
        java.lang.String str44 = dateTimeZone39.toString();
        boolean boolean46 = dateTimeZone39.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology47 = chronology38.withZone(dateTimeZone39);
        org.joda.time.DateTimeField dateTimeField48 = chronology47.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField49 = dateTimeFieldType26.getField(chronology47);
        org.joda.time.DurationField durationField50 = chronology47.seconds();
        org.joda.time.DurationField durationField51 = chronology47.weekyears();
        org.joda.time.DateTimeField dateTimeField52 = chronology47.hourOfHalfday();
        org.joda.time.DateTimeZone dateTimeZone53 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str55 = dateTimeZone53.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime56 = org.joda.time.LocalDateTime.now(dateTimeZone53);
        org.joda.time.LocalDateTime.Property property57 = localDateTime56.millisOfDay();
        org.joda.time.LocalDateTime localDateTime59 = localDateTime56.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime61 = localDateTime56.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime63 = localDateTime61.minusHours((int) (short) 10);
        int int64 = localDateTime61.getMinuteOfHour();
        org.joda.time.ReadablePeriod readablePeriod65 = null;
        org.joda.time.LocalDateTime localDateTime66 = localDateTime61.minus(readablePeriod65);
        int[] intArray68 = chronology47.get((org.joda.time.ReadablePartial) localDateTime61, (long) (byte) 100);
        org.joda.time.LocalDateTime localDateTime69 = new org.joda.time.LocalDateTime();
        java.lang.String str70 = localDateTime69.toString();
        int int71 = localDateTime69.getHourOfDay();
        org.joda.time.ReadablePeriod readablePeriod72 = null;
        org.joda.time.LocalDateTime localDateTime73 = localDateTime69.plus(readablePeriod72);
        org.joda.time.LocalDateTime localDateTime75 = localDateTime69.withCenturyOfEra(708);
        org.joda.time.LocalDateTime localDateTime77 = localDateTime75.minusMonths((int) (byte) -1);
        int[] intArray79 = chronology47.get((org.joda.time.ReadablePartial) localDateTime77, (long) 295);
        int int80 = dateTimeField15.getMinimumValue(readablePartial25, intArray79);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField24 and durationField51", (durationField24.compareTo(durationField51) == 0) == durationField24.equals(durationField51));
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test089");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        java.lang.String str5 = property4.getName();
        org.joda.time.LocalDateTime localDateTime6 = property4.roundHalfFloorCopy();
        org.joda.time.DateTimeFieldType dateTimeFieldType7 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        boolean boolean8 = localDateTime6.isSupported(dateTimeFieldType7);
        org.joda.time.LocalDateTime localDateTime10 = localDateTime6.withWeekOfWeekyear((int) '#');
        org.joda.time.ReadablePeriod readablePeriod11 = null;
        org.joda.time.LocalDateTime localDateTime12 = localDateTime6.plus(readablePeriod11);
        org.joda.time.LocalDateTime localDateTime14 = localDateTime12.withWeekyear(527);
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.addUnicodeLocaleAttribute("fra");
        java.util.Locale.Builder builder19 = builder18.clear();
        java.util.Locale locale20 = java.util.Locale.CANADA;
        boolean boolean21 = locale20.hasExtensions();
        java.util.Locale.Builder builder22 = builder19.setLocale(locale20);
        java.lang.String str23 = locale20.getDisplayScript();
        java.lang.String str24 = locale20.getDisplayVariant();
        java.lang.String str25 = localDateTime14.toString("53636173", locale20);
        java.lang.String str26 = locale20.getScript();
        java.util.Set<java.lang.String> strSet27 = locale20.getUnicodeLocaleAttributes();
        java.util.stream.Stream<java.lang.String> strStream28 = strSet27.stream();
        java.util.Locale locale29 = java.util.Locale.ROOT;
        java.util.Set<java.lang.String> strSet30 = locale29.getUnicodeLocaleAttributes();
        java.lang.Object[] objArray31 = strSet30.toArray();
        boolean boolean32 = strSet30.isEmpty();
        java.util.Iterator<java.lang.String> strItor33 = strSet30.iterator();
        strSet30.clear();
        strSet30.clear();
        java.util.Locale locale36 = java.util.Locale.ROOT;
        java.util.Set<java.lang.String> strSet37 = locale36.getUnicodeLocaleAttributes();
        java.lang.Object[] objArray38 = strSet37.toArray();
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.util.Set<java.lang.String> strSet40 = locale39.getUnicodeLocaleAttributes();
        boolean boolean41 = strSet37.removeAll((java.util.Collection<java.lang.String>) strSet40);
        java.util.Locale locale42 = java.util.Locale.ROOT;
        java.util.Set<java.lang.String> strSet43 = locale42.getUnicodeLocaleAttributes();
        org.joda.time.DurationFieldType durationFieldType44 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.DurationFieldType durationFieldType45 = org.joda.time.DurationFieldType.hours();
        org.joda.time.DurationFieldType[] durationFieldTypeArray46 = new org.joda.time.DurationFieldType[] { durationFieldType44, durationFieldType45 };
        org.joda.time.DurationFieldType[] durationFieldTypeArray47 = strSet43.toArray(durationFieldTypeArray46);
        boolean boolean48 = strSet37.containsAll((java.util.Collection<java.lang.String>) strSet43);
        java.util.Locale locale49 = java.util.Locale.ROOT;
        java.util.Set<java.lang.String> strSet50 = locale49.getUnicodeLocaleAttributes();
        java.lang.Object[] objArray51 = strSet50.toArray();
        boolean boolean52 = strSet37.addAll((java.util.Collection<java.lang.String>) strSet50);
        boolean boolean53 = strSet30.containsAll((java.util.Collection<java.lang.String>) strSet50);
        int int54 = strSet30.size();
        boolean boolean55 = strSet27.containsAll((java.util.Collection<java.lang.String>) strSet30);
        org.joda.time.DateTimeZone dateTimeZone56 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str58 = dateTimeZone56.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime59 = org.joda.time.LocalDateTime.now(dateTimeZone56);
        org.joda.time.LocalDateTime.Property property60 = localDateTime59.millisOfDay();
        java.lang.String str61 = property60.getName();
        org.joda.time.LocalDateTime localDateTime62 = property60.roundHalfFloorCopy();
        org.joda.time.LocalDateTime localDateTime63 = property60.withMinimumValue();
        org.joda.time.DurationField durationField64 = property60.getRangeDurationField();
        org.joda.time.LocalDateTime localDateTime65 = property60.roundHalfEvenCopy();
        org.joda.time.DateTimeZone dateTimeZone67 = org.joda.time.DateTimeZone.forOffsetMillis((int) 'a');
        org.joda.time.LocalDateTime localDateTime68 = org.joda.time.LocalDateTime.now(dateTimeZone67);
        long long70 = dateTimeZone67.nextTransition(8434424000L);
        org.joda.time.DateTimeZone.setDefault(dateTimeZone67);
        org.joda.time.DateTimeZone dateTimeZone72 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str74 = dateTimeZone72.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime75 = org.joda.time.LocalDateTime.now(dateTimeZone72);
        org.joda.time.LocalDateTime.Property property76 = localDateTime75.millisOfDay();
        org.joda.time.LocalDateTime localDateTime78 = localDateTime75.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime79 = localDateTime75.toDateTime();
        java.lang.String str80 = dateTime79.toString();
        org.joda.time.DateTimeZone dateTimeZone81 = dateTime79.getZone();
        int int82 = dateTimeZone67.getOffset((org.joda.time.ReadableInstant) dateTime79);
        org.joda.time.Instant instant83 = dateTime79.toInstant();
        long long84 = property60.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime79);
        boolean boolean85 = strSet30.remove((java.lang.Object) property60);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime79 and instant83", (dateTime79.compareTo(instant83) == 0) == dateTime79.equals(instant83));
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test090");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime8 = localDateTime3.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime10 = localDateTime8.withMillisOfDay(53620101);
        org.joda.time.LocalDateTime localDateTime12 = localDateTime10.minusMonths((-1));
        org.joda.time.LocalDateTime localDateTime14 = localDateTime10.plusSeconds(0);
        org.joda.time.LocalDateTime.Property property15 = localDateTime14.centuryOfEra();
        org.joda.time.LocalDateTime localDateTime16 = property15.roundCeilingCopy();
        org.joda.time.LocalDateTime.Property property17 = localDateTime16.hourOfDay();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime25 = localDateTime21.toDateTime();
        long long26 = property17.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.DateTimeZone dateTimeZone27 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str29 = dateTimeZone27.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime30 = org.joda.time.LocalDateTime.now(dateTimeZone27);
        org.joda.time.LocalDateTime.Property property31 = localDateTime30.millisOfDay();
        org.joda.time.ReadableInstant readableInstant32 = null;
        long long33 = property31.getDifferenceAsLong(readableInstant32);
        java.util.Locale locale34 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str35 = locale34.getISO3Language();
        java.lang.String str36 = property31.getAsShortText(locale34);
        org.joda.time.LocalDateTime localDateTime38 = property31.addToCopy((int) '4');
        org.joda.time.LocalDateTime localDateTime39 = property31.roundHalfEvenCopy();
        org.joda.time.DateTime dateTime40 = localDateTime39.toDateTime();
        boolean boolean41 = dateTime25.isAfter((org.joda.time.ReadableInstant) dateTime40);
        java.lang.String str42 = dateTime25.toString();
        org.joda.time.Instant instant43 = dateTime25.toInstant();
        java.lang.String str44 = dateTime25.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime40 and instant43", (dateTime40.compareTo(instant43) == 0) == dateTime40.equals(instant43));
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test091");
        org.joda.time.DateTimeZone dateTimeZone2 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str4 = dateTimeZone2.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime5 = org.joda.time.LocalDateTime.now(dateTimeZone2);
        org.joda.time.LocalDateTime.Property property6 = localDateTime5.millisOfDay();
        org.joda.time.LocalDateTime localDateTime8 = localDateTime5.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime9 = localDateTime5.toDateTime();
        java.lang.String str10 = dateTime9.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int12 = dateTime9.get(dateTimeFieldType11);
        org.joda.time.Chronology chronology13 = dateTime9.getChronology();
        org.joda.time.DateTimeField dateTimeField14 = chronology13.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField15 = chronology13.clockhourOfHalfday();
        org.joda.time.LocalDateTime localDateTime16 = new org.joda.time.LocalDateTime((long) (short) 100, chronology13);
        org.joda.time.DateTimeField dateTimeField17 = chronology13.yearOfCentury();
        org.joda.time.LocalDateTime localDateTime18 = new org.joda.time.LocalDateTime(53L, chronology13);
        org.joda.time.DateTimeField dateTimeField19 = chronology13.dayOfMonth();
        org.joda.time.DurationField durationField20 = chronology13.seconds();
        org.joda.time.DurationField durationField21 = chronology13.eras();
        org.joda.time.DateTimeField dateTimeField22 = chronology13.yearOfCentury();
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField20 and durationField21", Math.signum(durationField20.compareTo(durationField21)) == -Math.signum(durationField21.compareTo(durationField20)));
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test092");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.ReadableInstant readableInstant5 = null;
        long long6 = property4.getDifferenceAsLong(readableInstant5);
        int int7 = property4.getMaximumValue();
        org.joda.time.LocalDateTime localDateTime8 = property4.roundHalfEvenCopy();
        int int9 = localDateTime8.size();
        org.joda.time.DateTimeZone dateTimeZone10 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str12 = dateTimeZone10.getShortName((long) (short) 10);
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        java.lang.Object obj19 = null;
        boolean boolean20 = dateTimeZone13.equals(obj19);
        long long22 = dateTimeZone10.getMillisKeepLocal(dateTimeZone13, (long) 53);
        org.joda.time.DateTime dateTime23 = localDateTime8.toDateTime(dateTimeZone13);
        org.joda.time.Instant instant24 = dateTime23.toInstant();
        org.joda.time.Instant instant25 = instant24.toInstant();
        long long26 = instant25.getMillis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime23 and instant25", (dateTime23.compareTo(instant25) == 0) == dateTime23.equals(instant25));
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test093");
        org.joda.time.DateTimeZone dateTimeZone2 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str4 = dateTimeZone2.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime5 = org.joda.time.LocalDateTime.now(dateTimeZone2);
        org.joda.time.LocalDateTime.Property property6 = localDateTime5.millisOfDay();
        org.joda.time.LocalDateTime localDateTime8 = localDateTime5.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime9 = localDateTime5.toDateTime();
        java.lang.String str10 = dateTime9.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int12 = dateTime9.get(dateTimeFieldType11);
        org.joda.time.Chronology chronology13 = dateTime9.getChronology();
        org.joda.time.DateTimeField dateTimeField14 = chronology13.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField15 = chronology13.clockhourOfHalfday();
        org.joda.time.LocalDateTime localDateTime16 = new org.joda.time.LocalDateTime((long) (short) 100, chronology13);
        org.joda.time.DateTimeField dateTimeField17 = chronology13.yearOfCentury();
        org.joda.time.LocalDateTime localDateTime18 = new org.joda.time.LocalDateTime(53L, chronology13);
        org.joda.time.DateTimeField dateTimeField19 = chronology13.weekOfWeekyear();
        org.joda.time.DurationField durationField20 = chronology13.eras();
        org.joda.time.DateTimeField dateTimeField21 = chronology13.secondOfMinute();
        org.joda.time.DurationField durationField22 = chronology13.months();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField20, durationField22, and durationField20", !(durationField20.compareTo(durationField22) == 0) || (Math.signum(durationField20.compareTo(durationField20)) == Math.signum(durationField22.compareTo(durationField20))));
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test094");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DurationField durationField21 = chronology11.weekyears();
        org.joda.time.DateTimeField dateTimeField22 = chronology11.dayOfYear();
        org.joda.time.DurationField durationField23 = chronology11.weeks();
        org.joda.time.LocalDateTime localDateTime24 = org.joda.time.LocalDateTime.now(chronology11);
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str27 = dateTimeZone25.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now(dateTimeZone25);
        org.joda.time.LocalDateTime.Property property29 = localDateTime28.millisOfDay();
        org.joda.time.LocalDateTime localDateTime31 = localDateTime28.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime33 = localDateTime28.plusHours((int) ' ');
        org.joda.time.DateTimeZone dateTimeZone34 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str36 = dateTimeZone34.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime37 = org.joda.time.LocalDateTime.now(dateTimeZone34);
        org.joda.time.LocalDateTime.Property property38 = localDateTime37.millisOfDay();
        org.joda.time.LocalDateTime localDateTime40 = localDateTime37.withYear((int) (short) 100);
        boolean boolean41 = localDateTime28.isBefore((org.joda.time.ReadablePartial) localDateTime37);
        org.joda.time.DateTimeZone dateTimeZone42 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str44 = dateTimeZone42.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime45 = org.joda.time.LocalDateTime.now(dateTimeZone42);
        org.joda.time.LocalDateTime.Property property46 = localDateTime45.millisOfDay();
        org.joda.time.LocalDateTime localDateTime48 = localDateTime45.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime49 = localDateTime45.toDateTime();
        java.lang.String str50 = dateTime49.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType51 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int52 = dateTime49.get(dateTimeFieldType51);
        int int53 = localDateTime37.indexOf(dateTimeFieldType51);
        org.joda.time.DateTimeZone dateTimeZone54 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str56 = dateTimeZone54.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime57 = org.joda.time.LocalDateTime.now(dateTimeZone54);
        org.joda.time.LocalDateTime.Property property58 = localDateTime57.millisOfDay();
        org.joda.time.LocalDateTime localDateTime60 = localDateTime57.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime62 = localDateTime57.plusHours((int) ' ');
        org.joda.time.DateTimeZone dateTimeZone63 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str65 = dateTimeZone63.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime66 = org.joda.time.LocalDateTime.now(dateTimeZone63);
        org.joda.time.LocalDateTime.Property property67 = localDateTime66.millisOfDay();
        org.joda.time.LocalDateTime localDateTime69 = localDateTime66.withYear((int) (short) 100);
        boolean boolean70 = localDateTime57.isBefore((org.joda.time.ReadablePartial) localDateTime66);
        org.joda.time.DateTimeZone dateTimeZone71 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str73 = dateTimeZone71.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime74 = org.joda.time.LocalDateTime.now(dateTimeZone71);
        org.joda.time.LocalDateTime.Property property75 = localDateTime74.millisOfDay();
        java.lang.String str76 = property75.getName();
        org.joda.time.LocalDateTime localDateTime77 = property75.roundHalfFloorCopy();
        org.joda.time.DateTimeFieldType dateTimeFieldType78 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        boolean boolean79 = localDateTime77.isSupported(dateTimeFieldType78);
        java.lang.String str80 = dateTimeFieldType78.toString();
        int int81 = localDateTime66.get(dateTimeFieldType78);
        int int82 = localDateTime37.compareTo((org.joda.time.ReadablePartial) localDateTime66);
        long long84 = chronology11.set((org.joda.time.ReadablePartial) localDateTime37, (long) 946);
        org.joda.time.DateTimeField dateTimeField85 = chronology11.era();
        org.joda.time.DurationField durationField86 = chronology11.eras();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField86, durationField21, and durationField23", !(durationField86.compareTo(durationField21) == 0) || (Math.signum(durationField86.compareTo(durationField23)) == Math.signum(durationField21.compareTo(durationField23))));
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test095");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        java.lang.Object obj12 = null;
        boolean boolean13 = dateTime7.equals(obj12);
        long long14 = dateTime7.getMillis();
        org.joda.time.Instant instant15 = dateTime7.toInstant();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now(dateTimeZone16);
        org.joda.time.LocalDateTime.Property property20 = localDateTime19.millisOfDay();
        java.lang.String str21 = property20.getName();
        int int22 = property20.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = property20.getFieldType();
        org.joda.time.LocalDateTime localDateTime24 = property20.withMinimumValue();
        org.joda.time.LocalDateTime.Property property25 = localDateTime24.weekOfWeekyear();
        boolean boolean26 = dateTime7.equals((java.lang.Object) property25);
        int int27 = property25.getMinimumValue();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant15", (dateTime7.compareTo(instant15) == 0) == dateTime7.equals(instant15));
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test096");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        long long8 = dateTime7.getMillis();
        org.joda.time.LocalDateTime localDateTime9 = new org.joda.time.LocalDateTime();
        java.lang.String str10 = localDateTime9.toString();
        int int11 = localDateTime9.getHourOfDay();
        org.joda.time.ReadablePeriod readablePeriod12 = null;
        org.joda.time.LocalDateTime localDateTime13 = localDateTime9.plus(readablePeriod12);
        org.joda.time.LocalDateTime.Property property14 = localDateTime9.yearOfCentury();
        org.joda.time.LocalDateTime localDateTime15 = property14.roundHalfFloorCopy();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now(dateTimeZone16);
        org.joda.time.LocalDateTime.Property property20 = localDateTime19.millisOfDay();
        org.joda.time.LocalDateTime localDateTime22 = localDateTime19.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime23 = localDateTime19.toDateTime();
        java.lang.String str24 = dateTime23.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType25 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int26 = dateTime23.get(dateTimeFieldType25);
        org.joda.time.Chronology chronology27 = dateTime23.getChronology();
        java.lang.Object obj28 = null;
        boolean boolean29 = dateTime23.equals(obj28);
        long long30 = dateTime23.getMillis();
        org.joda.time.Instant instant31 = dateTime23.toInstant();
        org.joda.time.DateTimeZone dateTimeZone32 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str34 = dateTimeZone32.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime35 = org.joda.time.LocalDateTime.now(dateTimeZone32);
        org.joda.time.LocalDateTime.Property property36 = localDateTime35.millisOfDay();
        java.lang.String str37 = property36.getName();
        int int38 = property36.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType39 = property36.getFieldType();
        org.joda.time.LocalDateTime localDateTime40 = property36.withMinimumValue();
        org.joda.time.LocalDateTime.Property property41 = localDateTime40.weekOfWeekyear();
        boolean boolean42 = dateTime23.equals((java.lang.Object) property41);
        long long43 = property14.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime23);
        boolean boolean44 = dateTime7.isAfter((org.joda.time.ReadableInstant) dateTime23);
        long long45 = dateTime7.getMillis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime23 and instant31", (dateTime23.compareTo(instant31) == 0) == dateTime23.equals(instant31));
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test097");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property7 = localDateTime6.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone8 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str10 = dateTimeZone8.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now(dateTimeZone8);
        org.joda.time.LocalDateTime.Property property12 = localDateTime11.millisOfDay();
        org.joda.time.LocalDateTime localDateTime14 = localDateTime11.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime15 = localDateTime11.toDateTime();
        java.lang.String str16 = dateTime15.toString();
        org.joda.time.DateTime dateTime17 = localDateTime6.toDateTime((org.joda.time.ReadableInstant) dateTime15);
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime25 = localDateTime21.toDateTime();
        java.lang.String str26 = dateTime25.toString();
        int int27 = dateTime15.compareTo((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        boolean boolean29 = dateTime15.isEqual(readableInstant28);
        org.joda.time.Instant instant30 = dateTime15.toInstant();
        org.joda.time.DateTimeZone dateTimeZone31 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str33 = dateTimeZone31.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime34 = org.joda.time.LocalDateTime.now(dateTimeZone31);
        org.joda.time.LocalDateTime.Property property35 = localDateTime34.millisOfDay();
        org.joda.time.LocalDateTime localDateTime37 = localDateTime34.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime38 = localDateTime34.toDateTime();
        java.lang.String str39 = dateTime38.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType40 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int41 = dateTime38.get(dateTimeFieldType40);
        org.joda.time.Chronology chronology42 = dateTime38.getChronology();
        boolean boolean43 = dateTime15.isEqual((org.joda.time.ReadableInstant) dateTime38);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime25 and instant30", (dateTime25.compareTo(instant30) == 0) == dateTime25.equals(instant30));
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test098");
        org.joda.time.LocalDateTime localDateTime0 = new org.joda.time.LocalDateTime();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        java.lang.String str6 = property5.getName();
        int int7 = property5.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType8 = property5.getFieldType();
        int int9 = localDateTime0.get(dateTimeFieldType8);
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone11 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str13 = dateTimeZone11.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime14 = org.joda.time.LocalDateTime.now(dateTimeZone11);
        org.joda.time.LocalDateTime.Property property15 = localDateTime14.millisOfDay();
        org.joda.time.LocalDateTime localDateTime17 = localDateTime14.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime18 = localDateTime14.toDateTime();
        java.lang.String str19 = dateTime18.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int21 = dateTime18.get(dateTimeFieldType20);
        org.joda.time.Chronology chronology22 = dateTime18.getChronology();
        org.joda.time.DateTimeZone dateTimeZone23 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str25 = dateTimeZone23.getShortName((long) (short) 10);
        long long27 = dateTimeZone23.convertUTCToLocal((long) ' ');
        java.lang.String str28 = dateTimeZone23.toString();
        boolean boolean30 = dateTimeZone23.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology31 = chronology22.withZone(dateTimeZone23);
        org.joda.time.DateTimeField dateTimeField32 = chronology31.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField33 = dateTimeFieldType10.getField(chronology31);
        org.joda.time.Chronology chronology34 = chronology31.withUTC();
        org.joda.time.DurationField durationField35 = chronology34.millis();
        org.joda.time.DateTimeField dateTimeField36 = chronology34.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField37 = chronology34.halfdayOfDay();
        org.joda.time.DateTimeField dateTimeField38 = dateTimeFieldType8.getField(chronology34);
        org.joda.time.DateTimeField dateTimeField39 = chronology34.minuteOfHour();
        org.joda.time.DurationField durationField40 = chronology34.years();
        org.joda.time.DateTimeField dateTimeField41 = chronology34.secondOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType42 = org.joda.time.DateTimeFieldType.weekyearOfCentury();
        org.joda.time.DurationFieldType durationFieldType43 = dateTimeFieldType42.getDurationType();
        org.joda.time.DateTimeZone dateTimeZone44 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str46 = dateTimeZone44.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime47 = org.joda.time.LocalDateTime.now(dateTimeZone44);
        org.joda.time.LocalDateTime.Property property48 = localDateTime47.millisOfDay();
        org.joda.time.LocalDateTime localDateTime50 = localDateTime47.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime51 = localDateTime47.toDateTime();
        java.lang.String str52 = dateTime51.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int54 = dateTime51.get(dateTimeFieldType53);
        org.joda.time.Chronology chronology55 = dateTime51.getChronology();
        org.joda.time.DateTimeField dateTimeField56 = chronology55.weekyearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone57 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str59 = dateTimeZone57.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime60 = org.joda.time.LocalDateTime.now(dateTimeZone57);
        org.joda.time.LocalDateTime.Property property61 = localDateTime60.millisOfDay();
        long long62 = property61.remainder();
        org.joda.time.LocalDateTime localDateTime63 = property61.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime64 = property61.roundFloorCopy();
        java.lang.String str65 = property61.getAsShortText();
        int int66 = property61.getMinimumValue();
        org.joda.time.LocalDateTime localDateTime68 = property61.addToCopy((long) 53623874);
        int[] intArray70 = chronology55.get((org.joda.time.ReadablePartial) localDateTime68, (long) 53630466);
        org.joda.time.DateTimeZone dateTimeZone72 = org.joda.time.DateTimeZone.forOffsetMillis((int) 'a');
        org.joda.time.LocalDateTime localDateTime73 = org.joda.time.LocalDateTime.now(dateTimeZone72);
        java.util.Date date74 = localDateTime73.toDate();
        int[] intArray76 = chronology55.get((org.joda.time.ReadablePartial) localDateTime73, (long) 99);
        org.joda.time.DurationField durationField77 = durationFieldType43.getField(chronology55);
        org.joda.time.DateTimeField dateTimeField78 = chronology55.minuteOfHour();
        boolean boolean79 = dateTimeField78.isSupported();
        int int81 = dateTimeField78.getLeapAmount((long) 53633692);
        org.joda.time.DateTimeZone dateTimeZone82 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str84 = dateTimeZone82.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime85 = org.joda.time.LocalDateTime.now(dateTimeZone82);
        org.joda.time.LocalDateTime.Property property86 = localDateTime85.millisOfDay();
        org.joda.time.LocalDateTime localDateTime88 = localDateTime85.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime90 = localDateTime85.plusHours((int) ' ');
        org.joda.time.DateTimeFieldType dateTimeFieldType91 = org.joda.time.DateTimeFieldType.weekyearOfCentury();
        int int92 = localDateTime90.get(dateTimeFieldType91);
        java.util.Locale locale93 = java.util.Locale.ENGLISH;
        java.lang.String str94 = dateTimeField78.getAsText((org.joda.time.ReadablePartial) localDateTime90, locale93);
        java.lang.String str96 = locale93.getExtension('x');
        int int97 = dateTimeField41.getMaximumTextLength(locale93);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField40 and durationField77", (durationField40.compareTo(durationField77) == 0) == durationField40.equals(durationField77));
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test099");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.ReadableInstant readableInstant5 = null;
        long long6 = property4.getDifferenceAsLong(readableInstant5);
        int int7 = property4.getMaximumValue();
        org.joda.time.LocalDateTime localDateTime8 = property4.roundHalfEvenCopy();
        int int9 = localDateTime8.size();
        org.joda.time.DateTimeZone dateTimeZone10 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str12 = dateTimeZone10.getShortName((long) (short) 10);
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        java.lang.Object obj19 = null;
        boolean boolean20 = dateTimeZone13.equals(obj19);
        long long22 = dateTimeZone10.getMillisKeepLocal(dateTimeZone13, (long) 53);
        org.joda.time.DateTime dateTime23 = localDateTime8.toDateTime(dateTimeZone13);
        org.joda.time.Instant instant24 = dateTime23.toInstant();
        org.joda.time.Instant instant25 = instant24.toInstant();
        org.joda.time.DateTimeZone dateTimeZone26 = instant24.getZone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime23 and instant24", (dateTime23.compareTo(instant24) == 0) == dateTime23.equals(instant24));
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test100");
        org.joda.time.DurationFieldType durationFieldType0 = org.joda.time.DurationFieldType.hours();
        org.joda.time.DateTimeFieldType dateTimeFieldType1 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone2 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str4 = dateTimeZone2.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime5 = org.joda.time.LocalDateTime.now(dateTimeZone2);
        org.joda.time.LocalDateTime.Property property6 = localDateTime5.millisOfDay();
        org.joda.time.LocalDateTime localDateTime8 = localDateTime5.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime9 = localDateTime5.toDateTime();
        java.lang.String str10 = dateTime9.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int12 = dateTime9.get(dateTimeFieldType11);
        org.joda.time.Chronology chronology13 = dateTime9.getChronology();
        org.joda.time.DateTimeZone dateTimeZone14 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str16 = dateTimeZone14.getShortName((long) (short) 10);
        long long18 = dateTimeZone14.convertUTCToLocal((long) ' ');
        java.lang.String str19 = dateTimeZone14.toString();
        boolean boolean21 = dateTimeZone14.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology22 = chronology13.withZone(dateTimeZone14);
        boolean boolean23 = dateTimeFieldType1.isSupported(chronology22);
        org.joda.time.DateTimeZone dateTimeZone24 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str26 = dateTimeZone24.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime27 = org.joda.time.LocalDateTime.now(dateTimeZone24);
        org.joda.time.LocalDateTime.Property property28 = localDateTime27.millisOfDay();
        org.joda.time.LocalDateTime localDateTime30 = localDateTime27.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime31 = localDateTime27.toDateTime();
        java.lang.String str32 = dateTime31.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType33 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int34 = dateTime31.get(dateTimeFieldType33);
        org.joda.time.Chronology chronology35 = dateTime31.getChronology();
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str38 = dateTimeZone36.getShortName((long) (short) 10);
        long long40 = dateTimeZone36.convertUTCToLocal((long) ' ');
        java.lang.String str41 = dateTimeZone36.toString();
        boolean boolean43 = dateTimeZone36.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology44 = chronology35.withZone(dateTimeZone36);
        org.joda.time.DurationField durationField45 = chronology35.weekyears();
        org.joda.time.DateTimeField dateTimeField46 = chronology35.dayOfYear();
        org.joda.time.DurationField durationField47 = chronology35.weeks();
        org.joda.time.DateTimeField dateTimeField48 = chronology35.yearOfEra();
        org.joda.time.DateTimeField dateTimeField49 = chronology35.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField50 = dateTimeFieldType1.getField(chronology35);
        org.joda.time.DateTimeField dateTimeField51 = chronology35.clockhourOfDay();
        org.joda.time.DurationField durationField52 = durationFieldType0.getField(chronology35);
        org.joda.time.DateTimeZone dateTimeZone53 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str55 = dateTimeZone53.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime56 = org.joda.time.LocalDateTime.now(dateTimeZone53);
        org.joda.time.LocalDateTime.Property property57 = localDateTime56.millisOfDay();
        org.joda.time.LocalDateTime localDateTime59 = localDateTime56.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime61 = localDateTime56.plusHours((int) ' ');
        org.joda.time.DateTimeFieldType dateTimeFieldType62 = org.joda.time.DateTimeFieldType.weekyearOfCentury();
        int int63 = localDateTime61.get(dateTimeFieldType62);
        org.joda.time.LocalDateTime localDateTime65 = localDateTime61.minusWeeks(4);
        org.joda.time.Chronology chronology66 = localDateTime65.getChronology();
        org.joda.time.DurationField durationField67 = durationFieldType0.getField(chronology66);
        org.joda.time.DurationField durationField68 = chronology66.seconds();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField52 and durationField67", (durationField52.compareTo(durationField67) == 0) == durationField52.equals(durationField67));
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test101");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        boolean boolean22 = dateTimeFieldType0.isSupported(chronology21);
        org.joda.time.DurationField durationField23 = chronology21.years();
        org.joda.time.DateTimeField dateTimeField24 = chronology21.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField25 = chronology21.halfdayOfDay();
        org.joda.time.DateTimeField dateTimeField26 = chronology21.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology21.year();
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        java.lang.String str33 = property32.getName();
        org.joda.time.LocalDateTime localDateTime34 = property32.roundHalfFloorCopy();
        org.joda.time.LocalDateTime localDateTime36 = localDateTime34.minusHours((int) (byte) -1);
        org.joda.time.ReadablePeriod readablePeriod37 = null;
        org.joda.time.LocalDateTime localDateTime38 = localDateTime36.minus(readablePeriod37);
        org.joda.time.LocalDateTime localDateTime40 = localDateTime38.plusMinutes(69);
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = org.joda.time.DateTimeFieldType.weekyearOfCentury();
        org.joda.time.DurationFieldType durationFieldType42 = dateTimeFieldType41.getDurationType();
        org.joda.time.DateTimeZone dateTimeZone43 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str45 = dateTimeZone43.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime46 = org.joda.time.LocalDateTime.now(dateTimeZone43);
        org.joda.time.LocalDateTime.Property property47 = localDateTime46.millisOfDay();
        org.joda.time.LocalDateTime localDateTime49 = localDateTime46.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime50 = localDateTime46.toDateTime();
        java.lang.String str51 = dateTime50.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType52 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int53 = dateTime50.get(dateTimeFieldType52);
        org.joda.time.Chronology chronology54 = dateTime50.getChronology();
        org.joda.time.DateTimeField dateTimeField55 = chronology54.weekyearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone56 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str58 = dateTimeZone56.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime59 = org.joda.time.LocalDateTime.now(dateTimeZone56);
        org.joda.time.LocalDateTime.Property property60 = localDateTime59.millisOfDay();
        long long61 = property60.remainder();
        org.joda.time.LocalDateTime localDateTime62 = property60.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime63 = property60.roundFloorCopy();
        java.lang.String str64 = property60.getAsShortText();
        int int65 = property60.getMinimumValue();
        org.joda.time.LocalDateTime localDateTime67 = property60.addToCopy((long) 53623874);
        int[] intArray69 = chronology54.get((org.joda.time.ReadablePartial) localDateTime67, (long) 53630466);
        org.joda.time.DateTimeZone dateTimeZone71 = org.joda.time.DateTimeZone.forOffsetMillis((int) 'a');
        org.joda.time.LocalDateTime localDateTime72 = org.joda.time.LocalDateTime.now(dateTimeZone71);
        java.util.Date date73 = localDateTime72.toDate();
        int[] intArray75 = chronology54.get((org.joda.time.ReadablePartial) localDateTime72, (long) 99);
        org.joda.time.DurationField durationField76 = durationFieldType42.getField(chronology54);
        boolean boolean77 = localDateTime38.isSupported(durationFieldType42);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter78 = null;
        java.lang.String str79 = localDateTime38.toString(dateTimeFormatter78);
        int int80 = localDateTime38.getMillisOfDay();
        int int81 = dateTimeField27.getMinimumValue((org.joda.time.ReadablePartial) localDateTime38);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField23 and durationField76", (durationField23.compareTo(durationField76) == 0) == durationField23.equals(durationField76));
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test102");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property7 = localDateTime6.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone8 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str10 = dateTimeZone8.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now(dateTimeZone8);
        org.joda.time.LocalDateTime.Property property12 = localDateTime11.millisOfDay();
        org.joda.time.LocalDateTime localDateTime14 = localDateTime11.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime15 = localDateTime11.toDateTime();
        java.lang.String str16 = dateTime15.toString();
        org.joda.time.DateTime dateTime17 = localDateTime6.toDateTime((org.joda.time.ReadableInstant) dateTime15);
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime25 = localDateTime21.toDateTime();
        java.lang.String str26 = dateTime25.toString();
        int int27 = dateTime15.compareTo((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.LocalDateTime localDateTime34 = localDateTime31.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property35 = localDateTime34.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str38 = dateTimeZone36.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime39 = org.joda.time.LocalDateTime.now(dateTimeZone36);
        org.joda.time.LocalDateTime.Property property40 = localDateTime39.millisOfDay();
        org.joda.time.LocalDateTime localDateTime42 = localDateTime39.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime43 = localDateTime39.toDateTime();
        java.lang.String str44 = dateTime43.toString();
        org.joda.time.DateTime dateTime45 = localDateTime34.toDateTime((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.DateTimeZone dateTimeZone46 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str48 = dateTimeZone46.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime49 = org.joda.time.LocalDateTime.now(dateTimeZone46);
        org.joda.time.LocalDateTime.Property property50 = localDateTime49.millisOfDay();
        org.joda.time.LocalDateTime localDateTime52 = localDateTime49.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime53 = localDateTime49.toDateTime();
        java.lang.String str54 = dateTime53.toString();
        int int55 = dateTime43.compareTo((org.joda.time.ReadableInstant) dateTime53);
        boolean boolean56 = dateTime25.isAfter((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.DateTimeFieldType dateTimeFieldType57 = org.joda.time.DateTimeFieldType.dayOfMonth();
        java.lang.String str58 = dateTimeFieldType57.getName();
        int int59 = dateTime25.get(dateTimeFieldType57);
        org.joda.time.DateTimeZone dateTimeZone60 = dateTime25.getZone();
        org.joda.time.Instant instant61 = dateTime25.toInstant();
        org.joda.time.LocalDateTime localDateTime62 = new org.joda.time.LocalDateTime();
        java.lang.String str63 = localDateTime62.toString();
        org.joda.time.LocalDateTime localDateTime65 = localDateTime62.minusMillis(4);
        org.joda.time.LocalDateTime localDateTime67 = localDateTime65.withMinuteOfHour((int) (byte) 10);
        org.joda.time.DateTimeZone dateTimeZone68 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str70 = dateTimeZone68.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime71 = org.joda.time.LocalDateTime.now(dateTimeZone68);
        org.joda.time.LocalDateTime localDateTime73 = localDateTime71.minusMillis((int) (byte) 0);
        int int74 = localDateTime71.getHourOfDay();
        boolean boolean75 = localDateTime67.isAfter((org.joda.time.ReadablePartial) localDateTime71);
        int int76 = localDateTime67.getMillisOfSecond();
        org.joda.time.DateTime dateTime77 = localDateTime67.toDateTime();
        boolean boolean78 = instant61.isAfter((org.joda.time.ReadableInstant) dateTime77);
        org.joda.time.DateTimeZone dateTimeZone79 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str81 = dateTimeZone79.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime82 = org.joda.time.LocalDateTime.now(dateTimeZone79);
        org.joda.time.LocalDateTime.Property property83 = localDateTime82.millisOfDay();
        org.joda.time.LocalDateTime localDateTime85 = localDateTime82.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime87 = localDateTime82.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime89 = localDateTime87.minusHours((int) (short) 10);
        int int90 = localDateTime87.getMinuteOfHour();
        org.joda.time.ReadablePeriod readablePeriod91 = null;
        org.joda.time.LocalDateTime localDateTime92 = localDateTime87.minus(readablePeriod91);
        org.joda.time.LocalDateTime localDateTime94 = localDateTime92.plusDays(59);
        org.joda.time.LocalDateTime.Property property95 = localDateTime92.dayOfWeek();
        org.joda.time.LocalDateTime localDateTime97 = localDateTime92.plusMillis(53648013);
        org.joda.time.DateTime dateTime98 = localDateTime92.toDateTime();
        boolean boolean99 = dateTime77.isBefore((org.joda.time.ReadableInstant) dateTime98);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime15 and instant61", (dateTime15.compareTo(instant61) == 0) == dateTime15.equals(instant61));
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test103");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime8 = localDateTime3.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime10 = localDateTime8.withMillisOfDay(53620101);
        org.joda.time.LocalDateTime localDateTime12 = localDateTime10.minusMonths((-1));
        org.joda.time.LocalDateTime localDateTime14 = localDateTime10.plusSeconds(0);
        org.joda.time.LocalDateTime.Property property15 = localDateTime14.centuryOfEra();
        org.joda.time.LocalDateTime localDateTime16 = property15.roundCeilingCopy();
        org.joda.time.LocalDateTime.Property property17 = localDateTime16.hourOfDay();
        org.joda.time.LocalDateTime localDateTime18 = property17.roundHalfEvenCopy();
        org.joda.time.DateTimeZone dateTimeZone19 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str21 = dateTimeZone19.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now(dateTimeZone19);
        org.joda.time.LocalDateTime.Property property23 = localDateTime22.millisOfDay();
        java.lang.String str24 = property23.getName();
        org.joda.time.LocalDateTime localDateTime25 = property23.roundHalfFloorCopy();
        org.joda.time.LocalDateTime localDateTime26 = property23.withMinimumValue();
        org.joda.time.LocalDateTime localDateTime28 = localDateTime26.withMinuteOfHour(4);
        org.joda.time.LocalDateTime.Property property29 = localDateTime26.era();
        org.joda.time.DateTimeZone dateTimeZone30 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str32 = dateTimeZone30.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime33 = org.joda.time.LocalDateTime.now(dateTimeZone30);
        org.joda.time.LocalDateTime.Property property34 = localDateTime33.millisOfDay();
        org.joda.time.LocalDateTime localDateTime36 = localDateTime33.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property37 = localDateTime36.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone38 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str40 = dateTimeZone38.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime41 = org.joda.time.LocalDateTime.now(dateTimeZone38);
        org.joda.time.LocalDateTime.Property property42 = localDateTime41.millisOfDay();
        org.joda.time.LocalDateTime localDateTime44 = localDateTime41.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime45 = localDateTime41.toDateTime();
        java.lang.String str46 = dateTime45.toString();
        org.joda.time.DateTime dateTime47 = localDateTime36.toDateTime((org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.DateTimeZone dateTimeZone48 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str50 = dateTimeZone48.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime51 = org.joda.time.LocalDateTime.now(dateTimeZone48);
        org.joda.time.LocalDateTime.Property property52 = localDateTime51.millisOfDay();
        org.joda.time.LocalDateTime localDateTime54 = localDateTime51.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime55 = localDateTime51.toDateTime();
        java.lang.String str56 = dateTime55.toString();
        int int57 = dateTime45.compareTo((org.joda.time.ReadableInstant) dateTime55);
        org.joda.time.ReadableInstant readableInstant58 = null;
        boolean boolean59 = dateTime45.isEqual(readableInstant58);
        org.joda.time.Instant instant60 = dateTime45.toInstant();
        int int61 = property29.compareTo((org.joda.time.ReadableInstant) instant60);
        org.joda.time.Chronology chronology62 = instant60.getChronology();
        org.joda.time.ReadableInstant readableInstant63 = null;
        boolean boolean64 = instant60.isAfter(readableInstant63);
        long long65 = property17.getDifferenceAsLong(readableInstant63);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime45 and instant60", (dateTime45.compareTo(instant60) == 0) == dateTime45.equals(instant60));
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test104");
        org.joda.time.LocalDateTime localDateTime0 = new org.joda.time.LocalDateTime();
        org.joda.time.LocalDateTime.Property property1 = localDateTime0.millisOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType2 = property1.getFieldType();
        org.joda.time.DateTimeZone dateTimeZone3 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str5 = dateTimeZone3.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime6 = org.joda.time.LocalDateTime.now(dateTimeZone3);
        org.joda.time.LocalDateTime.Property property7 = localDateTime6.millisOfDay();
        org.joda.time.LocalDateTime localDateTime9 = localDateTime6.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime10 = localDateTime6.toDateTime();
        java.lang.String str11 = dateTime10.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType12 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int13 = dateTime10.get(dateTimeFieldType12);
        org.joda.time.Chronology chronology14 = dateTime10.getChronology();
        org.joda.time.DateTimeZone dateTimeZone15 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str17 = dateTimeZone15.getShortName((long) (short) 10);
        long long19 = dateTimeZone15.convertUTCToLocal((long) ' ');
        java.lang.String str20 = dateTimeZone15.toString();
        boolean boolean22 = dateTimeZone15.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology23 = chronology14.withZone(dateTimeZone15);
        org.joda.time.DurationField durationField24 = chronology14.weekyears();
        org.joda.time.DateTimeField dateTimeField25 = chronology14.dayOfYear();
        org.joda.time.DurationField durationField26 = chronology14.weeks();
        org.joda.time.DateTimeField dateTimeField27 = chronology14.yearOfEra();
        boolean boolean28 = dateTimeFieldType2.isSupported(chronology14);
        org.joda.time.DurationField durationField29 = chronology14.months();
        org.joda.time.DateTimeField dateTimeField30 = chronology14.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField31 = chronology14.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone32 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str34 = dateTimeZone32.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime35 = org.joda.time.LocalDateTime.now(dateTimeZone32);
        org.joda.time.LocalDateTime.Property property36 = localDateTime35.millisOfDay();
        org.joda.time.LocalDateTime localDateTime38 = localDateTime35.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime40 = localDateTime35.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime42 = localDateTime40.minusHours((int) (short) 10);
        org.joda.time.LocalDateTime localDateTime44 = localDateTime42.withEra((int) (byte) 0);
        org.joda.time.LocalDateTime.Property property45 = localDateTime42.monthOfYear();
        org.joda.time.LocalDateTime localDateTime47 = property45.addWrapFieldToCopy(57);
        org.joda.time.DurationField durationField48 = property45.getRangeDurationField();
        int int49 = property45.getMaximumValue();
        java.util.Locale.Builder builder50 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder52 = builder50.addUnicodeLocaleAttribute("fra");
        java.util.Locale locale53 = builder50.build();
        java.util.Locale locale54 = java.util.Locale.PRC;
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.util.Set<java.lang.String> strSet56 = locale55.getUnicodeLocaleAttributes();
        java.lang.String str57 = locale54.getDisplayVariant(locale55);
        java.util.Locale.Builder builder58 = builder50.setLocale(locale55);
        java.lang.String str59 = property45.getAsShortText(locale55);
        int int60 = dateTimeField31.getMaximumShortTextLength(locale55);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField24 and durationField48", (durationField24.compareTo(durationField48) == 0) == durationField24.equals(durationField48));
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test105");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        org.joda.time.DateTimeField dateTimeField22 = chronology21.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField23 = dateTimeFieldType0.getField(chronology21);
        org.joda.time.DateTimeZone dateTimeZone24 = chronology21.getZone();
        org.joda.time.DurationField durationField25 = chronology21.minutes();
        org.joda.time.DurationField durationField26 = chronology21.days();
        org.joda.time.DurationField durationField27 = chronology21.millis();
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.Chronology chronology31 = chronology21.withZone(dateTimeZone28);
        org.joda.time.DurationField durationField32 = chronology31.hours();
        org.joda.time.DurationField durationField33 = chronology31.halfdays();
        org.joda.time.DateTimeZone dateTimeZone34 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str36 = dateTimeZone34.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime37 = org.joda.time.LocalDateTime.now(dateTimeZone34);
        org.joda.time.LocalDateTime.Property property38 = localDateTime37.millisOfDay();
        org.joda.time.ReadableInstant readableInstant39 = null;
        long long40 = property38.getDifferenceAsLong(readableInstant39);
        org.joda.time.DurationField durationField41 = property38.getRangeDurationField();
        long long44 = durationField41.add((long) 53623874, (int) 'a');
        long long47 = durationField41.getMillis((int) ' ', (long) 0);
        long long50 = durationField41.getMillis((long) ' ', (long) 50);
        int int51 = durationField33.compareTo(durationField41);
        boolean boolean52 = durationField33.isSupported();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField26 and durationField41", (durationField26.compareTo(durationField41) == 0) == durationField26.equals(durationField41));
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test106");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeField dateTimeField12 = chronology11.weekyearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime16 = org.joda.time.LocalDateTime.now(dateTimeZone13);
        org.joda.time.LocalDateTime.Property property17 = localDateTime16.millisOfDay();
        long long18 = property17.remainder();
        org.joda.time.LocalDateTime localDateTime19 = property17.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime20 = property17.roundFloorCopy();
        java.lang.String str21 = property17.getAsShortText();
        int int22 = property17.getMinimumValue();
        org.joda.time.LocalDateTime localDateTime24 = property17.addToCopy((long) 53623874);
        int[] intArray26 = chronology11.get((org.joda.time.ReadablePartial) localDateTime24, (long) 53630466);
        org.joda.time.DateTimeField dateTimeField27 = chronology11.era();
        org.joda.time.DateTimeField dateTimeField28 = chronology11.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField29 = chronology11.yearOfCentury();
        org.joda.time.DurationField durationField30 = chronology11.days();
        org.joda.time.DurationField durationField31 = chronology11.eras();
        org.joda.time.DateTimeField dateTimeField32 = chronology11.hourOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField30 and durationField31", Math.signum(durationField30.compareTo(durationField31)) == -Math.signum(durationField31.compareTo(durationField30)));
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test107");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.clockhourOfHalfday();
        java.lang.String str1 = dateTimeFieldType0.toString();
        org.joda.time.DurationFieldType durationFieldType2 = org.joda.time.DurationFieldType.hours();
        org.joda.time.DateTimeFieldType dateTimeFieldType3 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone4 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str6 = dateTimeZone4.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime7 = org.joda.time.LocalDateTime.now(dateTimeZone4);
        org.joda.time.LocalDateTime.Property property8 = localDateTime7.millisOfDay();
        org.joda.time.LocalDateTime localDateTime10 = localDateTime7.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime11 = localDateTime7.toDateTime();
        java.lang.String str12 = dateTime11.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType13 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int14 = dateTime11.get(dateTimeFieldType13);
        org.joda.time.Chronology chronology15 = dateTime11.getChronology();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        long long20 = dateTimeZone16.convertUTCToLocal((long) ' ');
        java.lang.String str21 = dateTimeZone16.toString();
        boolean boolean23 = dateTimeZone16.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology24 = chronology15.withZone(dateTimeZone16);
        boolean boolean25 = dateTimeFieldType3.isSupported(chronology24);
        org.joda.time.DateTimeZone dateTimeZone26 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str28 = dateTimeZone26.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime29 = org.joda.time.LocalDateTime.now(dateTimeZone26);
        org.joda.time.LocalDateTime.Property property30 = localDateTime29.millisOfDay();
        org.joda.time.LocalDateTime localDateTime32 = localDateTime29.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime33 = localDateTime29.toDateTime();
        java.lang.String str34 = dateTime33.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int36 = dateTime33.get(dateTimeFieldType35);
        org.joda.time.Chronology chronology37 = dateTime33.getChronology();
        org.joda.time.DateTimeZone dateTimeZone38 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str40 = dateTimeZone38.getShortName((long) (short) 10);
        long long42 = dateTimeZone38.convertUTCToLocal((long) ' ');
        java.lang.String str43 = dateTimeZone38.toString();
        boolean boolean45 = dateTimeZone38.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology46 = chronology37.withZone(dateTimeZone38);
        org.joda.time.DurationField durationField47 = chronology37.weekyears();
        org.joda.time.DateTimeField dateTimeField48 = chronology37.dayOfYear();
        org.joda.time.DurationField durationField49 = chronology37.weeks();
        org.joda.time.DateTimeField dateTimeField50 = chronology37.yearOfEra();
        org.joda.time.DateTimeField dateTimeField51 = chronology37.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField52 = dateTimeFieldType3.getField(chronology37);
        org.joda.time.DateTimeField dateTimeField53 = chronology37.clockhourOfDay();
        org.joda.time.DurationField durationField54 = durationFieldType2.getField(chronology37);
        boolean boolean55 = dateTimeFieldType0.isSupported(chronology37);
        org.joda.time.DurationField durationField56 = chronology37.months();
        org.joda.time.DurationField durationField57 = chronology37.months();
        org.joda.time.DurationField durationField58 = chronology37.eras();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField58, durationField47, and durationField49", !(durationField58.compareTo(durationField47) == 0) || (Math.signum(durationField58.compareTo(durationField49)) == Math.signum(durationField47.compareTo(durationField49))));
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test108");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DurationField durationField21 = chronology11.weekyears();
        org.joda.time.DateTimeField dateTimeField22 = chronology11.dayOfYear();
        org.joda.time.DurationField durationField23 = chronology11.weeks();
        org.joda.time.DateTimeField dateTimeField24 = chronology11.centuryOfEra();
        org.joda.time.DurationField durationField25 = chronology11.eras();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField25, durationField21, and durationField23", !(durationField25.compareTo(durationField21) == 0) || (Math.signum(durationField25.compareTo(durationField23)) == Math.signum(durationField21.compareTo(durationField23))));
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test109");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        java.lang.Object obj12 = null;
        boolean boolean13 = dateTime7.equals(obj12);
        long long14 = dateTime7.getMillis();
        org.joda.time.Instant instant15 = dateTime7.toInstant();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        long long21 = dateTimeZone17.convertUTCToLocal((long) ' ');
        java.lang.String str22 = dateTimeZone17.toString();
        long long25 = dateTimeZone17.adjustOffset((long) (short) 100, false);
        org.joda.time.LocalDateTime localDateTime26 = new org.joda.time.LocalDateTime((long) '4', dateTimeZone17);
        org.joda.time.DateTimeZone dateTimeZone27 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str29 = dateTimeZone27.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime30 = org.joda.time.LocalDateTime.now(dateTimeZone27);
        org.joda.time.LocalDateTime.Property property31 = localDateTime30.millisOfDay();
        org.joda.time.LocalDateTime localDateTime33 = localDateTime30.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime34 = localDateTime30.toDateTime();
        java.lang.String str35 = dateTime34.toString();
        int int36 = dateTimeZone17.getOffset((org.joda.time.ReadableInstant) dateTime34);
        boolean boolean37 = instant15.isAfter((org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.DateTimeZone dateTimeZone38 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str40 = dateTimeZone38.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime41 = org.joda.time.LocalDateTime.now(dateTimeZone38);
        org.joda.time.LocalDateTime.Property property42 = localDateTime41.millisOfDay();
        org.joda.time.ReadableInstant readableInstant43 = null;
        long long44 = property42.getDifferenceAsLong(readableInstant43);
        int int45 = property42.getMaximumValue();
        org.joda.time.LocalDateTime localDateTime46 = property42.roundHalfEvenCopy();
        int int47 = localDateTime46.size();
        org.joda.time.DateTimeZone dateTimeZone48 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str50 = dateTimeZone48.getShortName((long) (short) 10);
        org.joda.time.DateTimeZone dateTimeZone51 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str53 = dateTimeZone51.getShortName((long) (short) 10);
        long long55 = dateTimeZone51.convertUTCToLocal((long) ' ');
        java.lang.String str56 = dateTimeZone51.toString();
        java.lang.Object obj57 = null;
        boolean boolean58 = dateTimeZone51.equals(obj57);
        long long60 = dateTimeZone48.getMillisKeepLocal(dateTimeZone51, (long) 53);
        org.joda.time.DateTime dateTime61 = localDateTime46.toDateTime(dateTimeZone51);
        org.joda.time.Instant instant62 = dateTime61.toInstant();
        org.joda.time.Instant instant63 = instant62.toInstant();
        int int64 = dateTime34.compareTo((org.joda.time.ReadableInstant) instant63);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant15", (dateTime7.compareTo(instant15) == 0) == dateTime7.equals(instant15));
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test110");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone9 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str11 = dateTimeZone9.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(dateTimeZone9);
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.millisOfDay();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime12.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now(dateTimeZone17);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime20.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime24 = localDateTime20.toDateTime();
        java.lang.String str25 = dateTime24.toString();
        org.joda.time.DateTime dateTime26 = localDateTime15.toDateTime((org.joda.time.ReadableInstant) dateTime24);
        boolean boolean27 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.LocalDateTime localDateTime34 = localDateTime31.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime35 = localDateTime31.toDateTime();
        java.lang.String str36 = dateTime35.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int38 = dateTime35.get(dateTimeFieldType37);
        org.joda.time.DateTimeZone dateTimeZone39 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str41 = dateTimeZone39.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime42 = org.joda.time.LocalDateTime.now(dateTimeZone39);
        org.joda.time.LocalDateTime.Property property43 = localDateTime42.millisOfDay();
        org.joda.time.LocalDateTime localDateTime45 = localDateTime42.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property46 = localDateTime45.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone47 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str49 = dateTimeZone47.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime50 = org.joda.time.LocalDateTime.now(dateTimeZone47);
        org.joda.time.LocalDateTime.Property property51 = localDateTime50.millisOfDay();
        org.joda.time.LocalDateTime localDateTime53 = localDateTime50.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime54 = localDateTime50.toDateTime();
        java.lang.String str55 = dateTime54.toString();
        org.joda.time.DateTime dateTime56 = localDateTime45.toDateTime((org.joda.time.ReadableInstant) dateTime54);
        boolean boolean57 = dateTime35.isAfter((org.joda.time.ReadableInstant) dateTime54);
        boolean boolean58 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.DateTimeZone dateTimeZone59 = dateTime7.getZone();
        java.lang.String str60 = dateTime7.toString();
        org.joda.time.Instant instant61 = dateTime7.toInstant();
        org.joda.time.DateTimeZone dateTimeZone62 = instant61.getZone();
        long long65 = dateTimeZone62.convertLocalToUTC(9223371990053967205L, true);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant61", (dateTime7.compareTo(instant61) == 0) == dateTime7.equals(instant61));
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test111");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DurationField durationField21 = chronology11.weekyears();
        org.joda.time.DateTimeField dateTimeField22 = chronology11.dayOfYear();
        org.joda.time.DurationField durationField23 = chronology11.weeks();
        org.joda.time.DateTimeField dateTimeField24 = chronology11.yearOfEra();
        org.joda.time.DateTimeField dateTimeField25 = chronology11.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField26 = chronology11.dayOfWeek();
        org.joda.time.LocalDateTime localDateTime27 = new org.joda.time.LocalDateTime(chronology11);
        org.joda.time.DateTimeField dateTimeField28 = chronology11.dayOfWeek();
        org.joda.time.DurationField durationField29 = chronology11.years();
        org.joda.time.DateTimeZone dateTimeZone31 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str33 = dateTimeZone31.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime34 = org.joda.time.LocalDateTime.now(dateTimeZone31);
        org.joda.time.LocalDateTime.Property property35 = localDateTime34.millisOfDay();
        org.joda.time.LocalDateTime localDateTime37 = localDateTime34.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime38 = localDateTime34.toDateTime();
        java.lang.String str39 = dateTime38.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType40 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int41 = dateTime38.get(dateTimeFieldType40);
        org.joda.time.Chronology chronology42 = dateTime38.getChronology();
        org.joda.time.DateTimeField dateTimeField43 = chronology42.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField44 = chronology42.clockhourOfHalfday();
        org.joda.time.LocalDateTime localDateTime45 = new org.joda.time.LocalDateTime((long) (short) 100, chronology42);
        org.joda.time.DurationField durationField46 = chronology42.halfdays();
        org.joda.time.LocalDateTime localDateTime47 = new org.joda.time.LocalDateTime(chronology42);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter48 = null;
        java.lang.String str49 = localDateTime47.toString(dateTimeFormatter48);
        int int50 = localDateTime47.getMonthOfYear();
        int[] intArray52 = chronology11.get((org.joda.time.ReadablePartial) localDateTime47, 53630359L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField21 and durationField29", (durationField21.compareTo(durationField29) == 0) == durationField21.equals(durationField29));
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test112");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        org.joda.time.DateTimeField dateTimeField22 = chronology21.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField23 = dateTimeFieldType0.getField(chronology21);
        org.joda.time.DateTimeField dateTimeField24 = chronology21.monthOfYear();
        org.joda.time.DateTimeField dateTimeField25 = chronology21.year();
        org.joda.time.ReadablePeriod readablePeriod26 = null;
        long long29 = chronology21.add(readablePeriod26, (-97L), 53658739);
        org.joda.time.DurationField durationField30 = chronology21.eras();
        org.joda.time.DateTimeField dateTimeField31 = chronology21.secondOfMinute();
        org.joda.time.DateTimeZone dateTimeZone32 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str34 = dateTimeZone32.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime35 = org.joda.time.LocalDateTime.now(dateTimeZone32);
        org.joda.time.LocalDateTime.Property property36 = localDateTime35.millisOfDay();
        org.joda.time.LocalDateTime localDateTime38 = localDateTime35.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime39 = localDateTime35.toDateTime();
        java.lang.String str40 = dateTime39.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int42 = dateTime39.get(dateTimeFieldType41);
        org.joda.time.Chronology chronology43 = dateTime39.getChronology();
        org.joda.time.DateTimeZone dateTimeZone44 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str46 = dateTimeZone44.getShortName((long) (short) 10);
        long long48 = dateTimeZone44.convertUTCToLocal((long) ' ');
        java.lang.String str49 = dateTimeZone44.toString();
        boolean boolean51 = dateTimeZone44.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology52 = chronology43.withZone(dateTimeZone44);
        org.joda.time.DurationField durationField53 = chronology43.weekyears();
        org.joda.time.DateTimeField dateTimeField54 = chronology43.dayOfYear();
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        long long58 = chronology43.add(readablePeriod55, (long) (short) -1, 21);
        org.joda.time.DurationField durationField59 = chronology43.centuries();
        org.joda.time.Chronology chronology60 = chronology43.withUTC();
        org.joda.time.DateTimeField dateTimeField61 = chronology43.centuryOfEra();
        java.util.Locale.Builder builder62 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder64 = builder62.addUnicodeLocaleAttribute("fra");
        java.util.Locale.Builder builder65 = builder64.clear();
        java.util.Locale.Builder builder67 = builder64.removeUnicodeLocaleAttribute("53638543");
        java.util.Locale.Builder builder68 = builder64.clear();
        java.util.Locale locale69 = builder68.build();
        java.util.Locale locale70 = builder68.build();
        int int71 = dateTimeField61.getMaximumShortTextLength(locale70);
        int int72 = dateTimeField31.getMaximumTextLength(locale70);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField30 and durationField53", Math.signum(durationField30.compareTo(durationField53)) == -Math.signum(durationField53.compareTo(durationField30)));
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test113");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DurationField durationField21 = chronology11.weekyears();
        org.joda.time.DateTimeField dateTimeField22 = chronology11.dayOfYear();
        org.joda.time.DurationField durationField23 = chronology11.weeks();
        org.joda.time.LocalDateTime localDateTime24 = org.joda.time.LocalDateTime.now(chronology11);
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str27 = dateTimeZone25.getShortName((long) (short) 10);
        long long29 = dateTimeZone25.convertUTCToLocal((long) ' ');
        java.lang.String str30 = dateTimeZone25.toString();
        boolean boolean32 = dateTimeZone25.equals((java.lang.Object) (short) 100);
        java.util.Locale locale34 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str35 = dateTimeZone25.getShortName((long) (-1), locale34);
        long long38 = dateTimeZone25.convertLocalToUTC((long) (short) 10, true);
        org.joda.time.Chronology chronology39 = chronology11.withZone(dateTimeZone25);
        org.joda.time.DateTimeZone dateTimeZone41 = org.joda.time.DateTimeZone.forOffsetHours(1);
        org.joda.time.Chronology chronology42 = chronology11.withZone(dateTimeZone41);
        org.joda.time.DateTimeZone dateTimeZone43 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str45 = dateTimeZone43.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime46 = org.joda.time.LocalDateTime.now(dateTimeZone43);
        org.joda.time.LocalDateTime.Property property47 = localDateTime46.millisOfDay();
        org.joda.time.LocalDateTime localDateTime49 = localDateTime46.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime50 = localDateTime46.toDateTime();
        java.lang.String str51 = dateTime50.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType52 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int53 = dateTime50.get(dateTimeFieldType52);
        org.joda.time.Chronology chronology54 = dateTime50.getChronology();
        org.joda.time.Chronology chronology55 = chronology54.withUTC();
        org.joda.time.DateTimeField dateTimeField56 = chronology55.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField57 = chronology55.hourOfHalfday();
        org.joda.time.DurationField durationField58 = chronology55.minutes();
        org.joda.time.DurationField durationField59 = chronology55.weekyears();
        org.joda.time.DateTimeField dateTimeField60 = chronology55.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField61 = chronology55.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField62 = chronology55.hourOfDay();
        org.joda.time.DateTimeZone dateTimeZone64 = org.joda.time.DateTimeZone.forOffsetMillis(61);
        org.joda.time.Chronology chronology65 = chronology55.withZone(dateTimeZone64);
        org.joda.time.Chronology chronology66 = chronology42.withZone(dateTimeZone64);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField21 and durationField59", (durationField21.compareTo(durationField59) == 0) == durationField21.equals(durationField59));
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test114");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone9 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str11 = dateTimeZone9.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(dateTimeZone9);
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.millisOfDay();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime12.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now(dateTimeZone17);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime20.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime24 = localDateTime20.toDateTime();
        java.lang.String str25 = dateTime24.toString();
        org.joda.time.DateTime dateTime26 = localDateTime15.toDateTime((org.joda.time.ReadableInstant) dateTime24);
        boolean boolean27 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.LocalDateTime localDateTime34 = localDateTime31.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime35 = localDateTime31.toDateTime();
        java.lang.String str36 = dateTime35.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int38 = dateTime35.get(dateTimeFieldType37);
        int int39 = dateTime24.compareTo((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.DateTimeZone dateTimeZone40 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str42 = dateTimeZone40.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime43 = org.joda.time.LocalDateTime.now(dateTimeZone40);
        org.joda.time.LocalDateTime.Property property44 = localDateTime43.millisOfDay();
        org.joda.time.LocalDateTime localDateTime46 = localDateTime43.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime47 = localDateTime43.toDateTime();
        java.lang.String str48 = dateTime47.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType49 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int50 = dateTime47.get(dateTimeFieldType49);
        org.joda.time.DateTimeZone dateTimeZone51 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str53 = dateTimeZone51.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime54 = org.joda.time.LocalDateTime.now(dateTimeZone51);
        org.joda.time.LocalDateTime.Property property55 = localDateTime54.millisOfDay();
        org.joda.time.LocalDateTime localDateTime57 = localDateTime54.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property58 = localDateTime57.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone59 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str61 = dateTimeZone59.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime62 = org.joda.time.LocalDateTime.now(dateTimeZone59);
        org.joda.time.LocalDateTime.Property property63 = localDateTime62.millisOfDay();
        org.joda.time.LocalDateTime localDateTime65 = localDateTime62.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime66 = localDateTime62.toDateTime();
        java.lang.String str67 = dateTime66.toString();
        org.joda.time.DateTime dateTime68 = localDateTime57.toDateTime((org.joda.time.ReadableInstant) dateTime66);
        boolean boolean69 = dateTime47.isAfter((org.joda.time.ReadableInstant) dateTime66);
        boolean boolean70 = dateTime24.isBefore((org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.DateTimeZone dateTimeZone71 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str73 = dateTimeZone71.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime74 = org.joda.time.LocalDateTime.now(dateTimeZone71);
        org.joda.time.LocalDateTime.Property property75 = localDateTime74.millisOfDay();
        org.joda.time.LocalDateTime localDateTime77 = localDateTime74.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime78 = localDateTime74.toDateTime();
        java.lang.String str79 = dateTime78.toString();
        org.joda.time.DateTimeZone dateTimeZone80 = dateTime78.getZone();
        long long81 = dateTime78.getMillis();
        boolean boolean82 = dateTime24.isAfter((org.joda.time.ReadableInstant) dateTime78);
        org.joda.time.Instant instant83 = dateTime24.toInstant();
        org.joda.time.Instant instant84 = dateTime24.toInstant();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant83", (dateTime7.compareTo(instant83) == 0) == dateTime7.equals(instant83));
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test115");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        org.joda.time.DateTimeField dateTimeField22 = chronology21.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField23 = dateTimeFieldType0.getField(chronology21);
        org.joda.time.DurationField durationField24 = chronology21.seconds();
        org.joda.time.DurationField durationField25 = chronology21.weekyears();
        org.joda.time.DateTimeField dateTimeField26 = chronology21.hourOfHalfday();
        org.joda.time.DateTimeZone dateTimeZone27 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str29 = dateTimeZone27.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime30 = org.joda.time.LocalDateTime.now(dateTimeZone27);
        org.joda.time.LocalDateTime.Property property31 = localDateTime30.millisOfDay();
        org.joda.time.LocalDateTime localDateTime33 = localDateTime30.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime35 = localDateTime30.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime37 = localDateTime35.minusHours((int) (short) 10);
        int int38 = localDateTime35.getMinuteOfHour();
        org.joda.time.ReadablePeriod readablePeriod39 = null;
        org.joda.time.LocalDateTime localDateTime40 = localDateTime35.minus(readablePeriod39);
        int[] intArray42 = chronology21.get((org.joda.time.ReadablePartial) localDateTime35, (long) (byte) 100);
        org.joda.time.DateTimeField dateTimeField43 = chronology21.hourOfDay();
        org.joda.time.DurationField durationField44 = chronology21.eras();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField44, durationField24, and durationField25", !(durationField44.compareTo(durationField24) == 0) || (Math.signum(durationField44.compareTo(durationField25)) == Math.signum(durationField24.compareTo(durationField25))));
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test116");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        long long5 = property4.remainder();
        org.joda.time.LocalDateTime localDateTime6 = property4.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime7 = property4.roundFloorCopy();
        java.lang.String str8 = property4.getAsShortText();
        int int9 = property4.getMinimumValue();
        org.joda.time.Interval interval10 = property4.toInterval();
        java.lang.String str11 = property4.getName();
        long long12 = property4.remainder();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime16 = org.joda.time.LocalDateTime.now(dateTimeZone13);
        org.joda.time.LocalDateTime.Property property17 = localDateTime16.millisOfDay();
        org.joda.time.LocalDateTime localDateTime19 = localDateTime16.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime20 = localDateTime16.toDateTime();
        java.lang.String str21 = dateTime20.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int23 = dateTime20.get(dateTimeFieldType22);
        org.joda.time.Chronology chronology24 = dateTime20.getChronology();
        java.lang.Object obj25 = null;
        boolean boolean26 = dateTime20.equals(obj25);
        long long27 = dateTime20.getMillis();
        org.joda.time.Instant instant28 = dateTime20.toInstant();
        org.joda.time.DateTimeZone dateTimeZone29 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str31 = dateTimeZone29.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime32 = org.joda.time.LocalDateTime.now(dateTimeZone29);
        org.joda.time.LocalDateTime.Property property33 = localDateTime32.millisOfDay();
        java.lang.String str34 = property33.getName();
        int int35 = property33.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = property33.getFieldType();
        org.joda.time.LocalDateTime localDateTime37 = property33.withMinimumValue();
        org.joda.time.LocalDateTime.Property property38 = localDateTime37.weekOfWeekyear();
        boolean boolean39 = dateTime20.equals((java.lang.Object) property38);
        org.joda.time.DateTimeZone dateTimeZone40 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str42 = dateTimeZone40.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime43 = org.joda.time.LocalDateTime.now(dateTimeZone40);
        org.joda.time.LocalDateTime.Property property44 = localDateTime43.millisOfDay();
        org.joda.time.LocalDateTime localDateTime46 = localDateTime43.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime47 = localDateTime43.toDateTime();
        java.lang.String str48 = dateTime47.toString();
        org.joda.time.DateTimeZone dateTimeZone49 = dateTime47.getZone();
        long long50 = dateTime47.getMillis();
        int int51 = dateTime20.compareTo((org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.DateTimeFieldType dateTimeFieldType52 = org.joda.time.DateTimeFieldType.yearOfEra();
        boolean boolean53 = dateTime20.isSupported(dateTimeFieldType52);
        int int54 = property4.getDifference((org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.LocalDateTime localDateTime55 = property4.roundCeilingCopy();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime20 and instant28", (dateTime20.compareTo(instant28) == 0) == dateTime20.equals(instant28));
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test117");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        java.lang.String str5 = property4.getName();
        org.joda.time.LocalDateTime localDateTime6 = property4.roundHalfFloorCopy();
        org.joda.time.DateTimeFieldType dateTimeFieldType7 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        boolean boolean8 = localDateTime6.isSupported(dateTimeFieldType7);
        org.joda.time.LocalDateTime localDateTime10 = localDateTime6.withWeekOfWeekyear((int) '#');
        org.joda.time.ReadablePeriod readablePeriod11 = null;
        org.joda.time.LocalDateTime localDateTime12 = localDateTime6.plus(readablePeriod11);
        org.joda.time.LocalDateTime.Property property13 = localDateTime6.weekOfWeekyear();
        int int14 = property13.getLeapAmount();
        org.joda.time.DurationField durationField15 = property13.getRangeDurationField();
        org.joda.time.LocalDateTime localDateTime17 = property13.addWrapFieldToCopy((-115199990));
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime25 = localDateTime21.toDateTime();
        java.lang.String str26 = dateTime25.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType27 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int28 = dateTime25.get(dateTimeFieldType27);
        org.joda.time.Chronology chronology29 = dateTime25.getChronology();
        java.lang.Object obj30 = null;
        boolean boolean31 = dateTime25.equals(obj30);
        org.joda.time.DateTimeZone dateTimeZone32 = dateTime25.getZone();
        org.joda.time.Instant instant33 = dateTime25.toInstant();
        org.joda.time.DateTime dateTime34 = localDateTime17.toDateTime((org.joda.time.ReadableInstant) instant33);
        org.joda.time.DateTimeZone dateTimeZone35 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str37 = dateTimeZone35.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime38 = org.joda.time.LocalDateTime.now(dateTimeZone35);
        org.joda.time.LocalDateTime.Property property39 = localDateTime38.millisOfDay();
        org.joda.time.DurationFieldType durationFieldType40 = org.joda.time.DurationFieldType.centuries();
        boolean boolean41 = localDateTime38.equals((java.lang.Object) durationFieldType40);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray42 = localDateTime38.getFieldTypes();
        org.joda.time.LocalDateTime localDateTime44 = localDateTime38.plusMonths((int) (short) -1);
        org.joda.time.LocalDateTime localDateTime46 = localDateTime38.withWeekyear(0);
        org.joda.time.ReadablePeriod readablePeriod47 = null;
        org.joda.time.LocalDateTime localDateTime49 = localDateTime38.withPeriodAdded(readablePeriod47, 946);
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.LocalDateTime localDateTime51 = localDateTime49.minus(readableDuration50);
        org.joda.time.Chronology chronology52 = localDateTime49.getChronology();
        org.joda.time.DateTimeZone dateTimeZone53 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str55 = dateTimeZone53.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime56 = org.joda.time.LocalDateTime.now(dateTimeZone53);
        org.joda.time.LocalDateTime.Property property57 = localDateTime56.millisOfDay();
        org.joda.time.LocalDateTime localDateTime59 = localDateTime56.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime61 = localDateTime56.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime63 = localDateTime61.minusHours((int) (short) 10);
        org.joda.time.LocalDateTime localDateTime65 = localDateTime63.withEra((int) (byte) 0);
        int int66 = localDateTime63.getDayOfYear();
        int[] intArray68 = chronology52.get((org.joda.time.ReadablePartial) localDateTime63, 6L);
        org.joda.time.DateTime dateTime69 = localDateTime63.toDateTime();
        int int70 = localDateTime63.getYear();
        org.joda.time.ReadableDuration readableDuration71 = null;
        org.joda.time.LocalDateTime localDateTime73 = localDateTime63.withDurationAdded(readableDuration71, 53804301);
        int int74 = localDateTime17.compareTo((org.joda.time.ReadablePartial) localDateTime73);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime25 and instant33", (dateTime25.compareTo(instant33) == 0) == dateTime25.equals(instant33));
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test118");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime5 = property4.withMaximumValue();
        java.lang.String str6 = property4.getAsText();
        org.joda.time.DurationField durationField7 = property4.getRangeDurationField();
        org.joda.time.DurationFieldType durationFieldType8 = durationField7.getType();
        java.lang.String str9 = durationFieldType8.getName();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone11 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str13 = dateTimeZone11.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime14 = org.joda.time.LocalDateTime.now(dateTimeZone11);
        org.joda.time.LocalDateTime.Property property15 = localDateTime14.millisOfDay();
        org.joda.time.LocalDateTime localDateTime17 = localDateTime14.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime18 = localDateTime14.toDateTime();
        java.lang.String str19 = dateTime18.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int21 = dateTime18.get(dateTimeFieldType20);
        org.joda.time.Chronology chronology22 = dateTime18.getChronology();
        org.joda.time.DateTimeZone dateTimeZone23 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str25 = dateTimeZone23.getShortName((long) (short) 10);
        long long27 = dateTimeZone23.convertUTCToLocal((long) ' ');
        java.lang.String str28 = dateTimeZone23.toString();
        boolean boolean30 = dateTimeZone23.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology31 = chronology22.withZone(dateTimeZone23);
        org.joda.time.DateTimeField dateTimeField32 = chronology31.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField33 = dateTimeFieldType10.getField(chronology31);
        org.joda.time.DateTimeZone dateTimeZone34 = chronology31.getZone();
        org.joda.time.DateTimeZone dateTimeZone35 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str37 = dateTimeZone35.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime38 = org.joda.time.LocalDateTime.now(dateTimeZone35);
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.LocalDateTime localDateTime41 = localDateTime38.withDurationAdded(readableDuration39, 86399999);
        org.joda.time.DateTimeZone dateTimeZone42 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str44 = dateTimeZone42.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime45 = org.joda.time.LocalDateTime.now(dateTimeZone42);
        org.joda.time.LocalDateTime.Property property46 = localDateTime45.millisOfDay();
        org.joda.time.LocalDateTime localDateTime48 = localDateTime45.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime49 = localDateTime45.toDateTime();
        java.lang.String str50 = dateTime49.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType51 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int52 = dateTime49.get(dateTimeFieldType51);
        org.joda.time.Chronology chronology53 = dateTime49.getChronology();
        org.joda.time.DateTimeField dateTimeField54 = chronology53.weekyearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone55 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str57 = dateTimeZone55.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime58 = org.joda.time.LocalDateTime.now(dateTimeZone55);
        org.joda.time.LocalDateTime.Property property59 = localDateTime58.millisOfDay();
        long long60 = property59.remainder();
        org.joda.time.LocalDateTime localDateTime61 = property59.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime62 = property59.roundFloorCopy();
        java.lang.String str63 = property59.getAsShortText();
        int int64 = property59.getMinimumValue();
        org.joda.time.LocalDateTime localDateTime66 = property59.addToCopy((long) 53623874);
        int[] intArray68 = chronology53.get((org.joda.time.ReadablePartial) localDateTime66, (long) 53630466);
        org.joda.time.DateTimeZone dateTimeZone70 = org.joda.time.DateTimeZone.forOffsetMillis((int) 'a');
        org.joda.time.LocalDateTime localDateTime71 = org.joda.time.LocalDateTime.now(dateTimeZone70);
        java.util.Date date72 = localDateTime71.toDate();
        int[] intArray74 = chronology53.get((org.joda.time.ReadablePartial) localDateTime71, (long) 99);
        chronology31.validate((org.joda.time.ReadablePartial) localDateTime41, intArray74);
        org.joda.time.Chronology chronology76 = chronology31.withUTC();
        org.joda.time.DateTimeField dateTimeField77 = chronology31.weekyearOfCentury();
        org.joda.time.DurationField durationField78 = chronology31.days();
        org.joda.time.DurationField durationField79 = chronology31.seconds();
        boolean boolean80 = durationFieldType8.isSupported(chronology31);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField7 and durationField78", (durationField7.compareTo(durationField78) == 0) == durationField7.equals(durationField78));
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test119");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.weekyearOfCentury();
        org.joda.time.DurationFieldType durationFieldType1 = dateTimeFieldType0.getDurationType();
        org.joda.time.DateTimeZone dateTimeZone2 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str4 = dateTimeZone2.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime5 = org.joda.time.LocalDateTime.now(dateTimeZone2);
        org.joda.time.LocalDateTime.Property property6 = localDateTime5.millisOfDay();
        org.joda.time.LocalDateTime localDateTime8 = localDateTime5.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime9 = localDateTime5.toDateTime();
        java.lang.String str10 = dateTime9.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int12 = dateTime9.get(dateTimeFieldType11);
        org.joda.time.Chronology chronology13 = dateTime9.getChronology();
        org.joda.time.DateTimeZone dateTimeZone14 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str16 = dateTimeZone14.getShortName((long) (short) 10);
        long long18 = dateTimeZone14.convertUTCToLocal((long) ' ');
        java.lang.String str19 = dateTimeZone14.toString();
        boolean boolean21 = dateTimeZone14.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology22 = chronology13.withZone(dateTimeZone14);
        org.joda.time.DateTimeField dateTimeField23 = chronology22.weekOfWeekyear();
        org.joda.time.DurationField durationField24 = chronology22.hours();
        org.joda.time.DurationField durationField25 = chronology22.weeks();
        org.joda.time.DurationField durationField26 = durationFieldType1.getField(chronology22);
        org.joda.time.DateTimeField dateTimeField27 = chronology22.year();
        long long29 = dateTimeField27.remainder((long) ' ');
        org.joda.time.DateTimeZone dateTimeZone30 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str32 = dateTimeZone30.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime33 = org.joda.time.LocalDateTime.now(dateTimeZone30);
        org.joda.time.LocalDateTime.Property property34 = localDateTime33.millisOfDay();
        org.joda.time.LocalDateTime localDateTime36 = localDateTime33.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime37 = localDateTime33.toDateTime();
        java.lang.String str38 = dateTime37.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType39 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int40 = dateTime37.get(dateTimeFieldType39);
        org.joda.time.Chronology chronology41 = dateTime37.getChronology();
        org.joda.time.DateTimeField dateTimeField42 = chronology41.weekyearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone43 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str45 = dateTimeZone43.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime46 = org.joda.time.LocalDateTime.now(dateTimeZone43);
        org.joda.time.LocalDateTime.Property property47 = localDateTime46.millisOfDay();
        long long48 = property47.remainder();
        org.joda.time.LocalDateTime localDateTime49 = property47.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime50 = property47.roundFloorCopy();
        java.lang.String str51 = property47.getAsShortText();
        int int52 = property47.getMinimumValue();
        org.joda.time.LocalDateTime localDateTime54 = property47.addToCopy((long) 53623874);
        int[] intArray56 = chronology41.get((org.joda.time.ReadablePartial) localDateTime54, (long) 53630466);
        org.joda.time.DateTimeField dateTimeField57 = chronology41.secondOfDay();
        org.joda.time.DateTimeField dateTimeField58 = chronology41.monthOfYear();
        org.joda.time.DateTimeFieldType dateTimeFieldType59 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone60 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str62 = dateTimeZone60.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime63 = org.joda.time.LocalDateTime.now(dateTimeZone60);
        org.joda.time.LocalDateTime.Property property64 = localDateTime63.millisOfDay();
        org.joda.time.LocalDateTime localDateTime66 = localDateTime63.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime67 = localDateTime63.toDateTime();
        java.lang.String str68 = dateTime67.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType69 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int70 = dateTime67.get(dateTimeFieldType69);
        org.joda.time.Chronology chronology71 = dateTime67.getChronology();
        org.joda.time.DateTimeZone dateTimeZone72 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str74 = dateTimeZone72.getShortName((long) (short) 10);
        long long76 = dateTimeZone72.convertUTCToLocal((long) ' ');
        java.lang.String str77 = dateTimeZone72.toString();
        boolean boolean79 = dateTimeZone72.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology80 = chronology71.withZone(dateTimeZone72);
        boolean boolean81 = dateTimeFieldType59.isSupported(chronology80);
        org.joda.time.DurationField durationField82 = chronology80.years();
        org.joda.time.LocalDateTime localDateTime83 = org.joda.time.LocalDateTime.now(chronology80);
        org.joda.time.LocalDateTime localDateTime84 = org.joda.time.LocalDateTime.now(chronology80);
        org.joda.time.LocalDateTime.Property property85 = localDateTime84.dayOfWeek();
        org.joda.time.LocalDateTime localDateTime87 = localDateTime84.withCenturyOfEra((int) (short) 100);
        org.joda.time.LocalDateTime.Property property88 = localDateTime84.weekOfWeekyear();
        java.util.Locale locale89 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str90 = locale89.getISO3Language();
        java.lang.String str91 = locale89.getDisplayLanguage();
        java.lang.String str92 = locale89.getISO3Language();
        boolean boolean93 = locale89.hasExtensions();
        java.lang.String str94 = dateTimeField58.getAsText((org.joda.time.ReadablePartial) localDateTime84, locale89);
        int[] intArray97 = new int[] { 53651301, 812 };
        int int98 = dateTimeField27.getMaximumValue((org.joda.time.ReadablePartial) localDateTime84, intArray97);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField26 and durationField82", (durationField26.compareTo(durationField82) == 0) == durationField26.equals(durationField82));
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test120");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.weekyearOfCentury();
        org.joda.time.DurationFieldType durationFieldType1 = dateTimeFieldType0.getDurationType();
        org.joda.time.DateTimeZone dateTimeZone2 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str4 = dateTimeZone2.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime5 = org.joda.time.LocalDateTime.now(dateTimeZone2);
        org.joda.time.LocalDateTime.Property property6 = localDateTime5.millisOfDay();
        org.joda.time.LocalDateTime localDateTime8 = localDateTime5.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime9 = localDateTime5.toDateTime();
        java.lang.String str10 = dateTime9.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int12 = dateTime9.get(dateTimeFieldType11);
        org.joda.time.Chronology chronology13 = dateTime9.getChronology();
        org.joda.time.DateTimeField dateTimeField14 = chronology13.weekyearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone15 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str17 = dateTimeZone15.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now(dateTimeZone15);
        org.joda.time.LocalDateTime.Property property19 = localDateTime18.millisOfDay();
        long long20 = property19.remainder();
        org.joda.time.LocalDateTime localDateTime21 = property19.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime22 = property19.roundFloorCopy();
        java.lang.String str23 = property19.getAsShortText();
        int int24 = property19.getMinimumValue();
        org.joda.time.LocalDateTime localDateTime26 = property19.addToCopy((long) 53623874);
        int[] intArray28 = chronology13.get((org.joda.time.ReadablePartial) localDateTime26, (long) 53630466);
        org.joda.time.DateTimeZone dateTimeZone30 = org.joda.time.DateTimeZone.forOffsetMillis((int) 'a');
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone30);
        java.util.Date date32 = localDateTime31.toDate();
        int[] intArray34 = chronology13.get((org.joda.time.ReadablePartial) localDateTime31, (long) 99);
        org.joda.time.DurationField durationField35 = durationFieldType1.getField(chronology13);
        org.joda.time.DurationField durationField36 = chronology13.halfdays();
        org.joda.time.ReadablePeriod readablePeriod37 = null;
        long long40 = chronology13.add(readablePeriod37, 42935727L, 82492003);
        org.joda.time.DurationField durationField41 = chronology13.years();
        org.joda.time.LocalDateTime localDateTime42 = new org.joda.time.LocalDateTime(chronology13);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField35 and durationField41", (durationField35.compareTo(durationField41) == 0) == durationField35.equals(durationField41));
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test121");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime8 = localDateTime3.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime10 = localDateTime8.minusHours((int) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = localDateTime10.withEra((int) (byte) 0);
        org.joda.time.LocalDateTime localDateTime14 = localDateTime12.withDayOfWeek(4);
        org.joda.time.DateTimeZone dateTimeZone15 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str17 = dateTimeZone15.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now(dateTimeZone15);
        org.joda.time.LocalDateTime.Property property19 = localDateTime18.millisOfDay();
        java.lang.String str20 = property19.getName();
        org.joda.time.LocalDateTime localDateTime21 = property19.roundHalfFloorCopy();
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        boolean boolean23 = localDateTime21.isSupported(dateTimeFieldType22);
        org.joda.time.DurationFieldType durationFieldType24 = dateTimeFieldType22.getRangeDurationType();
        int int25 = localDateTime12.get(dateTimeFieldType22);
        java.lang.String str26 = localDateTime12.toString();
        org.joda.time.ReadablePeriod readablePeriod27 = null;
        org.joda.time.LocalDateTime localDateTime29 = localDateTime12.withPeriodAdded(readablePeriod27, 50);
        org.joda.time.LocalDateTime.Property property30 = localDateTime12.hourOfDay();
        org.joda.time.DateTime dateTime31 = localDateTime12.toDateTime();
        org.joda.time.Instant instant32 = dateTime31.toInstant();
        org.joda.time.DateTimeFieldType dateTimeFieldType33 = org.joda.time.DateTimeFieldType.weekOfWeekyear();
        java.lang.String str34 = dateTimeFieldType33.getName();
        org.joda.time.DurationFieldType durationFieldType35 = dateTimeFieldType33.getRangeDurationType();
        java.lang.String str36 = dateTimeFieldType33.toString();
        int int37 = instant32.get(dateTimeFieldType33);
        java.lang.String str38 = dateTimeFieldType33.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime31 and instant32", (dateTime31.compareTo(instant32) == 0) == dateTime31.equals(instant32));
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test122");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        boolean boolean22 = dateTimeFieldType0.isSupported(chronology21);
        org.joda.time.DurationField durationField23 = chronology21.years();
        org.joda.time.LocalDateTime localDateTime24 = new org.joda.time.LocalDateTime(chronology21);
        org.joda.time.LocalDateTime.Property property25 = localDateTime24.yearOfCentury();
        org.joda.time.DateTimeFieldType dateTimeFieldType27 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.LocalDateTime localDateTime34 = localDateTime31.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime35 = localDateTime31.toDateTime();
        java.lang.String str36 = dateTime35.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int38 = dateTime35.get(dateTimeFieldType37);
        org.joda.time.Chronology chronology39 = dateTime35.getChronology();
        org.joda.time.DateTimeZone dateTimeZone40 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str42 = dateTimeZone40.getShortName((long) (short) 10);
        long long44 = dateTimeZone40.convertUTCToLocal((long) ' ');
        java.lang.String str45 = dateTimeZone40.toString();
        boolean boolean47 = dateTimeZone40.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology48 = chronology39.withZone(dateTimeZone40);
        org.joda.time.DateTimeField dateTimeField49 = chronology48.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField50 = dateTimeFieldType27.getField(chronology48);
        org.joda.time.Chronology chronology51 = chronology48.withUTC();
        org.joda.time.DurationField durationField52 = chronology51.millis();
        org.joda.time.DurationField durationField53 = chronology51.weekyears();
        org.joda.time.DateTimeField dateTimeField54 = chronology51.clockhourOfHalfday();
        org.joda.time.DateTimeZone dateTimeZone56 = org.joda.time.DateTimeZone.forOffsetMillis(53726655);
        boolean boolean58 = dateTimeZone56.isStandardOffset(1645455259955L);
        org.joda.time.Chronology chronology59 = chronology51.withZone(dateTimeZone56);
        org.joda.time.LocalDateTime localDateTime60 = new org.joda.time.LocalDateTime((long) 53716214, chronology59);
        boolean boolean61 = localDateTime24.isAfter((org.joda.time.ReadablePartial) localDateTime60);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField23 and durationField53", (durationField23.compareTo(durationField53) == 0) == durationField23.equals(durationField53));
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test123");
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        org.joda.time.LocalDateTime localDateTime22 = new org.joda.time.LocalDateTime((long) (short) 100, chronology12);
        org.joda.time.DurationField durationField23 = chronology12.millis();
        org.joda.time.Chronology chronology24 = chronology12.withUTC();
        org.joda.time.DurationField durationField25 = chronology24.millis();
        org.joda.time.DateTimeField dateTimeField26 = chronology24.centuryOfEra();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField23 and durationField25", (durationField23.compareTo(durationField25) == 0) == durationField23.equals(durationField25));
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test124");
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        org.joda.time.LocalDateTime localDateTime22 = new org.joda.time.LocalDateTime((long) (short) 100, chronology12);
        org.joda.time.DurationField durationField23 = chronology12.millis();
        org.joda.time.Chronology chronology24 = chronology12.withUTC();
        org.joda.time.DurationField durationField25 = chronology24.millis();
        org.joda.time.LocalDateTime localDateTime26 = new org.joda.time.LocalDateTime();
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.LocalDateTime localDateTime29 = localDateTime26.withDurationAdded(readableDuration27, (int) '#');
        org.joda.time.LocalDateTime.Property property30 = localDateTime29.weekyear();
        org.joda.time.LocalDateTime localDateTime32 = localDateTime29.minusMinutes(11);
        org.joda.time.LocalDateTime.Property property33 = localDateTime32.secondOfMinute();
        org.joda.time.LocalDateTime localDateTime34 = property33.withMaximumValue();
        int[] intArray36 = chronology24.get((org.joda.time.ReadablePartial) localDateTime34, (long) 608);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField23 and durationField25", (durationField23.compareTo(durationField25) == 0) == durationField23.equals(durationField25));
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test125");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        java.lang.Object obj12 = null;
        boolean boolean13 = dateTime7.equals(obj12);
        long long14 = dateTime7.getMillis();
        org.joda.time.Instant instant15 = dateTime7.toInstant();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now(dateTimeZone16);
        org.joda.time.LocalDateTime.Property property20 = localDateTime19.millisOfDay();
        org.joda.time.LocalDateTime localDateTime22 = localDateTime19.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime23 = localDateTime19.toDateTime();
        java.lang.String str24 = dateTime23.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType25 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int26 = dateTime23.get(dateTimeFieldType25);
        boolean boolean27 = dateTime7.isSupported(dateTimeFieldType25);
        org.joda.time.Chronology chronology28 = null;
        boolean boolean29 = dateTimeFieldType25.isSupported(chronology28);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant15", (dateTime7.compareTo(instant15) == 0) == dateTime7.equals(instant15));
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test126");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.ReadableInstant readableInstant5 = null;
        long long6 = property4.getDifferenceAsLong(readableInstant5);
        int int7 = property4.getMaximumValue();
        org.joda.time.LocalDateTime localDateTime8 = property4.roundHalfEvenCopy();
        int int9 = localDateTime8.size();
        org.joda.time.DateTimeZone dateTimeZone10 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str12 = dateTimeZone10.getShortName((long) (short) 10);
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        java.lang.Object obj19 = null;
        boolean boolean20 = dateTimeZone13.equals(obj19);
        long long22 = dateTimeZone10.getMillisKeepLocal(dateTimeZone13, (long) 53);
        org.joda.time.DateTime dateTime23 = localDateTime8.toDateTime(dateTimeZone13);
        org.joda.time.Instant instant24 = dateTime23.toInstant();
        org.joda.time.Instant instant25 = instant24.toInstant();
        boolean boolean27 = instant25.equals((java.lang.Object) "53658711");
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime23 and instant25", (dateTime23.compareTo(instant25) == 0) == dateTime23.equals(instant25));
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test127");
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        org.joda.time.DateTimeField dateTimeField22 = chronology21.weekOfWeekyear();
        org.joda.time.DurationField durationField23 = chronology21.hours();
        org.joda.time.DateTimeField dateTimeField24 = chronology21.hourOfDay();
        org.joda.time.DurationField durationField25 = chronology21.eras();
        org.joda.time.LocalDateTime localDateTime26 = new org.joda.time.LocalDateTime((long) 206, chronology21);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField23 and durationField25", Math.signum(durationField23.compareTo(durationField25)) == -Math.signum(durationField25.compareTo(durationField23)));
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test128");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.clockhourOfHalfday();
        java.lang.String str1 = dateTimeFieldType0.toString();
        org.joda.time.DurationFieldType durationFieldType2 = org.joda.time.DurationFieldType.hours();
        org.joda.time.DateTimeFieldType dateTimeFieldType3 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone4 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str6 = dateTimeZone4.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime7 = org.joda.time.LocalDateTime.now(dateTimeZone4);
        org.joda.time.LocalDateTime.Property property8 = localDateTime7.millisOfDay();
        org.joda.time.LocalDateTime localDateTime10 = localDateTime7.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime11 = localDateTime7.toDateTime();
        java.lang.String str12 = dateTime11.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType13 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int14 = dateTime11.get(dateTimeFieldType13);
        org.joda.time.Chronology chronology15 = dateTime11.getChronology();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        long long20 = dateTimeZone16.convertUTCToLocal((long) ' ');
        java.lang.String str21 = dateTimeZone16.toString();
        boolean boolean23 = dateTimeZone16.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology24 = chronology15.withZone(dateTimeZone16);
        boolean boolean25 = dateTimeFieldType3.isSupported(chronology24);
        org.joda.time.DateTimeZone dateTimeZone26 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str28 = dateTimeZone26.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime29 = org.joda.time.LocalDateTime.now(dateTimeZone26);
        org.joda.time.LocalDateTime.Property property30 = localDateTime29.millisOfDay();
        org.joda.time.LocalDateTime localDateTime32 = localDateTime29.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime33 = localDateTime29.toDateTime();
        java.lang.String str34 = dateTime33.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int36 = dateTime33.get(dateTimeFieldType35);
        org.joda.time.Chronology chronology37 = dateTime33.getChronology();
        org.joda.time.DateTimeZone dateTimeZone38 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str40 = dateTimeZone38.getShortName((long) (short) 10);
        long long42 = dateTimeZone38.convertUTCToLocal((long) ' ');
        java.lang.String str43 = dateTimeZone38.toString();
        boolean boolean45 = dateTimeZone38.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology46 = chronology37.withZone(dateTimeZone38);
        org.joda.time.DurationField durationField47 = chronology37.weekyears();
        org.joda.time.DateTimeField dateTimeField48 = chronology37.dayOfYear();
        org.joda.time.DurationField durationField49 = chronology37.weeks();
        org.joda.time.DateTimeField dateTimeField50 = chronology37.yearOfEra();
        org.joda.time.DateTimeField dateTimeField51 = chronology37.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField52 = dateTimeFieldType3.getField(chronology37);
        org.joda.time.DateTimeField dateTimeField53 = chronology37.clockhourOfDay();
        org.joda.time.DurationField durationField54 = durationFieldType2.getField(chronology37);
        boolean boolean55 = dateTimeFieldType0.isSupported(chronology37);
        org.joda.time.DurationField durationField56 = chronology37.months();
        org.joda.time.DurationField durationField57 = chronology37.years();
        org.joda.time.DateTimeField dateTimeField58 = chronology37.clockhourOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField47 and durationField57", (durationField47.compareTo(durationField57) == 0) == durationField47.equals(durationField57));
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test129");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DateTimeField dateTimeField21 = chronology11.hourOfHalfday();
        org.joda.time.DurationField durationField22 = chronology11.centuries();
        org.joda.time.DurationField durationField23 = chronology11.eras();
        org.joda.time.DateTimeZone dateTimeZone24 = chronology11.getZone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField22 and durationField23", Math.signum(durationField22.compareTo(durationField23)) == -Math.signum(durationField23.compareTo(durationField22)));
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test130");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime8 = localDateTime3.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime10 = localDateTime8.minusHours((int) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = localDateTime10.withEra((int) (byte) 0);
        org.joda.time.LocalDateTime localDateTime14 = localDateTime12.withDayOfWeek(4);
        org.joda.time.DateTimeZone dateTimeZone15 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str17 = dateTimeZone15.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now(dateTimeZone15);
        org.joda.time.LocalDateTime.Property property19 = localDateTime18.millisOfDay();
        java.lang.String str20 = property19.getName();
        org.joda.time.LocalDateTime localDateTime21 = property19.roundHalfFloorCopy();
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        boolean boolean23 = localDateTime21.isSupported(dateTimeFieldType22);
        org.joda.time.DurationFieldType durationFieldType24 = dateTimeFieldType22.getRangeDurationType();
        int int25 = localDateTime12.get(dateTimeFieldType22);
        java.lang.String str26 = localDateTime12.toString();
        org.joda.time.ReadablePeriod readablePeriod27 = null;
        org.joda.time.LocalDateTime localDateTime29 = localDateTime12.withPeriodAdded(readablePeriod27, 50);
        org.joda.time.LocalDateTime.Property property30 = localDateTime12.hourOfDay();
        org.joda.time.DateTime dateTime31 = localDateTime12.toDateTime();
        org.joda.time.Instant instant32 = dateTime31.toInstant();
        org.joda.time.DateTimeFieldType dateTimeFieldType33 = org.joda.time.DateTimeFieldType.weekOfWeekyear();
        java.lang.String str34 = dateTimeFieldType33.getName();
        org.joda.time.DurationFieldType durationFieldType35 = dateTimeFieldType33.getRangeDurationType();
        java.lang.String str36 = dateTimeFieldType33.toString();
        int int37 = instant32.get(dateTimeFieldType33);
        org.joda.time.DurationFieldType durationFieldType38 = dateTimeFieldType33.getRangeDurationType();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime31 and instant32", (dateTime31.compareTo(instant32) == 0) == dateTime31.equals(instant32));
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test131");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.ReadableInstant readableInstant5 = null;
        long long6 = property4.getDifferenceAsLong(readableInstant5);
        org.joda.time.DurationField durationField7 = property4.getRangeDurationField();
        int int9 = durationField7.getValue(0L);
        int int12 = durationField7.getValue((long) (short) 1, (long) (short) 10);
        int int15 = durationField7.getDifference((long) 53630466, 0L);
        org.joda.time.DurationFieldType durationFieldType16 = durationField7.getType();
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime25 = localDateTime21.toDateTime();
        java.lang.String str26 = dateTime25.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType27 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int28 = dateTime25.get(dateTimeFieldType27);
        org.joda.time.Chronology chronology29 = dateTime25.getChronology();
        org.joda.time.DateTimeZone dateTimeZone30 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str32 = dateTimeZone30.getShortName((long) (short) 10);
        long long34 = dateTimeZone30.convertUTCToLocal((long) ' ');
        java.lang.String str35 = dateTimeZone30.toString();
        boolean boolean37 = dateTimeZone30.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology38 = chronology29.withZone(dateTimeZone30);
        org.joda.time.DateTimeField dateTimeField39 = chronology38.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField40 = dateTimeFieldType17.getField(chronology38);
        org.joda.time.DurationField durationField41 = chronology38.seconds();
        org.joda.time.DateTimeZone dateTimeZone43 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str45 = dateTimeZone43.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime46 = org.joda.time.LocalDateTime.now(dateTimeZone43);
        org.joda.time.LocalDateTime.Property property47 = localDateTime46.millisOfDay();
        org.joda.time.LocalDateTime localDateTime49 = localDateTime46.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime50 = localDateTime46.toDateTime();
        java.lang.String str51 = dateTime50.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType52 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int53 = dateTime50.get(dateTimeFieldType52);
        org.joda.time.Chronology chronology54 = dateTime50.getChronology();
        org.joda.time.DateTimeZone dateTimeZone55 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str57 = dateTimeZone55.getShortName((long) (short) 10);
        long long59 = dateTimeZone55.convertUTCToLocal((long) ' ');
        java.lang.String str60 = dateTimeZone55.toString();
        boolean boolean62 = dateTimeZone55.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology63 = chronology54.withZone(dateTimeZone55);
        org.joda.time.LocalDateTime localDateTime64 = new org.joda.time.LocalDateTime((long) (short) 100, chronology54);
        org.joda.time.LocalDateTime localDateTime66 = localDateTime64.plusYears(1);
        org.joda.time.LocalDateTime localDateTime68 = localDateTime64.withHourOfDay((int) (short) 0);
        org.joda.time.LocalDateTime localDateTime70 = localDateTime64.withYear(53630466);
        int[] intArray72 = chronology38.get((org.joda.time.ReadablePartial) localDateTime70, (long) 53636605);
        org.joda.time.DateTimeField dateTimeField73 = chronology38.yearOfCentury();
        org.joda.time.DurationField durationField74 = durationFieldType16.getField(chronology38);
        org.joda.time.DateTimeField dateTimeField75 = chronology38.era();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField7 and durationField74", (durationField7.compareTo(durationField74) == 0) == durationField7.equals(durationField74));
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test132");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        boolean boolean22 = dateTimeFieldType0.isSupported(chronology21);
        org.joda.time.DateTimeZone dateTimeZone23 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str25 = dateTimeZone23.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime26 = org.joda.time.LocalDateTime.now(dateTimeZone23);
        org.joda.time.LocalDateTime.Property property27 = localDateTime26.millisOfDay();
        org.joda.time.LocalDateTime localDateTime29 = localDateTime26.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime30 = localDateTime26.toDateTime();
        java.lang.String str31 = dateTime30.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType32 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int33 = dateTime30.get(dateTimeFieldType32);
        org.joda.time.Chronology chronology34 = dateTime30.getChronology();
        org.joda.time.DateTimeZone dateTimeZone35 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str37 = dateTimeZone35.getShortName((long) (short) 10);
        long long39 = dateTimeZone35.convertUTCToLocal((long) ' ');
        java.lang.String str40 = dateTimeZone35.toString();
        boolean boolean42 = dateTimeZone35.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology43 = chronology34.withZone(dateTimeZone35);
        org.joda.time.DurationField durationField44 = chronology34.weekyears();
        org.joda.time.DateTimeField dateTimeField45 = chronology34.dayOfYear();
        org.joda.time.DurationField durationField46 = chronology34.weeks();
        org.joda.time.DateTimeField dateTimeField47 = chronology34.yearOfEra();
        org.joda.time.DateTimeField dateTimeField48 = chronology34.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField49 = dateTimeFieldType0.getField(chronology34);
        org.joda.time.LocalDateTime localDateTime50 = new org.joda.time.LocalDateTime(chronology34);
        org.joda.time.Chronology chronology51 = chronology34.withUTC();
        org.joda.time.DurationField durationField52 = chronology51.eras();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField52, durationField44, and durationField46", !(durationField52.compareTo(durationField44) == 0) || (Math.signum(durationField52.compareTo(durationField46)) == Math.signum(durationField44.compareTo(durationField46))));
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test133");
        org.joda.time.LocalDateTime localDateTime0 = new org.joda.time.LocalDateTime();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        java.lang.String str6 = property5.getName();
        int int7 = property5.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType8 = property5.getFieldType();
        int int9 = localDateTime0.get(dateTimeFieldType8);
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone11 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str13 = dateTimeZone11.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime14 = org.joda.time.LocalDateTime.now(dateTimeZone11);
        org.joda.time.LocalDateTime.Property property15 = localDateTime14.millisOfDay();
        org.joda.time.LocalDateTime localDateTime17 = localDateTime14.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime18 = localDateTime14.toDateTime();
        java.lang.String str19 = dateTime18.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int21 = dateTime18.get(dateTimeFieldType20);
        org.joda.time.Chronology chronology22 = dateTime18.getChronology();
        org.joda.time.DateTimeZone dateTimeZone23 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str25 = dateTimeZone23.getShortName((long) (short) 10);
        long long27 = dateTimeZone23.convertUTCToLocal((long) ' ');
        java.lang.String str28 = dateTimeZone23.toString();
        boolean boolean30 = dateTimeZone23.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology31 = chronology22.withZone(dateTimeZone23);
        org.joda.time.DateTimeField dateTimeField32 = chronology31.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField33 = dateTimeFieldType10.getField(chronology31);
        org.joda.time.Chronology chronology34 = chronology31.withUTC();
        org.joda.time.DurationField durationField35 = chronology34.millis();
        org.joda.time.DateTimeField dateTimeField36 = chronology34.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField37 = chronology34.halfdayOfDay();
        org.joda.time.DateTimeField dateTimeField38 = dateTimeFieldType8.getField(chronology34);
        org.joda.time.DateTimeField dateTimeField39 = chronology34.minuteOfHour();
        org.joda.time.DurationField durationField40 = chronology34.years();
        org.joda.time.DurationField durationField41 = chronology34.eras();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField41, durationField35, and durationField40", !(durationField41.compareTo(durationField35) == 0) || (Math.signum(durationField41.compareTo(durationField40)) == Math.signum(durationField35.compareTo(durationField40))));
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test134");
        org.joda.time.DurationFieldType durationFieldType0 = org.joda.time.DurationFieldType.eras();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        org.joda.time.DateTimeField dateTimeField22 = chronology12.yearOfCentury();
        boolean boolean23 = durationFieldType0.isSupported(chronology12);
        org.joda.time.DurationFieldType durationFieldType24 = org.joda.time.DurationFieldType.hours();
        org.joda.time.DateTimeFieldType dateTimeFieldType25 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone26 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str28 = dateTimeZone26.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime29 = org.joda.time.LocalDateTime.now(dateTimeZone26);
        org.joda.time.LocalDateTime.Property property30 = localDateTime29.millisOfDay();
        org.joda.time.LocalDateTime localDateTime32 = localDateTime29.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime33 = localDateTime29.toDateTime();
        java.lang.String str34 = dateTime33.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int36 = dateTime33.get(dateTimeFieldType35);
        org.joda.time.Chronology chronology37 = dateTime33.getChronology();
        org.joda.time.DateTimeZone dateTimeZone38 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str40 = dateTimeZone38.getShortName((long) (short) 10);
        long long42 = dateTimeZone38.convertUTCToLocal((long) ' ');
        java.lang.String str43 = dateTimeZone38.toString();
        boolean boolean45 = dateTimeZone38.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology46 = chronology37.withZone(dateTimeZone38);
        boolean boolean47 = dateTimeFieldType25.isSupported(chronology46);
        org.joda.time.DateTimeZone dateTimeZone48 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str50 = dateTimeZone48.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime51 = org.joda.time.LocalDateTime.now(dateTimeZone48);
        org.joda.time.LocalDateTime.Property property52 = localDateTime51.millisOfDay();
        org.joda.time.LocalDateTime localDateTime54 = localDateTime51.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime55 = localDateTime51.toDateTime();
        java.lang.String str56 = dateTime55.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType57 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int58 = dateTime55.get(dateTimeFieldType57);
        org.joda.time.Chronology chronology59 = dateTime55.getChronology();
        org.joda.time.DateTimeZone dateTimeZone60 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str62 = dateTimeZone60.getShortName((long) (short) 10);
        long long64 = dateTimeZone60.convertUTCToLocal((long) ' ');
        java.lang.String str65 = dateTimeZone60.toString();
        boolean boolean67 = dateTimeZone60.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology68 = chronology59.withZone(dateTimeZone60);
        org.joda.time.DurationField durationField69 = chronology59.weekyears();
        org.joda.time.DateTimeField dateTimeField70 = chronology59.dayOfYear();
        org.joda.time.DurationField durationField71 = chronology59.weeks();
        org.joda.time.DateTimeField dateTimeField72 = chronology59.yearOfEra();
        org.joda.time.DateTimeField dateTimeField73 = chronology59.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField74 = dateTimeFieldType25.getField(chronology59);
        org.joda.time.DateTimeField dateTimeField75 = chronology59.clockhourOfDay();
        org.joda.time.DurationField durationField76 = durationFieldType24.getField(chronology59);
        org.joda.time.DateTimeField dateTimeField77 = chronology59.centuryOfEra();
        org.joda.time.DurationField durationField78 = chronology59.days();
        org.joda.time.DurationField durationField79 = durationFieldType0.getField(chronology59);
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField79, durationField69, and durationField71", !(durationField79.compareTo(durationField69) == 0) || (Math.signum(durationField79.compareTo(durationField71)) == Math.signum(durationField69.compareTo(durationField71))));
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test135");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.Chronology chronology12 = chronology11.withUTC();
        org.joda.time.DateTimeField dateTimeField13 = chronology12.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField14 = chronology12.hourOfHalfday();
        org.joda.time.DurationField durationField15 = chronology12.minutes();
        boolean boolean16 = durationField15.isSupported();
        org.joda.time.DateTimeZone dateTimeZone19 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str21 = dateTimeZone19.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now(dateTimeZone19);
        org.joda.time.LocalDateTime.Property property23 = localDateTime22.millisOfDay();
        org.joda.time.LocalDateTime localDateTime25 = localDateTime22.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime26 = localDateTime22.toDateTime();
        java.lang.String str27 = dateTime26.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int29 = dateTime26.get(dateTimeFieldType28);
        org.joda.time.Chronology chronology30 = dateTime26.getChronology();
        org.joda.time.DateTimeField dateTimeField31 = chronology30.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField32 = chronology30.clockhourOfHalfday();
        org.joda.time.LocalDateTime localDateTime33 = new org.joda.time.LocalDateTime((long) (short) 100, chronology30);
        org.joda.time.DateTimeField dateTimeField34 = chronology30.yearOfCentury();
        org.joda.time.LocalDateTime localDateTime35 = new org.joda.time.LocalDateTime(53L, chronology30);
        org.joda.time.DateTimeField dateTimeField36 = chronology30.weekOfWeekyear();
        org.joda.time.DurationField durationField37 = chronology30.minutes();
        org.joda.time.DurationField durationField38 = chronology30.minutes();
        long long41 = durationField38.subtract(96L, (int) '#');
        int int42 = durationField15.compareTo(durationField38);
        long long45 = durationField38.getMillis(53878390, 6380798727258739L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField15 and durationField38", (durationField15.compareTo(durationField38) == 0) == durationField15.equals(durationField38));
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test136");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.ReadableInstant readableInstant5 = null;
        long long6 = property4.getDifferenceAsLong(readableInstant5);
        int int7 = property4.getMaximumValue();
        org.joda.time.LocalDateTime localDateTime8 = property4.roundHalfEvenCopy();
        int int9 = localDateTime8.size();
        org.joda.time.DateTimeZone dateTimeZone10 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str12 = dateTimeZone10.getShortName((long) (short) 10);
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        java.lang.Object obj19 = null;
        boolean boolean20 = dateTimeZone13.equals(obj19);
        long long22 = dateTimeZone10.getMillisKeepLocal(dateTimeZone13, (long) 53);
        org.joda.time.DateTime dateTime23 = localDateTime8.toDateTime(dateTimeZone13);
        org.joda.time.Instant instant24 = dateTime23.toInstant();
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str27 = dateTimeZone25.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now(dateTimeZone25);
        org.joda.time.LocalDateTime.Property property29 = localDateTime28.millisOfDay();
        org.joda.time.LocalDateTime localDateTime31 = localDateTime28.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone33 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str35 = dateTimeZone33.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime36 = org.joda.time.LocalDateTime.now(dateTimeZone33);
        org.joda.time.LocalDateTime.Property property37 = localDateTime36.millisOfDay();
        org.joda.time.LocalDateTime localDateTime39 = localDateTime36.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime40 = localDateTime36.toDateTime();
        java.lang.String str41 = dateTime40.toString();
        org.joda.time.DateTime dateTime42 = localDateTime31.toDateTime((org.joda.time.ReadableInstant) dateTime40);
        boolean boolean43 = instant24.isBefore((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.DateTimeZone dateTimeZone44 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str46 = dateTimeZone44.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime47 = org.joda.time.LocalDateTime.now(dateTimeZone44);
        org.joda.time.LocalDateTime.Property property48 = localDateTime47.millisOfDay();
        long long49 = property48.remainder();
        org.joda.time.LocalDateTime localDateTime50 = property48.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime51 = property48.roundFloorCopy();
        java.lang.String str52 = property48.getAsShortText();
        int int53 = property48.getMinimumValue();
        org.joda.time.Interval interval54 = property48.toInterval();
        org.joda.time.DateTimeField dateTimeField55 = property48.getField();
        java.lang.String str56 = dateTimeField55.getName();
        java.util.Locale locale61 = new java.util.Locale("Etc/UTC", "+00:00", "dayOfMonth");
        java.util.Set<java.lang.String> strSet62 = locale61.getUnicodeLocaleKeys();
        java.lang.String str63 = dateTimeField55.getAsText(369, locale61);
        long long65 = dateTimeField55.roundCeiling(28870L);
        boolean boolean66 = dateTime40.equals((java.lang.Object) dateTimeField55);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime23 and instant24", (dateTime23.compareTo(instant24) == 0) == dateTime23.equals(instant24));
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test137");
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.forOffsetMillis((int) 'a');
        org.joda.time.LocalDateTime localDateTime2 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        long long4 = dateTimeZone1.nextTransition(8434424000L);
        org.joda.time.DateTimeZone.setDefault(dateTimeZone1);
        org.joda.time.DateTimeZone dateTimeZone6 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str8 = dateTimeZone6.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime9 = org.joda.time.LocalDateTime.now(dateTimeZone6);
        org.joda.time.LocalDateTime.Property property10 = localDateTime9.millisOfDay();
        org.joda.time.LocalDateTime localDateTime12 = localDateTime9.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime13 = localDateTime9.toDateTime();
        java.lang.String str14 = dateTime13.toString();
        org.joda.time.DateTimeZone dateTimeZone15 = dateTime13.getZone();
        int int16 = dateTimeZone1.getOffset((org.joda.time.ReadableInstant) dateTime13);
        org.joda.time.Instant instant17 = dateTime13.toInstant();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime25 = localDateTime21.toDateTime();
        java.lang.String str26 = dateTime25.toString();
        org.joda.time.DateTimeZone dateTimeZone27 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str29 = dateTimeZone27.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime30 = org.joda.time.LocalDateTime.now(dateTimeZone27);
        org.joda.time.LocalDateTime.Property property31 = localDateTime30.millisOfDay();
        org.joda.time.LocalDateTime localDateTime33 = localDateTime30.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property34 = localDateTime33.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone35 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str37 = dateTimeZone35.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime38 = org.joda.time.LocalDateTime.now(dateTimeZone35);
        org.joda.time.LocalDateTime.Property property39 = localDateTime38.millisOfDay();
        org.joda.time.LocalDateTime localDateTime41 = localDateTime38.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime42 = localDateTime38.toDateTime();
        java.lang.String str43 = dateTime42.toString();
        org.joda.time.DateTime dateTime44 = localDateTime33.toDateTime((org.joda.time.ReadableInstant) dateTime42);
        boolean boolean45 = dateTime25.isBefore((org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.DateTimeZone dateTimeZone46 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str48 = dateTimeZone46.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime49 = org.joda.time.LocalDateTime.now(dateTimeZone46);
        org.joda.time.LocalDateTime.Property property50 = localDateTime49.millisOfDay();
        org.joda.time.LocalDateTime localDateTime52 = localDateTime49.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property53 = localDateTime52.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone54 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str56 = dateTimeZone54.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime57 = org.joda.time.LocalDateTime.now(dateTimeZone54);
        org.joda.time.LocalDateTime.Property property58 = localDateTime57.millisOfDay();
        org.joda.time.LocalDateTime localDateTime60 = localDateTime57.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime61 = localDateTime57.toDateTime();
        java.lang.String str62 = dateTime61.toString();
        org.joda.time.DateTime dateTime63 = localDateTime52.toDateTime((org.joda.time.ReadableInstant) dateTime61);
        org.joda.time.DateTimeZone dateTimeZone64 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str66 = dateTimeZone64.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime67 = org.joda.time.LocalDateTime.now(dateTimeZone64);
        org.joda.time.LocalDateTime.Property property68 = localDateTime67.millisOfDay();
        org.joda.time.LocalDateTime localDateTime70 = localDateTime67.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime71 = localDateTime67.toDateTime();
        java.lang.String str72 = dateTime71.toString();
        int int73 = dateTime61.compareTo((org.joda.time.ReadableInstant) dateTime71);
        long long74 = dateTime61.getMillis();
        boolean boolean75 = dateTime25.isBefore((org.joda.time.ReadableInstant) dateTime61);
        org.joda.time.DateTimeFieldType dateTimeFieldType76 = org.joda.time.DateTimeFieldType.weekOfWeekyear();
        java.lang.String str77 = dateTimeFieldType76.getName();
        int int78 = dateTime25.get(dateTimeFieldType76);
        int int79 = instant17.get(dateTimeFieldType76);
        org.joda.time.DurationFieldType durationFieldType80 = dateTimeFieldType76.getDurationType();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime13 and instant17", (dateTime13.compareTo(instant17) == 0) == dateTime13.equals(instant17));
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test138");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.DateTimeZone dateTimeZone11 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str13 = dateTimeZone11.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime14 = org.joda.time.LocalDateTime.now(dateTimeZone11);
        org.joda.time.LocalDateTime.Property property15 = localDateTime14.millisOfDay();
        org.joda.time.LocalDateTime localDateTime17 = localDateTime14.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property18 = localDateTime17.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone19 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str21 = dateTimeZone19.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now(dateTimeZone19);
        org.joda.time.LocalDateTime.Property property23 = localDateTime22.millisOfDay();
        org.joda.time.LocalDateTime localDateTime25 = localDateTime22.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime26 = localDateTime22.toDateTime();
        java.lang.String str27 = dateTime26.toString();
        org.joda.time.DateTime dateTime28 = localDateTime17.toDateTime((org.joda.time.ReadableInstant) dateTime26);
        boolean boolean29 = dateTime7.isAfter((org.joda.time.ReadableInstant) dateTime26);
        org.joda.time.DateTimeFieldType dateTimeFieldType30 = org.joda.time.DateTimeFieldType.era();
        boolean boolean31 = dateTime26.isSupported(dateTimeFieldType30);
        java.lang.Object obj32 = null;
        boolean boolean33 = dateTime26.equals(obj32);
        org.joda.time.DateTimeZone dateTimeZone34 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str36 = dateTimeZone34.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime37 = org.joda.time.LocalDateTime.now(dateTimeZone34);
        org.joda.time.LocalDateTime.Property property38 = localDateTime37.millisOfDay();
        org.joda.time.LocalDateTime localDateTime40 = localDateTime37.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime41 = localDateTime37.toDateTime();
        java.lang.String str42 = dateTime41.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType43 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int44 = dateTime41.get(dateTimeFieldType43);
        org.joda.time.Chronology chronology45 = dateTime41.getChronology();
        java.lang.Object obj46 = null;
        boolean boolean47 = dateTime41.equals(obj46);
        long long48 = dateTime41.getMillis();
        org.joda.time.Instant instant49 = dateTime41.toInstant();
        boolean boolean50 = dateTime26.isAfter((org.joda.time.ReadableInstant) instant49);
        org.joda.time.Instant instant51 = instant49.toInstant();
        org.joda.time.Chronology chronology52 = instant51.getChronology();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant51", (dateTime7.compareTo(instant51) == 0) == dateTime7.equals(instant51));
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test139");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        java.lang.String str5 = property4.getName();
        java.lang.String str6 = property4.toString();
        org.joda.time.LocalDateTime localDateTime7 = property4.roundHalfCeilingCopy();
        int int8 = property4.getMinimumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = property4.getFieldType();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime15 = org.joda.time.LocalDateTime.now(dateTimeZone12);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.millisOfDay();
        org.joda.time.LocalDateTime localDateTime18 = localDateTime15.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime19 = localDateTime15.toDateTime();
        java.lang.String str20 = dateTime19.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType21 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int22 = dateTime19.get(dateTimeFieldType21);
        org.joda.time.Chronology chronology23 = dateTime19.getChronology();
        org.joda.time.DateTimeZone dateTimeZone24 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str26 = dateTimeZone24.getShortName((long) (short) 10);
        long long28 = dateTimeZone24.convertUTCToLocal((long) ' ');
        java.lang.String str29 = dateTimeZone24.toString();
        boolean boolean31 = dateTimeZone24.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology32 = chronology23.withZone(dateTimeZone24);
        boolean boolean33 = dateTimeFieldType11.isSupported(chronology32);
        org.joda.time.DurationField durationField34 = chronology32.years();
        org.joda.time.DateTimeField dateTimeField35 = chronology32.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField36 = chronology32.halfdayOfDay();
        org.joda.time.DateTimeField dateTimeField37 = chronology32.year();
        org.joda.time.DateTimeField dateTimeField38 = dateTimeFieldType10.getField(chronology32);
        boolean boolean39 = dateTimeFieldType9.isSupported(chronology32);
        org.joda.time.DurationFieldType durationFieldType40 = org.joda.time.DurationFieldType.eras();
        org.joda.time.DateTimeZone dateTimeZone41 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str43 = dateTimeZone41.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime44 = org.joda.time.LocalDateTime.now(dateTimeZone41);
        org.joda.time.LocalDateTime.Property property45 = localDateTime44.millisOfDay();
        org.joda.time.LocalDateTime localDateTime47 = localDateTime44.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime48 = localDateTime44.toDateTime();
        java.lang.String str49 = dateTime48.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType50 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int51 = dateTime48.get(dateTimeFieldType50);
        org.joda.time.Chronology chronology52 = dateTime48.getChronology();
        org.joda.time.DateTimeZone dateTimeZone53 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str55 = dateTimeZone53.getShortName((long) (short) 10);
        long long57 = dateTimeZone53.convertUTCToLocal((long) ' ');
        java.lang.String str58 = dateTimeZone53.toString();
        boolean boolean60 = dateTimeZone53.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology61 = chronology52.withZone(dateTimeZone53);
        org.joda.time.DateTimeField dateTimeField62 = chronology52.yearOfCentury();
        boolean boolean63 = durationFieldType40.isSupported(chronology52);
        org.joda.time.DurationField durationField64 = chronology52.weekyears();
        boolean boolean65 = dateTimeFieldType9.isSupported(chronology52);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField34 and durationField64", (durationField34.compareTo(durationField64) == 0) == durationField34.equals(durationField64));
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test140");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        long long5 = property4.remainder();
        org.joda.time.LocalDateTime localDateTime6 = property4.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime7 = property4.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime9 = property4.addWrapFieldToCopy(21);
        org.joda.time.DurationField durationField10 = property4.getRangeDurationField();
        java.lang.String str11 = property4.getAsShortText();
        java.util.Locale locale13 = java.util.Locale.CANADA_FRENCH;
        java.util.Locale locale14 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str15 = locale13.getDisplayCountry(locale14);
        java.lang.String str16 = locale13.getDisplayLanguage();
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime25 = localDateTime21.toDateTime();
        java.lang.String str26 = dateTime25.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType27 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int28 = dateTime25.get(dateTimeFieldType27);
        org.joda.time.Chronology chronology29 = dateTime25.getChronology();
        org.joda.time.DateTimeZone dateTimeZone30 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str32 = dateTimeZone30.getShortName((long) (short) 10);
        long long34 = dateTimeZone30.convertUTCToLocal((long) ' ');
        java.lang.String str35 = dateTimeZone30.toString();
        boolean boolean37 = dateTimeZone30.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology38 = chronology29.withZone(dateTimeZone30);
        org.joda.time.DateTimeField dateTimeField39 = chronology38.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField40 = dateTimeFieldType17.getField(chronology38);
        int int42 = dateTimeField40.getLeapAmount((long) 53627010);
        long long44 = dateTimeField40.roundCeiling(8434423874L);
        int int46 = dateTimeField40.get((long) 59);
        org.joda.time.DurationField durationField47 = dateTimeField40.getRangeDurationField();
        org.joda.time.tz.NameProvider nameProvider49 = org.joda.time.DateTimeZone.getNameProvider();
        java.util.Locale locale50 = java.util.Locale.CANADA;
        java.lang.String str53 = nameProvider49.getShortName(locale50, "Canada", "millisOfDay");
        java.lang.String str54 = locale50.getDisplayName();
        java.util.Locale locale57 = new java.util.Locale("53623162", "53622746");
        java.lang.String str58 = locale50.getDisplayVariant(locale57);
        java.lang.String str59 = dateTimeField40.getAsShortText((long) 53636605, locale50);
        int int60 = dateTimeField40.getMaximumValue();
        java.util.Locale locale62 = new java.util.Locale("days");
        java.util.Locale locale63 = java.util.Locale.CANADA_FRENCH;
        java.util.Locale locale64 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str65 = locale63.getDisplayCountry(locale64);
        java.lang.String str66 = locale63.getDisplayLanguage();
        boolean boolean67 = locale63.hasExtensions();
        java.lang.String str68 = locale62.getDisplayName(locale63);
        java.lang.String str69 = locale62.getDisplayCountry();
        int int70 = dateTimeField40.getMaximumShortTextLength(locale62);
        java.lang.String str71 = locale13.getDisplayName(locale62);
        org.joda.time.LocalDateTime localDateTime72 = property4.setCopy("53905474", locale62);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField10 and durationField47", (durationField10.compareTo(durationField47) == 0) == durationField10.equals(durationField47));
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test141");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        java.lang.String str5 = property4.getName();
        org.joda.time.LocalDateTime localDateTime6 = property4.roundHalfFloorCopy();
        org.joda.time.LocalDateTime localDateTime7 = property4.withMinimumValue();
        org.joda.time.LocalDateTime localDateTime9 = localDateTime7.withMinuteOfHour(4);
        org.joda.time.LocalDateTime.Property property10 = localDateTime7.era();
        org.joda.time.DateTimeZone dateTimeZone11 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str13 = dateTimeZone11.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime14 = org.joda.time.LocalDateTime.now(dateTimeZone11);
        org.joda.time.LocalDateTime.Property property15 = localDateTime14.millisOfDay();
        org.joda.time.LocalDateTime localDateTime17 = localDateTime14.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property18 = localDateTime17.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone19 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str21 = dateTimeZone19.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now(dateTimeZone19);
        org.joda.time.LocalDateTime.Property property23 = localDateTime22.millisOfDay();
        org.joda.time.LocalDateTime localDateTime25 = localDateTime22.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime26 = localDateTime22.toDateTime();
        java.lang.String str27 = dateTime26.toString();
        org.joda.time.DateTime dateTime28 = localDateTime17.toDateTime((org.joda.time.ReadableInstant) dateTime26);
        org.joda.time.DateTimeZone dateTimeZone29 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str31 = dateTimeZone29.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime32 = org.joda.time.LocalDateTime.now(dateTimeZone29);
        org.joda.time.LocalDateTime.Property property33 = localDateTime32.millisOfDay();
        org.joda.time.LocalDateTime localDateTime35 = localDateTime32.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime36 = localDateTime32.toDateTime();
        java.lang.String str37 = dateTime36.toString();
        int int38 = dateTime26.compareTo((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        boolean boolean40 = dateTime26.isEqual(readableInstant39);
        org.joda.time.Instant instant41 = dateTime26.toInstant();
        int int42 = property10.compareTo((org.joda.time.ReadableInstant) instant41);
        java.util.Locale locale43 = java.util.Locale.JAPANESE;
        java.util.Locale locale44 = java.util.Locale.ROOT;
        java.util.Set<java.lang.String> strSet45 = locale44.getUnicodeLocaleAttributes();
        java.util.Set<java.lang.String> strSet46 = locale44.getUnicodeLocaleAttributes();
        java.lang.String str47 = locale43.getDisplayCountry(locale44);
        int int48 = property10.getMaximumShortTextLength(locale43);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime26 and instant41", (dateTime26.compareTo(instant41) == 0) == dateTime26.equals(instant41));
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test142");
        org.joda.time.LocalDateTime localDateTime0 = new org.joda.time.LocalDateTime();
        java.lang.String str1 = localDateTime0.toString();
        org.joda.time.LocalDateTime localDateTime3 = localDateTime0.minusMillis(4);
        org.joda.time.LocalDateTime localDateTime5 = localDateTime3.withMinuteOfHour((int) (byte) 10);
        org.joda.time.LocalDateTime localDateTime7 = localDateTime3.plusWeeks((int) (short) 1);
        org.joda.time.DateTimeFieldType dateTimeFieldType8 = org.joda.time.DateTimeFieldType.monthOfYear();
        java.lang.String str9 = dateTimeFieldType8.toString();
        org.joda.time.LocalDateTime.Property property10 = localDateTime7.property(dateTimeFieldType8);
        java.lang.String str11 = dateTimeFieldType8.getName();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime15 = org.joda.time.LocalDateTime.now(dateTimeZone12);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.millisOfDay();
        java.lang.String str17 = property16.getName();
        org.joda.time.LocalDateTime localDateTime18 = property16.roundHalfFloorCopy();
        org.joda.time.LocalDateTime localDateTime19 = property16.withMinimumValue();
        org.joda.time.LocalDateTime localDateTime21 = localDateTime19.withMinuteOfHour(4);
        org.joda.time.LocalDateTime.Property property22 = localDateTime19.era();
        org.joda.time.DateTimeZone dateTimeZone23 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str25 = dateTimeZone23.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime26 = org.joda.time.LocalDateTime.now(dateTimeZone23);
        org.joda.time.LocalDateTime.Property property27 = localDateTime26.millisOfDay();
        org.joda.time.LocalDateTime localDateTime29 = localDateTime26.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property30 = localDateTime29.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone31 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str33 = dateTimeZone31.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime34 = org.joda.time.LocalDateTime.now(dateTimeZone31);
        org.joda.time.LocalDateTime.Property property35 = localDateTime34.millisOfDay();
        org.joda.time.LocalDateTime localDateTime37 = localDateTime34.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime38 = localDateTime34.toDateTime();
        java.lang.String str39 = dateTime38.toString();
        org.joda.time.DateTime dateTime40 = localDateTime29.toDateTime((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.DateTimeZone dateTimeZone41 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str43 = dateTimeZone41.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime44 = org.joda.time.LocalDateTime.now(dateTimeZone41);
        org.joda.time.LocalDateTime.Property property45 = localDateTime44.millisOfDay();
        org.joda.time.LocalDateTime localDateTime47 = localDateTime44.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime48 = localDateTime44.toDateTime();
        java.lang.String str49 = dateTime48.toString();
        int int50 = dateTime38.compareTo((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        boolean boolean52 = dateTime38.isEqual(readableInstant51);
        org.joda.time.Instant instant53 = dateTime38.toInstant();
        int int54 = property22.compareTo((org.joda.time.ReadableInstant) instant53);
        org.joda.time.Chronology chronology55 = instant53.getChronology();
        boolean boolean56 = dateTimeFieldType8.isSupported(chronology55);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime38 and instant53", (dateTime38.compareTo(instant53) == 0) == dateTime38.equals(instant53));
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test143");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        java.lang.Object obj12 = null;
        boolean boolean13 = dateTime7.equals(obj12);
        long long14 = dateTime7.getMillis();
        org.joda.time.Instant instant15 = dateTime7.toInstant();
        org.joda.time.LocalDateTime localDateTime16 = new org.joda.time.LocalDateTime();
        java.lang.String str17 = localDateTime16.toString();
        org.joda.time.LocalDateTime localDateTime19 = localDateTime16.minusMillis(4);
        org.joda.time.LocalDateTime localDateTime21 = localDateTime19.withMinuteOfHour((int) (byte) 10);
        org.joda.time.DateTimeZone dateTimeZone22 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str24 = dateTimeZone22.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime25 = org.joda.time.LocalDateTime.now(dateTimeZone22);
        org.joda.time.LocalDateTime.Property property26 = localDateTime25.millisOfDay();
        long long27 = property26.remainder();
        org.joda.time.Interval interval28 = property26.toInterval();
        org.joda.time.LocalDateTime localDateTime30 = property26.addToCopy((int) '4');
        boolean boolean31 = localDateTime21.isAfter((org.joda.time.ReadablePartial) localDateTime30);
        org.joda.time.LocalDateTime.Property property32 = localDateTime30.yearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone33 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str35 = dateTimeZone33.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime36 = org.joda.time.LocalDateTime.now(dateTimeZone33);
        org.joda.time.LocalDateTime.Property property37 = localDateTime36.millisOfDay();
        org.joda.time.LocalDateTime localDateTime39 = localDateTime36.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property40 = localDateTime39.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone41 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str43 = dateTimeZone41.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime44 = org.joda.time.LocalDateTime.now(dateTimeZone41);
        org.joda.time.LocalDateTime.Property property45 = localDateTime44.millisOfDay();
        org.joda.time.LocalDateTime localDateTime47 = localDateTime44.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime48 = localDateTime44.toDateTime();
        java.lang.String str49 = dateTime48.toString();
        org.joda.time.DateTime dateTime50 = localDateTime39.toDateTime((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.DateTimeZone dateTimeZone51 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str53 = dateTimeZone51.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime54 = org.joda.time.LocalDateTime.now(dateTimeZone51);
        org.joda.time.LocalDateTime.Property property55 = localDateTime54.millisOfDay();
        org.joda.time.LocalDateTime localDateTime57 = localDateTime54.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime58 = localDateTime54.toDateTime();
        java.lang.String str59 = dateTime58.toString();
        int int60 = dateTime48.compareTo((org.joda.time.ReadableInstant) dateTime58);
        int int61 = property32.compareTo((org.joda.time.ReadableInstant) dateTime58);
        int int62 = dateTime7.compareTo((org.joda.time.ReadableInstant) dateTime58);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant15 and dateTime48", (instant15.compareTo(dateTime48) == 0) == instant15.equals(dateTime48));
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test144");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        long long4 = dateTimeZone0.convertUTCToLocal((long) ' ');
        java.lang.String str5 = dateTimeZone0.toString();
        boolean boolean7 = dateTimeZone0.equals((java.lang.Object) (short) 100);
        java.util.Locale locale9 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str10 = dateTimeZone0.getShortName((long) (-1), locale9);
        long long13 = dateTimeZone0.convertLocalToUTC((long) (short) 10, true);
        org.joda.time.DateTimeZone dateTimeZone15 = org.joda.time.DateTimeZone.forOffsetHours(59);
        java.lang.String str16 = dateTimeZone15.getID();
        long long18 = dateTimeZone0.getMillisKeepLocal(dateTimeZone15, (long) 86399);
        java.lang.String str20 = dateTimeZone15.getName((long) 53771504);
        long long23 = dateTimeZone15.convertLocalToUTC((long) 324, false);
        org.joda.time.DateTimeZone dateTimeZone24 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str26 = dateTimeZone24.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime27 = org.joda.time.LocalDateTime.now(dateTimeZone24);
        org.joda.time.LocalDateTime.Property property28 = localDateTime27.millisOfDay();
        org.joda.time.LocalDateTime localDateTime30 = localDateTime27.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime31 = localDateTime27.toDateTime();
        java.lang.String str32 = dateTime31.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType33 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int34 = dateTime31.get(dateTimeFieldType33);
        org.joda.time.Chronology chronology35 = dateTime31.getChronology();
        java.lang.Object obj36 = null;
        boolean boolean37 = dateTime31.equals(obj36);
        long long38 = dateTime31.getMillis();
        org.joda.time.Instant instant39 = dateTime31.toInstant();
        org.joda.time.DateTimeZone dateTimeZone40 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str42 = dateTimeZone40.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime43 = org.joda.time.LocalDateTime.now(dateTimeZone40);
        org.joda.time.LocalDateTime.Property property44 = localDateTime43.millisOfDay();
        java.lang.String str45 = property44.getName();
        int int46 = property44.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType47 = property44.getFieldType();
        org.joda.time.LocalDateTime localDateTime48 = property44.withMinimumValue();
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.weekOfWeekyear();
        boolean boolean50 = dateTime31.equals((java.lang.Object) property49);
        org.joda.time.DateTimeZone dateTimeZone51 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str53 = dateTimeZone51.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime54 = org.joda.time.LocalDateTime.now(dateTimeZone51);
        org.joda.time.LocalDateTime.Property property55 = localDateTime54.millisOfDay();
        org.joda.time.LocalDateTime localDateTime57 = localDateTime54.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime58 = localDateTime54.toDateTime();
        java.lang.String str59 = dateTime58.toString();
        org.joda.time.DateTimeZone dateTimeZone60 = dateTime58.getZone();
        long long61 = dateTime58.getMillis();
        int int62 = dateTime31.compareTo((org.joda.time.ReadableInstant) dateTime58);
        int int63 = dateTimeZone15.getOffset((org.joda.time.ReadableInstant) dateTime58);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime31 and instant39", (dateTime31.compareTo(instant39) == 0) == dateTime31.equals(instant39));
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test145");
        org.joda.time.LocalDateTime localDateTime0 = new org.joda.time.LocalDateTime();
        org.joda.time.LocalDateTime.Property property1 = localDateTime0.millisOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType2 = property1.getFieldType();
        org.joda.time.DateTimeZone dateTimeZone3 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str5 = dateTimeZone3.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime6 = org.joda.time.LocalDateTime.now(dateTimeZone3);
        org.joda.time.LocalDateTime.Property property7 = localDateTime6.millisOfDay();
        org.joda.time.LocalDateTime localDateTime9 = localDateTime6.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime10 = localDateTime6.toDateTime();
        java.lang.String str11 = dateTime10.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType12 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int13 = dateTime10.get(dateTimeFieldType12);
        org.joda.time.Chronology chronology14 = dateTime10.getChronology();
        org.joda.time.DateTimeZone dateTimeZone15 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str17 = dateTimeZone15.getShortName((long) (short) 10);
        long long19 = dateTimeZone15.convertUTCToLocal((long) ' ');
        java.lang.String str20 = dateTimeZone15.toString();
        boolean boolean22 = dateTimeZone15.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology23 = chronology14.withZone(dateTimeZone15);
        org.joda.time.DurationField durationField24 = chronology14.weekyears();
        org.joda.time.DateTimeField dateTimeField25 = chronology14.dayOfYear();
        org.joda.time.DurationField durationField26 = chronology14.weeks();
        org.joda.time.DateTimeField dateTimeField27 = chronology14.yearOfEra();
        boolean boolean28 = dateTimeFieldType2.isSupported(chronology14);
        org.joda.time.DateTimeZone dateTimeZone29 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str31 = dateTimeZone29.getShortName((long) (short) 10);
        long long33 = dateTimeZone29.convertUTCToLocal((long) ' ');
        java.lang.String str34 = dateTimeZone29.toString();
        long long37 = dateTimeZone29.adjustOffset((long) 'a', true);
        java.lang.String str38 = dateTimeZone29.getID();
        long long41 = dateTimeZone29.adjustOffset((long) (short) -1, true);
        org.joda.time.Chronology chronology42 = chronology14.withZone(dateTimeZone29);
        org.joda.time.DateTimeField dateTimeField43 = chronology42.monthOfYear();
        org.joda.time.DurationField durationField44 = chronology42.months();
        org.joda.time.DurationField durationField45 = chronology42.eras();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField45, durationField24, and durationField26", !(durationField45.compareTo(durationField24) == 0) || (Math.signum(durationField45.compareTo(durationField26)) == Math.signum(durationField24.compareTo(durationField26))));
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test146");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.weekyearOfCentury();
        org.joda.time.DurationFieldType durationFieldType1 = dateTimeFieldType0.getDurationType();
        org.joda.time.DateTimeZone dateTimeZone2 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str4 = dateTimeZone2.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime5 = org.joda.time.LocalDateTime.now(dateTimeZone2);
        org.joda.time.LocalDateTime.Property property6 = localDateTime5.millisOfDay();
        org.joda.time.LocalDateTime localDateTime8 = localDateTime5.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime9 = localDateTime5.toDateTime();
        java.lang.String str10 = dateTime9.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int12 = dateTime9.get(dateTimeFieldType11);
        org.joda.time.Chronology chronology13 = dateTime9.getChronology();
        org.joda.time.DateTimeField dateTimeField14 = chronology13.weekyearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone15 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str17 = dateTimeZone15.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now(dateTimeZone15);
        org.joda.time.LocalDateTime.Property property19 = localDateTime18.millisOfDay();
        long long20 = property19.remainder();
        org.joda.time.LocalDateTime localDateTime21 = property19.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime22 = property19.roundFloorCopy();
        java.lang.String str23 = property19.getAsShortText();
        int int24 = property19.getMinimumValue();
        org.joda.time.LocalDateTime localDateTime26 = property19.addToCopy((long) 53623874);
        int[] intArray28 = chronology13.get((org.joda.time.ReadablePartial) localDateTime26, (long) 53630466);
        org.joda.time.DateTimeZone dateTimeZone30 = org.joda.time.DateTimeZone.forOffsetMillis((int) 'a');
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone30);
        java.util.Date date32 = localDateTime31.toDate();
        int[] intArray34 = chronology13.get((org.joda.time.ReadablePartial) localDateTime31, (long) 99);
        org.joda.time.DurationField durationField35 = durationFieldType1.getField(chronology13);
        java.lang.String str36 = durationField35.toString();
        long long37 = durationField35.getUnitMillis();
        org.joda.time.DurationFieldType durationFieldType38 = durationField35.getType();
        org.joda.time.DateTimeFieldType dateTimeFieldType39 = org.joda.time.DateTimeFieldType.weekOfWeekyear();
        java.lang.String str40 = dateTimeFieldType39.getName();
        org.joda.time.DurationFieldType durationFieldType41 = dateTimeFieldType39.getRangeDurationType();
        org.joda.time.DurationFieldType durationFieldType42 = dateTimeFieldType39.getDurationType();
        org.joda.time.DateTimeFieldType dateTimeFieldType43 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone44 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str46 = dateTimeZone44.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime47 = org.joda.time.LocalDateTime.now(dateTimeZone44);
        org.joda.time.LocalDateTime.Property property48 = localDateTime47.millisOfDay();
        org.joda.time.LocalDateTime localDateTime50 = localDateTime47.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime51 = localDateTime47.toDateTime();
        java.lang.String str52 = dateTime51.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int54 = dateTime51.get(dateTimeFieldType53);
        org.joda.time.Chronology chronology55 = dateTime51.getChronology();
        org.joda.time.DateTimeZone dateTimeZone56 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str58 = dateTimeZone56.getShortName((long) (short) 10);
        long long60 = dateTimeZone56.convertUTCToLocal((long) ' ');
        java.lang.String str61 = dateTimeZone56.toString();
        boolean boolean63 = dateTimeZone56.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology64 = chronology55.withZone(dateTimeZone56);
        org.joda.time.DateTimeField dateTimeField65 = chronology64.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField66 = dateTimeFieldType43.getField(chronology64);
        org.joda.time.Chronology chronology67 = chronology64.withUTC();
        org.joda.time.DurationField durationField68 = chronology67.millis();
        org.joda.time.DurationField durationField69 = chronology67.months();
        org.joda.time.DurationField durationField70 = durationFieldType42.getField(chronology67);
        org.joda.time.DurationField durationField71 = chronology67.weekyears();
        org.joda.time.LocalDateTime localDateTime72 = new org.joda.time.LocalDateTime(chronology67);
        org.joda.time.DurationField durationField73 = durationFieldType38.getField(chronology67);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField35 and durationField73", (durationField35.compareTo(durationField73) == 0) == durationField35.equals(durationField73));
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test147");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.Chronology chronology12 = chronology11.withUTC();
        org.joda.time.DateTimeField dateTimeField13 = chronology12.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField14 = chronology12.hourOfHalfday();
        org.joda.time.DurationField durationField15 = chronology12.minutes();
        org.joda.time.DateTimeField dateTimeField16 = chronology12.halfdayOfDay();
        org.joda.time.DurationField durationField17 = chronology12.days();
        org.joda.time.DurationField durationField18 = chronology12.eras();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField18, durationField15, and durationField17", !(durationField18.compareTo(durationField15) == 0) || (Math.signum(durationField18.compareTo(durationField17)) == Math.signum(durationField15.compareTo(durationField17))));
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test148");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        boolean boolean22 = dateTimeFieldType0.isSupported(chronology21);
        org.joda.time.DurationField durationField23 = chronology21.years();
        long long24 = durationField23.getUnitMillis();
        long long26 = durationField23.getMillis(292278993);
        org.joda.time.LocalDateTime localDateTime27 = new org.joda.time.LocalDateTime();
        org.joda.time.LocalDateTime.Property property28 = localDateTime27.millisOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType29 = property28.getFieldType();
        org.joda.time.DateTimeZone dateTimeZone30 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str32 = dateTimeZone30.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime33 = org.joda.time.LocalDateTime.now(dateTimeZone30);
        org.joda.time.LocalDateTime.Property property34 = localDateTime33.millisOfDay();
        org.joda.time.LocalDateTime localDateTime36 = localDateTime33.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime37 = localDateTime33.toDateTime();
        java.lang.String str38 = dateTime37.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType39 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int40 = dateTime37.get(dateTimeFieldType39);
        org.joda.time.Chronology chronology41 = dateTime37.getChronology();
        org.joda.time.DateTimeZone dateTimeZone42 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str44 = dateTimeZone42.getShortName((long) (short) 10);
        long long46 = dateTimeZone42.convertUTCToLocal((long) ' ');
        java.lang.String str47 = dateTimeZone42.toString();
        boolean boolean49 = dateTimeZone42.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology50 = chronology41.withZone(dateTimeZone42);
        org.joda.time.DurationField durationField51 = chronology41.weekyears();
        org.joda.time.DateTimeField dateTimeField52 = chronology41.dayOfYear();
        org.joda.time.DurationField durationField53 = chronology41.weeks();
        org.joda.time.DateTimeField dateTimeField54 = chronology41.yearOfEra();
        boolean boolean55 = dateTimeFieldType29.isSupported(chronology41);
        org.joda.time.DurationField durationField56 = chronology41.millis();
        int int57 = durationField23.compareTo(durationField56);
        org.joda.time.DateTimeFieldType dateTimeFieldType58 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone59 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str61 = dateTimeZone59.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime62 = org.joda.time.LocalDateTime.now(dateTimeZone59);
        org.joda.time.LocalDateTime.Property property63 = localDateTime62.millisOfDay();
        org.joda.time.LocalDateTime localDateTime65 = localDateTime62.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime66 = localDateTime62.toDateTime();
        java.lang.String str67 = dateTime66.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType68 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int69 = dateTime66.get(dateTimeFieldType68);
        org.joda.time.Chronology chronology70 = dateTime66.getChronology();
        org.joda.time.DateTimeZone dateTimeZone71 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str73 = dateTimeZone71.getShortName((long) (short) 10);
        long long75 = dateTimeZone71.convertUTCToLocal((long) ' ');
        java.lang.String str76 = dateTimeZone71.toString();
        boolean boolean78 = dateTimeZone71.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology79 = chronology70.withZone(dateTimeZone71);
        org.joda.time.DateTimeField dateTimeField80 = chronology79.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField81 = dateTimeFieldType58.getField(chronology79);
        org.joda.time.DurationField durationField82 = chronology79.seconds();
        boolean boolean83 = durationField82.isSupported();
        int int84 = durationField23.compareTo(durationField82);
        org.joda.time.DurationFieldType durationFieldType85 = durationField82.getType();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField23 and durationField51", (durationField23.compareTo(durationField51) == 0) == durationField23.equals(durationField51));
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test149");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone9 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str11 = dateTimeZone9.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(dateTimeZone9);
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.millisOfDay();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime12.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now(dateTimeZone17);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime20.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime24 = localDateTime20.toDateTime();
        java.lang.String str25 = dateTime24.toString();
        org.joda.time.DateTime dateTime26 = localDateTime15.toDateTime((org.joda.time.ReadableInstant) dateTime24);
        boolean boolean27 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.LocalDateTime localDateTime34 = localDateTime31.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime35 = localDateTime31.toDateTime();
        java.lang.String str36 = dateTime35.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int38 = dateTime35.get(dateTimeFieldType37);
        int int39 = dateTime24.compareTo((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.DateTimeZone dateTimeZone40 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str42 = dateTimeZone40.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime43 = org.joda.time.LocalDateTime.now(dateTimeZone40);
        org.joda.time.LocalDateTime.Property property44 = localDateTime43.millisOfDay();
        org.joda.time.LocalDateTime localDateTime46 = localDateTime43.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime47 = localDateTime43.toDateTime();
        java.lang.String str48 = dateTime47.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType49 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int50 = dateTime47.get(dateTimeFieldType49);
        org.joda.time.DateTimeZone dateTimeZone51 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str53 = dateTimeZone51.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime54 = org.joda.time.LocalDateTime.now(dateTimeZone51);
        org.joda.time.LocalDateTime.Property property55 = localDateTime54.millisOfDay();
        org.joda.time.LocalDateTime localDateTime57 = localDateTime54.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property58 = localDateTime57.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone59 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str61 = dateTimeZone59.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime62 = org.joda.time.LocalDateTime.now(dateTimeZone59);
        org.joda.time.LocalDateTime.Property property63 = localDateTime62.millisOfDay();
        org.joda.time.LocalDateTime localDateTime65 = localDateTime62.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime66 = localDateTime62.toDateTime();
        java.lang.String str67 = dateTime66.toString();
        org.joda.time.DateTime dateTime68 = localDateTime57.toDateTime((org.joda.time.ReadableInstant) dateTime66);
        boolean boolean69 = dateTime47.isAfter((org.joda.time.ReadableInstant) dateTime66);
        boolean boolean70 = dateTime24.isBefore((org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.DateTimeZone dateTimeZone71 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str73 = dateTimeZone71.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime74 = org.joda.time.LocalDateTime.now(dateTimeZone71);
        org.joda.time.LocalDateTime.Property property75 = localDateTime74.millisOfDay();
        org.joda.time.LocalDateTime localDateTime77 = localDateTime74.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime78 = localDateTime74.toDateTime();
        java.lang.String str79 = dateTime78.toString();
        org.joda.time.DateTimeZone dateTimeZone80 = dateTime78.getZone();
        long long81 = dateTime78.getMillis();
        boolean boolean82 = dateTime24.isAfter((org.joda.time.ReadableInstant) dateTime78);
        org.joda.time.Instant instant83 = dateTime24.toInstant();
        org.joda.time.DateTimeZone dateTimeZone84 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str86 = dateTimeZone84.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime87 = org.joda.time.LocalDateTime.now(dateTimeZone84);
        org.joda.time.LocalDateTime.Property property88 = localDateTime87.millisOfDay();
        java.lang.String str89 = property88.getName();
        org.joda.time.LocalDateTime localDateTime90 = property88.roundHalfFloorCopy();
        org.joda.time.DateTimeFieldType dateTimeFieldType91 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        boolean boolean92 = localDateTime90.isSupported(dateTimeFieldType91);
        java.lang.String str93 = dateTimeFieldType91.toString();
        int int94 = instant83.get(dateTimeFieldType91);
        org.joda.time.DurationFieldType durationFieldType95 = dateTimeFieldType91.getRangeDurationType();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant83", (dateTime7.compareTo(instant83) == 0) == dateTime7.equals(instant83));
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test150");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        org.joda.time.DateTimeField dateTimeField22 = chronology21.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField23 = dateTimeFieldType0.getField(chronology21);
        org.joda.time.DateTimeZone dateTimeZone24 = chronology21.getZone();
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str27 = dateTimeZone25.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now(dateTimeZone25);
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.LocalDateTime localDateTime31 = localDateTime28.withDurationAdded(readableDuration29, 86399999);
        org.joda.time.DateTimeZone dateTimeZone32 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str34 = dateTimeZone32.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime35 = org.joda.time.LocalDateTime.now(dateTimeZone32);
        org.joda.time.LocalDateTime.Property property36 = localDateTime35.millisOfDay();
        org.joda.time.LocalDateTime localDateTime38 = localDateTime35.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime39 = localDateTime35.toDateTime();
        java.lang.String str40 = dateTime39.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int42 = dateTime39.get(dateTimeFieldType41);
        org.joda.time.Chronology chronology43 = dateTime39.getChronology();
        org.joda.time.DateTimeField dateTimeField44 = chronology43.weekyearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now(dateTimeZone45);
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.millisOfDay();
        long long50 = property49.remainder();
        org.joda.time.LocalDateTime localDateTime51 = property49.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime52 = property49.roundFloorCopy();
        java.lang.String str53 = property49.getAsShortText();
        int int54 = property49.getMinimumValue();
        org.joda.time.LocalDateTime localDateTime56 = property49.addToCopy((long) 53623874);
        int[] intArray58 = chronology43.get((org.joda.time.ReadablePartial) localDateTime56, (long) 53630466);
        org.joda.time.DateTimeZone dateTimeZone60 = org.joda.time.DateTimeZone.forOffsetMillis((int) 'a');
        org.joda.time.LocalDateTime localDateTime61 = org.joda.time.LocalDateTime.now(dateTimeZone60);
        java.util.Date date62 = localDateTime61.toDate();
        int[] intArray64 = chronology43.get((org.joda.time.ReadablePartial) localDateTime61, (long) 99);
        chronology21.validate((org.joda.time.ReadablePartial) localDateTime31, intArray64);
        org.joda.time.DurationField durationField66 = chronology21.eras();
        org.joda.time.DateTimeField dateTimeField67 = chronology21.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField68 = chronology21.monthOfYear();
        org.joda.time.DateTimeField dateTimeField69 = chronology21.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField70 = chronology21.hourOfHalfday();
        org.joda.time.DurationField durationField71 = chronology21.months();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField66, durationField71, and durationField66", !(durationField66.compareTo(durationField71) == 0) || (Math.signum(durationField66.compareTo(durationField66)) == Math.signum(durationField71.compareTo(durationField66))));
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test151");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(chronology11);
        org.joda.time.DateTimeField dateTimeField13 = chronology11.minuteOfHour();
        org.joda.time.DateTimeFieldType dateTimeFieldType15 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now(dateTimeZone16);
        org.joda.time.LocalDateTime.Property property20 = localDateTime19.millisOfDay();
        org.joda.time.LocalDateTime localDateTime22 = localDateTime19.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime23 = localDateTime19.toDateTime();
        java.lang.String str24 = dateTime23.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType25 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int26 = dateTime23.get(dateTimeFieldType25);
        org.joda.time.Chronology chronology27 = dateTime23.getChronology();
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        long long32 = dateTimeZone28.convertUTCToLocal((long) ' ');
        java.lang.String str33 = dateTimeZone28.toString();
        boolean boolean35 = dateTimeZone28.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology36 = chronology27.withZone(dateTimeZone28);
        boolean boolean37 = dateTimeFieldType15.isSupported(chronology36);
        org.joda.time.DurationField durationField38 = chronology36.years();
        org.joda.time.DateTimeField dateTimeField39 = chronology36.millisOfSecond();
        org.joda.time.LocalDateTime localDateTime40 = new org.joda.time.LocalDateTime((long) 305, chronology36);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.LocalDateTime localDateTime43 = localDateTime40.withPeriodAdded(readablePeriod41, 1773);
        org.joda.time.DateTimeFieldType dateTimeFieldType44 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now(dateTimeZone45);
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.millisOfDay();
        org.joda.time.LocalDateTime localDateTime51 = localDateTime48.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime52 = localDateTime48.toDateTime();
        java.lang.String str53 = dateTime52.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType54 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int55 = dateTime52.get(dateTimeFieldType54);
        org.joda.time.Chronology chronology56 = dateTime52.getChronology();
        org.joda.time.DateTimeZone dateTimeZone57 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str59 = dateTimeZone57.getShortName((long) (short) 10);
        long long61 = dateTimeZone57.convertUTCToLocal((long) ' ');
        java.lang.String str62 = dateTimeZone57.toString();
        boolean boolean64 = dateTimeZone57.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology65 = chronology56.withZone(dateTimeZone57);
        org.joda.time.DateTimeField dateTimeField66 = chronology65.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField67 = dateTimeFieldType44.getField(chronology65);
        org.joda.time.DurationField durationField68 = chronology65.seconds();
        org.joda.time.DurationField durationField69 = chronology65.weekyears();
        org.joda.time.DateTimeField dateTimeField70 = chronology65.hourOfHalfday();
        org.joda.time.DateTimeZone dateTimeZone71 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str73 = dateTimeZone71.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime74 = org.joda.time.LocalDateTime.now(dateTimeZone71);
        org.joda.time.LocalDateTime.Property property75 = localDateTime74.millisOfDay();
        org.joda.time.LocalDateTime localDateTime77 = localDateTime74.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime79 = localDateTime74.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime81 = localDateTime79.minusHours((int) (short) 10);
        int int82 = localDateTime79.getMinuteOfHour();
        org.joda.time.ReadablePeriod readablePeriod83 = null;
        org.joda.time.LocalDateTime localDateTime84 = localDateTime79.minus(readablePeriod83);
        int[] intArray86 = chronology65.get((org.joda.time.ReadablePartial) localDateTime79, (long) (byte) 100);
        org.joda.time.LocalDateTime localDateTime87 = new org.joda.time.LocalDateTime();
        java.lang.String str88 = localDateTime87.toString();
        int int89 = localDateTime87.getHourOfDay();
        org.joda.time.ReadablePeriod readablePeriod90 = null;
        org.joda.time.LocalDateTime localDateTime91 = localDateTime87.plus(readablePeriod90);
        org.joda.time.LocalDateTime localDateTime93 = localDateTime87.withCenturyOfEra(708);
        org.joda.time.LocalDateTime localDateTime95 = localDateTime93.minusMonths((int) (byte) -1);
        int[] intArray97 = chronology65.get((org.joda.time.ReadablePartial) localDateTime95, (long) 295);
        int int98 = dateTimeField13.getMaximumValue((org.joda.time.ReadablePartial) localDateTime43, intArray97);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField38 and durationField69", (durationField38.compareTo(durationField69) == 0) == durationField38.equals(durationField69));
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test152");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        long long4 = dateTimeZone0.convertUTCToLocal((long) ' ');
        java.lang.String str5 = dateTimeZone0.toString();
        boolean boolean7 = dateTimeZone0.equals((java.lang.Object) (short) 100);
        java.util.Locale locale9 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str10 = dateTimeZone0.getShortName((long) (-1), locale9);
        long long13 = dateTimeZone0.convertLocalToUTC((long) (short) 10, true);
        java.lang.String str14 = dateTimeZone0.toString();
        java.lang.String str16 = dateTimeZone0.getShortName((long) (short) 10);
        int int18 = dateTimeZone0.getOffsetFromLocal((long) '4');
        java.util.TimeZone timeZone19 = dateTimeZone0.toTimeZone();
        long long22 = dateTimeZone0.adjustOffset(0L, false);
        java.lang.String str24 = dateTimeZone0.getName(86399L);
        boolean boolean26 = dateTimeZone0.isStandardOffset(31556995200000L);
        java.lang.String str27 = dateTimeZone0.toString();
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.ReadableInstant readableInstant33 = null;
        long long34 = property32.getDifferenceAsLong(readableInstant33);
        int int35 = property32.getMaximumValue();
        org.joda.time.LocalDateTime localDateTime36 = property32.roundHalfEvenCopy();
        int int37 = localDateTime36.size();
        org.joda.time.DateTimeZone dateTimeZone38 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str40 = dateTimeZone38.getShortName((long) (short) 10);
        org.joda.time.DateTimeZone dateTimeZone41 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str43 = dateTimeZone41.getShortName((long) (short) 10);
        long long45 = dateTimeZone41.convertUTCToLocal((long) ' ');
        java.lang.String str46 = dateTimeZone41.toString();
        java.lang.Object obj47 = null;
        boolean boolean48 = dateTimeZone41.equals(obj47);
        long long50 = dateTimeZone38.getMillisKeepLocal(dateTimeZone41, (long) 53);
        org.joda.time.DateTime dateTime51 = localDateTime36.toDateTime(dateTimeZone41);
        org.joda.time.Instant instant52 = dateTime51.toInstant();
        org.joda.time.DateTimeZone dateTimeZone53 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str55 = dateTimeZone53.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime56 = org.joda.time.LocalDateTime.now(dateTimeZone53);
        org.joda.time.LocalDateTime.Property property57 = localDateTime56.millisOfDay();
        org.joda.time.LocalDateTime localDateTime59 = localDateTime56.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property60 = localDateTime59.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone61 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str63 = dateTimeZone61.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime64 = org.joda.time.LocalDateTime.now(dateTimeZone61);
        org.joda.time.LocalDateTime.Property property65 = localDateTime64.millisOfDay();
        org.joda.time.LocalDateTime localDateTime67 = localDateTime64.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime68 = localDateTime64.toDateTime();
        java.lang.String str69 = dateTime68.toString();
        org.joda.time.DateTime dateTime70 = localDateTime59.toDateTime((org.joda.time.ReadableInstant) dateTime68);
        boolean boolean71 = instant52.isBefore((org.joda.time.ReadableInstant) dateTime68);
        int int72 = dateTimeZone0.getOffset((org.joda.time.ReadableInstant) dateTime68);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime51 and instant52", (dateTime51.compareTo(instant52) == 0) == dateTime51.equals(instant52));
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test153");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DurationField durationField21 = chronology11.weekyears();
        org.joda.time.DateTimeField dateTimeField22 = chronology11.dayOfYear();
        org.joda.time.DurationField durationField23 = chronology11.weeks();
        org.joda.time.DateTimeField dateTimeField24 = chronology11.yearOfEra();
        int int26 = dateTimeField24.getMinimumValue(86400000L);
        boolean boolean27 = dateTimeField24.isSupported();
        long long30 = dateTimeField24.getDifferenceAsLong(53000L, (long) 619);
        org.joda.time.DateTimeFieldType dateTimeFieldType32 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone33 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str35 = dateTimeZone33.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime36 = org.joda.time.LocalDateTime.now(dateTimeZone33);
        org.joda.time.LocalDateTime.Property property37 = localDateTime36.millisOfDay();
        org.joda.time.LocalDateTime localDateTime39 = localDateTime36.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime40 = localDateTime36.toDateTime();
        java.lang.String str41 = dateTime40.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType42 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int43 = dateTime40.get(dateTimeFieldType42);
        org.joda.time.Chronology chronology44 = dateTime40.getChronology();
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        long long49 = dateTimeZone45.convertUTCToLocal((long) ' ');
        java.lang.String str50 = dateTimeZone45.toString();
        boolean boolean52 = dateTimeZone45.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology53 = chronology44.withZone(dateTimeZone45);
        boolean boolean54 = dateTimeFieldType32.isSupported(chronology53);
        org.joda.time.DurationField durationField55 = chronology53.years();
        org.joda.time.DateTimeField dateTimeField56 = chronology53.millisOfSecond();
        java.util.Locale locale57 = null;
        int int58 = dateTimeField56.getMaximumTextLength(locale57);
        java.util.Locale locale62 = new java.util.Locale("", "53657446");
        java.lang.String str63 = dateTimeField56.getAsShortText(53792504, locale62);
        java.lang.String str64 = dateTimeField24.getAsText(1645455558443L, locale62);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField21 and durationField55", (durationField21.compareTo(durationField55) == 0) == durationField21.equals(durationField55));
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test154");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        boolean boolean22 = dateTimeFieldType0.isSupported(chronology21);
        org.joda.time.DateTimeZone dateTimeZone23 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str25 = dateTimeZone23.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime26 = org.joda.time.LocalDateTime.now(dateTimeZone23);
        org.joda.time.LocalDateTime.Property property27 = localDateTime26.millisOfDay();
        org.joda.time.LocalDateTime localDateTime29 = localDateTime26.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime30 = localDateTime26.toDateTime();
        java.lang.String str31 = dateTime30.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType32 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int33 = dateTime30.get(dateTimeFieldType32);
        org.joda.time.Chronology chronology34 = dateTime30.getChronology();
        org.joda.time.DateTimeZone dateTimeZone35 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str37 = dateTimeZone35.getShortName((long) (short) 10);
        long long39 = dateTimeZone35.convertUTCToLocal((long) ' ');
        java.lang.String str40 = dateTimeZone35.toString();
        boolean boolean42 = dateTimeZone35.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology43 = chronology34.withZone(dateTimeZone35);
        org.joda.time.DurationField durationField44 = chronology34.weekyears();
        org.joda.time.DateTimeField dateTimeField45 = chronology34.dayOfYear();
        org.joda.time.DurationField durationField46 = chronology34.weeks();
        org.joda.time.DateTimeField dateTimeField47 = chronology34.yearOfEra();
        org.joda.time.DateTimeField dateTimeField48 = chronology34.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField49 = dateTimeFieldType0.getField(chronology34);
        org.joda.time.LocalDateTime localDateTime50 = new org.joda.time.LocalDateTime(chronology34);
        org.joda.time.Chronology chronology51 = chronology34.withUTC();
        org.joda.time.DateTimeField dateTimeField52 = chronology51.era();
        org.joda.time.DurationField durationField53 = chronology51.eras();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField53, durationField44, and durationField46", !(durationField53.compareTo(durationField44) == 0) || (Math.signum(durationField53.compareTo(durationField46)) == Math.signum(durationField44.compareTo(durationField46))));
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test155");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        long long5 = property4.remainder();
        org.joda.time.LocalDateTime localDateTime6 = property4.roundFloorCopy();
        int int7 = localDateTime6.getMinuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone8 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str10 = dateTimeZone8.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now(dateTimeZone8);
        org.joda.time.LocalDateTime.Property property12 = localDateTime11.millisOfDay();
        org.joda.time.LocalDateTime localDateTime14 = localDateTime11.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime15 = localDateTime11.toDateTime();
        java.lang.String str16 = dateTime15.toString();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now(dateTimeZone17);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime20.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property24 = localDateTime23.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str27 = dateTimeZone25.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now(dateTimeZone25);
        org.joda.time.LocalDateTime.Property property29 = localDateTime28.millisOfDay();
        org.joda.time.LocalDateTime localDateTime31 = localDateTime28.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime32 = localDateTime28.toDateTime();
        java.lang.String str33 = dateTime32.toString();
        org.joda.time.DateTime dateTime34 = localDateTime23.toDateTime((org.joda.time.ReadableInstant) dateTime32);
        boolean boolean35 = dateTime15.isBefore((org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str38 = dateTimeZone36.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime39 = org.joda.time.LocalDateTime.now(dateTimeZone36);
        org.joda.time.LocalDateTime.Property property40 = localDateTime39.millisOfDay();
        org.joda.time.LocalDateTime localDateTime42 = localDateTime39.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime43 = localDateTime39.toDateTime();
        java.lang.String str44 = dateTime43.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int46 = dateTime43.get(dateTimeFieldType45);
        org.joda.time.DateTimeZone dateTimeZone47 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str49 = dateTimeZone47.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime50 = org.joda.time.LocalDateTime.now(dateTimeZone47);
        org.joda.time.LocalDateTime.Property property51 = localDateTime50.millisOfDay();
        org.joda.time.LocalDateTime localDateTime53 = localDateTime50.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property54 = localDateTime53.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone55 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str57 = dateTimeZone55.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime58 = org.joda.time.LocalDateTime.now(dateTimeZone55);
        org.joda.time.LocalDateTime.Property property59 = localDateTime58.millisOfDay();
        org.joda.time.LocalDateTime localDateTime61 = localDateTime58.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime62 = localDateTime58.toDateTime();
        java.lang.String str63 = dateTime62.toString();
        org.joda.time.DateTime dateTime64 = localDateTime53.toDateTime((org.joda.time.ReadableInstant) dateTime62);
        boolean boolean65 = dateTime43.isAfter((org.joda.time.ReadableInstant) dateTime62);
        boolean boolean66 = dateTime15.isBefore((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.DateTime dateTime67 = localDateTime6.toDateTime((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.Instant instant68 = dateTime67.toInstant();
        org.joda.time.DateTimeZone dateTimeZone69 = dateTime67.getZone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime15 and instant68", (dateTime15.compareTo(instant68) == 0) == dateTime15.equals(instant68));
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test156");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone9 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str11 = dateTimeZone9.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(dateTimeZone9);
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.millisOfDay();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime12.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now(dateTimeZone17);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime20.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime24 = localDateTime20.toDateTime();
        java.lang.String str25 = dateTime24.toString();
        org.joda.time.DateTime dateTime26 = localDateTime15.toDateTime((org.joda.time.ReadableInstant) dateTime24);
        boolean boolean27 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.Instant instant28 = dateTime7.toInstant();
        long long29 = instant28.getMillis();
        org.joda.time.DateTimeZone dateTimeZone30 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str32 = dateTimeZone30.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime33 = org.joda.time.LocalDateTime.now(dateTimeZone30);
        org.joda.time.LocalDateTime.Property property34 = localDateTime33.millisOfDay();
        org.joda.time.LocalDateTime localDateTime36 = localDateTime33.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime38 = localDateTime33.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime40 = localDateTime38.withMillisOfDay(53620101);
        org.joda.time.LocalDateTime localDateTime42 = localDateTime40.minusMonths((-1));
        org.joda.time.LocalDateTime localDateTime44 = localDateTime40.plusSeconds(0);
        org.joda.time.LocalDateTime.Property property45 = localDateTime44.centuryOfEra();
        org.joda.time.LocalDateTime localDateTime46 = property45.roundCeilingCopy();
        org.joda.time.DateTimeZone dateTimeZone47 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str49 = dateTimeZone47.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime50 = org.joda.time.LocalDateTime.now(dateTimeZone47);
        org.joda.time.LocalDateTime.Property property51 = localDateTime50.millisOfDay();
        org.joda.time.LocalDateTime localDateTime53 = localDateTime50.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime54 = localDateTime50.toDateTime();
        java.lang.String str55 = dateTime54.toString();
        long long56 = dateTime54.getMillis();
        org.joda.time.Chronology chronology57 = dateTime54.getChronology();
        int int58 = property45.getDifference((org.joda.time.ReadableInstant) dateTime54);
        int int59 = instant28.compareTo((org.joda.time.ReadableInstant) dateTime54);
        org.joda.time.DateTimeZone dateTimeZone60 = dateTime54.getZone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant28", (dateTime7.compareTo(instant28) == 0) == dateTime7.equals(instant28));
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test157");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        java.lang.Object obj12 = null;
        boolean boolean13 = dateTime7.equals(obj12);
        long long14 = dateTime7.getMillis();
        org.joda.time.Instant instant15 = dateTime7.toInstant();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now(dateTimeZone16);
        org.joda.time.LocalDateTime.Property property20 = localDateTime19.millisOfDay();
        java.lang.String str21 = property20.getName();
        int int22 = property20.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = property20.getFieldType();
        org.joda.time.LocalDateTime localDateTime24 = property20.withMinimumValue();
        org.joda.time.LocalDateTime.Property property25 = localDateTime24.weekOfWeekyear();
        boolean boolean26 = dateTime7.equals((java.lang.Object) property25);
        org.joda.time.DateTimeZone dateTimeZone27 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str29 = dateTimeZone27.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime30 = org.joda.time.LocalDateTime.now(dateTimeZone27);
        org.joda.time.LocalDateTime.Property property31 = localDateTime30.millisOfDay();
        org.joda.time.LocalDateTime localDateTime33 = localDateTime30.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime34 = localDateTime30.toDateTime();
        java.lang.String str35 = dateTime34.toString();
        org.joda.time.DateTimeZone dateTimeZone36 = dateTime34.getZone();
        long long37 = dateTime34.getMillis();
        int int38 = dateTime7.compareTo((org.joda.time.ReadableInstant) dateTime34);
        java.lang.String str39 = dateTime7.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant15 and dateTime34", (instant15.compareTo(dateTime34) == 0) == instant15.equals(dateTime34));
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test158");
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        org.joda.time.DurationField durationField22 = chronology12.weekyears();
        org.joda.time.DateTimeField dateTimeField23 = chronology12.dayOfYear();
        org.joda.time.ReadablePeriod readablePeriod24 = null;
        long long27 = chronology12.add(readablePeriod24, (long) (short) -1, 21);
        org.joda.time.DurationField durationField28 = chronology12.halfdays();
        org.joda.time.DurationField durationField29 = chronology12.halfdays();
        org.joda.time.LocalDateTime localDateTime30 = new org.joda.time.LocalDateTime(53639903L, chronology12);
        org.joda.time.ReadablePeriod readablePeriod31 = null;
        org.joda.time.LocalDateTime localDateTime32 = localDateTime30.minus(readablePeriod31);
        org.joda.time.ReadablePeriod readablePeriod33 = null;
        org.joda.time.LocalDateTime localDateTime34 = localDateTime30.plus(readablePeriod33);
        org.joda.time.LocalDateTime localDateTime35 = new org.joda.time.LocalDateTime();
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str38 = dateTimeZone36.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime39 = org.joda.time.LocalDateTime.now(dateTimeZone36);
        org.joda.time.LocalDateTime.Property property40 = localDateTime39.millisOfDay();
        java.lang.String str41 = property40.getName();
        int int42 = property40.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType43 = property40.getFieldType();
        int int44 = localDateTime35.get(dateTimeFieldType43);
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone46 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str48 = dateTimeZone46.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime49 = org.joda.time.LocalDateTime.now(dateTimeZone46);
        org.joda.time.LocalDateTime.Property property50 = localDateTime49.millisOfDay();
        org.joda.time.LocalDateTime localDateTime52 = localDateTime49.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime53 = localDateTime49.toDateTime();
        java.lang.String str54 = dateTime53.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType55 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int56 = dateTime53.get(dateTimeFieldType55);
        org.joda.time.Chronology chronology57 = dateTime53.getChronology();
        org.joda.time.DateTimeZone dateTimeZone58 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str60 = dateTimeZone58.getShortName((long) (short) 10);
        long long62 = dateTimeZone58.convertUTCToLocal((long) ' ');
        java.lang.String str63 = dateTimeZone58.toString();
        boolean boolean65 = dateTimeZone58.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology66 = chronology57.withZone(dateTimeZone58);
        boolean boolean67 = dateTimeFieldType45.isSupported(chronology66);
        org.joda.time.DurationField durationField68 = chronology66.years();
        org.joda.time.LocalDateTime localDateTime69 = org.joda.time.LocalDateTime.now(chronology66);
        org.joda.time.DateTimeField dateTimeField70 = dateTimeFieldType43.getField(chronology66);
        org.joda.time.DurationFieldType durationFieldType71 = dateTimeFieldType43.getRangeDurationType();
        org.joda.time.LocalDateTime localDateTime73 = localDateTime34.withField(dateTimeFieldType43, 0);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField22 and durationField68", (durationField22.compareTo(durationField68) == 0) == durationField22.equals(durationField68));
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test159");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        boolean boolean22 = dateTimeFieldType0.isSupported(chronology21);
        org.joda.time.DurationField durationField23 = chronology21.years();
        org.joda.time.LocalDateTime localDateTime24 = org.joda.time.LocalDateTime.now(chronology21);
        org.joda.time.DurationField durationField25 = chronology21.eras();
        org.joda.time.Chronology chronology26 = chronology21.withUTC();
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField23 and durationField25", Math.signum(durationField23.compareTo(durationField25)) == -Math.signum(durationField25.compareTo(durationField23)));
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test160");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.ReadableInstant readableInstant5 = null;
        long long6 = property4.getDifferenceAsLong(readableInstant5);
        java.util.Locale locale7 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str8 = locale7.getISO3Language();
        java.lang.String str9 = property4.getAsShortText(locale7);
        org.joda.time.DurationField durationField10 = property4.getLeapDurationField();
        java.util.Locale locale11 = java.util.Locale.ROOT;
        java.util.Set<java.lang.String> strSet12 = locale11.getUnicodeLocaleAttributes();
        int int13 = property4.getMaximumTextLength(locale11);
        org.joda.time.LocalDateTime localDateTime14 = property4.getLocalDateTime();
        org.joda.time.Interval interval15 = property4.toInterval();
        org.joda.time.LocalDateTime localDateTime17 = property4.setCopy("53632729");
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property25 = localDateTime24.minuteOfHour();
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.LocalDateTime localDateTime27 = localDateTime24.plus(readableDuration26);
        int int28 = localDateTime24.getYearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone29 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str31 = dateTimeZone29.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime32 = org.joda.time.LocalDateTime.now(dateTimeZone29);
        org.joda.time.LocalDateTime.Property property33 = localDateTime32.millisOfDay();
        java.lang.String str34 = property33.getName();
        org.joda.time.LocalDateTime localDateTime35 = property33.roundHalfFloorCopy();
        org.joda.time.LocalDateTime localDateTime37 = localDateTime35.minusHours((int) (byte) -1);
        boolean boolean38 = localDateTime24.isBefore((org.joda.time.ReadablePartial) localDateTime37);
        int int39 = property4.compareTo((org.joda.time.ReadablePartial) localDateTime24);
        org.joda.time.DateTimeFieldType dateTimeFieldType40 = org.joda.time.DateTimeFieldType.hourOfDay();
        org.joda.time.DurationFieldType durationFieldType41 = dateTimeFieldType40.getDurationType();
        org.joda.time.DateTimeFieldType dateTimeFieldType42 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone43 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str45 = dateTimeZone43.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime46 = org.joda.time.LocalDateTime.now(dateTimeZone43);
        org.joda.time.LocalDateTime.Property property47 = localDateTime46.millisOfDay();
        org.joda.time.LocalDateTime localDateTime49 = localDateTime46.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime50 = localDateTime46.toDateTime();
        java.lang.String str51 = dateTime50.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType52 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int53 = dateTime50.get(dateTimeFieldType52);
        org.joda.time.Chronology chronology54 = dateTime50.getChronology();
        org.joda.time.DateTimeZone dateTimeZone55 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str57 = dateTimeZone55.getShortName((long) (short) 10);
        long long59 = dateTimeZone55.convertUTCToLocal((long) ' ');
        java.lang.String str60 = dateTimeZone55.toString();
        boolean boolean62 = dateTimeZone55.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology63 = chronology54.withZone(dateTimeZone55);
        org.joda.time.DateTimeField dateTimeField64 = chronology63.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField65 = dateTimeFieldType42.getField(chronology63);
        org.joda.time.DurationField durationField66 = chronology63.seconds();
        org.joda.time.DurationField durationField67 = chronology63.weekyears();
        boolean boolean68 = dateTimeFieldType40.isSupported(chronology63);
        org.joda.time.LocalDateTime.Property property69 = localDateTime24.property(dateTimeFieldType40);
        org.joda.time.DateTimeZone dateTimeZone70 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str72 = dateTimeZone70.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime73 = org.joda.time.LocalDateTime.now(dateTimeZone70);
        org.joda.time.LocalDateTime.Property property74 = localDateTime73.millisOfDay();
        org.joda.time.LocalDateTime localDateTime76 = localDateTime73.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime78 = localDateTime73.plusHours((int) ' ');
        org.joda.time.ReadablePeriod readablePeriod79 = null;
        org.joda.time.LocalDateTime localDateTime80 = localDateTime73.plus(readablePeriod79);
        org.joda.time.LocalDateTime localDateTime82 = localDateTime73.minusSeconds((int) (byte) 1);
        org.joda.time.Chronology chronology83 = localDateTime82.getChronology();
        boolean boolean84 = dateTimeFieldType40.isSupported(chronology83);
        org.joda.time.DurationField durationField85 = chronology83.eras();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField85, durationField66, and durationField67", !(durationField85.compareTo(durationField66) == 0) || (Math.signum(durationField85.compareTo(durationField67)) == Math.signum(durationField66.compareTo(durationField67))));
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test161");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DurationField durationField21 = chronology11.weekyears();
        org.joda.time.DateTimeField dateTimeField22 = chronology11.dayOfYear();
        org.joda.time.DurationField durationField23 = chronology11.weeks();
        org.joda.time.DateTimeField dateTimeField24 = chronology11.yearOfEra();
        org.joda.time.DurationField durationField25 = chronology11.minutes();
        org.joda.time.DateTimeField dateTimeField26 = chronology11.weekOfWeekyear();
        org.joda.time.DurationField durationField27 = chronology11.millis();
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.DurationFieldType durationFieldType33 = org.joda.time.DurationFieldType.centuries();
        boolean boolean34 = localDateTime31.equals((java.lang.Object) durationFieldType33);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray35 = localDateTime31.getFieldTypes();
        org.joda.time.LocalDateTime localDateTime37 = localDateTime31.plusMonths((int) (short) -1);
        int int38 = localDateTime31.getYearOfCentury();
        org.joda.time.LocalDateTime localDateTime40 = localDateTime31.minusMinutes(0);
        org.joda.time.LocalDateTime.Property property41 = localDateTime40.weekyear();
        org.joda.time.LocalDateTime localDateTime43 = localDateTime40.withWeekyear((-10800000));
        int int44 = localDateTime40.getWeekOfWeekyear();
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now(dateTimeZone45);
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.millisOfDay();
        org.joda.time.DateTimeZone dateTimeZone50 = null;
        org.joda.time.DateTime dateTime51 = localDateTime48.toDateTime(dateTimeZone50);
        org.joda.time.DateTimeZone dateTimeZone52 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str54 = dateTimeZone52.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime55 = org.joda.time.LocalDateTime.now(dateTimeZone52);
        org.joda.time.LocalDateTime.Property property56 = localDateTime55.millisOfDay();
        org.joda.time.LocalDateTime localDateTime58 = localDateTime55.plusMonths((int) (byte) 100);
        int int59 = localDateTime55.getYear();
        boolean boolean60 = localDateTime48.isAfter((org.joda.time.ReadablePartial) localDateTime55);
        int[] intArray61 = localDateTime55.getValues();
        chronology11.validate((org.joda.time.ReadablePartial) localDateTime40, intArray61);
        org.joda.time.DurationField durationField63 = chronology11.years();
        org.joda.time.DateTimeField dateTimeField64 = chronology11.monthOfYear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField21 and durationField63", (durationField21.compareTo(durationField63) == 0) == durationField21.equals(durationField63));
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test162");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DurationField durationField21 = chronology11.weekyears();
        java.lang.String str22 = durationField21.toString();
        boolean boolean23 = durationField21.isSupported();
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str27 = dateTimeZone25.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now(dateTimeZone25);
        org.joda.time.LocalDateTime.Property property29 = localDateTime28.millisOfDay();
        org.joda.time.LocalDateTime localDateTime31 = localDateTime28.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime32 = localDateTime28.toDateTime();
        java.lang.String str33 = dateTime32.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType34 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int35 = dateTime32.get(dateTimeFieldType34);
        org.joda.time.Chronology chronology36 = dateTime32.getChronology();
        org.joda.time.DateTimeZone dateTimeZone37 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str39 = dateTimeZone37.getShortName((long) (short) 10);
        long long41 = dateTimeZone37.convertUTCToLocal((long) ' ');
        java.lang.String str42 = dateTimeZone37.toString();
        boolean boolean44 = dateTimeZone37.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology45 = chronology36.withZone(dateTimeZone37);
        org.joda.time.DateTimeField dateTimeField46 = chronology36.yearOfCentury();
        org.joda.time.LocalDateTime localDateTime47 = new org.joda.time.LocalDateTime((long) 69, chronology36);
        org.joda.time.DurationField durationField48 = chronology36.weekyears();
        org.joda.time.DateTimeField dateTimeField49 = chronology36.millisOfSecond();
        org.joda.time.DurationField durationField50 = chronology36.seconds();
        org.joda.time.DateTimeField dateTimeField51 = chronology36.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField52 = chronology36.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField53 = chronology36.weekyearOfCentury();
        org.joda.time.DurationField durationField54 = dateTimeField53.getDurationField();
        long long57 = durationField54.getDifferenceAsLong(1645455404783L, (long) 53804612);
        int int58 = durationField21.compareTo(durationField54);
        long long61 = durationField21.subtract(53702407L, 959);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField21 and durationField54", (durationField21.compareTo(durationField54) == 0) == durationField21.equals(durationField54));
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test163");
        org.joda.time.DurationFieldType durationFieldType0 = org.joda.time.DurationFieldType.weekyears();
        java.lang.String str1 = durationFieldType0.toString();
        org.joda.time.DateTimeZone dateTimeZone2 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str4 = dateTimeZone2.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime5 = org.joda.time.LocalDateTime.now(dateTimeZone2);
        org.joda.time.LocalDateTime.Property property6 = localDateTime5.millisOfDay();
        org.joda.time.LocalDateTime localDateTime8 = localDateTime5.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime9 = localDateTime5.toDateTime();
        java.lang.String str10 = dateTime9.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int12 = dateTime9.get(dateTimeFieldType11);
        org.joda.time.Chronology chronology13 = dateTime9.getChronology();
        org.joda.time.DateTimeZone dateTimeZone14 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str16 = dateTimeZone14.getShortName((long) (short) 10);
        long long18 = dateTimeZone14.convertUTCToLocal((long) ' ');
        java.lang.String str19 = dateTimeZone14.toString();
        boolean boolean21 = dateTimeZone14.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology22 = chronology13.withZone(dateTimeZone14);
        org.joda.time.DurationField durationField23 = durationFieldType0.getField(chronology22);
        org.joda.time.DurationField durationField24 = chronology22.years();
        org.joda.time.LocalDateTime localDateTime25 = new org.joda.time.LocalDateTime(chronology22);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField23 and durationField24", (durationField23.compareTo(durationField24) == 0) == durationField23.equals(durationField24));
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test164");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DateTimeField dateTimeField21 = chronology20.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField22 = chronology20.yearOfCentury();
        org.joda.time.DurationField durationField23 = chronology20.centuries();
        org.joda.time.DateTimeField dateTimeField24 = chronology20.hourOfDay();
        org.joda.time.DateTimeField dateTimeField25 = chronology20.era();
        org.joda.time.DurationField durationField26 = chronology20.eras();
        org.joda.time.DateTimeField dateTimeField27 = chronology20.monthOfYear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField23 and durationField26", Math.signum(durationField23.compareTo(durationField26)) == -Math.signum(durationField26.compareTo(durationField23)));
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test165");
        org.joda.time.LocalDateTime localDateTime1 = new org.joda.time.LocalDateTime(100L);
        org.joda.time.LocalDateTime.Property property2 = localDateTime1.dayOfYear();
        org.joda.time.DateTimeZone dateTimeZone3 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str5 = dateTimeZone3.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime6 = org.joda.time.LocalDateTime.now(dateTimeZone3);
        org.joda.time.LocalDateTime.Property property7 = localDateTime6.millisOfDay();
        org.joda.time.LocalDateTime localDateTime9 = localDateTime6.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime10 = localDateTime6.toDateTime();
        java.lang.String str11 = dateTime10.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType12 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int13 = dateTime10.get(dateTimeFieldType12);
        org.joda.time.Chronology chronology14 = dateTime10.getChronology();
        org.joda.time.DateTimeZone dateTimeZone15 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str17 = dateTimeZone15.getShortName((long) (short) 10);
        long long19 = dateTimeZone15.convertUTCToLocal((long) ' ');
        java.lang.String str20 = dateTimeZone15.toString();
        boolean boolean22 = dateTimeZone15.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology23 = chronology14.withZone(dateTimeZone15);
        org.joda.time.DateTimeField dateTimeField24 = chronology23.weekyear();
        org.joda.time.DurationField durationField25 = chronology23.centuries();
        org.joda.time.DateTimeField dateTimeField26 = chronology23.secondOfDay();
        boolean boolean27 = property2.equals((java.lang.Object) chronology23);
        org.joda.time.DateTimeField dateTimeField28 = chronology23.clockhourOfDay();
        org.joda.time.DurationField durationField29 = chronology23.millis();
        org.joda.time.DurationField durationField30 = chronology23.eras();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField30, durationField25, and durationField29", !(durationField30.compareTo(durationField25) == 0) || (Math.signum(durationField30.compareTo(durationField29)) == Math.signum(durationField25.compareTo(durationField29))));
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test166");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        int int5 = localDateTime3.getSecondOfMinute();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime3.minusMillis(53648013);
        org.joda.time.DateTimeZone dateTimeZone8 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str10 = dateTimeZone8.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now(dateTimeZone8);
        org.joda.time.LocalDateTime.Property property12 = localDateTime11.millisOfDay();
        long long13 = property12.remainder();
        org.joda.time.LocalDateTime localDateTime14 = property12.roundFloorCopy();
        int int15 = localDateTime14.getMinuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now(dateTimeZone16);
        org.joda.time.LocalDateTime.Property property20 = localDateTime19.millisOfDay();
        org.joda.time.LocalDateTime localDateTime22 = localDateTime19.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime23 = localDateTime19.toDateTime();
        java.lang.String str24 = dateTime23.toString();
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str27 = dateTimeZone25.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now(dateTimeZone25);
        org.joda.time.LocalDateTime.Property property29 = localDateTime28.millisOfDay();
        org.joda.time.LocalDateTime localDateTime31 = localDateTime28.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone33 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str35 = dateTimeZone33.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime36 = org.joda.time.LocalDateTime.now(dateTimeZone33);
        org.joda.time.LocalDateTime.Property property37 = localDateTime36.millisOfDay();
        org.joda.time.LocalDateTime localDateTime39 = localDateTime36.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime40 = localDateTime36.toDateTime();
        java.lang.String str41 = dateTime40.toString();
        org.joda.time.DateTime dateTime42 = localDateTime31.toDateTime((org.joda.time.ReadableInstant) dateTime40);
        boolean boolean43 = dateTime23.isBefore((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.DateTimeZone dateTimeZone44 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str46 = dateTimeZone44.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime47 = org.joda.time.LocalDateTime.now(dateTimeZone44);
        org.joda.time.LocalDateTime.Property property48 = localDateTime47.millisOfDay();
        org.joda.time.LocalDateTime localDateTime50 = localDateTime47.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime51 = localDateTime47.toDateTime();
        java.lang.String str52 = dateTime51.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int54 = dateTime51.get(dateTimeFieldType53);
        org.joda.time.DateTimeZone dateTimeZone55 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str57 = dateTimeZone55.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime58 = org.joda.time.LocalDateTime.now(dateTimeZone55);
        org.joda.time.LocalDateTime.Property property59 = localDateTime58.millisOfDay();
        org.joda.time.LocalDateTime localDateTime61 = localDateTime58.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property62 = localDateTime61.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone63 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str65 = dateTimeZone63.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime66 = org.joda.time.LocalDateTime.now(dateTimeZone63);
        org.joda.time.LocalDateTime.Property property67 = localDateTime66.millisOfDay();
        org.joda.time.LocalDateTime localDateTime69 = localDateTime66.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime70 = localDateTime66.toDateTime();
        java.lang.String str71 = dateTime70.toString();
        org.joda.time.DateTime dateTime72 = localDateTime61.toDateTime((org.joda.time.ReadableInstant) dateTime70);
        boolean boolean73 = dateTime51.isAfter((org.joda.time.ReadableInstant) dateTime70);
        boolean boolean74 = dateTime23.isBefore((org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.DateTime dateTime75 = localDateTime14.toDateTime((org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.DateTime dateTime76 = localDateTime7.toDateTime((org.joda.time.ReadableInstant) dateTime75);
        org.joda.time.Instant instant77 = dateTime75.toInstant();
        org.joda.time.Instant instant78 = dateTime75.toInstant();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime23 and instant77", (dateTime23.compareTo(instant77) == 0) == dateTime23.equals(instant77));
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test167");
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        long long5 = dateTimeZone1.convertUTCToLocal((long) ' ');
        java.lang.String str6 = dateTimeZone1.toString();
        long long9 = dateTimeZone1.adjustOffset((long) (short) 100, false);
        org.joda.time.LocalDateTime localDateTime10 = new org.joda.time.LocalDateTime((long) '4', dateTimeZone1);
        org.joda.time.DateTimeZone dateTimeZone11 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str13 = dateTimeZone11.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime14 = org.joda.time.LocalDateTime.now(dateTimeZone11);
        org.joda.time.LocalDateTime.Property property15 = localDateTime14.millisOfDay();
        org.joda.time.LocalDateTime localDateTime17 = localDateTime14.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime18 = localDateTime14.toDateTime();
        java.lang.String str19 = dateTime18.toString();
        int int20 = dateTimeZone1.getOffset((org.joda.time.ReadableInstant) dateTime18);
        org.joda.time.Chronology chronology21 = dateTime18.getChronology();
        org.joda.time.Instant instant22 = dateTime18.toInstant();
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = org.joda.time.DateTimeFieldType.weekyearOfCentury();
        int int24 = dateTime18.get(dateTimeFieldType23);
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str27 = dateTimeZone25.getShortName((long) (short) 10);
        long long29 = dateTimeZone25.convertUTCToLocal((long) ' ');
        java.lang.String str30 = dateTimeZone25.toString();
        boolean boolean32 = dateTimeZone25.equals((java.lang.Object) (short) 100);
        java.util.Locale locale34 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str35 = dateTimeZone25.getShortName((long) (-1), locale34);
        org.joda.time.LocalDateTime localDateTime36 = new org.joda.time.LocalDateTime(dateTimeZone25);
        int int37 = localDateTime36.getYearOfEra();
        org.joda.time.LocalDateTime.Property property38 = localDateTime36.era();
        org.joda.time.DateTimeZone dateTimeZone39 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str41 = dateTimeZone39.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime42 = org.joda.time.LocalDateTime.now(dateTimeZone39);
        org.joda.time.LocalDateTime localDateTime44 = localDateTime42.withYearOfEra(53630466);
        org.joda.time.LocalDateTime.Property property45 = localDateTime42.year();
        org.joda.time.LocalDateTime localDateTime47 = localDateTime42.minusWeeks(277);
        org.joda.time.DateTimeField[] dateTimeFieldArray48 = localDateTime47.getFields();
        org.joda.time.DateTimeFieldType dateTimeFieldType49 = org.joda.time.DateTimeFieldType.dayOfYear();
        org.joda.time.DateTimeFieldType dateTimeFieldType50 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone51 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str53 = dateTimeZone51.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime54 = org.joda.time.LocalDateTime.now(dateTimeZone51);
        org.joda.time.LocalDateTime.Property property55 = localDateTime54.millisOfDay();
        org.joda.time.LocalDateTime localDateTime57 = localDateTime54.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime58 = localDateTime54.toDateTime();
        java.lang.String str59 = dateTime58.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType60 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int61 = dateTime58.get(dateTimeFieldType60);
        org.joda.time.Chronology chronology62 = dateTime58.getChronology();
        org.joda.time.DateTimeZone dateTimeZone63 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str65 = dateTimeZone63.getShortName((long) (short) 10);
        long long67 = dateTimeZone63.convertUTCToLocal((long) ' ');
        java.lang.String str68 = dateTimeZone63.toString();
        boolean boolean70 = dateTimeZone63.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology71 = chronology62.withZone(dateTimeZone63);
        org.joda.time.DateTimeField dateTimeField72 = chronology71.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField73 = dateTimeFieldType50.getField(chronology71);
        org.joda.time.DurationField durationField74 = chronology71.seconds();
        org.joda.time.DateTimeField dateTimeField75 = dateTimeFieldType49.getField(chronology71);
        boolean boolean76 = localDateTime47.isSupported(dateTimeFieldType49);
        int int77 = localDateTime36.indexOf(dateTimeFieldType49);
        boolean boolean78 = dateTime18.isSupported(dateTimeFieldType49);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant22 and dateTime58", (instant22.compareTo(dateTime58) == 0) == instant22.equals(dateTime58));
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test168");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone9 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str11 = dateTimeZone9.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(dateTimeZone9);
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.millisOfDay();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime12.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now(dateTimeZone17);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime20.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime24 = localDateTime20.toDateTime();
        java.lang.String str25 = dateTime24.toString();
        org.joda.time.DateTime dateTime26 = localDateTime15.toDateTime((org.joda.time.ReadableInstant) dateTime24);
        boolean boolean27 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.Instant instant28 = dateTime7.toInstant();
        long long29 = instant28.getMillis();
        org.joda.time.DateTimeZone dateTimeZone30 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str32 = dateTimeZone30.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime33 = org.joda.time.LocalDateTime.now(dateTimeZone30);
        org.joda.time.LocalDateTime.Property property34 = localDateTime33.millisOfDay();
        org.joda.time.LocalDateTime localDateTime36 = localDateTime33.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime38 = localDateTime33.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime40 = localDateTime38.withMillisOfDay(53620101);
        org.joda.time.LocalDateTime localDateTime42 = localDateTime40.minusMonths((-1));
        org.joda.time.LocalDateTime localDateTime44 = localDateTime40.plusSeconds(0);
        org.joda.time.LocalDateTime.Property property45 = localDateTime44.centuryOfEra();
        org.joda.time.LocalDateTime localDateTime46 = property45.roundCeilingCopy();
        org.joda.time.DateTimeZone dateTimeZone47 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str49 = dateTimeZone47.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime50 = org.joda.time.LocalDateTime.now(dateTimeZone47);
        org.joda.time.LocalDateTime.Property property51 = localDateTime50.millisOfDay();
        org.joda.time.LocalDateTime localDateTime53 = localDateTime50.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime54 = localDateTime50.toDateTime();
        java.lang.String str55 = dateTime54.toString();
        long long56 = dateTime54.getMillis();
        org.joda.time.Chronology chronology57 = dateTime54.getChronology();
        int int58 = property45.getDifference((org.joda.time.ReadableInstant) dateTime54);
        int int59 = instant28.compareTo((org.joda.time.ReadableInstant) dateTime54);
        java.lang.String str60 = dateTime54.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant28", (dateTime7.compareTo(instant28) == 0) == dateTime7.equals(instant28));
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test169");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        int int5 = localDateTime3.getSecondOfMinute();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime3.minusMillis(53648013);
        org.joda.time.DateTimeZone dateTimeZone8 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str10 = dateTimeZone8.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now(dateTimeZone8);
        org.joda.time.LocalDateTime.Property property12 = localDateTime11.millisOfDay();
        long long13 = property12.remainder();
        org.joda.time.LocalDateTime localDateTime14 = property12.roundFloorCopy();
        int int15 = localDateTime14.getMinuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now(dateTimeZone16);
        org.joda.time.LocalDateTime.Property property20 = localDateTime19.millisOfDay();
        org.joda.time.LocalDateTime localDateTime22 = localDateTime19.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime23 = localDateTime19.toDateTime();
        java.lang.String str24 = dateTime23.toString();
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str27 = dateTimeZone25.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now(dateTimeZone25);
        org.joda.time.LocalDateTime.Property property29 = localDateTime28.millisOfDay();
        org.joda.time.LocalDateTime localDateTime31 = localDateTime28.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone33 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str35 = dateTimeZone33.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime36 = org.joda.time.LocalDateTime.now(dateTimeZone33);
        org.joda.time.LocalDateTime.Property property37 = localDateTime36.millisOfDay();
        org.joda.time.LocalDateTime localDateTime39 = localDateTime36.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime40 = localDateTime36.toDateTime();
        java.lang.String str41 = dateTime40.toString();
        org.joda.time.DateTime dateTime42 = localDateTime31.toDateTime((org.joda.time.ReadableInstant) dateTime40);
        boolean boolean43 = dateTime23.isBefore((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.DateTimeZone dateTimeZone44 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str46 = dateTimeZone44.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime47 = org.joda.time.LocalDateTime.now(dateTimeZone44);
        org.joda.time.LocalDateTime.Property property48 = localDateTime47.millisOfDay();
        org.joda.time.LocalDateTime localDateTime50 = localDateTime47.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime51 = localDateTime47.toDateTime();
        java.lang.String str52 = dateTime51.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int54 = dateTime51.get(dateTimeFieldType53);
        org.joda.time.DateTimeZone dateTimeZone55 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str57 = dateTimeZone55.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime58 = org.joda.time.LocalDateTime.now(dateTimeZone55);
        org.joda.time.LocalDateTime.Property property59 = localDateTime58.millisOfDay();
        org.joda.time.LocalDateTime localDateTime61 = localDateTime58.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property62 = localDateTime61.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone63 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str65 = dateTimeZone63.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime66 = org.joda.time.LocalDateTime.now(dateTimeZone63);
        org.joda.time.LocalDateTime.Property property67 = localDateTime66.millisOfDay();
        org.joda.time.LocalDateTime localDateTime69 = localDateTime66.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime70 = localDateTime66.toDateTime();
        java.lang.String str71 = dateTime70.toString();
        org.joda.time.DateTime dateTime72 = localDateTime61.toDateTime((org.joda.time.ReadableInstant) dateTime70);
        boolean boolean73 = dateTime51.isAfter((org.joda.time.ReadableInstant) dateTime70);
        boolean boolean74 = dateTime23.isBefore((org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.DateTime dateTime75 = localDateTime14.toDateTime((org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.DateTime dateTime76 = localDateTime7.toDateTime((org.joda.time.ReadableInstant) dateTime75);
        org.joda.time.Instant instant77 = dateTime75.toInstant();
        long long78 = dateTime75.getMillis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime23 and instant77", (dateTime23.compareTo(instant77) == 0) == dateTime23.equals(instant77));
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test170");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.Chronology chronology12 = chronology11.withUTC();
        org.joda.time.DateTimeField dateTimeField13 = chronology12.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField14 = chronology12.hourOfHalfday();
        org.joda.time.DurationField durationField15 = chronology12.minutes();
        org.joda.time.DurationField durationField16 = chronology12.weekyears();
        org.joda.time.DateTimeField dateTimeField17 = chronology12.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField18 = chronology12.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField19 = chronology12.hourOfDay();
        org.joda.time.DateTimeZone dateTimeZone21 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str23 = dateTimeZone21.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime24 = new org.joda.time.LocalDateTime((-1L), dateTimeZone21);
        org.joda.time.DateTimeFieldType dateTimeFieldType25 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone26 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str28 = dateTimeZone26.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime29 = org.joda.time.LocalDateTime.now(dateTimeZone26);
        org.joda.time.LocalDateTime.Property property30 = localDateTime29.millisOfDay();
        org.joda.time.LocalDateTime localDateTime32 = localDateTime29.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime33 = localDateTime29.toDateTime();
        java.lang.String str34 = dateTime33.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int36 = dateTime33.get(dateTimeFieldType35);
        org.joda.time.Chronology chronology37 = dateTime33.getChronology();
        org.joda.time.DateTimeZone dateTimeZone38 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str40 = dateTimeZone38.getShortName((long) (short) 10);
        long long42 = dateTimeZone38.convertUTCToLocal((long) ' ');
        java.lang.String str43 = dateTimeZone38.toString();
        boolean boolean45 = dateTimeZone38.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology46 = chronology37.withZone(dateTimeZone38);
        boolean boolean47 = dateTimeFieldType25.isSupported(chronology46);
        org.joda.time.DateTimeZone dateTimeZone48 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str50 = dateTimeZone48.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime51 = org.joda.time.LocalDateTime.now(dateTimeZone48);
        org.joda.time.LocalDateTime.Property property52 = localDateTime51.millisOfDay();
        org.joda.time.LocalDateTime localDateTime54 = localDateTime51.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime55 = localDateTime51.toDateTime();
        java.lang.String str56 = dateTime55.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType57 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int58 = dateTime55.get(dateTimeFieldType57);
        org.joda.time.Chronology chronology59 = dateTime55.getChronology();
        org.joda.time.DateTimeZone dateTimeZone60 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str62 = dateTimeZone60.getShortName((long) (short) 10);
        long long64 = dateTimeZone60.convertUTCToLocal((long) ' ');
        java.lang.String str65 = dateTimeZone60.toString();
        boolean boolean67 = dateTimeZone60.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology68 = chronology59.withZone(dateTimeZone60);
        org.joda.time.DurationField durationField69 = chronology59.weekyears();
        org.joda.time.DateTimeField dateTimeField70 = chronology59.dayOfYear();
        org.joda.time.DurationField durationField71 = chronology59.weeks();
        org.joda.time.DateTimeField dateTimeField72 = chronology59.yearOfEra();
        org.joda.time.DateTimeField dateTimeField73 = chronology59.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField74 = dateTimeFieldType25.getField(chronology59);
        org.joda.time.DateTimeZone dateTimeZone75 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str77 = dateTimeZone75.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime78 = org.joda.time.LocalDateTime.now(dateTimeZone75);
        org.joda.time.LocalDateTime.Property property79 = localDateTime78.millisOfDay();
        org.joda.time.LocalDateTime localDateTime81 = localDateTime78.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime82 = localDateTime78.toDateTime();
        java.lang.String str83 = dateTime82.toString();
        org.joda.time.DateTimeZone dateTimeZone84 = dateTime82.getZone();
        org.joda.time.Chronology chronology85 = dateTime82.getChronology();
        org.joda.time.DateTimeField dateTimeField86 = dateTimeFieldType25.getField(chronology85);
        org.joda.time.LocalDateTime localDateTime88 = localDateTime24.withField(dateTimeFieldType25, (int) (byte) 10);
        org.joda.time.LocalDateTime localDateTime90 = localDateTime88.plusSeconds(53691287);
        org.joda.time.ReadablePeriod readablePeriod91 = null;
        org.joda.time.LocalDateTime localDateTime93 = localDateTime88.withPeriodAdded(readablePeriod91, 675);
        org.joda.time.LocalDateTime localDateTime95 = new org.joda.time.LocalDateTime(704L);
        int int96 = localDateTime95.getMinuteOfHour();
        int[] intArray97 = localDateTime95.getValues();
        int int98 = dateTimeField19.getMinimumValue((org.joda.time.ReadablePartial) localDateTime93, intArray97);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField16 and durationField69", (durationField16.compareTo(durationField69) == 0) == durationField16.equals(durationField69));
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test171");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.ReadableInstant readableInstant5 = null;
        long long6 = property4.getDifferenceAsLong(readableInstant5);
        org.joda.time.DurationField durationField7 = property4.getRangeDurationField();
        int int9 = durationField7.getValue(0L);
        int int12 = durationField7.getValue((long) (short) 1, (long) (short) 10);
        int int15 = durationField7.getDifference((long) 53630466, 0L);
        org.joda.time.DurationFieldType durationFieldType16 = durationField7.getType();
        org.joda.time.DurationFieldType durationFieldType17 = durationField7.getType();
        org.joda.time.DateTimeFieldType dateTimeFieldType18 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone19 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str21 = dateTimeZone19.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now(dateTimeZone19);
        org.joda.time.LocalDateTime.Property property23 = localDateTime22.millisOfDay();
        org.joda.time.LocalDateTime localDateTime25 = localDateTime22.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime26 = localDateTime22.toDateTime();
        java.lang.String str27 = dateTime26.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int29 = dateTime26.get(dateTimeFieldType28);
        org.joda.time.Chronology chronology30 = dateTime26.getChronology();
        org.joda.time.DateTimeZone dateTimeZone31 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str33 = dateTimeZone31.getShortName((long) (short) 10);
        long long35 = dateTimeZone31.convertUTCToLocal((long) ' ');
        java.lang.String str36 = dateTimeZone31.toString();
        boolean boolean38 = dateTimeZone31.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology39 = chronology30.withZone(dateTimeZone31);
        org.joda.time.DateTimeField dateTimeField40 = chronology39.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField41 = dateTimeFieldType18.getField(chronology39);
        org.joda.time.DateTimeZone dateTimeZone42 = chronology39.getZone();
        org.joda.time.DateTimeZone dateTimeZone43 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str45 = dateTimeZone43.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime46 = org.joda.time.LocalDateTime.now(dateTimeZone43);
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.LocalDateTime localDateTime49 = localDateTime46.withDurationAdded(readableDuration47, 86399999);
        org.joda.time.DateTimeZone dateTimeZone50 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str52 = dateTimeZone50.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime53 = org.joda.time.LocalDateTime.now(dateTimeZone50);
        org.joda.time.LocalDateTime.Property property54 = localDateTime53.millisOfDay();
        org.joda.time.LocalDateTime localDateTime56 = localDateTime53.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime57 = localDateTime53.toDateTime();
        java.lang.String str58 = dateTime57.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType59 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int60 = dateTime57.get(dateTimeFieldType59);
        org.joda.time.Chronology chronology61 = dateTime57.getChronology();
        org.joda.time.DateTimeField dateTimeField62 = chronology61.weekyearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone63 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str65 = dateTimeZone63.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime66 = org.joda.time.LocalDateTime.now(dateTimeZone63);
        org.joda.time.LocalDateTime.Property property67 = localDateTime66.millisOfDay();
        long long68 = property67.remainder();
        org.joda.time.LocalDateTime localDateTime69 = property67.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime70 = property67.roundFloorCopy();
        java.lang.String str71 = property67.getAsShortText();
        int int72 = property67.getMinimumValue();
        org.joda.time.LocalDateTime localDateTime74 = property67.addToCopy((long) 53623874);
        int[] intArray76 = chronology61.get((org.joda.time.ReadablePartial) localDateTime74, (long) 53630466);
        org.joda.time.DateTimeZone dateTimeZone78 = org.joda.time.DateTimeZone.forOffsetMillis((int) 'a');
        org.joda.time.LocalDateTime localDateTime79 = org.joda.time.LocalDateTime.now(dateTimeZone78);
        java.util.Date date80 = localDateTime79.toDate();
        int[] intArray82 = chronology61.get((org.joda.time.ReadablePartial) localDateTime79, (long) 99);
        chronology39.validate((org.joda.time.ReadablePartial) localDateTime49, intArray82);
        org.joda.time.Chronology chronology84 = chronology39.withUTC();
        org.joda.time.DateTimeField dateTimeField85 = chronology39.weekyearOfCentury();
        org.joda.time.DurationField durationField86 = chronology39.weekyears();
        org.joda.time.DateTimeField dateTimeField87 = chronology39.dayOfMonth();
        org.joda.time.DurationField durationField88 = durationFieldType17.getField(chronology39);
        org.joda.time.DurationField durationField89 = chronology39.eras();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField7 and durationField88", (durationField7.compareTo(durationField88) == 0) == durationField7.equals(durationField88));
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test172");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime8 = localDateTime3.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime10 = localDateTime8.minusHours((int) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = localDateTime10.withEra((int) (byte) 0);
        org.joda.time.LocalDateTime.Property property13 = localDateTime10.monthOfYear();
        org.joda.time.LocalDateTime localDateTime15 = property13.addWrapFieldToCopy(57);
        org.joda.time.DurationField durationField16 = property13.getRangeDurationField();
        int int17 = property13.getMaximumValue();
        java.util.Locale.Builder builder18 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder20 = builder18.addUnicodeLocaleAttribute("fra");
        java.util.Locale locale21 = builder18.build();
        java.util.Locale locale22 = java.util.Locale.PRC;
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.util.Set<java.lang.String> strSet24 = locale23.getUnicodeLocaleAttributes();
        java.lang.String str25 = locale22.getDisplayVariant(locale23);
        java.util.Locale.Builder builder26 = builder18.setLocale(locale23);
        java.lang.String str27 = property13.getAsShortText(locale23);
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = property13.getFieldType();
        org.joda.time.DateTimeZone dateTimeZone29 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str31 = dateTimeZone29.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime32 = org.joda.time.LocalDateTime.now(dateTimeZone29);
        org.joda.time.LocalDateTime.Property property33 = localDateTime32.millisOfDay();
        org.joda.time.LocalDateTime localDateTime35 = localDateTime32.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime36 = localDateTime32.toDateTime();
        java.lang.String str37 = dateTime36.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType38 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int39 = dateTime36.get(dateTimeFieldType38);
        org.joda.time.Chronology chronology40 = dateTime36.getChronology();
        org.joda.time.DateTimeField dateTimeField41 = chronology40.weekyearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone42 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str44 = dateTimeZone42.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime45 = org.joda.time.LocalDateTime.now(dateTimeZone42);
        org.joda.time.LocalDateTime.Property property46 = localDateTime45.millisOfDay();
        long long47 = property46.remainder();
        org.joda.time.LocalDateTime localDateTime48 = property46.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime49 = property46.roundFloorCopy();
        java.lang.String str50 = property46.getAsShortText();
        int int51 = property46.getMinimumValue();
        org.joda.time.LocalDateTime localDateTime53 = property46.addToCopy((long) 53623874);
        int[] intArray55 = chronology40.get((org.joda.time.ReadablePartial) localDateTime53, (long) 53630466);
        org.joda.time.DateTimeField dateTimeField56 = chronology40.secondOfDay();
        org.joda.time.DurationField durationField57 = chronology40.years();
        org.joda.time.DateTimeField dateTimeField58 = chronology40.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField59 = dateTimeFieldType28.getField(chronology40);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField16 and durationField57", (durationField16.compareTo(durationField57) == 0) == durationField16.equals(durationField57));
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test173");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DurationField durationField21 = chronology11.weekyears();
        org.joda.time.DateTimeField dateTimeField22 = chronology11.dayOfYear();
        org.joda.time.DurationField durationField23 = chronology11.weeks();
        org.joda.time.DateTimeField dateTimeField24 = chronology11.yearOfEra();
        org.joda.time.DurationField durationField25 = chronology11.minutes();
        org.joda.time.DateTimeField dateTimeField26 = chronology11.weekOfWeekyear();
        org.joda.time.DurationField durationField27 = chronology11.millis();
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.DurationFieldType durationFieldType33 = org.joda.time.DurationFieldType.centuries();
        boolean boolean34 = localDateTime31.equals((java.lang.Object) durationFieldType33);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray35 = localDateTime31.getFieldTypes();
        org.joda.time.LocalDateTime localDateTime37 = localDateTime31.plusMonths((int) (short) -1);
        int int38 = localDateTime31.getYearOfCentury();
        org.joda.time.LocalDateTime localDateTime40 = localDateTime31.minusMinutes(0);
        org.joda.time.LocalDateTime.Property property41 = localDateTime40.weekyear();
        org.joda.time.LocalDateTime localDateTime43 = localDateTime40.withWeekyear((-10800000));
        int int44 = localDateTime40.getWeekOfWeekyear();
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now(dateTimeZone45);
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.millisOfDay();
        org.joda.time.DateTimeZone dateTimeZone50 = null;
        org.joda.time.DateTime dateTime51 = localDateTime48.toDateTime(dateTimeZone50);
        org.joda.time.DateTimeZone dateTimeZone52 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str54 = dateTimeZone52.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime55 = org.joda.time.LocalDateTime.now(dateTimeZone52);
        org.joda.time.LocalDateTime.Property property56 = localDateTime55.millisOfDay();
        org.joda.time.LocalDateTime localDateTime58 = localDateTime55.plusMonths((int) (byte) 100);
        int int59 = localDateTime55.getYear();
        boolean boolean60 = localDateTime48.isAfter((org.joda.time.ReadablePartial) localDateTime55);
        int[] intArray61 = localDateTime55.getValues();
        chronology11.validate((org.joda.time.ReadablePartial) localDateTime40, intArray61);
        org.joda.time.DurationField durationField63 = chronology11.years();
        org.joda.time.DateTimeField dateTimeField64 = chronology11.weekyear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField21 and durationField63", (durationField21.compareTo(durationField63) == 0) == durationField21.equals(durationField63));
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test174");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        boolean boolean22 = dateTimeFieldType0.isSupported(chronology21);
        org.joda.time.DateTimeZone dateTimeZone23 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str25 = dateTimeZone23.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime26 = org.joda.time.LocalDateTime.now(dateTimeZone23);
        org.joda.time.LocalDateTime.Property property27 = localDateTime26.millisOfDay();
        org.joda.time.LocalDateTime localDateTime29 = localDateTime26.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime30 = localDateTime26.toDateTime();
        java.lang.String str31 = dateTime30.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType32 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int33 = dateTime30.get(dateTimeFieldType32);
        org.joda.time.Chronology chronology34 = dateTime30.getChronology();
        org.joda.time.DateTimeZone dateTimeZone35 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str37 = dateTimeZone35.getShortName((long) (short) 10);
        long long39 = dateTimeZone35.convertUTCToLocal((long) ' ');
        java.lang.String str40 = dateTimeZone35.toString();
        boolean boolean42 = dateTimeZone35.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology43 = chronology34.withZone(dateTimeZone35);
        org.joda.time.DurationField durationField44 = chronology34.weekyears();
        org.joda.time.DateTimeField dateTimeField45 = chronology34.dayOfYear();
        org.joda.time.DurationField durationField46 = chronology34.weeks();
        org.joda.time.DateTimeField dateTimeField47 = chronology34.yearOfEra();
        org.joda.time.DateTimeField dateTimeField48 = chronology34.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField49 = dateTimeFieldType0.getField(chronology34);
        org.joda.time.LocalDateTime localDateTime50 = new org.joda.time.LocalDateTime(chronology34);
        org.joda.time.Chronology chronology51 = chronology34.withUTC();
        org.joda.time.DurationField durationField52 = chronology34.years();
        org.joda.time.DurationField durationField53 = chronology34.weeks();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField44 and durationField52", (durationField44.compareTo(durationField52) == 0) == durationField44.equals(durationField52));
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test175");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone9 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str11 = dateTimeZone9.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(dateTimeZone9);
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.millisOfDay();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime12.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now(dateTimeZone17);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime20.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime24 = localDateTime20.toDateTime();
        java.lang.String str25 = dateTime24.toString();
        org.joda.time.DateTime dateTime26 = localDateTime15.toDateTime((org.joda.time.ReadableInstant) dateTime24);
        boolean boolean27 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.LocalDateTime localDateTime34 = localDateTime31.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime35 = localDateTime31.toDateTime();
        java.lang.String str36 = dateTime35.toString();
        org.joda.time.DateTimeZone dateTimeZone37 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str39 = dateTimeZone37.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime40 = org.joda.time.LocalDateTime.now(dateTimeZone37);
        org.joda.time.LocalDateTime.Property property41 = localDateTime40.millisOfDay();
        org.joda.time.LocalDateTime localDateTime43 = localDateTime40.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property44 = localDateTime43.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now(dateTimeZone45);
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.millisOfDay();
        org.joda.time.LocalDateTime localDateTime51 = localDateTime48.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime52 = localDateTime48.toDateTime();
        java.lang.String str53 = dateTime52.toString();
        org.joda.time.DateTime dateTime54 = localDateTime43.toDateTime((org.joda.time.ReadableInstant) dateTime52);
        boolean boolean55 = dateTime35.isBefore((org.joda.time.ReadableInstant) dateTime52);
        org.joda.time.DateTimeZone dateTimeZone56 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str58 = dateTimeZone56.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime59 = org.joda.time.LocalDateTime.now(dateTimeZone56);
        org.joda.time.LocalDateTime.Property property60 = localDateTime59.millisOfDay();
        org.joda.time.DurationFieldType durationFieldType61 = org.joda.time.DurationFieldType.centuries();
        boolean boolean62 = localDateTime59.equals((java.lang.Object) durationFieldType61);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray63 = localDateTime59.getFieldTypes();
        boolean boolean64 = dateTime35.equals((java.lang.Object) dateTimeFieldTypeArray63);
        int int65 = dateTime24.compareTo((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Instant instant66 = dateTime24.toInstant();
        org.joda.time.Instant instant67 = instant66.toInstant();
        org.joda.time.DateTimeFieldType dateTimeFieldType68 = null;
        boolean boolean69 = instant67.isSupported(dateTimeFieldType68);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant67", (dateTime7.compareTo(instant67) == 0) == dateTime7.equals(instant67));
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test176");
        org.joda.time.LocalDateTime localDateTime0 = new org.joda.time.LocalDateTime();
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.LocalDateTime localDateTime3 = localDateTime0.withDurationAdded(readableDuration1, (int) '#');
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.weekyear();
        java.lang.String str5 = property4.getAsString();
        java.lang.String str6 = property4.getName();
        org.joda.time.DateTimeZone dateTimeZone8 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str10 = dateTimeZone8.getShortName((long) (short) 10);
        long long12 = dateTimeZone8.convertUTCToLocal((long) ' ');
        java.lang.String str13 = dateTimeZone8.toString();
        long long16 = dateTimeZone8.adjustOffset((long) (short) 100, false);
        org.joda.time.LocalDateTime localDateTime17 = new org.joda.time.LocalDateTime((long) '4', dateTimeZone8);
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime25 = localDateTime21.toDateTime();
        java.lang.String str26 = dateTime25.toString();
        int int27 = dateTimeZone8.getOffset((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.Chronology chronology28 = dateTime25.getChronology();
        long long29 = property4.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.DateTimeZone dateTimeZone30 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str32 = dateTimeZone30.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime33 = org.joda.time.LocalDateTime.now(dateTimeZone30);
        org.joda.time.LocalDateTime.Property property34 = localDateTime33.millisOfDay();
        long long35 = property34.remainder();
        org.joda.time.LocalDateTime localDateTime36 = property34.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime37 = property34.roundFloorCopy();
        java.lang.String str38 = property34.getAsShortText();
        int int39 = property34.getMinimumValue();
        org.joda.time.Interval interval40 = property34.toInterval();
        java.lang.String str41 = property34.getName();
        long long42 = property34.remainder();
        org.joda.time.DateTimeZone dateTimeZone43 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str45 = dateTimeZone43.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime46 = org.joda.time.LocalDateTime.now(dateTimeZone43);
        org.joda.time.LocalDateTime.Property property47 = localDateTime46.millisOfDay();
        org.joda.time.LocalDateTime localDateTime49 = localDateTime46.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime50 = localDateTime46.toDateTime();
        java.lang.String str51 = dateTime50.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType52 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int53 = dateTime50.get(dateTimeFieldType52);
        org.joda.time.Chronology chronology54 = dateTime50.getChronology();
        java.lang.Object obj55 = null;
        boolean boolean56 = dateTime50.equals(obj55);
        long long57 = dateTime50.getMillis();
        org.joda.time.Instant instant58 = dateTime50.toInstant();
        org.joda.time.DateTimeZone dateTimeZone59 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str61 = dateTimeZone59.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime62 = org.joda.time.LocalDateTime.now(dateTimeZone59);
        org.joda.time.LocalDateTime.Property property63 = localDateTime62.millisOfDay();
        java.lang.String str64 = property63.getName();
        int int65 = property63.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType66 = property63.getFieldType();
        org.joda.time.LocalDateTime localDateTime67 = property63.withMinimumValue();
        org.joda.time.LocalDateTime.Property property68 = localDateTime67.weekOfWeekyear();
        boolean boolean69 = dateTime50.equals((java.lang.Object) property68);
        org.joda.time.DateTimeZone dateTimeZone70 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str72 = dateTimeZone70.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime73 = org.joda.time.LocalDateTime.now(dateTimeZone70);
        org.joda.time.LocalDateTime.Property property74 = localDateTime73.millisOfDay();
        org.joda.time.LocalDateTime localDateTime76 = localDateTime73.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime77 = localDateTime73.toDateTime();
        java.lang.String str78 = dateTime77.toString();
        org.joda.time.DateTimeZone dateTimeZone79 = dateTime77.getZone();
        long long80 = dateTime77.getMillis();
        int int81 = dateTime50.compareTo((org.joda.time.ReadableInstant) dateTime77);
        org.joda.time.DateTimeFieldType dateTimeFieldType82 = org.joda.time.DateTimeFieldType.yearOfEra();
        boolean boolean83 = dateTime50.isSupported(dateTimeFieldType82);
        int int84 = property34.getDifference((org.joda.time.ReadableInstant) dateTime50);
        boolean boolean85 = dateTime25.isAfter((org.joda.time.ReadableInstant) dateTime50);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant58 and dateTime77", (instant58.compareTo(dateTime77) == 0) == instant58.equals(dateTime77));
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test177");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime8 = localDateTime3.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime10 = localDateTime8.withMillisOfDay(53620101);
        org.joda.time.LocalDateTime localDateTime12 = localDateTime10.minusMonths((-1));
        org.joda.time.LocalDateTime localDateTime14 = localDateTime10.plusSeconds(0);
        org.joda.time.LocalDateTime.Property property15 = localDateTime14.centuryOfEra();
        org.joda.time.LocalDateTime localDateTime16 = property15.roundCeilingCopy();
        org.joda.time.LocalDateTime.Property property17 = localDateTime16.hourOfDay();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime25 = localDateTime21.toDateTime();
        long long26 = property17.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.DateTimeZone dateTimeZone27 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str29 = dateTimeZone27.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime30 = org.joda.time.LocalDateTime.now(dateTimeZone27);
        org.joda.time.LocalDateTime.Property property31 = localDateTime30.millisOfDay();
        org.joda.time.ReadableInstant readableInstant32 = null;
        long long33 = property31.getDifferenceAsLong(readableInstant32);
        java.util.Locale locale34 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str35 = locale34.getISO3Language();
        java.lang.String str36 = property31.getAsShortText(locale34);
        org.joda.time.LocalDateTime localDateTime38 = property31.addToCopy((int) '4');
        org.joda.time.LocalDateTime localDateTime39 = property31.roundHalfEvenCopy();
        org.joda.time.DateTime dateTime40 = localDateTime39.toDateTime();
        boolean boolean41 = dateTime25.isAfter((org.joda.time.ReadableInstant) dateTime40);
        java.lang.String str42 = dateTime25.toString();
        org.joda.time.Instant instant43 = dateTime25.toInstant();
        java.lang.String str44 = instant43.toString();
        org.joda.time.Chronology chronology45 = instant43.getChronology();
        org.joda.time.DateTimeZone dateTimeZone47 = org.joda.time.DateTimeZone.forOffsetHours(444);
        java.util.TimeZone timeZone48 = dateTimeZone47.toTimeZone();
        org.joda.time.Chronology chronology49 = chronology45.withZone(dateTimeZone47);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime25 and instant43", (dateTime25.compareTo(instant43) == 0) == dateTime25.equals(instant43));
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test178");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        org.joda.time.DateTimeField dateTimeField22 = chronology21.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField23 = dateTimeFieldType0.getField(chronology21);
        org.joda.time.DateTimeZone dateTimeZone24 = chronology21.getZone();
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str27 = dateTimeZone25.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now(dateTimeZone25);
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.LocalDateTime localDateTime31 = localDateTime28.withDurationAdded(readableDuration29, 86399999);
        org.joda.time.DateTimeZone dateTimeZone32 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str34 = dateTimeZone32.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime35 = org.joda.time.LocalDateTime.now(dateTimeZone32);
        org.joda.time.LocalDateTime.Property property36 = localDateTime35.millisOfDay();
        org.joda.time.LocalDateTime localDateTime38 = localDateTime35.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime39 = localDateTime35.toDateTime();
        java.lang.String str40 = dateTime39.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int42 = dateTime39.get(dateTimeFieldType41);
        org.joda.time.Chronology chronology43 = dateTime39.getChronology();
        org.joda.time.DateTimeField dateTimeField44 = chronology43.weekyearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now(dateTimeZone45);
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.millisOfDay();
        long long50 = property49.remainder();
        org.joda.time.LocalDateTime localDateTime51 = property49.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime52 = property49.roundFloorCopy();
        java.lang.String str53 = property49.getAsShortText();
        int int54 = property49.getMinimumValue();
        org.joda.time.LocalDateTime localDateTime56 = property49.addToCopy((long) 53623874);
        int[] intArray58 = chronology43.get((org.joda.time.ReadablePartial) localDateTime56, (long) 53630466);
        org.joda.time.DateTimeZone dateTimeZone60 = org.joda.time.DateTimeZone.forOffsetMillis((int) 'a');
        org.joda.time.LocalDateTime localDateTime61 = org.joda.time.LocalDateTime.now(dateTimeZone60);
        java.util.Date date62 = localDateTime61.toDate();
        int[] intArray64 = chronology43.get((org.joda.time.ReadablePartial) localDateTime61, (long) 99);
        chronology21.validate((org.joda.time.ReadablePartial) localDateTime31, intArray64);
        org.joda.time.DurationField durationField66 = chronology21.eras();
        org.joda.time.DateTimeField dateTimeField67 = chronology21.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField68 = chronology21.hourOfDay();
        org.joda.time.DurationField durationField69 = chronology21.days();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField66, durationField69, and durationField66", !(durationField66.compareTo(durationField69) == 0) || (Math.signum(durationField66.compareTo(durationField66)) == Math.signum(durationField69.compareTo(durationField66))));
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test179");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        boolean boolean22 = dateTimeFieldType0.isSupported(chronology21);
        org.joda.time.DateTimeZone dateTimeZone23 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str25 = dateTimeZone23.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime26 = org.joda.time.LocalDateTime.now(dateTimeZone23);
        org.joda.time.LocalDateTime.Property property27 = localDateTime26.millisOfDay();
        org.joda.time.LocalDateTime localDateTime29 = localDateTime26.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime30 = localDateTime26.toDateTime();
        java.lang.String str31 = dateTime30.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType32 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int33 = dateTime30.get(dateTimeFieldType32);
        org.joda.time.Chronology chronology34 = dateTime30.getChronology();
        org.joda.time.DateTimeZone dateTimeZone35 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str37 = dateTimeZone35.getShortName((long) (short) 10);
        long long39 = dateTimeZone35.convertUTCToLocal((long) ' ');
        java.lang.String str40 = dateTimeZone35.toString();
        boolean boolean42 = dateTimeZone35.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology43 = chronology34.withZone(dateTimeZone35);
        org.joda.time.DurationField durationField44 = chronology34.weekyears();
        org.joda.time.DateTimeField dateTimeField45 = chronology34.dayOfYear();
        org.joda.time.DurationField durationField46 = chronology34.weeks();
        org.joda.time.DateTimeField dateTimeField47 = chronology34.yearOfEra();
        org.joda.time.DateTimeField dateTimeField48 = chronology34.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField49 = dateTimeFieldType0.getField(chronology34);
        org.joda.time.DateTimeField dateTimeField50 = chronology34.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField51 = chronology34.yearOfEra();
        org.joda.time.DateTimeFieldType dateTimeFieldType52 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone53 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str55 = dateTimeZone53.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime56 = org.joda.time.LocalDateTime.now(dateTimeZone53);
        org.joda.time.LocalDateTime.Property property57 = localDateTime56.millisOfDay();
        org.joda.time.LocalDateTime localDateTime59 = localDateTime56.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime60 = localDateTime56.toDateTime();
        java.lang.String str61 = dateTime60.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType62 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int63 = dateTime60.get(dateTimeFieldType62);
        org.joda.time.Chronology chronology64 = dateTime60.getChronology();
        org.joda.time.DateTimeZone dateTimeZone65 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str67 = dateTimeZone65.getShortName((long) (short) 10);
        long long69 = dateTimeZone65.convertUTCToLocal((long) ' ');
        java.lang.String str70 = dateTimeZone65.toString();
        boolean boolean72 = dateTimeZone65.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology73 = chronology64.withZone(dateTimeZone65);
        boolean boolean74 = dateTimeFieldType52.isSupported(chronology73);
        org.joda.time.DurationField durationField75 = chronology73.years();
        org.joda.time.DateTimeField dateTimeField76 = chronology73.hourOfDay();
        org.joda.time.DurationField durationField77 = chronology73.months();
        org.joda.time.LocalDateTime localDateTime78 = new org.joda.time.LocalDateTime(chronology73);
        org.joda.time.ReadablePeriod readablePeriod79 = null;
        org.joda.time.LocalDateTime localDateTime80 = localDateTime78.minus(readablePeriod79);
        org.joda.time.LocalDateTime localDateTime82 = localDateTime80.plusMinutes(0);
        org.joda.time.LocalDateTime localDateTime84 = localDateTime82.minusDays(53688836);
        int[] intArray86 = chronology34.get((org.joda.time.ReadablePartial) localDateTime84, 7464949286400097L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField44 and durationField75", (durationField44.compareTo(durationField75) == 0) == durationField44.equals(durationField75));
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test180");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone9 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str11 = dateTimeZone9.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(dateTimeZone9);
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.millisOfDay();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime12.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now(dateTimeZone17);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime20.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime24 = localDateTime20.toDateTime();
        java.lang.String str25 = dateTime24.toString();
        org.joda.time.DateTime dateTime26 = localDateTime15.toDateTime((org.joda.time.ReadableInstant) dateTime24);
        boolean boolean27 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.Instant instant28 = dateTime7.toInstant();
        org.joda.time.DateTimeZone dateTimeZone29 = instant28.getZone();
        java.lang.String str30 = dateTimeZone29.getID();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant28", (dateTime7.compareTo(instant28) == 0) == dateTime7.equals(instant28));
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test181");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        long long4 = dateTimeZone0.convertUTCToLocal((long) ' ');
        int int6 = dateTimeZone0.getStandardOffset(1645455238702L);
        boolean boolean7 = dateTimeZone0.isFixed();
        boolean boolean9 = dateTimeZone0.isStandardOffset(1645455380547L);
        org.joda.time.DateTimeZone dateTimeZone10 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str12 = dateTimeZone10.getShortName((long) (short) 10);
        long long14 = dateTimeZone10.convertUTCToLocal((long) ' ');
        java.lang.String str15 = dateTimeZone10.toString();
        boolean boolean17 = dateTimeZone10.equals((java.lang.Object) (short) 100);
        java.util.Locale locale19 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str20 = dateTimeZone10.getShortName((long) (-1), locale19);
        org.joda.time.LocalDateTime localDateTime21 = new org.joda.time.LocalDateTime(dateTimeZone10);
        long long23 = dateTimeZone10.nextTransition((long) 8);
        long long26 = dateTimeZone10.adjustOffset((long) 1, false);
        long long29 = dateTimeZone10.adjustOffset(8L, true);
        java.lang.String str30 = dateTimeZone10.getID();
        java.lang.String str31 = dateTimeZone10.getID();
        long long33 = dateTimeZone0.getMillisKeepLocal(dateTimeZone10, 11L);
        long long35 = dateTimeZone0.nextTransition(1645455689902L);
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str38 = dateTimeZone36.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime39 = org.joda.time.LocalDateTime.now(dateTimeZone36);
        org.joda.time.LocalDateTime.Property property40 = localDateTime39.millisOfDay();
        org.joda.time.LocalDateTime localDateTime42 = localDateTime39.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime43 = localDateTime39.toDateTime();
        java.lang.String str44 = dateTime43.toString();
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now(dateTimeZone45);
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.millisOfDay();
        org.joda.time.LocalDateTime localDateTime51 = localDateTime48.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property52 = localDateTime51.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone53 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str55 = dateTimeZone53.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime56 = org.joda.time.LocalDateTime.now(dateTimeZone53);
        org.joda.time.LocalDateTime.Property property57 = localDateTime56.millisOfDay();
        org.joda.time.LocalDateTime localDateTime59 = localDateTime56.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime60 = localDateTime56.toDateTime();
        java.lang.String str61 = dateTime60.toString();
        org.joda.time.DateTime dateTime62 = localDateTime51.toDateTime((org.joda.time.ReadableInstant) dateTime60);
        boolean boolean63 = dateTime43.isBefore((org.joda.time.ReadableInstant) dateTime60);
        org.joda.time.Instant instant64 = dateTime43.toInstant();
        long long65 = instant64.getMillis();
        org.joda.time.DateTimeZone dateTimeZone66 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str68 = dateTimeZone66.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime69 = org.joda.time.LocalDateTime.now(dateTimeZone66);
        org.joda.time.LocalDateTime.Property property70 = localDateTime69.millisOfDay();
        org.joda.time.LocalDateTime localDateTime72 = localDateTime69.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime74 = localDateTime69.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime76 = localDateTime74.withMillisOfDay(53620101);
        org.joda.time.LocalDateTime localDateTime78 = localDateTime76.minusMonths((-1));
        org.joda.time.LocalDateTime localDateTime80 = localDateTime76.plusSeconds(0);
        org.joda.time.LocalDateTime.Property property81 = localDateTime80.centuryOfEra();
        org.joda.time.LocalDateTime localDateTime82 = property81.roundCeilingCopy();
        org.joda.time.DateTimeZone dateTimeZone83 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str85 = dateTimeZone83.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime86 = org.joda.time.LocalDateTime.now(dateTimeZone83);
        org.joda.time.LocalDateTime.Property property87 = localDateTime86.millisOfDay();
        org.joda.time.LocalDateTime localDateTime89 = localDateTime86.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime90 = localDateTime86.toDateTime();
        java.lang.String str91 = dateTime90.toString();
        long long92 = dateTime90.getMillis();
        org.joda.time.Chronology chronology93 = dateTime90.getChronology();
        int int94 = property81.getDifference((org.joda.time.ReadableInstant) dateTime90);
        int int95 = instant64.compareTo((org.joda.time.ReadableInstant) dateTime90);
        int int96 = dateTimeZone0.getOffset((org.joda.time.ReadableInstant) dateTime90);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime43 and instant64", (dateTime43.compareTo(instant64) == 0) == dateTime43.equals(instant64));
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test182");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        java.lang.Object obj12 = null;
        boolean boolean13 = dateTime7.equals(obj12);
        long long14 = dateTime7.getMillis();
        org.joda.time.Instant instant15 = dateTime7.toInstant();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        long long21 = dateTimeZone17.convertUTCToLocal((long) ' ');
        java.lang.String str22 = dateTimeZone17.toString();
        long long25 = dateTimeZone17.adjustOffset((long) (short) 100, false);
        org.joda.time.LocalDateTime localDateTime26 = new org.joda.time.LocalDateTime((long) '4', dateTimeZone17);
        org.joda.time.DateTimeZone dateTimeZone27 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str29 = dateTimeZone27.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime30 = org.joda.time.LocalDateTime.now(dateTimeZone27);
        org.joda.time.LocalDateTime.Property property31 = localDateTime30.millisOfDay();
        org.joda.time.LocalDateTime localDateTime33 = localDateTime30.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime34 = localDateTime30.toDateTime();
        java.lang.String str35 = dateTime34.toString();
        int int36 = dateTimeZone17.getOffset((org.joda.time.ReadableInstant) dateTime34);
        boolean boolean37 = instant15.isAfter((org.joda.time.ReadableInstant) dateTime34);
        long long38 = dateTime34.getMillis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant15", (dateTime7.compareTo(instant15) == 0) == dateTime7.equals(instant15));
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test183");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property7 = localDateTime6.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone8 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str10 = dateTimeZone8.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now(dateTimeZone8);
        org.joda.time.LocalDateTime.Property property12 = localDateTime11.millisOfDay();
        org.joda.time.LocalDateTime localDateTime14 = localDateTime11.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime15 = localDateTime11.toDateTime();
        java.lang.String str16 = dateTime15.toString();
        org.joda.time.DateTime dateTime17 = localDateTime6.toDateTime((org.joda.time.ReadableInstant) dateTime15);
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime25 = localDateTime21.toDateTime();
        java.lang.String str26 = dateTime25.toString();
        int int27 = dateTime15.compareTo((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        boolean boolean29 = dateTime15.isEqual(readableInstant28);
        org.joda.time.Instant instant30 = dateTime15.toInstant();
        org.joda.time.Chronology chronology31 = dateTime15.getChronology();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime25 and instant30", (dateTime25.compareTo(instant30) == 0) == dateTime25.equals(instant30));
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test184");
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.forOffsetMillis((int) 'a');
        org.joda.time.LocalDateTime localDateTime2 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property3 = localDateTime2.weekOfWeekyear();
        org.joda.time.ReadablePeriod readablePeriod4 = null;
        org.joda.time.LocalDateTime localDateTime5 = localDateTime2.plus(readablePeriod4);
        org.joda.time.LocalDateTime.Property property6 = localDateTime5.millisOfSecond();
        org.joda.time.DateTimeZone dateTimeZone7 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str9 = dateTimeZone7.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime10 = org.joda.time.LocalDateTime.now(dateTimeZone7);
        org.joda.time.LocalDateTime.Property property11 = localDateTime10.millisOfDay();
        org.joda.time.ReadableInstant readableInstant12 = null;
        long long13 = property11.getDifferenceAsLong(readableInstant12);
        int int14 = property11.getMaximumValue();
        org.joda.time.LocalDateTime localDateTime15 = property11.roundHalfEvenCopy();
        int int16 = localDateTime15.size();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.DateTimeZone dateTimeZone20 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str22 = dateTimeZone20.getShortName((long) (short) 10);
        long long24 = dateTimeZone20.convertUTCToLocal((long) ' ');
        java.lang.String str25 = dateTimeZone20.toString();
        java.lang.Object obj26 = null;
        boolean boolean27 = dateTimeZone20.equals(obj26);
        long long29 = dateTimeZone17.getMillisKeepLocal(dateTimeZone20, (long) 53);
        org.joda.time.DateTime dateTime30 = localDateTime15.toDateTime(dateTimeZone20);
        org.joda.time.Instant instant31 = dateTime30.toInstant();
        org.joda.time.Instant instant32 = instant31.toInstant();
        long long33 = property6.getDifferenceAsLong((org.joda.time.ReadableInstant) instant31);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime30 and instant31", (dateTime30.compareTo(instant31) == 0) == dateTime30.equals(instant31));
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test185");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        java.lang.String str5 = property4.getName();
        java.lang.String str6 = property4.getAsShortText();
        org.joda.time.DateTimeZone dateTimeZone7 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str9 = dateTimeZone7.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime10 = org.joda.time.LocalDateTime.now(dateTimeZone7);
        org.joda.time.LocalDateTime.Property property11 = localDateTime10.millisOfDay();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime10.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property14 = localDateTime13.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone15 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str17 = dateTimeZone15.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now(dateTimeZone15);
        org.joda.time.LocalDateTime.Property property19 = localDateTime18.millisOfDay();
        org.joda.time.LocalDateTime localDateTime21 = localDateTime18.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime22 = localDateTime18.toDateTime();
        java.lang.String str23 = dateTime22.toString();
        org.joda.time.DateTime dateTime24 = localDateTime13.toDateTime((org.joda.time.ReadableInstant) dateTime22);
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str27 = dateTimeZone25.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now(dateTimeZone25);
        org.joda.time.LocalDateTime.Property property29 = localDateTime28.millisOfDay();
        org.joda.time.LocalDateTime localDateTime31 = localDateTime28.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime32 = localDateTime28.toDateTime();
        java.lang.String str33 = dateTime32.toString();
        int int34 = dateTime22.compareTo((org.joda.time.ReadableInstant) dateTime32);
        java.lang.String str35 = dateTime32.toString();
        int int36 = property4.getDifference((org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.DateTimeZone dateTimeZone37 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str39 = dateTimeZone37.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime40 = org.joda.time.LocalDateTime.now(dateTimeZone37);
        org.joda.time.LocalDateTime.Property property41 = localDateTime40.millisOfDay();
        org.joda.time.LocalDateTime localDateTime43 = localDateTime40.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime44 = localDateTime40.toDateTime();
        long long45 = dateTime44.getMillis();
        org.joda.time.LocalDateTime localDateTime46 = new org.joda.time.LocalDateTime();
        java.lang.String str47 = localDateTime46.toString();
        int int48 = localDateTime46.getHourOfDay();
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.LocalDateTime localDateTime50 = localDateTime46.plus(readablePeriod49);
        org.joda.time.LocalDateTime.Property property51 = localDateTime46.yearOfCentury();
        org.joda.time.LocalDateTime localDateTime52 = property51.roundHalfFloorCopy();
        org.joda.time.DateTimeZone dateTimeZone53 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str55 = dateTimeZone53.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime56 = org.joda.time.LocalDateTime.now(dateTimeZone53);
        org.joda.time.LocalDateTime.Property property57 = localDateTime56.millisOfDay();
        org.joda.time.LocalDateTime localDateTime59 = localDateTime56.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime60 = localDateTime56.toDateTime();
        java.lang.String str61 = dateTime60.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType62 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int63 = dateTime60.get(dateTimeFieldType62);
        org.joda.time.Chronology chronology64 = dateTime60.getChronology();
        java.lang.Object obj65 = null;
        boolean boolean66 = dateTime60.equals(obj65);
        long long67 = dateTime60.getMillis();
        org.joda.time.Instant instant68 = dateTime60.toInstant();
        org.joda.time.DateTimeZone dateTimeZone69 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str71 = dateTimeZone69.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime72 = org.joda.time.LocalDateTime.now(dateTimeZone69);
        org.joda.time.LocalDateTime.Property property73 = localDateTime72.millisOfDay();
        java.lang.String str74 = property73.getName();
        int int75 = property73.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType76 = property73.getFieldType();
        org.joda.time.LocalDateTime localDateTime77 = property73.withMinimumValue();
        org.joda.time.LocalDateTime.Property property78 = localDateTime77.weekOfWeekyear();
        boolean boolean79 = dateTime60.equals((java.lang.Object) property78);
        long long80 = property51.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime60);
        boolean boolean81 = dateTime44.isAfter((org.joda.time.ReadableInstant) dateTime60);
        boolean boolean82 = dateTime32.isBefore((org.joda.time.ReadableInstant) dateTime44);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime22 and instant68", (dateTime22.compareTo(instant68) == 0) == dateTime22.equals(instant68));
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test186");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DateTimeField dateTimeField21 = chronology20.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField22 = chronology20.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField23 = chronology20.weekOfWeekyear();
        org.joda.time.DurationField durationField24 = chronology20.eras();
        org.joda.time.DateTimeField dateTimeField25 = chronology20.secondOfDay();
        org.joda.time.LocalDateTime localDateTime26 = new org.joda.time.LocalDateTime();
        org.joda.time.DateTimeZone dateTimeZone27 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str29 = dateTimeZone27.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime30 = org.joda.time.LocalDateTime.now(dateTimeZone27);
        org.joda.time.LocalDateTime.Property property31 = localDateTime30.millisOfDay();
        java.lang.String str32 = property31.getName();
        int int33 = property31.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType34 = property31.getFieldType();
        int int35 = localDateTime26.get(dateTimeFieldType34);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone37 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str39 = dateTimeZone37.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime40 = org.joda.time.LocalDateTime.now(dateTimeZone37);
        org.joda.time.LocalDateTime.Property property41 = localDateTime40.millisOfDay();
        org.joda.time.LocalDateTime localDateTime43 = localDateTime40.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime44 = localDateTime40.toDateTime();
        java.lang.String str45 = dateTime44.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType46 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int47 = dateTime44.get(dateTimeFieldType46);
        org.joda.time.Chronology chronology48 = dateTime44.getChronology();
        org.joda.time.DateTimeZone dateTimeZone49 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str51 = dateTimeZone49.getShortName((long) (short) 10);
        long long53 = dateTimeZone49.convertUTCToLocal((long) ' ');
        java.lang.String str54 = dateTimeZone49.toString();
        boolean boolean56 = dateTimeZone49.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology57 = chronology48.withZone(dateTimeZone49);
        boolean boolean58 = dateTimeFieldType36.isSupported(chronology57);
        org.joda.time.DurationField durationField59 = chronology57.years();
        org.joda.time.LocalDateTime localDateTime60 = org.joda.time.LocalDateTime.now(chronology57);
        org.joda.time.DateTimeField dateTimeField61 = dateTimeFieldType34.getField(chronology57);
        org.joda.time.DateTimeZone dateTimeZone62 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str64 = dateTimeZone62.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime65 = org.joda.time.LocalDateTime.now(dateTimeZone62);
        org.joda.time.LocalDateTime.Property property66 = localDateTime65.millisOfDay();
        org.joda.time.LocalDateTime localDateTime68 = localDateTime65.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime70 = localDateTime65.plusHours((int) ' ');
        org.joda.time.LocalDateTime.Property property71 = localDateTime70.millisOfSecond();
        org.joda.time.LocalDateTime.Property property72 = localDateTime70.centuryOfEra();
        org.joda.time.DateTimeZone dateTimeZone73 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str75 = dateTimeZone73.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime76 = org.joda.time.LocalDateTime.now(dateTimeZone73);
        org.joda.time.LocalDateTime.Property property77 = localDateTime76.millisOfDay();
        org.joda.time.LocalDateTime localDateTime79 = localDateTime76.plusMonths((int) (byte) 100);
        boolean boolean80 = localDateTime70.isEqual((org.joda.time.ReadablePartial) localDateTime76);
        org.joda.time.LocalDateTime localDateTime82 = localDateTime70.minusMillis((int) ' ');
        org.joda.time.LocalDateTime localDateTime84 = localDateTime70.minusWeeks(52);
        org.joda.time.DateTimeZone dateTimeZone86 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str88 = dateTimeZone86.getShortName((long) (short) 10);
        long long90 = dateTimeZone86.convertUTCToLocal((long) ' ');
        java.util.Locale locale92 = java.util.Locale.ROOT;
        java.lang.String str93 = dateTimeZone86.getName((long) (short) 0, locale92);
        java.util.Locale.setDefault(locale92);
        java.lang.String str95 = dateTimeField61.getAsShortText((org.joda.time.ReadablePartial) localDateTime84, 53675343, locale92);
        java.lang.String str96 = locale92.getDisplayLanguage();
        int int97 = dateTimeField25.getMaximumShortTextLength(locale92);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField24 and durationField59", Math.signum(durationField24.compareTo(durationField59)) == -Math.signum(durationField59.compareTo(durationField24)));
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test187");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.ReadableInstant readableInstant5 = null;
        long long6 = property4.getDifferenceAsLong(readableInstant5);
        java.util.Locale locale7 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str8 = locale7.getISO3Language();
        java.lang.String str9 = property4.getAsShortText(locale7);
        org.joda.time.DurationField durationField10 = property4.getLeapDurationField();
        java.util.Locale locale11 = java.util.Locale.ROOT;
        java.util.Set<java.lang.String> strSet12 = locale11.getUnicodeLocaleAttributes();
        int int13 = property4.getMaximumTextLength(locale11);
        org.joda.time.LocalDateTime localDateTime14 = property4.getLocalDateTime();
        org.joda.time.Interval interval15 = property4.toInterval();
        java.lang.String str16 = property4.getAsText();
        boolean boolean17 = property4.isLeap();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime26 = localDateTime21.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime28 = localDateTime26.withMillisOfDay(53620101);
        org.joda.time.LocalDateTime localDateTime30 = localDateTime28.minusMonths((-1));
        org.joda.time.LocalDateTime localDateTime32 = localDateTime28.plusSeconds(0);
        org.joda.time.LocalDateTime.Property property33 = localDateTime32.centuryOfEra();
        org.joda.time.LocalDateTime localDateTime34 = property33.roundCeilingCopy();
        org.joda.time.LocalDateTime.Property property35 = localDateTime34.hourOfDay();
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str38 = dateTimeZone36.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime39 = org.joda.time.LocalDateTime.now(dateTimeZone36);
        org.joda.time.LocalDateTime.Property property40 = localDateTime39.millisOfDay();
        org.joda.time.LocalDateTime localDateTime42 = localDateTime39.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime43 = localDateTime39.toDateTime();
        long long44 = property35.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now(dateTimeZone45);
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.millisOfDay();
        org.joda.time.ReadableInstant readableInstant50 = null;
        long long51 = property49.getDifferenceAsLong(readableInstant50);
        java.util.Locale locale52 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str53 = locale52.getISO3Language();
        java.lang.String str54 = property49.getAsShortText(locale52);
        org.joda.time.LocalDateTime localDateTime56 = property49.addToCopy((int) '4');
        org.joda.time.LocalDateTime localDateTime57 = property49.roundHalfEvenCopy();
        org.joda.time.DateTime dateTime58 = localDateTime57.toDateTime();
        boolean boolean59 = dateTime43.isAfter((org.joda.time.ReadableInstant) dateTime58);
        java.lang.String str60 = dateTime43.toString();
        org.joda.time.Instant instant61 = dateTime43.toInstant();
        java.lang.String str62 = instant61.toString();
        int int63 = property4.getDifference((org.joda.time.ReadableInstant) instant61);
        java.lang.String str64 = instant61.toString();
        java.lang.String str65 = instant61.toString();
        org.joda.time.DateTimeZone dateTimeZone66 = instant61.getZone();
        java.lang.String str67 = dateTimeZone66.getID();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime43 and instant61", (dateTime43.compareTo(instant61) == 0) == dateTime43.equals(instant61));
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test188");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        java.lang.String str5 = property4.getName();
        org.joda.time.LocalDateTime localDateTime6 = property4.roundHalfFloorCopy();
        org.joda.time.DateTimeFieldType dateTimeFieldType7 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        boolean boolean8 = localDateTime6.isSupported(dateTimeFieldType7);
        org.joda.time.LocalDateTime localDateTime10 = localDateTime6.withWeekOfWeekyear((int) '#');
        int int11 = localDateTime6.getDayOfYear();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime6.minusWeeks(53707611);
        org.joda.time.DateTime dateTime14 = localDateTime13.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        long long20 = dateTimeZone16.convertUTCToLocal((long) ' ');
        java.lang.String str21 = dateTimeZone16.toString();
        long long24 = dateTimeZone16.adjustOffset((long) (short) 100, false);
        org.joda.time.LocalDateTime localDateTime25 = new org.joda.time.LocalDateTime((long) '4', dateTimeZone16);
        org.joda.time.DateTimeZone dateTimeZone26 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str28 = dateTimeZone26.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime29 = org.joda.time.LocalDateTime.now(dateTimeZone26);
        org.joda.time.LocalDateTime.Property property30 = localDateTime29.millisOfDay();
        org.joda.time.LocalDateTime localDateTime32 = localDateTime29.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime33 = localDateTime29.toDateTime();
        java.lang.String str34 = dateTime33.toString();
        int int35 = dateTimeZone16.getOffset((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology36 = dateTime33.getChronology();
        org.joda.time.Instant instant37 = dateTime33.toInstant();
        int int38 = dateTime14.compareTo((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.DateTimeZone dateTimeZone39 = dateTime14.getZone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime33 and instant37", (dateTime33.compareTo(instant37) == 0) == dateTime33.equals(instant37));
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test189");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone9 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str11 = dateTimeZone9.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(dateTimeZone9);
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.millisOfDay();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime12.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now(dateTimeZone17);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime20.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime24 = localDateTime20.toDateTime();
        java.lang.String str25 = dateTime24.toString();
        org.joda.time.DateTime dateTime26 = localDateTime15.toDateTime((org.joda.time.ReadableInstant) dateTime24);
        boolean boolean27 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.LocalDateTime localDateTime34 = localDateTime31.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime35 = localDateTime31.toDateTime();
        java.lang.String str36 = dateTime35.toString();
        org.joda.time.DateTimeZone dateTimeZone37 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str39 = dateTimeZone37.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime40 = org.joda.time.LocalDateTime.now(dateTimeZone37);
        org.joda.time.LocalDateTime.Property property41 = localDateTime40.millisOfDay();
        org.joda.time.LocalDateTime localDateTime43 = localDateTime40.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property44 = localDateTime43.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now(dateTimeZone45);
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.millisOfDay();
        org.joda.time.LocalDateTime localDateTime51 = localDateTime48.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime52 = localDateTime48.toDateTime();
        java.lang.String str53 = dateTime52.toString();
        org.joda.time.DateTime dateTime54 = localDateTime43.toDateTime((org.joda.time.ReadableInstant) dateTime52);
        boolean boolean55 = dateTime35.isBefore((org.joda.time.ReadableInstant) dateTime52);
        org.joda.time.DateTimeZone dateTimeZone56 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str58 = dateTimeZone56.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime59 = org.joda.time.LocalDateTime.now(dateTimeZone56);
        org.joda.time.LocalDateTime.Property property60 = localDateTime59.millisOfDay();
        org.joda.time.DurationFieldType durationFieldType61 = org.joda.time.DurationFieldType.centuries();
        boolean boolean62 = localDateTime59.equals((java.lang.Object) durationFieldType61);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray63 = localDateTime59.getFieldTypes();
        boolean boolean64 = dateTime35.equals((java.lang.Object) dateTimeFieldTypeArray63);
        int int65 = dateTime24.compareTo((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Instant instant66 = dateTime24.toInstant();
        org.joda.time.Instant instant67 = instant66.toInstant();
        org.joda.time.DateTimeZone dateTimeZone68 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str70 = dateTimeZone68.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime71 = org.joda.time.LocalDateTime.now(dateTimeZone68);
        org.joda.time.LocalDateTime.Property property72 = localDateTime71.millisOfDay();
        org.joda.time.LocalDateTime localDateTime74 = localDateTime71.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime75 = localDateTime71.toDateTime();
        java.lang.String str76 = dateTime75.toString();
        boolean boolean77 = instant66.isEqual((org.joda.time.ReadableInstant) dateTime75);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant66", (dateTime7.compareTo(instant66) == 0) == dateTime7.equals(instant66));
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test190");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        java.lang.String str5 = property4.getName();
        org.joda.time.LocalDateTime localDateTime6 = property4.roundHalfFloorCopy();
        org.joda.time.LocalDateTime localDateTime7 = property4.withMinimumValue();
        org.joda.time.LocalDateTime localDateTime9 = localDateTime7.withMinuteOfHour(4);
        org.joda.time.LocalDateTime.Property property10 = localDateTime7.era();
        org.joda.time.DateTimeZone dateTimeZone11 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str13 = dateTimeZone11.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime14 = org.joda.time.LocalDateTime.now(dateTimeZone11);
        org.joda.time.LocalDateTime.Property property15 = localDateTime14.millisOfDay();
        org.joda.time.LocalDateTime localDateTime17 = localDateTime14.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property18 = localDateTime17.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone19 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str21 = dateTimeZone19.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now(dateTimeZone19);
        org.joda.time.LocalDateTime.Property property23 = localDateTime22.millisOfDay();
        org.joda.time.LocalDateTime localDateTime25 = localDateTime22.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime26 = localDateTime22.toDateTime();
        java.lang.String str27 = dateTime26.toString();
        org.joda.time.DateTime dateTime28 = localDateTime17.toDateTime((org.joda.time.ReadableInstant) dateTime26);
        org.joda.time.DateTimeZone dateTimeZone29 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str31 = dateTimeZone29.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime32 = org.joda.time.LocalDateTime.now(dateTimeZone29);
        org.joda.time.LocalDateTime.Property property33 = localDateTime32.millisOfDay();
        org.joda.time.LocalDateTime localDateTime35 = localDateTime32.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime36 = localDateTime32.toDateTime();
        java.lang.String str37 = dateTime36.toString();
        int int38 = dateTime26.compareTo((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        boolean boolean40 = dateTime26.isEqual(readableInstant39);
        org.joda.time.Instant instant41 = dateTime26.toInstant();
        int int42 = property10.compareTo((org.joda.time.ReadableInstant) instant41);
        org.joda.time.Chronology chronology43 = instant41.getChronology();
        org.joda.time.DateTimeField dateTimeField44 = chronology43.halfdayOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime26 and instant41", (dateTime26.compareTo(instant41) == 0) == dateTime26.equals(instant41));
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test191");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        java.lang.Object obj12 = null;
        boolean boolean13 = dateTime7.equals(obj12);
        org.joda.time.DateTimeZone dateTimeZone14 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str16 = dateTimeZone14.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime17 = org.joda.time.LocalDateTime.now(dateTimeZone14);
        org.joda.time.LocalDateTime.Property property18 = localDateTime17.millisOfDay();
        org.joda.time.LocalDateTime localDateTime20 = localDateTime17.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime21 = localDateTime17.toDateTime();
        java.lang.String str22 = dateTime21.toString();
        org.joda.time.DateTimeZone dateTimeZone23 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str25 = dateTimeZone23.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime26 = org.joda.time.LocalDateTime.now(dateTimeZone23);
        org.joda.time.LocalDateTime.Property property27 = localDateTime26.millisOfDay();
        org.joda.time.LocalDateTime localDateTime29 = localDateTime26.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property30 = localDateTime29.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone31 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str33 = dateTimeZone31.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime34 = org.joda.time.LocalDateTime.now(dateTimeZone31);
        org.joda.time.LocalDateTime.Property property35 = localDateTime34.millisOfDay();
        org.joda.time.LocalDateTime localDateTime37 = localDateTime34.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime38 = localDateTime34.toDateTime();
        java.lang.String str39 = dateTime38.toString();
        org.joda.time.DateTime dateTime40 = localDateTime29.toDateTime((org.joda.time.ReadableInstant) dateTime38);
        boolean boolean41 = dateTime21.isBefore((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.DateTimeZone dateTimeZone42 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str44 = dateTimeZone42.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime45 = org.joda.time.LocalDateTime.now(dateTimeZone42);
        org.joda.time.LocalDateTime.Property property46 = localDateTime45.millisOfDay();
        org.joda.time.LocalDateTime localDateTime48 = localDateTime45.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime49 = localDateTime45.toDateTime();
        java.lang.String str50 = dateTime49.toString();
        org.joda.time.DateTimeZone dateTimeZone51 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str53 = dateTimeZone51.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime54 = org.joda.time.LocalDateTime.now(dateTimeZone51);
        org.joda.time.LocalDateTime.Property property55 = localDateTime54.millisOfDay();
        org.joda.time.LocalDateTime localDateTime57 = localDateTime54.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property58 = localDateTime57.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone59 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str61 = dateTimeZone59.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime62 = org.joda.time.LocalDateTime.now(dateTimeZone59);
        org.joda.time.LocalDateTime.Property property63 = localDateTime62.millisOfDay();
        org.joda.time.LocalDateTime localDateTime65 = localDateTime62.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime66 = localDateTime62.toDateTime();
        java.lang.String str67 = dateTime66.toString();
        org.joda.time.DateTime dateTime68 = localDateTime57.toDateTime((org.joda.time.ReadableInstant) dateTime66);
        boolean boolean69 = dateTime49.isBefore((org.joda.time.ReadableInstant) dateTime66);
        org.joda.time.DateTimeZone dateTimeZone70 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str72 = dateTimeZone70.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime73 = org.joda.time.LocalDateTime.now(dateTimeZone70);
        org.joda.time.LocalDateTime.Property property74 = localDateTime73.millisOfDay();
        org.joda.time.DurationFieldType durationFieldType75 = org.joda.time.DurationFieldType.centuries();
        boolean boolean76 = localDateTime73.equals((java.lang.Object) durationFieldType75);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray77 = localDateTime73.getFieldTypes();
        boolean boolean78 = dateTime49.equals((java.lang.Object) dateTimeFieldTypeArray77);
        int int79 = dateTime38.compareTo((org.joda.time.ReadableInstant) dateTime49);
        org.joda.time.Instant instant80 = dateTime38.toInstant();
        org.joda.time.Instant instant81 = instant80.toInstant();
        boolean boolean82 = dateTime7.isBefore((org.joda.time.ReadableInstant) instant81);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime38 and instant81", (dateTime38.compareTo(instant81) == 0) == dateTime38.equals(instant81));
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test192");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        long long5 = property4.remainder();
        org.joda.time.LocalDateTime localDateTime6 = property4.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime7 = property4.roundFloorCopy();
        java.lang.String str8 = property4.getAsShortText();
        int int9 = property4.getMinimumValue();
        org.joda.time.Interval interval10 = property4.toInterval();
        org.joda.time.DateTimeField dateTimeField11 = property4.getField();
        java.lang.String str12 = dateTimeField11.getName();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime16 = org.joda.time.LocalDateTime.now(dateTimeZone13);
        org.joda.time.LocalDateTime.Property property17 = localDateTime16.millisOfDay();
        org.joda.time.ReadableInstant readableInstant18 = null;
        long long19 = property17.getDifferenceAsLong(readableInstant18);
        int int20 = property17.getMaximumValue();
        org.joda.time.LocalDateTime localDateTime21 = property17.roundHalfEvenCopy();
        org.joda.time.LocalDateTime localDateTime22 = property17.roundHalfFloorCopy();
        java.util.Locale locale23 = java.util.Locale.ITALIAN;
        java.lang.String str24 = dateTimeField11.getAsText((org.joda.time.ReadablePartial) localDateTime22, locale23);
        org.joda.time.LocalDateTime localDateTime26 = localDateTime22.plusMinutes(292278993);
        org.joda.time.LocalDateTime.Property property27 = localDateTime22.weekyear();
        org.joda.time.LocalDateTime localDateTime28 = property27.withMaximumValue();
        org.joda.time.LocalDateTime.Property property29 = localDateTime28.yearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone30 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str32 = dateTimeZone30.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime33 = org.joda.time.LocalDateTime.now(dateTimeZone30);
        org.joda.time.LocalDateTime.Property property34 = localDateTime33.millisOfDay();
        org.joda.time.LocalDateTime localDateTime36 = localDateTime33.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime37 = localDateTime33.toDateTime();
        java.lang.String str38 = dateTime37.toString();
        org.joda.time.DateTimeZone dateTimeZone39 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str41 = dateTimeZone39.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime42 = org.joda.time.LocalDateTime.now(dateTimeZone39);
        org.joda.time.LocalDateTime.Property property43 = localDateTime42.millisOfDay();
        org.joda.time.LocalDateTime localDateTime45 = localDateTime42.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property46 = localDateTime45.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone47 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str49 = dateTimeZone47.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime50 = org.joda.time.LocalDateTime.now(dateTimeZone47);
        org.joda.time.LocalDateTime.Property property51 = localDateTime50.millisOfDay();
        org.joda.time.LocalDateTime localDateTime53 = localDateTime50.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime54 = localDateTime50.toDateTime();
        java.lang.String str55 = dateTime54.toString();
        org.joda.time.DateTime dateTime56 = localDateTime45.toDateTime((org.joda.time.ReadableInstant) dateTime54);
        boolean boolean57 = dateTime37.isBefore((org.joda.time.ReadableInstant) dateTime54);
        org.joda.time.DateTimeZone dateTimeZone58 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str60 = dateTimeZone58.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime61 = org.joda.time.LocalDateTime.now(dateTimeZone58);
        org.joda.time.LocalDateTime.Property property62 = localDateTime61.millisOfDay();
        org.joda.time.DurationFieldType durationFieldType63 = org.joda.time.DurationFieldType.centuries();
        boolean boolean64 = localDateTime61.equals((java.lang.Object) durationFieldType63);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray65 = localDateTime61.getFieldTypes();
        boolean boolean66 = dateTime37.equals((java.lang.Object) dateTimeFieldTypeArray65);
        org.joda.time.Instant instant67 = dateTime37.toInstant();
        int int68 = property29.compareTo((org.joda.time.ReadableInstant) dateTime37);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime54 and instant67", (dateTime54.compareTo(instant67) == 0) == dateTime54.equals(instant67));
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test193");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone9 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str11 = dateTimeZone9.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(dateTimeZone9);
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.millisOfDay();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime12.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now(dateTimeZone17);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime20.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime24 = localDateTime20.toDateTime();
        java.lang.String str25 = dateTime24.toString();
        org.joda.time.DateTime dateTime26 = localDateTime15.toDateTime((org.joda.time.ReadableInstant) dateTime24);
        boolean boolean27 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.LocalDateTime localDateTime34 = localDateTime31.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime35 = localDateTime31.toDateTime();
        java.lang.String str36 = dateTime35.toString();
        org.joda.time.DateTimeZone dateTimeZone37 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str39 = dateTimeZone37.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime40 = org.joda.time.LocalDateTime.now(dateTimeZone37);
        org.joda.time.LocalDateTime.Property property41 = localDateTime40.millisOfDay();
        org.joda.time.LocalDateTime localDateTime43 = localDateTime40.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property44 = localDateTime43.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now(dateTimeZone45);
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.millisOfDay();
        org.joda.time.LocalDateTime localDateTime51 = localDateTime48.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime52 = localDateTime48.toDateTime();
        java.lang.String str53 = dateTime52.toString();
        org.joda.time.DateTime dateTime54 = localDateTime43.toDateTime((org.joda.time.ReadableInstant) dateTime52);
        boolean boolean55 = dateTime35.isBefore((org.joda.time.ReadableInstant) dateTime52);
        org.joda.time.DateTimeZone dateTimeZone56 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str58 = dateTimeZone56.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime59 = org.joda.time.LocalDateTime.now(dateTimeZone56);
        org.joda.time.LocalDateTime.Property property60 = localDateTime59.millisOfDay();
        org.joda.time.DurationFieldType durationFieldType61 = org.joda.time.DurationFieldType.centuries();
        boolean boolean62 = localDateTime59.equals((java.lang.Object) durationFieldType61);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray63 = localDateTime59.getFieldTypes();
        boolean boolean64 = dateTime35.equals((java.lang.Object) dateTimeFieldTypeArray63);
        int int65 = dateTime24.compareTo((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Instant instant66 = dateTime24.toInstant();
        org.joda.time.Instant instant67 = instant66.toInstant();
        org.joda.time.DateTimeZone dateTimeZone68 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str70 = dateTimeZone68.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime71 = org.joda.time.LocalDateTime.now(dateTimeZone68);
        org.joda.time.LocalDateTime.Property property72 = localDateTime71.millisOfDay();
        long long73 = property72.remainder();
        org.joda.time.LocalDateTime localDateTime74 = property72.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime75 = property72.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime76 = property72.withMinimumValue();
        org.joda.time.ReadablePeriod readablePeriod77 = null;
        org.joda.time.LocalDateTime localDateTime78 = localDateTime76.plus(readablePeriod77);
        int int79 = localDateTime76.getWeekOfWeekyear();
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.DateTime dateTime81 = localDateTime76.toDateTime(readableInstant80);
        boolean boolean82 = instant66.isEqual((org.joda.time.ReadableInstant) dateTime81);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant66", (dateTime7.compareTo(instant66) == 0) == dateTime7.equals(instant66));
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test194");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.DateTimeZone dateTimeZone5 = null;
        org.joda.time.DateTime dateTime6 = localDateTime3.toDateTime(dateTimeZone5);
        org.joda.time.LocalDateTime.Property property7 = localDateTime3.millisOfSecond();
        org.joda.time.LocalDateTime localDateTime9 = localDateTime3.plusHours(53643675);
        int int10 = localDateTime3.getMillisOfSecond();
        org.joda.time.LocalDateTime localDateTime12 = localDateTime3.plusDays(605);
        org.joda.time.LocalDateTime localDateTime14 = localDateTime3.minusSeconds((int) (short) 10);
        org.joda.time.DateTimeZone dateTimeZone15 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str17 = dateTimeZone15.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now(dateTimeZone15);
        org.joda.time.LocalDateTime.Property property19 = localDateTime18.millisOfDay();
        long long20 = property19.remainder();
        org.joda.time.Interval interval21 = property19.toInterval();
        org.joda.time.LocalDateTime localDateTime23 = property19.addToCopy((int) '4');
        org.joda.time.DateTimeZone dateTimeZone24 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str26 = dateTimeZone24.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime27 = org.joda.time.LocalDateTime.now(dateTimeZone24);
        org.joda.time.LocalDateTime.Property property28 = localDateTime27.millisOfDay();
        org.joda.time.LocalDateTime localDateTime30 = localDateTime27.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime31 = localDateTime27.toDateTime();
        java.lang.String str32 = dateTime31.toString();
        org.joda.time.DateTimeZone dateTimeZone33 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str35 = dateTimeZone33.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime36 = org.joda.time.LocalDateTime.now(dateTimeZone33);
        org.joda.time.LocalDateTime.Property property37 = localDateTime36.millisOfDay();
        org.joda.time.LocalDateTime localDateTime39 = localDateTime36.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property40 = localDateTime39.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone41 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str43 = dateTimeZone41.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime44 = org.joda.time.LocalDateTime.now(dateTimeZone41);
        org.joda.time.LocalDateTime.Property property45 = localDateTime44.millisOfDay();
        org.joda.time.LocalDateTime localDateTime47 = localDateTime44.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime48 = localDateTime44.toDateTime();
        java.lang.String str49 = dateTime48.toString();
        org.joda.time.DateTime dateTime50 = localDateTime39.toDateTime((org.joda.time.ReadableInstant) dateTime48);
        boolean boolean51 = dateTime31.isBefore((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.DateTimeZone dateTimeZone52 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str54 = dateTimeZone52.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime55 = org.joda.time.LocalDateTime.now(dateTimeZone52);
        org.joda.time.LocalDateTime.Property property56 = localDateTime55.millisOfDay();
        org.joda.time.LocalDateTime localDateTime58 = localDateTime55.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime59 = localDateTime55.toDateTime();
        java.lang.String str60 = dateTime59.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType61 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int62 = dateTime59.get(dateTimeFieldType61);
        int int63 = dateTime48.compareTo((org.joda.time.ReadableInstant) dateTime59);
        org.joda.time.DateTimeZone dateTimeZone64 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str66 = dateTimeZone64.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime67 = org.joda.time.LocalDateTime.now(dateTimeZone64);
        org.joda.time.LocalDateTime.Property property68 = localDateTime67.millisOfDay();
        org.joda.time.LocalDateTime localDateTime70 = localDateTime67.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime71 = localDateTime67.toDateTime();
        java.lang.String str72 = dateTime71.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType73 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int74 = dateTime71.get(dateTimeFieldType73);
        org.joda.time.DateTimeZone dateTimeZone75 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str77 = dateTimeZone75.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime78 = org.joda.time.LocalDateTime.now(dateTimeZone75);
        org.joda.time.LocalDateTime.Property property79 = localDateTime78.millisOfDay();
        org.joda.time.LocalDateTime localDateTime81 = localDateTime78.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property82 = localDateTime81.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone83 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str85 = dateTimeZone83.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime86 = org.joda.time.LocalDateTime.now(dateTimeZone83);
        org.joda.time.LocalDateTime.Property property87 = localDateTime86.millisOfDay();
        org.joda.time.LocalDateTime localDateTime89 = localDateTime86.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime90 = localDateTime86.toDateTime();
        java.lang.String str91 = dateTime90.toString();
        org.joda.time.DateTime dateTime92 = localDateTime81.toDateTime((org.joda.time.ReadableInstant) dateTime90);
        boolean boolean93 = dateTime71.isAfter((org.joda.time.ReadableInstant) dateTime90);
        boolean boolean94 = dateTime48.isBefore((org.joda.time.ReadableInstant) dateTime71);
        java.lang.String str95 = dateTime71.toString();
        long long96 = property19.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime71);
        org.joda.time.Instant instant97 = dateTime71.toInstant();
        org.joda.time.DateTime dateTime98 = localDateTime3.toDateTime((org.joda.time.ReadableInstant) dateTime71);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime6 and instant97", (dateTime6.compareTo(instant97) == 0) == dateTime6.equals(instant97));
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test195");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        org.joda.time.DateTimeField dateTimeField22 = chronology21.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField23 = dateTimeFieldType0.getField(chronology21);
        org.joda.time.DateTimeZone dateTimeZone24 = chronology21.getZone();
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str27 = dateTimeZone25.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now(dateTimeZone25);
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.LocalDateTime localDateTime31 = localDateTime28.withDurationAdded(readableDuration29, 86399999);
        org.joda.time.DateTimeZone dateTimeZone32 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str34 = dateTimeZone32.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime35 = org.joda.time.LocalDateTime.now(dateTimeZone32);
        org.joda.time.LocalDateTime.Property property36 = localDateTime35.millisOfDay();
        org.joda.time.LocalDateTime localDateTime38 = localDateTime35.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime39 = localDateTime35.toDateTime();
        java.lang.String str40 = dateTime39.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int42 = dateTime39.get(dateTimeFieldType41);
        org.joda.time.Chronology chronology43 = dateTime39.getChronology();
        org.joda.time.DateTimeField dateTimeField44 = chronology43.weekyearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now(dateTimeZone45);
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.millisOfDay();
        long long50 = property49.remainder();
        org.joda.time.LocalDateTime localDateTime51 = property49.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime52 = property49.roundFloorCopy();
        java.lang.String str53 = property49.getAsShortText();
        int int54 = property49.getMinimumValue();
        org.joda.time.LocalDateTime localDateTime56 = property49.addToCopy((long) 53623874);
        int[] intArray58 = chronology43.get((org.joda.time.ReadablePartial) localDateTime56, (long) 53630466);
        org.joda.time.DateTimeZone dateTimeZone60 = org.joda.time.DateTimeZone.forOffsetMillis((int) 'a');
        org.joda.time.LocalDateTime localDateTime61 = org.joda.time.LocalDateTime.now(dateTimeZone60);
        java.util.Date date62 = localDateTime61.toDate();
        int[] intArray64 = chronology43.get((org.joda.time.ReadablePartial) localDateTime61, (long) 99);
        chronology21.validate((org.joda.time.ReadablePartial) localDateTime31, intArray64);
        org.joda.time.DurationField durationField66 = chronology21.eras();
        org.joda.time.DateTimeField dateTimeField67 = chronology21.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField68 = chronology21.monthOfYear();
        org.joda.time.DateTimeField dateTimeField69 = chronology21.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField70 = chronology21.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField71 = chronology21.millisOfDay();
        org.joda.time.DurationField durationField72 = chronology21.halfdays();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField66, durationField72, and durationField66", !(durationField66.compareTo(durationField72) == 0) || (Math.signum(durationField66.compareTo(durationField66)) == Math.signum(durationField72.compareTo(durationField66))));
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test196");
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.forOffsetMillis((int) 'a');
        org.joda.time.LocalDateTime localDateTime2 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        long long4 = dateTimeZone1.nextTransition(8434424000L);
        org.joda.time.DateTimeZone.setDefault(dateTimeZone1);
        org.joda.time.DateTimeZone dateTimeZone6 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str8 = dateTimeZone6.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime9 = org.joda.time.LocalDateTime.now(dateTimeZone6);
        org.joda.time.LocalDateTime.Property property10 = localDateTime9.millisOfDay();
        org.joda.time.LocalDateTime localDateTime12 = localDateTime9.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime13 = localDateTime9.toDateTime();
        java.lang.String str14 = dateTime13.toString();
        org.joda.time.DateTimeZone dateTimeZone15 = dateTime13.getZone();
        int int16 = dateTimeZone1.getOffset((org.joda.time.ReadableInstant) dateTime13);
        org.joda.time.Instant instant17 = dateTime13.toInstant();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime25 = localDateTime21.toDateTime();
        java.lang.String str26 = dateTime25.toString();
        org.joda.time.DateTimeZone dateTimeZone27 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str29 = dateTimeZone27.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime30 = org.joda.time.LocalDateTime.now(dateTimeZone27);
        org.joda.time.LocalDateTime.Property property31 = localDateTime30.millisOfDay();
        org.joda.time.LocalDateTime localDateTime33 = localDateTime30.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property34 = localDateTime33.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone35 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str37 = dateTimeZone35.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime38 = org.joda.time.LocalDateTime.now(dateTimeZone35);
        org.joda.time.LocalDateTime.Property property39 = localDateTime38.millisOfDay();
        org.joda.time.LocalDateTime localDateTime41 = localDateTime38.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime42 = localDateTime38.toDateTime();
        java.lang.String str43 = dateTime42.toString();
        org.joda.time.DateTime dateTime44 = localDateTime33.toDateTime((org.joda.time.ReadableInstant) dateTime42);
        boolean boolean45 = dateTime25.isBefore((org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.DateTimeZone dateTimeZone46 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str48 = dateTimeZone46.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime49 = org.joda.time.LocalDateTime.now(dateTimeZone46);
        org.joda.time.LocalDateTime.Property property50 = localDateTime49.millisOfDay();
        org.joda.time.LocalDateTime localDateTime52 = localDateTime49.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property53 = localDateTime52.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone54 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str56 = dateTimeZone54.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime57 = org.joda.time.LocalDateTime.now(dateTimeZone54);
        org.joda.time.LocalDateTime.Property property58 = localDateTime57.millisOfDay();
        org.joda.time.LocalDateTime localDateTime60 = localDateTime57.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime61 = localDateTime57.toDateTime();
        java.lang.String str62 = dateTime61.toString();
        org.joda.time.DateTime dateTime63 = localDateTime52.toDateTime((org.joda.time.ReadableInstant) dateTime61);
        org.joda.time.DateTimeZone dateTimeZone64 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str66 = dateTimeZone64.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime67 = org.joda.time.LocalDateTime.now(dateTimeZone64);
        org.joda.time.LocalDateTime.Property property68 = localDateTime67.millisOfDay();
        org.joda.time.LocalDateTime localDateTime70 = localDateTime67.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime71 = localDateTime67.toDateTime();
        java.lang.String str72 = dateTime71.toString();
        int int73 = dateTime61.compareTo((org.joda.time.ReadableInstant) dateTime71);
        long long74 = dateTime61.getMillis();
        boolean boolean75 = dateTime25.isBefore((org.joda.time.ReadableInstant) dateTime61);
        org.joda.time.DateTimeFieldType dateTimeFieldType76 = org.joda.time.DateTimeFieldType.weekOfWeekyear();
        java.lang.String str77 = dateTimeFieldType76.getName();
        int int78 = dateTime25.get(dateTimeFieldType76);
        int int79 = instant17.get(dateTimeFieldType76);
        java.lang.String str80 = dateTimeFieldType76.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime13 and instant17", (dateTime13.compareTo(instant17) == 0) == dateTime13.equals(instant17));
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test197");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone9 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str11 = dateTimeZone9.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(dateTimeZone9);
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.millisOfDay();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime12.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now(dateTimeZone17);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime20.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime24 = localDateTime20.toDateTime();
        java.lang.String str25 = dateTime24.toString();
        org.joda.time.DateTime dateTime26 = localDateTime15.toDateTime((org.joda.time.ReadableInstant) dateTime24);
        boolean boolean27 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.LocalDateTime localDateTime34 = localDateTime31.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime35 = localDateTime31.toDateTime();
        java.lang.String str36 = dateTime35.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int38 = dateTime35.get(dateTimeFieldType37);
        int int39 = dateTime24.compareTo((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Instant instant40 = dateTime24.toInstant();
        org.joda.time.Instant instant41 = dateTime24.toInstant();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant40", (dateTime7.compareTo(instant40) == 0) == dateTime7.equals(instant40));
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test198");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.clockhourOfHalfday();
        java.lang.String str1 = dateTimeFieldType0.toString();
        org.joda.time.DurationFieldType durationFieldType2 = org.joda.time.DurationFieldType.hours();
        org.joda.time.DateTimeFieldType dateTimeFieldType3 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone4 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str6 = dateTimeZone4.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime7 = org.joda.time.LocalDateTime.now(dateTimeZone4);
        org.joda.time.LocalDateTime.Property property8 = localDateTime7.millisOfDay();
        org.joda.time.LocalDateTime localDateTime10 = localDateTime7.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime11 = localDateTime7.toDateTime();
        java.lang.String str12 = dateTime11.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType13 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int14 = dateTime11.get(dateTimeFieldType13);
        org.joda.time.Chronology chronology15 = dateTime11.getChronology();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str18 = dateTimeZone16.getShortName((long) (short) 10);
        long long20 = dateTimeZone16.convertUTCToLocal((long) ' ');
        java.lang.String str21 = dateTimeZone16.toString();
        boolean boolean23 = dateTimeZone16.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology24 = chronology15.withZone(dateTimeZone16);
        boolean boolean25 = dateTimeFieldType3.isSupported(chronology24);
        org.joda.time.DateTimeZone dateTimeZone26 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str28 = dateTimeZone26.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime29 = org.joda.time.LocalDateTime.now(dateTimeZone26);
        org.joda.time.LocalDateTime.Property property30 = localDateTime29.millisOfDay();
        org.joda.time.LocalDateTime localDateTime32 = localDateTime29.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime33 = localDateTime29.toDateTime();
        java.lang.String str34 = dateTime33.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int36 = dateTime33.get(dateTimeFieldType35);
        org.joda.time.Chronology chronology37 = dateTime33.getChronology();
        org.joda.time.DateTimeZone dateTimeZone38 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str40 = dateTimeZone38.getShortName((long) (short) 10);
        long long42 = dateTimeZone38.convertUTCToLocal((long) ' ');
        java.lang.String str43 = dateTimeZone38.toString();
        boolean boolean45 = dateTimeZone38.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology46 = chronology37.withZone(dateTimeZone38);
        org.joda.time.DurationField durationField47 = chronology37.weekyears();
        org.joda.time.DateTimeField dateTimeField48 = chronology37.dayOfYear();
        org.joda.time.DurationField durationField49 = chronology37.weeks();
        org.joda.time.DateTimeField dateTimeField50 = chronology37.yearOfEra();
        org.joda.time.DateTimeField dateTimeField51 = chronology37.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField52 = dateTimeFieldType3.getField(chronology37);
        org.joda.time.DateTimeField dateTimeField53 = chronology37.clockhourOfDay();
        org.joda.time.DurationField durationField54 = durationFieldType2.getField(chronology37);
        boolean boolean55 = dateTimeFieldType0.isSupported(chronology37);
        org.joda.time.LocalDateTime localDateTime56 = new org.joda.time.LocalDateTime();
        org.joda.time.DateTimeZone dateTimeZone57 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str59 = dateTimeZone57.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime60 = org.joda.time.LocalDateTime.now(dateTimeZone57);
        org.joda.time.LocalDateTime.Property property61 = localDateTime60.millisOfDay();
        java.lang.String str62 = property61.getName();
        int int63 = property61.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType64 = property61.getFieldType();
        int int65 = localDateTime56.get(dateTimeFieldType64);
        org.joda.time.DateTimeFieldType dateTimeFieldType66 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone67 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str69 = dateTimeZone67.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime70 = org.joda.time.LocalDateTime.now(dateTimeZone67);
        org.joda.time.LocalDateTime.Property property71 = localDateTime70.millisOfDay();
        org.joda.time.LocalDateTime localDateTime73 = localDateTime70.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime74 = localDateTime70.toDateTime();
        java.lang.String str75 = dateTime74.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType76 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int77 = dateTime74.get(dateTimeFieldType76);
        org.joda.time.Chronology chronology78 = dateTime74.getChronology();
        org.joda.time.DateTimeZone dateTimeZone79 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str81 = dateTimeZone79.getShortName((long) (short) 10);
        long long83 = dateTimeZone79.convertUTCToLocal((long) ' ');
        java.lang.String str84 = dateTimeZone79.toString();
        boolean boolean86 = dateTimeZone79.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology87 = chronology78.withZone(dateTimeZone79);
        org.joda.time.DateTimeField dateTimeField88 = chronology87.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField89 = dateTimeFieldType66.getField(chronology87);
        org.joda.time.Chronology chronology90 = chronology87.withUTC();
        org.joda.time.DurationField durationField91 = chronology90.millis();
        org.joda.time.DateTimeField dateTimeField92 = chronology90.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField93 = chronology90.halfdayOfDay();
        org.joda.time.DateTimeField dateTimeField94 = dateTimeFieldType64.getField(chronology90);
        org.joda.time.DateTimeField dateTimeField95 = dateTimeFieldType0.getField(chronology90);
        org.joda.time.DurationField durationField96 = chronology90.hours();
        org.joda.time.DateTimeField dateTimeField97 = chronology90.weekyearOfCentury();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField54 and durationField96", (durationField54.compareTo(durationField96) == 0) == durationField54.equals(durationField96));
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test199");
        org.joda.time.DurationFieldType durationFieldType0 = org.joda.time.DurationFieldType.weekyears();
        java.lang.String str1 = durationFieldType0.toString();
        org.joda.time.DateTimeZone dateTimeZone2 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str4 = dateTimeZone2.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime5 = org.joda.time.LocalDateTime.now(dateTimeZone2);
        org.joda.time.LocalDateTime.Property property6 = localDateTime5.millisOfDay();
        org.joda.time.LocalDateTime localDateTime8 = localDateTime5.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime9 = localDateTime5.toDateTime();
        java.lang.String str10 = dateTime9.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int12 = dateTime9.get(dateTimeFieldType11);
        org.joda.time.Chronology chronology13 = dateTime9.getChronology();
        org.joda.time.DateTimeZone dateTimeZone14 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str16 = dateTimeZone14.getShortName((long) (short) 10);
        long long18 = dateTimeZone14.convertUTCToLocal((long) ' ');
        java.lang.String str19 = dateTimeZone14.toString();
        boolean boolean21 = dateTimeZone14.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology22 = chronology13.withZone(dateTimeZone14);
        org.joda.time.DurationField durationField23 = durationFieldType0.getField(chronology22);
        org.joda.time.DurationField durationField24 = chronology22.years();
        org.joda.time.DateTimeField dateTimeField25 = chronology22.yearOfCentury();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField23 and durationField24", (durationField23.compareTo(durationField24) == 0) == durationField23.equals(durationField24));
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test200");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DurationField durationField12 = chronology11.weekyears();
        org.joda.time.DurationField durationField13 = chronology11.years();
        org.joda.time.DateTimeField dateTimeField14 = chronology11.dayOfYear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField12 and durationField13", (durationField12.compareTo(durationField13) == 0) == durationField12.equals(durationField13));
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test201");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str14 = dateTimeZone12.getShortName((long) (short) 10);
        long long16 = dateTimeZone12.convertUTCToLocal((long) ' ');
        java.lang.String str17 = dateTimeZone12.toString();
        boolean boolean19 = dateTimeZone12.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology20 = chronology11.withZone(dateTimeZone12);
        org.joda.time.DurationField durationField21 = chronology11.weekyears();
        org.joda.time.DateTimeField dateTimeField22 = chronology11.dayOfYear();
        org.joda.time.DurationField durationField23 = chronology11.weeks();
        org.joda.time.DateTimeField dateTimeField24 = chronology11.yearOfEra();
        org.joda.time.DateTimeField dateTimeField25 = chronology11.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField26 = chronology11.dayOfWeek();
        org.joda.time.LocalDateTime localDateTime27 = new org.joda.time.LocalDateTime(chronology11);
        org.joda.time.DurationField durationField28 = chronology11.years();
        org.joda.time.DateTimeField dateTimeField29 = chronology11.yearOfCentury();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField21 and durationField28", (durationField21.compareTo(durationField28) == 0) == durationField21.equals(durationField28));
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test202");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.ReadableInstant readableInstant5 = null;
        long long6 = property4.getDifferenceAsLong(readableInstant5);
        org.joda.time.DurationField durationField7 = property4.getRangeDurationField();
        int int9 = durationField7.getValue(0L);
        int int12 = durationField7.getValue((long) (short) 1, (long) (short) 10);
        int int15 = durationField7.getDifference((long) 53630466, 0L);
        org.joda.time.DurationFieldType durationFieldType16 = durationField7.getType();
        org.joda.time.DurationFieldType durationFieldType17 = durationField7.getType();
        boolean boolean18 = durationField7.isSupported();
        long long20 = durationField7.getValueAsLong(1645455280852L);
        org.joda.time.DurationFieldType durationFieldType21 = durationField7.getType();
        java.lang.String str22 = durationFieldType21.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone24 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str26 = dateTimeZone24.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime27 = org.joda.time.LocalDateTime.now(dateTimeZone24);
        org.joda.time.LocalDateTime.Property property28 = localDateTime27.millisOfDay();
        org.joda.time.LocalDateTime localDateTime30 = localDateTime27.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime31 = localDateTime27.toDateTime();
        java.lang.String str32 = dateTime31.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType33 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int34 = dateTime31.get(dateTimeFieldType33);
        org.joda.time.Chronology chronology35 = dateTime31.getChronology();
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str38 = dateTimeZone36.getShortName((long) (short) 10);
        long long40 = dateTimeZone36.convertUTCToLocal((long) ' ');
        java.lang.String str41 = dateTimeZone36.toString();
        boolean boolean43 = dateTimeZone36.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology44 = chronology35.withZone(dateTimeZone36);
        org.joda.time.DateTimeField dateTimeField45 = chronology44.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField46 = dateTimeFieldType23.getField(chronology44);
        org.joda.time.DurationField durationField47 = chronology44.seconds();
        org.joda.time.DurationField durationField48 = chronology44.weekyears();
        org.joda.time.DateTimeField dateTimeField49 = chronology44.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField50 = chronology44.millisOfSecond();
        org.joda.time.DurationField durationField51 = durationFieldType21.getField(chronology44);
        org.joda.time.DurationField durationField52 = chronology44.halfdays();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField7 and durationField51", (durationField7.compareTo(durationField51) == 0) == durationField7.equals(durationField51));
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test203");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeZone dateTimeZone9 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str11 = dateTimeZone9.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(dateTimeZone9);
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.millisOfDay();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime12.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property16 = localDateTime15.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str19 = dateTimeZone17.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now(dateTimeZone17);
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime20.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime24 = localDateTime20.toDateTime();
        java.lang.String str25 = dateTime24.toString();
        org.joda.time.DateTime dateTime26 = localDateTime15.toDateTime((org.joda.time.ReadableInstant) dateTime24);
        boolean boolean27 = dateTime7.isBefore((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str30 = dateTimeZone28.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(dateTimeZone28);
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.millisOfDay();
        org.joda.time.LocalDateTime localDateTime34 = localDateTime31.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime35 = localDateTime31.toDateTime();
        java.lang.String str36 = dateTime35.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int38 = dateTime35.get(dateTimeFieldType37);
        int int39 = dateTime24.compareTo((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Instant instant40 = dateTime24.toInstant();
        org.joda.time.DateTimeZone dateTimeZone41 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str43 = dateTimeZone41.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime44 = org.joda.time.LocalDateTime.now(dateTimeZone41);
        org.joda.time.LocalDateTime.Property property45 = localDateTime44.millisOfDay();
        org.joda.time.LocalDateTime localDateTime47 = localDateTime44.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime48 = localDateTime44.toDateTime();
        java.lang.String str49 = dateTime48.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType50 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int51 = dateTime48.get(dateTimeFieldType50);
        org.joda.time.DateTimeZone dateTimeZone52 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str54 = dateTimeZone52.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime55 = org.joda.time.LocalDateTime.now(dateTimeZone52);
        org.joda.time.LocalDateTime.Property property56 = localDateTime55.millisOfDay();
        org.joda.time.LocalDateTime localDateTime58 = localDateTime55.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property59 = localDateTime58.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone60 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str62 = dateTimeZone60.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime63 = org.joda.time.LocalDateTime.now(dateTimeZone60);
        org.joda.time.LocalDateTime.Property property64 = localDateTime63.millisOfDay();
        org.joda.time.LocalDateTime localDateTime66 = localDateTime63.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime67 = localDateTime63.toDateTime();
        java.lang.String str68 = dateTime67.toString();
        org.joda.time.DateTime dateTime69 = localDateTime58.toDateTime((org.joda.time.ReadableInstant) dateTime67);
        boolean boolean70 = dateTime48.isAfter((org.joda.time.ReadableInstant) dateTime67);
        org.joda.time.DateTimeFieldType dateTimeFieldType71 = org.joda.time.DateTimeFieldType.era();
        boolean boolean72 = dateTime67.isSupported(dateTimeFieldType71);
        java.lang.Object obj73 = null;
        boolean boolean74 = dateTime67.equals(obj73);
        org.joda.time.DateTimeZone dateTimeZone75 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str77 = dateTimeZone75.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime78 = org.joda.time.LocalDateTime.now(dateTimeZone75);
        org.joda.time.LocalDateTime.Property property79 = localDateTime78.millisOfDay();
        org.joda.time.LocalDateTime localDateTime81 = localDateTime78.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime82 = localDateTime78.toDateTime();
        java.lang.String str83 = dateTime82.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType84 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int85 = dateTime82.get(dateTimeFieldType84);
        org.joda.time.Chronology chronology86 = dateTime82.getChronology();
        java.lang.Object obj87 = null;
        boolean boolean88 = dateTime82.equals(obj87);
        long long89 = dateTime82.getMillis();
        org.joda.time.Instant instant90 = dateTime82.toInstant();
        boolean boolean91 = dateTime67.isAfter((org.joda.time.ReadableInstant) instant90);
        org.joda.time.Instant instant92 = instant90.toInstant();
        int int93 = instant40.compareTo((org.joda.time.ReadableInstant) instant92);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime67 and instant92", (dateTime67.compareTo(instant92) == 0) == dateTime67.equals(instant92));
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test204");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.Chronology chronology12 = chronology11.withUTC();
        org.joda.time.DateTimeField dateTimeField13 = chronology12.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField14 = chronology12.hourOfHalfday();
        org.joda.time.DurationField durationField15 = chronology12.minutes();
        org.joda.time.DurationField durationField16 = chronology12.weekyears();
        org.joda.time.DateTimeField dateTimeField17 = chronology12.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField18 = chronology12.weekOfWeekyear();
        org.joda.time.DurationField durationField19 = chronology12.days();
        org.joda.time.DateTimeField dateTimeField20 = chronology12.minuteOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType21 = dateTimeField20.getType();
        org.joda.time.DurationFieldType durationFieldType22 = dateTimeFieldType21.getDurationType();
        org.joda.time.DateTimeZone dateTimeZone24 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str26 = dateTimeZone24.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime27 = org.joda.time.LocalDateTime.now(dateTimeZone24);
        org.joda.time.LocalDateTime.Property property28 = localDateTime27.millisOfDay();
        org.joda.time.LocalDateTime localDateTime30 = localDateTime27.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime31 = localDateTime27.toDateTime();
        java.lang.String str32 = dateTime31.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType33 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int34 = dateTime31.get(dateTimeFieldType33);
        org.joda.time.Chronology chronology35 = dateTime31.getChronology();
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str38 = dateTimeZone36.getShortName((long) (short) 10);
        long long40 = dateTimeZone36.convertUTCToLocal((long) ' ');
        java.lang.String str41 = dateTimeZone36.toString();
        boolean boolean43 = dateTimeZone36.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology44 = chronology35.withZone(dateTimeZone36);
        org.joda.time.DateTimeField dateTimeField45 = chronology35.yearOfCentury();
        org.joda.time.LocalDateTime localDateTime46 = new org.joda.time.LocalDateTime((long) 69, chronology35);
        org.joda.time.DurationField durationField47 = chronology35.weekyears();
        org.joda.time.DateTimeField dateTimeField48 = chronology35.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField49 = chronology35.centuryOfEra();
        org.joda.time.DurationField durationField50 = chronology35.millis();
        org.joda.time.DurationField durationField51 = durationFieldType22.getField(chronology35);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField16 and durationField47", (durationField16.compareTo(durationField47) == 0) == durationField16.equals(durationField47));
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test205");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.Chronology chronology12 = chronology11.withUTC();
        org.joda.time.DateTimeField dateTimeField13 = chronology12.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField14 = chronology12.hourOfHalfday();
        org.joda.time.DurationField durationField15 = chronology12.minutes();
        org.joda.time.DurationField durationField16 = chronology12.weekyears();
        org.joda.time.DateTimeField dateTimeField17 = chronology12.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField18 = chronology12.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField19 = chronology12.hourOfDay();
        org.joda.time.DateTimeZone dateTimeZone21 = org.joda.time.DateTimeZone.forOffsetMillis(61);
        org.joda.time.Chronology chronology22 = chronology12.withZone(dateTimeZone21);
        java.lang.String str23 = chronology22.toString();
        org.joda.time.DateTimeZone dateTimeZone24 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str26 = dateTimeZone24.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime27 = org.joda.time.LocalDateTime.now(dateTimeZone24);
        org.joda.time.LocalDateTime.Property property28 = localDateTime27.millisOfDay();
        org.joda.time.DurationFieldType durationFieldType29 = org.joda.time.DurationFieldType.centuries();
        boolean boolean30 = localDateTime27.equals((java.lang.Object) durationFieldType29);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray31 = localDateTime27.getFieldTypes();
        org.joda.time.LocalDateTime localDateTime33 = localDateTime27.plusMonths((int) (short) -1);
        int int34 = localDateTime27.getYearOfCentury();
        org.joda.time.LocalDateTime localDateTime36 = localDateTime27.minusMinutes(0);
        int int37 = localDateTime36.getWeekyear();
        org.joda.time.DateTimeFieldType dateTimeFieldType38 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone39 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str41 = dateTimeZone39.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime42 = org.joda.time.LocalDateTime.now(dateTimeZone39);
        org.joda.time.LocalDateTime.Property property43 = localDateTime42.millisOfDay();
        org.joda.time.LocalDateTime localDateTime45 = localDateTime42.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime46 = localDateTime42.toDateTime();
        java.lang.String str47 = dateTime46.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType48 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int49 = dateTime46.get(dateTimeFieldType48);
        org.joda.time.Chronology chronology50 = dateTime46.getChronology();
        org.joda.time.DateTimeZone dateTimeZone51 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str53 = dateTimeZone51.getShortName((long) (short) 10);
        long long55 = dateTimeZone51.convertUTCToLocal((long) ' ');
        java.lang.String str56 = dateTimeZone51.toString();
        boolean boolean58 = dateTimeZone51.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology59 = chronology50.withZone(dateTimeZone51);
        org.joda.time.DateTimeField dateTimeField60 = chronology59.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField61 = dateTimeFieldType38.getField(chronology59);
        org.joda.time.DurationField durationField62 = chronology59.seconds();
        org.joda.time.DurationField durationField63 = chronology59.weekyears();
        org.joda.time.DateTimeField dateTimeField64 = chronology59.hourOfHalfday();
        org.joda.time.DateTimeZone dateTimeZone65 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str67 = dateTimeZone65.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime68 = org.joda.time.LocalDateTime.now(dateTimeZone65);
        org.joda.time.LocalDateTime.Property property69 = localDateTime68.millisOfDay();
        org.joda.time.LocalDateTime localDateTime71 = localDateTime68.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime73 = localDateTime68.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime75 = localDateTime73.minusHours((int) (short) 10);
        int int76 = localDateTime73.getMinuteOfHour();
        org.joda.time.ReadablePeriod readablePeriod77 = null;
        org.joda.time.LocalDateTime localDateTime78 = localDateTime73.minus(readablePeriod77);
        int[] intArray80 = chronology59.get((org.joda.time.ReadablePartial) localDateTime73, (long) (byte) 100);
        org.joda.time.LocalDateTime localDateTime81 = new org.joda.time.LocalDateTime();
        java.lang.String str82 = localDateTime81.toString();
        int int83 = localDateTime81.getHourOfDay();
        org.joda.time.ReadablePeriod readablePeriod84 = null;
        org.joda.time.LocalDateTime localDateTime85 = localDateTime81.plus(readablePeriod84);
        org.joda.time.LocalDateTime localDateTime87 = localDateTime81.withCenturyOfEra(708);
        org.joda.time.LocalDateTime localDateTime89 = localDateTime87.minusMonths((int) (byte) -1);
        int[] intArray91 = chronology59.get((org.joda.time.ReadablePartial) localDateTime89, (long) 295);
        chronology22.validate((org.joda.time.ReadablePartial) localDateTime36, intArray91);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField16 and durationField63", (durationField16.compareTo(durationField63) == 0) == durationField16.equals(durationField63));
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test206");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime8 = localDateTime3.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime10 = localDateTime8.withMillisOfDay(53620101);
        org.joda.time.LocalDateTime localDateTime12 = localDateTime10.minusMonths((-1));
        org.joda.time.LocalDateTime localDateTime14 = localDateTime10.plusSeconds(0);
        org.joda.time.LocalDateTime.Property property15 = localDateTime14.centuryOfEra();
        org.joda.time.LocalDateTime localDateTime16 = property15.roundCeilingCopy();
        org.joda.time.LocalDateTime.Property property17 = localDateTime16.hourOfDay();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime25 = localDateTime21.toDateTime();
        long long26 = property17.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.DateTimeZone dateTimeZone27 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str29 = dateTimeZone27.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime30 = org.joda.time.LocalDateTime.now(dateTimeZone27);
        org.joda.time.LocalDateTime.Property property31 = localDateTime30.millisOfDay();
        org.joda.time.ReadableInstant readableInstant32 = null;
        long long33 = property31.getDifferenceAsLong(readableInstant32);
        java.util.Locale locale34 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str35 = locale34.getISO3Language();
        java.lang.String str36 = property31.getAsShortText(locale34);
        org.joda.time.LocalDateTime localDateTime38 = property31.addToCopy((int) '4');
        org.joda.time.LocalDateTime localDateTime39 = property31.roundHalfEvenCopy();
        org.joda.time.DateTime dateTime40 = localDateTime39.toDateTime();
        boolean boolean41 = dateTime25.isAfter((org.joda.time.ReadableInstant) dateTime40);
        java.lang.String str42 = dateTime25.toString();
        org.joda.time.Instant instant43 = dateTime25.toInstant();
        java.lang.String str44 = instant43.toString();
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now(dateTimeZone45);
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.millisOfDay();
        org.joda.time.LocalDateTime localDateTime51 = localDateTime48.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime53 = localDateTime48.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime55 = localDateTime53.withMillisOfDay(53620101);
        org.joda.time.LocalDateTime localDateTime57 = localDateTime55.minusMonths((-1));
        org.joda.time.LocalDateTime localDateTime59 = localDateTime55.plusSeconds(0);
        org.joda.time.LocalDateTime.Property property60 = localDateTime59.centuryOfEra();
        org.joda.time.LocalDateTime localDateTime61 = property60.roundCeilingCopy();
        org.joda.time.DateTimeZone dateTimeZone62 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str64 = dateTimeZone62.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime65 = org.joda.time.LocalDateTime.now(dateTimeZone62);
        org.joda.time.LocalDateTime.Property property66 = localDateTime65.millisOfDay();
        org.joda.time.LocalDateTime localDateTime68 = localDateTime65.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime69 = localDateTime65.toDateTime();
        java.lang.String str70 = dateTime69.toString();
        long long71 = dateTime69.getMillis();
        org.joda.time.Chronology chronology72 = dateTime69.getChronology();
        int int73 = property60.getDifference((org.joda.time.ReadableInstant) dateTime69);
        boolean boolean74 = instant43.isBefore((org.joda.time.ReadableInstant) dateTime69);
        org.joda.time.DateTimeZone dateTimeZone75 = dateTime69.getZone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime25 and instant43", (dateTime25.compareTo(instant43) == 0) == dateTime25.equals(instant43));
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test207");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        org.joda.time.DateTimeField dateTimeField22 = chronology21.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField23 = dateTimeFieldType0.getField(chronology21);
        org.joda.time.Chronology chronology24 = chronology21.withUTC();
        org.joda.time.DurationField durationField25 = chronology24.millis();
        org.joda.time.DurationField durationField26 = chronology24.weekyears();
        org.joda.time.DateTimeField dateTimeField27 = chronology24.dayOfYear();
        org.joda.time.DateTimeField dateTimeField28 = chronology24.yearOfEra();
        org.joda.time.DurationField durationField29 = dateTimeField28.getDurationField();
        org.joda.time.DurationField durationField30 = dateTimeField28.getRangeDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField26 and durationField29", (durationField26.compareTo(durationField29) == 0) == durationField26.equals(durationField29));
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test208");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        java.lang.String str5 = property4.getName();
        org.joda.time.LocalDateTime localDateTime6 = property4.roundHalfFloorCopy();
        org.joda.time.LocalDateTime localDateTime7 = property4.withMinimumValue();
        org.joda.time.LocalDateTime localDateTime9 = localDateTime7.withMinuteOfHour(4);
        org.joda.time.LocalDateTime.Property property10 = localDateTime7.era();
        org.joda.time.DateTimeZone dateTimeZone11 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str13 = dateTimeZone11.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime14 = org.joda.time.LocalDateTime.now(dateTimeZone11);
        org.joda.time.LocalDateTime.Property property15 = localDateTime14.millisOfDay();
        org.joda.time.LocalDateTime localDateTime17 = localDateTime14.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property18 = localDateTime17.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone19 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str21 = dateTimeZone19.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now(dateTimeZone19);
        org.joda.time.LocalDateTime.Property property23 = localDateTime22.millisOfDay();
        org.joda.time.LocalDateTime localDateTime25 = localDateTime22.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime26 = localDateTime22.toDateTime();
        java.lang.String str27 = dateTime26.toString();
        org.joda.time.DateTime dateTime28 = localDateTime17.toDateTime((org.joda.time.ReadableInstant) dateTime26);
        org.joda.time.DateTimeZone dateTimeZone29 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str31 = dateTimeZone29.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime32 = org.joda.time.LocalDateTime.now(dateTimeZone29);
        org.joda.time.LocalDateTime.Property property33 = localDateTime32.millisOfDay();
        org.joda.time.LocalDateTime localDateTime35 = localDateTime32.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime36 = localDateTime32.toDateTime();
        java.lang.String str37 = dateTime36.toString();
        int int38 = dateTime26.compareTo((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        boolean boolean40 = dateTime26.isEqual(readableInstant39);
        org.joda.time.Instant instant41 = dateTime26.toInstant();
        int int42 = property10.compareTo((org.joda.time.ReadableInstant) instant41);
        java.lang.String str43 = property10.getName();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime26 and instant41", (dateTime26.compareTo(instant41) == 0) == dateTime26.equals(instant41));
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test209");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.DurationField durationField12 = chronology11.weekyears();
        org.joda.time.DurationField durationField13 = chronology11.years();
        org.joda.time.DurationField durationField14 = chronology11.months();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField12 and durationField13", (durationField12.compareTo(durationField13) == 0) == durationField12.equals(durationField13));
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test210");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.withYear((int) (short) 100);
        org.joda.time.LocalDateTime.Property property7 = localDateTime6.minuteOfHour();
        org.joda.time.DateTimeZone dateTimeZone8 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str10 = dateTimeZone8.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now(dateTimeZone8);
        org.joda.time.LocalDateTime.Property property12 = localDateTime11.millisOfDay();
        org.joda.time.LocalDateTime localDateTime14 = localDateTime11.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime15 = localDateTime11.toDateTime();
        java.lang.String str16 = dateTime15.toString();
        org.joda.time.DateTime dateTime17 = localDateTime6.toDateTime((org.joda.time.ReadableInstant) dateTime15);
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime25 = localDateTime21.toDateTime();
        java.lang.String str26 = dateTime25.toString();
        int int27 = dateTime15.compareTo((org.joda.time.ReadableInstant) dateTime25);
        java.lang.String str28 = dateTime25.toString();
        org.joda.time.DateTimeZone dateTimeZone29 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str31 = dateTimeZone29.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime32 = org.joda.time.LocalDateTime.now(dateTimeZone29);
        org.joda.time.LocalDateTime.Property property33 = localDateTime32.millisOfDay();
        org.joda.time.LocalDateTime localDateTime35 = localDateTime32.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime36 = localDateTime32.toDateTime();
        java.lang.String str37 = dateTime36.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType38 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int39 = dateTime36.get(dateTimeFieldType38);
        org.joda.time.Chronology chronology40 = dateTime36.getChronology();
        java.lang.Object obj41 = null;
        boolean boolean42 = dateTime36.equals(obj41);
        long long43 = dateTime36.getMillis();
        org.joda.time.Instant instant44 = dateTime36.toInstant();
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now(dateTimeZone45);
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.millisOfDay();
        java.lang.String str50 = property49.getName();
        int int51 = property49.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType52 = property49.getFieldType();
        org.joda.time.LocalDateTime localDateTime53 = property49.withMinimumValue();
        org.joda.time.LocalDateTime.Property property54 = localDateTime53.weekOfWeekyear();
        boolean boolean55 = dateTime36.equals((java.lang.Object) property54);
        org.joda.time.DateTimeZone dateTimeZone56 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str58 = dateTimeZone56.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime59 = org.joda.time.LocalDateTime.now(dateTimeZone56);
        org.joda.time.LocalDateTime.Property property60 = localDateTime59.millisOfDay();
        org.joda.time.LocalDateTime localDateTime62 = localDateTime59.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime63 = localDateTime59.toDateTime();
        java.lang.String str64 = dateTime63.toString();
        org.joda.time.DateTimeZone dateTimeZone65 = dateTime63.getZone();
        long long66 = dateTime63.getMillis();
        int int67 = dateTime36.compareTo((org.joda.time.ReadableInstant) dateTime63);
        org.joda.time.DateTimeFieldType dateTimeFieldType68 = org.joda.time.DateTimeFieldType.yearOfEra();
        boolean boolean69 = dateTime36.isSupported(dateTimeFieldType68);
        boolean boolean70 = dateTime25.isBefore((org.joda.time.ReadableInstant) dateTime36);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime15 and instant44", (dateTime15.compareTo(instant44) == 0) == dateTime15.equals(instant44));
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test211");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.ReadableInstant readableInstant5 = null;
        long long6 = property4.getDifferenceAsLong(readableInstant5);
        java.util.Locale locale7 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str8 = locale7.getISO3Language();
        java.lang.String str9 = property4.getAsShortText(locale7);
        org.joda.time.DurationField durationField10 = property4.getLeapDurationField();
        java.util.Locale locale11 = java.util.Locale.ROOT;
        java.util.Set<java.lang.String> strSet12 = locale11.getUnicodeLocaleAttributes();
        int int13 = property4.getMaximumTextLength(locale11);
        org.joda.time.LocalDateTime localDateTime14 = property4.getLocalDateTime();
        org.joda.time.Interval interval15 = property4.toInterval();
        java.lang.String str16 = property4.getAsText();
        boolean boolean17 = property4.isLeap();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str20 = dateTimeZone18.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(dateTimeZone18);
        org.joda.time.LocalDateTime.Property property22 = localDateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime21.withYear((int) (short) 100);
        org.joda.time.LocalDateTime localDateTime26 = localDateTime21.plusHours((int) ' ');
        org.joda.time.LocalDateTime localDateTime28 = localDateTime26.withMillisOfDay(53620101);
        org.joda.time.LocalDateTime localDateTime30 = localDateTime28.minusMonths((-1));
        org.joda.time.LocalDateTime localDateTime32 = localDateTime28.plusSeconds(0);
        org.joda.time.LocalDateTime.Property property33 = localDateTime32.centuryOfEra();
        org.joda.time.LocalDateTime localDateTime34 = property33.roundCeilingCopy();
        org.joda.time.LocalDateTime.Property property35 = localDateTime34.hourOfDay();
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str38 = dateTimeZone36.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime39 = org.joda.time.LocalDateTime.now(dateTimeZone36);
        org.joda.time.LocalDateTime.Property property40 = localDateTime39.millisOfDay();
        org.joda.time.LocalDateTime localDateTime42 = localDateTime39.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime43 = localDateTime39.toDateTime();
        long long44 = property35.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str47 = dateTimeZone45.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now(dateTimeZone45);
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.millisOfDay();
        org.joda.time.ReadableInstant readableInstant50 = null;
        long long51 = property49.getDifferenceAsLong(readableInstant50);
        java.util.Locale locale52 = java.util.Locale.CANADA_FRENCH;
        java.lang.String str53 = locale52.getISO3Language();
        java.lang.String str54 = property49.getAsShortText(locale52);
        org.joda.time.LocalDateTime localDateTime56 = property49.addToCopy((int) '4');
        org.joda.time.LocalDateTime localDateTime57 = property49.roundHalfEvenCopy();
        org.joda.time.DateTime dateTime58 = localDateTime57.toDateTime();
        boolean boolean59 = dateTime43.isAfter((org.joda.time.ReadableInstant) dateTime58);
        java.lang.String str60 = dateTime43.toString();
        org.joda.time.Instant instant61 = dateTime43.toInstant();
        java.lang.String str62 = instant61.toString();
        int int63 = property4.getDifference((org.joda.time.ReadableInstant) instant61);
        int int64 = property4.getMaximumValue();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime43 and instant61", (dateTime43.compareTo(instant61) == 0) == dateTime43.equals(instant61));
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test212");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str2 = dateTimeZone0.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime3 = org.joda.time.LocalDateTime.now(dateTimeZone0);
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.millisOfDay();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime3.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime7 = localDateTime3.toDateTime();
        java.lang.String str8 = dateTime7.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int10 = dateTime7.get(dateTimeFieldType9);
        org.joda.time.Chronology chronology11 = dateTime7.getChronology();
        org.joda.time.Chronology chronology12 = chronology11.withUTC();
        org.joda.time.DateTimeField dateTimeField13 = chronology12.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField14 = chronology12.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField15 = chronology12.monthOfYear();
        org.joda.time.DateTimeField dateTimeField16 = chronology12.year();
        org.joda.time.DurationField durationField17 = chronology12.eras();
        org.joda.time.ReadablePeriod readablePeriod18 = null;
        long long21 = chronology12.add(readablePeriod18, 1645455342256L, 508);
        org.joda.time.DurationField durationField22 = chronology12.minutes();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField17, durationField22, and durationField17", !(durationField17.compareTo(durationField22) == 0) || (Math.signum(durationField17.compareTo(durationField17)) == Math.signum(durationField22.compareTo(durationField17))));
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test213");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.weekyear();
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str3 = dateTimeZone1.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now(dateTimeZone1);
        org.joda.time.LocalDateTime.Property property5 = localDateTime4.millisOfDay();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime4.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime8 = localDateTime4.toDateTime();
        java.lang.String str9 = dateTime8.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int11 = dateTime8.get(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str15 = dateTimeZone13.getShortName((long) (short) 10);
        long long17 = dateTimeZone13.convertUTCToLocal((long) ' ');
        java.lang.String str18 = dateTimeZone13.toString();
        boolean boolean20 = dateTimeZone13.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology21 = chronology12.withZone(dateTimeZone13);
        boolean boolean22 = dateTimeFieldType0.isSupported(chronology21);
        org.joda.time.DateTimeZone dateTimeZone23 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str25 = dateTimeZone23.getShortName((long) (short) 10);
        org.joda.time.LocalDateTime localDateTime26 = org.joda.time.LocalDateTime.now(dateTimeZone23);
        org.joda.time.LocalDateTime.Property property27 = localDateTime26.millisOfDay();
        org.joda.time.LocalDateTime localDateTime29 = localDateTime26.plusMonths((int) (byte) 100);
        org.joda.time.DateTime dateTime30 = localDateTime26.toDateTime();
        java.lang.String str31 = dateTime30.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType32 = org.joda.time.DateTimeFieldType.dayOfMonth();
        int int33 = dateTime30.get(dateTimeFieldType32);
        org.joda.time.Chronology chronology34 = dateTime30.getChronology();
        org.joda.time.DateTimeZone dateTimeZone35 = org.joda.time.DateTimeZone.getDefault();
        java.lang.String str37 = dateTimeZone35.getShortName((long) (short) 10);
        long long39 = dateTimeZone35.convertUTCToLocal((long) ' ');
        java.lang.String str40 = dateTimeZone35.toString();
        boolean boolean42 = dateTimeZone35.equals((java.lang.Object) (short) 100);
        org.joda.time.Chronology chronology43 = chronology34.withZone(dateTimeZone35);
        org.joda.time.DurationField durationField44 = chronology34.weekyears();
        org.joda.time.DateTimeField dateTimeField45 = chronology34.dayOfYear();
        org.joda.time.DurationField durationField46 = chronology34.weeks();
        org.joda.time.DateTimeField dateTimeField47 = chronology34.yearOfEra();
        org.joda.time.DateTimeField dateTimeField48 = chronology34.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField49 = dateTimeFieldType0.getField(chronology34);
        org.joda.time.LocalDateTime localDateTime50 = new org.joda.time.LocalDateTime(chronology34);
        org.joda.time.Chronology chronology51 = chronology34.withUTC();
        org.joda.time.DurationField durationField52 = chronology51.weekyears();
        org.joda.time.DurationField durationField53 = chronology51.weeks();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField44 and durationField52", (durationField44.compareTo(durationField52) == 0) == durationField44.equals(durationField52));
    }
}

