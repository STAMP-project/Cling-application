import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ErrorTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0501");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.Duration duration7 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period8 = duration7.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray9 = period8.getFieldTypes();
        int int10 = period8.getMinutes();
        org.joda.time.Period period12 = period8.withDays((int) ' ');
        org.joda.time.Period period14 = period8.plusWeeks(10);
        org.joda.time.Period period16 = period8.minusMillis((int) (short) 1);
        org.joda.time.DateTime dateTime17 = dateTime2.minus((org.joda.time.ReadablePeriod) period8);
        org.joda.time.DateTime.Property property18 = dateTime2.yearOfCentury();
        org.joda.time.DateTime dateTime19 = property18.withMaximumValue();
        org.joda.time.DurationField durationField20 = property18.getDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0502");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        long long16 = dateTime2.getMillis();
        org.joda.time.DurationFieldType durationFieldType17 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone21 = null;
        org.joda.time.DateTime dateTime22 = dateTime20.withZoneRetainFields(dateTimeZone21);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        org.joda.time.DateTime.Property property26 = dateTime25.era();
        org.joda.time.DateTime dateTime27 = dateTime25.withTimeAtStartOfDay();
        org.joda.time.Duration duration30 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration30, readableInstant31, periodType32);
        mutablePeriod33.setMonths((int) '4');
        org.joda.time.DateTime dateTime36 = dateTime25.plus((org.joda.time.ReadablePeriod) mutablePeriod33);
        org.joda.time.DateTime dateTime38 = dateTime25.minusWeeks((int) (byte) 1);
        int int39 = dateTime22.compareTo((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.DateTime.Property property40 = dateTime25.minuteOfHour();
        org.joda.time.DateTime dateTime42 = dateTime25.withYear(1969);
        org.joda.time.Chronology chronology43 = dateTime42.getChronology();
        org.joda.time.DurationField durationField44 = durationFieldType17.getField(chronology43);
        org.joda.time.DateTime dateTime45 = dateTime2.toDateTime(chronology43);
        org.joda.time.DateTime dateTime47 = dateTime45.plusMillis((int) (short) 0);
        int int48 = dateTime47.getHourOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime47", (instant1.compareTo(dateTime47) == 0) == instant1.equals(dateTime47));
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0503");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property16 = dateTime15.monthOfYear();
        org.joda.time.DateTime dateTime17 = property16.roundHalfEvenCopy();
        org.joda.time.DateTimeFieldType dateTimeFieldType18 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.DateTimeField dateTimeField20 = dateTimeFieldType18.getField(chronology19);
        long long23 = dateTimeField20.add(0L, (long) (short) 1);
        boolean boolean25 = dateTimeField20.isLeap(10L);
        int int26 = dateTimeField20.getMinimumValue();
        long long28 = dateTimeField20.roundHalfEven((long) (byte) 1);
        java.util.Locale locale29 = java.util.Locale.GERMAN;
        java.util.Locale.setDefault(locale29);
        java.util.Set<java.lang.String> strSet31 = locale29.getUnicodeLocaleKeys();
        int int32 = dateTimeField20.getMaximumTextLength(locale29);
        java.lang.String str33 = property16.getAsText(locale29);
        long long34 = property16.remainder();
        int int35 = property16.getMaximumValue();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0504");
        java.lang.Object obj0 = null;
        org.joda.time.Instant instant1 = new org.joda.time.Instant(obj0);
        org.joda.time.DateTimeZone dateTimeZone2 = instant1.getZone();
        java.lang.String str3 = dateTimeZone2.toString();
        int int5 = dateTimeZone2.getOffset(1L);
        boolean boolean7 = dateTimeZone2.isStandardOffset(0L);
        java.lang.String str9 = dateTimeZone2.getNameKey((long) 1);
        org.joda.time.DateTime dateTime10 = new org.joda.time.DateTime(dateTimeZone2);
        java.util.TimeZone timeZone11 = null;
        org.joda.time.DateTimeZone dateTimeZone12 = org.joda.time.DateTimeZone.forTimeZone(timeZone11);
        int int14 = dateTimeZone12.getOffset((long) 365);
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone18 = null;
        org.joda.time.DateTime dateTime19 = dateTime17.withZone(dateTimeZone18);
        org.joda.time.Instant instant21 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime22 = instant21.toDateTime();
        org.joda.time.DateTime.Property property23 = dateTime22.era();
        org.joda.time.DateTime dateTime24 = dateTime22.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType25 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean26 = dateTime22.isSupported(dateTimeFieldType25);
        org.joda.time.DateTime.Property property27 = dateTime17.property(dateTimeFieldType25);
        org.joda.time.DateTimeZone dateTimeZone28 = dateTime17.getZone();
        org.joda.time.LocalDateTime localDateTime29 = dateTime17.toLocalDateTime();
        boolean boolean30 = dateTimeZone12.isLocalDateTimeGap(localDateTime29);
        boolean boolean31 = dateTimeZone2.isLocalDateTimeGap(localDateTime29);
        int int33 = dateTimeZone2.getOffset((long) (-100));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant16 and dateTime17", (instant16.compareTo(dateTime17) == 0) == instant16.equals(dateTime17));
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0505");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period3 = period1.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration5 = period3.toDurationTo(readableInstant4);
        org.joda.time.Duration duration8 = duration5.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = duration8.toPeriodFrom(readableInstant9);
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTime.Property property14 = dateTime13.era();
        org.joda.time.Duration duration17 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration20 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period21 = duration20.toPeriod();
        org.joda.time.Duration duration23 = duration20.plus((long) (byte) 0);
        org.joda.time.Instant instant25 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime26 = instant25.toDateTime();
        boolean boolean28 = dateTime26.isEqual(10L);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType31, chronology32);
        org.joda.time.PeriodType periodType34 = periodType31.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, (org.joda.time.ReadableInstant) dateTime26, periodType34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime13, (org.joda.time.ReadableDuration) duration17, periodType34);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration8.toPeriod(periodType34, chronology37);
        org.joda.time.Hours hours39 = org.joda.time.Hours.TWO;
        org.joda.time.DateTimeFieldType dateTimeFieldType40 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DurationFieldType durationFieldType41 = dateTimeFieldType40.getDurationType();
        boolean boolean42 = hours39.isSupported(durationFieldType41);
        boolean boolean43 = periodType34.isSupported(durationFieldType41);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.DateTime dateTime45 = new org.joda.time.DateTime(chronology44);
        org.joda.time.DateTime.Property property46 = dateTime45.yearOfEra();
        org.joda.time.Interval interval47 = property46.toInterval();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.DateTime dateTime49 = new org.joda.time.DateTime(chronology48);
        org.joda.time.DateTime.Property property50 = dateTime49.yearOfEra();
        org.joda.time.Interval interval51 = property50.toInterval();
        boolean boolean52 = interval47.contains((org.joda.time.ReadableInterval) interval51);
        org.joda.time.Chronology chronology53 = interval51.getChronology();
        org.joda.time.DurationField durationField54 = chronology53.weeks();
        org.joda.time.DateTimeField dateTimeField55 = chronology53.minuteOfDay();
        org.joda.time.DurationField durationField56 = chronology53.weekyears();
        org.joda.time.DurationField durationField57 = durationFieldType41.getField(chronology53);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime13", (instant12.compareTo(dateTime13) == 0) == instant12.equals(dateTime13));
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0506");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.DateTime dateTime6 = dateTime2.withWeekOfWeekyear(8);
        org.joda.time.DateTime dateTime8 = dateTime2.plusDays(100);
        org.joda.time.DateTime dateTime10 = dateTime2.withMonthOfYear((int) (byte) 10);
        int int11 = dateTime10.getYearOfCentury();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0507");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTimeField dateTimeField2 = dateTimeFieldType0.getField(chronology1);
        long long5 = dateTimeField2.add(0L, (long) (short) 1);
        long long7 = dateTimeField2.roundHalfCeiling((long) 2);
        org.joda.time.Instant instant9 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime10 = instant9.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone11 = null;
        org.joda.time.DateTime dateTime12 = dateTime10.withZone(dateTimeZone11);
        org.joda.time.Instant instant14 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant14.toDateTime();
        org.joda.time.DateTime.Property property16 = dateTime15.era();
        org.joda.time.DateTime dateTime17 = dateTime15.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType18 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean19 = dateTime15.isSupported(dateTimeFieldType18);
        org.joda.time.DateTime.Property property20 = dateTime10.property(dateTimeFieldType18);
        org.joda.time.DateTimeZone dateTimeZone21 = dateTime10.getZone();
        org.joda.time.LocalDateTime localDateTime22 = dateTime10.toLocalDateTime();
        int int23 = localDateTime22.size();
        org.joda.time.Instant instant25 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime26 = instant25.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone27 = null;
        org.joda.time.DateTime dateTime28 = dateTime26.withZone(dateTimeZone27);
        org.joda.time.Instant instant30 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime31 = instant30.toDateTime();
        org.joda.time.DateTime.Property property32 = dateTime31.era();
        org.joda.time.DateTime dateTime33 = dateTime31.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType34 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean35 = dateTime31.isSupported(dateTimeFieldType34);
        org.joda.time.DateTime.Property property36 = dateTime26.property(dateTimeFieldType34);
        org.joda.time.DateTimeZone dateTimeZone37 = dateTime26.getZone();
        org.joda.time.LocalDateTime localDateTime38 = dateTime26.toLocalDateTime();
        int int39 = localDateTime38.size();
        org.joda.time.Days days40 = org.joda.time.Days.daysBetween((org.joda.time.ReadablePartial) localDateTime22, (org.joda.time.ReadablePartial) localDateTime38);
        org.joda.time.format.PeriodPrinter periodPrinter41 = null;
        org.joda.time.format.PeriodParser periodParser42 = null;
        org.joda.time.format.PeriodFormatter periodFormatter43 = new org.joda.time.format.PeriodFormatter(periodPrinter41, periodParser42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.format.PeriodFormatter periodFormatter45 = periodFormatter43.withParseType(periodType44);
        java.util.Locale locale46 = periodFormatter43.getLocale();
        java.util.Locale locale47 = java.util.Locale.ITALY;
        java.lang.String str48 = locale47.getScript();
        org.joda.time.format.PeriodFormatter periodFormatter49 = periodFormatter43.withLocale(locale47);
        org.joda.time.format.PeriodPrinter periodPrinter50 = null;
        org.joda.time.format.PeriodParser periodParser51 = null;
        org.joda.time.format.PeriodFormatter periodFormatter52 = new org.joda.time.format.PeriodFormatter(periodPrinter50, periodParser51);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.format.PeriodFormatter periodFormatter54 = periodFormatter52.withParseType(periodType53);
        java.util.Locale locale55 = periodFormatter52.getLocale();
        java.util.Locale locale56 = java.util.Locale.ITALY;
        java.lang.String str57 = locale56.getScript();
        org.joda.time.format.PeriodFormatter periodFormatter58 = periodFormatter52.withLocale(locale56);
        java.util.Locale locale59 = locale56.stripExtensions();
        org.joda.time.format.PeriodFormatter periodFormatter60 = periodFormatter49.withLocale(locale59);
        java.lang.String str61 = dateTimeField2.getAsText((org.joda.time.ReadablePartial) localDateTime38, locale59);
        java.lang.String str62 = locale59.getDisplayLanguage();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime10", (instant9.compareTo(dateTime10) == 0) == instant9.equals(dateTime10));
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0508");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Instant instant2 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime3 = instant2.toDateTime();
        org.joda.time.DateTime.Property property4 = dateTime3.era();
        org.joda.time.DateTime dateTime5 = dateTime3.withTimeAtStartOfDay();
        org.joda.time.Duration duration8 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration8, readableInstant9, periodType10);
        mutablePeriod11.setMonths((int) '4');
        org.joda.time.DateTime dateTime14 = dateTime3.plus((org.joda.time.ReadablePeriod) mutablePeriod11);
        org.joda.time.DateTime dateTime16 = dateTime3.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property17 = dateTime16.monthOfYear();
        org.joda.time.DateTime.Property property18 = dateTime16.weekyear();
        org.joda.time.DateTime dateTime19 = dateTime16.toDateTime();
        org.joda.time.DateTime dateTime21 = dateTime16.plusHours((int) 'u');
        org.joda.time.DateTime dateTime23 = dateTime21.plusYears(3);
        org.joda.time.Instant instant24 = dateTime23.toInstant();
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableInstant) dateTime23);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime3", (instant2.compareTo(dateTime3) == 0) == instant2.equals(dateTime3));
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0509");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.DateTime dateTime6 = dateTime2.withCenturyOfEra((int) (byte) 1);
        org.joda.time.DateTimeFieldType dateTimeFieldType7 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.DateTimeField dateTimeField9 = dateTimeFieldType7.getField(chronology8);
        long long12 = dateTimeField9.add(0L, (long) (short) 1);
        long long15 = dateTimeField9.add(1L, (-1));
        int int16 = dateTime2.get(dateTimeField9);
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime19 = instant18.toDateTime();
        org.joda.time.DateTime.Property property20 = dateTime19.era();
        org.joda.time.DateTime dateTime21 = dateTime19.withTimeAtStartOfDay();
        org.joda.time.Duration duration24 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration24, readableInstant25, periodType26);
        mutablePeriod27.setMonths((int) '4');
        org.joda.time.DateTime dateTime30 = dateTime19.plus((org.joda.time.ReadablePeriod) mutablePeriod27);
        org.joda.time.DateTime dateTime32 = dateTime19.minusWeeks((int) (byte) 1);
        long long33 = dateTime19.getMillis();
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime37 = instant36.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone38 = null;
        org.joda.time.DateTime dateTime39 = dateTime37.withZoneRetainFields(dateTimeZone38);
        org.joda.time.Instant instant41 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime42 = instant41.toDateTime();
        org.joda.time.DateTime.Property property43 = dateTime42.era();
        org.joda.time.DateTime dateTime44 = dateTime42.withTimeAtStartOfDay();
        org.joda.time.Duration duration47 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.PeriodType periodType49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration47, readableInstant48, periodType49);
        mutablePeriod50.setMonths((int) '4');
        org.joda.time.DateTime dateTime53 = dateTime42.plus((org.joda.time.ReadablePeriod) mutablePeriod50);
        org.joda.time.DateTime dateTime55 = dateTime42.minusWeeks((int) (byte) 1);
        int int56 = dateTime39.compareTo((org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.DateTime.Property property57 = dateTime42.minuteOfHour();
        org.joda.time.DateTime dateTime59 = dateTime42.withYear(1969);
        org.joda.time.Chronology chronology60 = dateTime59.getChronology();
        org.joda.time.DurationField durationField61 = durationFieldType34.getField(chronology60);
        org.joda.time.DateTime dateTime62 = dateTime19.toDateTime(chronology60);
        org.joda.time.DateTime dateTime63 = dateTime2.toDateTime(chronology60);
        org.joda.time.DateTimeField dateTimeField64 = chronology60.millisOfDay();
        org.joda.time.Instant instant66 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime67 = instant66.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone68 = null;
        org.joda.time.DateTime dateTime69 = dateTime67.withZoneRetainFields(dateTimeZone68);
        org.joda.time.Instant instant71 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime72 = instant71.toDateTime();
        org.joda.time.DateTime.Property property73 = dateTime72.era();
        org.joda.time.DateTime dateTime74 = dateTime72.withTimeAtStartOfDay();
        org.joda.time.Duration duration77 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.PeriodType periodType79 = null;
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration77, readableInstant78, periodType79);
        mutablePeriod80.setMonths((int) '4');
        org.joda.time.DateTime dateTime83 = dateTime72.plus((org.joda.time.ReadablePeriod) mutablePeriod80);
        org.joda.time.DateTime dateTime85 = dateTime72.minusWeeks((int) (byte) 1);
        int int86 = dateTime69.compareTo((org.joda.time.ReadableInstant) dateTime72);
        org.joda.time.DateTime.Property property87 = dateTime72.minuteOfHour();
        org.joda.time.DateTime dateTime89 = dateTime72.withYear(1969);
        boolean boolean91 = dateTime89.isAfter((long) (short) -1);
        int int92 = dateTime89.getWeekyear();
        org.joda.time.DateTime dateTime93 = dateTime89.withEarlierOffsetAtOverlap();
        org.joda.time.DateTimeZone dateTimeZone94 = dateTime93.getZone();
        org.joda.time.Chronology chronology95 = chronology60.withZone(dateTimeZone94);
        org.joda.time.DateTimeField dateTimeField96 = chronology95.monthOfYear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0510");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.DateMidnight dateMidnight6 = dateTime2.toDateMidnight();
        org.joda.time.DateTime dateTime9 = dateTime2.withDurationAdded(0L, (int) 'a');
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period13 = duration12.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray14 = period13.getFieldTypes();
        org.joda.time.Period period16 = period13.minusYears((int) (byte) 1);
        org.joda.time.Period period18 = period13.plusMonths((int) (byte) 0);
        int int19 = period13.size();
        org.joda.time.Period period21 = period13.plusYears(100);
        org.joda.time.Period period23 = period13.minusSeconds(292278993);
        org.joda.time.Duration duration26 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration26, readableInstant27, periodType28);
        mutablePeriod29.addDays((int) (short) 100);
        org.joda.time.DurationFieldType durationFieldType32 = org.joda.time.DurationFieldType.days();
        mutablePeriod29.add(durationFieldType32, 8);
        boolean boolean35 = period13.isSupported(durationFieldType32);
        org.joda.time.DateTime dateTime37 = dateTime2.withFieldAdded(durationFieldType32, (-2147483648));
        org.joda.time.Instant instant39 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime40 = instant39.toDateTime();
        org.joda.time.DateTime.Property property41 = dateTime40.era();
        org.joda.time.DateTime dateTime42 = property41.withMinimumValue();
        int int43 = property41.getMaximumValueOverall();
        java.util.Locale locale44 = java.util.Locale.ENGLISH;
        java.lang.String str45 = locale44.getScript();
        java.lang.String str46 = locale44.getDisplayCountry();
        int int47 = property41.getMaximumShortTextLength(locale44);
        org.joda.time.DateTime dateTime48 = property41.withMaximumValue();
        org.joda.time.LocalTime localTime49 = dateTime48.toLocalTime();
        org.joda.time.DateTimeZone dateTimeZone50 = dateTime48.getZone();
        int int52 = dateTimeZone50.getOffsetFromLocal(0L);
        org.joda.time.DateTime dateTime53 = new org.joda.time.DateTime(dateTimeZone50);
        int int54 = dateTime37.compareTo((org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.Instant instant56 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime57 = instant56.toDateTime();
        org.joda.time.DateTime.Property property58 = dateTime57.era();
        org.joda.time.MutableDateTime mutableDateTime59 = dateTime57.toMutableDateTime();
        org.joda.time.DateTime.Property property60 = dateTime57.minuteOfDay();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.DateTime dateTime62 = new org.joda.time.DateTime(chronology61);
        org.joda.time.DateTime.Property property63 = dateTime62.yearOfEra();
        org.joda.time.Interval interval64 = property63.toInterval();
        org.joda.time.DateTime dateTime65 = interval64.getStart();
        org.joda.time.DateTime dateTime66 = dateTime65.toDateTimeISO();
        org.joda.time.Instant instant67 = dateTime65.toInstant();
        int int68 = property60.getDifference((org.joda.time.ReadableInstant) instant67);
        org.joda.time.Chronology chronology69 = instant67.getChronology();
        org.joda.time.Minutes minutes70 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration71 = minutes70.toStandardDuration();
        org.joda.time.Instant instant73 = instant67.withDurationAdded((org.joda.time.ReadableDuration) duration71, 70);
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardHours((long) 70);
        org.joda.time.Instant instant76 = instant67.plus((org.joda.time.ReadableDuration) duration75);
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime53, (org.joda.time.ReadableInstant) instant76);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0511");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int9 = mutablePeriod8.getDays();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        org.joda.time.DateTime.Property property14 = dateTime13.yearOfEra();
        org.joda.time.Interval interval15 = property14.toInterval();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.DateTime dateTime17 = new org.joda.time.DateTime(chronology16);
        org.joda.time.DateTime.Property property18 = dateTime17.yearOfEra();
        org.joda.time.Interval interval19 = property18.toInterval();
        boolean boolean20 = interval15.contains((org.joda.time.ReadableInterval) interval19);
        org.joda.time.Chronology chronology21 = interval19.getChronology();
        mutablePeriod8.setPeriod((long) 'u', (long) 1969, chronology21);
        org.joda.time.DateTimeField dateTimeField23 = chronology21.millisOfDay();
        org.joda.time.DateTimeField dateTimeField24 = chronology21.yearOfCentury();
        org.joda.time.Duration duration27 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds28 = duration27.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration29 = null;
        boolean boolean30 = duration27.isEqual(readableDuration29);
        org.joda.time.Duration duration32 = duration27.minus((long) 1);
        org.joda.time.Duration duration34 = duration32.minus((long) '4');
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime37 = instant36.toDateTime();
        org.joda.time.DateTime.Property property38 = dateTime37.era();
        org.joda.time.Duration duration41 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration44 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period45 = duration44.toPeriod();
        org.joda.time.Duration duration47 = duration44.plus((long) (byte) 0);
        org.joda.time.Instant instant49 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime50 = instant49.toDateTime();
        boolean boolean52 = dateTime50.isEqual(10L);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType55, chronology56);
        org.joda.time.PeriodType periodType58 = periodType55.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration47, (org.joda.time.ReadableInstant) dateTime50, periodType58);
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime37, (org.joda.time.ReadableDuration) duration41, periodType58);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, (org.joda.time.ReadableInstant) dateTime37, periodType61);
        org.joda.time.TimeOfDay timeOfDay63 = dateTime37.toTimeOfDay();
        int[] intArray65 = chronology21.get((org.joda.time.ReadablePartial) timeOfDay63, (long) (-1));
        org.joda.time.DateTimeField dateTimeField66 = chronology21.secondOfMinute();
        org.joda.time.DurationField durationField67 = dateTimeField66.getRangeDurationField();
        java.lang.String str69 = dateTimeField66.getAsText((long) 120);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant36 and dateTime37", (instant36.compareTo(dateTime37) == 0) == instant36.equals(dateTime37));
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0512");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant3, periodType4);
        org.joda.time.Days days6 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType7 = org.joda.time.DurationFieldType.minutes();
        int int8 = days6.get(durationFieldType7);
        mutablePeriod5.add(durationFieldType7, 8);
        int int11 = mutablePeriod5.getHours();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        org.joda.time.DateTime.Property property14 = dateTime13.yearOfEra();
        org.joda.time.Interval interval15 = property14.toInterval();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.DateTime dateTime17 = new org.joda.time.DateTime(chronology16);
        org.joda.time.DateTime.Property property18 = dateTime17.yearOfEra();
        org.joda.time.Interval interval19 = property18.toInterval();
        boolean boolean20 = interval15.contains((org.joda.time.ReadableInterval) interval19);
        java.lang.String str21 = interval15.toString();
        mutablePeriod5.add((org.joda.time.ReadableInterval) interval15);
        int int23 = mutablePeriod5.getMillis();
        mutablePeriod5.setPeriod((long) (byte) 10);
        mutablePeriod5.addSeconds(100);
        org.joda.time.Instant instant30 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime31 = instant30.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone32 = null;
        org.joda.time.DateTime dateTime33 = dateTime31.withZoneRetainFields(dateTimeZone32);
        org.joda.time.Instant instant35 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime36 = instant35.toDateTime();
        org.joda.time.DateTime.Property property37 = dateTime36.era();
        org.joda.time.DateTime dateTime38 = dateTime36.withTimeAtStartOfDay();
        org.joda.time.Duration duration41 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.PeriodType periodType43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration41, readableInstant42, periodType43);
        mutablePeriod44.setMonths((int) '4');
        org.joda.time.DateTime dateTime47 = dateTime36.plus((org.joda.time.ReadablePeriod) mutablePeriod44);
        org.joda.time.DateTime dateTime49 = dateTime36.minusWeeks((int) (byte) 1);
        int int50 = dateTime33.compareTo((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.DateTime.Property property51 = dateTime36.minuteOfHour();
        org.joda.time.DateTime dateTime53 = dateTime36.withYear(1969);
        org.joda.time.Chronology chronology54 = dateTime53.getChronology();
        org.joda.time.DateTimeField dateTimeField55 = chronology54.year();
        org.joda.time.DateTimeField dateTimeField56 = chronology54.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField57 = chronology54.year();
        mutablePeriod5.add(38716L, chronology54);
        org.joda.time.DateTimeField dateTimeField59 = chronology54.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField60 = chronology54.weekyear();
        long long63 = dateTimeField60.add((long) 2022, 1439);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant30 and dateTime31", (instant30.compareTo(dateTime31) == 0) == instant30.equals(dateTime31));
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0513");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.DateMidnight dateMidnight6 = dateTime2.toDateMidnight();
        org.joda.time.DateTime dateTime9 = dateTime2.withDurationAdded(0L, (int) 'a');
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period13 = duration12.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray14 = period13.getFieldTypes();
        org.joda.time.Period period16 = period13.minusYears((int) (byte) 1);
        org.joda.time.Period period18 = period13.plusMonths((int) (byte) 0);
        int int19 = period13.size();
        org.joda.time.Period period21 = period13.plusYears(100);
        org.joda.time.Period period23 = period13.minusSeconds(292278993);
        org.joda.time.Duration duration26 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration26, readableInstant27, periodType28);
        mutablePeriod29.addDays((int) (short) 100);
        org.joda.time.DurationFieldType durationFieldType32 = org.joda.time.DurationFieldType.days();
        mutablePeriod29.add(durationFieldType32, 8);
        boolean boolean35 = period13.isSupported(durationFieldType32);
        org.joda.time.DateTime dateTime37 = dateTime2.withFieldAdded(durationFieldType32, (-2147483648));
        boolean boolean38 = dateTime37.isEqualNow();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0514");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.Duration duration5 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period6 = duration5.toPeriod();
        org.joda.time.Duration duration8 = duration5.plus((long) (byte) 0);
        org.joda.time.Minutes minutes9 = duration5.toStandardMinutes();
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType11 = periodType10.withMinutesRemoved();
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableInstant) instant1, (org.joda.time.ReadableDuration) duration5, periodType10);
        org.joda.time.MutableDateTime mutableDateTime13 = instant1.toMutableDateTime();
        org.joda.time.Instant instant15 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime16 = instant15.toDateTime();
        org.joda.time.DateTime.Property property17 = dateTime16.era();
        org.joda.time.DateTime dateTime18 = dateTime16.withTimeAtStartOfDay();
        org.joda.time.Duration duration21 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration21, readableInstant22, periodType23);
        mutablePeriod24.setMonths((int) '4');
        org.joda.time.DateTime dateTime27 = dateTime16.plus((org.joda.time.ReadablePeriod) mutablePeriod24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) instant1, (org.joda.time.ReadableInstant) dateTime27);
        org.joda.time.DateTime dateTime30 = dateTime27.minusMillis((int) (byte) -1);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0515");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period3 = period1.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration5 = period3.toDurationTo(readableInstant4);
        org.joda.time.Duration duration8 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds9 = duration8.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration10 = null;
        boolean boolean11 = duration8.isEqual(readableDuration10);
        org.joda.time.Duration duration13 = duration8.minus((long) 1);
        org.joda.time.Duration duration15 = duration13.minus((long) '4');
        org.joda.time.Instant instant17 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime18 = instant17.toDateTime();
        org.joda.time.DateTime.Property property19 = dateTime18.era();
        org.joda.time.Duration duration22 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration25 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period26 = duration25.toPeriod();
        org.joda.time.Duration duration28 = duration25.plus((long) (byte) 0);
        org.joda.time.Instant instant30 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime31 = instant30.toDateTime();
        boolean boolean33 = dateTime31.isEqual(10L);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType36, chronology37);
        org.joda.time.PeriodType periodType39 = periodType36.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration28, (org.joda.time.ReadableInstant) dateTime31, periodType39);
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime18, (org.joda.time.ReadableDuration) duration22, periodType39);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, (org.joda.time.ReadableInstant) dateTime18, periodType42);
        boolean boolean44 = duration5.isEqual((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Period period46 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period48 = period46.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Duration duration50 = period48.toDurationTo(readableInstant49);
        org.joda.time.Duration duration53 = duration50.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = duration53.toPeriodFrom(readableInstant54);
        org.joda.time.Instant instant57 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime58 = instant57.toDateTime();
        org.joda.time.DateTime.Property property59 = dateTime58.era();
        org.joda.time.Duration duration62 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration65 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period66 = duration65.toPeriod();
        org.joda.time.Duration duration68 = duration65.plus((long) (byte) 0);
        org.joda.time.Instant instant70 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime71 = instant70.toDateTime();
        boolean boolean73 = dateTime71.isEqual(10L);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType76, chronology77);
        org.joda.time.PeriodType periodType79 = periodType76.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration68, (org.joda.time.ReadableInstant) dateTime71, periodType79);
        org.joda.time.Period period81 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime58, (org.joda.time.ReadableDuration) duration62, periodType79);
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.Period period83 = duration53.toPeriod(periodType79, chronology82);
        boolean boolean84 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Duration duration85 = duration53.toDuration();
        org.joda.time.MutablePeriod mutablePeriod87 = new org.joda.time.MutablePeriod((long) (byte) 10);
        mutablePeriod87.clear();
        boolean boolean89 = duration53.equals((java.lang.Object) mutablePeriod87);
        long long90 = duration53.getMillis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant17 and dateTime18", (instant17.compareTo(dateTime18) == 0) == instant17.equals(dateTime18));
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0516");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.DateTime dateTime6 = dateTime2.withCenturyOfEra((int) (byte) 1);
        org.joda.time.DateTimeFieldType dateTimeFieldType7 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.DateTimeField dateTimeField9 = dateTimeFieldType7.getField(chronology8);
        long long12 = dateTimeField9.add(0L, (long) (short) 1);
        long long15 = dateTimeField9.add(1L, (-1));
        int int16 = dateTime2.get(dateTimeField9);
        java.lang.Object obj18 = null;
        org.joda.time.Instant instant19 = new org.joda.time.Instant(obj18);
        org.joda.time.DateTimeZone dateTimeZone20 = instant19.getZone();
        java.lang.String str21 = dateTimeZone20.toString();
        int int23 = dateTimeZone20.getOffset(1L);
        boolean boolean25 = dateTimeZone20.isStandardOffset(0L);
        java.lang.String str27 = dateTimeZone20.getNameKey((long) 1);
        org.joda.time.DateTime dateTime28 = new org.joda.time.DateTime(dateTimeZone20);
        org.joda.time.DateTime dateTime29 = new org.joda.time.DateTime((-1L), dateTimeZone20);
        org.joda.time.Period period31 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period33 = period31.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Duration duration35 = period33.toDurationTo(readableInstant34);
        org.joda.time.Duration duration38 = duration35.withDurationAdded((long) '#', 0);
        org.joda.time.Instant instant40 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant42 = instant40.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime43 = instant40.toMutableDateTimeISO();
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period45 = duration38.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime43, periodType44);
        org.joda.time.Minutes minutes46 = duration38.toStandardMinutes();
        org.joda.time.DateTime dateTime47 = dateTime29.plus((org.joda.time.ReadableDuration) duration38);
        boolean boolean48 = dateTime2.isEqual((org.joda.time.ReadableInstant) dateTime47);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and mutableDateTime43", (instant1.compareTo(mutableDateTime43) == 0) == instant1.equals(mutableDateTime43));
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0517");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.year();
        org.joda.time.DurationField durationField29 = dateTimeField28.getRangeDurationField();
        long long31 = dateTimeField28.remainder((-26179201L));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0518");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime dateTime22 = dateTime4.toDateTimeISO();
        org.joda.time.DateTime.Property property23 = dateTime22.minuteOfHour();
        org.joda.time.Duration duration26 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period27 = duration26.toPeriod();
        org.joda.time.Duration duration29 = duration26.plus((long) (byte) 0);
        org.joda.time.Instant instant31 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime32 = instant31.toDateTime();
        boolean boolean34 = dateTime32.isEqual(10L);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType37, chronology38);
        org.joda.time.PeriodType periodType40 = periodType37.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration29, (org.joda.time.ReadableInstant) dateTime32, periodType40);
        org.joda.time.Instant instant43 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime44 = instant43.toDateTime();
        org.joda.time.DateTime.Property property45 = dateTime44.era();
        org.joda.time.DateTime dateTime46 = dateTime44.withTimeAtStartOfDay();
        org.joda.time.Instant instant47 = dateTime44.toInstant();
        org.joda.time.DateTime dateTime49 = dateTime44.withMillis((long) '4');
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime32, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Instant instant52 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime53 = instant52.toDateTime();
        org.joda.time.TimeOfDay timeOfDay54 = dateTime53.toTimeOfDay();
        org.joda.time.DateTime dateTime55 = dateTime44.withFields((org.joda.time.ReadablePartial) timeOfDay54);
        org.joda.time.Instant instant57 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime58 = instant57.toDateTime();
        org.joda.time.DateTime.Property property59 = dateTime58.era();
        org.joda.time.DateTime dateTime60 = property59.withMinimumValue();
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime55, (org.joda.time.ReadableInstant) dateTime60);
        org.joda.time.Duration duration62 = new org.joda.time.Duration((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) dateTime60);
        org.joda.time.Hours hours63 = duration62.toStandardHours();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0519");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.DateTime dateTime6 = dateTime2.withWeekOfWeekyear(8);
        org.joda.time.DateTimeFieldType dateTimeFieldType7 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        int int8 = dateTime2.get(dateTimeFieldType7);
        org.joda.time.Instant instant10 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime11 = instant10.toDateTime();
        org.joda.time.DateTime.Property property12 = dateTime11.era();
        org.joda.time.DateTime dateTime13 = dateTime11.withTimeAtStartOfDay();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration16, readableInstant17, periodType18);
        mutablePeriod19.setMonths((int) '4');
        org.joda.time.DateTime dateTime22 = dateTime11.plus((org.joda.time.ReadablePeriod) mutablePeriod19);
        org.joda.time.DateTime dateTime24 = dateTime11.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property25 = dateTime24.monthOfYear();
        org.joda.time.DateTime.Property property26 = dateTime24.weekyear();
        org.joda.time.DateTime dateTime27 = dateTime24.toDateTime();
        org.joda.time.DateTime dateTime29 = dateTime24.plusHours((int) 'u');
        org.joda.time.Instant instant31 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime32 = instant31.toDateTime();
        org.joda.time.DateTime.Property property33 = dateTime32.era();
        org.joda.time.ReadablePartial readablePartial34 = null;
        org.joda.time.DateTime dateTime35 = dateTime32.withFields(readablePartial34);
        org.joda.time.DateTime dateTime37 = dateTime32.withYearOfEra(292278993);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime29, (org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.DateTimeFieldType dateTimeFieldType39 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        boolean boolean40 = dateTime29.isSupported(dateTimeFieldType39);
        org.joda.time.DateTime.Property property41 = dateTime2.property(dateTimeFieldType39);
        int int42 = property41.get();
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType48, chronology49);
        org.joda.time.PeriodType periodType51 = periodType48.withWeeksRemoved();
        org.joda.time.PeriodType periodType52 = periodType51.withSecondsRemoved();
        org.joda.time.PeriodType periodType53 = periodType52.withWeeksRemoved();
        org.joda.time.Instant instant55 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime56 = instant55.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone57 = null;
        org.joda.time.DateTime dateTime58 = dateTime56.withZoneRetainFields(dateTimeZone57);
        org.joda.time.Instant instant60 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime61 = instant60.toDateTime();
        org.joda.time.DateTime.Property property62 = dateTime61.era();
        org.joda.time.DateTime dateTime63 = dateTime61.withTimeAtStartOfDay();
        org.joda.time.Duration duration66 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.PeriodType periodType68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration66, readableInstant67, periodType68);
        mutablePeriod69.setMonths((int) '4');
        org.joda.time.DateTime dateTime72 = dateTime61.plus((org.joda.time.ReadablePeriod) mutablePeriod69);
        org.joda.time.DateTime dateTime74 = dateTime61.minusWeeks((int) (byte) 1);
        int int75 = dateTime58.compareTo((org.joda.time.ReadableInstant) dateTime61);
        org.joda.time.DateTime.Property property76 = dateTime61.minuteOfHour();
        org.joda.time.DateTime dateTime78 = dateTime61.withYear(1969);
        org.joda.time.Chronology chronology79 = dateTime78.getChronology();
        org.joda.time.DateTimeField dateTimeField80 = chronology79.year();
        org.joda.time.DateTimeField dateTimeField81 = chronology79.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField82 = chronology79.year();
        org.joda.time.Period period83 = new org.joda.time.Period((long) (byte) 100, (long) 'a', periodType53, chronology79);
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod((long) '#', chronology79);
        boolean boolean85 = property41.equals((java.lang.Object) '#');
        int int86 = property41.getMaximumValue();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0520");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.Interval interval7 = property6.toInterval();
        boolean boolean8 = interval3.contains((org.joda.time.ReadableInterval) interval7);
        java.lang.Object obj9 = null;
        org.joda.time.Instant instant10 = new org.joda.time.Instant(obj9);
        org.joda.time.DateTimeZone dateTimeZone11 = instant10.getZone();
        java.lang.String str12 = dateTimeZone11.toString();
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(dateTimeZone11);
        boolean boolean14 = interval3.contains((org.joda.time.ReadableInstant) dateTime13);
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTime.Property property18 = dateTime17.era();
        boolean boolean19 = interval3.contains((org.joda.time.ReadableInstant) dateTime17);
        org.joda.time.Period period20 = interval3.toPeriod();
        java.lang.String str21 = interval3.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant10", (dateTime1.compareTo(instant10) == 0) == dateTime1.equals(instant10));
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0521");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.DateTime dateTime29 = dateTime25.withCenturyOfEra((int) (byte) 1);
        boolean boolean30 = dateTime7.isAfter((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.DateTime dateTime31 = dateTime25.withEarlierOffsetAtOverlap();
        org.joda.time.Instant instant33 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime34 = instant33.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone35 = null;
        org.joda.time.DateTime dateTime36 = dateTime34.withZoneRetainFields(dateTimeZone35);
        org.joda.time.Instant instant38 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime39 = instant38.toDateTime();
        org.joda.time.DateTime.Property property40 = dateTime39.era();
        org.joda.time.DateTime dateTime41 = dateTime39.withTimeAtStartOfDay();
        org.joda.time.Duration duration44 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.PeriodType periodType46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration44, readableInstant45, periodType46);
        mutablePeriod47.setMonths((int) '4');
        org.joda.time.DateTime dateTime50 = dateTime39.plus((org.joda.time.ReadablePeriod) mutablePeriod47);
        org.joda.time.DateTime dateTime52 = dateTime39.minusWeeks((int) (byte) 1);
        int int53 = dateTime36.compareTo((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.DateTime.Property property54 = dateTime39.minuteOfHour();
        org.joda.time.DateTime dateTime56 = dateTime39.withYear(1969);
        org.joda.time.Chronology chronology57 = dateTime56.getChronology();
        org.joda.time.DateTime.Property property58 = dateTime56.dayOfMonth();
        org.joda.time.DurationField durationField59 = property58.getRangeDurationField();
        org.joda.time.DateTime dateTime60 = property58.getDateTime();
        org.joda.time.DateTime dateTime62 = property58.addToCopy(11);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter64 = null;
        java.lang.String str65 = dateTime25.toString(dateTimeFormatter64);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0522");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant3 = instant1.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime4 = instant1.toMutableDateTimeISO();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.DateTime dateTime6 = new org.joda.time.DateTime(chronology5);
        org.joda.time.DateTime.Property property7 = dateTime6.yearOfEra();
        org.joda.time.DateTime.Property property8 = dateTime6.weekOfWeekyear();
        boolean boolean9 = mutableDateTime4.isBefore((org.joda.time.ReadableInstant) dateTime6);
        org.joda.time.DateTime dateTime11 = dateTime6.withMillisOfDay(0);
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((long) 6, (-3676492805054399977L), periodType14);
        org.joda.time.DateTime dateTime16 = dateTime6.plus((org.joda.time.ReadablePeriod) period15);
        org.joda.time.DateTime.Property property17 = dateTime6.era();
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone21 = null;
        org.joda.time.DateTime dateTime22 = dateTime20.withZone(dateTimeZone21);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        org.joda.time.DateTime.Property property26 = dateTime25.era();
        org.joda.time.DateTime dateTime27 = dateTime25.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean29 = dateTime25.isSupported(dateTimeFieldType28);
        org.joda.time.DateTime.Property property30 = dateTime20.property(dateTimeFieldType28);
        org.joda.time.DateTime dateTime31 = dateTime20.withTimeAtStartOfDay();
        org.joda.time.DateTime.Property property32 = dateTime31.yearOfCentury();
        org.joda.time.DateTime dateTime34 = property32.setCopy(12);
        boolean boolean35 = dateTime6.isBefore((org.joda.time.ReadableInstant) dateTime34);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and mutableDateTime4", (instant1.compareTo(mutableDateTime4) == 0) == instant1.equals(mutableDateTime4));
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0523");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime.Property property23 = dateTime7.weekyear();
        org.joda.time.Instant instant25 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime26 = instant25.toDateTime();
        org.joda.time.DateTime.Property property27 = dateTime26.era();
        org.joda.time.DateTime dateTime28 = dateTime26.withTimeAtStartOfDay();
        org.joda.time.Instant instant29 = dateTime26.toInstant();
        org.joda.time.TimeOfDay timeOfDay30 = dateTime26.toTimeOfDay();
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime33 = instant32.toDateTime();
        org.joda.time.DateTime.Property property34 = dateTime33.era();
        org.joda.time.DateTime dateTime35 = dateTime33.withTimeAtStartOfDay();
        org.joda.time.Instant instant36 = dateTime33.toInstant();
        org.joda.time.DateMidnight dateMidnight37 = dateTime33.toDateMidnight();
        org.joda.time.DateTime dateTime40 = dateTime33.withDurationAdded(0L, (int) 'a');
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime26, (org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.DateTime.Property property42 = dateTime26.secondOfDay();
        org.joda.time.DateTime.Property property43 = dateTime26.era();
        int int44 = property43.getMinimumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.DateTimeField dateTimeField47 = dateTimeFieldType45.getField(chronology46);
        long long50 = dateTimeField47.add(0L, (long) (short) 1);
        boolean boolean52 = dateTimeField47.isLeap(10L);
        int int54 = dateTimeField47.get((-1L));
        long long56 = dateTimeField47.remainder((long) (byte) 0);
        java.util.Locale locale57 = java.util.Locale.ITALY;
        int int58 = dateTimeField47.getMaximumShortTextLength(locale57);
        java.lang.String str59 = property43.getAsText(locale57);
        int int60 = property23.getMaximumTextLength(locale57);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0524");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (short) 1, (long) (byte) 0);
        org.joda.time.Duration duration3 = duration2.toDuration();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant8 = instant6.minus(100L);
        org.joda.time.Instant instant10 = instant8.plus((long) 100);
        org.joda.time.Instant instant12 = instant8.withMillis((long) (byte) 1);
        org.joda.time.Chronology chronology13 = instant8.getChronology();
        org.joda.time.DateTime dateTime14 = instant8.toDateTimeISO();
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant18 = instant16.minus(100L);
        org.joda.time.Instant instant20 = instant18.plus((long) 100);
        org.joda.time.Instant instant22 = instant18.withMillis((long) (byte) 1);
        org.joda.time.Period period24 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period26 = period24.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Duration duration28 = period26.toDurationTo(readableInstant27);
        org.joda.time.Duration duration31 = duration28.withDurationAdded((long) '#', 0);
        org.joda.time.Instant instant33 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant35 = instant33.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime36 = instant33.toMutableDateTimeISO();
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period38 = duration31.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime36, periodType37);
        org.joda.time.Instant instant39 = instant22.minus((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Instant instant41 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime42 = instant41.toDateTime();
        org.joda.time.DateTime.Property property43 = dateTime42.era();
        org.joda.time.DateTime dateTime44 = dateTime42.withTimeAtStartOfDay();
        org.joda.time.Instant instant45 = dateTime42.toInstant();
        org.joda.time.DateMidnight dateMidnight46 = dateTime42.toDateMidnight();
        int int47 = dateTime42.getHourOfDay();
        org.joda.time.Days days48 = org.joda.time.Days.daysBetween((org.joda.time.ReadableInstant) instant39, (org.joda.time.ReadableInstant) dateTime42);
        int int49 = dateTime14.compareTo((org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.Duration duration50 = period4.toDurationTo((org.joda.time.ReadableInstant) dateTime14);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant6 and mutableDateTime36", (instant6.compareTo(mutableDateTime36) == 0) == instant6.equals(mutableDateTime36));
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0525");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.LocalDate localDate14 = dateTime2.toLocalDate();
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTime.Property property18 = dateTime17.era();
        org.joda.time.DateTime dateTime19 = dateTime17.withTimeAtStartOfDay();
        org.joda.time.Instant instant20 = dateTime17.toInstant();
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant20);
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime24 = instant23.toDateTime();
        org.joda.time.DateTime.Property property25 = dateTime24.era();
        org.joda.time.DateTime dateTime26 = property25.withMinimumValue();
        int int27 = property25.getMaximumValueOverall();
        java.util.Locale locale28 = java.util.Locale.ENGLISH;
        java.lang.String str29 = locale28.getScript();
        java.lang.String str30 = locale28.getDisplayCountry();
        int int31 = property25.getMaximumShortTextLength(locale28);
        org.joda.time.DateTime dateTime32 = property25.withMaximumValue();
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType34 = periodType33.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) dateTime32, periodType33);
        org.joda.time.DateTime dateTime37 = dateTime32.plusWeeks((-2147483648));
        long long38 = dateTime37.getMillis();
        int int39 = dateTime37.getDayOfWeek();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0526");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.era();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.secondOfMinute();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0527");
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType5, chronology6);
        org.joda.time.PeriodType periodType8 = periodType5.withWeeksRemoved();
        org.joda.time.PeriodType periodType9 = periodType8.withSecondsRemoved();
        org.joda.time.PeriodType periodType10 = periodType9.withWeeksRemoved();
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone14 = null;
        org.joda.time.DateTime dateTime15 = dateTime13.withZoneRetainFields(dateTimeZone14);
        org.joda.time.Instant instant17 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime18 = instant17.toDateTime();
        org.joda.time.DateTime.Property property19 = dateTime18.era();
        org.joda.time.DateTime dateTime20 = dateTime18.withTimeAtStartOfDay();
        org.joda.time.Duration duration23 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, readableInstant24, periodType25);
        mutablePeriod26.setMonths((int) '4');
        org.joda.time.DateTime dateTime29 = dateTime18.plus((org.joda.time.ReadablePeriod) mutablePeriod26);
        org.joda.time.DateTime dateTime31 = dateTime18.minusWeeks((int) (byte) 1);
        int int32 = dateTime15.compareTo((org.joda.time.ReadableInstant) dateTime18);
        org.joda.time.DateTime.Property property33 = dateTime18.minuteOfHour();
        org.joda.time.DateTime dateTime35 = dateTime18.withYear(1969);
        org.joda.time.Chronology chronology36 = dateTime35.getChronology();
        org.joda.time.DateTimeField dateTimeField37 = chronology36.year();
        org.joda.time.DateTimeField dateTimeField38 = chronology36.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField39 = chronology36.year();
        org.joda.time.Period period40 = new org.joda.time.Period((long) (byte) 100, (long) 'a', periodType10, chronology36);
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((long) '#', chronology36);
        org.joda.time.Hours hours42 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours43.multipliedBy(0);
        org.joda.time.Hours hours47 = hours43.dividedBy(69);
        org.joda.time.Hours hours48 = org.joda.time.Hours.MIN_VALUE;
        boolean boolean49 = hours47.isGreaterThan(hours48);
        org.joda.time.Hours hours50 = hours42.plus(hours48);
        mutablePeriod41.setPeriod((org.joda.time.ReadablePeriod) hours50);
        org.joda.time.MutablePeriod mutablePeriod52 = hours50.toMutablePeriod();
        mutablePeriod52.setHours(101);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime13", (instant12.compareTo(dateTime13) == 0) == instant12.equals(dateTime13));
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0528");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int9 = mutablePeriod8.getDays();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        org.joda.time.DateTime.Property property14 = dateTime13.yearOfEra();
        org.joda.time.Interval interval15 = property14.toInterval();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.DateTime dateTime17 = new org.joda.time.DateTime(chronology16);
        org.joda.time.DateTime.Property property18 = dateTime17.yearOfEra();
        org.joda.time.Interval interval19 = property18.toInterval();
        boolean boolean20 = interval15.contains((org.joda.time.ReadableInterval) interval19);
        org.joda.time.Chronology chronology21 = interval19.getChronology();
        mutablePeriod8.setPeriod((long) 'u', (long) 1969, chronology21);
        org.joda.time.DateTimeField dateTimeField23 = chronology21.millisOfDay();
        org.joda.time.DateTimeField dateTimeField24 = chronology21.yearOfCentury();
        org.joda.time.Duration duration27 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds28 = duration27.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration29 = null;
        boolean boolean30 = duration27.isEqual(readableDuration29);
        org.joda.time.Duration duration32 = duration27.minus((long) 1);
        org.joda.time.Duration duration34 = duration32.minus((long) '4');
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime37 = instant36.toDateTime();
        org.joda.time.DateTime.Property property38 = dateTime37.era();
        org.joda.time.Duration duration41 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration44 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period45 = duration44.toPeriod();
        org.joda.time.Duration duration47 = duration44.plus((long) (byte) 0);
        org.joda.time.Instant instant49 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime50 = instant49.toDateTime();
        boolean boolean52 = dateTime50.isEqual(10L);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType55, chronology56);
        org.joda.time.PeriodType periodType58 = periodType55.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration47, (org.joda.time.ReadableInstant) dateTime50, periodType58);
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime37, (org.joda.time.ReadableDuration) duration41, periodType58);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, (org.joda.time.ReadableInstant) dateTime37, periodType61);
        org.joda.time.TimeOfDay timeOfDay63 = dateTime37.toTimeOfDay();
        int[] intArray65 = chronology21.get((org.joda.time.ReadablePartial) timeOfDay63, (long) (-1));
        org.joda.time.DateTimeField dateTimeField66 = chronology21.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField67 = chronology21.millisOfDay();
        org.joda.time.DateTimeZone dateTimeZone68 = chronology21.getZone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant36 and dateTime37", (instant36.compareTo(dateTime37) == 0) == instant36.equals(dateTime37));
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0529");
        java.util.Locale locale0 = java.util.Locale.FRANCE;
        java.lang.String str1 = locale0.getISO3Language();
        org.joda.time.Duration duration4 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds5 = duration4.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration6 = null;
        boolean boolean7 = duration4.isEqual(readableDuration6);
        org.joda.time.Duration duration9 = duration4.minus((long) 1);
        org.joda.time.Duration duration11 = duration9.minus((long) '4');
        org.joda.time.Instant instant13 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime14 = instant13.toDateTime();
        org.joda.time.DateTime.Property property15 = dateTime14.era();
        org.joda.time.Duration duration18 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration21 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period22 = duration21.toPeriod();
        org.joda.time.Duration duration24 = duration21.plus((long) (byte) 0);
        org.joda.time.Instant instant26 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime27 = instant26.toDateTime();
        boolean boolean29 = dateTime27.isEqual(10L);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType32, chronology33);
        org.joda.time.PeriodType periodType35 = periodType32.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration24, (org.joda.time.ReadableInstant) dateTime27, periodType35);
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime14, (org.joda.time.ReadableDuration) duration18, periodType35);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, (org.joda.time.ReadableInstant) dateTime14, periodType38);
        org.joda.time.Duration duration41 = duration9.minus((long) 7);
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int52 = mutablePeriod51.getDays();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.DateTime dateTime56 = new org.joda.time.DateTime(chronology55);
        org.joda.time.DateTime.Property property57 = dateTime56.yearOfEra();
        org.joda.time.Interval interval58 = property57.toInterval();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.DateTime dateTime60 = new org.joda.time.DateTime(chronology59);
        org.joda.time.DateTime.Property property61 = dateTime60.yearOfEra();
        org.joda.time.Interval interval62 = property61.toInterval();
        boolean boolean63 = interval58.contains((org.joda.time.ReadableInterval) interval62);
        org.joda.time.Chronology chronology64 = interval62.getChronology();
        mutablePeriod51.setPeriod((long) 'u', (long) 1969, chronology64);
        org.joda.time.Period period66 = new org.joda.time.Period((long) (byte) 100, chronology64);
        org.joda.time.Period period67 = duration41.toPeriod(chronology64);
        org.joda.time.DateTimeField dateTimeField68 = chronology64.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField69 = chronology64.monthOfYear();
        java.util.Locale locale71 = java.util.Locale.US;
        java.util.Locale locale72 = java.util.Locale.US;
        java.lang.String str73 = locale71.getDisplayScript(locale72);
        java.lang.String str74 = dateTimeField69.getAsShortText(432000000L, locale72);
        long long76 = dateTimeField69.roundCeiling(1970L);
        java.util.Locale locale80 = new java.util.Locale("hourOfHalfday", "YearMonthDayTime");
        java.lang.String str81 = dateTimeField69.getAsText(86400467L, locale80);
        java.lang.String str82 = locale80.getDisplayScript();
        boolean boolean83 = locale80.hasExtensions();
        java.lang.String str84 = locale0.getDisplayVariant(locale80);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant13 and dateTime14", (instant13.compareTo(dateTime14) == 0) == instant13.equals(dateTime14));
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0530");
        org.joda.time.Instant instant3 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime4 = instant3.toDateTime();
        org.joda.time.DateTime.Property property5 = dateTime4.era();
        org.joda.time.DateTime dateTime6 = dateTime4.withTimeAtStartOfDay();
        org.joda.time.Duration duration9 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration9, readableInstant10, periodType11);
        mutablePeriod12.setMonths((int) '4');
        org.joda.time.DateTime dateTime15 = dateTime4.plus((org.joda.time.ReadablePeriod) mutablePeriod12);
        org.joda.time.DateTime dateTime17 = dateTime4.minusWeeks((int) (byte) 1);
        long long18 = dateTime4.getMillis();
        org.joda.time.DurationFieldType durationFieldType19 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant21 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime22 = instant21.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone23 = null;
        org.joda.time.DateTime dateTime24 = dateTime22.withZoneRetainFields(dateTimeZone23);
        org.joda.time.Instant instant26 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime27 = instant26.toDateTime();
        org.joda.time.DateTime.Property property28 = dateTime27.era();
        org.joda.time.DateTime dateTime29 = dateTime27.withTimeAtStartOfDay();
        org.joda.time.Duration duration32 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration32, readableInstant33, periodType34);
        mutablePeriod35.setMonths((int) '4');
        org.joda.time.DateTime dateTime38 = dateTime27.plus((org.joda.time.ReadablePeriod) mutablePeriod35);
        org.joda.time.DateTime dateTime40 = dateTime27.minusWeeks((int) (byte) 1);
        int int41 = dateTime24.compareTo((org.joda.time.ReadableInstant) dateTime27);
        org.joda.time.DateTime.Property property42 = dateTime27.minuteOfHour();
        org.joda.time.DateTime dateTime44 = dateTime27.withYear(1969);
        org.joda.time.Chronology chronology45 = dateTime44.getChronology();
        org.joda.time.DurationField durationField46 = durationFieldType19.getField(chronology45);
        org.joda.time.DateTime dateTime47 = dateTime4.toDateTime(chronology45);
        org.joda.time.Period period48 = new org.joda.time.Period((-43199999L), 432000000L, chronology45);
        org.joda.time.Hours hours49 = period48.toStandardHours();
        org.joda.time.Hours hours51 = hours49.plus(4);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant3 and dateTime4", (instant3.compareTo(dateTime4) == 0) == instant3.equals(dateTime4));
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0531");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime dateTime16 = dateTime15.toDateTimeISO();
        org.joda.time.DateTime dateTime18 = dateTime15.plusMonths((-1));
        org.joda.time.DateTime dateTime20 = dateTime18.minusDays(1972);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0532");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField29 = chronology25.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField30 = chronology25.minuteOfDay();
        long long34 = chronology25.add((long) (-292275054), (long) 119999, 86399999);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0533");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant3, periodType4);
        mutablePeriod5.setPeriod((long) 1, (-1L));
        mutablePeriod5.setMillis((int) (short) 0);
        int int11 = mutablePeriod5.getDays();
        mutablePeriod5.addMinutes(1969);
        org.joda.time.Chronology chronology15 = null;
        mutablePeriod5.setPeriod((long) 'a', chronology15);
        mutablePeriod5.addWeeks(70);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.DateTime dateTime20 = new org.joda.time.DateTime(chronology19);
        org.joda.time.DateTime.Property property21 = dateTime20.yearOfEra();
        org.joda.time.Interval interval22 = property21.toInterval();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.DateTime dateTime24 = new org.joda.time.DateTime(chronology23);
        org.joda.time.DateTime.Property property25 = dateTime24.yearOfEra();
        org.joda.time.Interval interval26 = property25.toInterval();
        boolean boolean27 = interval22.contains((org.joda.time.ReadableInterval) interval26);
        java.lang.Object obj28 = null;
        org.joda.time.Instant instant29 = new org.joda.time.Instant(obj28);
        org.joda.time.DateTimeZone dateTimeZone30 = instant29.getZone();
        java.lang.String str31 = dateTimeZone30.toString();
        org.joda.time.DateTime dateTime32 = new org.joda.time.DateTime(dateTimeZone30);
        boolean boolean33 = interval22.contains((org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.Instant instant35 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime36 = instant35.toDateTime();
        org.joda.time.DateTime.Property property37 = dateTime36.era();
        boolean boolean38 = interval22.contains((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.DateTime dateTime40 = new org.joda.time.DateTime(chronology39);
        org.joda.time.DateTime.Property property41 = dateTime40.yearOfEra();
        org.joda.time.Interval interval42 = property41.toInterval();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.DateTime dateTime44 = new org.joda.time.DateTime(chronology43);
        org.joda.time.DateTime.Property property45 = dateTime44.yearOfEra();
        org.joda.time.Interval interval46 = property45.toInterval();
        boolean boolean47 = interval42.contains((org.joda.time.ReadableInterval) interval46);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.DateTime dateTime49 = new org.joda.time.DateTime(chronology48);
        org.joda.time.DateTime.Property property50 = dateTime49.yearOfEra();
        org.joda.time.Interval interval51 = property50.toInterval();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.DateTime dateTime53 = new org.joda.time.DateTime(chronology52);
        org.joda.time.DateTime.Property property54 = dateTime53.yearOfEra();
        org.joda.time.Interval interval55 = property54.toInterval();
        boolean boolean56 = interval51.contains((org.joda.time.ReadableInterval) interval55);
        boolean boolean57 = interval46.contains((org.joda.time.ReadableInterval) interval51);
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.DateTime dateTime59 = new org.joda.time.DateTime(chronology58);
        org.joda.time.DateTime.Property property60 = dateTime59.yearOfEra();
        org.joda.time.Interval interval61 = property60.toInterval();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.DateTime dateTime63 = new org.joda.time.DateTime(chronology62);
        org.joda.time.DateTime.Property property64 = dateTime63.yearOfEra();
        org.joda.time.Interval interval65 = property64.toInterval();
        boolean boolean66 = interval61.contains((org.joda.time.ReadableInterval) interval65);
        java.lang.String str67 = interval65.toString();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.DateTime dateTime69 = new org.joda.time.DateTime(chronology68);
        org.joda.time.DateTime.Property property70 = dateTime69.yearOfEra();
        org.joda.time.Interval interval71 = property70.toInterval();
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.DateTime dateTime73 = new org.joda.time.DateTime(chronology72);
        org.joda.time.DateTime.Property property74 = dateTime73.yearOfEra();
        org.joda.time.Interval interval75 = property74.toInterval();
        boolean boolean76 = interval71.contains((org.joda.time.ReadableInterval) interval75);
        boolean boolean77 = interval65.isBefore((org.joda.time.ReadableInterval) interval75);
        boolean boolean78 = interval51.overlaps((org.joda.time.ReadableInterval) interval75);
        boolean boolean79 = interval22.isAfter((org.joda.time.ReadableInterval) interval75);
        org.joda.time.DateTime dateTime80 = interval22.getEnd();
        org.joda.time.Hours hours81 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval22);
        mutablePeriod5.add((org.joda.time.ReadableInterval) interval22);
        mutablePeriod5.addMonths((int) (byte) 1);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime20 and instant29", (dateTime20.compareTo(instant29) == 0) == dateTime20.equals(instant29));
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0534");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        java.lang.Object obj14 = null;
        org.joda.time.Instant instant15 = new org.joda.time.Instant(obj14);
        org.joda.time.DateTimeZone dateTimeZone16 = instant15.getZone();
        java.lang.String str17 = dateTimeZone16.toString();
        int int19 = dateTimeZone16.getOffset(1L);
        boolean boolean21 = dateTimeZone16.isStandardOffset(0L);
        org.joda.time.DateTime dateTime22 = dateTime2.withZoneRetainFields(dateTimeZone16);
        org.joda.time.DateTime dateTime24 = dateTime22.plusYears(1969);
        org.joda.time.DateTime dateTime26 = dateTime24.minusWeeks(1439);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType28 = periodType27.withMonthsRemoved();
        org.joda.time.Duration duration31 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period32 = duration31.toPeriod();
        org.joda.time.Duration duration34 = duration31.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = duration31.toPeriodTo(readableInstant35);
        org.joda.time.Weeks weeks37 = period36.toStandardWeeks();
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = period36.get(durationFieldType38);
        int int40 = period36.getWeeks();
        org.joda.time.Duration duration41 = period36.toStandardDuration();
        boolean boolean42 = periodType28.equals((java.lang.Object) duration41);
        long long43 = duration41.getMillis();
        org.joda.time.DateTime dateTime44 = dateTime24.minus((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Instant instant46 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime47 = instant46.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone48 = null;
        org.joda.time.DateTime dateTime49 = dateTime47.withZoneRetainFields(dateTimeZone48);
        org.joda.time.Instant instant51 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime52 = instant51.toDateTime();
        org.joda.time.DateTime.Property property53 = dateTime52.era();
        org.joda.time.DateTime dateTime54 = dateTime52.withTimeAtStartOfDay();
        org.joda.time.Duration duration57 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.PeriodType periodType59 = null;
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration57, readableInstant58, periodType59);
        mutablePeriod60.setMonths((int) '4');
        org.joda.time.DateTime dateTime63 = dateTime52.plus((org.joda.time.ReadablePeriod) mutablePeriod60);
        org.joda.time.DateTime dateTime65 = dateTime52.minusWeeks((int) (byte) 1);
        int int66 = dateTime49.compareTo((org.joda.time.ReadableInstant) dateTime52);
        org.joda.time.DateTime.Property property67 = dateTime52.minuteOfHour();
        org.joda.time.DateTime dateTime69 = dateTime52.withYear(1969);
        org.joda.time.Chronology chronology70 = dateTime69.getChronology();
        org.joda.time.DateTimeField dateTimeField71 = chronology70.year();
        org.joda.time.MutableDateTime mutableDateTime72 = dateTime44.toMutableDateTime(chronology70);
        org.joda.time.DateTime.Property property73 = dateTime44.millisOfSecond();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0535");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property16 = dateTime15.monthOfYear();
        org.joda.time.DateTime.Property property17 = dateTime15.weekyear();
        org.joda.time.DateMidnight dateMidnight18 = dateTime15.toDateMidnight();
        org.joda.time.Instant instant20 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant22 = instant20.minus(100L);
        java.lang.String str23 = instant22.toString();
        org.joda.time.Duration duration26 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period27 = duration26.toPeriod();
        org.joda.time.Duration duration29 = duration26.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = duration26.toPeriodTo(readableInstant30);
        org.joda.time.Duration duration33 = duration26.withMillis((long) (short) 0);
        org.joda.time.Instant instant34 = instant22.plus((org.joda.time.ReadableDuration) duration26);
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = org.joda.time.DateTimeFieldType.yearOfEra();
        boolean boolean36 = instant22.isSupported(dateTimeFieldType35);
        org.joda.time.Days days37 = org.joda.time.Days.daysBetween((org.joda.time.ReadableInstant) dateTime15, (org.joda.time.ReadableInstant) instant22);
        int int38 = days37.getDays();
        org.joda.time.Seconds seconds39 = days37.toStandardSeconds();
        org.joda.time.Days days40 = seconds39.toStandardDays();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0536");
        org.joda.time.Duration duration3 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration3, readableInstant4, periodType5);
        org.joda.time.Days days7 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType8 = org.joda.time.DurationFieldType.minutes();
        int int9 = days7.get(durationFieldType8);
        mutablePeriod6.add(durationFieldType8, 8);
        org.joda.time.ReadablePeriod readablePeriod12 = null;
        mutablePeriod6.add(readablePeriod12);
        int int14 = mutablePeriod6.getMonths();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.DateTime dateTime16 = new org.joda.time.DateTime(chronology15);
        org.joda.time.DateTime.Property property17 = dateTime16.yearOfEra();
        org.joda.time.Interval interval18 = property17.toInterval();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.DateTime dateTime20 = new org.joda.time.DateTime(chronology19);
        org.joda.time.DateTime.Property property21 = dateTime20.yearOfEra();
        org.joda.time.Interval interval22 = property21.toInterval();
        boolean boolean23 = interval18.contains((org.joda.time.ReadableInterval) interval22);
        mutablePeriod6.setPeriod((org.joda.time.ReadableInterval) interval18);
        org.joda.time.DurationFieldType durationFieldType26 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant28 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime29 = instant28.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone30 = null;
        org.joda.time.DateTime dateTime31 = dateTime29.withZoneRetainFields(dateTimeZone30);
        org.joda.time.Instant instant33 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime34 = instant33.toDateTime();
        org.joda.time.DateTime.Property property35 = dateTime34.era();
        org.joda.time.DateTime dateTime36 = dateTime34.withTimeAtStartOfDay();
        org.joda.time.Duration duration39 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.PeriodType periodType41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration39, readableInstant40, periodType41);
        mutablePeriod42.setMonths((int) '4');
        org.joda.time.DateTime dateTime45 = dateTime34.plus((org.joda.time.ReadablePeriod) mutablePeriod42);
        org.joda.time.DateTime dateTime47 = dateTime34.minusWeeks((int) (byte) 1);
        int int48 = dateTime31.compareTo((org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.DateTime.Property property49 = dateTime34.minuteOfHour();
        org.joda.time.DateTime dateTime51 = dateTime34.withYear(1969);
        org.joda.time.Chronology chronology52 = dateTime51.getChronology();
        org.joda.time.DurationField durationField53 = durationFieldType26.getField(chronology52);
        mutablePeriod6.add((-43199999L), chronology52);
        org.joda.time.DurationField durationField55 = chronology52.millis();
        org.joda.time.DurationField durationField56 = chronology52.months();
        org.joda.time.DateTime dateTime57 = new org.joda.time.DateTime((long) 69, chronology52);
        org.joda.time.DateTimeField dateTimeField58 = chronology52.minuteOfDay();
        org.joda.time.DurationField durationField59 = chronology52.months();
        org.joda.time.DateTime dateTime60 = org.joda.time.DateTime.now(chronology52);
        org.joda.time.DurationField durationField61 = chronology52.weekyears();
        org.joda.time.Instant instant63 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime64 = instant63.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone65 = null;
        org.joda.time.DateTime dateTime66 = dateTime64.withZone(dateTimeZone65);
        org.joda.time.Instant instant68 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime69 = instant68.toDateTime();
        org.joda.time.DateTime.Property property70 = dateTime69.era();
        org.joda.time.DateTime dateTime71 = dateTime69.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType72 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean73 = dateTime69.isSupported(dateTimeFieldType72);
        org.joda.time.DateTime.Property property74 = dateTime64.property(dateTimeFieldType72);
        org.joda.time.DateTimeZone dateTimeZone75 = dateTime64.getZone();
        org.joda.time.LocalDateTime localDateTime76 = dateTime64.toLocalDateTime();
        int int77 = localDateTime76.size();
        org.joda.time.Instant instant79 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime80 = instant79.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone81 = null;
        org.joda.time.DateTime dateTime82 = dateTime80.withZone(dateTimeZone81);
        org.joda.time.Instant instant84 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime85 = instant84.toDateTime();
        org.joda.time.DateTime.Property property86 = dateTime85.era();
        org.joda.time.DateTime dateTime87 = dateTime85.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType88 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean89 = dateTime85.isSupported(dateTimeFieldType88);
        org.joda.time.DateTime.Property property90 = dateTime80.property(dateTimeFieldType88);
        org.joda.time.DateTimeZone dateTimeZone91 = dateTime80.getZone();
        org.joda.time.LocalDateTime localDateTime92 = dateTime80.toLocalDateTime();
        int int93 = localDateTime92.size();
        org.joda.time.Days days94 = org.joda.time.Days.daysBetween((org.joda.time.ReadablePartial) localDateTime76, (org.joda.time.ReadablePartial) localDateTime92);
        long long96 = chronology52.set((org.joda.time.ReadablePartial) localDateTime76, (-436320L));
        org.joda.time.DateTimeField dateTimeField97 = chronology52.yearOfCentury();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant28 and dateTime29", (instant28.compareTo(dateTime29) == 0) == instant28.equals(dateTime29));
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0537");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.DateTime dateTime6 = dateTime2.withCenturyOfEra((int) (byte) 1);
        org.joda.time.DateTimeFieldType dateTimeFieldType7 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.DateTimeField dateTimeField9 = dateTimeFieldType7.getField(chronology8);
        long long12 = dateTimeField9.add(0L, (long) (short) 1);
        long long15 = dateTimeField9.add(1L, (-1));
        int int16 = dateTime2.get(dateTimeField9);
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime19 = instant18.toDateTime();
        org.joda.time.DateTime.Property property20 = dateTime19.era();
        org.joda.time.DateTime dateTime21 = dateTime19.withTimeAtStartOfDay();
        org.joda.time.Duration duration24 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration24, readableInstant25, periodType26);
        mutablePeriod27.setMonths((int) '4');
        org.joda.time.DateTime dateTime30 = dateTime19.plus((org.joda.time.ReadablePeriod) mutablePeriod27);
        org.joda.time.DateTime dateTime32 = dateTime19.minusWeeks((int) (byte) 1);
        long long33 = dateTime19.getMillis();
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime37 = instant36.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone38 = null;
        org.joda.time.DateTime dateTime39 = dateTime37.withZoneRetainFields(dateTimeZone38);
        org.joda.time.Instant instant41 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime42 = instant41.toDateTime();
        org.joda.time.DateTime.Property property43 = dateTime42.era();
        org.joda.time.DateTime dateTime44 = dateTime42.withTimeAtStartOfDay();
        org.joda.time.Duration duration47 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.PeriodType periodType49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration47, readableInstant48, periodType49);
        mutablePeriod50.setMonths((int) '4');
        org.joda.time.DateTime dateTime53 = dateTime42.plus((org.joda.time.ReadablePeriod) mutablePeriod50);
        org.joda.time.DateTime dateTime55 = dateTime42.minusWeeks((int) (byte) 1);
        int int56 = dateTime39.compareTo((org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.DateTime.Property property57 = dateTime42.minuteOfHour();
        org.joda.time.DateTime dateTime59 = dateTime42.withYear(1969);
        org.joda.time.Chronology chronology60 = dateTime59.getChronology();
        org.joda.time.DurationField durationField61 = durationFieldType34.getField(chronology60);
        org.joda.time.DateTime dateTime62 = dateTime19.toDateTime(chronology60);
        org.joda.time.DateTime dateTime63 = dateTime2.toDateTime(chronology60);
        org.joda.time.DateTimeField dateTimeField64 = chronology60.minuteOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType65 = dateTimeField64.getType();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0538");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.era();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField29 = chronology25.dayOfWeek();
        org.joda.time.Instant instant31 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime32 = instant31.toDateTime();
        org.joda.time.DateTime.Property property33 = dateTime32.era();
        org.joda.time.DateTime dateTime34 = dateTime32.withTimeAtStartOfDay();
        org.joda.time.Instant instant35 = dateTime32.toInstant();
        org.joda.time.DateTime dateTime37 = dateTime32.withMillis((long) '4');
        java.lang.Object obj38 = null;
        org.joda.time.Instant instant39 = new org.joda.time.Instant(obj38);
        org.joda.time.DateTimeZone dateTimeZone40 = instant39.getZone();
        java.lang.String str41 = dateTimeZone40.toString();
        int int43 = dateTimeZone40.getOffset(1L);
        boolean boolean45 = dateTimeZone40.isStandardOffset(0L);
        org.joda.time.DateTime dateTime46 = dateTime32.withZoneRetainFields(dateTimeZone40);
        org.joda.time.Instant instant48 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime49 = instant48.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone50 = null;
        org.joda.time.DateTime dateTime51 = dateTime49.withZone(dateTimeZone50);
        org.joda.time.Instant instant53 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime54 = instant53.toDateTime();
        org.joda.time.DateTime.Property property55 = dateTime54.era();
        org.joda.time.DateTime dateTime56 = dateTime54.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType57 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean58 = dateTime54.isSupported(dateTimeFieldType57);
        org.joda.time.DateTime.Property property59 = dateTime49.property(dateTimeFieldType57);
        org.joda.time.DateTimeZone dateTimeZone60 = dateTime49.getZone();
        org.joda.time.LocalDateTime localDateTime61 = dateTime49.toLocalDateTime();
        int int62 = localDateTime61.size();
        org.joda.time.Duration duration65 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds66 = duration65.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration67 = null;
        boolean boolean68 = duration65.isEqual(readableDuration67);
        boolean boolean69 = localDateTime61.equals((java.lang.Object) boolean68);
        boolean boolean70 = dateTimeZone40.isLocalDateTimeGap(localDateTime61);
        int int71 = dateTimeField29.getMinimumValue((org.joda.time.ReadablePartial) localDateTime61);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0539");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.DateTime.Property property5 = dateTime4.weekOfWeekyear();
        org.joda.time.Duration duration8 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration8, readableInstant9, periodType10);
        org.joda.time.DateTime dateTime12 = dateTime4.plus((org.joda.time.ReadableDuration) duration8);
        int int13 = dateTime12.getYearOfEra();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0540");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.year();
        org.joda.time.DateTimeZone dateTimeZone29 = chronology25.getZone();
        org.joda.time.DurationField durationField30 = chronology25.weekyears();
        org.joda.time.DateTimeField dateTimeField31 = chronology25.weekyearOfCentury();
        long long34 = dateTimeField31.add(31L, 35);
        org.joda.time.Duration duration37 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds38 = duration37.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration39 = null;
        boolean boolean40 = duration37.isEqual(readableDuration39);
        org.joda.time.Duration duration42 = duration37.minus((long) 1);
        org.joda.time.Duration duration44 = duration42.minus((long) '4');
        org.joda.time.Instant instant46 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime47 = instant46.toDateTime();
        org.joda.time.DateTime.Property property48 = dateTime47.era();
        org.joda.time.Duration duration51 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration54 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period55 = duration54.toPeriod();
        org.joda.time.Duration duration57 = duration54.plus((long) (byte) 0);
        org.joda.time.Instant instant59 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime60 = instant59.toDateTime();
        boolean boolean62 = dateTime60.isEqual(10L);
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType65, chronology66);
        org.joda.time.PeriodType periodType68 = periodType65.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration57, (org.joda.time.ReadableInstant) dateTime60, periodType68);
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime47, (org.joda.time.ReadableDuration) duration51, periodType68);
        org.joda.time.PeriodType periodType71 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period72 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, (org.joda.time.ReadableInstant) dateTime47, periodType71);
        org.joda.time.TimeOfDay timeOfDay73 = dateTime47.toTimeOfDay();
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.DateTime dateTime75 = timeOfDay73.toDateTime(readableInstant74);
        org.joda.time.Instant instant77 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant79 = instant77.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime80 = instant77.toMutableDateTimeISO();
        org.joda.time.DateTime dateTime81 = timeOfDay73.toDateTime((org.joda.time.ReadableInstant) instant77);
        org.joda.time.Duration duration84 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period85 = duration84.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray86 = period85.getFieldTypes();
        int int87 = period85.getMinutes();
        org.joda.time.Period period89 = period85.withDays((int) ' ');
        org.joda.time.Period period91 = period85.plusWeeks(10);
        org.joda.time.Period period93 = period85.minusMillis((int) (short) 1);
        int[] intArray94 = period85.getValues();
        int int95 = dateTimeField31.getMaximumValue((org.joda.time.ReadablePartial) timeOfDay73, intArray94);
        int int96 = timeOfDay73.size();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0541");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration4 = null;
        boolean boolean5 = duration2.isEqual(readableDuration4);
        org.joda.time.Duration duration7 = duration2.minus((long) 1);
        org.joda.time.Duration duration9 = duration7.minus((long) '4');
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Duration duration22 = duration19.plus((long) (byte) 0);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType30, chronology31);
        org.joda.time.PeriodType periodType33 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, (org.joda.time.ReadableInstant) dateTime25, periodType33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime12, (org.joda.time.ReadableDuration) duration16, periodType33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime12, periodType36);
        org.joda.time.Duration duration39 = duration7.minus((long) 7);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int50 = mutablePeriod49.getDays();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.DateTime dateTime54 = new org.joda.time.DateTime(chronology53);
        org.joda.time.DateTime.Property property55 = dateTime54.yearOfEra();
        org.joda.time.Interval interval56 = property55.toInterval();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.DateTime dateTime58 = new org.joda.time.DateTime(chronology57);
        org.joda.time.DateTime.Property property59 = dateTime58.yearOfEra();
        org.joda.time.Interval interval60 = property59.toInterval();
        boolean boolean61 = interval56.contains((org.joda.time.ReadableInterval) interval60);
        org.joda.time.Chronology chronology62 = interval60.getChronology();
        mutablePeriod49.setPeriod((long) 'u', (long) 1969, chronology62);
        org.joda.time.Period period64 = new org.joda.time.Period((long) (byte) 100, chronology62);
        org.joda.time.Period period65 = duration39.toPeriod(chronology62);
        org.joda.time.DateTimeField dateTimeField66 = chronology62.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField67 = chronology62.monthOfYear();
        java.util.Locale locale69 = java.util.Locale.US;
        java.util.Locale locale70 = java.util.Locale.US;
        java.lang.String str71 = locale69.getDisplayScript(locale70);
        java.lang.String str72 = dateTimeField67.getAsShortText(432000000L, locale70);
        java.lang.String str73 = locale70.getCountry();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime12", (instant11.compareTo(dateTime12) == 0) == instant11.equals(dateTime12));
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0542");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTime.Property property26 = dateTime24.dayOfMonth();
        org.joda.time.DurationField durationField27 = property26.getRangeDurationField();
        long long29 = durationField27.getValueAsLong(27734400000L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0543");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.DateTime.Property property18 = dateTime8.yearOfEra();
        int int19 = dateTime8.getDayOfMonth();
        org.joda.time.Instant instant20 = dateTime8.toInstant();
        org.joda.time.DateTime.Property property21 = dateTime8.millisOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.DateTimeField dateTimeField24 = dateTimeFieldType22.getField(chronology23);
        long long27 = dateTimeField24.add(0L, (long) (short) 1);
        long long29 = dateTimeField24.roundHalfCeiling((long) 2);
        org.joda.time.Instant instant31 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime32 = instant31.toDateTime();
        org.joda.time.DateTime.Property property33 = dateTime32.era();
        org.joda.time.Instant instant35 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant37 = instant35.minus(100L);
        org.joda.time.Instant instant39 = instant37.plus((long) 100);
        org.joda.time.Instant instant41 = instant37.withMillis((long) (byte) 1);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime32, (org.joda.time.ReadableInstant) instant37);
        org.joda.time.LocalTime localTime43 = dateTime32.toLocalTime();
        org.joda.time.Duration duration47 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.PeriodType periodType49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration47, readableInstant48, periodType49);
        mutablePeriod50.setMonths((int) '4');
        org.joda.time.Period period53 = mutablePeriod50.toPeriod();
        int[] intArray54 = period53.getValues();
        int[] intArray56 = dateTimeField24.addWrapField((org.joda.time.ReadablePartial) localTime43, 0, intArray54, 3);
        int int57 = property21.compareTo((org.joda.time.ReadablePartial) localTime43);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0544");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZone(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean11 = dateTime7.isSupported(dateTimeFieldType10);
        org.joda.time.DateTime.Property property12 = dateTime2.property(dateTimeFieldType10);
        java.util.Locale locale13 = java.util.Locale.ITALY;
        java.util.Locale locale17 = new java.util.Locale("", "hi!", "hi!");
        java.lang.String str18 = locale13.getDisplayCountry(locale17);
        java.lang.String str19 = locale17.getISO3Language();
        int int20 = property12.getMaximumShortTextLength(locale17);
        java.util.Locale locale21 = java.util.Locale.ITALY;
        java.util.Locale locale25 = new java.util.Locale("", "hi!", "hi!");
        java.lang.String str26 = locale21.getDisplayCountry(locale25);
        java.lang.String str27 = locale25.getDisplayVariant();
        boolean boolean28 = property12.equals((java.lang.Object) str27);
        org.joda.time.DateTime dateTime30 = property12.addToCopy(366);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0545");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (short) 10, (long) (byte) 0);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime(chronology3);
        org.joda.time.DateTime.Property property5 = dateTime4.yearOfEra();
        org.joda.time.Interval interval6 = property5.toInterval();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.DateTime dateTime8 = new org.joda.time.DateTime(chronology7);
        org.joda.time.DateTime.Property property9 = dateTime8.yearOfEra();
        org.joda.time.Interval interval10 = property9.toInterval();
        boolean boolean11 = interval6.contains((org.joda.time.ReadableInterval) interval10);
        java.lang.String str12 = interval6.toString();
        org.joda.time.Instant instant14 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant15 = instant14.toInstant();
        org.joda.time.DateTime dateTime16 = instant15.toDateTimeISO();
        boolean boolean17 = interval6.isAfter((org.joda.time.ReadableInstant) dateTime16);
        mutablePeriod2.add((org.joda.time.ReadableInterval) interval6);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant14 and dateTime16", (instant14.compareTo(dateTime16) == 0) == instant14.equals(dateTime16));
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0546");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.Interval interval7 = property6.toInterval();
        boolean boolean8 = interval3.contains((org.joda.time.ReadableInterval) interval7);
        java.lang.String str9 = interval7.toString();
        org.joda.time.Period period10 = interval7.toPeriod();
        org.joda.time.Duration duration13 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds14 = duration13.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration15 = null;
        boolean boolean16 = duration13.isEqual(readableDuration15);
        org.joda.time.Duration duration18 = duration13.minus((long) 1);
        org.joda.time.Duration duration20 = duration18.minus((long) '4');
        org.joda.time.Instant instant22 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime23 = instant22.toDateTime();
        org.joda.time.DateTime.Property property24 = dateTime23.era();
        org.joda.time.Duration duration27 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration30 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period31 = duration30.toPeriod();
        org.joda.time.Duration duration33 = duration30.plus((long) (byte) 0);
        org.joda.time.Instant instant35 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime36 = instant35.toDateTime();
        boolean boolean38 = dateTime36.isEqual(10L);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType41, chronology42);
        org.joda.time.PeriodType periodType44 = periodType41.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration33, (org.joda.time.ReadableInstant) dateTime36, periodType44);
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableDuration) duration27, periodType44);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, (org.joda.time.ReadableInstant) dateTime23, periodType47);
        java.lang.String str49 = period48.toString();
        org.joda.time.Duration duration50 = period48.toStandardDuration();
        org.joda.time.Duration duration53 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period54 = duration53.toPeriod();
        org.joda.time.Duration duration56 = duration53.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = duration53.toPeriodTo(readableInstant57);
        org.joda.time.Duration duration60 = duration53.withMillis((long) (short) 0);
        org.joda.time.Duration duration63 = duration53.withDurationAdded((long) 1, (int) ' ');
        org.joda.time.Instant instant65 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime66 = instant65.toDateTime();
        boolean boolean68 = dateTime66.isEqual(10L);
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration63, (org.joda.time.ReadableInstant) dateTime66, periodType69);
        org.joda.time.DateTime dateTime72 = dateTime66.minusSeconds((int) 'a');
        org.joda.time.DateTime dateTime74 = dateTime66.withMinuteOfHour(0);
        org.joda.time.DateTime.Property property75 = dateTime66.minuteOfHour();
        org.joda.time.Interval interval76 = duration50.toIntervalFrom((org.joda.time.ReadableInstant) dateTime66);
        boolean boolean77 = interval7.isBefore((org.joda.time.ReadableInterval) interval76);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant22 and dateTime23", (instant22.compareTo(dateTime23) == 0) == instant22.equals(dateTime23));
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0547");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = duration2.toPeriodTo(readableInstant6);
        org.joda.time.Duration duration9 = duration2.withMillis((long) (short) 0);
        org.joda.time.Duration duration12 = duration2.withDurationAdded((long) 1, (int) ' ');
        org.joda.time.Instant instant14 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant14.toDateTime();
        boolean boolean17 = dateTime15.isEqual(10L);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, (org.joda.time.ReadableInstant) dateTime15, periodType18);
        org.joda.time.DateTime dateTime21 = dateTime15.minusSeconds((int) 'a');
        org.joda.time.Duration duration24 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period25 = duration24.toPeriod();
        org.joda.time.Duration duration27 = duration24.plus((long) (byte) 0);
        org.joda.time.Instant instant29 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime30 = instant29.toDateTime();
        boolean boolean32 = dateTime30.isEqual(10L);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType35, chronology36);
        org.joda.time.PeriodType periodType38 = periodType35.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration27, (org.joda.time.ReadableInstant) dateTime30, periodType38);
        org.joda.time.DateTime.Property property40 = dateTime30.yearOfEra();
        java.util.GregorianCalendar gregorianCalendar41 = dateTime30.toGregorianCalendar();
        org.joda.time.DateTime dateTime43 = dateTime30.minusMillis((int) (short) -1);
        org.joda.time.DateTime dateTime47 = dateTime43.withDate((int) (short) 100, 9, 10);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime15, (org.joda.time.ReadableInstant) dateTime43);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant14 and dateTime30", (instant14.compareTo(dateTime30) == 0) == instant14.equals(dateTime30));
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0548");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.TimeOfDay timeOfDay6 = dateTime2.toTimeOfDay();
        org.joda.time.Instant instant8 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime9 = instant8.toDateTime();
        org.joda.time.DateTime.Property property10 = dateTime9.era();
        org.joda.time.DateTime dateTime11 = dateTime9.withTimeAtStartOfDay();
        org.joda.time.Instant instant12 = dateTime9.toInstant();
        org.joda.time.DateMidnight dateMidnight13 = dateTime9.toDateMidnight();
        org.joda.time.DateTime dateTime16 = dateTime9.withDurationAdded(0L, (int) 'a');
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) dateTime16);
        org.joda.time.DateTime.Property property18 = dateTime2.secondOfDay();
        org.joda.time.DateTime.Property property19 = dateTime2.era();
        int int20 = property19.getMinimumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType21 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.DateTimeField dateTimeField23 = dateTimeFieldType21.getField(chronology22);
        long long26 = dateTimeField23.add(0L, (long) (short) 1);
        boolean boolean28 = dateTimeField23.isLeap(10L);
        int int30 = dateTimeField23.get((-1L));
        long long32 = dateTimeField23.remainder((long) (byte) 0);
        java.util.Locale locale33 = java.util.Locale.ITALY;
        int int34 = dateTimeField23.getMaximumShortTextLength(locale33);
        java.lang.String str35 = property19.getAsText(locale33);
        java.util.Locale locale37 = new java.util.Locale("1969-12-31T23:59:59.899Z");
        java.lang.String str38 = locale33.getDisplayName(locale37);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0549");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration4 = null;
        boolean boolean5 = duration2.isEqual(readableDuration4);
        org.joda.time.Duration duration7 = duration2.minus((long) 1);
        org.joda.time.Duration duration9 = duration7.minus((long) '4');
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Duration duration22 = duration19.plus((long) (byte) 0);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType30, chronology31);
        org.joda.time.PeriodType periodType33 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, (org.joda.time.ReadableInstant) dateTime25, periodType33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime12, (org.joda.time.ReadableDuration) duration16, periodType33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime12, periodType36);
        org.joda.time.Duration duration39 = duration7.minus((long) 7);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int50 = mutablePeriod49.getDays();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.DateTime dateTime54 = new org.joda.time.DateTime(chronology53);
        org.joda.time.DateTime.Property property55 = dateTime54.yearOfEra();
        org.joda.time.Interval interval56 = property55.toInterval();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.DateTime dateTime58 = new org.joda.time.DateTime(chronology57);
        org.joda.time.DateTime.Property property59 = dateTime58.yearOfEra();
        org.joda.time.Interval interval60 = property59.toInterval();
        boolean boolean61 = interval56.contains((org.joda.time.ReadableInterval) interval60);
        org.joda.time.Chronology chronology62 = interval60.getChronology();
        mutablePeriod49.setPeriod((long) 'u', (long) 1969, chronology62);
        org.joda.time.Period period64 = new org.joda.time.Period((long) (byte) 100, chronology62);
        org.joda.time.Period period65 = duration39.toPeriod(chronology62);
        org.joda.time.DateTimeField dateTimeField66 = chronology62.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField67 = chronology62.monthOfYear();
        org.joda.time.DurationField durationField68 = chronology62.weeks();
        org.joda.time.DateTimeField dateTimeField69 = chronology62.secondOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime12", (instant11.compareTo(dateTime12) == 0) == instant11.equals(dateTime12));
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0550");
        java.util.Locale.Category category0 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale4 = new java.util.Locale("", "hi!", "hi!");
        java.util.Set<java.lang.Character> charSet5 = locale4.getExtensionKeys();
        java.util.Locale.setDefault(category0, locale4);
        org.joda.time.format.PeriodPrinter periodPrinter7 = null;
        org.joda.time.format.PeriodParser periodParser8 = null;
        org.joda.time.format.PeriodFormatter periodFormatter9 = new org.joda.time.format.PeriodFormatter(periodPrinter7, periodParser8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.format.PeriodFormatter periodFormatter11 = periodFormatter9.withParseType(periodType10);
        java.util.Locale locale12 = periodFormatter9.getLocale();
        java.util.Locale locale13 = java.util.Locale.ITALY;
        java.lang.String str14 = locale13.getScript();
        org.joda.time.format.PeriodFormatter periodFormatter15 = periodFormatter9.withLocale(locale13);
        java.util.Locale locale16 = locale13.stripExtensions();
        java.lang.String str17 = locale16.getDisplayName();
        java.lang.String str18 = locale16.getISO3Language();
        java.util.Locale.setDefault(category0, locale16);
        org.joda.time.Instant instant21 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime22 = instant21.toDateTime();
        org.joda.time.DateTime.Property property23 = dateTime22.era();
        org.joda.time.DateTime dateTime24 = dateTime22.withTimeAtStartOfDay();
        org.joda.time.Duration duration27 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.PeriodType periodType29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration27, readableInstant28, periodType29);
        mutablePeriod30.setMonths((int) '4');
        org.joda.time.DateTime dateTime33 = dateTime22.plus((org.joda.time.ReadablePeriod) mutablePeriod30);
        org.joda.time.DateTime dateTime35 = dateTime22.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property36 = dateTime35.monthOfYear();
        org.joda.time.DateTime.Property property37 = dateTime35.weekyear();
        org.joda.time.DateTime dateTime38 = dateTime35.toDateTime();
        int int39 = dateTime35.getSecondOfDay();
        org.joda.time.DateTime.Property property40 = dateTime35.era();
        org.joda.time.DateTime.Property property41 = dateTime35.centuryOfEra();
        java.util.Locale.Builder builder42 = new java.util.Locale.Builder();
        java.util.Locale locale43 = java.util.Locale.ENGLISH;
        java.util.Locale.Builder builder44 = builder42.setLocale(locale43);
        java.util.Locale locale45 = builder44.build();
        boolean boolean46 = dateTime35.equals((java.lang.Object) locale45);
        java.util.Locale.setDefault(locale45);
        java.lang.String str48 = locale16.getDisplayVariant(locale45);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant21 and dateTime22", (instant21.compareTo(dateTime22) == 0) == instant21.equals(dateTime22));
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0551");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant3, periodType4);
        org.joda.time.Duration duration8 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration8, readableInstant9, periodType10);
        boolean boolean12 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration15 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds16 = duration15.toStandardSeconds();
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant20 = instant18.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime21 = instant18.toMutableDateTimeISO();
        org.joda.time.Period period22 = duration15.toPeriodTo((org.joda.time.ReadableInstant) instant18);
        org.joda.time.Duration duration23 = period22.toStandardDuration();
        org.joda.time.Duration duration26 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period27 = duration26.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray28 = period27.getFieldTypes();
        int int29 = period27.getMinutes();
        org.joda.time.Period period31 = period27.withDays((int) ' ');
        org.joda.time.Period period33 = period31.withYears(86399);
        org.joda.time.Period period38 = new org.joda.time.Period(0, (int) (byte) -1, (int) '#', 7);
        org.joda.time.Period period39 = period31.plus((org.joda.time.ReadablePeriod) period38);
        org.joda.time.Period period40 = period22.plus((org.joda.time.ReadablePeriod) period38);
        org.joda.time.Period period42 = period40.minusMillis((int) (short) 100);
        boolean boolean43 = duration8.equals((java.lang.Object) period42);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant18 and mutableDateTime21", (instant18.compareTo(mutableDateTime21) == 0) == instant18.equals(mutableDateTime21));
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0552");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField29 = chronology25.halfdayOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0553");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) ' ');
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period5 = duration4.toPeriod();
        org.joda.time.Duration duration7 = duration4.plus((long) (byte) 0);
        org.joda.time.Instant instant9 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime10 = instant9.toDateTime();
        boolean boolean12 = dateTime10.isEqual(10L);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType15, chronology16);
        org.joda.time.PeriodType periodType18 = periodType15.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime10, periodType18);
        org.joda.time.Instant instant21 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime22 = instant21.toDateTime();
        org.joda.time.DateTime.Property property23 = dateTime22.era();
        org.joda.time.DateTime dateTime24 = dateTime22.withTimeAtStartOfDay();
        org.joda.time.Instant instant25 = dateTime22.toInstant();
        org.joda.time.DateTime dateTime27 = dateTime22.withMillis((long) '4');
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime22);
        int int29 = dateTime22.getYear();
        org.joda.time.Duration duration32 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Duration duration35 = duration32.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = duration32.toPeriodTo(readableInstant36);
        org.joda.time.Instant instant39 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant41 = instant39.minus(100L);
        java.lang.String str42 = instant41.toString();
        org.joda.time.Duration duration45 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period46 = duration45.toPeriod();
        org.joda.time.Duration duration48 = duration45.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = duration45.toPeriodTo(readableInstant49);
        org.joda.time.Duration duration53 = duration45.withDurationAdded((long) (short) -1, (int) (byte) 100);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MutablePeriod mutablePeriod58 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType56, chronology57);
        org.joda.time.PeriodType periodType59 = periodType56.withWeeksRemoved();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration53.toPeriod(periodType59, chronology60);
        org.joda.time.Period period62 = duration32.toPeriodFrom((org.joda.time.ReadableInstant) instant41, periodType59);
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime22, periodType59);
        org.joda.time.Instant instant65 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime66 = instant65.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone67 = null;
        org.joda.time.DateTime dateTime68 = dateTime66.withZoneRetainFields(dateTimeZone67);
        org.joda.time.Instant instant70 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime71 = instant70.toDateTime();
        org.joda.time.DateTime.Property property72 = dateTime71.era();
        org.joda.time.DateTime dateTime73 = dateTime71.withTimeAtStartOfDay();
        org.joda.time.Duration duration76 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.PeriodType periodType78 = null;
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration76, readableInstant77, periodType78);
        mutablePeriod79.setMonths((int) '4');
        org.joda.time.DateTime dateTime82 = dateTime71.plus((org.joda.time.ReadablePeriod) mutablePeriod79);
        org.joda.time.DateTime dateTime84 = dateTime71.minusWeeks((int) (byte) 1);
        int int85 = dateTime68.compareTo((org.joda.time.ReadableInstant) dateTime71);
        org.joda.time.DateTime dateTime86 = dateTime68.toDateTimeISO();
        org.joda.time.DateTime dateTime88 = dateTime68.withDayOfYear(8);
        org.joda.time.DateTime dateTime89 = dateTime88.withTimeAtStartOfDay();
        org.joda.time.Period period90 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime88);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime10", (instant9.compareTo(dateTime10) == 0) == instant9.equals(dateTime10));
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0554");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime(chronology1);
        org.joda.time.Instant instant4 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime5 = instant4.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone6 = null;
        org.joda.time.DateTime dateTime7 = dateTime5.withZoneRetainFields(dateTimeZone6);
        org.joda.time.Instant instant9 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime10 = instant9.toDateTime();
        org.joda.time.DateTime.Property property11 = dateTime10.era();
        org.joda.time.DateTime dateTime12 = dateTime10.withTimeAtStartOfDay();
        org.joda.time.Duration duration15 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration15, readableInstant16, periodType17);
        mutablePeriod18.setMonths((int) '4');
        org.joda.time.DateTime dateTime21 = dateTime10.plus((org.joda.time.ReadablePeriod) mutablePeriod18);
        org.joda.time.DateTime dateTime23 = dateTime10.minusWeeks((int) (byte) 1);
        int int24 = dateTime7.compareTo((org.joda.time.ReadableInstant) dateTime10);
        org.joda.time.DateTime.Property property25 = dateTime10.minuteOfHour();
        org.joda.time.DateTime dateTime27 = dateTime10.withYear(1969);
        org.joda.time.Chronology chronology28 = dateTime27.getChronology();
        org.joda.time.DateTimeField dateTimeField29 = chronology28.dayOfMonth();
        org.joda.time.DurationField durationField30 = chronology28.minutes();
        org.joda.time.DateTime dateTime31 = dateTime2.toDateTime(chronology28);
        org.joda.time.DateTimeField dateTimeField32 = chronology28.hourOfHalfday();
        org.joda.time.DateTime dateTime33 = new org.joda.time.DateTime((long) 1972, chronology28);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant4 and dateTime5", (instant4.compareTo(dateTime5) == 0) == instant4.equals(dateTime5));
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0555");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant3, periodType4);
        org.joda.time.Days days6 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType7 = org.joda.time.DurationFieldType.minutes();
        int int8 = days6.get(durationFieldType7);
        mutablePeriod5.add(durationFieldType7, 8);
        org.joda.time.ReadablePeriod readablePeriod11 = null;
        mutablePeriod5.add(readablePeriod11);
        int int13 = mutablePeriod5.getMonths();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.DateTime dateTime15 = new org.joda.time.DateTime(chronology14);
        org.joda.time.DateTime.Property property16 = dateTime15.yearOfEra();
        org.joda.time.Interval interval17 = property16.toInterval();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(chronology18);
        org.joda.time.DateTime.Property property20 = dateTime19.yearOfEra();
        org.joda.time.Interval interval21 = property20.toInterval();
        boolean boolean22 = interval17.contains((org.joda.time.ReadableInterval) interval21);
        mutablePeriod5.setPeriod((org.joda.time.ReadableInterval) interval17);
        org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant27 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime28 = instant27.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone29 = null;
        org.joda.time.DateTime dateTime30 = dateTime28.withZoneRetainFields(dateTimeZone29);
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime33 = instant32.toDateTime();
        org.joda.time.DateTime.Property property34 = dateTime33.era();
        org.joda.time.DateTime dateTime35 = dateTime33.withTimeAtStartOfDay();
        org.joda.time.Duration duration38 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration38, readableInstant39, periodType40);
        mutablePeriod41.setMonths((int) '4');
        org.joda.time.DateTime dateTime44 = dateTime33.plus((org.joda.time.ReadablePeriod) mutablePeriod41);
        org.joda.time.DateTime dateTime46 = dateTime33.minusWeeks((int) (byte) 1);
        int int47 = dateTime30.compareTo((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.DateTime.Property property48 = dateTime33.minuteOfHour();
        org.joda.time.DateTime dateTime50 = dateTime33.withYear(1969);
        org.joda.time.Chronology chronology51 = dateTime50.getChronology();
        org.joda.time.DurationField durationField52 = durationFieldType25.getField(chronology51);
        mutablePeriod5.add((-43199999L), chronology51);
        mutablePeriod5.setSeconds(1972);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant27 and dateTime28", (instant27.compareTo(dateTime28) == 0) == instant27.equals(dateTime28));
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0556");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant6, periodType7);
        org.joda.time.Days days9 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType10 = org.joda.time.DurationFieldType.minutes();
        int int11 = days9.get(durationFieldType10);
        mutablePeriod8.add(durationFieldType10, 8);
        org.joda.time.ReadablePeriod readablePeriod14 = null;
        mutablePeriod8.add(readablePeriod14);
        int int16 = mutablePeriod8.getMonths();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.DateTime dateTime18 = new org.joda.time.DateTime(chronology17);
        org.joda.time.DateTime.Property property19 = dateTime18.yearOfEra();
        org.joda.time.Interval interval20 = property19.toInterval();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.DateTime dateTime22 = new org.joda.time.DateTime(chronology21);
        org.joda.time.DateTime.Property property23 = dateTime22.yearOfEra();
        org.joda.time.Interval interval24 = property23.toInterval();
        boolean boolean25 = interval20.contains((org.joda.time.ReadableInterval) interval24);
        mutablePeriod8.setPeriod((org.joda.time.ReadableInterval) interval20);
        org.joda.time.DurationFieldType durationFieldType28 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant30 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime31 = instant30.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone32 = null;
        org.joda.time.DateTime dateTime33 = dateTime31.withZoneRetainFields(dateTimeZone32);
        org.joda.time.Instant instant35 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime36 = instant35.toDateTime();
        org.joda.time.DateTime.Property property37 = dateTime36.era();
        org.joda.time.DateTime dateTime38 = dateTime36.withTimeAtStartOfDay();
        org.joda.time.Duration duration41 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.PeriodType periodType43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration41, readableInstant42, periodType43);
        mutablePeriod44.setMonths((int) '4');
        org.joda.time.DateTime dateTime47 = dateTime36.plus((org.joda.time.ReadablePeriod) mutablePeriod44);
        org.joda.time.DateTime dateTime49 = dateTime36.minusWeeks((int) (byte) 1);
        int int50 = dateTime33.compareTo((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.DateTime.Property property51 = dateTime36.minuteOfHour();
        org.joda.time.DateTime dateTime53 = dateTime36.withYear(1969);
        org.joda.time.Chronology chronology54 = dateTime53.getChronology();
        org.joda.time.DurationField durationField55 = durationFieldType28.getField(chronology54);
        mutablePeriod8.add((-43199999L), chronology54);
        org.joda.time.DurationField durationField57 = chronology54.millis();
        org.joda.time.DurationField durationField58 = chronology54.months();
        org.joda.time.DateTime dateTime59 = new org.joda.time.DateTime((long) 69, chronology54);
        org.joda.time.DateTimeField dateTimeField60 = chronology54.minuteOfDay();
        org.joda.time.DurationField durationField61 = chronology54.months();
        org.joda.time.DateTime dateTime62 = org.joda.time.DateTime.now(chronology54);
        org.joda.time.Period period63 = new org.joda.time.Period((long) 292278993, periodType1, chronology54);
        int int64 = period63.size();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant30 and dateTime31", (instant30.compareTo(dateTime31) == 0) == instant30.equals(dateTime31));
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0557");
        org.joda.time.Instant instant3 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime4 = instant3.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone5 = null;
        org.joda.time.DateTime dateTime6 = dateTime4.withZoneRetainFields(dateTimeZone5);
        org.joda.time.Instant instant8 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime9 = instant8.toDateTime();
        org.joda.time.DateTime.Property property10 = dateTime9.era();
        org.joda.time.DateTime dateTime11 = dateTime9.withTimeAtStartOfDay();
        org.joda.time.Duration duration14 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration14, readableInstant15, periodType16);
        mutablePeriod17.setMonths((int) '4');
        org.joda.time.DateTime dateTime20 = dateTime9.plus((org.joda.time.ReadablePeriod) mutablePeriod17);
        org.joda.time.DateTime dateTime22 = dateTime9.minusWeeks((int) (byte) 1);
        int int23 = dateTime6.compareTo((org.joda.time.ReadableInstant) dateTime9);
        org.joda.time.DateTime.Property property24 = dateTime9.minuteOfHour();
        org.joda.time.DateTime dateTime26 = dateTime9.withYear(1969);
        org.joda.time.Chronology chronology27 = dateTime26.getChronology();
        org.joda.time.DateTimeField dateTimeField28 = chronology27.year();
        org.joda.time.DateTimeField dateTimeField29 = chronology27.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField30 = chronology27.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField31 = chronology27.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField32 = chronology27.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField33 = chronology27.yearOfEra();
        org.joda.time.DateTimeField dateTimeField34 = chronology27.weekyear();
        org.joda.time.Period period35 = new org.joda.time.Period(128770560000000019L, 292278993L, chronology27);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant3 and dateTime4", (instant3.compareTo(dateTime4) == 0) == instant3.equals(dateTime4));
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0558");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType3, chronology4);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) (short) 0, periodType3, chronology6);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((long) (short) 10, periodType9);
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant13 = instant12.toInstant();
        org.joda.time.DateTime dateTime14 = instant13.toDateTimeISO();
        org.joda.time.Duration duration15 = period10.toDurationFrom((org.joda.time.ReadableInstant) dateTime14);
        org.joda.time.Duration duration18 = new org.joda.time.Duration((-1L), (long) 23);
        org.joda.time.Period period20 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period22 = period20.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration24 = period22.toDurationTo(readableInstant23);
        org.joda.time.Duration duration27 = duration24.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = duration27.toPeriodFrom(readableInstant28);
        org.joda.time.Duration duration30 = duration18.minus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration15.plus((org.joda.time.ReadableDuration) duration18);
        mutablePeriod7.add((org.joda.time.ReadableDuration) duration18);
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int45 = mutablePeriod44.getDays();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.DateTime dateTime49 = new org.joda.time.DateTime(chronology48);
        org.joda.time.DateTime.Property property50 = dateTime49.yearOfEra();
        org.joda.time.Interval interval51 = property50.toInterval();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.DateTime dateTime53 = new org.joda.time.DateTime(chronology52);
        org.joda.time.DateTime.Property property54 = dateTime53.yearOfEra();
        org.joda.time.Interval interval55 = property54.toInterval();
        boolean boolean56 = interval51.contains((org.joda.time.ReadableInterval) interval55);
        org.joda.time.Chronology chronology57 = interval55.getChronology();
        mutablePeriod44.setPeriod((long) 'u', (long) 1969, chronology57);
        org.joda.time.Period period59 = new org.joda.time.Period((long) (byte) 100, chronology57);
        mutablePeriod7.setPeriod((long) 1, (long) 69, chronology57);
        org.joda.time.DateTimeField dateTimeField61 = chronology57.year();
        org.joda.time.DurationField durationField62 = chronology57.seconds();
        java.lang.String str63 = durationField62.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime14", (instant12.compareTo(dateTime14) == 0) == instant12.equals(dateTime14));
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0559");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.DateTime.Property property5 = dateTime4.weekOfWeekyear();
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant9 = instant7.minus(100L);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime4, (org.joda.time.ReadableInstant) instant7);
        org.joda.time.DateTimeZone dateTimeZone11 = dateTime4.getZone();
        java.lang.Object obj12 = null;
        org.joda.time.Instant instant13 = new org.joda.time.Instant(obj12);
        org.joda.time.DateTimeZone dateTimeZone14 = instant13.getZone();
        java.lang.String str15 = dateTimeZone14.toString();
        java.lang.String str17 = dateTimeZone14.getName((long) 10);
        java.lang.String str19 = dateTimeZone14.getName((long) 8);
        long long21 = dateTimeZone11.getMillisKeepLocal(dateTimeZone14, 10L);
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime24 = instant23.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone25 = null;
        org.joda.time.DateTime dateTime26 = dateTime24.withZoneRetainFields(dateTimeZone25);
        org.joda.time.Instant instant28 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime29 = instant28.toDateTime();
        org.joda.time.DateTime.Property property30 = dateTime29.era();
        org.joda.time.DateTime dateTime31 = dateTime29.withTimeAtStartOfDay();
        org.joda.time.Duration duration34 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration34, readableInstant35, periodType36);
        mutablePeriod37.setMonths((int) '4');
        org.joda.time.DateTime dateTime40 = dateTime29.plus((org.joda.time.ReadablePeriod) mutablePeriod37);
        org.joda.time.DateTime dateTime42 = dateTime29.minusWeeks((int) (byte) 1);
        int int43 = dateTime26.compareTo((org.joda.time.ReadableInstant) dateTime29);
        org.joda.time.DateTime dateTime44 = dateTime26.toDateTimeISO();
        org.joda.time.Instant instant46 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime47 = instant46.toDateTime();
        org.joda.time.DateTime.Property property48 = dateTime47.era();
        org.joda.time.DateTime dateTime49 = dateTime47.withTimeAtStartOfDay();
        org.joda.time.Duration duration52 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.PeriodType periodType54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration52, readableInstant53, periodType54);
        mutablePeriod55.setMonths((int) '4');
        org.joda.time.DateTime dateTime58 = dateTime47.plus((org.joda.time.ReadablePeriod) mutablePeriod55);
        org.joda.time.DateTime dateTime60 = dateTime47.minusWeeks((int) (byte) 1);
        long long61 = dateTime47.getMillis();
        org.joda.time.DurationFieldType durationFieldType62 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant64 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime65 = instant64.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone66 = null;
        org.joda.time.DateTime dateTime67 = dateTime65.withZoneRetainFields(dateTimeZone66);
        org.joda.time.Instant instant69 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime70 = instant69.toDateTime();
        org.joda.time.DateTime.Property property71 = dateTime70.era();
        org.joda.time.DateTime dateTime72 = dateTime70.withTimeAtStartOfDay();
        org.joda.time.Duration duration75 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.PeriodType periodType77 = null;
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration75, readableInstant76, periodType77);
        mutablePeriod78.setMonths((int) '4');
        org.joda.time.DateTime dateTime81 = dateTime70.plus((org.joda.time.ReadablePeriod) mutablePeriod78);
        org.joda.time.DateTime dateTime83 = dateTime70.minusWeeks((int) (byte) 1);
        int int84 = dateTime67.compareTo((org.joda.time.ReadableInstant) dateTime70);
        org.joda.time.DateTime.Property property85 = dateTime70.minuteOfHour();
        org.joda.time.DateTime dateTime87 = dateTime70.withYear(1969);
        org.joda.time.Chronology chronology88 = dateTime87.getChronology();
        org.joda.time.DurationField durationField89 = durationFieldType62.getField(chronology88);
        org.joda.time.DateTime dateTime90 = dateTime47.toDateTime(chronology88);
        int int91 = dateTime44.compareTo((org.joda.time.ReadableInstant) dateTime90);
        int int92 = dateTimeZone14.getOffset((org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.DateTime dateTime94 = dateTime44.minus(36720097L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0560");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.DateMidnight dateMidnight6 = dateTime2.toDateMidnight();
        org.joda.time.DateTime dateTime9 = dateTime2.withDurationAdded(0L, (int) 'a');
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period13 = duration12.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray14 = period13.getFieldTypes();
        org.joda.time.Period period16 = period13.minusYears((int) (byte) 1);
        org.joda.time.Period period18 = period13.plusMonths((int) (byte) 0);
        int int19 = period13.size();
        org.joda.time.Period period21 = period13.plusYears(100);
        org.joda.time.Period period23 = period13.minusSeconds(292278993);
        org.joda.time.Duration duration26 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration26, readableInstant27, periodType28);
        mutablePeriod29.addDays((int) (short) 100);
        org.joda.time.DurationFieldType durationFieldType32 = org.joda.time.DurationFieldType.days();
        mutablePeriod29.add(durationFieldType32, 8);
        boolean boolean35 = period13.isSupported(durationFieldType32);
        org.joda.time.DateTime dateTime37 = dateTime2.withFieldAdded(durationFieldType32, (-2147483648));
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.DateTime dateTime39 = dateTime2.toDateTime(chronology38);
        org.joda.time.DateTime dateTime41 = dateTime2.withYearOfEra((int) (short) 100);
        org.joda.time.DateTime dateTime43 = dateTime2.withCenturyOfEra(366);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0561");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        org.joda.time.DateTime.Property property21 = dateTime20.era();
        org.joda.time.DateTime dateTime22 = dateTime20.withTimeAtStartOfDay();
        org.joda.time.Instant instant23 = dateTime20.toInstant();
        org.joda.time.DateTime dateTime25 = dateTime20.withMillis((long) '4');
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes30 = minutes28.minus((int) (short) -1);
        boolean boolean31 = minutes27.isGreaterThan(minutes28);
        org.joda.time.Minutes minutes32 = null;
        org.joda.time.Minutes minutes33 = minutes28.minus(minutes32);
        org.joda.time.Minutes minutes35 = minutes28.plus((int) (short) 1);
        org.joda.time.PeriodType periodType36 = minutes35.getPeriodType();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        boolean boolean38 = minutes35.isLessThan(minutes37);
        org.joda.time.Minutes minutes39 = minutes26.plus(minutes35);
        org.joda.time.Duration duration40 = minutes35.toStandardDuration();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0562");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant3 = instant1.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime4 = instant1.toMutableDateTimeISO();
        java.lang.Object obj5 = null;
        org.joda.time.Instant instant6 = new org.joda.time.Instant(obj5);
        boolean boolean7 = mutableDateTime4.isAfter((org.joda.time.ReadableInstant) instant6);
        org.joda.time.Instant instant8 = instant6.toInstant();
        org.joda.time.Instant instant10 = instant8.withMillis(86399999L);
        org.joda.time.MutableDateTime mutableDateTime11 = instant10.toMutableDateTimeISO();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes(31536000000L);
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) (byte) 10);
        mutablePeriod15.setSeconds(7);
        org.joda.time.Days days18 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType19 = org.joda.time.DurationFieldType.minutes();
        int int20 = days18.get(durationFieldType19);
        org.joda.time.MutablePeriod mutablePeriod21 = days18.toMutablePeriod();
        org.joda.time.Days days23 = days18.multipliedBy((int) (byte) 1);
        org.joda.time.Duration duration24 = days18.toStandardDuration();
        org.joda.time.Instant instant26 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant28 = instant26.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime29 = instant26.toMutableDateTimeISO();
        int int30 = mutableDateTime29.getDayOfWeek();
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration24, (org.joda.time.ReadableInstant) mutableDateTime29);
        org.joda.time.Duration duration34 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period35 = duration34.toPeriod();
        org.joda.time.Duration duration37 = duration34.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = duration34.toPeriodTo(readableInstant38);
        org.joda.time.Instant instant41 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant43 = instant41.minus(100L);
        java.lang.String str44 = instant43.toString();
        org.joda.time.Duration duration47 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period48 = duration47.toPeriod();
        org.joda.time.Duration duration50 = duration47.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = duration47.toPeriodTo(readableInstant51);
        org.joda.time.Duration duration55 = duration47.withDurationAdded((long) (short) -1, (int) (byte) 100);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType58, chronology59);
        org.joda.time.PeriodType periodType61 = periodType58.withWeeksRemoved();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration55.toPeriod(periodType61, chronology62);
        org.joda.time.Period period64 = duration34.toPeriodFrom((org.joda.time.ReadableInstant) instant43, periodType61);
        mutablePeriod31.setPeriod((org.joda.time.ReadableDuration) duration34);
        mutablePeriod15.add((org.joda.time.ReadableDuration) duration34);
        int int67 = duration13.compareTo((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Instant instant68 = instant10.minus((org.joda.time.ReadableDuration) duration13);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and mutableDateTime4", (instant1.compareTo(mutableDateTime4) == 0) == instant1.equals(mutableDateTime4));
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0563");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(chronology2);
        org.joda.time.Instant instant5 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime6 = instant5.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone7 = null;
        org.joda.time.DateTime dateTime8 = dateTime6.withZoneRetainFields(dateTimeZone7);
        org.joda.time.Instant instant10 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime11 = instant10.toDateTime();
        org.joda.time.DateTime.Property property12 = dateTime11.era();
        org.joda.time.DateTime dateTime13 = dateTime11.withTimeAtStartOfDay();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration16, readableInstant17, periodType18);
        mutablePeriod19.setMonths((int) '4');
        org.joda.time.DateTime dateTime22 = dateTime11.plus((org.joda.time.ReadablePeriod) mutablePeriod19);
        org.joda.time.DateTime dateTime24 = dateTime11.minusWeeks((int) (byte) 1);
        int int25 = dateTime8.compareTo((org.joda.time.ReadableInstant) dateTime11);
        org.joda.time.DateTime.Property property26 = dateTime11.minuteOfHour();
        org.joda.time.DateTime dateTime28 = dateTime11.withYear(1969);
        org.joda.time.Chronology chronology29 = dateTime28.getChronology();
        org.joda.time.DateTimeField dateTimeField30 = chronology29.dayOfMonth();
        org.joda.time.DurationField durationField31 = chronology29.minutes();
        org.joda.time.DateTime dateTime32 = dateTime3.toDateTime(chronology29);
        org.joda.time.DateTimeField dateTimeField33 = chronology29.hourOfHalfday();
        org.joda.time.Period period34 = new org.joda.time.Period(1L, periodType1, chronology29);
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime37 = instant36.toDateTime();
        org.joda.time.DateTime.Property property38 = dateTime37.era();
        org.joda.time.DateTime dateTime39 = dateTime37.withTimeAtStartOfDay();
        org.joda.time.Instant instant40 = dateTime37.toInstant();
        org.joda.time.TimeOfDay timeOfDay41 = dateTime37.toTimeOfDay();
        org.joda.time.Instant instant43 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime44 = instant43.toDateTime();
        org.joda.time.DateTime.Property property45 = dateTime44.era();
        org.joda.time.DateTime dateTime46 = dateTime44.withTimeAtStartOfDay();
        org.joda.time.Instant instant47 = dateTime44.toInstant();
        org.joda.time.DateMidnight dateMidnight48 = dateTime44.toDateMidnight();
        org.joda.time.DateTime dateTime51 = dateTime44.withDurationAdded(0L, (int) 'a');
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime37, (org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.DateTime.Property property53 = dateTime37.secondOfDay();
        org.joda.time.DateTime dateTime55 = property53.addToCopy((int) '4');
        org.joda.time.DateTime dateTime57 = property53.addToCopy((long) 100);
        boolean boolean58 = period34.equals((java.lang.Object) dateTime57);
        org.joda.time.Period period60 = period34.minusWeeks(0);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant5 and dateTime6", (instant5.compareTo(dateTime6) == 0) == instant5.equals(dateTime6));
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0564");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ZERO;
        org.joda.time.MutablePeriod mutablePeriod1 = weeks0.toMutablePeriod();
        mutablePeriod1.setWeeks(0);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((-625L));
        org.joda.time.Period period6 = duration5.toPeriod();
        org.joda.time.Instant instant8 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime9 = instant8.toDateTime();
        org.joda.time.DateTime.Property property10 = dateTime9.era();
        org.joda.time.DateTime dateTime11 = dateTime9.withTimeAtStartOfDay();
        org.joda.time.Duration duration14 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration14, readableInstant15, periodType16);
        mutablePeriod17.setMonths((int) '4');
        org.joda.time.DateTime dateTime20 = dateTime9.plus((org.joda.time.ReadablePeriod) mutablePeriod17);
        org.joda.time.DateTime dateTime22 = dateTime9.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property23 = dateTime22.monthOfYear();
        org.joda.time.DateTime.Property property24 = dateTime22.weekyear();
        org.joda.time.DateTime dateTime25 = dateTime22.toDateTime();
        int int26 = dateTime22.getSecondOfDay();
        org.joda.time.DateTime.Property property27 = dateTime22.weekyear();
        org.joda.time.Period period28 = duration5.toPeriodFrom((org.joda.time.ReadableInstant) dateTime22);
        mutablePeriod1.setPeriod((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Period period30 = mutablePeriod1.toPeriod();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant8 and dateTime9", (instant8.compareTo(dateTime9) == 0) == instant8.equals(dateTime9));
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0565");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.weekOfWeekyear();
        org.joda.time.DurationFieldType durationFieldType1 = dateTimeFieldType0.getRangeDurationType();
        org.joda.time.Instant instant3 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime4 = instant3.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone5 = null;
        org.joda.time.DateTime dateTime6 = dateTime4.withZoneRetainFields(dateTimeZone5);
        org.joda.time.Instant instant8 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime9 = instant8.toDateTime();
        org.joda.time.DateTime.Property property10 = dateTime9.era();
        org.joda.time.DateTime dateTime11 = dateTime9.withTimeAtStartOfDay();
        org.joda.time.Duration duration14 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration14, readableInstant15, periodType16);
        mutablePeriod17.setMonths((int) '4');
        org.joda.time.DateTime dateTime20 = dateTime9.plus((org.joda.time.ReadablePeriod) mutablePeriod17);
        org.joda.time.DateTime dateTime22 = dateTime9.minusWeeks((int) (byte) 1);
        int int23 = dateTime6.compareTo((org.joda.time.ReadableInstant) dateTime9);
        org.joda.time.DateTime.Property property24 = dateTime9.minuteOfHour();
        org.joda.time.DateTime dateTime26 = dateTime9.withYear(1969);
        org.joda.time.Chronology chronology27 = dateTime26.getChronology();
        org.joda.time.DateTimeField dateTimeField28 = chronology27.dayOfMonth();
        org.joda.time.DurationField durationField29 = chronology27.minutes();
        org.joda.time.DateTimeField dateTimeField30 = dateTimeFieldType0.getField(chronology27);
        long long32 = dateTimeField30.roundCeiling(3732479956800000L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant3 and dateTime4", (instant3.compareTo(dateTime4) == 0) == instant3.equals(dateTime4));
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0566");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        int int4 = dateTime2.getWeekOfWeekyear();
        int int5 = dateTime2.getMonthOfYear();
        org.joda.time.DateTime dateTime7 = dateTime2.withMillis(720000L);
        int int8 = dateTime2.getMonthOfYear();
        org.joda.time.Period period10 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period12 = period10.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Duration duration14 = period12.toDurationTo(readableInstant13);
        org.joda.time.Duration duration17 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds18 = duration17.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration19 = null;
        boolean boolean20 = duration17.isEqual(readableDuration19);
        org.joda.time.Duration duration22 = duration17.minus((long) 1);
        org.joda.time.Duration duration24 = duration22.minus((long) '4');
        org.joda.time.Instant instant26 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime27 = instant26.toDateTime();
        org.joda.time.DateTime.Property property28 = dateTime27.era();
        org.joda.time.Duration duration31 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration34 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period35 = duration34.toPeriod();
        org.joda.time.Duration duration37 = duration34.plus((long) (byte) 0);
        org.joda.time.Instant instant39 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime40 = instant39.toDateTime();
        boolean boolean42 = dateTime40.isEqual(10L);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType45, chronology46);
        org.joda.time.PeriodType periodType48 = periodType45.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration37, (org.joda.time.ReadableInstant) dateTime40, periodType48);
        org.joda.time.Period period50 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableDuration) duration31, periodType48);
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, (org.joda.time.ReadableInstant) dateTime27, periodType51);
        boolean boolean53 = duration14.isEqual((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.DateTime dateTime55 = new org.joda.time.DateTime(chronology54);
        org.joda.time.DateTime.Property property56 = dateTime55.yearOfEra();
        org.joda.time.Interval interval57 = property56.toInterval();
        java.util.Locale locale58 = java.util.Locale.KOREAN;
        java.lang.String str59 = property56.getAsText(locale58);
        boolean boolean60 = duration14.equals((java.lang.Object) property56);
        org.joda.time.DateTimeFieldType dateTimeFieldType61 = property56.getFieldType();
        org.joda.time.DurationFieldType durationFieldType62 = dateTimeFieldType61.getDurationType();
        org.joda.time.DateTime dateTime64 = dateTime2.withField(dateTimeFieldType61, 20);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime27", (instant1.compareTo(dateTime27) == 0) == instant1.equals(dateTime27));
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0567");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant3 = instant1.minus(100L);
        org.joda.time.Instant instant5 = instant3.plus((long) 100);
        org.joda.time.Instant instant7 = instant3.withMillis((long) (byte) 1);
        org.joda.time.Period period9 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period11 = period9.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration13 = period11.toDurationTo(readableInstant12);
        org.joda.time.Duration duration16 = duration13.withDurationAdded((long) '#', 0);
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant20 = instant18.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime21 = instant18.toMutableDateTimeISO();
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period23 = duration16.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime21, periodType22);
        org.joda.time.Instant instant24 = instant7.minus((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Instant instant25 = instant7.toInstant();
        org.joda.time.Instant instant27 = instant25.withMillis((long) 1);
        org.joda.time.Instant instant30 = instant25.withDurationAdded((long) 'x', 26033472);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and mutableDateTime21", (instant1.compareTo(mutableDateTime21) == 0) == instant1.equals(mutableDateTime21));
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0568");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) ' ');
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period5 = duration4.toPeriod();
        org.joda.time.Duration duration7 = duration4.plus((long) (byte) 0);
        org.joda.time.Instant instant9 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime10 = instant9.toDateTime();
        boolean boolean12 = dateTime10.isEqual(10L);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType15, chronology16);
        org.joda.time.PeriodType periodType18 = periodType15.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime10, periodType18);
        org.joda.time.Instant instant21 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime22 = instant21.toDateTime();
        org.joda.time.DateTime.Property property23 = dateTime22.era();
        org.joda.time.DateTime dateTime24 = dateTime22.withTimeAtStartOfDay();
        org.joda.time.Instant instant25 = dateTime22.toInstant();
        org.joda.time.DateTime dateTime27 = dateTime22.withMillis((long) '4');
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime22);
        int int29 = dateTime22.getYear();
        org.joda.time.Duration duration32 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Duration duration35 = duration32.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = duration32.toPeriodTo(readableInstant36);
        org.joda.time.Instant instant39 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant41 = instant39.minus(100L);
        java.lang.String str42 = instant41.toString();
        org.joda.time.Duration duration45 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period46 = duration45.toPeriod();
        org.joda.time.Duration duration48 = duration45.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = duration45.toPeriodTo(readableInstant49);
        org.joda.time.Duration duration53 = duration45.withDurationAdded((long) (short) -1, (int) (byte) 100);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MutablePeriod mutablePeriod58 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType56, chronology57);
        org.joda.time.PeriodType periodType59 = periodType56.withWeeksRemoved();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration53.toPeriod(periodType59, chronology60);
        org.joda.time.Period period62 = duration32.toPeriodFrom((org.joda.time.ReadableInstant) instant41, periodType59);
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime22, periodType59);
        org.joda.time.Duration duration65 = duration1.withMillis(17536210964946L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime10", (instant9.compareTo(dateTime10) == 0) == instant9.equals(dateTime10));
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0569");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType4 = periodType3.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter5 = periodFormatter2.withParseType(periodType3);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        org.joda.time.DateTime.Property property9 = dateTime8.era();
        org.joda.time.DateTime dateTime10 = dateTime8.withTimeAtStartOfDay();
        org.joda.time.Instant instant11 = dateTime8.toInstant();
        org.joda.time.TimeOfDay timeOfDay12 = dateTime8.toTimeOfDay();
        org.joda.time.Instant instant14 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant14.toDateTime();
        org.joda.time.DateTime.Property property16 = dateTime15.era();
        org.joda.time.DateTime dateTime17 = dateTime15.withTimeAtStartOfDay();
        org.joda.time.Instant instant18 = dateTime15.toInstant();
        org.joda.time.DateMidnight dateMidnight19 = dateTime15.toDateMidnight();
        org.joda.time.DateTime dateTime22 = dateTime15.withDurationAdded(0L, (int) 'a');
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableInstant) dateTime22);
        org.joda.time.DateTime.Property property24 = dateTime8.secondOfDay();
        org.joda.time.DateTime.Property property25 = dateTime8.era();
        int int26 = property25.getMinimumValue();
        java.util.Locale locale27 = java.util.Locale.JAPANESE;
        int int28 = property25.getMaximumTextLength(locale27);
        org.joda.time.format.PeriodFormatter periodFormatter29 = periodFormatter5.withLocale(locale27);
        org.joda.time.format.PeriodParser periodParser30 = periodFormatter29.getParser();
        boolean boolean31 = periodFormatter29.isPrinter();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0570");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = property3.withMinimumValue();
        int int5 = property3.getMaximumValueOverall();
        java.util.Locale locale6 = java.util.Locale.ENGLISH;
        java.lang.String str7 = locale6.getScript();
        java.lang.String str8 = locale6.getDisplayCountry();
        int int9 = property3.getMaximumShortTextLength(locale6);
        org.joda.time.DateTime dateTime10 = property3.withMaximumValue();
        org.joda.time.DateTime dateTime11 = dateTime10.withLaterOffsetAtOverlap();
        org.joda.time.Instant instant13 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant15 = instant13.minus(100L);
        java.lang.String str16 = instant15.toString();
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Duration duration22 = duration19.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = duration19.toPeriodTo(readableInstant23);
        org.joda.time.Duration duration26 = duration19.withMillis((long) (short) 0);
        org.joda.time.Instant instant27 = instant15.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.DateTime dateTime29 = dateTime10.withDurationAdded((org.joda.time.ReadableDuration) duration19, 2);
        org.joda.time.DateTime dateTime31 = dateTime29.plus((long) 3);
        org.joda.time.DateTime dateTime33 = dateTime29.withMinuteOfHour((int) (short) 1);
        org.joda.time.DateTime dateTime34 = dateTime33.toDateTime();
        int int35 = dateTime34.getWeekyear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime34", (instant1.compareTo(dateTime34) == 0) == instant1.equals(dateTime34));
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0571");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration4 = null;
        boolean boolean5 = duration2.isEqual(readableDuration4);
        org.joda.time.Duration duration7 = duration2.minus((long) 1);
        org.joda.time.Duration duration9 = duration7.minus((long) '4');
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Duration duration22 = duration19.plus((long) (byte) 0);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType30, chronology31);
        org.joda.time.PeriodType periodType33 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, (org.joda.time.ReadableInstant) dateTime25, periodType33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime12, (org.joda.time.ReadableDuration) duration16, periodType33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime12, periodType36);
        org.joda.time.Duration duration39 = duration7.minus((long) 7);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int50 = mutablePeriod49.getDays();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.DateTime dateTime54 = new org.joda.time.DateTime(chronology53);
        org.joda.time.DateTime.Property property55 = dateTime54.yearOfEra();
        org.joda.time.Interval interval56 = property55.toInterval();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.DateTime dateTime58 = new org.joda.time.DateTime(chronology57);
        org.joda.time.DateTime.Property property59 = dateTime58.yearOfEra();
        org.joda.time.Interval interval60 = property59.toInterval();
        boolean boolean61 = interval56.contains((org.joda.time.ReadableInterval) interval60);
        org.joda.time.Chronology chronology62 = interval60.getChronology();
        mutablePeriod49.setPeriod((long) 'u', (long) 1969, chronology62);
        org.joda.time.Period period64 = new org.joda.time.Period((long) (byte) 100, chronology62);
        org.joda.time.Period period65 = duration39.toPeriod(chronology62);
        org.joda.time.DateTimeField dateTimeField66 = chronology62.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField67 = chronology62.monthOfYear();
        org.joda.time.PeriodType periodType69 = null;
        org.joda.time.Period period70 = new org.joda.time.Period((long) (short) 10, periodType69);
        org.joda.time.Instant instant72 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant73 = instant72.toInstant();
        org.joda.time.DateTime dateTime74 = instant73.toDateTimeISO();
        org.joda.time.Duration duration75 = period70.toDurationFrom((org.joda.time.ReadableInstant) dateTime74);
        org.joda.time.Period period77 = period70.plusMonths(1969);
        org.joda.time.Period period79 = period77.withMinutes(2);
        org.joda.time.Period period81 = period77.minusMonths((-1));
        int[] intArray83 = chronology62.get((org.joda.time.ReadablePeriod) period77, 100L);
        long long87 = chronology62.add((long) (-10), 31536000000L, (int) ' ');
        org.joda.time.DateTimeField dateTimeField88 = chronology62.minuteOfHour();
        boolean boolean89 = dateTimeField88.isLenient();
        org.joda.time.DurationField durationField90 = dateTimeField88.getDurationField();
        org.joda.time.DurationFieldType durationFieldType91 = durationField90.getType();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime12", (instant11.compareTo(dateTime12) == 0) == instant11.equals(dateTime12));
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0572");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.era();
        int int29 = dateTimeField27.get(10L);
        long long32 = dateTimeField27.addWrapField(0L, (-27349920));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0573");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration4 = null;
        boolean boolean5 = duration2.isEqual(readableDuration4);
        org.joda.time.Duration duration7 = duration2.minus((long) 1);
        org.joda.time.Duration duration9 = duration7.minus((long) '4');
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Duration duration22 = duration19.plus((long) (byte) 0);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType30, chronology31);
        org.joda.time.PeriodType periodType33 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, (org.joda.time.ReadableInstant) dateTime25, periodType33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime12, (org.joda.time.ReadableDuration) duration16, periodType33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime12, periodType36);
        org.joda.time.Duration duration39 = duration7.minus((long) 7);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int50 = mutablePeriod49.getDays();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.DateTime dateTime54 = new org.joda.time.DateTime(chronology53);
        org.joda.time.DateTime.Property property55 = dateTime54.yearOfEra();
        org.joda.time.Interval interval56 = property55.toInterval();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.DateTime dateTime58 = new org.joda.time.DateTime(chronology57);
        org.joda.time.DateTime.Property property59 = dateTime58.yearOfEra();
        org.joda.time.Interval interval60 = property59.toInterval();
        boolean boolean61 = interval56.contains((org.joda.time.ReadableInterval) interval60);
        org.joda.time.Chronology chronology62 = interval60.getChronology();
        mutablePeriod49.setPeriod((long) 'u', (long) 1969, chronology62);
        org.joda.time.Period period64 = new org.joda.time.Period((long) (byte) 100, chronology62);
        org.joda.time.Period period65 = duration39.toPeriod(chronology62);
        org.joda.time.DateTimeField dateTimeField66 = chronology62.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField67 = chronology62.monthOfYear();
        org.joda.time.PeriodType periodType69 = null;
        org.joda.time.Period period70 = new org.joda.time.Period((long) (short) 10, periodType69);
        org.joda.time.Instant instant72 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant73 = instant72.toInstant();
        org.joda.time.DateTime dateTime74 = instant73.toDateTimeISO();
        org.joda.time.Duration duration75 = period70.toDurationFrom((org.joda.time.ReadableInstant) dateTime74);
        org.joda.time.Period period77 = period70.plusMonths(1969);
        org.joda.time.Period period79 = period77.withMinutes(2);
        org.joda.time.Period period81 = period77.minusMonths((-1));
        int[] intArray83 = chronology62.get((org.joda.time.ReadablePeriod) period77, 100L);
        org.joda.time.DurationField durationField84 = chronology62.seconds();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime12", (instant11.compareTo(dateTime12) == 0) == instant11.equals(dateTime12));
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0574");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.DateTime dateTime6 = dateTime2.withCenturyOfEra((int) (byte) 1);
        org.joda.time.Instant instant8 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime9 = instant8.toDateTime();
        boolean boolean11 = dateTime9.isEqual(10L);
        org.joda.time.DateTime dateTime13 = dateTime9.withCenturyOfEra((int) (byte) 1);
        org.joda.time.DateTimeFieldType dateTimeFieldType14 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.DateTimeField dateTimeField16 = dateTimeFieldType14.getField(chronology15);
        long long19 = dateTimeField16.add(0L, (long) (short) 1);
        long long22 = dateTimeField16.add(1L, (-1));
        int int23 = dateTime9.get(dateTimeField16);
        boolean boolean24 = dateTime6.isAfter((org.joda.time.ReadableInstant) dateTime9);
        org.joda.time.Period period26 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period28 = period26.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration30 = period28.toDurationTo(readableInstant29);
        org.joda.time.Duration duration33 = duration30.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = duration33.toPeriodFrom(readableInstant34);
        org.joda.time.DateTime dateTime36 = dateTime6.plus((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration39 = duration33.withDurationAdded((long) (short) 100, (int) (short) 0);
        long long40 = duration39.getMillis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0575");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        org.joda.time.DateTime.Property property21 = dateTime20.era();
        org.joda.time.DateTime dateTime22 = dateTime20.withTimeAtStartOfDay();
        org.joda.time.Instant instant23 = dateTime20.toInstant();
        org.joda.time.DateTime dateTime25 = dateTime20.withMillis((long) '4');
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.Instant instant28 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime29 = instant28.toDateTime();
        org.joda.time.TimeOfDay timeOfDay30 = dateTime29.toTimeOfDay();
        org.joda.time.DateTime dateTime31 = dateTime20.withFields((org.joda.time.ReadablePartial) timeOfDay30);
        org.joda.time.Instant instant33 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime34 = instant33.toDateTime();
        org.joda.time.DateTime.Property property35 = dateTime34.era();
        org.joda.time.DateTime dateTime36 = property35.withMinimumValue();
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes41 = minutes39.minus((int) (short) -1);
        boolean boolean42 = minutes38.isGreaterThan(minutes39);
        org.joda.time.Minutes minutes43 = null;
        org.joda.time.Minutes minutes44 = minutes39.minus(minutes43);
        org.joda.time.Minutes minutes46 = minutes39.plus((int) (short) 1);
        org.joda.time.PeriodType periodType47 = minutes46.getPeriodType();
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.TWO;
        boolean boolean49 = minutes46.isLessThan(minutes48);
        org.joda.time.DurationFieldType durationFieldType50 = minutes46.getFieldType();
        int int51 = mutablePeriod37.indexOf(durationFieldType50);
        mutablePeriod37.addMonths((-1));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0576");
        org.joda.time.Period period4 = new org.joda.time.Period((-100), (int) ' ', 2022, 1972);
        org.joda.time.Duration duration7 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period8 = duration7.toPeriod();
        int int9 = period8.getDays();
        org.joda.time.Period period11 = period8.plusDays(3);
        org.joda.time.Period period13 = period11.withWeeks((-1));
        int[] intArray14 = period11.getValues();
        org.joda.time.Duration duration17 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds18 = duration17.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration19 = null;
        boolean boolean20 = duration17.isEqual(readableDuration19);
        org.joda.time.Duration duration22 = duration17.minus((long) 1);
        org.joda.time.Duration duration24 = duration22.minus((long) '4');
        org.joda.time.Instant instant26 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime27 = instant26.toDateTime();
        org.joda.time.DateTime.Property property28 = dateTime27.era();
        org.joda.time.Duration duration31 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration34 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period35 = duration34.toPeriod();
        org.joda.time.Duration duration37 = duration34.plus((long) (byte) 0);
        org.joda.time.Instant instant39 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime40 = instant39.toDateTime();
        boolean boolean42 = dateTime40.isEqual(10L);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType45, chronology46);
        org.joda.time.PeriodType periodType48 = periodType45.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration37, (org.joda.time.ReadableInstant) dateTime40, periodType48);
        org.joda.time.Period period50 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableDuration) duration31, periodType48);
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, (org.joda.time.ReadableInstant) dateTime27, periodType51);
        org.joda.time.TimeOfDay timeOfDay53 = dateTime27.toTimeOfDay();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.DateTime dateTime55 = timeOfDay53.toDateTime(readableInstant54);
        org.joda.time.Instant instant57 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant59 = instant57.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime60 = instant57.toMutableDateTimeISO();
        org.joda.time.DateTime dateTime61 = timeOfDay53.toDateTime((org.joda.time.ReadableInstant) instant57);
        org.joda.time.DateTimeFieldType dateTimeFieldType62 = org.joda.time.DateTimeFieldType.year();
        boolean boolean63 = dateTime61.isSupported(dateTimeFieldType62);
        int int64 = dateTime61.getDayOfMonth();
        org.joda.time.Duration duration65 = period11.toDurationFrom((org.joda.time.ReadableInstant) dateTime61);
        org.joda.time.Period period66 = period11.toPeriod();
        org.joda.time.Period period67 = period4.withFields((org.joda.time.ReadablePeriod) period11);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant26 and dateTime27", (instant26.compareTo(dateTime27) == 0) == instant26.equals(dateTime27));
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0577");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.DateMidnight dateMidnight6 = dateTime2.toDateMidnight();
        org.joda.time.DateTime dateTime9 = dateTime2.withDurationAdded(0L, (int) 'a');
        org.joda.time.DateTime dateTime11 = dateTime2.plusMinutes(365);
        org.joda.time.Instant instant13 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime14 = instant13.toDateTime();
        int int15 = dateTime14.getSecondOfMinute();
        org.joda.time.DateTimeFieldType dateTimeFieldType16 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.DateTimeField dateTimeField18 = dateTimeFieldType16.getField(chronology17);
        long long21 = dateTimeField18.add(0L, (long) (short) 1);
        org.joda.time.ReadablePartial readablePartial22 = null;
        int int23 = dateTimeField18.getMinimumValue(readablePartial22);
        long long26 = dateTimeField18.getDifferenceAsLong((long) (short) -1, (long) 10);
        org.joda.time.DateTimeFieldType dateTimeFieldType27 = dateTimeField18.getType();
        org.joda.time.Duration duration31 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.PeriodType periodType33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration31, readableInstant32, periodType33);
        org.joda.time.Days days35 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType36 = org.joda.time.DurationFieldType.minutes();
        int int37 = days35.get(durationFieldType36);
        mutablePeriod34.add(durationFieldType36, 8);
        org.joda.time.ReadablePeriod readablePeriod40 = null;
        mutablePeriod34.add(readablePeriod40);
        int int42 = mutablePeriod34.getMonths();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.DateTime dateTime44 = new org.joda.time.DateTime(chronology43);
        org.joda.time.DateTime.Property property45 = dateTime44.yearOfEra();
        org.joda.time.Interval interval46 = property45.toInterval();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.DateTime dateTime48 = new org.joda.time.DateTime(chronology47);
        org.joda.time.DateTime.Property property49 = dateTime48.yearOfEra();
        org.joda.time.Interval interval50 = property49.toInterval();
        boolean boolean51 = interval46.contains((org.joda.time.ReadableInterval) interval50);
        mutablePeriod34.setPeriod((org.joda.time.ReadableInterval) interval46);
        org.joda.time.DurationFieldType durationFieldType54 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant56 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime57 = instant56.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone58 = null;
        org.joda.time.DateTime dateTime59 = dateTime57.withZoneRetainFields(dateTimeZone58);
        org.joda.time.Instant instant61 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime62 = instant61.toDateTime();
        org.joda.time.DateTime.Property property63 = dateTime62.era();
        org.joda.time.DateTime dateTime64 = dateTime62.withTimeAtStartOfDay();
        org.joda.time.Duration duration67 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.PeriodType periodType69 = null;
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration67, readableInstant68, periodType69);
        mutablePeriod70.setMonths((int) '4');
        org.joda.time.DateTime dateTime73 = dateTime62.plus((org.joda.time.ReadablePeriod) mutablePeriod70);
        org.joda.time.DateTime dateTime75 = dateTime62.minusWeeks((int) (byte) 1);
        int int76 = dateTime59.compareTo((org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.DateTime.Property property77 = dateTime62.minuteOfHour();
        org.joda.time.DateTime dateTime79 = dateTime62.withYear(1969);
        org.joda.time.Chronology chronology80 = dateTime79.getChronology();
        org.joda.time.DurationField durationField81 = durationFieldType54.getField(chronology80);
        mutablePeriod34.add((-43199999L), chronology80);
        org.joda.time.DurationField durationField83 = chronology80.millis();
        org.joda.time.DurationField durationField84 = chronology80.months();
        org.joda.time.DateTime dateTime85 = new org.joda.time.DateTime((long) 69, chronology80);
        org.joda.time.DateTimeField dateTimeField86 = chronology80.minuteOfDay();
        org.joda.time.DurationField durationField87 = chronology80.months();
        org.joda.time.DateTime dateTime88 = org.joda.time.DateTime.now(chronology80);
        boolean boolean89 = dateTimeFieldType27.isSupported(chronology80);
        int int90 = dateTime14.get(dateTimeFieldType27);
        boolean boolean91 = dateTime11.isSupported(dateTimeFieldType27);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0578");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = property3.withMinimumValue();
        int int5 = property3.getMaximumValueOverall();
        java.util.Locale locale6 = java.util.Locale.ENGLISH;
        java.lang.String str7 = locale6.getScript();
        java.lang.String str8 = locale6.getDisplayCountry();
        int int9 = property3.getMaximumShortTextLength(locale6);
        org.joda.time.DateTime dateTime10 = property3.withMaximumValue();
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone14 = null;
        org.joda.time.DateTime dateTime15 = dateTime13.withZoneRetainFields(dateTimeZone14);
        org.joda.time.DateTime.Property property16 = dateTime15.weekOfWeekyear();
        org.joda.time.Duration duration19 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration19, readableInstant20, periodType21);
        org.joda.time.DateTime dateTime23 = dateTime15.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.DateTime dateTime25 = dateTime15.withYearOfEra(9);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.weeksBetween((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.Duration duration29 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period30 = duration29.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray31 = period30.getFieldTypes();
        int int32 = period30.getMinutes();
        org.joda.time.Weeks weeks33 = period30.toStandardWeeks();
        boolean boolean34 = weeks26.isGreaterThan(weeks33);
        org.joda.time.Weeks weeks36 = weeks26.plus(0);
        org.joda.time.Duration duration37 = weeks26.toStandardDuration();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0579");
        java.lang.Object obj1 = null;
        org.joda.time.Instant instant2 = new org.joda.time.Instant(obj1);
        org.joda.time.DateTimeZone dateTimeZone3 = instant2.getZone();
        java.lang.String str4 = dateTimeZone3.toString();
        int int6 = dateTimeZone3.getOffset(1L);
        boolean boolean8 = dateTimeZone3.isStandardOffset(0L);
        java.lang.String str10 = dateTimeZone3.getNameKey((long) 1);
        org.joda.time.DateTime dateTime11 = new org.joda.time.DateTime(dateTimeZone3);
        org.joda.time.DateTime dateTime12 = new org.joda.time.DateTime((-1L), dateTimeZone3);
        org.joda.time.Period period14 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period16 = period14.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration18 = period16.toDurationTo(readableInstant17);
        org.joda.time.Duration duration21 = duration18.withDurationAdded((long) '#', 0);
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant25 = instant23.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime26 = instant23.toMutableDateTimeISO();
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period28 = duration21.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime26, periodType27);
        org.joda.time.Minutes minutes29 = duration21.toStandardMinutes();
        org.joda.time.DateTime dateTime30 = dateTime12.plus((org.joda.time.ReadableDuration) duration21);
        org.joda.time.DateTimeZone dateTimeZone31 = org.joda.time.DateTimeZone.getDefault();
        org.joda.time.DateTime dateTime32 = new org.joda.time.DateTime((java.lang.Object) dateTime12, dateTimeZone31);
        org.joda.time.format.PeriodPrinter periodPrinter34 = null;
        org.joda.time.format.PeriodParser periodParser35 = null;
        org.joda.time.format.PeriodFormatter periodFormatter36 = new org.joda.time.format.PeriodFormatter(periodPrinter34, periodParser35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.format.PeriodFormatter periodFormatter38 = periodFormatter36.withParseType(periodType37);
        java.util.Locale locale39 = periodFormatter36.getLocale();
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.lang.String str41 = locale40.getScript();
        org.joda.time.format.PeriodFormatter periodFormatter42 = periodFormatter36.withLocale(locale40);
        java.util.Locale locale43 = locale40.stripExtensions();
        java.lang.String str44 = dateTimeZone31.getShortName(43199999L, locale43);
        org.joda.time.DateTime dateTime45 = org.joda.time.DateTime.now(dateTimeZone31);
        java.lang.String str46 = dateTimeZone31.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime12 and mutableDateTime26", (dateTime12.compareTo(mutableDateTime26) == 0) == dateTime12.equals(mutableDateTime26));
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0580");
        java.lang.Object obj1 = null;
        org.joda.time.Instant instant2 = new org.joda.time.Instant(obj1);
        org.joda.time.DateTimeZone dateTimeZone3 = instant2.getZone();
        java.lang.String str4 = dateTimeZone3.toString();
        int int6 = dateTimeZone3.getOffset(1L);
        boolean boolean8 = dateTimeZone3.isStandardOffset(0L);
        java.lang.String str10 = dateTimeZone3.getNameKey((long) 1);
        org.joda.time.DateTime dateTime11 = new org.joda.time.DateTime(dateTimeZone3);
        org.joda.time.DateTime dateTime12 = new org.joda.time.DateTime((-1L), dateTimeZone3);
        org.joda.time.Period period14 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period16 = period14.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration18 = period16.toDurationTo(readableInstant17);
        org.joda.time.Duration duration21 = duration18.withDurationAdded((long) '#', 0);
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant25 = instant23.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime26 = instant23.toMutableDateTimeISO();
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period28 = duration21.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime26, periodType27);
        org.joda.time.Minutes minutes29 = duration21.toStandardMinutes();
        org.joda.time.DateTime dateTime30 = dateTime12.plus((org.joda.time.ReadableDuration) duration21);
        org.joda.time.DateTimeZone dateTimeZone31 = org.joda.time.DateTimeZone.getDefault();
        org.joda.time.DateTime dateTime32 = new org.joda.time.DateTime((java.lang.Object) dateTime12, dateTimeZone31);
        org.joda.time.Instant instant34 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime35 = instant34.toDateTime();
        org.joda.time.DateTime.Property property36 = dateTime35.era();
        org.joda.time.DateTime dateTime37 = dateTime35.withTimeAtStartOfDay();
        org.joda.time.Duration duration40 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.PeriodType periodType42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration40, readableInstant41, periodType42);
        mutablePeriod43.setMonths((int) '4');
        org.joda.time.DateTime dateTime46 = dateTime35.plus((org.joda.time.ReadablePeriod) mutablePeriod43);
        org.joda.time.DateTime dateTime48 = dateTime35.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property49 = dateTime48.monthOfYear();
        org.joda.time.DateTime.Property property50 = dateTime48.weekyear();
        org.joda.time.DateTime dateTime51 = dateTime48.toDateTime();
        int int52 = dateTime12.compareTo((org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.DateTime dateTime54 = dateTime51.plus((long) 363120000);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime12 and mutableDateTime26", (dateTime12.compareTo(mutableDateTime26) == 0) == dateTime12.equals(mutableDateTime26));
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0581");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.Duration duration7 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period8 = duration7.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray9 = period8.getFieldTypes();
        int int10 = period8.getMinutes();
        org.joda.time.Period period12 = period8.withDays((int) ' ');
        org.joda.time.Period period14 = period8.plusWeeks(10);
        org.joda.time.Period period16 = period8.minusMillis((int) (short) 1);
        org.joda.time.DateTime dateTime17 = dateTime2.minus((org.joda.time.ReadablePeriod) period8);
        java.lang.String str18 = dateTime2.toString();
        org.joda.time.Duration duration21 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds22 = duration21.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration23 = null;
        boolean boolean24 = duration21.isEqual(readableDuration23);
        org.joda.time.Duration duration26 = duration21.minus((long) 1);
        org.joda.time.Duration duration28 = duration26.minus((long) '4');
        org.joda.time.Instant instant30 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime31 = instant30.toDateTime();
        org.joda.time.DateTime.Property property32 = dateTime31.era();
        org.joda.time.Duration duration35 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration38 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period39 = duration38.toPeriod();
        org.joda.time.Duration duration41 = duration38.plus((long) (byte) 0);
        org.joda.time.Instant instant43 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime44 = instant43.toDateTime();
        boolean boolean46 = dateTime44.isEqual(10L);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType49, chronology50);
        org.joda.time.PeriodType periodType52 = periodType49.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration41, (org.joda.time.ReadableInstant) dateTime44, periodType52);
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration35, periodType52);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, (org.joda.time.ReadableInstant) dateTime31, periodType55);
        org.joda.time.Duration duration58 = duration26.minus((long) 7);
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int69 = mutablePeriod68.getDays();
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.DateTime dateTime73 = new org.joda.time.DateTime(chronology72);
        org.joda.time.DateTime.Property property74 = dateTime73.yearOfEra();
        org.joda.time.Interval interval75 = property74.toInterval();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.DateTime dateTime77 = new org.joda.time.DateTime(chronology76);
        org.joda.time.DateTime.Property property78 = dateTime77.yearOfEra();
        org.joda.time.Interval interval79 = property78.toInterval();
        boolean boolean80 = interval75.contains((org.joda.time.ReadableInterval) interval79);
        org.joda.time.Chronology chronology81 = interval79.getChronology();
        mutablePeriod68.setPeriod((long) 'u', (long) 1969, chronology81);
        org.joda.time.Period period83 = new org.joda.time.Period((long) (byte) 100, chronology81);
        org.joda.time.Period period84 = duration58.toPeriod(chronology81);
        org.joda.time.DateTimeField dateTimeField85 = chronology81.weekyearOfCentury();
        org.joda.time.DurationField durationField86 = chronology81.millis();
        org.joda.time.DateTimeField dateTimeField87 = chronology81.yearOfEra();
        org.joda.time.DateTimeField dateTimeField88 = chronology81.millisOfSecond();
        org.joda.time.DateTime dateTime89 = dateTime2.withChronology(chronology81);
        org.joda.time.DurationField durationField90 = chronology81.halfdays();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0582");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.Instant instant5 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant7 = instant5.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime8 = instant5.toMutableDateTimeISO();
        org.joda.time.Period period9 = duration2.toPeriodTo((org.joda.time.ReadableInstant) instant5);
        org.joda.time.Duration duration10 = period9.toStandardDuration();
        org.joda.time.Duration duration13 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period14 = duration13.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray15 = period14.getFieldTypes();
        int int16 = period14.getMinutes();
        org.joda.time.Period period18 = period14.withDays((int) ' ');
        org.joda.time.Period period20 = period18.withYears(86399);
        org.joda.time.Period period25 = new org.joda.time.Period(0, (int) (byte) -1, (int) '#', 7);
        org.joda.time.Period period26 = period18.plus((org.joda.time.ReadablePeriod) period25);
        org.joda.time.Period period27 = period9.plus((org.joda.time.ReadablePeriod) period25);
        org.joda.time.Period period29 = period27.minusMillis((int) (short) 100);
        org.joda.time.Period period30 = period27.toPeriod();
        org.joda.time.Hours hours31 = period30.toStandardHours();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant5 and mutableDateTime8", (instant5.compareTo(mutableDateTime8) == 0) == instant5.equals(mutableDateTime8));
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0583");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant3, periodType4);
        mutablePeriod5.setMonths((int) '4');
        org.joda.time.Period period8 = mutablePeriod5.toPeriod();
        org.joda.time.ReadableInterval readableInterval9 = null;
        mutablePeriod5.setPeriod(readableInterval9);
        mutablePeriod5.setWeeks(69);
        org.joda.time.Duration duration14 = new org.joda.time.Duration(432000000L);
        java.lang.String str15 = duration14.toString();
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration14);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.yearWeekDayTime();
        int int18 = periodType17.size();
        org.joda.time.PeriodType periodType19 = periodType17.withMillisRemoved();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((long) (short) 1, (long) 8, chronology22);
        org.joda.time.Instant instant27 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime28 = instant27.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone29 = null;
        org.joda.time.DateTime dateTime30 = dateTime28.withZoneRetainFields(dateTimeZone29);
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime33 = instant32.toDateTime();
        org.joda.time.DateTime.Property property34 = dateTime33.era();
        org.joda.time.DateTime dateTime35 = dateTime33.withTimeAtStartOfDay();
        org.joda.time.Duration duration38 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration38, readableInstant39, periodType40);
        mutablePeriod41.setMonths((int) '4');
        org.joda.time.DateTime dateTime44 = dateTime33.plus((org.joda.time.ReadablePeriod) mutablePeriod41);
        org.joda.time.DateTime dateTime46 = dateTime33.minusWeeks((int) (byte) 1);
        int int47 = dateTime30.compareTo((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.DateTime.Property property48 = dateTime33.minuteOfHour();
        org.joda.time.DateTime dateTime50 = dateTime33.withYear(1969);
        org.joda.time.Chronology chronology51 = dateTime50.getChronology();
        org.joda.time.DateTimeField dateTimeField52 = chronology51.year();
        org.joda.time.DateTimeField dateTimeField53 = chronology51.weekOfWeekyear();
        mutablePeriod23.setPeriod(43199999L, (-1855204655L), chronology51);
        org.joda.time.Period period55 = duration14.toPeriod(periodType19, chronology51);
        java.lang.String str56 = periodType19.getName();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant27 and dateTime28", (instant27.compareTo(dateTime28) == 0) == instant27.equals(dateTime28));
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0584");
        java.lang.Object obj1 = null;
        org.joda.time.Instant instant2 = new org.joda.time.Instant(obj1);
        org.joda.time.DateTimeZone dateTimeZone3 = instant2.getZone();
        java.lang.String str4 = dateTimeZone3.toString();
        int int6 = dateTimeZone3.getOffset(1L);
        boolean boolean8 = dateTimeZone3.isStandardOffset(0L);
        java.lang.String str10 = dateTimeZone3.getNameKey((long) 1);
        org.joda.time.DateTime dateTime11 = new org.joda.time.DateTime(dateTimeZone3);
        org.joda.time.DateTime dateTime12 = new org.joda.time.DateTime((-1L), dateTimeZone3);
        org.joda.time.Period period14 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period16 = period14.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration18 = period16.toDurationTo(readableInstant17);
        org.joda.time.Duration duration21 = duration18.withDurationAdded((long) '#', 0);
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant25 = instant23.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime26 = instant23.toMutableDateTimeISO();
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period28 = duration21.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime26, periodType27);
        org.joda.time.Minutes minutes29 = duration21.toStandardMinutes();
        org.joda.time.DateTime dateTime30 = dateTime12.plus((org.joda.time.ReadableDuration) duration21);
        org.joda.time.DateTimeZone dateTimeZone31 = org.joda.time.DateTimeZone.getDefault();
        org.joda.time.DateTime dateTime32 = new org.joda.time.DateTime((java.lang.Object) dateTime12, dateTimeZone31);
        int int33 = dateTime32.getYearOfEra();
        java.lang.String str34 = dateTime32.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime12 and mutableDateTime26", (dateTime12.compareTo(mutableDateTime26) == 0) == dateTime12.equals(mutableDateTime26));
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0585");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType1 = org.joda.time.DurationFieldType.minutes();
        int int2 = days0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = days0.toMutablePeriod();
        org.joda.time.Days days5 = days0.multipliedBy((int) (byte) 1);
        org.joda.time.Duration duration6 = days0.toStandardDuration();
        org.joda.time.Instant instant8 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant10 = instant8.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime11 = instant8.toMutableDateTimeISO();
        int int12 = mutableDateTime11.getDayOfWeek();
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, (org.joda.time.ReadableInstant) mutableDateTime11);
        mutablePeriod13.setHours((int) 'u');
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.DateTime dateTime17 = new org.joda.time.DateTime(chronology16);
        org.joda.time.DateTime.Property property18 = dateTime17.yearOfEra();
        org.joda.time.Interval interval19 = property18.toInterval();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.DateTime dateTime21 = new org.joda.time.DateTime(chronology20);
        org.joda.time.DateTime.Property property22 = dateTime21.yearOfEra();
        org.joda.time.Interval interval23 = property22.toInterval();
        boolean boolean24 = interval19.contains((org.joda.time.ReadableInterval) interval23);
        java.lang.Object obj25 = null;
        org.joda.time.Instant instant26 = new org.joda.time.Instant(obj25);
        org.joda.time.DateTimeZone dateTimeZone27 = instant26.getZone();
        java.lang.String str28 = dateTimeZone27.toString();
        org.joda.time.DateTime dateTime29 = new org.joda.time.DateTime(dateTimeZone27);
        boolean boolean30 = interval19.contains((org.joda.time.ReadableInstant) dateTime29);
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime33 = instant32.toDateTime();
        org.joda.time.DateTime.Property property34 = dateTime33.era();
        boolean boolean35 = interval19.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.MutableInterval mutableInterval36 = interval19.toMutableInterval();
        org.joda.time.Chronology chronology37 = interval19.getChronology();
        mutablePeriod13.add((org.joda.time.ReadableInterval) interval19);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant8 and mutableDateTime11", (instant8.compareTo(mutableDateTime11) == 0) == instant8.equals(mutableDateTime11));
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0586");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period3 = period1.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration5 = period3.toDurationTo(readableInstant4);
        org.joda.time.Duration duration8 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds9 = duration8.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration10 = null;
        boolean boolean11 = duration8.isEqual(readableDuration10);
        org.joda.time.Duration duration13 = duration8.minus((long) 1);
        org.joda.time.Duration duration15 = duration13.minus((long) '4');
        org.joda.time.Instant instant17 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime18 = instant17.toDateTime();
        org.joda.time.DateTime.Property property19 = dateTime18.era();
        org.joda.time.Duration duration22 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration25 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period26 = duration25.toPeriod();
        org.joda.time.Duration duration28 = duration25.plus((long) (byte) 0);
        org.joda.time.Instant instant30 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime31 = instant30.toDateTime();
        boolean boolean33 = dateTime31.isEqual(10L);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType36, chronology37);
        org.joda.time.PeriodType periodType39 = periodType36.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration28, (org.joda.time.ReadableInstant) dateTime31, periodType39);
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime18, (org.joda.time.ReadableDuration) duration22, periodType39);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, (org.joda.time.ReadableInstant) dateTime18, periodType42);
        boolean boolean44 = duration5.isEqual((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.DateTime dateTime46 = new org.joda.time.DateTime(chronology45);
        org.joda.time.DateTime.Property property47 = dateTime46.yearOfEra();
        org.joda.time.Interval interval48 = property47.toInterval();
        java.util.Locale locale49 = java.util.Locale.KOREAN;
        java.lang.String str50 = property47.getAsText(locale49);
        boolean boolean51 = duration5.equals((java.lang.Object) property47);
        org.joda.time.DateTime dateTime52 = property47.roundCeilingCopy();
        org.joda.time.DateTime dateTime53 = property47.roundHalfFloorCopy();
        org.joda.time.Interval interval54 = property47.toInterval();
        org.joda.time.DateTime dateTime55 = interval54.getStart();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant17 and dateTime18", (instant17.compareTo(dateTime18) == 0) == instant17.equals(dateTime18));
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0587");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.Interval interval7 = property6.toInterval();
        boolean boolean8 = interval3.contains((org.joda.time.ReadableInterval) interval7);
        java.lang.String str9 = interval3.toString();
        long long10 = interval3.getEndMillis();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval3);
        org.joda.time.Instant instant13 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime14 = instant13.toDateTime();
        org.joda.time.DateTime.Property property15 = dateTime14.era();
        int int16 = dateTime14.getWeekOfWeekyear();
        int int17 = dateTime14.getMonthOfYear();
        boolean boolean18 = interval3.isBefore((org.joda.time.ReadableInstant) dateTime14);
        org.joda.time.Instant instant20 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime21 = instant20.toDateTime();
        java.util.TimeZone timeZone22 = null;
        org.joda.time.DateTimeZone dateTimeZone23 = org.joda.time.DateTimeZone.forTimeZone(timeZone22);
        org.joda.time.MutableDateTime mutableDateTime24 = dateTime21.toMutableDateTime(dateTimeZone23);
        org.joda.time.Duration duration27 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.PeriodType periodType29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration27, readableInstant28, periodType29);
        java.lang.String str31 = duration27.toString();
        org.joda.time.Instant instant33 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant35 = instant33.minus(100L);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, (org.joda.time.ReadableInstant) instant33);
        org.joda.time.Instant instant38 = instant33.withMillis((long) 1970);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime21, (org.joda.time.ReadableInstant) instant33);
        org.joda.time.DateTime dateTime40 = dateTime21.toDateTime();
        boolean boolean41 = interval3.contains((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.DateTime dateTime42 = interval3.getEnd();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant13 and dateTime14", (instant13.compareTo(dateTime14) == 0) == instant13.equals(dateTime14));
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0588");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.DateTime dateTime6 = dateTime2.withCenturyOfEra((int) (byte) 1);
        org.joda.time.Instant instant8 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime9 = instant8.toDateTime();
        boolean boolean11 = dateTime9.isEqual(10L);
        org.joda.time.DateTime dateTime13 = dateTime9.withCenturyOfEra((int) (byte) 1);
        org.joda.time.DateTimeFieldType dateTimeFieldType14 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.DateTimeField dateTimeField16 = dateTimeFieldType14.getField(chronology15);
        long long19 = dateTimeField16.add(0L, (long) (short) 1);
        long long22 = dateTimeField16.add(1L, (-1));
        int int23 = dateTime9.get(dateTimeField16);
        boolean boolean24 = dateTime6.isAfter((org.joda.time.ReadableInstant) dateTime9);
        org.joda.time.Period period26 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period28 = period26.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration30 = period28.toDurationTo(readableInstant29);
        org.joda.time.Duration duration33 = duration30.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = duration33.toPeriodFrom(readableInstant34);
        org.joda.time.DateTime dateTime36 = dateTime6.plus((org.joda.time.ReadableDuration) duration33);
        org.joda.time.DateTime dateTime38 = dateTime6.plus((long) (-2147483648));
        org.joda.time.Duration duration41 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period42 = duration41.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray43 = period42.getFieldTypes();
        org.joda.time.Period period45 = period42.minusYears((int) (byte) 1);
        org.joda.time.Period period47 = period42.plusMonths((int) (byte) 0);
        org.joda.time.Period period49 = period42.withMillis((int) '#');
        org.joda.time.Weeks weeks50 = period42.toStandardWeeks();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks53 = weeks51.dividedBy((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType55 = weeks51.getFieldType(0);
        org.joda.time.Period period57 = period42.withField(durationFieldType55, 0);
        org.joda.time.Period period59 = period42.multipliedBy((int) '4');
        org.joda.time.Duration duration60 = period59.toStandardDuration();
        org.joda.time.Instant instant62 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant64 = instant62.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime65 = instant62.toMutableDateTimeISO();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.DateTime dateTime67 = new org.joda.time.DateTime(chronology66);
        org.joda.time.DateTime.Property property68 = dateTime67.yearOfEra();
        org.joda.time.DateTime.Property property69 = dateTime67.weekOfWeekyear();
        boolean boolean70 = mutableDateTime65.isBefore((org.joda.time.ReadableInstant) dateTime67);
        org.joda.time.DateTime dateTime72 = dateTime67.withMillisOfDay(0);
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration60, (org.joda.time.ReadableInstant) dateTime67);
        org.joda.time.DateTime dateTime74 = dateTime6.minus((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration76 = duration60.withMillis(43080000L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0589");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.DateTime.Property property5 = dateTime4.weekOfWeekyear();
        java.lang.String str6 = property5.getAsText();
        java.util.Locale locale7 = java.util.Locale.ITALY;
        java.util.Locale locale11 = new java.util.Locale("", "hi!", "hi!");
        java.lang.String str12 = locale7.getDisplayCountry(locale11);
        java.lang.String str13 = locale11.getDisplayVariant();
        java.util.Locale locale14 = java.util.Locale.ENGLISH;
        java.lang.String str15 = locale11.getDisplayVariant(locale14);
        int int16 = property5.getMaximumTextLength(locale11);
        org.joda.time.DateTime dateTime17 = property5.roundHalfEvenCopy();
        long long18 = property5.remainder();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0590");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant2 = instant1.toInstant();
        org.joda.time.Instant instant4 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime5 = instant4.toDateTime();
        org.joda.time.DateTime.Property property6 = dateTime5.era();
        org.joda.time.DateTime dateTime7 = dateTime5.withTimeAtStartOfDay();
        org.joda.time.Duration duration10 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, readableInstant11, periodType12);
        mutablePeriod13.setMonths((int) '4');
        org.joda.time.DateTime dateTime16 = dateTime5.plus((org.joda.time.ReadablePeriod) mutablePeriod13);
        org.joda.time.LocalDate localDate17 = dateTime5.toLocalDate();
        int int18 = instant1.compareTo((org.joda.time.ReadableInstant) dateTime5);
        org.joda.time.Instant instant20 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant22 = instant20.minus(100L);
        java.lang.String str23 = instant22.toString();
        org.joda.time.Duration duration26 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period27 = duration26.toPeriod();
        org.joda.time.Duration duration29 = duration26.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = duration26.toPeriodTo(readableInstant30);
        org.joda.time.Duration duration33 = duration26.withMillis((long) (short) 0);
        org.joda.time.Instant instant34 = instant22.plus((org.joda.time.ReadableDuration) duration26);
        java.lang.String str35 = duration26.toString();
        org.joda.time.Instant instant37 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime38 = instant37.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone39 = null;
        org.joda.time.DateTime dateTime40 = dateTime38.withZoneRetainFields(dateTimeZone39);
        org.joda.time.Instant instant42 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime43 = instant42.toDateTime();
        org.joda.time.DateTime.Property property44 = dateTime43.era();
        org.joda.time.DateTime dateTime45 = dateTime43.withTimeAtStartOfDay();
        org.joda.time.Duration duration48 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.PeriodType periodType50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration48, readableInstant49, periodType50);
        mutablePeriod51.setMonths((int) '4');
        org.joda.time.DateTime dateTime54 = dateTime43.plus((org.joda.time.ReadablePeriod) mutablePeriod51);
        org.joda.time.DateTime dateTime56 = dateTime43.minusWeeks((int) (byte) 1);
        int int57 = dateTime40.compareTo((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.DateTime dateTime58 = dateTime40.toDateTimeISO();
        org.joda.time.Interval interval59 = duration26.toIntervalTo((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.Instant instant61 = instant1.withDurationAdded((org.joda.time.ReadableDuration) duration26, (int) ' ');
        org.joda.time.Period period62 = duration26.toPeriod();
        org.joda.time.Duration duration63 = duration26.toDuration();
        org.joda.time.Instant instant65 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant67 = instant65.minus(100L);
        org.joda.time.Instant instant69 = instant67.plus((long) 100);
        boolean boolean70 = instant67.isBeforeNow();
        org.joda.time.DateTime dateTime71 = instant67.toDateTimeISO();
        org.joda.time.Instant instant72 = instant67.toInstant();
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType76, chronology77);
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((long) (short) 0, periodType76, chronology79);
        org.joda.time.DurationFieldType durationFieldType81 = org.joda.time.DurationFieldType.minutes();
        int int82 = periodType76.indexOf(durationFieldType81);
        org.joda.time.PeriodType periodType83 = periodType76.withYearsRemoved();
        org.joda.time.PeriodType periodType84 = periodType76.withSecondsRemoved();
        org.joda.time.Period period85 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration63, (org.joda.time.ReadableInstant) instant67, periodType84);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime5", (instant1.compareTo(dateTime5) == 0) == instant1.equals(dateTime5));
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0591");
        org.joda.time.Duration duration3 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration3, readableInstant4, periodType5);
        org.joda.time.Days days7 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType8 = org.joda.time.DurationFieldType.minutes();
        int int9 = days7.get(durationFieldType8);
        mutablePeriod6.add(durationFieldType8, 8);
        org.joda.time.ReadablePeriod readablePeriod12 = null;
        mutablePeriod6.add(readablePeriod12);
        int int14 = mutablePeriod6.getMonths();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.DateTime dateTime16 = new org.joda.time.DateTime(chronology15);
        org.joda.time.DateTime.Property property17 = dateTime16.yearOfEra();
        org.joda.time.Interval interval18 = property17.toInterval();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.DateTime dateTime20 = new org.joda.time.DateTime(chronology19);
        org.joda.time.DateTime.Property property21 = dateTime20.yearOfEra();
        org.joda.time.Interval interval22 = property21.toInterval();
        boolean boolean23 = interval18.contains((org.joda.time.ReadableInterval) interval22);
        mutablePeriod6.setPeriod((org.joda.time.ReadableInterval) interval18);
        org.joda.time.DurationFieldType durationFieldType26 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant28 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime29 = instant28.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone30 = null;
        org.joda.time.DateTime dateTime31 = dateTime29.withZoneRetainFields(dateTimeZone30);
        org.joda.time.Instant instant33 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime34 = instant33.toDateTime();
        org.joda.time.DateTime.Property property35 = dateTime34.era();
        org.joda.time.DateTime dateTime36 = dateTime34.withTimeAtStartOfDay();
        org.joda.time.Duration duration39 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.PeriodType periodType41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration39, readableInstant40, periodType41);
        mutablePeriod42.setMonths((int) '4');
        org.joda.time.DateTime dateTime45 = dateTime34.plus((org.joda.time.ReadablePeriod) mutablePeriod42);
        org.joda.time.DateTime dateTime47 = dateTime34.minusWeeks((int) (byte) 1);
        int int48 = dateTime31.compareTo((org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.DateTime.Property property49 = dateTime34.minuteOfHour();
        org.joda.time.DateTime dateTime51 = dateTime34.withYear(1969);
        org.joda.time.Chronology chronology52 = dateTime51.getChronology();
        org.joda.time.DurationField durationField53 = durationFieldType26.getField(chronology52);
        mutablePeriod6.add((-43199999L), chronology52);
        org.joda.time.DurationField durationField55 = chronology52.millis();
        org.joda.time.DurationField durationField56 = chronology52.months();
        org.joda.time.DateTime dateTime57 = new org.joda.time.DateTime((long) 69, chronology52);
        org.joda.time.DateTimeField dateTimeField58 = chronology52.minuteOfDay();
        org.joda.time.DurationField durationField59 = chronology52.months();
        org.joda.time.DateTime dateTime60 = org.joda.time.DateTime.now(chronology52);
        org.joda.time.DurationField durationField61 = chronology52.weekyears();
        org.joda.time.DateTimeField dateTimeField62 = chronology52.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField63 = chronology52.clockhourOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant28 and dateTime29", (instant28.compareTo(dateTime29) == 0) == instant28.equals(dateTime29));
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0592");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.Interval interval7 = property6.toInterval();
        boolean boolean8 = interval3.contains((org.joda.time.ReadableInterval) interval7);
        java.lang.Object obj9 = null;
        org.joda.time.Instant instant10 = new org.joda.time.Instant(obj9);
        org.joda.time.DateTimeZone dateTimeZone11 = instant10.getZone();
        java.lang.String str12 = dateTimeZone11.toString();
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(dateTimeZone11);
        boolean boolean14 = interval3.contains((org.joda.time.ReadableInstant) dateTime13);
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTime.Property property18 = dateTime17.era();
        boolean boolean19 = interval3.contains((org.joda.time.ReadableInstant) dateTime17);
        org.joda.time.Period period20 = interval3.toPeriod();
        org.joda.time.Duration duration23 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period24 = duration23.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray25 = period24.getFieldTypes();
        int int26 = period24.getMinutes();
        org.joda.time.Period period28 = period24.withDays((int) ' ');
        org.joda.time.PeriodType periodType29 = period28.getPeriodType();
        org.joda.time.Period period30 = interval3.toPeriod(periodType29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.DateTime dateTime32 = new org.joda.time.DateTime(chronology31);
        org.joda.time.DateTime.Property property33 = dateTime32.yearOfEra();
        org.joda.time.Interval interval34 = property33.toInterval();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.DateTime dateTime36 = new org.joda.time.DateTime(chronology35);
        org.joda.time.DateTime.Property property37 = dateTime36.yearOfEra();
        org.joda.time.Interval interval38 = property37.toInterval();
        boolean boolean39 = interval34.contains((org.joda.time.ReadableInterval) interval38);
        java.lang.Object obj40 = null;
        org.joda.time.Instant instant41 = new org.joda.time.Instant(obj40);
        org.joda.time.DateTimeZone dateTimeZone42 = instant41.getZone();
        java.lang.String str43 = dateTimeZone42.toString();
        org.joda.time.DateTime dateTime44 = new org.joda.time.DateTime(dateTimeZone42);
        boolean boolean45 = interval34.contains((org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Instant instant47 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime48 = instant47.toDateTime();
        org.joda.time.DateTime.Property property49 = dateTime48.era();
        boolean boolean50 = interval34.contains((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.Period period51 = interval34.toPeriod();
        boolean boolean52 = interval3.overlaps((org.joda.time.ReadableInterval) interval34);
        org.joda.time.Chronology chronology53 = interval34.getChronology();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant10", (dateTime1.compareTo(instant10) == 0) == dateTime1.equals(instant10));
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0593");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.LocalDate localDate14 = dateTime2.toLocalDate();
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTime.Property property18 = dateTime17.era();
        org.joda.time.DateTime dateTime19 = dateTime17.withTimeAtStartOfDay();
        org.joda.time.Instant instant20 = dateTime17.toInstant();
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant20);
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime24 = instant23.toDateTime();
        org.joda.time.DateTime.Property property25 = dateTime24.era();
        org.joda.time.DateTime dateTime26 = property25.withMinimumValue();
        int int27 = property25.getMaximumValueOverall();
        java.util.Locale locale28 = java.util.Locale.ENGLISH;
        java.lang.String str29 = locale28.getScript();
        java.lang.String str30 = locale28.getDisplayCountry();
        int int31 = property25.getMaximumShortTextLength(locale28);
        org.joda.time.DateTime dateTime32 = property25.withMaximumValue();
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType34 = periodType33.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) dateTime32, periodType33);
        org.joda.time.DateTime dateTime37 = dateTime32.plusWeeks((-2147483648));
        org.joda.time.DateTime.Property property38 = dateTime37.dayOfWeek();
        org.joda.time.Interval interval39 = property38.toInterval();
        org.joda.time.Instant instant41 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime42 = instant41.toDateTime();
        org.joda.time.DateTime.Property property43 = dateTime42.era();
        org.joda.time.DateTime dateTime44 = property43.withMaximumValue();
        java.util.Date date45 = dateTime44.toDate();
        int int46 = dateTime44.getSecondOfDay();
        boolean boolean47 = interval39.contains((org.joda.time.ReadableInstant) dateTime44);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0594");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (short) 10, periodType1);
        org.joda.time.Instant instant4 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant5 = instant4.toInstant();
        org.joda.time.DateTime dateTime6 = instant5.toDateTimeISO();
        org.joda.time.Duration duration7 = period2.toDurationFrom((org.joda.time.ReadableInstant) dateTime6);
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period11 = duration10.toPeriod();
        org.joda.time.Duration duration13 = duration10.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = duration10.toPeriodTo(readableInstant14);
        org.joda.time.Duration duration17 = duration10.withMillis((long) (short) 0);
        org.joda.time.Duration duration20 = duration10.withDurationAdded((long) 1, (int) ' ');
        org.joda.time.Instant instant22 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime23 = instant22.toDateTime();
        boolean boolean25 = dateTime23.isEqual(10L);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, (org.joda.time.ReadableInstant) dateTime23, periodType26);
        org.joda.time.PeriodType periodType28 = periodType26.withSecondsRemoved();
        org.joda.time.Period period29 = period2.normalizedStandard(periodType26);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant4 and dateTime6", (instant4.compareTo(dateTime6) == 0) == instant4.equals(dateTime6));
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0595");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime dateTime22 = dateTime4.toDateTimeISO();
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant26 = instant24.minus(100L);
        java.lang.String str27 = instant26.toString();
        org.joda.time.Duration duration30 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period31 = duration30.toPeriod();
        org.joda.time.Duration duration33 = duration30.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = duration30.toPeriodTo(readableInstant34);
        org.joda.time.Duration duration37 = duration30.withMillis((long) (short) 0);
        org.joda.time.Instant instant38 = instant26.plus((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) instant26);
        org.joda.time.Period period41 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period43 = period41.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Duration duration45 = period43.toDurationTo(readableInstant44);
        org.joda.time.Duration duration48 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds49 = duration48.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration50 = null;
        boolean boolean51 = duration48.isEqual(readableDuration50);
        org.joda.time.Duration duration53 = duration48.minus((long) 1);
        org.joda.time.Duration duration55 = duration53.minus((long) '4');
        org.joda.time.Instant instant57 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime58 = instant57.toDateTime();
        org.joda.time.DateTime.Property property59 = dateTime58.era();
        org.joda.time.Duration duration62 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration65 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period66 = duration65.toPeriod();
        org.joda.time.Duration duration68 = duration65.plus((long) (byte) 0);
        org.joda.time.Instant instant70 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime71 = instant70.toDateTime();
        boolean boolean73 = dateTime71.isEqual(10L);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType76, chronology77);
        org.joda.time.PeriodType periodType79 = periodType76.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration68, (org.joda.time.ReadableInstant) dateTime71, periodType79);
        org.joda.time.Period period81 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime58, (org.joda.time.ReadableDuration) duration62, periodType79);
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period83 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration53, (org.joda.time.ReadableInstant) dateTime58, periodType82);
        boolean boolean84 = duration45.isEqual((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.DateTime dateTime86 = new org.joda.time.DateTime(chronology85);
        org.joda.time.DateTime.Property property87 = dateTime86.yearOfEra();
        org.joda.time.Interval interval88 = property87.toInterval();
        java.util.Locale locale89 = java.util.Locale.KOREAN;
        java.lang.String str90 = property87.getAsText(locale89);
        boolean boolean91 = duration45.equals((java.lang.Object) property87);
        org.joda.time.DateTimeFieldType dateTimeFieldType92 = property87.getFieldType();
        org.joda.time.DurationFieldType durationFieldType93 = dateTimeFieldType92.getDurationType();
        boolean boolean94 = dateTime22.isSupported(dateTimeFieldType92);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime22", (instant1.compareTo(dateTime22) == 0) == instant1.equals(dateTime22));
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0596");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property16 = dateTime15.monthOfYear();
        org.joda.time.DateTime.Property property17 = dateTime15.weekyear();
        org.joda.time.DateTime dateTime18 = dateTime15.toDateTime();
        org.joda.time.DateTime dateTime20 = dateTime15.plusHours((int) 'u');
        org.joda.time.Instant instant22 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime23 = instant22.toDateTime();
        org.joda.time.DateTime.Property property24 = dateTime23.era();
        org.joda.time.ReadablePartial readablePartial25 = null;
        org.joda.time.DateTime dateTime26 = dateTime23.withFields(readablePartial25);
        org.joda.time.DateTime dateTime28 = dateTime23.withYearOfEra(292278993);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime20, (org.joda.time.ReadableInstant) dateTime23);
        int int30 = dateTime20.getMonthOfYear();
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime33 = instant32.toDateTime();
        org.joda.time.TimeOfDay timeOfDay34 = dateTime33.toTimeOfDay();
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime((java.lang.Object) dateTime33);
        boolean boolean36 = dateTime20.isEqual((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((-625L));
        org.joda.time.DateTime dateTime39 = dateTime20.minus((org.joda.time.ReadableDuration) duration38);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0597");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        int int14 = dateTime2.getMinuteOfDay();
        org.joda.time.DateTime.Property property15 = dateTime2.secondOfMinute();
        int int16 = property15.get();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0598");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.DateTime.Property property18 = dateTime8.yearOfEra();
        int int19 = dateTime8.getDayOfMonth();
        org.joda.time.Instant instant20 = dateTime8.toInstant();
        org.joda.time.DateTime.Property property21 = dateTime8.millisOfDay();
        org.joda.time.DateTime dateTime23 = property21.addToCopy(2922789);
        org.joda.time.DateTime dateTime24 = property21.withMinimumValue();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0599");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        long long16 = dateTime2.getMillis();
        org.joda.time.DurationFieldType durationFieldType17 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone21 = null;
        org.joda.time.DateTime dateTime22 = dateTime20.withZoneRetainFields(dateTimeZone21);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        org.joda.time.DateTime.Property property26 = dateTime25.era();
        org.joda.time.DateTime dateTime27 = dateTime25.withTimeAtStartOfDay();
        org.joda.time.Duration duration30 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration30, readableInstant31, periodType32);
        mutablePeriod33.setMonths((int) '4');
        org.joda.time.DateTime dateTime36 = dateTime25.plus((org.joda.time.ReadablePeriod) mutablePeriod33);
        org.joda.time.DateTime dateTime38 = dateTime25.minusWeeks((int) (byte) 1);
        int int39 = dateTime22.compareTo((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.DateTime.Property property40 = dateTime25.minuteOfHour();
        org.joda.time.DateTime dateTime42 = dateTime25.withYear(1969);
        org.joda.time.Chronology chronology43 = dateTime42.getChronology();
        org.joda.time.DurationField durationField44 = durationFieldType17.getField(chronology43);
        org.joda.time.DateTime dateTime45 = dateTime2.toDateTime(chronology43);
        org.joda.time.DurationField durationField46 = chronology43.days();
        org.joda.time.DateTimeZone dateTimeZone47 = chronology43.getZone();
        long long49 = dateTimeZone47.previousTransition((long) ' ');
        org.joda.time.DateTime dateTime50 = new org.joda.time.DateTime(dateTimeZone47);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0600");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int9 = mutablePeriod8.getDays();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        org.joda.time.DateTime.Property property14 = dateTime13.yearOfEra();
        org.joda.time.Interval interval15 = property14.toInterval();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.DateTime dateTime17 = new org.joda.time.DateTime(chronology16);
        org.joda.time.DateTime.Property property18 = dateTime17.yearOfEra();
        org.joda.time.Interval interval19 = property18.toInterval();
        boolean boolean20 = interval15.contains((org.joda.time.ReadableInterval) interval19);
        org.joda.time.Chronology chronology21 = interval19.getChronology();
        mutablePeriod8.setPeriod((long) 'u', (long) 1969, chronology21);
        org.joda.time.DateTimeField dateTimeField23 = chronology21.millisOfDay();
        org.joda.time.DateTimeField dateTimeField24 = chronology21.yearOfCentury();
        org.joda.time.Duration duration27 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds28 = duration27.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration29 = null;
        boolean boolean30 = duration27.isEqual(readableDuration29);
        org.joda.time.Duration duration32 = duration27.minus((long) 1);
        org.joda.time.Duration duration34 = duration32.minus((long) '4');
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime37 = instant36.toDateTime();
        org.joda.time.DateTime.Property property38 = dateTime37.era();
        org.joda.time.Duration duration41 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration44 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period45 = duration44.toPeriod();
        org.joda.time.Duration duration47 = duration44.plus((long) (byte) 0);
        org.joda.time.Instant instant49 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime50 = instant49.toDateTime();
        boolean boolean52 = dateTime50.isEqual(10L);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType55, chronology56);
        org.joda.time.PeriodType periodType58 = periodType55.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration47, (org.joda.time.ReadableInstant) dateTime50, periodType58);
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime37, (org.joda.time.ReadableDuration) duration41, periodType58);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, (org.joda.time.ReadableInstant) dateTime37, periodType61);
        org.joda.time.TimeOfDay timeOfDay63 = dateTime37.toTimeOfDay();
        int[] intArray65 = chronology21.get((org.joda.time.ReadablePartial) timeOfDay63, (long) (-1));
        org.joda.time.DateTimeField dateTimeField66 = chronology21.year();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant36 and dateTime37", (instant36.compareTo(dateTime37) == 0) == instant36.equals(dateTime37));
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0601");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTimeField dateTimeField2 = dateTimeFieldType0.getField(chronology1);
        long long5 = dateTimeField2.add(0L, (long) (short) 1);
        long long7 = dateTimeField2.roundHalfCeiling((long) 2);
        org.joda.time.DurationField durationField8 = dateTimeField2.getDurationField();
        long long11 = durationField8.getMillis(0, (long) 4);
        long long13 = durationField8.getMillis((int) '#');
        int int15 = durationField8.getValue(2980800000L);
        long long18 = durationField8.add((-3676492805054399977L), 23);
        java.lang.String str19 = durationField8.getName();
        org.joda.time.DurationFieldType durationFieldType20 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant22 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime23 = instant22.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone24 = null;
        org.joda.time.DateTime dateTime25 = dateTime23.withZoneRetainFields(dateTimeZone24);
        org.joda.time.Instant instant27 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime28 = instant27.toDateTime();
        org.joda.time.DateTime.Property property29 = dateTime28.era();
        org.joda.time.DateTime dateTime30 = dateTime28.withTimeAtStartOfDay();
        org.joda.time.Duration duration33 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration33, readableInstant34, periodType35);
        mutablePeriod36.setMonths((int) '4');
        org.joda.time.DateTime dateTime39 = dateTime28.plus((org.joda.time.ReadablePeriod) mutablePeriod36);
        org.joda.time.DateTime dateTime41 = dateTime28.minusWeeks((int) (byte) 1);
        int int42 = dateTime25.compareTo((org.joda.time.ReadableInstant) dateTime28);
        org.joda.time.DateTime.Property property43 = dateTime28.minuteOfHour();
        org.joda.time.DateTime dateTime45 = dateTime28.withYear(1969);
        org.joda.time.Chronology chronology46 = dateTime45.getChronology();
        org.joda.time.DurationField durationField47 = durationFieldType20.getField(chronology46);
        int int49 = durationField47.getValue((long) 2);
        long long52 = durationField47.add((long) 70, 12);
        int int53 = durationField8.compareTo(durationField47);
        long long56 = durationField8.getMillis((-1855204655L), (-43199999L));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant22 and dateTime23", (instant22.compareTo(dateTime23) == 0) == instant22.equals(dateTime23));
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0602");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int9 = mutablePeriod8.getDays();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        org.joda.time.DateTime.Property property14 = dateTime13.yearOfEra();
        org.joda.time.Interval interval15 = property14.toInterval();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.DateTime dateTime17 = new org.joda.time.DateTime(chronology16);
        org.joda.time.DateTime.Property property18 = dateTime17.yearOfEra();
        org.joda.time.Interval interval19 = property18.toInterval();
        boolean boolean20 = interval15.contains((org.joda.time.ReadableInterval) interval19);
        org.joda.time.Chronology chronology21 = interval19.getChronology();
        mutablePeriod8.setPeriod((long) 'u', (long) 1969, chronology21);
        org.joda.time.DateTimeField dateTimeField23 = chronology21.millisOfDay();
        org.joda.time.DateTimeField dateTimeField24 = chronology21.yearOfCentury();
        org.joda.time.Duration duration27 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds28 = duration27.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration29 = null;
        boolean boolean30 = duration27.isEqual(readableDuration29);
        org.joda.time.Duration duration32 = duration27.minus((long) 1);
        org.joda.time.Duration duration34 = duration32.minus((long) '4');
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime37 = instant36.toDateTime();
        org.joda.time.DateTime.Property property38 = dateTime37.era();
        org.joda.time.Duration duration41 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration44 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period45 = duration44.toPeriod();
        org.joda.time.Duration duration47 = duration44.plus((long) (byte) 0);
        org.joda.time.Instant instant49 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime50 = instant49.toDateTime();
        boolean boolean52 = dateTime50.isEqual(10L);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType55, chronology56);
        org.joda.time.PeriodType periodType58 = periodType55.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration47, (org.joda.time.ReadableInstant) dateTime50, periodType58);
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime37, (org.joda.time.ReadableDuration) duration41, periodType58);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, (org.joda.time.ReadableInstant) dateTime37, periodType61);
        org.joda.time.TimeOfDay timeOfDay63 = dateTime37.toTimeOfDay();
        int[] intArray65 = chronology21.get((org.joda.time.ReadablePartial) timeOfDay63, (long) (-1));
        org.joda.time.DateTimeField dateTimeField66 = chronology21.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField67 = chronology21.era();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant36 and dateTime37", (instant36.compareTo(dateTime37) == 0) == instant36.equals(dateTime37));
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0603");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.Interval interval7 = property6.toInterval();
        boolean boolean8 = interval3.contains((org.joda.time.ReadableInterval) interval7);
        java.lang.Object obj9 = null;
        org.joda.time.Instant instant10 = new org.joda.time.Instant(obj9);
        org.joda.time.DateTimeZone dateTimeZone11 = instant10.getZone();
        java.lang.String str12 = dateTimeZone11.toString();
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(dateTimeZone11);
        boolean boolean14 = interval3.contains((org.joda.time.ReadableInstant) dateTime13);
        org.joda.time.Duration duration17 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds18 = duration17.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration19 = null;
        boolean boolean20 = duration17.isEqual(readableDuration19);
        org.joda.time.Duration duration22 = duration17.minus((long) 1);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration17.toPeriod(chronology23);
        org.joda.time.DateTime dateTime25 = dateTime13.plus((org.joda.time.ReadableDuration) duration17);
        org.joda.time.YearMonthDay yearMonthDay26 = dateTime25.toYearMonthDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant10", (dateTime1.compareTo(instant10) == 0) == dateTime1.equals(instant10));
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0604");
        java.lang.Object obj1 = null;
        org.joda.time.Instant instant2 = new org.joda.time.Instant(obj1);
        org.joda.time.DateTimeZone dateTimeZone3 = instant2.getZone();
        java.lang.String str4 = dateTimeZone3.toString();
        int int6 = dateTimeZone3.getOffset(1L);
        boolean boolean8 = dateTimeZone3.isStandardOffset(0L);
        java.lang.String str10 = dateTimeZone3.getNameKey((long) 1);
        org.joda.time.DateTime dateTime11 = new org.joda.time.DateTime(dateTimeZone3);
        org.joda.time.DateTime dateTime12 = new org.joda.time.DateTime((-1L), dateTimeZone3);
        org.joda.time.Period period14 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period16 = period14.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration18 = period16.toDurationTo(readableInstant17);
        org.joda.time.Duration duration21 = duration18.withDurationAdded((long) '#', 0);
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant25 = instant23.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime26 = instant23.toMutableDateTimeISO();
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period28 = duration21.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime26, periodType27);
        org.joda.time.Minutes minutes29 = duration21.toStandardMinutes();
        org.joda.time.DateTime dateTime30 = dateTime12.plus((org.joda.time.ReadableDuration) duration21);
        org.joda.time.DateTimeZone dateTimeZone31 = org.joda.time.DateTimeZone.getDefault();
        org.joda.time.DateTime dateTime32 = new org.joda.time.DateTime((java.lang.Object) dateTime12, dateTimeZone31);
        org.joda.time.format.PeriodPrinter periodPrinter34 = null;
        org.joda.time.format.PeriodParser periodParser35 = null;
        org.joda.time.format.PeriodFormatter periodFormatter36 = new org.joda.time.format.PeriodFormatter(periodPrinter34, periodParser35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.format.PeriodFormatter periodFormatter38 = periodFormatter36.withParseType(periodType37);
        java.util.Locale locale39 = periodFormatter36.getLocale();
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.lang.String str41 = locale40.getScript();
        org.joda.time.format.PeriodFormatter periodFormatter42 = periodFormatter36.withLocale(locale40);
        java.util.Locale locale43 = locale40.stripExtensions();
        java.lang.String str44 = dateTimeZone31.getShortName(43199999L, locale43);
        org.joda.time.DateTime dateTime45 = org.joda.time.DateTime.now(dateTimeZone31);
        org.joda.time.DateTime dateTime46 = new org.joda.time.DateTime(dateTimeZone31);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime45", (instant2.compareTo(dateTime45) == 0) == instant2.equals(dateTime45));
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0605");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.DateMidnight dateMidnight6 = dateTime2.toDateMidnight();
        org.joda.time.DateTime dateTime9 = dateTime2.withDurationAdded(0L, (int) 'a');
        org.joda.time.DateTime.Property property10 = dateTime9.weekOfWeekyear();
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone14 = null;
        org.joda.time.DateTime dateTime15 = dateTime13.withZoneRetainFields(dateTimeZone14);
        int int16 = dateTime13.getEra();
        boolean boolean17 = dateTime9.isAfter((org.joda.time.ReadableInstant) dateTime13);
        org.joda.time.DateTimeZone dateTimeZone18 = dateTime9.getZone();
        java.util.GregorianCalendar gregorianCalendar19 = dateTime9.toGregorianCalendar();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime9", (instant1.compareTo(dateTime9) == 0) == instant1.equals(dateTime9));
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0606");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType3, chronology4);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) (short) 0, periodType3, chronology6);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((long) (short) 10, periodType9);
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant13 = instant12.toInstant();
        org.joda.time.DateTime dateTime14 = instant13.toDateTimeISO();
        org.joda.time.Duration duration15 = period10.toDurationFrom((org.joda.time.ReadableInstant) dateTime14);
        org.joda.time.Duration duration18 = new org.joda.time.Duration((-1L), (long) 23);
        org.joda.time.Period period20 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period22 = period20.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration24 = period22.toDurationTo(readableInstant23);
        org.joda.time.Duration duration27 = duration24.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = duration27.toPeriodFrom(readableInstant28);
        org.joda.time.Duration duration30 = duration18.minus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration15.plus((org.joda.time.ReadableDuration) duration18);
        mutablePeriod7.add((org.joda.time.ReadableDuration) duration18);
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int45 = mutablePeriod44.getDays();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.DateTime dateTime49 = new org.joda.time.DateTime(chronology48);
        org.joda.time.DateTime.Property property50 = dateTime49.yearOfEra();
        org.joda.time.Interval interval51 = property50.toInterval();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.DateTime dateTime53 = new org.joda.time.DateTime(chronology52);
        org.joda.time.DateTime.Property property54 = dateTime53.yearOfEra();
        org.joda.time.Interval interval55 = property54.toInterval();
        boolean boolean56 = interval51.contains((org.joda.time.ReadableInterval) interval55);
        org.joda.time.Chronology chronology57 = interval55.getChronology();
        mutablePeriod44.setPeriod((long) 'u', (long) 1969, chronology57);
        org.joda.time.Period period59 = new org.joda.time.Period((long) (byte) 100, chronology57);
        mutablePeriod7.setPeriod((long) 1, (long) 69, chronology57);
        int int61 = mutablePeriod7.size();
        int int62 = mutablePeriod7.getHours();
        mutablePeriod7.add((long) (short) 1);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime14", (instant12.compareTo(dateTime14) == 0) == instant12.equals(dateTime14));
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0607");
        org.joda.time.DurationFieldType durationFieldType0 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant2 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime3 = instant2.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone4 = null;
        org.joda.time.DateTime dateTime5 = dateTime3.withZoneRetainFields(dateTimeZone4);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        org.joda.time.DateTime.Property property9 = dateTime8.era();
        org.joda.time.DateTime dateTime10 = dateTime8.withTimeAtStartOfDay();
        org.joda.time.Duration duration13 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration13, readableInstant14, periodType15);
        mutablePeriod16.setMonths((int) '4');
        org.joda.time.DateTime dateTime19 = dateTime8.plus((org.joda.time.ReadablePeriod) mutablePeriod16);
        org.joda.time.DateTime dateTime21 = dateTime8.minusWeeks((int) (byte) 1);
        int int22 = dateTime5.compareTo((org.joda.time.ReadableInstant) dateTime8);
        org.joda.time.DateTime.Property property23 = dateTime8.minuteOfHour();
        org.joda.time.DateTime dateTime25 = dateTime8.withYear(1969);
        org.joda.time.Chronology chronology26 = dateTime25.getChronology();
        org.joda.time.DurationField durationField27 = durationFieldType0.getField(chronology26);
        long long30 = durationField27.getValueAsLong((long) 59, (long) 12);
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime33 = instant32.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone34 = null;
        org.joda.time.DateTime dateTime35 = dateTime33.withZoneRetainFields(dateTimeZone34);
        org.joda.time.Instant instant37 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime38 = instant37.toDateTime();
        org.joda.time.DateTime.Property property39 = dateTime38.era();
        org.joda.time.DateTime dateTime40 = dateTime38.withTimeAtStartOfDay();
        org.joda.time.Duration duration43 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.PeriodType periodType45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration43, readableInstant44, periodType45);
        mutablePeriod46.setMonths((int) '4');
        org.joda.time.DateTime dateTime49 = dateTime38.plus((org.joda.time.ReadablePeriod) mutablePeriod46);
        org.joda.time.DateTime dateTime51 = dateTime38.minusWeeks((int) (byte) 1);
        int int52 = dateTime35.compareTo((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.DateTime.Property property53 = dateTime38.minuteOfHour();
        org.joda.time.DateTime dateTime55 = dateTime38.withYear(1969);
        org.joda.time.Chronology chronology56 = dateTime55.getChronology();
        org.joda.time.DateTimeField dateTimeField57 = chronology56.dayOfMonth();
        org.joda.time.DurationField durationField58 = chronology56.minutes();
        int int61 = durationField58.getValue((long) 69, (long) (short) 0);
        int int64 = durationField58.getDifference((long) 3, 12L);
        boolean boolean65 = durationField58.isPrecise();
        int int66 = durationField27.compareTo(durationField58);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime3", (instant2.compareTo(dateTime3) == 0) == instant2.equals(dateTime3));
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0608");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.era();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.secondOfDay();
        org.joda.time.DateTimeField dateTimeField29 = chronology25.weekOfWeekyear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0609");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.DateTime dateTime6 = dateTime2.withCenturyOfEra((int) (byte) 1);
        org.joda.time.DateTimeFieldType dateTimeFieldType7 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.DateTimeField dateTimeField9 = dateTimeFieldType7.getField(chronology8);
        long long12 = dateTimeField9.add(0L, (long) (short) 1);
        long long15 = dateTimeField9.add(1L, (-1));
        int int16 = dateTime2.get(dateTimeField9);
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime19 = instant18.toDateTime();
        org.joda.time.DateTime.Property property20 = dateTime19.era();
        org.joda.time.DateTime dateTime21 = dateTime19.withTimeAtStartOfDay();
        org.joda.time.Duration duration24 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration24, readableInstant25, periodType26);
        mutablePeriod27.setMonths((int) '4');
        org.joda.time.DateTime dateTime30 = dateTime19.plus((org.joda.time.ReadablePeriod) mutablePeriod27);
        org.joda.time.DateTime dateTime32 = dateTime19.minusWeeks((int) (byte) 1);
        long long33 = dateTime19.getMillis();
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime37 = instant36.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone38 = null;
        org.joda.time.DateTime dateTime39 = dateTime37.withZoneRetainFields(dateTimeZone38);
        org.joda.time.Instant instant41 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime42 = instant41.toDateTime();
        org.joda.time.DateTime.Property property43 = dateTime42.era();
        org.joda.time.DateTime dateTime44 = dateTime42.withTimeAtStartOfDay();
        org.joda.time.Duration duration47 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.PeriodType periodType49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration47, readableInstant48, periodType49);
        mutablePeriod50.setMonths((int) '4');
        org.joda.time.DateTime dateTime53 = dateTime42.plus((org.joda.time.ReadablePeriod) mutablePeriod50);
        org.joda.time.DateTime dateTime55 = dateTime42.minusWeeks((int) (byte) 1);
        int int56 = dateTime39.compareTo((org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.DateTime.Property property57 = dateTime42.minuteOfHour();
        org.joda.time.DateTime dateTime59 = dateTime42.withYear(1969);
        org.joda.time.Chronology chronology60 = dateTime59.getChronology();
        org.joda.time.DurationField durationField61 = durationFieldType34.getField(chronology60);
        org.joda.time.DateTime dateTime62 = dateTime19.toDateTime(chronology60);
        org.joda.time.DateTime dateTime63 = dateTime2.toDateTime(chronology60);
        org.joda.time.DateTimeField dateTimeField64 = chronology60.millisOfDay();
        org.joda.time.DateTimeField dateTimeField65 = chronology60.secondOfMinute();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0610");
        java.util.Locale.Category category0 = java.util.Locale.Category.DISPLAY;
        java.lang.Object obj2 = null;
        org.joda.time.Instant instant3 = new org.joda.time.Instant(obj2);
        org.joda.time.DateTimeZone dateTimeZone4 = instant3.getZone();
        java.lang.String str5 = dateTimeZone4.toString();
        int int7 = dateTimeZone4.getOffset(1L);
        boolean boolean9 = dateTimeZone4.isStandardOffset(0L);
        java.lang.String str11 = dateTimeZone4.getNameKey((long) 1);
        org.joda.time.DateTime dateTime12 = new org.joda.time.DateTime(dateTimeZone4);
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime((-1L), dateTimeZone4);
        org.joda.time.Period period15 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period17 = period15.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Duration duration19 = period17.toDurationTo(readableInstant18);
        org.joda.time.Duration duration22 = duration19.withDurationAdded((long) '#', 0);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant26 = instant24.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime27 = instant24.toMutableDateTimeISO();
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period29 = duration22.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime27, periodType28);
        org.joda.time.Minutes minutes30 = duration22.toStandardMinutes();
        org.joda.time.DateTime dateTime31 = dateTime13.plus((org.joda.time.ReadableDuration) duration22);
        org.joda.time.DateTimeZone dateTimeZone32 = org.joda.time.DateTimeZone.getDefault();
        org.joda.time.DateTime dateTime33 = new org.joda.time.DateTime((java.lang.Object) dateTime13, dateTimeZone32);
        org.joda.time.format.PeriodPrinter periodPrinter35 = null;
        org.joda.time.format.PeriodParser periodParser36 = null;
        org.joda.time.format.PeriodFormatter periodFormatter37 = new org.joda.time.format.PeriodFormatter(periodPrinter35, periodParser36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.format.PeriodFormatter periodFormatter39 = periodFormatter37.withParseType(periodType38);
        java.util.Locale locale40 = periodFormatter37.getLocale();
        java.util.Locale locale41 = java.util.Locale.ITALY;
        java.lang.String str42 = locale41.getScript();
        org.joda.time.format.PeriodFormatter periodFormatter43 = periodFormatter37.withLocale(locale41);
        java.util.Locale locale44 = locale41.stripExtensions();
        java.lang.String str45 = dateTimeZone32.getShortName(43199999L, locale44);
        java.util.Locale.setDefault(category0, locale44);
        java.util.Locale locale47 = java.util.Locale.getDefault(category0);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime13 and mutableDateTime27", (dateTime13.compareTo(mutableDateTime27) == 0) == dateTime13.equals(mutableDateTime27));
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0611");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant3, periodType4);
        mutablePeriod5.setPeriod((long) 1, (-1L));
        mutablePeriod5.setMillis((int) (short) 0);
        int int11 = mutablePeriod5.getDays();
        mutablePeriod5.addMinutes(1969);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) (short) 10, periodType15);
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant19 = instant18.toInstant();
        org.joda.time.DateTime dateTime20 = instant19.toDateTimeISO();
        org.joda.time.Duration duration21 = period16.toDurationFrom((org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.Period period23 = period16.plusMonths(1969);
        org.joda.time.Period period25 = period23.withMinutes(2);
        mutablePeriod5.add((org.joda.time.ReadablePeriod) period23);
        org.joda.time.PeriodType periodType27 = mutablePeriod5.getPeriodType();
        org.joda.time.Duration duration30 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration30, readableInstant31, periodType32);
        mutablePeriod33.setMonths((int) '4');
        org.joda.time.Period period36 = mutablePeriod33.toPeriod();
        org.joda.time.Period period38 = period36.minusMinutes(100);
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) period38);
        org.joda.time.Period period41 = period38.minusDays(12);
        org.joda.time.Period period43 = period41.withMinutes((int) (byte) 1);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant18 and dateTime20", (instant18.compareTo(dateTime20) == 0) == instant18.equals(dateTime20));
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0612");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours2 = hours0.multipliedBy(0);
        org.joda.time.Hours hours4 = hours0.dividedBy(69);
        org.joda.time.Hours hours5 = hours0.negated();
        org.joda.time.Hours hours7 = hours5.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours7.plus(hours8);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType15, chronology16);
        org.joda.time.PeriodType periodType18 = periodType15.withWeeksRemoved();
        org.joda.time.PeriodType periodType19 = periodType18.withSecondsRemoved();
        org.joda.time.PeriodType periodType20 = periodType19.withWeeksRemoved();
        org.joda.time.Instant instant22 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime23 = instant22.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone24 = null;
        org.joda.time.DateTime dateTime25 = dateTime23.withZoneRetainFields(dateTimeZone24);
        org.joda.time.Instant instant27 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime28 = instant27.toDateTime();
        org.joda.time.DateTime.Property property29 = dateTime28.era();
        org.joda.time.DateTime dateTime30 = dateTime28.withTimeAtStartOfDay();
        org.joda.time.Duration duration33 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration33, readableInstant34, periodType35);
        mutablePeriod36.setMonths((int) '4');
        org.joda.time.DateTime dateTime39 = dateTime28.plus((org.joda.time.ReadablePeriod) mutablePeriod36);
        org.joda.time.DateTime dateTime41 = dateTime28.minusWeeks((int) (byte) 1);
        int int42 = dateTime25.compareTo((org.joda.time.ReadableInstant) dateTime28);
        org.joda.time.DateTime.Property property43 = dateTime28.minuteOfHour();
        org.joda.time.DateTime dateTime45 = dateTime28.withYear(1969);
        org.joda.time.Chronology chronology46 = dateTime45.getChronology();
        org.joda.time.DateTimeField dateTimeField47 = chronology46.year();
        org.joda.time.DateTimeField dateTimeField48 = chronology46.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField49 = chronology46.year();
        org.joda.time.Period period50 = new org.joda.time.Period((long) (byte) 100, (long) 'a', periodType20, chronology46);
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((long) '#', chronology46);
        org.joda.time.Hours hours52 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours53 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours55 = hours53.multipliedBy(0);
        org.joda.time.Hours hours57 = hours53.dividedBy(69);
        org.joda.time.Hours hours58 = org.joda.time.Hours.MIN_VALUE;
        boolean boolean59 = hours57.isGreaterThan(hours58);
        org.joda.time.Hours hours60 = hours52.plus(hours58);
        mutablePeriod51.setPeriod((org.joda.time.ReadablePeriod) hours60);
        boolean boolean62 = hours7.isLessThan(hours60);
        org.joda.time.Hours hours64 = hours7.dividedBy((-19));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant22 and dateTime23", (instant22.compareTo(dateTime23) == 0) == instant22.equals(dateTime23));
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0613");
        org.joda.time.Instant instant0 = new org.joda.time.Instant();
        org.joda.time.MutableDateTime mutableDateTime1 = instant0.toMutableDateTimeISO();
        org.joda.time.Chronology chronology2 = instant0.getChronology();
        org.joda.time.Instant instant5 = instant0.withDurationAdded((long) 292278993, 1972);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant0 and mutableDateTime1", (instant0.compareTo(mutableDateTime1) == 0) == instant0.equals(mutableDateTime1));
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0614");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.DateTime.Property property5 = dateTime4.weekOfWeekyear();
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant9 = instant7.minus(100L);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime4, (org.joda.time.ReadableInstant) instant7);
        int int11 = dateTime4.getYearOfEra();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime4", (instant1.compareTo(dateTime4) == 0) == instant1.equals(dateTime4));
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0615");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(chronology2);
        org.joda.time.DateTime.Property property4 = dateTime3.yearOfEra();
        org.joda.time.Interval interval5 = property4.toInterval();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.DateTime dateTime7 = new org.joda.time.DateTime(chronology6);
        org.joda.time.DateTime.Property property8 = dateTime7.yearOfEra();
        org.joda.time.Interval interval9 = property8.toInterval();
        boolean boolean10 = interval5.contains((org.joda.time.ReadableInterval) interval9);
        java.lang.Object obj11 = null;
        org.joda.time.Instant instant12 = new org.joda.time.Instant(obj11);
        org.joda.time.DateTimeZone dateTimeZone13 = instant12.getZone();
        java.lang.String str14 = dateTimeZone13.toString();
        org.joda.time.DateTime dateTime15 = new org.joda.time.DateTime(dateTimeZone13);
        boolean boolean16 = interval5.contains((org.joda.time.ReadableInstant) dateTime15);
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime19 = instant18.toDateTime();
        org.joda.time.DateTime.Property property20 = dateTime19.era();
        boolean boolean21 = interval5.contains((org.joda.time.ReadableInstant) dateTime19);
        org.joda.time.MutableInterval mutableInterval22 = interval5.toMutableInterval();
        org.joda.time.Chronology chronology23 = interval5.getChronology();
        org.joda.time.DateTimeField dateTimeField24 = chronology23.era();
        org.joda.time.Period period25 = new org.joda.time.Period((-109418823420000L), (long) 1439, chronology23);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime3 and instant12", (dateTime3.compareTo(instant12) == 0) == dateTime3.equals(instant12));
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0616");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        java.lang.Object obj2 = null;
        boolean boolean3 = duration1.equals(obj2);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType9, chronology10);
        org.joda.time.PeriodType periodType12 = periodType9.withWeeksRemoved();
        org.joda.time.PeriodType periodType13 = periodType12.withSecondsRemoved();
        org.joda.time.PeriodType periodType14 = periodType13.withWeeksRemoved();
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone18 = null;
        org.joda.time.DateTime dateTime19 = dateTime17.withZoneRetainFields(dateTimeZone18);
        org.joda.time.Instant instant21 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime22 = instant21.toDateTime();
        org.joda.time.DateTime.Property property23 = dateTime22.era();
        org.joda.time.DateTime dateTime24 = dateTime22.withTimeAtStartOfDay();
        org.joda.time.Duration duration27 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.PeriodType periodType29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration27, readableInstant28, periodType29);
        mutablePeriod30.setMonths((int) '4');
        org.joda.time.DateTime dateTime33 = dateTime22.plus((org.joda.time.ReadablePeriod) mutablePeriod30);
        org.joda.time.DateTime dateTime35 = dateTime22.minusWeeks((int) (byte) 1);
        int int36 = dateTime19.compareTo((org.joda.time.ReadableInstant) dateTime22);
        org.joda.time.DateTime.Property property37 = dateTime22.minuteOfHour();
        org.joda.time.DateTime dateTime39 = dateTime22.withYear(1969);
        org.joda.time.Chronology chronology40 = dateTime39.getChronology();
        org.joda.time.DateTimeField dateTimeField41 = chronology40.year();
        org.joda.time.DateTimeField dateTimeField42 = chronology40.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField43 = chronology40.year();
        org.joda.time.Period period44 = new org.joda.time.Period((long) (byte) 100, (long) 'a', periodType14, chronology40);
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((long) '#', chronology40);
        org.joda.time.DateTimeField dateTimeField46 = chronology40.dayOfYear();
        org.joda.time.Period period47 = duration1.toPeriod(chronology40);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant16 and dateTime17", (instant16.compareTo(dateTime17) == 0) == instant16.equals(dateTime17));
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0617");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.Duration duration5 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period6 = duration5.toPeriod();
        org.joda.time.Duration duration8 = duration5.plus((long) (byte) 0);
        org.joda.time.Minutes minutes9 = duration5.toStandardMinutes();
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType11 = periodType10.withMinutesRemoved();
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableInstant) instant1, (org.joda.time.ReadableDuration) duration5, periodType10);
        long long13 = duration5.getMillis();
        org.joda.time.Duration duration14 = duration5.toDuration();
        org.joda.time.Duration duration17 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period18 = duration17.toPeriod();
        org.joda.time.Duration duration20 = duration17.plus((long) (byte) 0);
        org.joda.time.Instant instant22 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime23 = instant22.toDateTime();
        boolean boolean25 = dateTime23.isEqual(10L);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType28, chronology29);
        org.joda.time.PeriodType periodType31 = periodType28.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration20, (org.joda.time.ReadableInstant) dateTime23, periodType31);
        org.joda.time.Interval interval33 = duration5.toIntervalTo((org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration36 = duration5.withDurationAdded((-101L), 12);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0618");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property16 = dateTime15.monthOfYear();
        org.joda.time.DateTime.Property property17 = dateTime15.weekyear();
        org.joda.time.DateTime dateTime18 = dateTime15.toDateTime();
        org.joda.time.DateTime dateTime20 = dateTime15.plusHours((int) 'u');
        org.joda.time.Instant instant22 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime23 = instant22.toDateTime();
        org.joda.time.DateTime.Property property24 = dateTime23.era();
        org.joda.time.ReadablePartial readablePartial25 = null;
        org.joda.time.DateTime dateTime26 = dateTime23.withFields(readablePartial25);
        org.joda.time.DateTime dateTime28 = dateTime23.withYearOfEra(292278993);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime20, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes33 = minutes31.minus((int) (short) -1);
        boolean boolean34 = minutes30.isGreaterThan(minutes31);
        org.joda.time.Minutes minutes35 = null;
        org.joda.time.Minutes minutes36 = minutes31.minus(minutes35);
        int int37 = minutes31.getMinutes();
        org.joda.time.MutablePeriod mutablePeriod38 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes40 = minutes31.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes41 = minutes29.plus(minutes31);
        java.lang.String str42 = minutes31.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0619");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant2 = instant1.toInstant();
        org.joda.time.DateTime dateTime3 = instant2.toDateTimeISO();
        org.joda.time.DateTime dateTime4 = dateTime3.withLaterOffsetAtOverlap();
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant8 = instant6.minus(100L);
        java.lang.String str9 = instant8.toString();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period13 = duration12.toPeriod();
        org.joda.time.Duration duration15 = duration12.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = duration12.toPeriodTo(readableInstant16);
        org.joda.time.Duration duration19 = duration12.withMillis((long) (short) 0);
        org.joda.time.Instant instant20 = instant8.plus((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Instant instant22 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime23 = instant22.toDateTime();
        org.joda.time.DateTime.Property property24 = dateTime23.era();
        org.joda.time.DateTime dateTime25 = dateTime23.withTimeAtStartOfDay();
        org.joda.time.Duration duration28 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration28, readableInstant29, periodType30);
        mutablePeriod31.setMonths((int) '4');
        org.joda.time.DateTime dateTime34 = dateTime23.plus((org.joda.time.ReadablePeriod) mutablePeriod31);
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant37 = instant36.toInstant();
        boolean boolean38 = dateTime23.isEqual((org.joda.time.ReadableInstant) instant37);
        boolean boolean39 = instant20.isAfter((org.joda.time.ReadableInstant) instant37);
        org.joda.time.Instant instant40 = instant37.toInstant();
        org.joda.time.Chronology chronology41 = instant37.getChronology();
        org.joda.time.Duration duration44 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period45 = duration44.toPeriod();
        org.joda.time.Duration duration47 = duration44.plus((long) (byte) 0);
        org.joda.time.Instant instant49 = instant37.withDurationAdded((org.joda.time.ReadableDuration) duration47, 70);
        org.joda.time.Duration duration50 = duration47.toDuration();
        org.joda.time.DateTime dateTime51 = dateTime3.minus((org.joda.time.ReadableDuration) duration47);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime51", (instant1.compareTo(dateTime51) == 0) == instant1.equals(dateTime51));
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0620");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) 1972);
        org.joda.time.Instant instant3 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime4 = instant3.toDateTime();
        org.joda.time.DateTime.Property property5 = dateTime4.era();
        org.joda.time.DateTime dateTime6 = dateTime4.withTimeAtStartOfDay();
        org.joda.time.Instant instant7 = dateTime4.toInstant();
        org.joda.time.DateMidnight dateMidnight8 = dateTime4.toDateMidnight();
        int int9 = dateMidnight8.getDayOfYear();
        boolean boolean10 = dateMidnight8.isAfterNow();
        org.joda.time.Instant instant11 = dateMidnight8.toInstant();
        org.joda.time.Instant instant14 = instant11.withDurationAdded((long) 7, 11);
        org.joda.time.Days days15 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType16 = org.joda.time.DurationFieldType.minutes();
        int int17 = days15.get(durationFieldType16);
        org.joda.time.MutablePeriod mutablePeriod18 = days15.toMutablePeriod();
        mutablePeriod18.setSeconds(100);
        mutablePeriod18.setDays(26033472);
        org.joda.time.PeriodType periodType23 = mutablePeriod18.getPeriodType();
        org.joda.time.Period period24 = duration1.toPeriodFrom((org.joda.time.ReadableInstant) instant11, periodType23);
        org.joda.time.Seconds seconds25 = duration1.toStandardSeconds();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant3 and dateTime4", (instant3.compareTo(dateTime4) == 0) == instant3.equals(dateTime4));
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0621");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        java.lang.Object obj14 = null;
        org.joda.time.Instant instant15 = new org.joda.time.Instant(obj14);
        org.joda.time.DateTimeZone dateTimeZone16 = instant15.getZone();
        java.lang.String str17 = dateTimeZone16.toString();
        int int19 = dateTimeZone16.getOffset(1L);
        boolean boolean21 = dateTimeZone16.isStandardOffset(0L);
        org.joda.time.DateTime dateTime22 = dateTime2.withZoneRetainFields(dateTimeZone16);
        org.joda.time.DateTime dateTime24 = dateTime22.plusYears(1969);
        org.joda.time.YearMonthDay yearMonthDay25 = dateTime22.toYearMonthDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0622");
        org.joda.time.Duration duration5 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant6, periodType7);
        org.joda.time.Days days9 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType10 = org.joda.time.DurationFieldType.minutes();
        int int11 = days9.get(durationFieldType10);
        mutablePeriod8.add(durationFieldType10, 8);
        org.joda.time.ReadablePeriod readablePeriod14 = null;
        mutablePeriod8.add(readablePeriod14);
        int int16 = mutablePeriod8.getMonths();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.DateTime dateTime18 = new org.joda.time.DateTime(chronology17);
        org.joda.time.DateTime.Property property19 = dateTime18.yearOfEra();
        org.joda.time.Interval interval20 = property19.toInterval();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.DateTime dateTime22 = new org.joda.time.DateTime(chronology21);
        org.joda.time.DateTime.Property property23 = dateTime22.yearOfEra();
        org.joda.time.Interval interval24 = property23.toInterval();
        boolean boolean25 = interval20.contains((org.joda.time.ReadableInterval) interval24);
        mutablePeriod8.setPeriod((org.joda.time.ReadableInterval) interval20);
        org.joda.time.DurationFieldType durationFieldType28 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant30 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime31 = instant30.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone32 = null;
        org.joda.time.DateTime dateTime33 = dateTime31.withZoneRetainFields(dateTimeZone32);
        org.joda.time.Instant instant35 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime36 = instant35.toDateTime();
        org.joda.time.DateTime.Property property37 = dateTime36.era();
        org.joda.time.DateTime dateTime38 = dateTime36.withTimeAtStartOfDay();
        org.joda.time.Duration duration41 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.PeriodType periodType43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration41, readableInstant42, periodType43);
        mutablePeriod44.setMonths((int) '4');
        org.joda.time.DateTime dateTime47 = dateTime36.plus((org.joda.time.ReadablePeriod) mutablePeriod44);
        org.joda.time.DateTime dateTime49 = dateTime36.minusWeeks((int) (byte) 1);
        int int50 = dateTime33.compareTo((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.DateTime.Property property51 = dateTime36.minuteOfHour();
        org.joda.time.DateTime dateTime53 = dateTime36.withYear(1969);
        org.joda.time.Chronology chronology54 = dateTime53.getChronology();
        org.joda.time.DurationField durationField55 = durationFieldType28.getField(chronology54);
        mutablePeriod8.add((-43199999L), chronology54);
        org.joda.time.DurationField durationField57 = chronology54.millis();
        org.joda.time.DurationField durationField58 = chronology54.months();
        org.joda.time.DateTime dateTime59 = new org.joda.time.DateTime((long) 69, chronology54);
        org.joda.time.DateTimeField dateTimeField60 = chronology54.weekyear();
        org.joda.time.Period period61 = new org.joda.time.Period((long) '4', (long) 70, chronology54);
        org.joda.time.Period period63 = period61.minusHours(432);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant30 and dateTime31", (instant30.compareTo(dateTime31) == 0) == instant30.equals(dateTime31));
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0623");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours2 = hours0.multipliedBy(0);
        org.joda.time.Hours hours4 = hours0.dividedBy(69);
        org.joda.time.Hours hours5 = hours0.negated();
        org.joda.time.Hours hours7 = hours5.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours7.plus(hours8);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType15, chronology16);
        org.joda.time.PeriodType periodType18 = periodType15.withWeeksRemoved();
        org.joda.time.PeriodType periodType19 = periodType18.withSecondsRemoved();
        org.joda.time.PeriodType periodType20 = periodType19.withWeeksRemoved();
        org.joda.time.Instant instant22 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime23 = instant22.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone24 = null;
        org.joda.time.DateTime dateTime25 = dateTime23.withZoneRetainFields(dateTimeZone24);
        org.joda.time.Instant instant27 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime28 = instant27.toDateTime();
        org.joda.time.DateTime.Property property29 = dateTime28.era();
        org.joda.time.DateTime dateTime30 = dateTime28.withTimeAtStartOfDay();
        org.joda.time.Duration duration33 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration33, readableInstant34, periodType35);
        mutablePeriod36.setMonths((int) '4');
        org.joda.time.DateTime dateTime39 = dateTime28.plus((org.joda.time.ReadablePeriod) mutablePeriod36);
        org.joda.time.DateTime dateTime41 = dateTime28.minusWeeks((int) (byte) 1);
        int int42 = dateTime25.compareTo((org.joda.time.ReadableInstant) dateTime28);
        org.joda.time.DateTime.Property property43 = dateTime28.minuteOfHour();
        org.joda.time.DateTime dateTime45 = dateTime28.withYear(1969);
        org.joda.time.Chronology chronology46 = dateTime45.getChronology();
        org.joda.time.DateTimeField dateTimeField47 = chronology46.year();
        org.joda.time.DateTimeField dateTimeField48 = chronology46.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField49 = chronology46.year();
        org.joda.time.Period period50 = new org.joda.time.Period((long) (byte) 100, (long) 'a', periodType20, chronology46);
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((long) '#', chronology46);
        org.joda.time.Hours hours52 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours53 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours55 = hours53.multipliedBy(0);
        org.joda.time.Hours hours57 = hours53.dividedBy(69);
        org.joda.time.Hours hours58 = org.joda.time.Hours.MIN_VALUE;
        boolean boolean59 = hours57.isGreaterThan(hours58);
        org.joda.time.Hours hours60 = hours52.plus(hours58);
        mutablePeriod51.setPeriod((org.joda.time.ReadablePeriod) hours60);
        boolean boolean62 = hours7.isLessThan(hours60);
        org.joda.time.Duration duration63 = hours7.toStandardDuration();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant22 and dateTime23", (instant22.compareTo(dateTime23) == 0) == instant22.equals(dateTime23));
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0624");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        int int4 = period3.getDays();
        org.joda.time.Period period6 = period3.plusDays(3);
        org.joda.time.Period period8 = period6.withWeeks((-1));
        int[] intArray9 = period6.getValues();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds13 = duration12.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration14 = null;
        boolean boolean15 = duration12.isEqual(readableDuration14);
        org.joda.time.Duration duration17 = duration12.minus((long) 1);
        org.joda.time.Duration duration19 = duration17.minus((long) '4');
        org.joda.time.Instant instant21 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime22 = instant21.toDateTime();
        org.joda.time.DateTime.Property property23 = dateTime22.era();
        org.joda.time.Duration duration26 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration29 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period30 = duration29.toPeriod();
        org.joda.time.Duration duration32 = duration29.plus((long) (byte) 0);
        org.joda.time.Instant instant34 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime35 = instant34.toDateTime();
        boolean boolean37 = dateTime35.isEqual(10L);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType40, chronology41);
        org.joda.time.PeriodType periodType43 = periodType40.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration32, (org.joda.time.ReadableInstant) dateTime35, periodType43);
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableDuration) duration26, periodType43);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, (org.joda.time.ReadableInstant) dateTime22, periodType46);
        org.joda.time.TimeOfDay timeOfDay48 = dateTime22.toTimeOfDay();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.DateTime dateTime50 = timeOfDay48.toDateTime(readableInstant49);
        org.joda.time.Instant instant52 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant54 = instant52.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime55 = instant52.toMutableDateTimeISO();
        org.joda.time.DateTime dateTime56 = timeOfDay48.toDateTime((org.joda.time.ReadableInstant) instant52);
        org.joda.time.DateTimeFieldType dateTimeFieldType57 = org.joda.time.DateTimeFieldType.year();
        boolean boolean58 = dateTime56.isSupported(dateTimeFieldType57);
        int int59 = dateTime56.getDayOfMonth();
        org.joda.time.Duration duration60 = period6.toDurationFrom((org.joda.time.ReadableInstant) dateTime56);
        org.joda.time.Instant instant62 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime63 = instant62.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone64 = null;
        org.joda.time.DateTime dateTime65 = dateTime63.withZoneRetainFields(dateTimeZone64);
        org.joda.time.Instant instant67 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime68 = instant67.toDateTime();
        org.joda.time.DateTime.Property property69 = dateTime68.era();
        org.joda.time.DateTime dateTime70 = dateTime68.withTimeAtStartOfDay();
        org.joda.time.Duration duration73 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.PeriodType periodType75 = null;
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration73, readableInstant74, periodType75);
        mutablePeriod76.setMonths((int) '4');
        org.joda.time.DateTime dateTime79 = dateTime68.plus((org.joda.time.ReadablePeriod) mutablePeriod76);
        org.joda.time.DateTime dateTime81 = dateTime68.minusWeeks((int) (byte) 1);
        int int82 = dateTime65.compareTo((org.joda.time.ReadableInstant) dateTime68);
        org.joda.time.DateTime.Property property83 = dateTime68.minuteOfHour();
        org.joda.time.DateTime dateTime85 = dateTime68.withYear(1969);
        org.joda.time.Chronology chronology86 = dateTime85.getChronology();
        org.joda.time.DateTime.Property property87 = dateTime85.dayOfMonth();
        org.joda.time.Period period88 = duration60.toPeriodFrom((org.joda.time.ReadableInstant) dateTime85);
        org.joda.time.Period period90 = period88.plusWeeks((int) (byte) 0);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant21 and dateTime22", (instant21.compareTo(dateTime22) == 0) == instant21.equals(dateTime22));
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0625");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime dateTime16 = dateTime15.toDateTimeISO();
        org.joda.time.DateTime dateTime18 = dateTime15.plusSeconds(59);
        org.joda.time.DateTime dateTime20 = dateTime15.withMillisOfDay(720);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0626");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.Interval interval7 = property6.toInterval();
        boolean boolean8 = interval3.contains((org.joda.time.ReadableInterval) interval7);
        java.lang.String str9 = interval3.toString();
        long long10 = interval3.getEndMillis();
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone14 = null;
        org.joda.time.DateTime dateTime15 = dateTime13.withZoneRetainFields(dateTimeZone14);
        org.joda.time.Instant instant17 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime18 = instant17.toDateTime();
        org.joda.time.DateTime.Property property19 = dateTime18.era();
        org.joda.time.DateTime dateTime20 = dateTime18.withTimeAtStartOfDay();
        org.joda.time.Duration duration23 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, readableInstant24, periodType25);
        mutablePeriod26.setMonths((int) '4');
        org.joda.time.DateTime dateTime29 = dateTime18.plus((org.joda.time.ReadablePeriod) mutablePeriod26);
        org.joda.time.DateTime dateTime31 = dateTime18.minusWeeks((int) (byte) 1);
        int int32 = dateTime15.compareTo((org.joda.time.ReadableInstant) dateTime18);
        org.joda.time.DateTime.Property property33 = dateTime18.minuteOfHour();
        org.joda.time.DateTime dateTime35 = dateTime18.withYear(1969);
        org.joda.time.Chronology chronology36 = dateTime35.getChronology();
        boolean boolean37 = interval3.isBefore((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.DateTime dateTime39 = dateTime35.minus((long) 86399);
        org.joda.time.DateTime.Property property40 = dateTime35.minuteOfHour();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime13", (instant12.compareTo(dateTime13) == 0) == instant12.equals(dateTime13));
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0627");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property16 = dateTime15.monthOfYear();
        org.joda.time.DateTime.Property property17 = dateTime15.weekyear();
        org.joda.time.DateTime dateTime18 = dateTime15.toDateTime();
        org.joda.time.DateTime dateTime20 = dateTime15.plusHours((int) 'u');
        org.joda.time.Instant instant22 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime23 = instant22.toDateTime();
        org.joda.time.DateTime.Property property24 = dateTime23.era();
        org.joda.time.ReadablePartial readablePartial25 = null;
        org.joda.time.DateTime dateTime26 = dateTime23.withFields(readablePartial25);
        org.joda.time.DateTime dateTime28 = dateTime23.withYearOfEra(292278993);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime20, (org.joda.time.ReadableInstant) dateTime23);
        int int30 = dateTime20.getMonthOfYear();
        int int31 = dateTime20.getDayOfWeek();
        int int32 = dateTime20.getYear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0628");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.ReadablePartial readablePartial4 = null;
        org.joda.time.DateTime dateTime5 = dateTime2.withFields(readablePartial4);
        org.joda.time.DateMidnight dateMidnight6 = dateTime5.toDateMidnight();
        boolean boolean8 = dateTime5.isAfter(0L);
        org.joda.time.DateTime.Property property9 = dateTime5.dayOfMonth();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime5", (instant1.compareTo(dateTime5) == 0) == instant1.equals(dateTime5));
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0629");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.LocalDate localDate14 = dateTime2.toLocalDate();
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTime.Property property18 = dateTime17.era();
        org.joda.time.DateTime dateTime19 = dateTime17.withTimeAtStartOfDay();
        org.joda.time.Instant instant20 = dateTime17.toInstant();
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant20);
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime24 = instant23.toDateTime();
        org.joda.time.DateTime.Property property25 = dateTime24.era();
        org.joda.time.DateTime dateTime26 = property25.withMinimumValue();
        int int27 = property25.getMaximumValueOverall();
        java.util.Locale locale28 = java.util.Locale.ENGLISH;
        java.lang.String str29 = locale28.getScript();
        java.lang.String str30 = locale28.getDisplayCountry();
        int int31 = property25.getMaximumShortTextLength(locale28);
        org.joda.time.DateTime dateTime32 = property25.withMaximumValue();
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType34 = periodType33.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) dateTime32, periodType33);
        org.joda.time.DateTime.Property property36 = dateTime32.secondOfMinute();
        java.lang.String str37 = dateTime32.toString();
        org.joda.time.DateTime.Property property38 = dateTime32.weekOfWeekyear();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.DateTime dateTime40 = new org.joda.time.DateTime(chronology39);
        org.joda.time.DateTime.Property property41 = dateTime40.yearOfEra();
        org.joda.time.Interval interval42 = property41.toInterval();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.DateTime dateTime44 = new org.joda.time.DateTime(chronology43);
        org.joda.time.DateTime.Property property45 = dateTime44.yearOfEra();
        org.joda.time.Interval interval46 = property45.toInterval();
        boolean boolean47 = interval42.contains((org.joda.time.ReadableInterval) interval46);
        org.joda.time.Chronology chronology48 = interval46.getChronology();
        org.joda.time.DurationField durationField49 = chronology48.weeks();
        org.joda.time.DateTime dateTime50 = new org.joda.time.DateTime(chronology48);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes54 = minutes52.minus((int) (short) -1);
        boolean boolean55 = minutes51.isGreaterThan(minutes52);
        org.joda.time.Minutes minutes56 = null;
        org.joda.time.Minutes minutes57 = minutes52.minus(minutes56);
        int int58 = minutes52.getMinutes();
        org.joda.time.DateTime dateTime60 = dateTime50.withPeriodAdded((org.joda.time.ReadablePeriod) minutes52, 19);
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.DateTime dateTime62 = dateTime50.toDateTime(chronology61);
        org.joda.time.DateTimeFieldType dateTimeFieldType63 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.DateTimeField dateTimeField65 = dateTimeFieldType63.getField(chronology64);
        org.joda.time.DurationFieldType durationFieldType66 = dateTimeFieldType63.getRangeDurationType();
        org.joda.time.DateTime dateTime68 = dateTime62.withFieldAdded(durationFieldType66, (-100));
        org.joda.time.DateTime.Property property69 = dateTime62.centuryOfEra();
        long long70 = property38.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime62);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0630");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(chronology2);
        org.joda.time.Instant instant5 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime6 = instant5.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone7 = null;
        org.joda.time.DateTime dateTime8 = dateTime6.withZoneRetainFields(dateTimeZone7);
        org.joda.time.Instant instant10 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime11 = instant10.toDateTime();
        org.joda.time.DateTime.Property property12 = dateTime11.era();
        org.joda.time.DateTime dateTime13 = dateTime11.withTimeAtStartOfDay();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration16, readableInstant17, periodType18);
        mutablePeriod19.setMonths((int) '4');
        org.joda.time.DateTime dateTime22 = dateTime11.plus((org.joda.time.ReadablePeriod) mutablePeriod19);
        org.joda.time.DateTime dateTime24 = dateTime11.minusWeeks((int) (byte) 1);
        int int25 = dateTime8.compareTo((org.joda.time.ReadableInstant) dateTime11);
        org.joda.time.DateTime.Property property26 = dateTime11.minuteOfHour();
        org.joda.time.DateTime dateTime28 = dateTime11.withYear(1969);
        org.joda.time.Chronology chronology29 = dateTime28.getChronology();
        org.joda.time.DateTimeField dateTimeField30 = chronology29.dayOfMonth();
        org.joda.time.DurationField durationField31 = chronology29.minutes();
        org.joda.time.DateTime dateTime32 = dateTime3.toDateTime(chronology29);
        org.joda.time.DateTimeField dateTimeField33 = chronology29.hourOfHalfday();
        org.joda.time.Period period34 = new org.joda.time.Period(1L, periodType1, chronology29);
        org.joda.time.PeriodType periodType35 = periodType1.withWeeksRemoved();
        org.joda.time.Instant instant37 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant39 = instant37.minus(100L);
        java.lang.String str40 = instant39.toString();
        org.joda.time.Duration duration43 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period44 = duration43.toPeriod();
        org.joda.time.Duration duration46 = duration43.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = duration43.toPeriodTo(readableInstant47);
        org.joda.time.Duration duration50 = duration43.withMillis((long) (short) 0);
        org.joda.time.Instant instant51 = instant39.plus((org.joda.time.ReadableDuration) duration43);
        org.joda.time.DateTimeFieldType dateTimeFieldType52 = org.joda.time.DateTimeFieldType.yearOfEra();
        boolean boolean53 = instant39.isSupported(dateTimeFieldType52);
        org.joda.time.DurationFieldType durationFieldType54 = dateTimeFieldType52.getDurationType();
        int int55 = periodType1.indexOf(durationFieldType54);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant5 and dateTime6", (instant5.compareTo(dateTime6) == 0) == instant5.equals(dateTime6));
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0631");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        org.joda.time.DateTime.Property property21 = dateTime20.era();
        org.joda.time.DateTime dateTime22 = dateTime20.withTimeAtStartOfDay();
        org.joda.time.Instant instant23 = dateTime20.toInstant();
        org.joda.time.DateTime dateTime25 = dateTime20.withMillis((long) '4');
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableInstant) dateTime20);
        int int27 = dateTime20.getYear();
        org.joda.time.DateTime.Property property28 = dateTime20.dayOfWeek();
        long long29 = property28.remainder();
        org.joda.time.DateTime dateTime30 = property28.withMinimumValue();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0632");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(432000000L);
        java.lang.String str2 = duration1.toString();
        org.joda.time.Instant instant4 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime5 = instant4.toDateTime();
        org.joda.time.DateTime.Property property6 = dateTime5.era();
        org.joda.time.DateTime dateTime7 = dateTime5.withTimeAtStartOfDay();
        org.joda.time.Duration duration10 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, readableInstant11, periodType12);
        mutablePeriod13.setMonths((int) '4');
        org.joda.time.DateTime dateTime16 = dateTime5.plus((org.joda.time.ReadablePeriod) mutablePeriod13);
        java.lang.Object obj17 = null;
        org.joda.time.Instant instant18 = new org.joda.time.Instant(obj17);
        org.joda.time.DateTimeZone dateTimeZone19 = instant18.getZone();
        java.lang.String str20 = dateTimeZone19.toString();
        int int22 = dateTimeZone19.getOffset(1L);
        boolean boolean24 = dateTimeZone19.isStandardOffset(0L);
        org.joda.time.DateTime dateTime25 = dateTime5.withZoneRetainFields(dateTimeZone19);
        org.joda.time.DateTime dateTime27 = dateTime25.plusYears(1969);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType32, chronology33);
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(1L, (long) 10, periodType32, chronology35);
        org.joda.time.PeriodType periodType37 = periodType32.withDaysRemoved();
        org.joda.time.Period period38 = duration1.toPeriodTo((org.joda.time.ReadableInstant) dateTime27, periodType32);
        org.joda.time.Period period39 = duration1.toPeriod();
        org.joda.time.Duration duration42 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period43 = duration42.toPeriod();
        org.joda.time.Duration duration45 = duration42.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = duration42.toPeriodTo(readableInstant46);
        org.joda.time.Duration duration49 = duration42.minus(43200000L);
        org.joda.time.Duration duration50 = duration1.minus((org.joda.time.ReadableDuration) duration42);
        org.joda.time.Duration duration53 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period54 = duration53.toPeriod();
        org.joda.time.Duration duration56 = duration53.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = duration53.toPeriodTo(readableInstant57);
        org.joda.time.Duration duration60 = duration53.withMillis((long) (short) 0);
        org.joda.time.Duration duration63 = duration53.withDurationAdded((long) 1, (int) ' ');
        org.joda.time.Duration duration65 = duration53.withMillis((-115706879999998030L));
        boolean boolean66 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration53);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant4 and dateTime5", (instant4.compareTo(dateTime5) == 0) == instant4.equals(dateTime5));
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0633");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant3 = instant1.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime4 = instant1.toMutableDateTimeISO();
        java.lang.Object obj5 = null;
        org.joda.time.Instant instant6 = new org.joda.time.Instant(obj5);
        boolean boolean7 = mutableDateTime4.isAfter((org.joda.time.ReadableInstant) instant6);
        org.joda.time.Instant instant8 = instant6.toInstant();
        org.joda.time.Duration duration11 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds12 = duration11.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration13 = null;
        boolean boolean14 = duration11.isEqual(readableDuration13);
        org.joda.time.Duration duration16 = duration11.minus((long) 1);
        org.joda.time.Duration duration18 = duration16.minus((long) '4');
        org.joda.time.Duration duration21 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration21.toPeriod(chronology22);
        boolean boolean24 = duration16.isEqual((org.joda.time.ReadableDuration) duration21);
        org.joda.time.Instant instant25 = instant8.minus((org.joda.time.ReadableDuration) duration16);
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((long) 11, periodType27);
        org.joda.time.Duration duration31 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period32 = duration31.toPeriod();
        org.joda.time.Duration duration34 = duration31.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = duration31.toPeriodTo(readableInstant35);
        org.joda.time.Duration duration38 = duration31.withMillis((long) (short) 0);
        org.joda.time.Duration duration41 = duration31.withDurationAdded((long) 1, (int) ' ');
        org.joda.time.Chronology chronology42 = null;
        mutablePeriod28.setPeriod((org.joda.time.ReadableDuration) duration31, chronology42);
        org.joda.time.Instant instant44 = instant8.minus((org.joda.time.ReadableDuration) duration31);
        long long45 = duration31.getStandardDays();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and mutableDateTime4", (instant1.compareTo(mutableDateTime4) == 0) == instant1.equals(mutableDateTime4));
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0634");
        org.joda.time.Period period4 = new org.joda.time.Period(69, (int) (byte) 1, 7, (int) 'x');
        org.joda.time.Period period6 = period4.plusMinutes(2);
        org.joda.time.Instant instant9 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime10 = instant9.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone11 = null;
        org.joda.time.DateTime dateTime12 = dateTime10.withZoneRetainFields(dateTimeZone11);
        org.joda.time.Instant instant14 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant14.toDateTime();
        org.joda.time.DateTime.Property property16 = dateTime15.era();
        org.joda.time.DateTime dateTime17 = dateTime15.withTimeAtStartOfDay();
        org.joda.time.Duration duration20 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration20, readableInstant21, periodType22);
        mutablePeriod23.setMonths((int) '4');
        org.joda.time.DateTime dateTime26 = dateTime15.plus((org.joda.time.ReadablePeriod) mutablePeriod23);
        org.joda.time.DateTime dateTime28 = dateTime15.minusWeeks((int) (byte) 1);
        int int29 = dateTime12.compareTo((org.joda.time.ReadableInstant) dateTime15);
        org.joda.time.DateTime.Property property30 = dateTime15.minuteOfHour();
        org.joda.time.DateTime dateTime32 = dateTime15.withYear(1969);
        org.joda.time.Chronology chronology33 = dateTime32.getChronology();
        org.joda.time.DateTimeField dateTimeField34 = chronology33.year();
        org.joda.time.DateTimeField dateTimeField35 = chronology33.era();
        org.joda.time.Period period36 = new org.joda.time.Period((long) 1970, chronology33);
        org.joda.time.DateTime dateTime37 = org.joda.time.DateTime.now(chronology33);
        org.joda.time.Duration duration38 = period6.toDurationFrom((org.joda.time.ReadableInstant) dateTime37);
        int int39 = period6.getHours();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime10", (instant9.compareTo(dateTime10) == 0) == instant9.equals(dateTime10));
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0635");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = property3.withMinimumValue();
        int int5 = property3.getMaximumValueOverall();
        java.util.Locale locale6 = java.util.Locale.ENGLISH;
        java.lang.String str7 = locale6.getScript();
        java.lang.String str8 = locale6.getDisplayCountry();
        int int9 = property3.getMaximumShortTextLength(locale6);
        org.joda.time.DateTime dateTime10 = property3.withMaximumValue();
        java.util.Locale locale11 = java.util.Locale.ENGLISH;
        java.util.Set<java.lang.Character> charSet12 = locale11.getExtensionKeys();
        boolean boolean13 = property3.equals((java.lang.Object) charSet12);
        org.joda.time.Instant instant15 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime16 = instant15.toDateTime();
        boolean boolean18 = dateTime16.isEqual(10L);
        org.joda.time.DateTime dateTime20 = dateTime16.withWeekOfWeekyear(8);
        org.joda.time.Duration duration23 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period24 = duration23.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray25 = period24.getFieldTypes();
        org.joda.time.Period period27 = period24.minusYears((int) (byte) 1);
        org.joda.time.Period period29 = period24.plusMonths((int) (byte) 0);
        org.joda.time.Period period31 = period24.withMillis((int) '#');
        org.joda.time.Period period33 = period31.minusMinutes((int) 'u');
        org.joda.time.DateTime dateTime34 = dateTime20.minus((org.joda.time.ReadablePeriod) period33);
        boolean boolean35 = property3.equals((java.lang.Object) dateTime34);
        org.joda.time.DateTime.Property property36 = dateTime34.secondOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0636");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.DateTime.Property property5 = dateTime4.weekOfWeekyear();
        org.joda.time.Duration duration8 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration8, readableInstant9, periodType10);
        org.joda.time.DateTime dateTime12 = dateTime4.plus((org.joda.time.ReadableDuration) duration8);
        org.joda.time.DateTime dateTime14 = dateTime4.withYearOfEra(9);
        org.joda.time.ReadableInstant readableInstant15 = null;
        boolean boolean16 = dateTime14.isEqual(readableInstant15);
        org.joda.time.DateTime dateTime18 = dateTime14.minusYears(99);
        org.joda.time.Duration duration21 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration21, readableInstant22, periodType23);
        java.lang.String str25 = duration21.toString();
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime14, (org.joda.time.ReadableDuration) duration21);
        int int27 = mutablePeriod26.getWeeks();
        int int28 = mutablePeriod26.getDays();
        int int29 = mutablePeriod26.getMinutes();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0637");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZone(dateTimeZone3);
        org.joda.time.DateTime dateTime6 = dateTime4.minusSeconds(999);
        org.joda.time.DateTime dateTime8 = dateTime4.minusMinutes(169);
        org.joda.time.DateTime.Property property9 = dateTime4.dayOfMonth();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime4", (instant1.compareTo(dateTime4) == 0) == instant1.equals(dateTime4));
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0638");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZone(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean11 = dateTime7.isSupported(dateTimeFieldType10);
        org.joda.time.DateTime.Property property12 = dateTime2.property(dateTimeFieldType10);
        java.lang.String str13 = property12.getAsShortText();
        org.joda.time.DateTimeFieldType dateTimeFieldType14 = property12.getFieldType();
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTime.Property property18 = dateTime17.era();
        org.joda.time.DateTime dateTime19 = dateTime17.withTimeAtStartOfDay();
        org.joda.time.Duration duration22 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, readableInstant23, periodType24);
        mutablePeriod25.setMonths((int) '4');
        org.joda.time.DateTime dateTime28 = dateTime17.plus((org.joda.time.ReadablePeriod) mutablePeriod25);
        java.lang.Object obj29 = null;
        org.joda.time.Instant instant30 = new org.joda.time.Instant(obj29);
        org.joda.time.DateTimeZone dateTimeZone31 = instant30.getZone();
        java.lang.String str32 = dateTimeZone31.toString();
        int int34 = dateTimeZone31.getOffset(1L);
        boolean boolean36 = dateTimeZone31.isStandardOffset(0L);
        org.joda.time.DateTime dateTime37 = dateTime17.withZoneRetainFields(dateTimeZone31);
        org.joda.time.Instant instant38 = dateTime37.toInstant();
        org.joda.time.DateTime dateTime40 = dateTime37.withCenturyOfEra((int) (byte) 1);
        boolean boolean41 = property12.equals((java.lang.Object) dateTime37);
        org.joda.time.DateTime dateTime43 = property12.addToCopy(0);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime43", (instant1.compareTo(dateTime43) == 0) == instant1.equals(dateTime43));
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0639");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant3 = instant1.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime4 = instant1.toMutableDateTimeISO();
        java.lang.Object obj5 = null;
        org.joda.time.Instant instant6 = new org.joda.time.Instant(obj5);
        boolean boolean7 = mutableDateTime4.isAfter((org.joda.time.ReadableInstant) instant6);
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period11 = duration10.toPeriod();
        org.joda.time.Duration duration13 = duration10.plus((long) (byte) 0);
        org.joda.time.Instant instant14 = instant6.minus((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Chronology chronology15 = instant6.getChronology();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and mutableDateTime4", (instant1.compareTo(mutableDateTime4) == 0) == instant1.equals(mutableDateTime4));
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0640");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.DateTime dateTime29 = dateTime25.withCenturyOfEra((int) (byte) 1);
        boolean boolean30 = dateTime7.isAfter((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.DateTime dateTime31 = dateTime25.withEarlierOffsetAtOverlap();
        org.joda.time.Instant instant33 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime34 = instant33.toDateTime();
        org.joda.time.DateTime.Property property35 = dateTime34.era();
        org.joda.time.DateTime dateTime36 = dateTime34.withTimeAtStartOfDay();
        org.joda.time.Instant instant37 = dateTime34.toInstant();
        org.joda.time.DateMidnight dateMidnight38 = dateTime34.toDateMidnight();
        int int39 = dateTime34.getEra();
        org.joda.time.Chronology chronology40 = dateTime34.getChronology();
        org.joda.time.DateTime.Property property41 = dateTime34.dayOfMonth();
        boolean boolean43 = dateTime34.isEqual(31536000000L);
        int int44 = dateTime31.compareTo((org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.DateTime.Property property45 = dateTime31.era();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0641");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        boolean boolean26 = dateTime24.isAfter((long) (short) -1);
        int int27 = dateTime24.getWeekyear();
        org.joda.time.DateTime dateTime28 = dateTime24.withEarlierOffsetAtOverlap();
        org.joda.time.DateTimeZone dateTimeZone29 = dateTime28.getZone();
        org.joda.time.DateTime dateTime31 = dateTime28.minusMonths((int) ' ');
        java.util.Date date32 = dateTime31.toDate();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0642");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.Interval interval7 = property6.toInterval();
        boolean boolean8 = interval3.contains((org.joda.time.ReadableInterval) interval7);
        java.lang.String str9 = interval3.toString();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval3);
        org.joda.time.PeriodType periodType11 = weeks10.getPeriodType();
        org.joda.time.Weeks weeks13 = weeks10.plus(0);
        org.joda.time.Duration duration14 = weeks10.toStandardDuration();
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant18 = instant16.minus(100L);
        java.lang.String str19 = instant18.toString();
        org.joda.time.Duration duration22 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period23 = duration22.toPeriod();
        org.joda.time.Duration duration25 = duration22.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = duration22.toPeriodTo(readableInstant26);
        org.joda.time.Duration duration29 = duration22.withMillis((long) (short) 0);
        org.joda.time.Instant instant30 = instant18.plus((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime33 = instant32.toDateTime();
        org.joda.time.DateTime.Property property34 = dateTime33.era();
        org.joda.time.DateTime dateTime35 = dateTime33.withTimeAtStartOfDay();
        org.joda.time.Duration duration38 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration38, readableInstant39, periodType40);
        mutablePeriod41.setMonths((int) '4');
        org.joda.time.DateTime dateTime44 = dateTime33.plus((org.joda.time.ReadablePeriod) mutablePeriod41);
        org.joda.time.Instant instant46 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant47 = instant46.toInstant();
        boolean boolean48 = dateTime33.isEqual((org.joda.time.ReadableInstant) instant47);
        boolean boolean49 = instant30.isAfter((org.joda.time.ReadableInstant) instant47);
        long long50 = instant30.getMillis();
        org.joda.time.Period period51 = duration14.toPeriodFrom((org.joda.time.ReadableInstant) instant30);
        org.joda.time.Instant instant53 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime54 = instant53.toDateTime();
        boolean boolean56 = dateTime54.isEqual(10L);
        org.joda.time.DateTime dateTime58 = dateTime54.withCenturyOfEra((int) (byte) 1);
        org.joda.time.Instant instant60 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime61 = instant60.toDateTime();
        boolean boolean63 = dateTime61.isEqual(10L);
        org.joda.time.DateTime dateTime65 = dateTime61.withCenturyOfEra((int) (byte) 1);
        org.joda.time.DateTimeFieldType dateTimeFieldType66 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.DateTimeField dateTimeField68 = dateTimeFieldType66.getField(chronology67);
        long long71 = dateTimeField68.add(0L, (long) (short) 1);
        long long74 = dateTimeField68.add(1L, (-1));
        int int75 = dateTime61.get(dateTimeField68);
        boolean boolean76 = dateTime58.isAfter((org.joda.time.ReadableInstant) dateTime61);
        org.joda.time.DateTimeFieldType dateTimeFieldType77 = org.joda.time.DateTimeFieldType.minuteOfHour();
        boolean boolean78 = dateTime61.isSupported(dateTimeFieldType77);
        org.joda.time.DateTime dateTime80 = dateTime61.minusMonths(321);
        org.joda.time.PeriodType periodType81 = org.joda.time.PeriodType.yearWeekDayTime();
        org.joda.time.PeriodType periodType82 = periodType81.withDaysRemoved();
        org.joda.time.PeriodType periodType83 = periodType82.withYearsRemoved();
        org.joda.time.Period period84 = duration14.toPeriodTo((org.joda.time.ReadableInstant) dateTime61, periodType83);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant16 and dateTime33", (instant16.compareTo(dateTime33) == 0) == instant16.equals(dateTime33));
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0643");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        java.util.Locale locale6 = new java.util.Locale("+00:00");
        boolean boolean7 = dateTime2.equals((java.lang.Object) "+00:00");
        org.joda.time.Instant instant9 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime10 = instant9.toDateTime();
        org.joda.time.DateTime.Property property11 = dateTime10.era();
        org.joda.time.DateTime dateTime12 = dateTime10.withTimeAtStartOfDay();
        org.joda.time.Duration duration15 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration15, readableInstant16, periodType17);
        mutablePeriod18.setMonths((int) '4');
        org.joda.time.DateTime dateTime21 = dateTime10.plus((org.joda.time.ReadablePeriod) mutablePeriod18);
        org.joda.time.DateTime dateTime23 = dateTime10.withMillisOfDay(4);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType28, chronology29);
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((-1L), (long) 100, periodType28);
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) dateTime10, periodType28);
        org.joda.time.PeriodType periodType33 = periodType28.withYearsRemoved();
        java.lang.String str34 = periodType33.getName();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0644");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant3, periodType4);
        mutablePeriod5.setMonths((int) '4');
        org.joda.time.Period period8 = mutablePeriod5.toPeriod();
        mutablePeriod5.setYears((int) (short) -1);
        org.joda.time.Duration duration13 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period14 = duration13.toPeriod();
        org.joda.time.Duration duration16 = duration13.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = duration13.toPeriodTo(readableInstant17);
        org.joda.time.Days days19 = duration13.toStandardDays();
        boolean boolean20 = mutablePeriod5.equals((java.lang.Object) days19);
        mutablePeriod5.addMonths(3);
        org.joda.time.MutablePeriod mutablePeriod23 = mutablePeriod5.copy();
        int int24 = mutablePeriod23.getHours();
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) (short) 10, periodType26);
        org.joda.time.Instant instant29 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant30 = instant29.toInstant();
        org.joda.time.DateTime dateTime31 = instant30.toDateTimeISO();
        org.joda.time.Duration duration32 = period27.toDurationFrom((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Period period34 = period27.plusMonths(1969);
        org.joda.time.Period period36 = period34.withMinutes(2);
        org.joda.time.Duration duration39 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.PeriodType periodType41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration39, readableInstant40, periodType41);
        org.joda.time.Days days43 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType44 = org.joda.time.DurationFieldType.minutes();
        int int45 = days43.get(durationFieldType44);
        mutablePeriod42.add(durationFieldType44, 8);
        java.lang.String str48 = durationFieldType44.toString();
        boolean boolean49 = period34.isSupported(durationFieldType44);
        mutablePeriod23.add(durationFieldType44, 12);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant29 and dateTime31", (instant29.compareTo(dateTime31) == 0) == instant29.equals(dateTime31));
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0645");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime dateTime22 = dateTime4.toDateTimeISO();
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant26 = instant24.minus(100L);
        java.lang.String str27 = instant26.toString();
        org.joda.time.Duration duration30 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period31 = duration30.toPeriod();
        org.joda.time.Duration duration33 = duration30.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = duration30.toPeriodTo(readableInstant34);
        org.joda.time.Duration duration37 = duration30.withMillis((long) (short) 0);
        org.joda.time.Instant instant38 = instant26.plus((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) instant26);
        org.joda.time.DateTime dateTime41 = dateTime22.withWeekOfWeekyear(7);
        org.joda.time.DateTime dateTime42 = dateTime41.toDateTimeISO();
        org.joda.time.DateTime dateTime45 = dateTime41.withDurationAdded(120L, (int) '#');
        int int46 = dateTime41.getSecondOfMinute();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0646");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.DateTime dateTime29 = dateTime25.withCenturyOfEra((int) (byte) 1);
        boolean boolean30 = dateTime7.isAfter((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime33 = instant32.toDateTime();
        org.joda.time.DateTime.Property property34 = dateTime33.era();
        org.joda.time.DateTime dateTime35 = dateTime33.withTimeAtStartOfDay();
        org.joda.time.Duration duration38 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration38, readableInstant39, periodType40);
        mutablePeriod41.setMonths((int) '4');
        org.joda.time.DateTime dateTime44 = dateTime33.plus((org.joda.time.ReadablePeriod) mutablePeriod41);
        org.joda.time.DateTime dateTime46 = dateTime33.minusWeeks((int) (byte) 1);
        long long47 = dateTime33.getMillis();
        org.joda.time.DurationFieldType durationFieldType48 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant50 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime51 = instant50.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone52 = null;
        org.joda.time.DateTime dateTime53 = dateTime51.withZoneRetainFields(dateTimeZone52);
        org.joda.time.Instant instant55 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime56 = instant55.toDateTime();
        org.joda.time.DateTime.Property property57 = dateTime56.era();
        org.joda.time.DateTime dateTime58 = dateTime56.withTimeAtStartOfDay();
        org.joda.time.Duration duration61 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.PeriodType periodType63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration61, readableInstant62, periodType63);
        mutablePeriod64.setMonths((int) '4');
        org.joda.time.DateTime dateTime67 = dateTime56.plus((org.joda.time.ReadablePeriod) mutablePeriod64);
        org.joda.time.DateTime dateTime69 = dateTime56.minusWeeks((int) (byte) 1);
        int int70 = dateTime53.compareTo((org.joda.time.ReadableInstant) dateTime56);
        org.joda.time.DateTime.Property property71 = dateTime56.minuteOfHour();
        org.joda.time.DateTime dateTime73 = dateTime56.withYear(1969);
        org.joda.time.Chronology chronology74 = dateTime73.getChronology();
        org.joda.time.DurationField durationField75 = durationFieldType48.getField(chronology74);
        org.joda.time.DateTime dateTime76 = dateTime33.toDateTime(chronology74);
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.weeksBetween((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.DateTime.Property property78 = dateTime25.dayOfWeek();
        int int79 = property78.getMinimumValue();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0647");
        org.joda.time.Period period4 = new org.joda.time.Period(69, (int) (byte) 1, 7, (int) 'x');
        org.joda.time.Period period6 = period4.plusMinutes(2);
        org.joda.time.Instant instant9 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime10 = instant9.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone11 = null;
        org.joda.time.DateTime dateTime12 = dateTime10.withZoneRetainFields(dateTimeZone11);
        org.joda.time.Instant instant14 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant14.toDateTime();
        org.joda.time.DateTime.Property property16 = dateTime15.era();
        org.joda.time.DateTime dateTime17 = dateTime15.withTimeAtStartOfDay();
        org.joda.time.Duration duration20 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration20, readableInstant21, periodType22);
        mutablePeriod23.setMonths((int) '4');
        org.joda.time.DateTime dateTime26 = dateTime15.plus((org.joda.time.ReadablePeriod) mutablePeriod23);
        org.joda.time.DateTime dateTime28 = dateTime15.minusWeeks((int) (byte) 1);
        int int29 = dateTime12.compareTo((org.joda.time.ReadableInstant) dateTime15);
        org.joda.time.DateTime.Property property30 = dateTime15.minuteOfHour();
        org.joda.time.DateTime dateTime32 = dateTime15.withYear(1969);
        org.joda.time.Chronology chronology33 = dateTime32.getChronology();
        org.joda.time.DateTimeField dateTimeField34 = chronology33.year();
        org.joda.time.DateTimeField dateTimeField35 = chronology33.era();
        org.joda.time.Period period36 = new org.joda.time.Period((long) 1970, chronology33);
        org.joda.time.DateTime dateTime37 = org.joda.time.DateTime.now(chronology33);
        org.joda.time.Duration duration38 = period6.toDurationFrom((org.joda.time.ReadableInstant) dateTime37);
        org.joda.time.Instant instant40 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime41 = instant40.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone42 = null;
        org.joda.time.DateTime dateTime43 = dateTime41.withZoneRetainFields(dateTimeZone42);
        org.joda.time.DateTime.Property property44 = dateTime43.weekOfWeekyear();
        org.joda.time.Instant instant46 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant48 = instant46.minus(100L);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime43, (org.joda.time.ReadableInstant) instant46);
        org.joda.time.DateTimeZone dateTimeZone50 = dateTime43.getZone();
        java.lang.Object obj51 = null;
        org.joda.time.Instant instant52 = new org.joda.time.Instant(obj51);
        org.joda.time.DateTimeZone dateTimeZone53 = instant52.getZone();
        java.lang.String str54 = dateTimeZone53.toString();
        java.lang.String str56 = dateTimeZone53.getName((long) 10);
        java.lang.String str58 = dateTimeZone53.getName((long) 8);
        long long60 = dateTimeZone50.getMillisKeepLocal(dateTimeZone53, 10L);
        org.joda.time.DateTime dateTime61 = dateTime37.withZone(dateTimeZone50);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime10", (instant9.compareTo(dateTime10) == 0) == instant9.equals(dateTime10));
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0648");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.DateTime.Property property5 = dateTime4.weekOfWeekyear();
        org.joda.time.Duration duration8 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration8, readableInstant9, periodType10);
        org.joda.time.DateTime dateTime12 = dateTime4.plus((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration15 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds16 = duration15.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration17 = null;
        boolean boolean18 = duration15.isEqual(readableDuration17);
        org.joda.time.Duration duration20 = duration15.minus((long) 1);
        org.joda.time.Duration duration22 = duration20.minus((long) '4');
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        org.joda.time.DateTime.Property property26 = dateTime25.era();
        org.joda.time.Duration duration29 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration32 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Duration duration35 = duration32.plus((long) (byte) 0);
        org.joda.time.Instant instant37 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime38 = instant37.toDateTime();
        boolean boolean40 = dateTime38.isEqual(10L);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType43, chronology44);
        org.joda.time.PeriodType periodType46 = periodType43.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration35, (org.joda.time.ReadableInstant) dateTime38, periodType46);
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableDuration) duration29, periodType46);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period50 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, (org.joda.time.ReadableInstant) dateTime25, periodType49);
        org.joda.time.TimeOfDay timeOfDay51 = dateTime25.toTimeOfDay();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.DateTime dateTime53 = timeOfDay51.toDateTime(readableInstant52);
        org.joda.time.Instant instant55 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant57 = instant55.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime58 = instant55.toMutableDateTimeISO();
        org.joda.time.DateTime dateTime59 = timeOfDay51.toDateTime((org.joda.time.ReadableInstant) instant55);
        org.joda.time.Instant instant60 = instant55.toInstant();
        boolean boolean61 = dateTime12.isBefore((org.joda.time.ReadableInstant) instant55);
        org.joda.time.DateTime dateTime63 = dateTime12.minusDays((int) 'x');
        org.joda.time.DateTime dateTime65 = dateTime63.withYear(0);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0649");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DurationField durationField26 = chronology25.halfdays();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.halfdayOfDay();
        java.util.Locale locale28 = java.util.Locale.ITALY;
        java.util.Locale locale32 = new java.util.Locale("", "hi!", "hi!");
        java.lang.String str33 = locale28.getDisplayCountry(locale32);
        java.lang.String str34 = locale32.getDisplayVariant();
        java.lang.String str35 = locale32.getISO3Language();
        int int36 = dateTimeField27.getMaximumShortTextLength(locale32);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0650");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.DateTime dateTime6 = dateTime2.withWeekOfWeekyear(8);
        org.joda.time.DateTime dateTime8 = dateTime2.plusDays(100);
        org.joda.time.LocalTime localTime9 = dateTime2.toLocalTime();
        java.lang.Object obj10 = null;
        org.joda.time.Instant instant11 = new org.joda.time.Instant(obj10);
        org.joda.time.DateTimeZone dateTimeZone12 = instant11.getZone();
        java.lang.String str13 = dateTimeZone12.toString();
        java.lang.String str15 = dateTimeZone12.getName((long) 10);
        java.lang.String str17 = dateTimeZone12.getName((long) 8);
        long long21 = dateTimeZone12.convertLocalToUTC((long) 59, true, 141022L);
        boolean boolean22 = localTime9.equals((java.lang.Object) dateTimeZone12);
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = org.joda.time.DateTimeFieldType.secondOfDay();
        boolean boolean24 = localTime9.isSupported(dateTimeFieldType23);
        org.joda.time.Chronology chronology25 = localTime9.getChronology();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0651");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        org.joda.time.DateTime.Property property21 = dateTime20.era();
        org.joda.time.DateTime dateTime22 = dateTime20.withTimeAtStartOfDay();
        org.joda.time.Instant instant23 = dateTime20.toInstant();
        org.joda.time.DateTime dateTime25 = dateTime20.withMillis((long) '4');
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.Instant instant28 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime29 = instant28.toDateTime();
        org.joda.time.TimeOfDay timeOfDay30 = dateTime29.toTimeOfDay();
        org.joda.time.DateTime dateTime31 = dateTime20.withFields((org.joda.time.ReadablePartial) timeOfDay30);
        org.joda.time.DateTime.Property property32 = dateTime31.millisOfSecond();
        org.joda.time.DateTimeFieldType dateTimeFieldType33 = property32.getFieldType();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0652");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (short) 10, chronology1);
        org.joda.time.Period period4 = period2.minusYears((int) (byte) 100);
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds8 = duration7.toStandardSeconds();
        org.joda.time.Instant instant10 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant12 = instant10.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime13 = instant10.toMutableDateTimeISO();
        org.joda.time.Period period14 = duration7.toPeriodTo((org.joda.time.ReadableInstant) instant10);
        org.joda.time.Duration duration15 = period14.toStandardDuration();
        org.joda.time.Period period16 = period4.plus((org.joda.time.ReadablePeriod) period14);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType19, chronology20);
        org.joda.time.PeriodType periodType22 = periodType19.withWeeksRemoved();
        org.joda.time.PeriodType periodType23 = periodType19.withSecondsRemoved();
        org.joda.time.Period period24 = period16.normalizedStandard(periodType19);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant10 and mutableDateTime13", (instant10.compareTo(mutableDateTime13) == 0) == instant10.equals(mutableDateTime13));
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0653");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.Instant instant7 = instant5.withMillis((long) 1969);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType11, chronology12);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) (short) 0, periodType11, chronology14);
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((long) (short) 10, periodType17);
        org.joda.time.Instant instant20 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant21 = instant20.toInstant();
        org.joda.time.DateTime dateTime22 = instant21.toDateTimeISO();
        org.joda.time.Duration duration23 = period18.toDurationFrom((org.joda.time.ReadableInstant) dateTime22);
        org.joda.time.Duration duration26 = new org.joda.time.Duration((-1L), (long) 23);
        org.joda.time.Period period28 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period30 = period28.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Duration duration32 = period30.toDurationTo(readableInstant31);
        org.joda.time.Duration duration35 = duration32.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = duration35.toPeriodFrom(readableInstant36);
        org.joda.time.Duration duration38 = duration26.minus((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration39 = duration23.plus((org.joda.time.ReadableDuration) duration26);
        mutablePeriod15.add((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration43 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds44 = duration43.toStandardSeconds();
        org.joda.time.Instant instant46 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant48 = instant46.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime49 = instant46.toMutableDateTimeISO();
        org.joda.time.Period period50 = duration43.toPeriodTo((org.joda.time.ReadableInstant) instant46);
        org.joda.time.Instant instant52 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime53 = instant52.toDateTime();
        org.joda.time.DateTime.Property property54 = dateTime53.era();
        org.joda.time.DateTime dateTime55 = dateTime53.withTimeAtStartOfDay();
        org.joda.time.Duration duration58 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.PeriodType periodType60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration58, readableInstant59, periodType60);
        mutablePeriod61.setMonths((int) '4');
        org.joda.time.DateTime dateTime64 = dateTime53.plus((org.joda.time.ReadablePeriod) mutablePeriod61);
        org.joda.time.DateTime dateTime66 = dateTime53.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property67 = dateTime66.monthOfYear();
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType72, chronology73);
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod(1L, (long) 10, periodType72, chronology75);
        org.joda.time.PeriodType periodType77 = periodType72.withDaysRemoved();
        org.joda.time.Period period78 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, (org.joda.time.ReadableInstant) dateTime66, periodType72);
        org.joda.time.Instant instant80 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant81 = instant80.toInstant();
        org.joda.time.DateTime dateTime82 = instant81.toDateTimeISO();
        org.joda.time.Period period83 = duration43.toPeriodTo((org.joda.time.ReadableInstant) dateTime82);
        org.joda.time.Duration duration84 = duration43.toDuration();
        boolean boolean85 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration84);
        org.joda.time.PeriodType periodType88 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology89 = null;
        org.joda.time.MutablePeriod mutablePeriod90 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType88, chronology89);
        org.joda.time.PeriodType periodType91 = periodType88.withWeeksRemoved();
        org.joda.time.PeriodType periodType92 = periodType88.withSecondsRemoved();
        org.joda.time.Period period93 = new org.joda.time.Period((org.joda.time.ReadableInstant) instant7, (org.joda.time.ReadableDuration) duration84, periodType92);
        org.joda.time.Hours hours94 = period93.toStandardHours();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0654");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.TimeOfDay timeOfDay3 = dateTime2.toTimeOfDay();
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime((java.lang.Object) dateTime2);
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        org.joda.time.Duration duration13 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration13, readableInstant14, periodType15);
        boolean boolean17 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration20 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period21 = duration20.toPeriod();
        org.joda.time.Duration duration23 = duration20.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = duration20.toPeriodTo(readableInstant24);
        org.joda.time.Duration duration27 = duration20.minus(43200000L);
        org.joda.time.Duration duration29 = duration13.withDurationAdded((org.joda.time.ReadableDuration) duration20, (int) ' ');
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType31 = periodType30.withMinutesRemoved();
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableDuration) duration29, periodType31);
        org.joda.time.Period period34 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period36 = period34.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Duration duration38 = period36.toDurationTo(readableInstant37);
        org.joda.time.Duration duration41 = duration38.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = duration41.toPeriodFrom(readableInstant42);
        org.joda.time.Instant instant45 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime46 = instant45.toDateTime();
        org.joda.time.DateTime.Property property47 = dateTime46.era();
        org.joda.time.Duration duration50 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration53 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period54 = duration53.toPeriod();
        org.joda.time.Duration duration56 = duration53.plus((long) (byte) 0);
        org.joda.time.Instant instant58 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime59 = instant58.toDateTime();
        boolean boolean61 = dateTime59.isEqual(10L);
        org.joda.time.PeriodType periodType64 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType64, chronology65);
        org.joda.time.PeriodType periodType67 = periodType64.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration56, (org.joda.time.ReadableInstant) dateTime59, periodType67);
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime46, (org.joda.time.ReadableDuration) duration50, periodType67);
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.Period period71 = duration41.toPeriod(periodType67, chronology70);
        org.joda.time.Hours hours72 = org.joda.time.Hours.TWO;
        org.joda.time.DateTimeFieldType dateTimeFieldType73 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DurationFieldType durationFieldType74 = dateTimeFieldType73.getDurationType();
        boolean boolean75 = hours72.isSupported(durationFieldType74);
        boolean boolean76 = periodType67.isSupported(durationFieldType74);
        int int77 = period32.indexOf(durationFieldType74);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0655");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = property3.withMinimumValue();
        int int5 = property3.getMaximumValueOverall();
        java.util.Locale locale6 = java.util.Locale.ENGLISH;
        java.lang.String str7 = locale6.getScript();
        java.lang.String str8 = locale6.getDisplayCountry();
        int int9 = property3.getMaximumShortTextLength(locale6);
        org.joda.time.DateTime dateTime10 = property3.withMaximumValue();
        org.joda.time.LocalTime localTime11 = dateTime10.toLocalTime();
        org.joda.time.Instant instant13 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant15 = instant13.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime16 = instant13.toMutableDateTimeISO();
        java.lang.Object obj17 = null;
        org.joda.time.Instant instant18 = new org.joda.time.Instant(obj17);
        boolean boolean19 = mutableDateTime16.isAfter((org.joda.time.ReadableInstant) instant18);
        boolean boolean20 = localTime11.equals((java.lang.Object) mutableDateTime16);
        org.joda.time.Chronology chronology21 = localTime11.getChronology();
        java.lang.Object obj22 = null;
        org.joda.time.Instant instant23 = new org.joda.time.Instant(obj22);
        org.joda.time.DateTimeZone dateTimeZone24 = instant23.getZone();
        java.lang.String str25 = dateTimeZone24.toString();
        java.lang.String str27 = dateTimeZone24.getName((long) (short) -1);
        long long30 = dateTimeZone24.convertLocalToUTC((long) 12, false);
        org.joda.time.Chronology chronology31 = chronology21.withZone(dateTimeZone24);
        org.joda.time.DateTimeField dateTimeField32 = chronology21.dayOfMonth();
        long long34 = dateTimeField32.roundHalfCeiling(17536739580000L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0656");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.DateTime dateTime6 = dateTime2.withCenturyOfEra((int) (byte) 1);
        org.joda.time.DateTimeFieldType dateTimeFieldType7 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.DateTimeField dateTimeField9 = dateTimeFieldType7.getField(chronology8);
        long long12 = dateTimeField9.add(0L, (long) (short) 1);
        long long15 = dateTimeField9.add(1L, (-1));
        int int16 = dateTime2.get(dateTimeField9);
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime19 = instant18.toDateTime();
        org.joda.time.DateTime.Property property20 = dateTime19.era();
        org.joda.time.DateTime dateTime21 = dateTime19.withTimeAtStartOfDay();
        org.joda.time.Duration duration24 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration24, readableInstant25, periodType26);
        mutablePeriod27.setMonths((int) '4');
        org.joda.time.DateTime dateTime30 = dateTime19.plus((org.joda.time.ReadablePeriod) mutablePeriod27);
        org.joda.time.DateTime dateTime32 = dateTime19.minusWeeks((int) (byte) 1);
        long long33 = dateTime19.getMillis();
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime37 = instant36.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone38 = null;
        org.joda.time.DateTime dateTime39 = dateTime37.withZoneRetainFields(dateTimeZone38);
        org.joda.time.Instant instant41 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime42 = instant41.toDateTime();
        org.joda.time.DateTime.Property property43 = dateTime42.era();
        org.joda.time.DateTime dateTime44 = dateTime42.withTimeAtStartOfDay();
        org.joda.time.Duration duration47 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.PeriodType periodType49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration47, readableInstant48, periodType49);
        mutablePeriod50.setMonths((int) '4');
        org.joda.time.DateTime dateTime53 = dateTime42.plus((org.joda.time.ReadablePeriod) mutablePeriod50);
        org.joda.time.DateTime dateTime55 = dateTime42.minusWeeks((int) (byte) 1);
        int int56 = dateTime39.compareTo((org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.DateTime.Property property57 = dateTime42.minuteOfHour();
        org.joda.time.DateTime dateTime59 = dateTime42.withYear(1969);
        org.joda.time.Chronology chronology60 = dateTime59.getChronology();
        org.joda.time.DurationField durationField61 = durationFieldType34.getField(chronology60);
        org.joda.time.DateTime dateTime62 = dateTime19.toDateTime(chronology60);
        org.joda.time.DateTime dateTime63 = dateTime2.toDateTime(chronology60);
        org.joda.time.DateTimeField dateTimeField64 = chronology60.millisOfDay();
        org.joda.time.Chronology chronology65 = chronology60.withUTC();
        org.joda.time.DateTimeField dateTimeField66 = chronology60.clockhourOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0657");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant3 = instant1.minus(100L);
        org.joda.time.Instant instant5 = instant3.plus((long) 100);
        org.joda.time.Instant instant7 = instant3.withMillis((long) (byte) 1);
        org.joda.time.Period period9 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period11 = period9.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration13 = period11.toDurationTo(readableInstant12);
        org.joda.time.Duration duration16 = duration13.withDurationAdded((long) '#', 0);
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant20 = instant18.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime21 = instant18.toMutableDateTimeISO();
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period23 = duration16.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime21, periodType22);
        org.joda.time.Instant instant24 = instant7.minus((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Instant instant26 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime27 = instant26.toDateTime();
        org.joda.time.DateTime.Property property28 = dateTime27.era();
        org.joda.time.DateTime dateTime29 = dateTime27.withTimeAtStartOfDay();
        org.joda.time.Instant instant30 = dateTime27.toInstant();
        org.joda.time.DateMidnight dateMidnight31 = dateTime27.toDateMidnight();
        int int32 = dateTime27.getHourOfDay();
        org.joda.time.Days days33 = org.joda.time.Days.daysBetween((org.joda.time.ReadableInstant) instant24, (org.joda.time.ReadableInstant) dateTime27);
        org.joda.time.DateTime dateTime35 = dateTime27.withMillisOfDay(78719999);
        org.joda.time.DateTimeZone dateTimeZone36 = dateTime35.getZone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and mutableDateTime21", (instant1.compareTo(mutableDateTime21) == 0) == instant1.equals(mutableDateTime21));
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0658");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime4.minuteOfDay();
        org.joda.time.DateTime.Property property23 = dateTime4.millisOfDay();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.DateTime dateTime25 = new org.joda.time.DateTime(chronology24);
        org.joda.time.DateTime.Property property26 = dateTime25.yearOfEra();
        org.joda.time.Interval interval27 = property26.toInterval();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.DateTime dateTime29 = new org.joda.time.DateTime(chronology28);
        org.joda.time.DateTime.Property property30 = dateTime29.yearOfEra();
        org.joda.time.Interval interval31 = property30.toInterval();
        boolean boolean32 = interval27.contains((org.joda.time.ReadableInterval) interval31);
        java.lang.Object obj33 = null;
        org.joda.time.Instant instant34 = new org.joda.time.Instant(obj33);
        org.joda.time.DateTimeZone dateTimeZone35 = instant34.getZone();
        java.lang.String str36 = dateTimeZone35.toString();
        org.joda.time.DateTime dateTime37 = new org.joda.time.DateTime(dateTimeZone35);
        boolean boolean38 = interval27.contains((org.joda.time.ReadableInstant) dateTime37);
        org.joda.time.Instant instant40 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime41 = instant40.toDateTime();
        org.joda.time.DateTime.Property property42 = dateTime41.era();
        boolean boolean43 = interval27.contains((org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.MutableInterval mutableInterval44 = interval27.toMutableInterval();
        org.joda.time.Chronology chronology45 = interval27.getChronology();
        org.joda.time.DateTimeField dateTimeField46 = chronology45.era();
        org.joda.time.DateTimeField dateTimeField47 = chronology45.secondOfDay();
        org.joda.time.Instant instant49 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime50 = instant49.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone51 = null;
        org.joda.time.DateTime dateTime52 = dateTime50.withZone(dateTimeZone51);
        org.joda.time.Instant instant54 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime55 = instant54.toDateTime();
        org.joda.time.DateTime.Property property56 = dateTime55.era();
        org.joda.time.DateTime dateTime57 = dateTime55.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType58 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean59 = dateTime55.isSupported(dateTimeFieldType58);
        org.joda.time.DateTime.Property property60 = dateTime50.property(dateTimeFieldType58);
        org.joda.time.DateTimeZone dateTimeZone61 = dateTime50.getZone();
        org.joda.time.LocalDateTime localDateTime62 = dateTime50.toLocalDateTime();
        java.lang.Object obj63 = null;
        org.joda.time.Instant instant64 = new org.joda.time.Instant(obj63);
        org.joda.time.DateTimeZone dateTimeZone65 = instant64.getZone();
        java.lang.String str66 = dateTimeZone65.toString();
        org.joda.time.DateTime dateTime67 = new org.joda.time.DateTime(dateTimeZone65);
        java.util.Locale locale69 = java.util.Locale.JAPANESE;
        java.lang.String str70 = locale69.getDisplayScript();
        java.lang.String str71 = dateTimeZone65.getShortName(100L, locale69);
        java.lang.String str72 = dateTimeField47.getAsShortText((org.joda.time.ReadablePartial) localDateTime62, locale69);
        int int73 = property23.getMaximumTextLength(locale69);
        org.joda.time.DateTime dateTime74 = property23.roundFloorCopy();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime74", (instant1.compareTo(dateTime74) == 0) == instant1.equals(dateTime74));
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0659");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.format.PeriodFormatter periodFormatter4 = periodFormatter2.withParseType(periodType3);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType9, chronology10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, (long) 10, periodType9, chronology12);
        org.joda.time.PeriodType periodType14 = periodType9.withDaysRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter15 = periodFormatter4.withParseType(periodType14);
        java.util.Locale locale17 = java.util.Locale.forLanguageTag("1");
        org.joda.time.format.PeriodFormatter periodFormatter18 = periodFormatter4.withLocale(locale17);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.format.PeriodFormatter periodFormatter20 = periodFormatter4.withParseType(periodType19);
        org.joda.time.Period period23 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period25 = period23.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Duration duration27 = period25.toDurationTo(readableInstant26);
        org.joda.time.Duration duration30 = duration27.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = duration30.toPeriodFrom(readableInstant31);
        org.joda.time.Instant instant34 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime35 = instant34.toDateTime();
        org.joda.time.DateTime.Property property36 = dateTime35.era();
        org.joda.time.Duration duration39 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration42 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period43 = duration42.toPeriod();
        org.joda.time.Duration duration45 = duration42.plus((long) (byte) 0);
        org.joda.time.Instant instant47 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime48 = instant47.toDateTime();
        boolean boolean50 = dateTime48.isEqual(10L);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType53, chronology54);
        org.joda.time.PeriodType periodType56 = periodType53.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration45, (org.joda.time.ReadableInstant) dateTime48, periodType56);
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime35, (org.joda.time.ReadableDuration) duration39, periodType56);
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.Period period60 = duration30.toPeriod(periodType56, chronology59);
        org.joda.time.Hours hours61 = org.joda.time.Hours.TWO;
        org.joda.time.DateTimeFieldType dateTimeFieldType62 = org.joda.time.DateTimeFieldType.secondOfDay();
        org.joda.time.DurationFieldType durationFieldType63 = dateTimeFieldType62.getDurationType();
        boolean boolean64 = hours61.isSupported(durationFieldType63);
        boolean boolean65 = periodType56.isSupported(durationFieldType63);
        org.joda.time.Period period66 = new org.joda.time.Period((long) 7, periodType56);
        org.joda.time.format.PeriodFormatter periodFormatter67 = periodFormatter4.withParseType(periodType56);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant34 and dateTime35", (instant34.compareTo(dateTime35) == 0) == instant34.equals(dateTime35));
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0660");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant3 = instant1.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime4 = instant1.toMutableDateTimeISO();
        java.lang.Object obj5 = null;
        org.joda.time.Instant instant6 = new org.joda.time.Instant(obj5);
        boolean boolean7 = mutableDateTime4.isAfter((org.joda.time.ReadableInstant) instant6);
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period11 = duration10.toPeriod();
        org.joda.time.Duration duration13 = duration10.plus((long) (byte) 0);
        org.joda.time.Instant instant14 = instant6.minus((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTime.Property property18 = dateTime17.era();
        org.joda.time.DateTime dateTime19 = dateTime17.withTimeAtStartOfDay();
        org.joda.time.Duration duration22 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, readableInstant23, periodType24);
        mutablePeriod25.setMonths((int) '4');
        org.joda.time.DateTime dateTime28 = dateTime17.plus((org.joda.time.ReadablePeriod) mutablePeriod25);
        java.lang.Object obj29 = null;
        org.joda.time.Instant instant30 = new org.joda.time.Instant(obj29);
        org.joda.time.DateTimeZone dateTimeZone31 = instant30.getZone();
        java.lang.String str32 = dateTimeZone31.toString();
        int int34 = dateTimeZone31.getOffset(1L);
        boolean boolean36 = dateTimeZone31.isStandardOffset(0L);
        org.joda.time.DateTime dateTime37 = dateTime17.withZoneRetainFields(dateTimeZone31);
        org.joda.time.DateTime dateTime39 = dateTime37.plusYears(1969);
        org.joda.time.DateTime dateTime41 = dateTime39.minusWeeks(1439);
        org.joda.time.Instant instant43 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime44 = instant43.toDateTime();
        org.joda.time.DateTime.Property property45 = dateTime44.era();
        org.joda.time.DateTime dateTime46 = dateTime44.withTimeAtStartOfDay();
        org.joda.time.Duration duration49 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.PeriodType periodType51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration49, readableInstant50, periodType51);
        mutablePeriod52.setMonths((int) '4');
        org.joda.time.DateTime dateTime55 = dateTime44.plus((org.joda.time.ReadablePeriod) mutablePeriod52);
        org.joda.time.LocalDate localDate56 = dateTime44.toLocalDate();
        int int57 = localDate56.size();
        org.joda.time.DateTime dateTime58 = dateTime41.withFields((org.joda.time.ReadablePartial) localDate56);
        org.joda.time.DateTime dateTime59 = dateTime41.toDateTime();
        boolean boolean60 = duration13.equals((java.lang.Object) dateTime41);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and mutableDateTime4", (instant1.compareTo(mutableDateTime4) == 0) == instant1.equals(mutableDateTime4));
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0661");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = duration2.toPeriodTo(readableInstant6);
        org.joda.time.Duration duration9 = duration2.withMillis((long) (short) 0);
        org.joda.time.Duration duration12 = duration2.withDurationAdded((long) 1, (int) ' ');
        org.joda.time.Instant instant14 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant14.toDateTime();
        boolean boolean17 = dateTime15.isEqual(10L);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, (org.joda.time.ReadableInstant) dateTime15, periodType18);
        org.joda.time.DateTime dateTime21 = dateTime15.minusSeconds((int) 'a');
        int int22 = dateTime21.getMonthOfYear();
        int int23 = dateTime21.getCenturyOfEra();
        org.joda.time.DateTime.Property property24 = dateTime21.era();
        org.joda.time.Duration duration27 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period28 = duration27.toPeriod();
        org.joda.time.Duration duration30 = duration27.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = duration27.toPeriodTo(readableInstant31);
        org.joda.time.Instant instant34 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant36 = instant34.minus(100L);
        java.lang.String str37 = instant36.toString();
        org.joda.time.Duration duration40 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period41 = duration40.toPeriod();
        org.joda.time.Duration duration43 = duration40.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = duration40.toPeriodTo(readableInstant44);
        org.joda.time.Duration duration48 = duration40.withDurationAdded((long) (short) -1, (int) (byte) 100);
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType51, chronology52);
        org.joda.time.PeriodType periodType54 = periodType51.withWeeksRemoved();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration48.toPeriod(periodType54, chronology55);
        org.joda.time.Period period57 = duration27.toPeriodFrom((org.joda.time.ReadableInstant) instant36, periodType54);
        org.joda.time.Instant instant59 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime60 = instant59.toDateTime();
        org.joda.time.DateTime.Property property61 = dateTime60.era();
        org.joda.time.DateTime dateTime62 = dateTime60.withTimeAtStartOfDay();
        org.joda.time.Duration duration65 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.PeriodType periodType67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration65, readableInstant66, periodType67);
        mutablePeriod68.setMonths((int) '4');
        org.joda.time.DateTime dateTime71 = dateTime60.plus((org.joda.time.ReadablePeriod) mutablePeriod68);
        org.joda.time.DateTime dateTime73 = dateTime60.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property74 = dateTime73.monthOfYear();
        org.joda.time.DateTime.Property property75 = dateTime73.weekyear();
        org.joda.time.DateTime dateTime76 = dateTime73.toDateTime();
        org.joda.time.DateTime dateTime78 = dateTime73.plusHours((int) 'u');
        org.joda.time.Instant instant80 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime81 = instant80.toDateTime();
        org.joda.time.DateTime.Property property82 = dateTime81.era();
        org.joda.time.ReadablePartial readablePartial83 = null;
        org.joda.time.DateTime dateTime84 = dateTime81.withFields(readablePartial83);
        org.joda.time.DateTime dateTime86 = dateTime81.withYearOfEra(292278993);
        org.joda.time.Minutes minutes87 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime78, (org.joda.time.ReadableInstant) dateTime81);
        java.lang.Object obj88 = null;
        org.joda.time.Instant instant89 = new org.joda.time.Instant(obj88);
        org.joda.time.DateTimeZone dateTimeZone90 = instant89.getZone();
        java.lang.String str91 = dateTimeZone90.toString();
        int int93 = dateTimeZone90.getOffset(1L);
        org.joda.time.MutableDateTime mutableDateTime94 = dateTime81.toMutableDateTime(dateTimeZone90);
        org.joda.time.Duration duration95 = new org.joda.time.Duration((org.joda.time.ReadableInstant) instant36, (org.joda.time.ReadableInstant) mutableDateTime94);
        int int96 = property24.compareTo((org.joda.time.ReadableInstant) instant36);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant14 and dateTime15", (instant14.compareTo(dateTime15) == 0) == instant14.equals(dateTime15));
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0662");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.year();
        org.joda.time.DateTimeZone dateTimeZone29 = chronology25.getZone();
        org.joda.time.DateTime dateTime30 = org.joda.time.DateTime.now(chronology25);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0663");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        org.joda.time.DateTime.Property property21 = dateTime20.era();
        org.joda.time.DateTime dateTime22 = dateTime20.withTimeAtStartOfDay();
        org.joda.time.Instant instant23 = dateTime20.toInstant();
        org.joda.time.DateTime dateTime25 = dateTime20.withMillis((long) '4');
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.DateTime dateTime28 = dateTime20.minusMillis((-1));
        boolean boolean30 = dateTime20.isAfter((long) 8);
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant34 = instant32.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime35 = instant32.toMutableDateTimeISO();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.DateTime dateTime37 = new org.joda.time.DateTime(chronology36);
        org.joda.time.DateTime.Property property38 = dateTime37.yearOfEra();
        org.joda.time.DateTime.Property property39 = dateTime37.weekOfWeekyear();
        boolean boolean40 = mutableDateTime35.isBefore((org.joda.time.ReadableInstant) dateTime37);
        org.joda.time.DateTime.Property property41 = dateTime37.dayOfWeek();
        boolean boolean42 = property41.isLeap();
        org.joda.time.DateTime dateTime43 = property41.roundHalfCeilingCopy();
        org.joda.time.Period period45 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period47 = period45.minusMonths((int) (short) 10);
        org.joda.time.Period period49 = period47.withSeconds((int) '4');
        org.joda.time.Period period50 = period49.negated();
        org.joda.time.DateTime dateTime51 = dateTime43.minus((org.joda.time.ReadablePeriod) period50);
        org.joda.time.DateTime.Property property52 = dateTime43.hourOfDay();
        int int53 = dateTime20.compareTo((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.DateTime.Property property54 = dateTime43.yearOfCentury();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0664");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTimeField dateTimeField2 = dateTimeFieldType0.getField(chronology1);
        org.joda.time.DurationFieldType durationFieldType3 = dateTimeFieldType0.getRangeDurationType();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int13 = mutablePeriod12.getDays();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.DateTime dateTime17 = new org.joda.time.DateTime(chronology16);
        org.joda.time.DateTime.Property property18 = dateTime17.yearOfEra();
        org.joda.time.Interval interval19 = property18.toInterval();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.DateTime dateTime21 = new org.joda.time.DateTime(chronology20);
        org.joda.time.DateTime.Property property22 = dateTime21.yearOfEra();
        org.joda.time.Interval interval23 = property22.toInterval();
        boolean boolean24 = interval19.contains((org.joda.time.ReadableInterval) interval23);
        org.joda.time.Chronology chronology25 = interval23.getChronology();
        mutablePeriod12.setPeriod((long) 'u', (long) 1969, chronology25);
        org.joda.time.DateTimeField dateTimeField27 = chronology25.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.dayOfMonth();
        boolean boolean29 = durationFieldType3.isSupported(chronology25);
        org.joda.time.DurationField durationField30 = chronology25.days();
        org.joda.time.Duration duration33 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period34 = duration33.toPeriod();
        org.joda.time.Duration duration36 = duration33.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = duration33.toPeriodTo(readableInstant37);
        org.joda.time.Duration duration40 = duration33.withMillis((long) (short) 0);
        org.joda.time.Duration duration43 = duration33.withDurationAdded((long) 1, (int) ' ');
        org.joda.time.Instant instant45 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime46 = instant45.toDateTime();
        boolean boolean48 = dateTime46.isEqual(10L);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period50 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, (org.joda.time.ReadableInstant) dateTime46, periodType49);
        java.lang.Object obj51 = null;
        org.joda.time.Instant instant52 = new org.joda.time.Instant(obj51);
        org.joda.time.DateTimeZone dateTimeZone53 = instant52.getZone();
        org.joda.time.DateTime dateTime54 = dateTime46.toDateTime(dateTimeZone53);
        java.lang.String str56 = dateTimeZone53.getShortName((long) '4');
        int int58 = dateTimeZone53.getStandardOffset(43200009L);
        org.joda.time.Chronology chronology59 = chronology25.withZone(dateTimeZone53);
        java.lang.String str60 = chronology25.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime17 and instant52", (dateTime17.compareTo(instant52) == 0) == dateTime17.equals(instant52));
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0665");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        java.util.TimeZone timeZone3 = null;
        org.joda.time.DateTimeZone dateTimeZone4 = org.joda.time.DateTimeZone.forTimeZone(timeZone3);
        org.joda.time.MutableDateTime mutableDateTime5 = dateTime2.toMutableDateTime(dateTimeZone4);
        org.joda.time.Duration duration8 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration8, readableInstant9, periodType10);
        java.lang.String str12 = duration8.toString();
        org.joda.time.Instant instant14 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant16 = instant14.minus(100L);
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, (org.joda.time.ReadableInstant) instant14);
        org.joda.time.Instant instant19 = instant14.withMillis((long) 1970);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant14);
        org.joda.time.DateTime dateTime21 = dateTime2.toDateTime();
        org.joda.time.LocalDate localDate22 = dateTime2.toLocalDate();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and mutableDateTime5", (instant1.compareTo(mutableDateTime5) == 0) == instant1.equals(mutableDateTime5));
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0666");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime4 = instant3.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone5 = null;
        org.joda.time.DateTime dateTime6 = dateTime4.withZoneRetainFields(dateTimeZone5);
        org.joda.time.Instant instant8 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime9 = instant8.toDateTime();
        org.joda.time.DateTime.Property property10 = dateTime9.era();
        org.joda.time.DateTime dateTime11 = dateTime9.withTimeAtStartOfDay();
        org.joda.time.Duration duration14 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration14, readableInstant15, periodType16);
        mutablePeriod17.setMonths((int) '4');
        org.joda.time.DateTime dateTime20 = dateTime9.plus((org.joda.time.ReadablePeriod) mutablePeriod17);
        org.joda.time.DateTime dateTime22 = dateTime9.minusWeeks((int) (byte) 1);
        int int23 = dateTime6.compareTo((org.joda.time.ReadableInstant) dateTime9);
        org.joda.time.DateTime.Property property24 = dateTime9.minuteOfHour();
        org.joda.time.DateTime dateTime26 = dateTime9.withYear(1969);
        org.joda.time.Chronology chronology27 = dateTime26.getChronology();
        org.joda.time.DateTimeField dateTimeField28 = chronology27.dayOfMonth();
        org.joda.time.DurationField durationField29 = chronology27.minutes();
        org.joda.time.DateTime dateTime30 = dateTime1.toDateTime(chronology27);
        org.joda.time.DateTimeField dateTimeField31 = chronology27.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField32 = chronology27.clockhourOfHalfday();
        int int33 = dateTimeField32.getMaximumValue();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant3 and dateTime4", (instant3.compareTo(dateTime4) == 0) == instant3.equals(dateTime4));
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0667");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.DateTime.Property property5 = dateTime4.weekOfWeekyear();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType11, chronology12);
        org.joda.time.Period period14 = new org.joda.time.Period((long) 11, 0L, periodType11);
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime4, readableInstant6, periodType11);
        org.joda.time.PeriodType periodType16 = periodType11.withSecondsRemoved();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0668");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property16 = dateTime15.monthOfYear();
        org.joda.time.DateTime.Property property17 = dateTime15.weekyear();
        org.joda.time.DateMidnight dateMidnight18 = dateTime15.toDateMidnight();
        org.joda.time.DateTime dateTime20 = dateTime15.minusHours(26033472);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0669");
        org.joda.time.Duration duration3 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds4 = duration3.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration5 = null;
        boolean boolean6 = duration3.isEqual(readableDuration5);
        org.joda.time.Duration duration8 = duration3.minus((long) 1);
        org.joda.time.Duration duration10 = duration8.minus((long) '4');
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTime.Property property14 = dateTime13.era();
        org.joda.time.Duration duration17 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration20 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period21 = duration20.toPeriod();
        org.joda.time.Duration duration23 = duration20.plus((long) (byte) 0);
        org.joda.time.Instant instant25 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime26 = instant25.toDateTime();
        boolean boolean28 = dateTime26.isEqual(10L);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType31, chronology32);
        org.joda.time.PeriodType periodType34 = periodType31.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, (org.joda.time.ReadableInstant) dateTime26, periodType34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime13, (org.joda.time.ReadableDuration) duration17, periodType34);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, (org.joda.time.ReadableInstant) dateTime13, periodType37);
        org.joda.time.Duration duration40 = duration8.minus((long) 7);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int51 = mutablePeriod50.getDays();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.DateTime dateTime55 = new org.joda.time.DateTime(chronology54);
        org.joda.time.DateTime.Property property56 = dateTime55.yearOfEra();
        org.joda.time.Interval interval57 = property56.toInterval();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.DateTime dateTime59 = new org.joda.time.DateTime(chronology58);
        org.joda.time.DateTime.Property property60 = dateTime59.yearOfEra();
        org.joda.time.Interval interval61 = property60.toInterval();
        boolean boolean62 = interval57.contains((org.joda.time.ReadableInterval) interval61);
        org.joda.time.Chronology chronology63 = interval61.getChronology();
        mutablePeriod50.setPeriod((long) 'u', (long) 1969, chronology63);
        org.joda.time.Period period65 = new org.joda.time.Period((long) (byte) 100, chronology63);
        org.joda.time.Period period66 = duration40.toPeriod(chronology63);
        org.joda.time.DateTimeField dateTimeField67 = chronology63.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField68 = chronology63.monthOfYear();
        org.joda.time.DurationField durationField69 = chronology63.weeks();
        org.joda.time.DateTimeField dateTimeField70 = chronology63.dayOfYear();
        org.joda.time.DateTime dateTime71 = new org.joda.time.DateTime((long) 0, chronology63);
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.DateTime dateTime73 = new org.joda.time.DateTime(chronology72);
        org.joda.time.DateTime.Property property74 = dateTime73.yearOfEra();
        org.joda.time.Interval interval75 = property74.toInterval();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.DateTime dateTime77 = new org.joda.time.DateTime(chronology76);
        org.joda.time.DateTime.Property property78 = dateTime77.yearOfEra();
        org.joda.time.Interval interval79 = property78.toInterval();
        boolean boolean80 = interval75.contains((org.joda.time.ReadableInterval) interval79);
        org.joda.time.Chronology chronology81 = interval79.getChronology();
        org.joda.time.DurationField durationField82 = chronology81.weeks();
        org.joda.time.DateTime dateTime83 = new org.joda.time.DateTime(chronology81);
        org.joda.time.DateTimeField dateTimeField84 = chronology81.centuryOfEra();
        org.joda.time.DateTime dateTime85 = dateTime71.toDateTime(chronology81);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime13", (instant12.compareTo(dateTime13) == 0) == instant12.equals(dateTime13));
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0670");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.Instant instant7 = instant5.withMillis((long) 1969);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType11, chronology12);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) (short) 0, periodType11, chronology14);
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((long) (short) 10, periodType17);
        org.joda.time.Instant instant20 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant21 = instant20.toInstant();
        org.joda.time.DateTime dateTime22 = instant21.toDateTimeISO();
        org.joda.time.Duration duration23 = period18.toDurationFrom((org.joda.time.ReadableInstant) dateTime22);
        org.joda.time.Duration duration26 = new org.joda.time.Duration((-1L), (long) 23);
        org.joda.time.Period period28 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period30 = period28.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Duration duration32 = period30.toDurationTo(readableInstant31);
        org.joda.time.Duration duration35 = duration32.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = duration35.toPeriodFrom(readableInstant36);
        org.joda.time.Duration duration38 = duration26.minus((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration39 = duration23.plus((org.joda.time.ReadableDuration) duration26);
        mutablePeriod15.add((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration43 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds44 = duration43.toStandardSeconds();
        org.joda.time.Instant instant46 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant48 = instant46.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime49 = instant46.toMutableDateTimeISO();
        org.joda.time.Period period50 = duration43.toPeriodTo((org.joda.time.ReadableInstant) instant46);
        org.joda.time.Instant instant52 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime53 = instant52.toDateTime();
        org.joda.time.DateTime.Property property54 = dateTime53.era();
        org.joda.time.DateTime dateTime55 = dateTime53.withTimeAtStartOfDay();
        org.joda.time.Duration duration58 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.PeriodType periodType60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration58, readableInstant59, periodType60);
        mutablePeriod61.setMonths((int) '4');
        org.joda.time.DateTime dateTime64 = dateTime53.plus((org.joda.time.ReadablePeriod) mutablePeriod61);
        org.joda.time.DateTime dateTime66 = dateTime53.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property67 = dateTime66.monthOfYear();
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType72, chronology73);
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod(1L, (long) 10, periodType72, chronology75);
        org.joda.time.PeriodType periodType77 = periodType72.withDaysRemoved();
        org.joda.time.Period period78 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, (org.joda.time.ReadableInstant) dateTime66, periodType72);
        org.joda.time.Instant instant80 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant81 = instant80.toInstant();
        org.joda.time.DateTime dateTime82 = instant81.toDateTimeISO();
        org.joda.time.Period period83 = duration43.toPeriodTo((org.joda.time.ReadableInstant) dateTime82);
        org.joda.time.Duration duration84 = duration43.toDuration();
        boolean boolean85 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration84);
        org.joda.time.PeriodType periodType88 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology89 = null;
        org.joda.time.MutablePeriod mutablePeriod90 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType88, chronology89);
        org.joda.time.PeriodType periodType91 = periodType88.withWeeksRemoved();
        org.joda.time.PeriodType periodType92 = periodType88.withSecondsRemoved();
        org.joda.time.Period period93 = new org.joda.time.Period((org.joda.time.ReadableInstant) instant7, (org.joda.time.ReadableDuration) duration84, periodType92);
        org.joda.time.Instant instant94 = instant7.toInstant();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0671");
        org.joda.time.DurationFieldType durationFieldType0 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant2 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime3 = instant2.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone4 = null;
        org.joda.time.DateTime dateTime5 = dateTime3.withZoneRetainFields(dateTimeZone4);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        org.joda.time.DateTime.Property property9 = dateTime8.era();
        org.joda.time.DateTime dateTime10 = dateTime8.withTimeAtStartOfDay();
        org.joda.time.Duration duration13 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration13, readableInstant14, periodType15);
        mutablePeriod16.setMonths((int) '4');
        org.joda.time.DateTime dateTime19 = dateTime8.plus((org.joda.time.ReadablePeriod) mutablePeriod16);
        org.joda.time.DateTime dateTime21 = dateTime8.minusWeeks((int) (byte) 1);
        int int22 = dateTime5.compareTo((org.joda.time.ReadableInstant) dateTime8);
        org.joda.time.DateTime.Property property23 = dateTime8.minuteOfHour();
        org.joda.time.DateTime dateTime25 = dateTime8.withYear(1969);
        org.joda.time.Chronology chronology26 = dateTime25.getChronology();
        org.joda.time.DurationField durationField27 = durationFieldType0.getField(chronology26);
        org.joda.time.DateTimeField dateTimeField28 = chronology26.clockhourOfHalfday();
        org.joda.time.DateTimeField dateTimeField29 = chronology26.era();
        org.joda.time.Duration duration32 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds33 = duration32.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration34 = null;
        boolean boolean35 = duration32.isEqual(readableDuration34);
        org.joda.time.Duration duration37 = duration32.minus((long) 1);
        org.joda.time.Duration duration39 = duration37.minus((long) '4');
        org.joda.time.Instant instant41 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime42 = instant41.toDateTime();
        org.joda.time.DateTime.Property property43 = dateTime42.era();
        org.joda.time.Duration duration46 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration49 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period50 = duration49.toPeriod();
        org.joda.time.Duration duration52 = duration49.plus((long) (byte) 0);
        org.joda.time.Instant instant54 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime55 = instant54.toDateTime();
        boolean boolean57 = dateTime55.isEqual(10L);
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType60, chronology61);
        org.joda.time.PeriodType periodType63 = periodType60.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration52, (org.joda.time.ReadableInstant) dateTime55, periodType63);
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime42, (org.joda.time.ReadableDuration) duration46, periodType63);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period67 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, (org.joda.time.ReadableInstant) dateTime42, periodType66);
        org.joda.time.TimeOfDay timeOfDay68 = dateTime42.toTimeOfDay();
        int int69 = dateTimeField29.getMaximumValue((org.joda.time.ReadablePartial) timeOfDay68);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime3", (instant2.compareTo(dateTime3) == 0) == instant2.equals(dateTime3));
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0672");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (short) 10, periodType2);
        org.joda.time.Instant instant5 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant6 = instant5.toInstant();
        org.joda.time.DateTime dateTime7 = instant6.toDateTimeISO();
        org.joda.time.Duration duration8 = period3.toDurationFrom((org.joda.time.ReadableInstant) dateTime7);
        java.lang.Object obj9 = null;
        org.joda.time.Instant instant10 = new org.joda.time.Instant(obj9);
        org.joda.time.DateTimeZone dateTimeZone11 = instant10.getZone();
        org.joda.time.Duration duration14 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds15 = duration14.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration16 = null;
        boolean boolean17 = duration14.isEqual(readableDuration16);
        org.joda.time.Duration duration19 = duration14.minus((long) 1);
        org.joda.time.Duration duration21 = duration19.minus((long) '4');
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime24 = instant23.toDateTime();
        org.joda.time.DateTime.Property property25 = dateTime24.era();
        org.joda.time.Duration duration28 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration31 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period32 = duration31.toPeriod();
        org.joda.time.Duration duration34 = duration31.plus((long) (byte) 0);
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime37 = instant36.toDateTime();
        boolean boolean39 = dateTime37.isEqual(10L);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType42, chronology43);
        org.joda.time.PeriodType periodType45 = periodType42.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration34, (org.joda.time.ReadableInstant) dateTime37, periodType45);
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime24, (org.joda.time.ReadableDuration) duration28, periodType45);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, (org.joda.time.ReadableInstant) dateTime24, periodType48);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime7, (org.joda.time.ReadableInstant) instant10, periodType48);
        org.joda.time.Duration duration53 = new org.joda.time.Duration((long) (short) 1, (long) (byte) 0);
        boolean boolean54 = periodType48.equals((java.lang.Object) (short) 1);
        org.joda.time.PeriodType periodType55 = periodType48.withWeeksRemoved();
        org.joda.time.Instant instant57 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime58 = instant57.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone59 = null;
        org.joda.time.DateTime dateTime60 = dateTime58.withZoneRetainFields(dateTimeZone59);
        org.joda.time.Instant instant62 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime63 = instant62.toDateTime();
        org.joda.time.DateTime.Property property64 = dateTime63.era();
        org.joda.time.DateTime dateTime65 = dateTime63.withTimeAtStartOfDay();
        org.joda.time.Duration duration68 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.PeriodType periodType70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration68, readableInstant69, periodType70);
        mutablePeriod71.setMonths((int) '4');
        org.joda.time.DateTime dateTime74 = dateTime63.plus((org.joda.time.ReadablePeriod) mutablePeriod71);
        org.joda.time.DateTime dateTime76 = dateTime63.minusWeeks((int) (byte) 1);
        int int77 = dateTime60.compareTo((org.joda.time.ReadableInstant) dateTime63);
        org.joda.time.DateTime.Property property78 = dateTime63.minuteOfHour();
        org.joda.time.DateTime dateTime80 = dateTime63.withYear(1969);
        org.joda.time.Chronology chronology81 = dateTime80.getChronology();
        org.joda.time.DateTimeField dateTimeField82 = chronology81.year();
        org.joda.time.DateTimeField dateTimeField83 = chronology81.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField84 = chronology81.weekyearOfCentury();
        org.joda.time.Period period85 = new org.joda.time.Period(2980799999L, periodType48, chronology81);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant5 and dateTime7", (instant5.compareTo(dateTime7) == 0) == instant5.equals(dateTime7));
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0673");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant3 = instant1.minus(100L);
        java.lang.String str4 = instant3.toString();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period8 = duration7.toPeriod();
        org.joda.time.Duration duration10 = duration7.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = duration7.toPeriodTo(readableInstant11);
        org.joda.time.Duration duration14 = duration7.withMillis((long) (short) 0);
        org.joda.time.Instant instant15 = instant3.plus((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Instant instant17 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime18 = instant17.toDateTime();
        org.joda.time.DateTime.Property property19 = dateTime18.era();
        org.joda.time.DateTime dateTime20 = dateTime18.withTimeAtStartOfDay();
        org.joda.time.Duration duration23 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, readableInstant24, periodType25);
        mutablePeriod26.setMonths((int) '4');
        org.joda.time.DateTime dateTime29 = dateTime18.plus((org.joda.time.ReadablePeriod) mutablePeriod26);
        org.joda.time.Instant instant31 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant32 = instant31.toInstant();
        boolean boolean33 = dateTime18.isEqual((org.joda.time.ReadableInstant) instant32);
        boolean boolean34 = instant15.isAfter((org.joda.time.ReadableInstant) instant32);
        org.joda.time.Instant instant35 = instant32.toInstant();
        org.joda.time.Chronology chronology36 = instant32.getChronology();
        org.joda.time.Duration duration39 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period40 = duration39.toPeriod();
        org.joda.time.Duration duration42 = duration39.plus((long) (byte) 0);
        org.joda.time.Instant instant44 = instant32.withDurationAdded((org.joda.time.ReadableDuration) duration42, 70);
        org.joda.time.Hours hours45 = duration42.toStandardHours();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime18", (instant1.compareTo(dateTime18) == 0) == instant1.equals(dateTime18));
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0674");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.LocalDate localDate14 = dateTime2.toLocalDate();
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTime.Property property18 = dateTime17.era();
        org.joda.time.DateTime dateTime19 = dateTime17.withTimeAtStartOfDay();
        org.joda.time.Instant instant20 = dateTime17.toInstant();
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant20);
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime24 = instant23.toDateTime();
        org.joda.time.DateTime.Property property25 = dateTime24.era();
        org.joda.time.DateTime dateTime26 = property25.withMinimumValue();
        int int27 = property25.getMaximumValueOverall();
        java.util.Locale locale28 = java.util.Locale.ENGLISH;
        java.lang.String str29 = locale28.getScript();
        java.lang.String str30 = locale28.getDisplayCountry();
        int int31 = property25.getMaximumShortTextLength(locale28);
        org.joda.time.DateTime dateTime32 = property25.withMaximumValue();
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType34 = periodType33.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) dateTime32, periodType33);
        org.joda.time.PeriodType periodType36 = periodType33.withDaysRemoved();
        org.joda.time.PeriodType periodType37 = periodType36.withMillisRemoved();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0675");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration4 = null;
        boolean boolean5 = duration2.isEqual(readableDuration4);
        org.joda.time.Duration duration7 = duration2.minus((long) 1);
        org.joda.time.Duration duration9 = duration7.minus((long) '4');
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Duration duration22 = duration19.plus((long) (byte) 0);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType30, chronology31);
        org.joda.time.PeriodType periodType33 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, (org.joda.time.ReadableInstant) dateTime25, periodType33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime12, (org.joda.time.ReadableDuration) duration16, periodType33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime12, periodType36);
        org.joda.time.TimeOfDay timeOfDay38 = dateTime12.toTimeOfDay();
        org.joda.time.DateTimeField dateTimeField40 = timeOfDay38.getField(0);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime12", (instant11.compareTo(dateTime12) == 0) == instant11.equals(dateTime12));
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0676");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.TimeOfDay timeOfDay6 = dateTime2.toTimeOfDay();
        org.joda.time.Instant instant8 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime9 = instant8.toDateTime();
        org.joda.time.DateTime.Property property10 = dateTime9.era();
        org.joda.time.DateTime dateTime11 = dateTime9.withTimeAtStartOfDay();
        org.joda.time.Instant instant12 = dateTime9.toInstant();
        org.joda.time.DateMidnight dateMidnight13 = dateTime9.toDateMidnight();
        org.joda.time.DateTime dateTime16 = dateTime9.withDurationAdded(0L, (int) 'a');
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) dateTime16);
        org.joda.time.DateTime.Property property18 = dateTime2.year();
        org.joda.time.DateTime dateTime19 = property18.roundFloorCopy();
        int int20 = dateTime19.getSecondOfMinute();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0677");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField29 = chronology25.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField30 = chronology25.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField31 = chronology25.clockhourOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0678");
        org.joda.time.Duration duration3 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration3, readableInstant4, periodType5);
        org.joda.time.Days days7 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType8 = org.joda.time.DurationFieldType.minutes();
        int int9 = days7.get(durationFieldType8);
        mutablePeriod6.add(durationFieldType8, 8);
        org.joda.time.ReadablePeriod readablePeriod12 = null;
        mutablePeriod6.add(readablePeriod12);
        int int14 = mutablePeriod6.getMonths();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.DateTime dateTime16 = new org.joda.time.DateTime(chronology15);
        org.joda.time.DateTime.Property property17 = dateTime16.yearOfEra();
        org.joda.time.Interval interval18 = property17.toInterval();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.DateTime dateTime20 = new org.joda.time.DateTime(chronology19);
        org.joda.time.DateTime.Property property21 = dateTime20.yearOfEra();
        org.joda.time.Interval interval22 = property21.toInterval();
        boolean boolean23 = interval18.contains((org.joda.time.ReadableInterval) interval22);
        mutablePeriod6.setPeriod((org.joda.time.ReadableInterval) interval18);
        org.joda.time.DurationFieldType durationFieldType26 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant28 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime29 = instant28.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone30 = null;
        org.joda.time.DateTime dateTime31 = dateTime29.withZoneRetainFields(dateTimeZone30);
        org.joda.time.Instant instant33 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime34 = instant33.toDateTime();
        org.joda.time.DateTime.Property property35 = dateTime34.era();
        org.joda.time.DateTime dateTime36 = dateTime34.withTimeAtStartOfDay();
        org.joda.time.Duration duration39 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.PeriodType periodType41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration39, readableInstant40, periodType41);
        mutablePeriod42.setMonths((int) '4');
        org.joda.time.DateTime dateTime45 = dateTime34.plus((org.joda.time.ReadablePeriod) mutablePeriod42);
        org.joda.time.DateTime dateTime47 = dateTime34.minusWeeks((int) (byte) 1);
        int int48 = dateTime31.compareTo((org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.DateTime.Property property49 = dateTime34.minuteOfHour();
        org.joda.time.DateTime dateTime51 = dateTime34.withYear(1969);
        org.joda.time.Chronology chronology52 = dateTime51.getChronology();
        org.joda.time.DurationField durationField53 = durationFieldType26.getField(chronology52);
        mutablePeriod6.add((-43199999L), chronology52);
        org.joda.time.DurationField durationField55 = chronology52.millis();
        org.joda.time.DurationField durationField56 = chronology52.months();
        org.joda.time.DateTime dateTime57 = new org.joda.time.DateTime((long) 69, chronology52);
        org.joda.time.DateTimeField dateTimeField58 = chronology52.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField59 = chronology52.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField60 = chronology52.yearOfCentury();
        long long63 = dateTimeField60.getDifferenceAsLong(1672963200000L, (long) (-2147483647));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant28 and dateTime29", (instant28.compareTo(dateTime29) == 0) == instant28.equals(dateTime29));
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0679");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        java.util.Locale locale6 = new java.util.Locale("+00:00");
        boolean boolean7 = dateTime2.equals((java.lang.Object) "+00:00");
        org.joda.time.Instant instant9 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime10 = instant9.toDateTime();
        org.joda.time.DateTime.Property property11 = dateTime10.era();
        org.joda.time.DateTime dateTime12 = dateTime10.withTimeAtStartOfDay();
        org.joda.time.Duration duration15 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration15, readableInstant16, periodType17);
        mutablePeriod18.setMonths((int) '4');
        org.joda.time.DateTime dateTime21 = dateTime10.plus((org.joda.time.ReadablePeriod) mutablePeriod18);
        org.joda.time.DateTime dateTime23 = dateTime10.withMillisOfDay(4);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType28, chronology29);
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((-1L), (long) 100, periodType28);
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) dateTime10, periodType28);
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.DateTime dateTime34 = new org.joda.time.DateTime(chronology33);
        org.joda.time.DateTime.Property property35 = dateTime34.yearOfEra();
        org.joda.time.Interval interval36 = property35.toInterval();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.DateTime dateTime38 = new org.joda.time.DateTime(chronology37);
        org.joda.time.DateTime.Property property39 = dateTime38.yearOfEra();
        org.joda.time.Interval interval40 = property39.toInterval();
        boolean boolean41 = interval36.contains((org.joda.time.ReadableInterval) interval40);
        org.joda.time.Chronology chronology42 = interval40.getChronology();
        org.joda.time.MutableDateTime mutableDateTime43 = dateTime10.toMutableDateTime(chronology42);
        org.joda.time.DateTimeField dateTimeField44 = chronology42.hourOfHalfday();
        org.joda.time.DateTime dateTime45 = org.joda.time.DateTime.now(chronology42);
        int int46 = dateTime45.getWeekyear();
        org.joda.time.DateTime.Property property47 = dateTime45.minuteOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0680");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((long) (short) 1, (long) 8, chronology3);
        org.joda.time.Instant instant8 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime9 = instant8.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone10 = null;
        org.joda.time.DateTime dateTime11 = dateTime9.withZoneRetainFields(dateTimeZone10);
        org.joda.time.Instant instant13 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime14 = instant13.toDateTime();
        org.joda.time.DateTime.Property property15 = dateTime14.era();
        org.joda.time.DateTime dateTime16 = dateTime14.withTimeAtStartOfDay();
        org.joda.time.Duration duration19 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration19, readableInstant20, periodType21);
        mutablePeriod22.setMonths((int) '4');
        org.joda.time.DateTime dateTime25 = dateTime14.plus((org.joda.time.ReadablePeriod) mutablePeriod22);
        org.joda.time.DateTime dateTime27 = dateTime14.minusWeeks((int) (byte) 1);
        int int28 = dateTime11.compareTo((org.joda.time.ReadableInstant) dateTime14);
        org.joda.time.DateTime.Property property29 = dateTime14.minuteOfHour();
        org.joda.time.DateTime dateTime31 = dateTime14.withYear(1969);
        org.joda.time.Chronology chronology32 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField33 = chronology32.year();
        org.joda.time.DateTimeField dateTimeField34 = chronology32.weekOfWeekyear();
        mutablePeriod4.setPeriod(43199999L, (-1855204655L), chronology32);
        org.joda.time.DateTimeField dateTimeField36 = chronology32.minuteOfHour();
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((long) 7, chronology32);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant8 and dateTime9", (instant8.compareTo(dateTime9) == 0) == instant8.equals(dateTime9));
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0681");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        long long16 = dateTime2.getMillis();
        long long17 = dateTime2.getMillis();
        org.joda.time.LocalDate localDate18 = dateTime2.toLocalDate();
        org.joda.time.DateTime dateTime20 = dateTime2.withYearOfEra(86399);
        int int21 = dateTime20.getWeekOfWeekyear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0682");
        java.util.Locale.LanguageRange languageRange1 = new java.util.Locale.LanguageRange("days");
        double double2 = languageRange1.getWeight();
        java.lang.String str3 = languageRange1.getRange();
        org.joda.time.Duration duration6 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant7, periodType8);
        mutablePeriod9.setPeriod((long) 1, (-1L));
        mutablePeriod9.setMillis((int) (short) 0);
        int int15 = mutablePeriod9.getDays();
        mutablePeriod9.addMinutes(1969);
        org.joda.time.Chronology chronology19 = null;
        mutablePeriod9.setPeriod((long) 'a', chronology19);
        int int21 = mutablePeriod9.getMillis();
        mutablePeriod9.setMonths(2022);
        org.joda.time.Instant instant25 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime26 = instant25.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone27 = null;
        org.joda.time.DateTime dateTime28 = dateTime26.withZoneRetainFields(dateTimeZone27);
        org.joda.time.Instant instant30 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime31 = instant30.toDateTime();
        org.joda.time.DateTime.Property property32 = dateTime31.era();
        org.joda.time.DateTime dateTime33 = dateTime31.withTimeAtStartOfDay();
        org.joda.time.Duration duration36 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.PeriodType periodType38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration36, readableInstant37, periodType38);
        mutablePeriod39.setMonths((int) '4');
        org.joda.time.DateTime dateTime42 = dateTime31.plus((org.joda.time.ReadablePeriod) mutablePeriod39);
        org.joda.time.DateTime dateTime44 = dateTime31.minusWeeks((int) (byte) 1);
        int int45 = dateTime28.compareTo((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.DateTime dateTime46 = dateTime28.toDateTimeISO();
        org.joda.time.DateTime.Property property47 = dateTime28.dayOfMonth();
        org.joda.time.Duration duration48 = mutablePeriod9.toDurationFrom((org.joda.time.ReadableInstant) dateTime28);
        boolean boolean49 = languageRange1.equals((java.lang.Object) dateTime28);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant25 and dateTime28", (instant25.compareTo(dateTime28) == 0) == instant25.equals(dateTime28));
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0683");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant3 = instant1.minus(100L);
        java.lang.String str4 = instant3.toString();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period8 = duration7.toPeriod();
        org.joda.time.Duration duration10 = duration7.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = duration7.toPeriodTo(readableInstant11);
        org.joda.time.Duration duration14 = duration7.withMillis((long) (short) 0);
        org.joda.time.Instant instant15 = instant3.plus((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Instant instant17 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime18 = instant17.toDateTime();
        org.joda.time.DateTime.Property property19 = dateTime18.era();
        org.joda.time.DateTime dateTime20 = dateTime18.withTimeAtStartOfDay();
        org.joda.time.Duration duration23 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, readableInstant24, periodType25);
        mutablePeriod26.setMonths((int) '4');
        org.joda.time.DateTime dateTime29 = dateTime18.plus((org.joda.time.ReadablePeriod) mutablePeriod26);
        org.joda.time.Instant instant31 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant32 = instant31.toInstant();
        boolean boolean33 = dateTime18.isEqual((org.joda.time.ReadableInstant) instant32);
        boolean boolean34 = instant15.isAfter((org.joda.time.ReadableInstant) instant32);
        org.joda.time.Instant instant35 = instant32.toInstant();
        org.joda.time.Chronology chronology36 = instant32.getChronology();
        org.joda.time.DateTimeField dateTimeField37 = chronology36.secondOfDay();
        java.lang.String str38 = dateTimeField37.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime18", (instant1.compareTo(dateTime18) == 0) == instant1.equals(dateTime18));
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0684");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTimeField dateTimeField2 = dateTimeFieldType0.getField(chronology1);
        long long5 = dateTimeField2.add(0L, (long) (short) 1);
        long long7 = dateTimeField2.roundHalfCeiling((long) 2);
        org.joda.time.Instant instant9 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime10 = instant9.toDateTime();
        org.joda.time.DateTime.Property property11 = dateTime10.era();
        org.joda.time.Instant instant13 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant15 = instant13.minus(100L);
        org.joda.time.Instant instant17 = instant15.plus((long) 100);
        org.joda.time.Instant instant19 = instant15.withMillis((long) (byte) 1);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) instant15);
        org.joda.time.LocalTime localTime21 = dateTime10.toLocalTime();
        org.joda.time.Duration duration25 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration25, readableInstant26, periodType27);
        mutablePeriod28.setMonths((int) '4');
        org.joda.time.Period period31 = mutablePeriod28.toPeriod();
        int[] intArray32 = period31.getValues();
        int[] intArray34 = dateTimeField2.addWrapField((org.joda.time.ReadablePartial) localTime21, 0, intArray32, 3);
        long long36 = dateTimeField2.roundHalfFloor((long) 12);
        boolean boolean38 = dateTimeField2.isLeap(346022409602000L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime10", (instant9.compareTo(dateTime10) == 0) == instant9.equals(dateTime10));
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0685");
        org.joda.time.DurationFieldType durationFieldType0 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant2 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime3 = instant2.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone4 = null;
        org.joda.time.DateTime dateTime5 = dateTime3.withZoneRetainFields(dateTimeZone4);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        org.joda.time.DateTime.Property property9 = dateTime8.era();
        org.joda.time.DateTime dateTime10 = dateTime8.withTimeAtStartOfDay();
        org.joda.time.Duration duration13 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration13, readableInstant14, periodType15);
        mutablePeriod16.setMonths((int) '4');
        org.joda.time.DateTime dateTime19 = dateTime8.plus((org.joda.time.ReadablePeriod) mutablePeriod16);
        org.joda.time.DateTime dateTime21 = dateTime8.minusWeeks((int) (byte) 1);
        int int22 = dateTime5.compareTo((org.joda.time.ReadableInstant) dateTime8);
        org.joda.time.DateTime.Property property23 = dateTime8.minuteOfHour();
        org.joda.time.DateTime dateTime25 = dateTime8.withYear(1969);
        org.joda.time.Chronology chronology26 = dateTime25.getChronology();
        org.joda.time.DurationField durationField27 = durationFieldType0.getField(chronology26);
        long long30 = durationField27.getValueAsLong((long) 59, (long) 12);
        boolean boolean31 = durationField27.isPrecise();
        long long34 = durationField27.getValueAsLong((-1855204655L), 11L);
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.DateTime dateTime36 = new org.joda.time.DateTime(chronology35);
        org.joda.time.DateTime.Property property37 = dateTime36.yearOfEra();
        org.joda.time.Interval interval38 = property37.toInterval();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.DateTime dateTime40 = new org.joda.time.DateTime(chronology39);
        org.joda.time.DateTime.Property property41 = dateTime40.yearOfEra();
        org.joda.time.Interval interval42 = property41.toInterval();
        boolean boolean43 = interval38.contains((org.joda.time.ReadableInterval) interval42);
        org.joda.time.Chronology chronology44 = interval42.getChronology();
        org.joda.time.DurationField durationField45 = chronology44.weeks();
        org.joda.time.DateTime dateTime46 = new org.joda.time.DateTime(chronology44);
        org.joda.time.DurationField durationField47 = chronology44.centuries();
        org.joda.time.DurationField durationField48 = chronology44.days();
        org.joda.time.DateTimeField dateTimeField49 = chronology44.dayOfWeek();
        org.joda.time.DurationField durationField50 = chronology44.minutes();
        long long53 = durationField50.getDifferenceAsLong((-43199999L), (long) 365);
        org.joda.time.Duration duration56 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period57 = duration56.toPeriod();
        org.joda.time.Duration duration59 = duration56.plus((long) (byte) 0);
        org.joda.time.Instant instant61 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime62 = instant61.toDateTime();
        boolean boolean64 = dateTime62.isEqual(10L);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType67, chronology68);
        org.joda.time.PeriodType periodType70 = periodType67.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration59, (org.joda.time.ReadableInstant) dateTime62, periodType70);
        org.joda.time.Instant instant73 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime74 = instant73.toDateTime();
        org.joda.time.DateTime.Property property75 = dateTime74.era();
        org.joda.time.DateTime dateTime76 = dateTime74.withTimeAtStartOfDay();
        org.joda.time.Instant instant77 = dateTime74.toInstant();
        org.joda.time.DateTime dateTime79 = dateTime74.withMillis((long) '4');
        org.joda.time.Minutes minutes80 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime62, (org.joda.time.ReadableInstant) dateTime74);
        org.joda.time.Instant instant82 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime83 = instant82.toDateTime();
        org.joda.time.TimeOfDay timeOfDay84 = dateTime83.toTimeOfDay();
        org.joda.time.DateTime dateTime85 = dateTime74.withFields((org.joda.time.ReadablePartial) timeOfDay84);
        org.joda.time.DateTime.Property property86 = dateTime85.millisOfSecond();
        org.joda.time.DurationField durationField87 = property86.getDurationField();
        int int88 = durationField50.compareTo(durationField87);
        long long91 = durationField87.add(27882730L, (long) 86399);
        int int92 = durationField27.compareTo(durationField87);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime3", (instant2.compareTo(dateTime3) == 0) == instant2.equals(dateTime3));
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0686");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int9 = mutablePeriod8.getDays();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        org.joda.time.DateTime.Property property14 = dateTime13.yearOfEra();
        org.joda.time.Interval interval15 = property14.toInterval();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.DateTime dateTime17 = new org.joda.time.DateTime(chronology16);
        org.joda.time.DateTime.Property property18 = dateTime17.yearOfEra();
        org.joda.time.Interval interval19 = property18.toInterval();
        boolean boolean20 = interval15.contains((org.joda.time.ReadableInterval) interval19);
        org.joda.time.Chronology chronology21 = interval19.getChronology();
        mutablePeriod8.setPeriod((long) 'u', (long) 1969, chronology21);
        org.joda.time.DateTimeField dateTimeField23 = chronology21.millisOfDay();
        org.joda.time.DateTimeField dateTimeField24 = chronology21.yearOfCentury();
        org.joda.time.Duration duration27 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds28 = duration27.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration29 = null;
        boolean boolean30 = duration27.isEqual(readableDuration29);
        org.joda.time.Duration duration32 = duration27.minus((long) 1);
        org.joda.time.Duration duration34 = duration32.minus((long) '4');
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime37 = instant36.toDateTime();
        org.joda.time.DateTime.Property property38 = dateTime37.era();
        org.joda.time.Duration duration41 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration44 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period45 = duration44.toPeriod();
        org.joda.time.Duration duration47 = duration44.plus((long) (byte) 0);
        org.joda.time.Instant instant49 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime50 = instant49.toDateTime();
        boolean boolean52 = dateTime50.isEqual(10L);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType55, chronology56);
        org.joda.time.PeriodType periodType58 = periodType55.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration47, (org.joda.time.ReadableInstant) dateTime50, periodType58);
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime37, (org.joda.time.ReadableDuration) duration41, periodType58);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, (org.joda.time.ReadableInstant) dateTime37, periodType61);
        org.joda.time.TimeOfDay timeOfDay63 = dateTime37.toTimeOfDay();
        int[] intArray65 = chronology21.get((org.joda.time.ReadablePartial) timeOfDay63, (long) (-1));
        org.joda.time.DateTimeField dateTimeField66 = chronology21.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField67 = chronology21.millisOfDay();
        org.joda.time.Duration duration70 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.PeriodType periodType72 = null;
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration70, readableInstant71, periodType72);
        mutablePeriod73.setMonths((int) '4');
        org.joda.time.Period period77 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period79 = period77.minusMonths((int) (short) 10);
        org.joda.time.DurationFieldType durationFieldType80 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Period period82 = period77.withFieldAdded(durationFieldType80, (int) (short) 100);
        mutablePeriod73.set(durationFieldType80, (int) '4');
        int[] intArray86 = chronology21.get((org.joda.time.ReadablePeriod) mutablePeriod73, (long) 1970);
        org.joda.time.DurationField durationField87 = chronology21.seconds();
        org.joda.time.DateTimeField dateTimeField88 = chronology21.era();
        org.joda.time.DateTimeField dateTimeField89 = chronology21.millisOfSecond();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant36 and dateTime37", (instant36.compareTo(dateTime37) == 0) == instant36.equals(dateTime37));
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0687");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant3 = instant1.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime4 = instant1.toMutableDateTimeISO();
        java.lang.Object obj5 = null;
        org.joda.time.Instant instant6 = new org.joda.time.Instant(obj5);
        boolean boolean7 = mutableDateTime4.isAfter((org.joda.time.ReadableInstant) instant6);
        org.joda.time.Instant instant9 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant10 = instant9.toInstant();
        org.joda.time.DateTime dateTime11 = instant10.toDateTimeISO();
        org.joda.time.DateTime dateTime12 = dateTime11.withLaterOffsetAtOverlap();
        int int13 = instant6.compareTo((org.joda.time.ReadableInstant) dateTime11);
        org.joda.time.Instant instant16 = instant6.withDurationAdded((long) (byte) 10, (-1));
        org.joda.time.Instant instant18 = instant16.minus((long) 35);
        boolean boolean19 = instant16.isEqualNow();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and mutableDateTime4", (instant1.compareTo(mutableDateTime4) == 0) == instant1.equals(mutableDateTime4));
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0688");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = duration2.toPeriod(chronology3);
        org.joda.time.Period period6 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period8 = period6.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration10 = period8.toDurationTo(readableInstant9);
        org.joda.time.Duration duration11 = duration2.minus((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Instant instant13 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime14 = instant13.toDateTime();
        org.joda.time.DateTime.Property property15 = dateTime14.era();
        org.joda.time.DateTime dateTime16 = dateTime14.withTimeAtStartOfDay();
        org.joda.time.Duration duration19 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration19, readableInstant20, periodType21);
        mutablePeriod22.setMonths((int) '4');
        org.joda.time.DateTime dateTime25 = dateTime14.plus((org.joda.time.ReadablePeriod) mutablePeriod22);
        org.joda.time.DateTime dateTime27 = dateTime14.withMillisOfDay(4);
        org.joda.time.DateMidnight dateMidnight28 = dateTime27.toDateMidnight();
        org.joda.time.Period period29 = duration10.toPeriodTo((org.joda.time.ReadableInstant) dateTime27);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant13 and dateTime14", (instant13.compareTo(dateTime14) == 0) == instant13.equals(dateTime14));
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0689");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Duration duration5 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period6 = duration5.toPeriod();
        org.joda.time.Duration duration8 = duration5.plus((long) (byte) 0);
        org.joda.time.Instant instant10 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime11 = instant10.toDateTime();
        boolean boolean13 = dateTime11.isEqual(10L);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType16, chronology17);
        org.joda.time.PeriodType periodType19 = periodType16.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration8, (org.joda.time.ReadableInstant) dateTime11, periodType19);
        org.joda.time.Duration duration23 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period24 = duration23.toPeriod();
        org.joda.time.Duration duration26 = duration23.plus((long) (byte) 0);
        org.joda.time.Duration duration27 = duration23.toDuration();
        org.joda.time.Duration duration28 = duration8.minus((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Duration duration31 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.PeriodType periodType33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration31, readableInstant32, periodType33);
        org.joda.time.Duration duration37 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.PeriodType periodType39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration37, readableInstant38, periodType39);
        boolean boolean41 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Period period42 = duration37.toPeriod();
        boolean boolean43 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration46 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds47 = duration46.toStandardSeconds();
        org.joda.time.Instant instant49 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant51 = instant49.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime52 = instant49.toMutableDateTimeISO();
        org.joda.time.Period period53 = duration46.toPeriodTo((org.joda.time.ReadableInstant) instant49);
        org.joda.time.Instant instant55 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime56 = instant55.toDateTime();
        org.joda.time.DateTime.Property property57 = dateTime56.era();
        org.joda.time.DateTime dateTime58 = dateTime56.withTimeAtStartOfDay();
        org.joda.time.Duration duration61 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.PeriodType periodType63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration61, readableInstant62, periodType63);
        mutablePeriod64.setMonths((int) '4');
        org.joda.time.DateTime dateTime67 = dateTime56.plus((org.joda.time.ReadablePeriod) mutablePeriod64);
        org.joda.time.DateTime dateTime69 = dateTime56.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property70 = dateTime69.monthOfYear();
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType75, chronology76);
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod(1L, (long) 10, periodType75, chronology78);
        org.joda.time.PeriodType periodType80 = periodType75.withDaysRemoved();
        org.joda.time.Period period81 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, (org.joda.time.ReadableInstant) dateTime69, periodType75);
        org.joda.time.Instant instant83 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant84 = instant83.toInstant();
        org.joda.time.DateTime dateTime85 = instant84.toDateTimeISO();
        org.joda.time.Period period86 = duration46.toPeriodTo((org.joda.time.ReadableInstant) dateTime85);
        org.joda.time.Duration duration87 = duration46.toDuration();
        org.joda.time.Duration duration88 = duration87.toDuration();
        boolean boolean89 = duration37.isEqual((org.joda.time.ReadableDuration) duration88);
        long long90 = duration88.getMillis();
        org.joda.time.Duration duration92 = duration2.withDurationAdded((org.joda.time.ReadableDuration) duration88, 141012);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant10 and dateTime11", (instant10.compareTo(dateTime11) == 0) == instant10.equals(dateTime11));
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0690");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.Interval interval7 = property6.toInterval();
        boolean boolean8 = interval3.contains((org.joda.time.ReadableInterval) interval7);
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.DateTime dateTime10 = new org.joda.time.DateTime(chronology9);
        org.joda.time.DateTime.Property property11 = dateTime10.yearOfEra();
        org.joda.time.Interval interval12 = property11.toInterval();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.DateTime dateTime14 = new org.joda.time.DateTime(chronology13);
        org.joda.time.DateTime.Property property15 = dateTime14.yearOfEra();
        org.joda.time.Interval interval16 = property15.toInterval();
        boolean boolean17 = interval12.contains((org.joda.time.ReadableInterval) interval16);
        boolean boolean18 = interval7.contains((org.joda.time.ReadableInterval) interval12);
        org.joda.time.Duration duration21 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration21, readableInstant22, periodType23);
        org.joda.time.Days days25 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType26 = org.joda.time.DurationFieldType.minutes();
        int int27 = days25.get(durationFieldType26);
        mutablePeriod24.add(durationFieldType26, 8);
        int int30 = mutablePeriod24.getHours();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.DateTime dateTime32 = new org.joda.time.DateTime(chronology31);
        org.joda.time.DateTime.Property property33 = dateTime32.yearOfEra();
        org.joda.time.Interval interval34 = property33.toInterval();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.DateTime dateTime36 = new org.joda.time.DateTime(chronology35);
        org.joda.time.DateTime.Property property37 = dateTime36.yearOfEra();
        org.joda.time.Interval interval38 = property37.toInterval();
        boolean boolean39 = interval34.contains((org.joda.time.ReadableInterval) interval38);
        java.lang.String str40 = interval34.toString();
        mutablePeriod24.add((org.joda.time.ReadableInterval) interval34);
        java.lang.String str42 = interval34.toString();
        java.lang.String str43 = interval34.toString();
        boolean boolean44 = interval12.isAfter((org.joda.time.ReadableInterval) interval34);
        org.joda.time.Instant instant46 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime47 = instant46.toDateTime();
        org.joda.time.DateTime.Property property48 = dateTime47.era();
        org.joda.time.DateTime dateTime49 = property48.withMinimumValue();
        int int50 = property48.getMaximumValueOverall();
        java.util.Locale locale51 = java.util.Locale.ENGLISH;
        java.lang.String str52 = locale51.getScript();
        java.lang.String str53 = locale51.getDisplayCountry();
        int int54 = property48.getMaximumShortTextLength(locale51);
        org.joda.time.DateTime dateTime55 = property48.withMaximumValue();
        org.joda.time.DateTime dateTime56 = dateTime55.withLaterOffsetAtOverlap();
        org.joda.time.Instant instant58 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant60 = instant58.minus(100L);
        java.lang.String str61 = instant60.toString();
        org.joda.time.Duration duration64 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period65 = duration64.toPeriod();
        org.joda.time.Duration duration67 = duration64.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Period period69 = duration64.toPeriodTo(readableInstant68);
        org.joda.time.Duration duration71 = duration64.withMillis((long) (short) 0);
        org.joda.time.Instant instant72 = instant60.plus((org.joda.time.ReadableDuration) duration64);
        org.joda.time.DateTime dateTime74 = dateTime55.withDurationAdded((org.joda.time.ReadableDuration) duration64, 2);
        org.joda.time.DateTime dateTime76 = dateTime74.plus((long) 3);
        org.joda.time.DateTime dateTime78 = dateTime74.withMinuteOfHour((int) (short) 1);
        boolean boolean79 = interval34.isAfter((org.joda.time.ReadableInstant) dateTime78);
        org.joda.time.DateTime dateTime80 = interval34.getEnd();
        org.joda.time.Days days81 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval34);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant46 and dateTime47", (instant46.compareTo(dateTime47) == 0) == instant46.equals(dateTime47));
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0691");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.DateTime dateTime6 = dateTime2.withCenturyOfEra((int) (byte) 1);
        org.joda.time.DateTimeFieldType dateTimeFieldType7 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.DateTimeField dateTimeField9 = dateTimeFieldType7.getField(chronology8);
        long long12 = dateTimeField9.add(0L, (long) (short) 1);
        long long15 = dateTimeField9.add(1L, (-1));
        int int16 = dateTime2.get(dateTimeField9);
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime19 = instant18.toDateTime();
        org.joda.time.DateTime.Property property20 = dateTime19.era();
        org.joda.time.DateTime dateTime21 = dateTime19.withTimeAtStartOfDay();
        org.joda.time.Duration duration24 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration24, readableInstant25, periodType26);
        mutablePeriod27.setMonths((int) '4');
        org.joda.time.DateTime dateTime30 = dateTime19.plus((org.joda.time.ReadablePeriod) mutablePeriod27);
        org.joda.time.DateTime dateTime32 = dateTime19.minusWeeks((int) (byte) 1);
        long long33 = dateTime19.getMillis();
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime37 = instant36.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone38 = null;
        org.joda.time.DateTime dateTime39 = dateTime37.withZoneRetainFields(dateTimeZone38);
        org.joda.time.Instant instant41 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime42 = instant41.toDateTime();
        org.joda.time.DateTime.Property property43 = dateTime42.era();
        org.joda.time.DateTime dateTime44 = dateTime42.withTimeAtStartOfDay();
        org.joda.time.Duration duration47 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.PeriodType periodType49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration47, readableInstant48, periodType49);
        mutablePeriod50.setMonths((int) '4');
        org.joda.time.DateTime dateTime53 = dateTime42.plus((org.joda.time.ReadablePeriod) mutablePeriod50);
        org.joda.time.DateTime dateTime55 = dateTime42.minusWeeks((int) (byte) 1);
        int int56 = dateTime39.compareTo((org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.DateTime.Property property57 = dateTime42.minuteOfHour();
        org.joda.time.DateTime dateTime59 = dateTime42.withYear(1969);
        org.joda.time.Chronology chronology60 = dateTime59.getChronology();
        org.joda.time.DurationField durationField61 = durationFieldType34.getField(chronology60);
        org.joda.time.DateTime dateTime62 = dateTime19.toDateTime(chronology60);
        org.joda.time.DateTime dateTime63 = dateTime2.toDateTime(chronology60);
        org.joda.time.DateTimeField dateTimeField64 = chronology60.millisOfDay();
        org.joda.time.Instant instant66 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime67 = instant66.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone68 = null;
        org.joda.time.DateTime dateTime69 = dateTime67.withZoneRetainFields(dateTimeZone68);
        org.joda.time.Instant instant71 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime72 = instant71.toDateTime();
        org.joda.time.DateTime.Property property73 = dateTime72.era();
        org.joda.time.DateTime dateTime74 = dateTime72.withTimeAtStartOfDay();
        org.joda.time.Duration duration77 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.PeriodType periodType79 = null;
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration77, readableInstant78, periodType79);
        mutablePeriod80.setMonths((int) '4');
        org.joda.time.DateTime dateTime83 = dateTime72.plus((org.joda.time.ReadablePeriod) mutablePeriod80);
        org.joda.time.DateTime dateTime85 = dateTime72.minusWeeks((int) (byte) 1);
        int int86 = dateTime69.compareTo((org.joda.time.ReadableInstant) dateTime72);
        org.joda.time.DateTime.Property property87 = dateTime72.minuteOfHour();
        org.joda.time.DateTime dateTime89 = dateTime72.withYear(1969);
        boolean boolean91 = dateTime89.isAfter((long) (short) -1);
        int int92 = dateTime89.getWeekyear();
        org.joda.time.DateTime dateTime93 = dateTime89.withEarlierOffsetAtOverlap();
        org.joda.time.DateTimeZone dateTimeZone94 = dateTime93.getZone();
        org.joda.time.Chronology chronology95 = chronology60.withZone(dateTimeZone94);
        long long97 = dateTimeZone94.nextTransition((long) 24);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0692");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (short) 10, periodType1);
        org.joda.time.Instant instant4 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant5 = instant4.toInstant();
        org.joda.time.DateTime dateTime6 = instant5.toDateTimeISO();
        org.joda.time.Duration duration7 = period2.toDurationFrom((org.joda.time.ReadableInstant) dateTime6);
        org.joda.time.Period period9 = period2.plusMonths(1969);
        org.joda.time.Period period11 = period9.withMinutes(2);
        org.joda.time.Period period13 = period9.multipliedBy(23);
        org.joda.time.Period period14 = period9.negated();
        org.joda.time.Period period16 = period14.plusMillis(23);
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime19 = instant18.toDateTime();
        org.joda.time.DateTime.Property property20 = dateTime19.era();
        org.joda.time.DateTime dateTime21 = dateTime19.withTimeAtStartOfDay();
        org.joda.time.Duration duration24 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration24, readableInstant25, periodType26);
        mutablePeriod27.setMonths((int) '4');
        org.joda.time.DateTime dateTime30 = dateTime19.plus((org.joda.time.ReadablePeriod) mutablePeriod27);
        org.joda.time.Period period32 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period34 = period32.minusMonths((int) (short) 10);
        org.joda.time.DurationFieldType durationFieldType35 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Period period37 = period32.withFieldAdded(durationFieldType35, (int) (short) 100);
        mutablePeriod27.set(durationFieldType35, 1439);
        java.lang.String str40 = durationFieldType35.getName();
        int int41 = period16.get(durationFieldType35);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant4 and dateTime6", (instant4.compareTo(dateTime6) == 0) == instant4.equals(dateTime6));
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0693");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period3 = period1.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration5 = period3.toDurationTo(readableInstant4);
        org.joda.time.Duration duration8 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds9 = duration8.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration10 = null;
        boolean boolean11 = duration8.isEqual(readableDuration10);
        org.joda.time.Duration duration13 = duration8.minus((long) 1);
        org.joda.time.Duration duration15 = duration13.minus((long) '4');
        org.joda.time.Instant instant17 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime18 = instant17.toDateTime();
        org.joda.time.DateTime.Property property19 = dateTime18.era();
        org.joda.time.Duration duration22 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration25 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period26 = duration25.toPeriod();
        org.joda.time.Duration duration28 = duration25.plus((long) (byte) 0);
        org.joda.time.Instant instant30 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime31 = instant30.toDateTime();
        boolean boolean33 = dateTime31.isEqual(10L);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType36, chronology37);
        org.joda.time.PeriodType periodType39 = periodType36.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration28, (org.joda.time.ReadableInstant) dateTime31, periodType39);
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime18, (org.joda.time.ReadableDuration) duration22, periodType39);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, (org.joda.time.ReadableInstant) dateTime18, periodType42);
        boolean boolean44 = duration5.isEqual((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration46 = new org.joda.time.Duration(432000000L);
        org.joda.time.Duration duration47 = duration5.plus((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Seconds seconds48 = duration46.toStandardSeconds();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant17 and dateTime18", (instant17.compareTo(dateTime18) == 0) == instant17.equals(dateTime18));
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0694");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration4 = null;
        boolean boolean5 = duration2.isEqual(readableDuration4);
        org.joda.time.Duration duration7 = duration2.minus((long) 1);
        org.joda.time.Duration duration9 = duration7.minus((long) '4');
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Duration duration22 = duration19.plus((long) (byte) 0);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType30, chronology31);
        org.joda.time.PeriodType periodType33 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, (org.joda.time.ReadableInstant) dateTime25, periodType33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime12, (org.joda.time.ReadableDuration) duration16, periodType33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime12, periodType36);
        org.joda.time.Duration duration39 = duration7.minus((long) 7);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int50 = mutablePeriod49.getDays();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.DateTime dateTime54 = new org.joda.time.DateTime(chronology53);
        org.joda.time.DateTime.Property property55 = dateTime54.yearOfEra();
        org.joda.time.Interval interval56 = property55.toInterval();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.DateTime dateTime58 = new org.joda.time.DateTime(chronology57);
        org.joda.time.DateTime.Property property59 = dateTime58.yearOfEra();
        org.joda.time.Interval interval60 = property59.toInterval();
        boolean boolean61 = interval56.contains((org.joda.time.ReadableInterval) interval60);
        org.joda.time.Chronology chronology62 = interval60.getChronology();
        mutablePeriod49.setPeriod((long) 'u', (long) 1969, chronology62);
        org.joda.time.Period period64 = new org.joda.time.Period((long) (byte) 100, chronology62);
        org.joda.time.Period period65 = duration39.toPeriod(chronology62);
        org.joda.time.DateTimeField dateTimeField66 = chronology62.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField67 = chronology62.monthOfYear();
        java.util.Locale locale69 = java.util.Locale.US;
        java.util.Locale locale70 = java.util.Locale.US;
        java.lang.String str71 = locale69.getDisplayScript(locale70);
        java.lang.String str72 = dateTimeField67.getAsShortText(432000000L, locale70);
        long long74 = dateTimeField67.roundCeiling(1970L);
        java.util.Locale locale78 = new java.util.Locale("hourOfHalfday", "YearMonthDayTime");
        java.lang.String str79 = dateTimeField67.getAsText(86400467L, locale78);
        org.joda.time.Instant instant82 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime83 = instant82.toDateTime();
        org.joda.time.DateTime.Property property84 = dateTime83.era();
        org.joda.time.DateTime dateTime85 = property84.withMinimumValue();
        int int86 = property84.getMaximumValueOverall();
        java.util.Locale locale87 = java.util.Locale.ENGLISH;
        java.lang.String str88 = locale87.getScript();
        java.lang.String str89 = locale87.getDisplayCountry();
        int int90 = property84.getMaximumShortTextLength(locale87);
        java.util.Locale locale91 = java.util.Locale.TAIWAN;
        java.lang.String str92 = locale87.getDisplayName(locale91);
        java.lang.String str93 = dateTimeField67.getAsText(43200009L, locale91);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime12", (instant11.compareTo(dateTime12) == 0) == instant11.equals(dateTime12));
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0695");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType3, chronology4);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) (short) 0, periodType3, chronology6);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((long) (short) 10, periodType9);
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant13 = instant12.toInstant();
        org.joda.time.DateTime dateTime14 = instant13.toDateTimeISO();
        org.joda.time.Duration duration15 = period10.toDurationFrom((org.joda.time.ReadableInstant) dateTime14);
        org.joda.time.Duration duration18 = new org.joda.time.Duration((-1L), (long) 23);
        org.joda.time.Period period20 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period22 = period20.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration24 = period22.toDurationTo(readableInstant23);
        org.joda.time.Duration duration27 = duration24.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = duration27.toPeriodFrom(readableInstant28);
        org.joda.time.Duration duration30 = duration18.minus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration15.plus((org.joda.time.ReadableDuration) duration18);
        mutablePeriod7.add((org.joda.time.ReadableDuration) duration18);
        long long33 = duration18.getStandardHours();
        org.joda.time.Period period34 = duration18.toPeriod();
        java.lang.String str35 = duration18.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime14", (instant12.compareTo(dateTime14) == 0) == instant12.equals(dateTime14));
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0696");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.DateTime.Property property5 = dateTime4.centuryOfEra();
        boolean boolean7 = property5.equals((java.lang.Object) "1969-12-31T23:59:59.899Z");
        java.util.Locale locale8 = java.util.Locale.KOREA;
        int int9 = property5.getMaximumTextLength(locale8);
        org.joda.time.DateTimeField dateTimeField10 = property5.getField();
        org.joda.time.Interval interval11 = property5.toInterval();
        org.joda.time.DateTime dateTime12 = property5.roundCeilingCopy();
        org.joda.time.Instant instant14 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant14.toDateTime();
        org.joda.time.DateTime.Property property16 = dateTime15.era();
        org.joda.time.DateTime dateTime17 = dateTime15.withTimeAtStartOfDay();
        org.joda.time.Instant instant18 = dateTime15.toInstant();
        org.joda.time.DateMidnight dateMidnight19 = dateTime15.toDateMidnight();
        org.joda.time.DateTime dateTime21 = dateTime15.minusSeconds((int) ' ');
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime12, (org.joda.time.ReadableInstant) dateTime21);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0697");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property16 = dateTime15.monthOfYear();
        org.joda.time.DateTime.Property property17 = dateTime15.weekyear();
        java.lang.Object obj18 = null;
        org.joda.time.Instant instant19 = new org.joda.time.Instant(obj18);
        org.joda.time.DateTimeZone dateTimeZone20 = instant19.getZone();
        java.lang.String str21 = dateTimeZone20.toString();
        java.lang.String str23 = dateTimeZone20.getName((long) 10);
        java.lang.String str25 = dateTimeZone20.getName((long) 8);
        int int27 = dateTimeZone20.getOffsetFromLocal((long) (short) -1);
        org.joda.time.DateTime dateTime28 = dateTime15.withZone(dateTimeZone20);
        org.joda.time.DateTime.Property property29 = dateTime28.weekOfWeekyear();
        org.joda.time.DateTime dateTime30 = dateTime28.toDateTimeISO();
        int int31 = dateTime28.getDayOfMonth();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0698");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        java.util.TimeZone timeZone3 = null;
        org.joda.time.DateTimeZone dateTimeZone4 = org.joda.time.DateTimeZone.forTimeZone(timeZone3);
        org.joda.time.MutableDateTime mutableDateTime5 = dateTime2.toMutableDateTime(dateTimeZone4);
        int int7 = dateTimeZone4.getOffset((long) 26235748);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0699");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant3, periodType4);
        org.joda.time.Days days6 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType7 = org.joda.time.DurationFieldType.minutes();
        int int8 = days6.get(durationFieldType7);
        mutablePeriod5.add(durationFieldType7, 8);
        org.joda.time.ReadablePeriod readablePeriod11 = null;
        mutablePeriod5.add(readablePeriod11);
        int int13 = mutablePeriod5.getMonths();
        org.joda.time.ReadableInterval readableInterval14 = null;
        mutablePeriod5.add(readableInterval14);
        org.joda.time.Days days16 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType17 = org.joda.time.DurationFieldType.minutes();
        int int18 = days16.get(durationFieldType17);
        org.joda.time.MutablePeriod mutablePeriod19 = days16.toMutablePeriod();
        org.joda.time.Days days21 = days16.multipliedBy((int) (byte) 1);
        org.joda.time.Duration duration22 = days16.toStandardDuration();
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Instant instant25 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant27 = instant25.minus(100L);
        java.lang.String str28 = instant27.toString();
        org.joda.time.Duration duration31 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period32 = duration31.toPeriod();
        org.joda.time.Duration duration34 = duration31.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = duration31.toPeriodTo(readableInstant35);
        org.joda.time.Duration duration38 = duration31.withMillis((long) (short) 0);
        org.joda.time.Instant instant39 = instant27.plus((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Instant instant41 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime42 = instant41.toDateTime();
        org.joda.time.DateTime.Property property43 = dateTime42.era();
        org.joda.time.DateTime dateTime44 = dateTime42.withTimeAtStartOfDay();
        org.joda.time.Duration duration47 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.PeriodType periodType49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration47, readableInstant48, periodType49);
        mutablePeriod50.setMonths((int) '4');
        org.joda.time.DateTime dateTime53 = dateTime42.plus((org.joda.time.ReadablePeriod) mutablePeriod50);
        org.joda.time.Instant instant55 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant56 = instant55.toInstant();
        boolean boolean57 = dateTime42.isEqual((org.joda.time.ReadableInstant) instant56);
        boolean boolean58 = instant39.isAfter((org.joda.time.ReadableInstant) instant56);
        org.joda.time.Instant instant59 = instant56.toInstant();
        org.joda.time.Period period60 = duration22.toPeriodTo((org.joda.time.ReadableInstant) instant56);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant25 and dateTime42", (instant25.compareTo(dateTime42) == 0) == instant25.equals(dateTime42));
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0700");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.DateTime dateTime6 = dateTime2.withWeekOfWeekyear(8);
        org.joda.time.DateTime dateTime8 = dateTime2.plusDays(100);
        org.joda.time.LocalTime localTime9 = dateTime2.toLocalTime();
        org.joda.time.DateTime.Property property10 = dateTime2.dayOfWeek();
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTime.Property property14 = dateTime13.era();
        org.joda.time.DateTime dateTime15 = dateTime13.withTimeAtStartOfDay();
        org.joda.time.Duration duration18 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration18, readableInstant19, periodType20);
        mutablePeriod21.setMonths((int) '4');
        org.joda.time.DateTime dateTime24 = dateTime13.plus((org.joda.time.ReadablePeriod) mutablePeriod21);
        org.joda.time.DateTime dateTime26 = dateTime13.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property27 = dateTime26.monthOfYear();
        org.joda.time.DateTime.Property property28 = dateTime26.weekyear();
        java.lang.Object obj29 = null;
        org.joda.time.Instant instant30 = new org.joda.time.Instant(obj29);
        org.joda.time.DateTimeZone dateTimeZone31 = instant30.getZone();
        java.lang.String str32 = dateTimeZone31.toString();
        java.lang.String str34 = dateTimeZone31.getName((long) 10);
        java.lang.String str36 = dateTimeZone31.getName((long) 8);
        int int38 = dateTimeZone31.getOffsetFromLocal((long) (short) -1);
        org.joda.time.DateTime dateTime39 = dateTime26.withZone(dateTimeZone31);
        java.lang.String str40 = dateTimeZone31.getID();
        java.lang.String str41 = dateTimeZone31.toString();
        org.joda.time.DateTime dateTime42 = dateTime2.withZone(dateTimeZone31);
        int int43 = dateTime42.getSecondOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0701");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant3 = instant1.minus(100L);
        java.lang.String str4 = instant3.toString();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period8 = duration7.toPeriod();
        org.joda.time.Duration duration10 = duration7.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = duration7.toPeriodTo(readableInstant11);
        org.joda.time.Duration duration14 = duration7.withMillis((long) (short) 0);
        org.joda.time.Instant instant15 = instant3.plus((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Instant instant17 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime18 = instant17.toDateTime();
        org.joda.time.DateTime.Property property19 = dateTime18.era();
        org.joda.time.DateTime dateTime20 = dateTime18.withTimeAtStartOfDay();
        org.joda.time.Duration duration23 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, readableInstant24, periodType25);
        mutablePeriod26.setMonths((int) '4');
        org.joda.time.DateTime dateTime29 = dateTime18.plus((org.joda.time.ReadablePeriod) mutablePeriod26);
        org.joda.time.Instant instant31 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant32 = instant31.toInstant();
        boolean boolean33 = dateTime18.isEqual((org.joda.time.ReadableInstant) instant32);
        boolean boolean34 = instant15.isAfter((org.joda.time.ReadableInstant) instant32);
        org.joda.time.Instant instant36 = instant15.minus(0L);
        org.joda.time.Instant instant38 = instant15.plus((-43199999L));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime18", (instant1.compareTo(dateTime18) == 0) == instant1.equals(dateTime18));
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0702");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant3, periodType4);
        org.joda.time.Days days6 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType7 = org.joda.time.DurationFieldType.minutes();
        int int8 = days6.get(durationFieldType7);
        mutablePeriod5.add(durationFieldType7, 8);
        int int11 = mutablePeriod5.getHours();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        org.joda.time.DateTime.Property property14 = dateTime13.yearOfEra();
        org.joda.time.Interval interval15 = property14.toInterval();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.DateTime dateTime17 = new org.joda.time.DateTime(chronology16);
        org.joda.time.DateTime.Property property18 = dateTime17.yearOfEra();
        org.joda.time.Interval interval19 = property18.toInterval();
        boolean boolean20 = interval15.contains((org.joda.time.ReadableInterval) interval19);
        java.lang.String str21 = interval15.toString();
        mutablePeriod5.add((org.joda.time.ReadableInterval) interval15);
        int int23 = mutablePeriod5.getMillis();
        mutablePeriod5.setPeriod((long) (byte) 10);
        mutablePeriod5.addSeconds(100);
        org.joda.time.Instant instant30 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime31 = instant30.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone32 = null;
        org.joda.time.DateTime dateTime33 = dateTime31.withZoneRetainFields(dateTimeZone32);
        org.joda.time.Instant instant35 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime36 = instant35.toDateTime();
        org.joda.time.DateTime.Property property37 = dateTime36.era();
        org.joda.time.DateTime dateTime38 = dateTime36.withTimeAtStartOfDay();
        org.joda.time.Duration duration41 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.PeriodType periodType43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration41, readableInstant42, periodType43);
        mutablePeriod44.setMonths((int) '4');
        org.joda.time.DateTime dateTime47 = dateTime36.plus((org.joda.time.ReadablePeriod) mutablePeriod44);
        org.joda.time.DateTime dateTime49 = dateTime36.minusWeeks((int) (byte) 1);
        int int50 = dateTime33.compareTo((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.DateTime.Property property51 = dateTime36.minuteOfHour();
        org.joda.time.DateTime dateTime53 = dateTime36.withYear(1969);
        org.joda.time.Chronology chronology54 = dateTime53.getChronology();
        org.joda.time.DateTimeField dateTimeField55 = chronology54.year();
        org.joda.time.DateTimeField dateTimeField56 = chronology54.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField57 = chronology54.year();
        mutablePeriod5.add(38716L, chronology54);
        org.joda.time.DateTimeField dateTimeField59 = chronology54.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField60 = chronology54.weekyear();
        org.joda.time.DateTimeField dateTimeField61 = chronology54.minuteOfHour();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant30 and dateTime31", (instant30.compareTo(dateTime31) == 0) == instant30.equals(dateTime31));
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0703");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.MutableInterval mutableInterval4 = interval3.toMutableInterval();
        long long5 = interval3.getStartMillis();
        long long6 = interval3.toDurationMillis();
        org.joda.time.Duration duration8 = new org.joda.time.Duration(432000000L);
        java.lang.String str9 = duration8.toString();
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.DateTime dateTime14 = dateTime12.withTimeAtStartOfDay();
        org.joda.time.Duration duration17 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration17, readableInstant18, periodType19);
        mutablePeriod20.setMonths((int) '4');
        org.joda.time.DateTime dateTime23 = dateTime12.plus((org.joda.time.ReadablePeriod) mutablePeriod20);
        java.lang.Object obj24 = null;
        org.joda.time.Instant instant25 = new org.joda.time.Instant(obj24);
        org.joda.time.DateTimeZone dateTimeZone26 = instant25.getZone();
        java.lang.String str27 = dateTimeZone26.toString();
        int int29 = dateTimeZone26.getOffset(1L);
        boolean boolean31 = dateTimeZone26.isStandardOffset(0L);
        org.joda.time.DateTime dateTime32 = dateTime12.withZoneRetainFields(dateTimeZone26);
        org.joda.time.DateTime dateTime34 = dateTime32.plusYears(1969);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType39, chronology40);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(1L, (long) 10, periodType39, chronology42);
        org.joda.time.PeriodType periodType44 = periodType39.withDaysRemoved();
        org.joda.time.Period period45 = duration8.toPeriodTo((org.joda.time.ReadableInstant) dateTime34, periodType39);
        org.joda.time.Instant instant47 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime48 = instant47.toDateTime();
        org.joda.time.DateTime.Property property49 = dateTime48.era();
        org.joda.time.DateTime dateTime50 = dateTime48.withTimeAtStartOfDay();
        org.joda.time.Instant instant51 = dateTime48.toInstant();
        org.joda.time.DateTime dateTime53 = dateTime48.withMillis((long) '4');
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.standard();
        org.joda.time.Period period55 = duration8.toPeriodTo((org.joda.time.ReadableInstant) dateTime48, periodType54);
        org.joda.time.PeriodType periodType56 = periodType54.withWeeksRemoved();
        org.joda.time.Period period57 = interval3.toPeriod(periodType56);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant25", (dateTime1.compareTo(instant25) == 0) == dateTime1.equals(instant25));
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0704");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime dateTime22 = dateTime4.toDateTimeISO();
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant26 = instant24.minus(100L);
        java.lang.String str27 = instant26.toString();
        org.joda.time.Duration duration30 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period31 = duration30.toPeriod();
        org.joda.time.Duration duration33 = duration30.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = duration30.toPeriodTo(readableInstant34);
        org.joda.time.Duration duration37 = duration30.withMillis((long) (short) 0);
        org.joda.time.Instant instant38 = instant26.plus((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) instant26);
        org.joda.time.DateTime dateTime41 = dateTime22.withWeekOfWeekyear(7);
        long long42 = dateTime22.getMillis();
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes46 = minutes44.minus((int) (short) -1);
        boolean boolean47 = minutes43.isGreaterThan(minutes44);
        org.joda.time.Minutes minutes48 = null;
        org.joda.time.Minutes minutes49 = minutes44.minus(minutes48);
        org.joda.time.Minutes minutes51 = minutes44.minus((int) (byte) -1);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes55 = minutes53.minus((int) (short) -1);
        boolean boolean56 = minutes52.isGreaterThan(minutes53);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.TWO;
        boolean boolean58 = minutes52.isLessThan(minutes57);
        boolean boolean59 = minutes44.isLessThan(minutes52);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes63 = minutes61.minus((int) (short) -1);
        boolean boolean64 = minutes60.isGreaterThan(minutes61);
        org.joda.time.Minutes minutes65 = null;
        org.joda.time.Minutes minutes66 = minutes61.minus(minutes65);
        org.joda.time.Minutes minutes68 = minutes61.plus((int) (short) 1);
        org.joda.time.Minutes minutes70 = minutes68.plus((int) (short) 1);
        boolean boolean71 = minutes44.isLessThan(minutes70);
        org.joda.time.Minutes minutes73 = minutes70.plus((int) (short) 0);
        org.joda.time.DateTime dateTime74 = dateTime22.minus((org.joda.time.ReadablePeriod) minutes73);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime22", (instant1.compareTo(dateTime22) == 0) == instant1.equals(dateTime22));
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0705");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (short) 10, periodType1);
        org.joda.time.Instant instant4 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant5 = instant4.toInstant();
        org.joda.time.DateTime dateTime6 = instant5.toDateTimeISO();
        org.joda.time.Duration duration7 = period2.toDurationFrom((org.joda.time.ReadableInstant) dateTime6);
        org.joda.time.Period period9 = period2.plusMonths(1969);
        org.joda.time.Period period11 = period9.withMinutes(2);
        org.joda.time.Period period13 = period9.multipliedBy(23);
        org.joda.time.Period period14 = period9.negated();
        org.joda.time.Period period16 = period9.minusMillis((int) (short) 0);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant4 and dateTime6", (instant4.compareTo(dateTime6) == 0) == instant4.equals(dateTime6));
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0706");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration4 = null;
        boolean boolean5 = duration2.isEqual(readableDuration4);
        org.joda.time.Duration duration7 = duration2.minus((long) 1);
        org.joda.time.Duration duration9 = duration7.minus((long) '4');
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Duration duration22 = duration19.plus((long) (byte) 0);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType30, chronology31);
        org.joda.time.PeriodType periodType33 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, (org.joda.time.ReadableInstant) dateTime25, periodType33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime12, (org.joda.time.ReadableDuration) duration16, periodType33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime12, periodType36);
        org.joda.time.TimeOfDay timeOfDay38 = dateTime12.toTimeOfDay();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.DateTime dateTime40 = timeOfDay38.toDateTime(readableInstant39);
        org.joda.time.Duration duration43 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds44 = duration43.toStandardSeconds();
        org.joda.time.Instant instant46 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant48 = instant46.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime49 = instant46.toMutableDateTimeISO();
        org.joda.time.Period period50 = duration43.toPeriodTo((org.joda.time.ReadableInstant) instant46);
        org.joda.time.Instant instant52 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime53 = instant52.toDateTime();
        org.joda.time.DateTime.Property property54 = dateTime53.era();
        org.joda.time.DateTime dateTime55 = dateTime53.withTimeAtStartOfDay();
        org.joda.time.Duration duration58 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.PeriodType periodType60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration58, readableInstant59, periodType60);
        mutablePeriod61.setMonths((int) '4');
        org.joda.time.DateTime dateTime64 = dateTime53.plus((org.joda.time.ReadablePeriod) mutablePeriod61);
        org.joda.time.DateTime dateTime66 = dateTime53.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property67 = dateTime66.monthOfYear();
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType72, chronology73);
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod(1L, (long) 10, periodType72, chronology75);
        org.joda.time.PeriodType periodType77 = periodType72.withDaysRemoved();
        org.joda.time.Period period78 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, (org.joda.time.ReadableInstant) dateTime66, periodType72);
        org.joda.time.Instant instant80 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant81 = instant80.toInstant();
        org.joda.time.DateTime dateTime82 = instant81.toDateTimeISO();
        org.joda.time.Period period83 = duration43.toPeriodTo((org.joda.time.ReadableInstant) dateTime82);
        org.joda.time.DateTimeFieldType dateTimeFieldType84 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        int int85 = dateTime82.get(dateTimeFieldType84);
        boolean boolean86 = timeOfDay38.isSupported(dateTimeFieldType84);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime12", (instant11.compareTo(dateTime12) == 0) == instant11.equals(dateTime12));
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0707");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.DateTime.Property property5 = dateTime4.weekOfWeekyear();
        int int6 = dateTime4.getDayOfYear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime4", (instant1.compareTo(dateTime4) == 0) == instant1.equals(dateTime4));
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0708");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType1 = org.joda.time.DurationFieldType.minutes();
        int int2 = days0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = days0.toMutablePeriod();
        org.joda.time.Days days5 = days0.multipliedBy((int) (byte) 1);
        org.joda.time.Duration duration6 = days0.toStandardDuration();
        org.joda.time.Instant instant8 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant10 = instant8.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime11 = instant8.toMutableDateTimeISO();
        int int12 = mutableDateTime11.getDayOfWeek();
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, (org.joda.time.ReadableInstant) mutableDateTime11);
        mutablePeriod13.addWeeks((int) (byte) 1);
        mutablePeriod13.setDays(12);
        mutablePeriod13.setPeriod(26235748, 70, 78719999, 0, 24, (-32), (int) (byte) 1, (int) '#');
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant8 and mutableDateTime11", (instant8.compareTo(mutableDateTime11) == 0) == instant8.equals(mutableDateTime11));
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0709");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZone(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean11 = dateTime7.isSupported(dateTimeFieldType10);
        org.joda.time.DateTime.Property property12 = dateTime2.property(dateTimeFieldType10);
        org.joda.time.DateTimeZone dateTimeZone13 = dateTime2.getZone();
        org.joda.time.LocalDateTime localDateTime14 = dateTime2.toLocalDateTime();
        java.lang.Object obj15 = null;
        org.joda.time.Instant instant16 = new org.joda.time.Instant(obj15);
        org.joda.time.DateTimeZone dateTimeZone17 = instant16.getZone();
        java.lang.String str18 = dateTimeZone17.toString();
        int int20 = dateTimeZone17.getOffset(1L);
        boolean boolean22 = dateTimeZone17.isStandardOffset(0L);
        java.lang.String str24 = dateTimeZone17.getNameKey((long) 1);
        org.joda.time.DateTime dateTime25 = new org.joda.time.DateTime(dateTimeZone17);
        java.util.TimeZone timeZone26 = null;
        org.joda.time.DateTimeZone dateTimeZone27 = org.joda.time.DateTimeZone.forTimeZone(timeZone26);
        int int29 = dateTimeZone27.getOffset((long) 365);
        org.joda.time.Instant instant31 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime32 = instant31.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone33 = null;
        org.joda.time.DateTime dateTime34 = dateTime32.withZone(dateTimeZone33);
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime37 = instant36.toDateTime();
        org.joda.time.DateTime.Property property38 = dateTime37.era();
        org.joda.time.DateTime dateTime39 = dateTime37.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType40 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean41 = dateTime37.isSupported(dateTimeFieldType40);
        org.joda.time.DateTime.Property property42 = dateTime32.property(dateTimeFieldType40);
        org.joda.time.DateTimeZone dateTimeZone43 = dateTime32.getZone();
        org.joda.time.LocalDateTime localDateTime44 = dateTime32.toLocalDateTime();
        boolean boolean45 = dateTimeZone27.isLocalDateTimeGap(localDateTime44);
        boolean boolean46 = dateTimeZone17.isLocalDateTimeGap(localDateTime44);
        org.joda.time.Hours hours47 = org.joda.time.Hours.hoursBetween((org.joda.time.ReadablePartial) localDateTime14, (org.joda.time.ReadablePartial) localDateTime44);
        org.joda.time.Chronology chronology48 = localDateTime14.getChronology();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0710");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int9 = mutablePeriod8.getDays();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        org.joda.time.DateTime.Property property14 = dateTime13.yearOfEra();
        org.joda.time.Interval interval15 = property14.toInterval();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.DateTime dateTime17 = new org.joda.time.DateTime(chronology16);
        org.joda.time.DateTime.Property property18 = dateTime17.yearOfEra();
        org.joda.time.Interval interval19 = property18.toInterval();
        boolean boolean20 = interval15.contains((org.joda.time.ReadableInterval) interval19);
        org.joda.time.Chronology chronology21 = interval19.getChronology();
        mutablePeriod8.setPeriod((long) 'u', (long) 1969, chronology21);
        org.joda.time.DateTimeField dateTimeField23 = chronology21.millisOfDay();
        org.joda.time.DateTimeField dateTimeField24 = chronology21.yearOfCentury();
        org.joda.time.Duration duration27 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds28 = duration27.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration29 = null;
        boolean boolean30 = duration27.isEqual(readableDuration29);
        org.joda.time.Duration duration32 = duration27.minus((long) 1);
        org.joda.time.Duration duration34 = duration32.minus((long) '4');
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime37 = instant36.toDateTime();
        org.joda.time.DateTime.Property property38 = dateTime37.era();
        org.joda.time.Duration duration41 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration44 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period45 = duration44.toPeriod();
        org.joda.time.Duration duration47 = duration44.plus((long) (byte) 0);
        org.joda.time.Instant instant49 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime50 = instant49.toDateTime();
        boolean boolean52 = dateTime50.isEqual(10L);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType55, chronology56);
        org.joda.time.PeriodType periodType58 = periodType55.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration47, (org.joda.time.ReadableInstant) dateTime50, periodType58);
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime37, (org.joda.time.ReadableDuration) duration41, periodType58);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, (org.joda.time.ReadableInstant) dateTime37, periodType61);
        org.joda.time.TimeOfDay timeOfDay63 = dateTime37.toTimeOfDay();
        int[] intArray65 = chronology21.get((org.joda.time.ReadablePartial) timeOfDay63, (long) (-1));
        int int66 = timeOfDay63.size();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant36 and dateTime37", (instant36.compareTo(dateTime37) == 0) == instant36.equals(dateTime37));
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0711");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.ReadablePartial readablePartial4 = null;
        org.joda.time.DateTime dateTime5 = dateTime2.withFields(readablePartial4);
        org.joda.time.DateTime dateTime7 = dateTime2.withYearOfEra(292278993);
        org.joda.time.DateTime.Property property8 = dateTime7.year();
        org.joda.time.Instant instant10 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime11 = instant10.toDateTime();
        org.joda.time.TimeOfDay timeOfDay12 = dateTime11.toTimeOfDay();
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime((java.lang.Object) dateTime11);
        org.joda.time.DateTimeFieldType dateTimeFieldType14 = org.joda.time.DateTimeFieldType.weekyear();
        int int15 = dateTime13.get(dateTimeFieldType14);
        org.joda.time.DateTime dateTime17 = dateTime13.withSecondOfMinute(49);
        int int18 = property8.getDifference((org.joda.time.ReadableInstant) dateTime17);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0712");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        org.joda.time.DateTime.Property property21 = dateTime20.era();
        org.joda.time.DateTime dateTime22 = dateTime20.withTimeAtStartOfDay();
        org.joda.time.Instant instant23 = dateTime20.toInstant();
        org.joda.time.DateTime dateTime25 = dateTime20.withMillis((long) '4');
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.DateTime dateTime28 = dateTime20.minusMillis((-1));
        boolean boolean30 = dateTime20.isAfter((long) 8);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.DateTime dateTime32 = new org.joda.time.DateTime(chronology31);
        org.joda.time.DateTime.Property property33 = dateTime32.yearOfEra();
        org.joda.time.Interval interval34 = property33.toInterval();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.DateTime dateTime36 = new org.joda.time.DateTime(chronology35);
        org.joda.time.DateTime.Property property37 = dateTime36.yearOfEra();
        org.joda.time.Interval interval38 = property37.toInterval();
        boolean boolean39 = interval34.contains((org.joda.time.ReadableInterval) interval38);
        org.joda.time.Chronology chronology40 = interval38.getChronology();
        org.joda.time.DurationField durationField41 = chronology40.weeks();
        org.joda.time.DateTime dateTime42 = new org.joda.time.DateTime(chronology40);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes46 = minutes44.minus((int) (short) -1);
        boolean boolean47 = minutes43.isGreaterThan(minutes44);
        org.joda.time.Minutes minutes48 = null;
        org.joda.time.Minutes minutes49 = minutes44.minus(minutes48);
        int int50 = minutes44.getMinutes();
        org.joda.time.DateTime dateTime52 = dateTime42.withPeriodAdded((org.joda.time.ReadablePeriod) minutes44, 19);
        int int53 = dateTime20.compareTo((org.joda.time.ReadableInstant) dateTime52);
        org.joda.time.DateTime dateTime55 = dateTime20.withYear(24);
        boolean boolean56 = dateTime20.isEqualNow();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0713");
        java.lang.Object obj0 = null;
        org.joda.time.Instant instant1 = new org.joda.time.Instant(obj0);
        org.joda.time.DateTimeZone dateTimeZone2 = instant1.getZone();
        org.joda.time.Duration duration5 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period6 = duration5.toPeriod();
        org.joda.time.Duration duration8 = duration5.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = duration5.toPeriodTo(readableInstant9);
        org.joda.time.Duration duration12 = duration5.withMillis((long) (short) 0);
        org.joda.time.Duration duration15 = duration5.withDurationAdded((long) 1, (int) ' ');
        org.joda.time.Instant instant17 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime18 = instant17.toDateTime();
        boolean boolean20 = dateTime18.isEqual(10L);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, (org.joda.time.ReadableInstant) dateTime18, periodType21);
        org.joda.time.DateTime dateTime24 = dateTime18.minusSeconds((int) 'a');
        org.joda.time.DateTime dateTime26 = dateTime18.withMinuteOfHour(0);
        int int27 = dateTimeZone2.getOffset((org.joda.time.ReadableInstant) dateTime18);
        org.joda.time.DateTime dateTime29 = dateTime18.withMillisOfSecond((int) (byte) 100);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.DateTime dateTime31 = new org.joda.time.DateTime(chronology30);
        org.joda.time.DateTime.Property property32 = dateTime31.yearOfEra();
        org.joda.time.Interval interval33 = property32.toInterval();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime(chronology34);
        org.joda.time.DateTime.Property property36 = dateTime35.yearOfEra();
        org.joda.time.Interval interval37 = property36.toInterval();
        boolean boolean38 = interval33.contains((org.joda.time.ReadableInterval) interval37);
        java.lang.String str39 = interval33.toString();
        long long40 = interval33.getEndMillis();
        org.joda.time.Instant instant42 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime43 = instant42.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone44 = null;
        org.joda.time.DateTime dateTime45 = dateTime43.withZoneRetainFields(dateTimeZone44);
        org.joda.time.Instant instant47 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime48 = instant47.toDateTime();
        org.joda.time.DateTime.Property property49 = dateTime48.era();
        org.joda.time.DateTime dateTime50 = dateTime48.withTimeAtStartOfDay();
        org.joda.time.Duration duration53 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.PeriodType periodType55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration53, readableInstant54, periodType55);
        mutablePeriod56.setMonths((int) '4');
        org.joda.time.DateTime dateTime59 = dateTime48.plus((org.joda.time.ReadablePeriod) mutablePeriod56);
        org.joda.time.DateTime dateTime61 = dateTime48.minusWeeks((int) (byte) 1);
        int int62 = dateTime45.compareTo((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.DateTime.Property property63 = dateTime48.minuteOfHour();
        org.joda.time.DateTime dateTime65 = dateTime48.withYear(1969);
        org.joda.time.Chronology chronology66 = dateTime65.getChronology();
        boolean boolean67 = interval33.isBefore((org.joda.time.ReadableInstant) dateTime65);
        int int68 = dateTime65.getDayOfMonth();
        org.joda.time.Duration duration69 = new org.joda.time.Duration((org.joda.time.ReadableInstant) dateTime29, (org.joda.time.ReadableInstant) dateTime65);
        int int70 = dateTime65.getMillisOfSecond();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime31", (instant1.compareTo(dateTime31) == 0) == instant1.equals(dateTime31));
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0714");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.TimeOfDay timeOfDay6 = dateTime2.toTimeOfDay();
        org.joda.time.DateTime.Property property7 = dateTime2.millisOfSecond();
        int int8 = property7.getMaximumValueOverall();
        org.joda.time.DurationField durationField9 = property7.getLeapDurationField();
        org.joda.time.DateTime dateTime10 = property7.roundCeilingCopy();
        int int11 = dateTime10.getDayOfYear();
        org.joda.time.Instant instant13 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant14 = instant13.toInstant();
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTime.Property property18 = dateTime17.era();
        org.joda.time.DateTime dateTime19 = dateTime17.withTimeAtStartOfDay();
        org.joda.time.Duration duration22 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, readableInstant23, periodType24);
        mutablePeriod25.setMonths((int) '4');
        org.joda.time.DateTime dateTime28 = dateTime17.plus((org.joda.time.ReadablePeriod) mutablePeriod25);
        org.joda.time.LocalDate localDate29 = dateTime17.toLocalDate();
        int int30 = instant13.compareTo((org.joda.time.ReadableInstant) dateTime17);
        org.joda.time.DateTime dateTime32 = dateTime17.minusWeeks(23);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime(chronology34);
        org.joda.time.DateTime.Property property36 = dateTime35.yearOfEra();
        org.joda.time.Interval interval37 = property36.toInterval();
        java.util.Locale locale38 = java.util.Locale.KOREAN;
        java.lang.String str39 = property36.getAsText(locale38);
        java.util.Set<java.lang.String> strSet40 = locale38.getUnicodeLocaleAttributes();
        java.lang.String str41 = dateTime32.toString("8", locale38);
        org.joda.time.Hours hours42 = org.joda.time.Hours.hoursBetween((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime32);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime10", (instant1.compareTo(dateTime10) == 0) == instant1.equals(dateTime10));
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0715");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.Period period15 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period17 = period15.minusMonths((int) (short) 10);
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Period period20 = period15.withFieldAdded(durationFieldType18, (int) (short) 100);
        mutablePeriod10.set(durationFieldType18, 1439);
        mutablePeriod10.addWeeks(10);
        mutablePeriod10.addMillis((int) 'a');
        mutablePeriod10.setDays((int) (byte) 1);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0716");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = duration2.toPeriodTo(readableInstant6);
        org.joda.time.Duration duration10 = duration2.withDurationAdded((long) (short) -1, (int) (byte) 100);
        org.joda.time.Seconds seconds11 = duration10.toStandardSeconds();
        org.joda.time.Seconds seconds13 = seconds11.minus(23);
        org.joda.time.Seconds seconds15 = seconds11.plus((-2147483647));
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.DateTime dateTime17 = new org.joda.time.DateTime(chronology16);
        org.joda.time.DateTime.Property property18 = dateTime17.yearOfEra();
        org.joda.time.Interval interval19 = property18.toInterval();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.DateTime dateTime21 = new org.joda.time.DateTime(chronology20);
        org.joda.time.DateTime.Property property22 = dateTime21.yearOfEra();
        org.joda.time.Interval interval23 = property22.toInterval();
        boolean boolean24 = interval19.contains((org.joda.time.ReadableInterval) interval23);
        java.lang.Object obj25 = null;
        org.joda.time.Instant instant26 = new org.joda.time.Instant(obj25);
        org.joda.time.DateTimeZone dateTimeZone27 = instant26.getZone();
        java.lang.String str28 = dateTimeZone27.toString();
        org.joda.time.DateTime dateTime29 = new org.joda.time.DateTime(dateTimeZone27);
        boolean boolean30 = interval19.contains((org.joda.time.ReadableInstant) dateTime29);
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime33 = instant32.toDateTime();
        org.joda.time.DateTime.Property property34 = dateTime33.era();
        boolean boolean35 = interval19.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval19);
        org.joda.time.DurationFieldType durationFieldType37 = seconds36.getFieldType();
        boolean boolean38 = seconds15.isLessThan(seconds36);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime17 and instant26", (dateTime17.compareTo(instant26) == 0) == dateTime17.equals(instant26));
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0717");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.DateTime.Property property5 = dateTime4.weekOfWeekyear();
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant9 = instant7.minus(100L);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime4, (org.joda.time.ReadableInstant) instant7);
        org.joda.time.DateTimeZone dateTimeZone11 = dateTime4.getZone();
        java.lang.String str13 = dateTimeZone11.getName((long) 'a');
        int int15 = dateTimeZone11.getOffset(12L);
        org.joda.time.DateTime dateTime16 = org.joda.time.DateTime.now(dateTimeZone11);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0718");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property16 = dateTime15.monthOfYear();
        org.joda.time.DateTime.Property property17 = dateTime15.weekyear();
        org.joda.time.DateMidnight dateMidnight18 = dateTime15.toDateMidnight();
        org.joda.time.DateTime.Property property19 = dateTime15.era();
        org.joda.time.DateTime dateTime21 = property19.addWrapFieldToCopy(31);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0719");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (short) 10, periodType1);
        org.joda.time.Instant instant4 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant5 = instant4.toInstant();
        org.joda.time.DateTime dateTime6 = instant5.toDateTimeISO();
        org.joda.time.Duration duration7 = period2.toDurationFrom((org.joda.time.ReadableInstant) dateTime6);
        org.joda.time.Period period9 = period2.plusMonths(1969);
        org.joda.time.Period period11 = period9.withMinutes(2);
        org.joda.time.Period period13 = period9.minusMonths((-1));
        org.joda.time.Period period15 = period13.plusHours((-2147483647));
        org.joda.time.Period period17 = period15.withSeconds((int) (short) 100);
        org.joda.time.Period period19 = period15.plusYears(9678);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant4 and dateTime6", (instant4.compareTo(dateTime6) == 0) == instant4.equals(dateTime6));
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0720");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.Interval interval7 = property6.toInterval();
        boolean boolean8 = interval3.contains((org.joda.time.ReadableInterval) interval7);
        java.lang.Object obj9 = null;
        org.joda.time.Instant instant10 = new org.joda.time.Instant(obj9);
        org.joda.time.DateTimeZone dateTimeZone11 = instant10.getZone();
        java.lang.String str12 = dateTimeZone11.toString();
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(dateTimeZone11);
        boolean boolean14 = interval3.contains((org.joda.time.ReadableInstant) dateTime13);
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTime.Property property18 = dateTime17.era();
        boolean boolean19 = interval3.contains((org.joda.time.ReadableInstant) dateTime17);
        org.joda.time.MutableInterval mutableInterval20 = interval3.toMutableInterval();
        org.joda.time.ReadableInterval readableInterval21 = null;
        boolean boolean22 = mutableInterval20.contains(readableInterval21);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant10", (dateTime1.compareTo(instant10) == 0) == dateTime1.equals(instant10));
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0721");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes21 = minutes19.minus((int) (short) -1);
        boolean boolean22 = minutes18.isGreaterThan(minutes19);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        boolean boolean24 = minutes18.isLessThan(minutes23);
        org.joda.time.DateTime dateTime25 = dateTime8.plus((org.joda.time.ReadablePeriod) minutes18);
        org.joda.time.DateTime.Property property26 = dateTime25.year();
        boolean boolean27 = property26.isLeap();
        org.joda.time.DateTime dateTime29 = property26.setCopy(86399);
        org.joda.time.DateTime dateTime30 = property26.roundHalfCeilingCopy();
        int int31 = property26.getMaximumValue();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0722");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        long long16 = dateTime2.getMillis();
        int int17 = dateTime2.getYearOfCentury();
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone21 = null;
        org.joda.time.DateTime dateTime22 = dateTime20.withZoneRetainFields(dateTimeZone21);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        org.joda.time.DateTime.Property property26 = dateTime25.era();
        org.joda.time.DateTime dateTime27 = dateTime25.withTimeAtStartOfDay();
        org.joda.time.Duration duration30 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration30, readableInstant31, periodType32);
        mutablePeriod33.setMonths((int) '4');
        org.joda.time.DateTime dateTime36 = dateTime25.plus((org.joda.time.ReadablePeriod) mutablePeriod33);
        org.joda.time.DateTime dateTime38 = dateTime25.minusWeeks((int) (byte) 1);
        int int39 = dateTime22.compareTo((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.DateTime.Property property40 = dateTime25.minuteOfHour();
        org.joda.time.DateTime dateTime42 = dateTime25.withYear(1969);
        org.joda.time.Chronology chronology43 = dateTime42.getChronology();
        org.joda.time.DateTimeField dateTimeField44 = chronology43.dayOfMonth();
        java.util.Locale locale45 = java.util.Locale.ITALY;
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "hi!");
        java.lang.String str50 = locale45.getDisplayCountry(locale49);
        java.lang.String str51 = locale49.getISO3Language();
        int int52 = dateTimeField44.getMaximumShortTextLength(locale49);
        java.util.Calendar calendar53 = dateTime2.toCalendar(locale49);
        java.lang.String str54 = locale49.getVariant();
        org.joda.time.Instant instant56 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant58 = instant56.minus(100L);
        org.joda.time.Instant instant60 = instant58.plus((long) 100);
        org.joda.time.Instant instant62 = instant58.withMillis((long) (byte) 1);
        org.joda.time.Period period64 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period66 = period64.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Duration duration68 = period66.toDurationTo(readableInstant67);
        org.joda.time.Duration duration71 = duration68.withDurationAdded((long) '#', 0);
        org.joda.time.Instant instant73 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant75 = instant73.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime76 = instant73.toMutableDateTimeISO();
        org.joda.time.PeriodType periodType77 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period78 = duration71.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime76, periodType77);
        org.joda.time.Instant instant79 = instant62.minus((org.joda.time.ReadableDuration) duration71);
        org.joda.time.Instant instant81 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime82 = instant81.toDateTime();
        org.joda.time.DateTime.Property property83 = dateTime82.era();
        org.joda.time.DateTime dateTime84 = dateTime82.withTimeAtStartOfDay();
        org.joda.time.Instant instant85 = dateTime82.toInstant();
        org.joda.time.DateMidnight dateMidnight86 = dateTime82.toDateMidnight();
        int int87 = dateTime82.getHourOfDay();
        org.joda.time.Days days88 = org.joda.time.Days.daysBetween((org.joda.time.ReadableInstant) instant79, (org.joda.time.ReadableInstant) dateTime82);
        org.joda.time.DateTime.Property property89 = dateTime82.centuryOfEra();
        java.util.Locale locale90 = java.util.Locale.US;
        java.util.Locale locale91 = java.util.Locale.US;
        java.lang.String str92 = locale90.getDisplayScript(locale91);
        int int93 = property89.getMaximumTextLength(locale91);
        java.lang.String str94 = locale49.getDisplayName(locale91);
        java.lang.String str95 = locale91.getISO3Country();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0723");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant3 = instant1.minus(100L);
        java.lang.String str4 = instant3.toString();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period8 = duration7.toPeriod();
        org.joda.time.Duration duration10 = duration7.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = duration7.toPeriodTo(readableInstant11);
        org.joda.time.Duration duration14 = duration7.withMillis((long) (short) 0);
        org.joda.time.Instant instant15 = instant3.plus((org.joda.time.ReadableDuration) duration7);
        java.lang.String str16 = duration7.toString();
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime19 = instant18.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone20 = null;
        org.joda.time.DateTime dateTime21 = dateTime19.withZoneRetainFields(dateTimeZone20);
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime24 = instant23.toDateTime();
        org.joda.time.DateTime.Property property25 = dateTime24.era();
        org.joda.time.DateTime dateTime26 = dateTime24.withTimeAtStartOfDay();
        org.joda.time.Duration duration29 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.PeriodType periodType31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration29, readableInstant30, periodType31);
        mutablePeriod32.setMonths((int) '4');
        org.joda.time.DateTime dateTime35 = dateTime24.plus((org.joda.time.ReadablePeriod) mutablePeriod32);
        org.joda.time.DateTime dateTime37 = dateTime24.minusWeeks((int) (byte) 1);
        int int38 = dateTime21.compareTo((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.DateTime dateTime39 = dateTime21.toDateTimeISO();
        org.joda.time.Interval interval40 = duration7.toIntervalTo((org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.MutableInterval mutableInterval41 = interval40.toMutableInterval();
        org.joda.time.DateTime dateTime42 = interval40.getStart();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.DateTime dateTime44 = new org.joda.time.DateTime(chronology43);
        org.joda.time.DateTime.Property property45 = dateTime44.yearOfEra();
        org.joda.time.Interval interval46 = property45.toInterval();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.DateTime dateTime48 = new org.joda.time.DateTime(chronology47);
        org.joda.time.DateTime.Property property49 = dateTime48.yearOfEra();
        org.joda.time.Interval interval50 = property49.toInterval();
        boolean boolean51 = interval46.contains((org.joda.time.ReadableInterval) interval50);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.DateTime dateTime53 = new org.joda.time.DateTime(chronology52);
        org.joda.time.DateTime.Property property54 = dateTime53.yearOfEra();
        org.joda.time.Interval interval55 = property54.toInterval();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.DateTime dateTime57 = new org.joda.time.DateTime(chronology56);
        org.joda.time.DateTime.Property property58 = dateTime57.yearOfEra();
        org.joda.time.Interval interval59 = property58.toInterval();
        boolean boolean60 = interval55.contains((org.joda.time.ReadableInterval) interval59);
        boolean boolean61 = interval50.contains((org.joda.time.ReadableInterval) interval55);
        org.joda.time.Chronology chronology62 = interval50.getChronology();
        org.joda.time.Hours hours63 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval50);
        long long64 = interval50.toDurationMillis();
        boolean boolean65 = interval40.overlaps((org.joda.time.ReadableInterval) interval50);
        org.joda.time.DateTime dateTime66 = interval40.getStart();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime19", (instant1.compareTo(dateTime19) == 0) == instant1.equals(dateTime19));
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0724");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DurationField durationField26 = chronology25.halfdays();
        org.joda.time.DurationField durationField27 = chronology25.eras();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.secondOfMinute();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0725");
        org.joda.time.DurationFieldType durationFieldType2 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant4 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime5 = instant4.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone6 = null;
        org.joda.time.DateTime dateTime7 = dateTime5.withZoneRetainFields(dateTimeZone6);
        org.joda.time.Instant instant9 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime10 = instant9.toDateTime();
        org.joda.time.DateTime.Property property11 = dateTime10.era();
        org.joda.time.DateTime dateTime12 = dateTime10.withTimeAtStartOfDay();
        org.joda.time.Duration duration15 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration15, readableInstant16, periodType17);
        mutablePeriod18.setMonths((int) '4');
        org.joda.time.DateTime dateTime21 = dateTime10.plus((org.joda.time.ReadablePeriod) mutablePeriod18);
        org.joda.time.DateTime dateTime23 = dateTime10.minusWeeks((int) (byte) 1);
        int int24 = dateTime7.compareTo((org.joda.time.ReadableInstant) dateTime10);
        org.joda.time.DateTime.Property property25 = dateTime10.minuteOfHour();
        org.joda.time.DateTime dateTime27 = dateTime10.withYear(1969);
        org.joda.time.Chronology chronology28 = dateTime27.getChronology();
        org.joda.time.DurationField durationField29 = durationFieldType2.getField(chronology28);
        org.joda.time.Instant instant31 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime32 = instant31.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone33 = null;
        org.joda.time.DateTime dateTime34 = dateTime32.withZoneRetainFields(dateTimeZone33);
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime37 = instant36.toDateTime();
        org.joda.time.DateTime.Property property38 = dateTime37.era();
        org.joda.time.DateTime dateTime39 = dateTime37.withTimeAtStartOfDay();
        org.joda.time.Duration duration42 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.PeriodType periodType44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration42, readableInstant43, periodType44);
        mutablePeriod45.setMonths((int) '4');
        org.joda.time.DateTime dateTime48 = dateTime37.plus((org.joda.time.ReadablePeriod) mutablePeriod45);
        org.joda.time.DateTime dateTime50 = dateTime37.minusWeeks((int) (byte) 1);
        int int51 = dateTime34.compareTo((org.joda.time.ReadableInstant) dateTime37);
        org.joda.time.DateTime.Property property52 = dateTime37.minuteOfHour();
        org.joda.time.DateTime dateTime54 = dateTime37.withYear(1969);
        org.joda.time.Chronology chronology55 = dateTime54.getChronology();
        org.joda.time.DateTimeField dateTimeField56 = chronology55.year();
        org.joda.time.DateTimeField dateTimeField57 = chronology55.millisOfDay();
        org.joda.time.DateTimeField dateTimeField58 = chronology55.hourOfDay();
        org.joda.time.DateTimeField dateTimeField59 = chronology55.clockhourOfHalfday();
        org.joda.time.DateTimeField dateTimeField60 = chronology55.year();
        org.joda.time.DurationField durationField61 = durationFieldType2.getField(chronology55);
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod((long) 11, (-1L), chronology55);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant4 and dateTime5", (instant4.compareTo(dateTime5) == 0) == instant4.equals(dateTime5));
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0726");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.DateTime.Property property18 = dateTime8.yearOfEra();
        org.joda.time.DateTime.Property property19 = dateTime8.dayOfYear();
        org.joda.time.Instant instant21 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime22 = instant21.toDateTime();
        org.joda.time.DateTime.Property property23 = dateTime22.era();
        org.joda.time.DateTime dateTime24 = property23.withMinimumValue();
        int int25 = property23.getMaximumValueOverall();
        java.util.Locale locale26 = java.util.Locale.ENGLISH;
        java.lang.String str27 = locale26.getScript();
        java.lang.String str28 = locale26.getDisplayCountry();
        int int29 = property23.getMaximumShortTextLength(locale26);
        org.joda.time.DateTime dateTime30 = property23.withMaximumValue();
        org.joda.time.LocalTime localTime31 = dateTime30.toLocalTime();
        org.joda.time.DateTimeZone dateTimeZone32 = dateTime30.getZone();
        int int34 = dateTimeZone32.getOffsetFromLocal(0L);
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime(dateTimeZone32);
        org.joda.time.DateTime dateTime36 = dateTime8.withZone(dateTimeZone32);
        org.joda.time.DateTimeFieldType dateTimeFieldType38 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.DateTimeField dateTimeField40 = dateTimeFieldType38.getField(chronology39);
        long long43 = dateTimeField40.add(0L, (long) (short) 1);
        long long46 = dateTimeField40.getDifferenceAsLong((long) ' ', (long) 1969);
        java.util.Locale locale47 = java.util.Locale.JAPAN;
        java.lang.String str48 = locale47.getVariant();
        int int49 = dateTimeField40.getMaximumShortTextLength(locale47);
        org.joda.time.DateTimeFieldType dateTimeFieldType50 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.DateTimeField dateTimeField52 = dateTimeFieldType50.getField(chronology51);
        long long55 = dateTimeField52.add(0L, (long) (short) 1);
        long long58 = dateTimeField52.getDifferenceAsLong((long) ' ', (long) 1969);
        java.util.Locale locale59 = java.util.Locale.JAPAN;
        java.lang.String str60 = locale59.getVariant();
        int int61 = dateTimeField52.getMaximumShortTextLength(locale59);
        java.lang.String str62 = locale59.getDisplayLanguage();
        int int63 = dateTimeField40.getMaximumShortTextLength(locale59);
        java.lang.String str64 = locale59.getISO3Language();
        java.lang.String str65 = dateTime8.toString("-32", locale59);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime22", (instant7.compareTo(dateTime22) == 0) == instant7.equals(dateTime22));
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0727");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant3 = instant1.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime4 = instant1.toMutableDateTimeISO();
        java.lang.Object obj5 = null;
        org.joda.time.Instant instant6 = new org.joda.time.Instant(obj5);
        boolean boolean7 = mutableDateTime4.isAfter((org.joda.time.ReadableInstant) instant6);
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period11 = duration10.toPeriod();
        org.joda.time.Duration duration13 = duration10.plus((long) (byte) 0);
        org.joda.time.Instant instant14 = instant6.minus((org.joda.time.ReadableDuration) duration13);
        org.joda.time.MutableDateTime mutableDateTime15 = instant6.toMutableDateTime();
        int int16 = mutableDateTime15.getMinuteOfHour();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and mutableDateTime4", (instant1.compareTo(mutableDateTime4) == 0) == instant1.equals(mutableDateTime4));
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0728");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.LocalDate localDate14 = dateTime2.toLocalDate();
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTime.Property property18 = dateTime17.era();
        org.joda.time.DateTime dateTime19 = dateTime17.withTimeAtStartOfDay();
        org.joda.time.Instant instant20 = dateTime17.toInstant();
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.ONE;
        boolean boolean23 = seconds21.isLessThan(seconds22);
        org.joda.time.Instant instant25 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime26 = instant25.toDateTime();
        org.joda.time.DateTime.Property property27 = dateTime26.era();
        org.joda.time.DateTime dateTime28 = dateTime26.withTimeAtStartOfDay();
        org.joda.time.Duration duration31 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.PeriodType periodType33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration31, readableInstant32, periodType33);
        mutablePeriod34.setMonths((int) '4');
        org.joda.time.DateTime dateTime37 = dateTime26.plus((org.joda.time.ReadablePeriod) mutablePeriod34);
        org.joda.time.LocalDate localDate38 = dateTime26.toLocalDate();
        org.joda.time.Instant instant40 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime41 = instant40.toDateTime();
        org.joda.time.DateTime.Property property42 = dateTime41.era();
        org.joda.time.DateTime dateTime43 = dateTime41.withTimeAtStartOfDay();
        org.joda.time.Instant instant44 = dateTime41.toInstant();
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime26, (org.joda.time.ReadableInstant) instant44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.ONE;
        boolean boolean47 = seconds45.isLessThan(seconds46);
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.secondsIn(readableInterval48);
        org.joda.time.Seconds seconds51 = seconds49.plus((int) (byte) -1);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds53 = seconds51.plus(seconds52);
        org.joda.time.Seconds seconds54 = seconds51.negated();
        org.joda.time.Seconds seconds55 = seconds54.negated();
        org.joda.time.ReadableInterval readableInterval56 = null;
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.secondsIn(readableInterval56);
        org.joda.time.Seconds seconds59 = seconds57.plus((int) (byte) -1);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds61 = seconds59.plus(seconds60);
        org.joda.time.Seconds seconds62 = seconds59.negated();
        org.joda.time.Seconds seconds63 = seconds62.negated();
        org.joda.time.Seconds seconds64 = seconds55.plus(seconds63);
        org.joda.time.Seconds seconds65 = seconds46.plus(seconds63);
        org.joda.time.Seconds seconds67 = seconds46.minus((int) '#');
        int int68 = seconds46.getSeconds();
        boolean boolean69 = seconds22.isLessThan(seconds46);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0729");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.Interval interval7 = property6.toInterval();
        boolean boolean8 = interval3.contains((org.joda.time.ReadableInterval) interval7);
        java.lang.String str9 = interval3.toString();
        long long10 = interval3.getEndMillis();
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone14 = null;
        org.joda.time.DateTime dateTime15 = dateTime13.withZoneRetainFields(dateTimeZone14);
        org.joda.time.Instant instant17 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime18 = instant17.toDateTime();
        org.joda.time.DateTime.Property property19 = dateTime18.era();
        org.joda.time.DateTime dateTime20 = dateTime18.withTimeAtStartOfDay();
        org.joda.time.Duration duration23 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, readableInstant24, periodType25);
        mutablePeriod26.setMonths((int) '4');
        org.joda.time.DateTime dateTime29 = dateTime18.plus((org.joda.time.ReadablePeriod) mutablePeriod26);
        org.joda.time.DateTime dateTime31 = dateTime18.minusWeeks((int) (byte) 1);
        int int32 = dateTime15.compareTo((org.joda.time.ReadableInstant) dateTime18);
        org.joda.time.DateTime.Property property33 = dateTime18.minuteOfHour();
        org.joda.time.DateTime dateTime35 = dateTime18.withYear(1969);
        org.joda.time.Chronology chronology36 = dateTime35.getChronology();
        boolean boolean37 = interval3.isBefore((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Days days38 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval3);
        int int39 = days38.size();
        org.joda.time.Days days40 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType41 = org.joda.time.DurationFieldType.minutes();
        int int42 = days40.get(durationFieldType41);
        org.joda.time.MutablePeriod mutablePeriod43 = days40.toMutablePeriod();
        org.joda.time.Days days45 = days40.multipliedBy((int) (byte) 1);
        int int46 = days45.size();
        org.joda.time.Days days47 = days38.minus(days45);
        org.joda.time.Days days49 = days45.dividedBy((-59));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime13", (instant12.compareTo(dateTime13) == 0) == instant12.equals(dateTime13));
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0730");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField29 = chronology25.hourOfHalfday();
        long long33 = chronology25.add((long) 86399999, (long) 9, (int) '4');
        org.joda.time.DurationField durationField34 = chronology25.halfdays();
        int int37 = durationField34.getValue((-26179201L), (long) 1970);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0731");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField29 = chronology25.weekyearOfCentury();
        org.joda.time.DurationField durationField30 = dateTimeField29.getDurationField();
        org.joda.time.DateTimeFieldType dateTimeFieldType31 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.DateTimeField dateTimeField33 = dateTimeFieldType31.getField(chronology32);
        long long36 = dateTimeField33.add(0L, (long) (short) 1);
        long long38 = dateTimeField33.roundHalfCeiling((long) 2);
        org.joda.time.DurationField durationField39 = dateTimeField33.getDurationField();
        long long42 = durationField39.getMillis(0, (long) 4);
        long long44 = durationField39.getMillis((int) '#');
        int int47 = durationField39.getDifference((long) '4', 10L);
        int int48 = durationField30.compareTo(durationField39);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0732");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration4 = null;
        boolean boolean5 = duration2.isEqual(readableDuration4);
        org.joda.time.Duration duration7 = duration2.minus((long) 1);
        org.joda.time.Duration duration9 = duration7.minus((long) '4');
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Duration duration22 = duration19.plus((long) (byte) 0);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType30, chronology31);
        org.joda.time.PeriodType periodType33 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, (org.joda.time.ReadableInstant) dateTime25, periodType33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime12, (org.joda.time.ReadableDuration) duration16, periodType33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime12, periodType36);
        org.joda.time.Duration duration39 = duration7.minus((long) 7);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int50 = mutablePeriod49.getDays();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.DateTime dateTime54 = new org.joda.time.DateTime(chronology53);
        org.joda.time.DateTime.Property property55 = dateTime54.yearOfEra();
        org.joda.time.Interval interval56 = property55.toInterval();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.DateTime dateTime58 = new org.joda.time.DateTime(chronology57);
        org.joda.time.DateTime.Property property59 = dateTime58.yearOfEra();
        org.joda.time.Interval interval60 = property59.toInterval();
        boolean boolean61 = interval56.contains((org.joda.time.ReadableInterval) interval60);
        org.joda.time.Chronology chronology62 = interval60.getChronology();
        mutablePeriod49.setPeriod((long) 'u', (long) 1969, chronology62);
        org.joda.time.Period period64 = new org.joda.time.Period((long) (byte) 100, chronology62);
        org.joda.time.Period period65 = duration39.toPeriod(chronology62);
        org.joda.time.DateTimeField dateTimeField66 = chronology62.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField67 = chronology62.monthOfYear();
        org.joda.time.DurationField durationField68 = chronology62.weeks();
        org.joda.time.DateTimeField dateTimeField69 = chronology62.dayOfYear();
        long long71 = dateTimeField69.roundHalfCeiling(0L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime12", (instant11.compareTo(dateTime12) == 0) == instant11.equals(dateTime12));
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0733");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.DateTime dateTime6 = dateTime2.withCenturyOfEra((int) (byte) 1);
        org.joda.time.DateTime.Property property7 = dateTime6.minuteOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0734");
        java.util.Locale.Category category0 = java.util.Locale.Category.DISPLAY;
        org.joda.time.Instant instant2 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime3 = instant2.toDateTime();
        org.joda.time.DateTime.Property property4 = dateTime3.era();
        org.joda.time.DateTime dateTime5 = dateTime3.withTimeAtStartOfDay();
        org.joda.time.Duration duration8 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration8, readableInstant9, periodType10);
        mutablePeriod11.setMonths((int) '4');
        org.joda.time.DateTime dateTime14 = dateTime3.plus((org.joda.time.ReadablePeriod) mutablePeriod11);
        org.joda.time.DateTime dateTime16 = dateTime3.withMillisOfDay(4);
        org.joda.time.format.PeriodPrinter periodPrinter18 = null;
        org.joda.time.format.PeriodParser periodParser19 = null;
        org.joda.time.format.PeriodFormatter periodFormatter20 = new org.joda.time.format.PeriodFormatter(periodPrinter18, periodParser19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.format.PeriodFormatter periodFormatter22 = periodFormatter20.withParseType(periodType21);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType27, chronology28);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(1L, (long) 10, periodType27, chronology30);
        org.joda.time.PeriodType periodType32 = periodType27.withDaysRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter33 = periodFormatter22.withParseType(periodType32);
        java.util.Locale locale35 = java.util.Locale.forLanguageTag("1");
        org.joda.time.format.PeriodFormatter periodFormatter36 = periodFormatter22.withLocale(locale35);
        java.lang.String str37 = dateTime16.toString("1", locale35);
        java.util.Locale.setDefault(category0, locale35);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime3", (instant2.compareTo(dateTime3) == 0) == instant2.equals(dateTime3));
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0735");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.Instant instant5 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant7 = instant5.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime8 = instant5.toMutableDateTimeISO();
        org.joda.time.Period period9 = duration2.toPeriodTo((org.joda.time.ReadableInstant) instant5);
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.DateTime dateTime14 = dateTime12.withTimeAtStartOfDay();
        org.joda.time.Duration duration17 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration17, readableInstant18, periodType19);
        mutablePeriod20.setMonths((int) '4');
        org.joda.time.DateTime dateTime23 = dateTime12.plus((org.joda.time.ReadablePeriod) mutablePeriod20);
        org.joda.time.DateTime dateTime25 = dateTime12.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property26 = dateTime25.monthOfYear();
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType31, chronology32);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1L, (long) 10, periodType31, chronology34);
        org.joda.time.PeriodType periodType36 = periodType31.withDaysRemoved();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, (org.joda.time.ReadableInstant) dateTime25, periodType31);
        org.joda.time.DateTime.Property property38 = dateTime25.centuryOfEra();
        boolean boolean39 = property38.isLeap();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant5 and mutableDateTime8", (instant5.compareTo(mutableDateTime8) == 0) == instant5.equals(mutableDateTime8));
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0736");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant3, periodType4);
        mutablePeriod5.setPeriod((long) 1, (-1L));
        mutablePeriod5.setMillis((int) (short) 0);
        int int11 = mutablePeriod5.getDays();
        mutablePeriod5.addYears((int) (short) 10);
        mutablePeriod5.setMonths((-59));
        org.joda.time.Instant instant17 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime18 = instant17.toDateTime();
        org.joda.time.DateTime.Property property19 = dateTime18.era();
        org.joda.time.DateTime dateTime20 = dateTime18.withTimeAtStartOfDay();
        org.joda.time.Duration duration23 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, readableInstant24, periodType25);
        mutablePeriod26.setMonths((int) '4');
        org.joda.time.DateTime dateTime29 = dateTime18.plus((org.joda.time.ReadablePeriod) mutablePeriod26);
        java.lang.Object obj30 = null;
        org.joda.time.Instant instant31 = new org.joda.time.Instant(obj30);
        org.joda.time.DateTimeZone dateTimeZone32 = instant31.getZone();
        java.lang.String str33 = dateTimeZone32.toString();
        int int35 = dateTimeZone32.getOffset(1L);
        boolean boolean37 = dateTimeZone32.isStandardOffset(0L);
        org.joda.time.DateTime dateTime38 = dateTime18.withZoneRetainFields(dateTimeZone32);
        org.joda.time.DateTime dateTime40 = dateTime38.plusYears(1969);
        org.joda.time.DateTime dateTime42 = dateTime40.minusWeeks(1439);
        org.joda.time.DateTime dateTime44 = dateTime42.minusYears(0);
        org.joda.time.Duration duration45 = mutablePeriod5.toDurationFrom((org.joda.time.ReadableInstant) dateTime44);
        int int46 = mutablePeriod5.getWeeks();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant17 and dateTime18", (instant17.compareTo(dateTime18) == 0) == instant17.equals(dateTime18));
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0737");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(432000000L);
        org.joda.time.Duration duration2 = duration1.toDuration();
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType5, chronology6);
        org.joda.time.PeriodType periodType8 = periodType5.withWeeksRemoved();
        org.joda.time.PeriodType periodType9 = periodType8.withSecondsRemoved();
        org.joda.time.PeriodType periodType10 = periodType9.withWeeksRemoved();
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType14, chronology15);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((long) (short) 0, periodType14, chronology17);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((long) (short) 10, periodType20);
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant24 = instant23.toInstant();
        org.joda.time.DateTime dateTime25 = instant24.toDateTimeISO();
        org.joda.time.Duration duration26 = period21.toDurationFrom((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.Duration duration29 = new org.joda.time.Duration((-1L), (long) 23);
        org.joda.time.Period period31 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period33 = period31.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Duration duration35 = period33.toDurationTo(readableInstant34);
        org.joda.time.Duration duration38 = duration35.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = duration38.toPeriodFrom(readableInstant39);
        org.joda.time.Duration duration41 = duration29.minus((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration42 = duration26.plus((org.joda.time.ReadableDuration) duration29);
        mutablePeriod18.add((org.joda.time.ReadableDuration) duration29);
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int56 = mutablePeriod55.getDays();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.DateTime dateTime60 = new org.joda.time.DateTime(chronology59);
        org.joda.time.DateTime.Property property61 = dateTime60.yearOfEra();
        org.joda.time.Interval interval62 = property61.toInterval();
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.DateTime dateTime64 = new org.joda.time.DateTime(chronology63);
        org.joda.time.DateTime.Property property65 = dateTime64.yearOfEra();
        org.joda.time.Interval interval66 = property65.toInterval();
        boolean boolean67 = interval62.contains((org.joda.time.ReadableInterval) interval66);
        org.joda.time.Chronology chronology68 = interval66.getChronology();
        mutablePeriod55.setPeriod((long) 'u', (long) 1969, chronology68);
        org.joda.time.Period period70 = new org.joda.time.Period((long) (byte) 100, chronology68);
        mutablePeriod18.setPeriod((long) 1, (long) 69, chronology68);
        org.joda.time.DurationField durationField72 = chronology68.hours();
        org.joda.time.Period period73 = duration2.toPeriod(periodType9, chronology68);
        org.joda.time.DateTimeField dateTimeField74 = chronology68.weekyear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant23 and dateTime25", (instant23.compareTo(dateTime25) == 0) == instant23.equals(dateTime25));
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0738");
        java.lang.Object obj0 = null;
        org.joda.time.Instant instant1 = new org.joda.time.Instant(obj0);
        org.joda.time.DateTimeZone dateTimeZone2 = instant1.getZone();
        java.lang.String str3 = dateTimeZone2.toString();
        java.lang.String str5 = dateTimeZone2.getName((long) 10);
        long long8 = dateTimeZone2.convertLocalToUTC((long) (byte) 100, false);
        long long10 = dateTimeZone2.previousTransition(720000L);
        java.lang.Object obj11 = null;
        org.joda.time.Instant instant12 = new org.joda.time.Instant(obj11);
        org.joda.time.DateTimeZone dateTimeZone13 = instant12.getZone();
        java.lang.String str14 = dateTimeZone13.toString();
        long long16 = dateTimeZone13.nextTransition((long) (short) 100);
        java.lang.String str17 = dateTimeZone13.toString();
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant21 = instant19.minus(100L);
        org.joda.time.DateTimeZone dateTimeZone22 = instant21.getZone();
        long long24 = dateTimeZone22.nextTransition(43200000L);
        java.util.Locale.Category category26 = java.util.Locale.Category.FORMAT;
        org.joda.time.Instant instant28 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime29 = instant28.toDateTime();
        org.joda.time.DateTime.Property property30 = dateTime29.era();
        org.joda.time.DateTime dateTime31 = property30.withMinimumValue();
        int int32 = property30.getMaximumValueOverall();
        java.util.Locale locale33 = java.util.Locale.ITALY;
        java.util.Locale locale37 = new java.util.Locale("", "hi!", "hi!");
        java.lang.String str38 = locale33.getDisplayCountry(locale37);
        java.lang.String str39 = locale37.getDisplayVariant();
        int int40 = property30.getMaximumShortTextLength(locale37);
        java.util.Locale.setDefault(category26, locale37);
        java.lang.String str42 = dateTimeZone22.getShortName((long) (-1), locale37);
        org.joda.time.Instant instant44 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime45 = instant44.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone46 = null;
        org.joda.time.DateTime dateTime47 = dateTime45.withZone(dateTimeZone46);
        org.joda.time.Instant instant49 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime50 = instant49.toDateTime();
        org.joda.time.DateTime.Property property51 = dateTime50.era();
        org.joda.time.DateTime dateTime52 = dateTime50.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean54 = dateTime50.isSupported(dateTimeFieldType53);
        org.joda.time.DateTime.Property property55 = dateTime45.property(dateTimeFieldType53);
        org.joda.time.DateTimeZone dateTimeZone56 = dateTime45.getZone();
        org.joda.time.LocalDateTime localDateTime57 = dateTime45.toLocalDateTime();
        boolean boolean58 = dateTimeZone22.isLocalDateTimeGap(localDateTime57);
        boolean boolean59 = dateTimeZone13.isLocalDateTimeGap(localDateTime57);
        boolean boolean60 = dateTimeZone2.isLocalDateTimeGap(localDateTime57);
        org.joda.time.DateTimeFieldType dateTimeFieldType61 = org.joda.time.DateTimeFieldType.year();
        java.lang.String str62 = dateTimeFieldType61.getName();
        int int63 = localDateTime57.get(dateTimeFieldType61);
        org.joda.time.Hours hours64 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours66 = hours64.multipliedBy(0);
        org.joda.time.Hours hours68 = hours64.dividedBy(69);
        org.joda.time.PeriodType periodType69 = hours68.getPeriodType();
        boolean boolean70 = localDateTime57.equals((java.lang.Object) hours68);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant19 and dateTime29", (instant19.compareTo(dateTime29) == 0) == instant19.equals(dateTime29));
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0739");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        java.lang.Object obj14 = null;
        org.joda.time.Instant instant15 = new org.joda.time.Instant(obj14);
        org.joda.time.DateTimeZone dateTimeZone16 = instant15.getZone();
        java.lang.String str17 = dateTimeZone16.toString();
        int int19 = dateTimeZone16.getOffset(1L);
        boolean boolean21 = dateTimeZone16.isStandardOffset(0L);
        org.joda.time.DateTime dateTime22 = dateTime2.withZoneRetainFields(dateTimeZone16);
        long long24 = dateTimeZone16.previousTransition((long) 120);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0740");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.DateMidnight dateMidnight6 = dateTime2.toDateMidnight();
        org.joda.time.DateTime dateTime9 = dateTime2.withDurationAdded(0L, (int) 'a');
        org.joda.time.DateTime.Property property10 = dateTime9.weekOfWeekyear();
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone14 = null;
        org.joda.time.DateTime dateTime15 = dateTime13.withZoneRetainFields(dateTimeZone14);
        int int16 = dateTime13.getEra();
        boolean boolean17 = dateTime9.isAfter((org.joda.time.ReadableInstant) dateTime13);
        org.joda.time.DateTimeZone dateTimeZone18 = dateTime9.getZone();
        long long20 = dateTimeZone18.previousTransition((long) 20);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0741");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.dayOfMonth();
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.DurationFieldType durationFieldType2 = org.joda.time.DurationFieldType.years();
        boolean boolean3 = periodType1.isSupported(durationFieldType2);
        org.joda.time.Instant instant5 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime6 = instant5.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone7 = null;
        org.joda.time.DateTime dateTime8 = dateTime6.withZoneRetainFields(dateTimeZone7);
        org.joda.time.Instant instant10 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime11 = instant10.toDateTime();
        org.joda.time.DateTime.Property property12 = dateTime11.era();
        org.joda.time.DateTime dateTime13 = dateTime11.withTimeAtStartOfDay();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration16, readableInstant17, periodType18);
        mutablePeriod19.setMonths((int) '4');
        org.joda.time.DateTime dateTime22 = dateTime11.plus((org.joda.time.ReadablePeriod) mutablePeriod19);
        org.joda.time.DateTime dateTime24 = dateTime11.minusWeeks((int) (byte) 1);
        int int25 = dateTime8.compareTo((org.joda.time.ReadableInstant) dateTime11);
        org.joda.time.DateTime.Property property26 = dateTime11.minuteOfHour();
        org.joda.time.DateTime dateTime28 = dateTime11.withYear(1969);
        org.joda.time.Chronology chronology29 = dateTime28.getChronology();
        org.joda.time.DateTimeField dateTimeField30 = chronology29.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField31 = chronology29.era();
        org.joda.time.DateTimeField dateTimeField32 = chronology29.hourOfHalfday();
        org.joda.time.DurationField durationField33 = chronology29.seconds();
        boolean boolean34 = durationFieldType2.isSupported(chronology29);
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant38 = instant36.minus(100L);
        java.lang.String str39 = instant38.toString();
        org.joda.time.Duration duration42 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period43 = duration42.toPeriod();
        org.joda.time.Duration duration45 = duration42.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = duration42.toPeriodTo(readableInstant46);
        org.joda.time.Duration duration49 = duration42.withMillis((long) (short) 0);
        org.joda.time.Instant instant50 = instant38.plus((org.joda.time.ReadableDuration) duration42);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.DateTime dateTime52 = new org.joda.time.DateTime(chronology51);
        org.joda.time.DateTime.Property property53 = dateTime52.yearOfEra();
        org.joda.time.Interval interval54 = property53.toInterval();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.DateTime dateTime56 = new org.joda.time.DateTime(chronology55);
        org.joda.time.DateTime.Property property57 = dateTime56.yearOfEra();
        org.joda.time.Interval interval58 = property57.toInterval();
        boolean boolean59 = interval54.contains((org.joda.time.ReadableInterval) interval58);
        org.joda.time.Chronology chronology60 = interval58.getChronology();
        org.joda.time.DurationField durationField61 = chronology60.weeks();
        org.joda.time.DateTimeField dateTimeField62 = chronology60.minuteOfHour();
        org.joda.time.Instant instant64 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime65 = instant64.toDateTime();
        org.joda.time.TimeOfDay timeOfDay66 = dateTime65.toTimeOfDay();
        int int67 = dateTimeField62.getMinimumValue((org.joda.time.ReadablePartial) timeOfDay66);
        java.lang.String str68 = dateTimeField62.toString();
        int int69 = instant38.get(dateTimeField62);
        org.joda.time.Instant instant71 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime72 = instant71.toDateTime();
        org.joda.time.TimeOfDay timeOfDay73 = dateTime72.toTimeOfDay();
        int int74 = dateTimeField62.getMinimumValue((org.joda.time.ReadablePartial) timeOfDay73);
        long long76 = chronology29.set((org.joda.time.ReadablePartial) timeOfDay73, (long) 78719999);
        org.joda.time.DurationField durationField77 = chronology29.centuries();
        boolean boolean78 = dateTimeFieldType0.isSupported(chronology29);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant5 and dateTime6", (instant5.compareTo(dateTime6) == 0) == instant5.equals(dateTime6));
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0742");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property16 = dateTime15.monthOfYear();
        org.joda.time.DateTime.Property property17 = dateTime15.weekyear();
        org.joda.time.DateTime dateTime18 = dateTime15.toDateTime();
        org.joda.time.DateTime dateTime20 = dateTime15.plusHours((int) 'u');
        org.joda.time.Instant instant22 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime23 = instant22.toDateTime();
        org.joda.time.DateTime.Property property24 = dateTime23.era();
        org.joda.time.ReadablePartial readablePartial25 = null;
        org.joda.time.DateTime dateTime26 = dateTime23.withFields(readablePartial25);
        org.joda.time.DateTime dateTime28 = dateTime23.withYearOfEra(292278993);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime20, (org.joda.time.ReadableInstant) dateTime23);
        java.lang.Object obj30 = null;
        org.joda.time.Instant instant31 = new org.joda.time.Instant(obj30);
        org.joda.time.DateTimeZone dateTimeZone32 = instant31.getZone();
        java.lang.String str33 = dateTimeZone32.toString();
        int int35 = dateTimeZone32.getOffset(1L);
        org.joda.time.MutableDateTime mutableDateTime36 = dateTime23.toMutableDateTime(dateTimeZone32);
        boolean boolean37 = dateTime23.isBeforeNow();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0743");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.DateTime dateTime6 = dateTime2.withCenturyOfEra((int) (byte) 1);
        org.joda.time.Instant instant8 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime9 = instant8.toDateTime();
        boolean boolean11 = dateTime9.isEqual(10L);
        org.joda.time.DateTime dateTime13 = dateTime9.withCenturyOfEra((int) (byte) 1);
        org.joda.time.DateTimeFieldType dateTimeFieldType14 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.DateTimeField dateTimeField16 = dateTimeFieldType14.getField(chronology15);
        long long19 = dateTimeField16.add(0L, (long) (short) 1);
        long long22 = dateTimeField16.add(1L, (-1));
        int int23 = dateTime9.get(dateTimeField16);
        boolean boolean24 = dateTime6.isAfter((org.joda.time.ReadableInstant) dateTime9);
        org.joda.time.Period period26 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period28 = period26.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration30 = period28.toDurationTo(readableInstant29);
        org.joda.time.Duration duration33 = duration30.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = duration33.toPeriodFrom(readableInstant34);
        org.joda.time.DateTime dateTime36 = dateTime6.plus((org.joda.time.ReadableDuration) duration33);
        org.joda.time.DateTime dateTime38 = dateTime6.plus((long) (-2147483648));
        org.joda.time.DateTime.Property property39 = dateTime6.dayOfYear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0744");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.TimeOfDay timeOfDay6 = dateTime2.toTimeOfDay();
        org.joda.time.DateTime.Property property7 = dateTime2.millisOfSecond();
        int int8 = property7.getMaximumValueOverall();
        org.joda.time.DurationField durationField9 = property7.getLeapDurationField();
        org.joda.time.DateTime dateTime10 = property7.roundCeilingCopy();
        int int11 = property7.getLeapAmount();
        java.util.Locale locale13 = java.util.Locale.forLanguageTag("2022-02-22T07:11:13.646Z");
        java.lang.String str14 = property7.getAsShortText(locale13);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0745");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.DateTime dateTime6 = dateTime2.withCenturyOfEra((int) (byte) 1);
        org.joda.time.Instant instant8 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime9 = instant8.toDateTime();
        boolean boolean11 = dateTime9.isEqual(10L);
        org.joda.time.DateTime dateTime13 = dateTime9.withCenturyOfEra((int) (byte) 1);
        org.joda.time.DateTimeFieldType dateTimeFieldType14 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.DateTimeField dateTimeField16 = dateTimeFieldType14.getField(chronology15);
        long long19 = dateTimeField16.add(0L, (long) (short) 1);
        long long22 = dateTimeField16.add(1L, (-1));
        int int23 = dateTime9.get(dateTimeField16);
        boolean boolean24 = dateTime6.isAfter((org.joda.time.ReadableInstant) dateTime9);
        org.joda.time.Period period26 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period28 = period26.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration30 = period28.toDurationTo(readableInstant29);
        org.joda.time.Duration duration33 = duration30.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = duration33.toPeriodFrom(readableInstant34);
        org.joda.time.DateTime dateTime36 = dateTime6.plus((org.joda.time.ReadableDuration) duration33);
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.Instant instant39 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime40 = instant39.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone41 = null;
        org.joda.time.DateTime dateTime42 = dateTime40.withZoneRetainFields(dateTimeZone41);
        org.joda.time.Instant instant44 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime45 = instant44.toDateTime();
        org.joda.time.DateTime.Property property46 = dateTime45.era();
        org.joda.time.DateTime dateTime47 = dateTime45.withTimeAtStartOfDay();
        org.joda.time.Duration duration50 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.PeriodType periodType52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration50, readableInstant51, periodType52);
        mutablePeriod53.setMonths((int) '4');
        org.joda.time.DateTime dateTime56 = dateTime45.plus((org.joda.time.ReadablePeriod) mutablePeriod53);
        org.joda.time.DateTime dateTime58 = dateTime45.minusWeeks((int) (byte) 1);
        int int59 = dateTime42.compareTo((org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.DateTime.Property property60 = dateTime45.minuteOfHour();
        org.joda.time.DateTime dateTime62 = dateTime45.withYear(1969);
        org.joda.time.Chronology chronology63 = dateTime62.getChronology();
        org.joda.time.DurationField durationField64 = chronology63.halfdays();
        org.joda.time.Period period65 = duration33.toPeriod(periodType37, chronology63);
        org.joda.time.DateTimeField dateTimeField66 = chronology63.weekOfWeekyear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0746");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant3, periodType4);
        org.joda.time.Days days6 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType7 = org.joda.time.DurationFieldType.minutes();
        int int8 = days6.get(durationFieldType7);
        mutablePeriod5.add(durationFieldType7, 8);
        mutablePeriod5.addMillis((int) (byte) 1);
        mutablePeriod5.addMonths((int) (short) 1);
        mutablePeriod5.addMillis(0);
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime19 = instant18.toDateTime();
        org.joda.time.DateTime.Property property20 = dateTime19.era();
        org.joda.time.DateTime dateTime21 = dateTime19.withTimeAtStartOfDay();
        org.joda.time.Duration duration24 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration24, readableInstant25, periodType26);
        mutablePeriod27.setMonths((int) '4');
        org.joda.time.DateTime dateTime30 = dateTime19.plus((org.joda.time.ReadablePeriod) mutablePeriod27);
        org.joda.time.DateTime dateTime32 = dateTime19.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property33 = dateTime32.monthOfYear();
        org.joda.time.DateTime.Property property34 = dateTime32.weekyear();
        org.joda.time.DateTime dateTime35 = dateTime32.toDateTime();
        int int36 = dateTime32.getSecondOfDay();
        org.joda.time.DateTime dateTime38 = dateTime32.minus((long) (short) 100);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.DateTime dateTime40 = new org.joda.time.DateTime(chronology39);
        org.joda.time.DateTime.Property property41 = dateTime40.yearOfEra();
        org.joda.time.DateTime.Property property42 = dateTime40.weekOfWeekyear();
        org.joda.time.DateTime dateTime44 = dateTime40.minusSeconds((int) 'u');
        boolean boolean45 = dateTime44.isBeforeNow();
        mutablePeriod5.setPeriod((org.joda.time.ReadableInstant) dateTime32, (org.joda.time.ReadableInstant) dateTime44);
        mutablePeriod5.setMillis((int) (byte) -1);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant18 and dateTime19", (instant18.compareTo(dateTime19) == 0) == instant18.equals(dateTime19));
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0747");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTimeField dateTimeField2 = dateTimeFieldType0.getField(chronology1);
        long long5 = dateTimeField2.add(0L, (long) (short) 1);
        org.joda.time.ReadablePartial readablePartial6 = null;
        int int7 = dateTimeField2.getMinimumValue(readablePartial6);
        long long10 = dateTimeField2.add(0L, 69);
        boolean boolean11 = dateTimeField2.isLenient();
        long long13 = dateTimeField2.roundHalfFloor((long) 1);
        org.joda.time.DateTimeFieldType dateTimeFieldType14 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.DateTimeField dateTimeField16 = dateTimeFieldType14.getField(chronology15);
        long long19 = dateTimeField16.add(0L, (long) (short) 1);
        long long21 = dateTimeField16.roundHalfCeiling((long) 2);
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime24 = instant23.toDateTime();
        org.joda.time.DateTime.Property property25 = dateTime24.era();
        org.joda.time.Instant instant27 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant29 = instant27.minus(100L);
        org.joda.time.Instant instant31 = instant29.plus((long) 100);
        org.joda.time.Instant instant33 = instant29.withMillis((long) (byte) 1);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime24, (org.joda.time.ReadableInstant) instant29);
        org.joda.time.LocalTime localTime35 = dateTime24.toLocalTime();
        org.joda.time.Duration duration39 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.PeriodType periodType41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration39, readableInstant40, periodType41);
        mutablePeriod42.setMonths((int) '4');
        org.joda.time.Period period45 = mutablePeriod42.toPeriod();
        int[] intArray46 = period45.getValues();
        int[] intArray48 = dateTimeField16.addWrapField((org.joda.time.ReadablePartial) localTime35, 0, intArray46, 3);
        int int49 = localTime35.size();
        int int50 = dateTimeField2.getMinimumValue((org.joda.time.ReadablePartial) localTime35);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant23 and dateTime24", (instant23.compareTo(dateTime24) == 0) == instant23.equals(dateTime24));
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0748");
        org.joda.time.Instant instant2 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime3 = instant2.toDateTime();
        org.joda.time.DateTime.Property property4 = dateTime3.era();
        org.joda.time.DateTime dateTime5 = dateTime3.withTimeAtStartOfDay();
        org.joda.time.Duration duration8 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration8, readableInstant9, periodType10);
        mutablePeriod11.setMonths((int) '4');
        org.joda.time.DateTime dateTime14 = dateTime3.plus((org.joda.time.ReadablePeriod) mutablePeriod11);
        org.joda.time.DateTime dateTime16 = dateTime3.minusWeeks((int) (byte) 1);
        long long17 = dateTime3.getMillis();
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant20 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime21 = instant20.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone22 = null;
        org.joda.time.DateTime dateTime23 = dateTime21.withZoneRetainFields(dateTimeZone22);
        org.joda.time.Instant instant25 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime26 = instant25.toDateTime();
        org.joda.time.DateTime.Property property27 = dateTime26.era();
        org.joda.time.DateTime dateTime28 = dateTime26.withTimeAtStartOfDay();
        org.joda.time.Duration duration31 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.PeriodType periodType33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration31, readableInstant32, periodType33);
        mutablePeriod34.setMonths((int) '4');
        org.joda.time.DateTime dateTime37 = dateTime26.plus((org.joda.time.ReadablePeriod) mutablePeriod34);
        org.joda.time.DateTime dateTime39 = dateTime26.minusWeeks((int) (byte) 1);
        int int40 = dateTime23.compareTo((org.joda.time.ReadableInstant) dateTime26);
        org.joda.time.DateTime.Property property41 = dateTime26.minuteOfHour();
        org.joda.time.DateTime dateTime43 = dateTime26.withYear(1969);
        org.joda.time.Chronology chronology44 = dateTime43.getChronology();
        org.joda.time.DurationField durationField45 = durationFieldType18.getField(chronology44);
        org.joda.time.DateTime dateTime46 = dateTime3.toDateTime(chronology44);
        org.joda.time.DurationField durationField47 = chronology44.days();
        org.joda.time.DateTimeZone dateTimeZone48 = chronology44.getZone();
        org.joda.time.Instant instant50 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime51 = instant50.toDateTime();
        org.joda.time.DateTime.Property property52 = dateTime51.era();
        org.joda.time.DateTime dateTime53 = dateTime51.withTimeAtStartOfDay();
        org.joda.time.Duration duration56 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.PeriodType periodType58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration56, readableInstant57, periodType58);
        mutablePeriod59.setMonths((int) '4');
        org.joda.time.DateTime dateTime62 = dateTime51.plus((org.joda.time.ReadablePeriod) mutablePeriod59);
        org.joda.time.LocalDate localDate63 = dateTime51.toLocalDate();
        long long65 = chronology44.set((org.joda.time.ReadablePartial) localDate63, (-3676492805054399977L));
        org.joda.time.DateTime dateTime66 = new org.joda.time.DateTime(1972L, chronology44);
        org.joda.time.DateTimeField dateTimeField67 = chronology44.centuryOfEra();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime3", (instant2.compareTo(dateTime3) == 0) == instant2.equals(dateTime3));
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0749");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.yearDayTime();
        int int3 = periodType2.size();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.DateTime.Property property7 = dateTime5.weekOfWeekyear();
        org.joda.time.Chronology chronology8 = dateTime5.getChronology();
        org.joda.time.DateTimeField dateTimeField9 = chronology8.year();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(43080000L, 454L, periodType2, chronology8);
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone14 = null;
        org.joda.time.DateTime dateTime15 = dateTime13.withZoneRetainFields(dateTimeZone14);
        org.joda.time.Duration duration16 = mutablePeriod10.toDurationTo((org.joda.time.ReadableInstant) dateTime13);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime13", (instant12.compareTo(dateTime13) == 0) == instant12.equals(dateTime13));
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0750");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        org.joda.time.DateTime.Property property21 = dateTime20.era();
        org.joda.time.DateTime dateTime22 = dateTime20.withTimeAtStartOfDay();
        org.joda.time.Instant instant23 = dateTime20.toInstant();
        org.joda.time.DateTime dateTime25 = dateTime20.withMillis((long) '4');
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableInstant) dateTime20);
        int int27 = dateTime20.getYear();
        org.joda.time.DateTime.Property property28 = dateTime20.dayOfWeek();
        org.joda.time.DateTime dateTime30 = dateTime20.plusWeeks(25985711);
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant34 = instant32.minus(100L);
        org.joda.time.DateTimeZone dateTimeZone35 = instant34.getZone();
        long long37 = dateTimeZone35.nextTransition(43200000L);
        java.util.Locale.Category category39 = java.util.Locale.Category.FORMAT;
        org.joda.time.Instant instant41 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime42 = instant41.toDateTime();
        org.joda.time.DateTime.Property property43 = dateTime42.era();
        org.joda.time.DateTime dateTime44 = property43.withMinimumValue();
        int int45 = property43.getMaximumValueOverall();
        java.util.Locale locale46 = java.util.Locale.ITALY;
        java.util.Locale locale50 = new java.util.Locale("", "hi!", "hi!");
        java.lang.String str51 = locale46.getDisplayCountry(locale50);
        java.lang.String str52 = locale50.getDisplayVariant();
        int int53 = property43.getMaximumShortTextLength(locale50);
        java.util.Locale.setDefault(category39, locale50);
        java.lang.String str55 = dateTimeZone35.getShortName((long) (-1), locale50);
        org.joda.time.Instant instant57 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime58 = instant57.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone59 = null;
        org.joda.time.DateTime dateTime60 = dateTime58.withZone(dateTimeZone59);
        org.joda.time.Instant instant62 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime63 = instant62.toDateTime();
        org.joda.time.DateTime.Property property64 = dateTime63.era();
        org.joda.time.DateTime dateTime65 = dateTime63.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType66 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean67 = dateTime63.isSupported(dateTimeFieldType66);
        org.joda.time.DateTime.Property property68 = dateTime58.property(dateTimeFieldType66);
        org.joda.time.DateTimeZone dateTimeZone69 = dateTime58.getZone();
        org.joda.time.LocalDateTime localDateTime70 = dateTime58.toLocalDateTime();
        boolean boolean71 = dateTimeZone35.isLocalDateTimeGap(localDateTime70);
        org.joda.time.DateTime dateTime72 = dateTime30.withZone(dateTimeZone35);
        long long76 = dateTimeZone35.convertLocalToUTC((long) 97, false, (long) 6);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0751");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        java.lang.Object obj14 = null;
        org.joda.time.Instant instant15 = new org.joda.time.Instant(obj14);
        org.joda.time.DateTimeZone dateTimeZone16 = instant15.getZone();
        java.lang.String str17 = dateTimeZone16.toString();
        int int19 = dateTimeZone16.getOffset(1L);
        boolean boolean21 = dateTimeZone16.isStandardOffset(0L);
        org.joda.time.DateTime dateTime22 = dateTime2.withZoneRetainFields(dateTimeZone16);
        org.joda.time.DateTime dateTime24 = dateTime22.plusYears(1969);
        org.joda.time.DateTime dateTime26 = dateTime24.minusWeeks(1439);
        org.joda.time.Instant instant28 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime29 = instant28.toDateTime();
        org.joda.time.DateTime.Property property30 = dateTime29.era();
        org.joda.time.DateTime dateTime31 = dateTime29.withTimeAtStartOfDay();
        org.joda.time.Duration duration34 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration34, readableInstant35, periodType36);
        mutablePeriod37.setMonths((int) '4');
        org.joda.time.DateTime dateTime40 = dateTime29.plus((org.joda.time.ReadablePeriod) mutablePeriod37);
        org.joda.time.LocalDate localDate41 = dateTime29.toLocalDate();
        int int42 = localDate41.size();
        org.joda.time.DateTime dateTime43 = dateTime26.withFields((org.joda.time.ReadablePartial) localDate41);
        org.joda.time.Duration duration46 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period47 = duration46.toPeriod();
        org.joda.time.Duration duration49 = duration46.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = duration46.toPeriodTo(readableInstant50);
        org.joda.time.Duration duration53 = duration46.minus(43200000L);
        org.joda.time.DateTime dateTime54 = dateTime26.plus((org.joda.time.ReadableDuration) duration53);
        org.joda.time.DateMidnight dateMidnight55 = dateTime54.toDateMidnight();
        int int56 = dateTime54.getDayOfWeek();
        int int57 = dateTime54.getMinuteOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0752");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) '#', (long) 4);
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.Instant instant5 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant7 = instant5.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime8 = instant5.toMutableDateTimeISO();
        java.lang.Object obj9 = null;
        org.joda.time.Instant instant10 = new org.joda.time.Instant(obj9);
        boolean boolean11 = mutableDateTime8.isAfter((org.joda.time.ReadableInstant) instant10);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType14, chronology15);
        org.joda.time.PeriodType periodType17 = periodType14.withWeeksRemoved();
        org.joda.time.PeriodType periodType18 = periodType17.withSecondsRemoved();
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableDuration3, (org.joda.time.ReadableInstant) instant10, periodType17);
        org.joda.time.DateTimeZone dateTimeZone22 = org.joda.time.DateTimeZone.forOffsetHoursMinutes(0, 2);
        org.joda.time.DateTimeZone.setDefault(dateTimeZone22);
        long long26 = dateTimeZone22.adjustOffset(8380845299L, false);
        org.joda.time.MutableDateTime mutableDateTime27 = instant10.toMutableDateTime(dateTimeZone22);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, (org.joda.time.ReadableInstant) mutableDateTime27);
        mutablePeriod28.setPeriod(86399, 19045, 366, (int) (byte) 0, 3, 720, 10, (-52));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant5 and mutableDateTime8", (instant5.compareTo(mutableDateTime8) == 0) == instant5.equals(mutableDateTime8));
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0753");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField29 = chronology25.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField30 = chronology25.minuteOfDay();
        org.joda.time.DurationField durationField31 = chronology25.weekyears();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0754");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime4.minuteOfDay();
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant26 = instant24.minus(100L);
        org.joda.time.Instant instant28 = instant26.plus((long) 100);
        org.joda.time.Instant instant30 = instant26.withMillis((long) (byte) 1);
        org.joda.time.Period period32 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period34 = period32.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration36 = period34.toDurationTo(readableInstant35);
        org.joda.time.Duration duration39 = duration36.withDurationAdded((long) '#', 0);
        org.joda.time.Instant instant41 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant43 = instant41.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime44 = instant41.toMutableDateTimeISO();
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period46 = duration39.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime44, periodType45);
        org.joda.time.Instant instant47 = instant30.minus((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Instant instant49 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime50 = instant49.toDateTime();
        org.joda.time.DateTime.Property property51 = dateTime50.era();
        org.joda.time.DateTime dateTime52 = dateTime50.withTimeAtStartOfDay();
        org.joda.time.Instant instant53 = dateTime50.toInstant();
        org.joda.time.DateMidnight dateMidnight54 = dateTime50.toDateMidnight();
        int int55 = dateTime50.getHourOfDay();
        org.joda.time.Days days56 = org.joda.time.Days.daysBetween((org.joda.time.ReadableInstant) instant47, (org.joda.time.ReadableInstant) dateTime50);
        org.joda.time.DateTime.Property property57 = dateTime50.centuryOfEra();
        java.util.Locale locale58 = java.util.Locale.US;
        java.util.Locale locale59 = java.util.Locale.US;
        java.lang.String str60 = locale58.getDisplayScript(locale59);
        int int61 = property57.getMaximumTextLength(locale59);
        int int62 = property22.getMaximumShortTextLength(locale59);
        java.util.Locale.setDefault(locale59);
        java.util.Set<java.lang.String> strSet64 = locale59.getUnicodeLocaleKeys();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0755");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.DateMidnight dateMidnight6 = dateTime2.toDateMidnight();
        org.joda.time.DateTime dateTime8 = dateTime2.minusSeconds((int) ' ');
        org.joda.time.Period period10 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period12 = period10.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Duration duration14 = period12.toDurationTo(readableInstant13);
        org.joda.time.Duration duration17 = duration14.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableDuration readableDuration18 = null;
        boolean boolean19 = duration17.isEqual(readableDuration18);
        org.joda.time.Duration duration22 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, readableInstant23, periodType24);
        org.joda.time.Days days26 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.minutes();
        int int28 = days26.get(durationFieldType27);
        mutablePeriod25.add(durationFieldType27, 8);
        org.joda.time.ReadablePeriod readablePeriod31 = null;
        mutablePeriod25.add(readablePeriod31);
        int int33 = mutablePeriod25.getMonths();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime(chronology34);
        org.joda.time.DateTime.Property property36 = dateTime35.yearOfEra();
        org.joda.time.Interval interval37 = property36.toInterval();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.DateTime dateTime39 = new org.joda.time.DateTime(chronology38);
        org.joda.time.DateTime.Property property40 = dateTime39.yearOfEra();
        org.joda.time.Interval interval41 = property40.toInterval();
        boolean boolean42 = interval37.contains((org.joda.time.ReadableInterval) interval41);
        mutablePeriod25.setPeriod((org.joda.time.ReadableInterval) interval37);
        org.joda.time.DurationFieldType durationFieldType45 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant47 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime48 = instant47.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone49 = null;
        org.joda.time.DateTime dateTime50 = dateTime48.withZoneRetainFields(dateTimeZone49);
        org.joda.time.Instant instant52 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime53 = instant52.toDateTime();
        org.joda.time.DateTime.Property property54 = dateTime53.era();
        org.joda.time.DateTime dateTime55 = dateTime53.withTimeAtStartOfDay();
        org.joda.time.Duration duration58 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.PeriodType periodType60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration58, readableInstant59, periodType60);
        mutablePeriod61.setMonths((int) '4');
        org.joda.time.DateTime dateTime64 = dateTime53.plus((org.joda.time.ReadablePeriod) mutablePeriod61);
        org.joda.time.DateTime dateTime66 = dateTime53.minusWeeks((int) (byte) 1);
        int int67 = dateTime50.compareTo((org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.DateTime.Property property68 = dateTime53.minuteOfHour();
        org.joda.time.DateTime dateTime70 = dateTime53.withYear(1969);
        org.joda.time.Chronology chronology71 = dateTime70.getChronology();
        org.joda.time.DurationField durationField72 = durationFieldType45.getField(chronology71);
        mutablePeriod25.add((-43199999L), chronology71);
        org.joda.time.Period period74 = duration17.toPeriod(chronology71);
        org.joda.time.DateTime dateTime75 = dateTime8.plus((org.joda.time.ReadablePeriod) period74);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0756");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.Interval interval7 = property6.toInterval();
        boolean boolean8 = interval3.contains((org.joda.time.ReadableInterval) interval7);
        java.lang.String str9 = interval3.toString();
        long long10 = interval3.getEndMillis();
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone14 = null;
        org.joda.time.DateTime dateTime15 = dateTime13.withZoneRetainFields(dateTimeZone14);
        org.joda.time.Instant instant17 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime18 = instant17.toDateTime();
        org.joda.time.DateTime.Property property19 = dateTime18.era();
        org.joda.time.DateTime dateTime20 = dateTime18.withTimeAtStartOfDay();
        org.joda.time.Duration duration23 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, readableInstant24, periodType25);
        mutablePeriod26.setMonths((int) '4');
        org.joda.time.DateTime dateTime29 = dateTime18.plus((org.joda.time.ReadablePeriod) mutablePeriod26);
        org.joda.time.DateTime dateTime31 = dateTime18.minusWeeks((int) (byte) 1);
        int int32 = dateTime15.compareTo((org.joda.time.ReadableInstant) dateTime18);
        org.joda.time.DateTime.Property property33 = dateTime18.minuteOfHour();
        org.joda.time.DateTime dateTime35 = dateTime18.withYear(1969);
        org.joda.time.Chronology chronology36 = dateTime35.getChronology();
        boolean boolean37 = interval3.isBefore((org.joda.time.ReadableInstant) dateTime35);
        int int38 = dateTime35.getDayOfMonth();
        org.joda.time.LocalTime localTime39 = dateTime35.toLocalTime();
        org.joda.time.Instant instant41 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime42 = instant41.toDateTime();
        org.joda.time.TimeOfDay timeOfDay43 = dateTime42.toTimeOfDay();
        org.joda.time.DateTime dateTime44 = new org.joda.time.DateTime((java.lang.Object) dateTime42);
        org.joda.time.Instant instant46 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime47 = instant46.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone48 = null;
        org.joda.time.DateTime dateTime49 = dateTime47.withZoneRetainFields(dateTimeZone48);
        org.joda.time.Instant instant51 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime52 = instant51.toDateTime();
        org.joda.time.DateTime.Property property53 = dateTime52.era();
        org.joda.time.DateTime dateTime54 = dateTime52.withTimeAtStartOfDay();
        org.joda.time.Duration duration57 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.PeriodType periodType59 = null;
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration57, readableInstant58, periodType59);
        mutablePeriod60.setMonths((int) '4');
        org.joda.time.DateTime dateTime63 = dateTime52.plus((org.joda.time.ReadablePeriod) mutablePeriod60);
        org.joda.time.DateTime dateTime65 = dateTime52.minusWeeks((int) (byte) 1);
        int int66 = dateTime49.compareTo((org.joda.time.ReadableInstant) dateTime52);
        org.joda.time.DateTime.Property property67 = dateTime52.minuteOfHour();
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime42, (org.joda.time.ReadableInstant) dateTime52);
        org.joda.time.DateTime dateTime69 = localTime39.toDateTime((org.joda.time.ReadableInstant) dateTime52);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime13", (instant12.compareTo(dateTime13) == 0) == instant12.equals(dateTime13));
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0757");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.LocalDate localDate14 = dateTime2.toLocalDate();
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTime.Property property18 = dateTime17.era();
        org.joda.time.DateTime dateTime19 = dateTime17.withTimeAtStartOfDay();
        org.joda.time.Instant instant20 = dateTime17.toInstant();
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant20);
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime24 = instant23.toDateTime();
        org.joda.time.DateTime.Property property25 = dateTime24.era();
        org.joda.time.DateTime dateTime26 = property25.withMinimumValue();
        int int27 = property25.getMaximumValueOverall();
        java.util.Locale locale28 = java.util.Locale.ENGLISH;
        java.lang.String str29 = locale28.getScript();
        java.lang.String str30 = locale28.getDisplayCountry();
        int int31 = property25.getMaximumShortTextLength(locale28);
        org.joda.time.DateTime dateTime32 = property25.withMaximumValue();
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType34 = periodType33.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) dateTime32, periodType33);
        org.joda.time.DateTime dateTime37 = dateTime32.plusWeeks((-2147483648));
        org.joda.time.YearMonthDay yearMonthDay38 = dateTime32.toYearMonthDay();
        org.joda.time.ReadableInterval readableInterval39 = null;
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.secondsIn(readableInterval39);
        org.joda.time.Seconds seconds42 = seconds40.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds44 = seconds40.minus(86399999);
        int int45 = seconds40.size();
        boolean boolean46 = yearMonthDay38.equals((java.lang.Object) int45);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0758");
        org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PT432000S");
        org.joda.time.Duration duration2 = duration1.toDuration();
        org.joda.time.Instant instant4 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant6 = instant4.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime7 = instant4.toMutableDateTimeISO();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.DateTime dateTime9 = new org.joda.time.DateTime(chronology8);
        org.joda.time.DateTime.Property property10 = dateTime9.yearOfEra();
        org.joda.time.DateTime.Property property11 = dateTime9.weekOfWeekyear();
        boolean boolean12 = mutableDateTime7.isBefore((org.joda.time.ReadableInstant) dateTime9);
        org.joda.time.DateTime.Property property13 = dateTime9.dayOfWeek();
        boolean boolean14 = property13.isLeap();
        org.joda.time.DateTime dateTime15 = property13.roundHalfCeilingCopy();
        org.joda.time.Period period17 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period19 = period17.minusMonths((int) (short) 10);
        org.joda.time.Period period21 = period19.withSeconds((int) '4');
        org.joda.time.Period period22 = period21.negated();
        org.joda.time.DateTime dateTime23 = dateTime15.minus((org.joda.time.ReadablePeriod) period22);
        org.joda.time.Duration duration25 = org.joda.time.Duration.millis((long) ' ');
        org.joda.time.Duration duration28 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period29 = duration28.toPeriod();
        org.joda.time.Duration duration31 = duration28.plus((long) (byte) 0);
        org.joda.time.Instant instant33 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime34 = instant33.toDateTime();
        boolean boolean36 = dateTime34.isEqual(10L);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType39, chronology40);
        org.joda.time.PeriodType periodType42 = periodType39.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration31, (org.joda.time.ReadableInstant) dateTime34, periodType42);
        org.joda.time.Instant instant45 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime46 = instant45.toDateTime();
        org.joda.time.DateTime.Property property47 = dateTime46.era();
        org.joda.time.DateTime dateTime48 = dateTime46.withTimeAtStartOfDay();
        org.joda.time.Instant instant49 = dateTime46.toInstant();
        org.joda.time.DateTime dateTime51 = dateTime46.withMillis((long) '4');
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime34, (org.joda.time.ReadableInstant) dateTime46);
        int int53 = dateTime46.getYear();
        org.joda.time.Duration duration56 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period57 = duration56.toPeriod();
        org.joda.time.Duration duration59 = duration56.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Period period61 = duration56.toPeriodTo(readableInstant60);
        org.joda.time.Instant instant63 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant65 = instant63.minus(100L);
        java.lang.String str66 = instant65.toString();
        org.joda.time.Duration duration69 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period70 = duration69.toPeriod();
        org.joda.time.Duration duration72 = duration69.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Period period74 = duration69.toPeriodTo(readableInstant73);
        org.joda.time.Duration duration77 = duration69.withDurationAdded((long) (short) -1, (int) (byte) 100);
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType80, chronology81);
        org.joda.time.PeriodType periodType83 = periodType80.withWeeksRemoved();
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.Period period85 = duration77.toPeriod(periodType83, chronology84);
        org.joda.time.Period period86 = duration56.toPeriodFrom((org.joda.time.ReadableInstant) instant65, periodType83);
        org.joda.time.Period period87 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, (org.joda.time.ReadableInstant) dateTime46, periodType83);
        org.joda.time.PeriodType periodType88 = periodType83.withMillisRemoved();
        org.joda.time.Period period89 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime23, periodType88);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant4 and mutableDateTime7", (instant4.compareTo(mutableDateTime7) == 0) == instant4.equals(mutableDateTime7));
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0759");
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType4, chronology5);
        org.joda.time.PeriodType periodType7 = periodType4.withWeeksRemoved();
        org.joda.time.PeriodType periodType8 = periodType7.withSecondsRemoved();
        org.joda.time.PeriodType periodType9 = periodType8.withWeeksRemoved();
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone13 = null;
        org.joda.time.DateTime dateTime14 = dateTime12.withZoneRetainFields(dateTimeZone13);
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTime.Property property18 = dateTime17.era();
        org.joda.time.DateTime dateTime19 = dateTime17.withTimeAtStartOfDay();
        org.joda.time.Duration duration22 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, readableInstant23, periodType24);
        mutablePeriod25.setMonths((int) '4');
        org.joda.time.DateTime dateTime28 = dateTime17.plus((org.joda.time.ReadablePeriod) mutablePeriod25);
        org.joda.time.DateTime dateTime30 = dateTime17.minusWeeks((int) (byte) 1);
        int int31 = dateTime14.compareTo((org.joda.time.ReadableInstant) dateTime17);
        org.joda.time.DateTime.Property property32 = dateTime17.minuteOfHour();
        org.joda.time.DateTime dateTime34 = dateTime17.withYear(1969);
        org.joda.time.Chronology chronology35 = dateTime34.getChronology();
        org.joda.time.DateTimeField dateTimeField36 = chronology35.year();
        org.joda.time.DateTimeField dateTimeField37 = chronology35.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField38 = chronology35.year();
        org.joda.time.Period period39 = new org.joda.time.Period((long) (byte) 100, (long) 'a', periodType9, chronology35);
        org.joda.time.DurationFieldType durationFieldType40 = org.joda.time.DurationFieldType.hours();
        java.lang.String str41 = durationFieldType40.getName();
        boolean boolean42 = periodType9.isSupported(durationFieldType40);
        org.joda.time.PeriodType periodType43 = periodType9.withHoursRemoved();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime12", (instant11.compareTo(dateTime12) == 0) == instant11.equals(dateTime12));
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0760");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property16 = dateTime15.monthOfYear();
        org.joda.time.DateTime.Property property17 = dateTime15.weekyear();
        org.joda.time.DateTime dateTime18 = dateTime15.toDateTime();
        int int19 = dateTime15.getSecondOfDay();
        org.joda.time.DateTime.Property property20 = dateTime15.weekyear();
        java.lang.Object obj21 = null;
        org.joda.time.Instant instant22 = new org.joda.time.Instant(obj21);
        org.joda.time.DateTimeZone dateTimeZone23 = instant22.getZone();
        java.lang.String str24 = dateTimeZone23.toString();
        org.joda.time.DateTime dateTime25 = new org.joda.time.DateTime(dateTimeZone23);
        java.util.Locale locale27 = java.util.Locale.JAPANESE;
        java.lang.String str28 = locale27.getDisplayScript();
        java.lang.String str29 = dateTimeZone23.getShortName(100L, locale27);
        java.lang.String str30 = locale27.getDisplayLanguage();
        java.lang.String str31 = locale27.getISO3Language();
        java.util.Calendar calendar32 = dateTime15.toCalendar(locale27);
        org.joda.time.DateTime dateTime34 = dateTime15.withMillisOfDay(20);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0761");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes21 = minutes19.minus((int) (short) -1);
        boolean boolean22 = minutes18.isGreaterThan(minutes19);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        boolean boolean24 = minutes18.isLessThan(minutes23);
        org.joda.time.DateTime dateTime25 = dateTime8.plus((org.joda.time.ReadablePeriod) minutes18);
        org.joda.time.DateTime.Property property26 = dateTime25.year();
        org.joda.time.DateTime.Property property27 = dateTime25.secondOfMinute();
        org.joda.time.DurationField durationField28 = property27.getLeapDurationField();
        org.joda.time.DurationField durationField29 = property27.getDurationField();
        org.joda.time.DateTime dateTime31 = property27.addToCopy((long) 70);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0762");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration4 = null;
        boolean boolean5 = duration2.isEqual(readableDuration4);
        org.joda.time.Duration duration7 = duration2.minus((long) 1);
        org.joda.time.Duration duration9 = duration7.minus((long) '4');
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Duration duration22 = duration19.plus((long) (byte) 0);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType30, chronology31);
        org.joda.time.PeriodType periodType33 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, (org.joda.time.ReadableInstant) dateTime25, periodType33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime12, (org.joda.time.ReadableDuration) duration16, periodType33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime12, periodType36);
        org.joda.time.TimeOfDay timeOfDay38 = dateTime12.toTimeOfDay();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.DateTime dateTime40 = timeOfDay38.toDateTime(readableInstant39);
        int int41 = timeOfDay38.size();
        org.joda.time.Chronology chronology42 = timeOfDay38.getChronology();
        org.joda.time.DateTimeField dateTimeField43 = chronology42.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField44 = chronology42.clockhourOfHalfday();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime12", (instant11.compareTo(dateTime12) == 0) == instant11.equals(dateTime12));
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0763");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant3 = instant1.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime4 = instant1.toMutableDateTimeISO();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.DateTime dateTime6 = new org.joda.time.DateTime(chronology5);
        org.joda.time.DateTime.Property property7 = dateTime6.yearOfEra();
        org.joda.time.DateTime.Property property8 = dateTime6.weekOfWeekyear();
        boolean boolean9 = mutableDateTime4.isBefore((org.joda.time.ReadableInstant) dateTime6);
        org.joda.time.DateTime.Property property10 = dateTime6.dayOfWeek();
        org.joda.time.DateTime dateTime12 = dateTime6.minusMonths((-1));
        int int13 = dateTime6.getHourOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and mutableDateTime4", (instant1.compareTo(mutableDateTime4) == 0) == instant1.equals(mutableDateTime4));
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0764");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant3, periodType4);
        mutablePeriod5.setPeriod((long) 1, (-1L));
        mutablePeriod5.setMillis((int) (short) 0);
        int int11 = mutablePeriod5.getDays();
        mutablePeriod5.addMinutes(1969);
        org.joda.time.Chronology chronology15 = null;
        mutablePeriod5.setPeriod((long) 'a', chronology15);
        org.joda.time.Chronology chronology18 = null;
        mutablePeriod5.add((long) 'u', chronology18);
        mutablePeriod5.addMinutes((int) (short) -1);
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime24 = instant23.toDateTime();
        org.joda.time.DateTime.Property property25 = dateTime24.era();
        org.joda.time.MutableDateTime mutableDateTime26 = dateTime24.toMutableDateTime();
        org.joda.time.DateTime.Property property27 = dateTime24.minuteOfDay();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.DateTime dateTime29 = new org.joda.time.DateTime(chronology28);
        org.joda.time.DateTime.Property property30 = dateTime29.yearOfEra();
        org.joda.time.Interval interval31 = property30.toInterval();
        org.joda.time.DateTime dateTime32 = interval31.getStart();
        org.joda.time.DateTime dateTime33 = dateTime32.toDateTimeISO();
        org.joda.time.Instant instant34 = dateTime32.toInstant();
        int int35 = property27.getDifference((org.joda.time.ReadableInstant) instant34);
        org.joda.time.Chronology chronology36 = instant34.getChronology();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration38 = minutes37.toStandardDuration();
        org.joda.time.Instant instant40 = instant34.withDurationAdded((org.joda.time.ReadableDuration) duration38, 70);
        org.joda.time.Duration duration41 = mutablePeriod5.toDurationFrom((org.joda.time.ReadableInstant) instant40);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant23 and dateTime24", (instant23.compareTo(dateTime24) == 0) == instant23.equals(dateTime24));
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0765");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(432000000L);
        org.joda.time.Duration duration2 = duration1.toDuration();
        org.joda.time.Duration duration4 = duration2.plus((long) (-27349920));
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone8 = null;
        org.joda.time.DateTime dateTime9 = dateTime7.withZoneRetainFields(dateTimeZone8);
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.DateTime dateTime14 = dateTime12.withTimeAtStartOfDay();
        org.joda.time.Duration duration17 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration17, readableInstant18, periodType19);
        mutablePeriod20.setMonths((int) '4');
        org.joda.time.DateTime dateTime23 = dateTime12.plus((org.joda.time.ReadablePeriod) mutablePeriod20);
        org.joda.time.DateTime dateTime25 = dateTime12.minusWeeks((int) (byte) 1);
        int int26 = dateTime9.compareTo((org.joda.time.ReadableInstant) dateTime12);
        org.joda.time.DateTime dateTime27 = dateTime9.toDateTimeISO();
        org.joda.time.Instant instant29 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant31 = instant29.minus(100L);
        java.lang.String str32 = instant31.toString();
        org.joda.time.Duration duration35 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period36 = duration35.toPeriod();
        org.joda.time.Duration duration38 = duration35.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = duration35.toPeriodTo(readableInstant39);
        org.joda.time.Duration duration42 = duration35.withMillis((long) (short) 0);
        org.joda.time.Instant instant43 = instant31.plus((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) instant31);
        org.joda.time.DateTime dateTime46 = dateTime27.withWeekOfWeekyear(7);
        org.joda.time.DateTime dateTime47 = dateTime46.toDateTimeISO();
        org.joda.time.DateTime dateTime50 = dateTime46.withDurationAdded(120L, (int) '#');
        org.joda.time.Period period51 = duration4.toPeriodFrom((org.joda.time.ReadableInstant) dateTime50);
        org.joda.time.DateTime dateTime53 = dateTime50.minusYears(0);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant6 and dateTime7", (instant6.compareTo(dateTime7) == 0) == instant6.equals(dateTime7));
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0766");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.dayOfMonth();
        org.joda.time.DurationField durationField27 = chronology25.minutes();
        int int30 = durationField27.getValue((long) 69, (long) (short) 0);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.DateTime dateTime32 = new org.joda.time.DateTime(chronology31);
        org.joda.time.DateTime.Property property33 = dateTime32.yearOfEra();
        org.joda.time.Interval interval34 = property33.toInterval();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.DateTime dateTime36 = new org.joda.time.DateTime(chronology35);
        org.joda.time.DateTime.Property property37 = dateTime36.yearOfEra();
        org.joda.time.Interval interval38 = property37.toInterval();
        boolean boolean39 = interval34.contains((org.joda.time.ReadableInterval) interval38);
        org.joda.time.Chronology chronology40 = interval38.getChronology();
        org.joda.time.DurationField durationField41 = chronology40.weeks();
        org.joda.time.DateTimeField dateTimeField42 = chronology40.minuteOfDay();
        org.joda.time.DurationField durationField43 = chronology40.seconds();
        org.joda.time.DurationField durationField44 = chronology40.centuries();
        int int45 = durationField27.compareTo(durationField44);
        long long46 = durationField27.getUnitMillis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0767");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.Instant instant5 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant7 = instant5.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime8 = instant5.toMutableDateTimeISO();
        org.joda.time.Period period9 = duration2.toPeriodTo((org.joda.time.ReadableInstant) instant5);
        long long10 = instant5.getMillis();
        org.joda.time.Chronology chronology11 = instant5.getChronology();
        org.joda.time.Duration duration14 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration14, readableInstant15, periodType16);
        mutablePeriod17.setPeriod((long) 1, (-1L));
        mutablePeriod17.setMillis((int) (short) 0);
        int int23 = mutablePeriod17.getDays();
        mutablePeriod17.addMinutes(1969);
        org.joda.time.Chronology chronology27 = null;
        mutablePeriod17.setPeriod((long) 'a', chronology27);
        int int29 = mutablePeriod17.getMillis();
        mutablePeriod17.setMonths(2022);
        org.joda.time.Instant instant33 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime34 = instant33.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone35 = null;
        org.joda.time.DateTime dateTime36 = dateTime34.withZoneRetainFields(dateTimeZone35);
        org.joda.time.Instant instant38 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime39 = instant38.toDateTime();
        org.joda.time.DateTime.Property property40 = dateTime39.era();
        org.joda.time.DateTime dateTime41 = dateTime39.withTimeAtStartOfDay();
        org.joda.time.Duration duration44 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.PeriodType periodType46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration44, readableInstant45, periodType46);
        mutablePeriod47.setMonths((int) '4');
        org.joda.time.DateTime dateTime50 = dateTime39.plus((org.joda.time.ReadablePeriod) mutablePeriod47);
        org.joda.time.DateTime dateTime52 = dateTime39.minusWeeks((int) (byte) 1);
        int int53 = dateTime36.compareTo((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.DateTime dateTime54 = dateTime36.toDateTimeISO();
        org.joda.time.DateTime.Property property55 = dateTime36.dayOfMonth();
        org.joda.time.Duration duration56 = mutablePeriod17.toDurationFrom((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Instant instant57 = instant5.minus((org.joda.time.ReadableDuration) duration56);
        org.joda.time.Duration duration59 = new org.joda.time.Duration(59L);
        org.joda.time.Duration duration62 = new org.joda.time.Duration((-1L), 10L);
        boolean boolean63 = duration59.isShorterThan((org.joda.time.ReadableDuration) duration62);
        boolean boolean64 = duration56.isShorterThan((org.joda.time.ReadableDuration) duration62);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant5 and mutableDateTime8", (instant5.compareTo(mutableDateTime8) == 0) == instant5.equals(mutableDateTime8));
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0768");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.DateTime dateTime6 = dateTime2.withCenturyOfEra((int) (byte) 1);
        org.joda.time.DateTimeFieldType dateTimeFieldType7 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.DateTimeField dateTimeField9 = dateTimeFieldType7.getField(chronology8);
        long long12 = dateTimeField9.add(0L, (long) (short) 1);
        long long15 = dateTimeField9.add(1L, (-1));
        int int16 = dateTime2.get(dateTimeField9);
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime19 = instant18.toDateTime();
        org.joda.time.DateTime.Property property20 = dateTime19.era();
        org.joda.time.DateTime dateTime21 = dateTime19.withTimeAtStartOfDay();
        org.joda.time.Duration duration24 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration24, readableInstant25, periodType26);
        mutablePeriod27.setMonths((int) '4');
        org.joda.time.DateTime dateTime30 = dateTime19.plus((org.joda.time.ReadablePeriod) mutablePeriod27);
        org.joda.time.DateTime dateTime32 = dateTime19.minusWeeks((int) (byte) 1);
        long long33 = dateTime19.getMillis();
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime37 = instant36.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone38 = null;
        org.joda.time.DateTime dateTime39 = dateTime37.withZoneRetainFields(dateTimeZone38);
        org.joda.time.Instant instant41 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime42 = instant41.toDateTime();
        org.joda.time.DateTime.Property property43 = dateTime42.era();
        org.joda.time.DateTime dateTime44 = dateTime42.withTimeAtStartOfDay();
        org.joda.time.Duration duration47 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.PeriodType periodType49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration47, readableInstant48, periodType49);
        mutablePeriod50.setMonths((int) '4');
        org.joda.time.DateTime dateTime53 = dateTime42.plus((org.joda.time.ReadablePeriod) mutablePeriod50);
        org.joda.time.DateTime dateTime55 = dateTime42.minusWeeks((int) (byte) 1);
        int int56 = dateTime39.compareTo((org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.DateTime.Property property57 = dateTime42.minuteOfHour();
        org.joda.time.DateTime dateTime59 = dateTime42.withYear(1969);
        org.joda.time.Chronology chronology60 = dateTime59.getChronology();
        org.joda.time.DurationField durationField61 = durationFieldType34.getField(chronology60);
        org.joda.time.DateTime dateTime62 = dateTime19.toDateTime(chronology60);
        org.joda.time.DateTime dateTime63 = dateTime2.toDateTime(chronology60);
        org.joda.time.DateTimeField dateTimeField64 = chronology60.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField65 = chronology60.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField66 = chronology60.centuryOfEra();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0769");
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(0L);
        java.lang.Object obj2 = null;
        org.joda.time.Instant instant3 = new org.joda.time.Instant(obj2);
        org.joda.time.DateTimeZone dateTimeZone4 = instant3.getZone();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period8 = duration7.toPeriod();
        org.joda.time.Duration duration10 = duration7.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = duration7.toPeriodTo(readableInstant11);
        org.joda.time.Duration duration14 = duration7.withMillis((long) (short) 0);
        org.joda.time.Duration duration17 = duration7.withDurationAdded((long) 1, (int) ' ');
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        boolean boolean22 = dateTime20.isEqual(10L);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, (org.joda.time.ReadableInstant) dateTime20, periodType23);
        org.joda.time.DateTime dateTime26 = dateTime20.minusSeconds((int) 'a');
        org.joda.time.DateTime dateTime28 = dateTime20.withMinuteOfHour(0);
        int int29 = dateTimeZone4.getOffset((org.joda.time.ReadableInstant) dateTime20);
        int int30 = dateTime1.compareTo((org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant33 = instant32.toInstant();
        org.joda.time.DateTime dateTime34 = instant33.toDateTimeISO();
        org.joda.time.DateTime dateTime35 = dateTime34.withLaterOffsetAtOverlap();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period40 = duration39.toPeriod();
        org.joda.time.Duration duration42 = duration39.plus((long) (byte) 0);
        org.joda.time.Instant instant44 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime45 = instant44.toDateTime();
        boolean boolean47 = dateTime45.isEqual(10L);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType50, chronology51);
        org.joda.time.PeriodType periodType53 = periodType50.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration42, (org.joda.time.ReadableInstant) dateTime45, periodType53);
        org.joda.time.Duration duration57 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period58 = duration57.toPeriod();
        org.joda.time.Duration duration60 = duration57.plus((long) (byte) 0);
        org.joda.time.Duration duration61 = duration57.toDuration();
        org.joda.time.Duration duration62 = duration42.minus((org.joda.time.ReadableDuration) duration57);
        long long63 = duration42.getStandardDays();
        org.joda.time.PeriodType periodType68 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType68, chronology69);
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(1L, (long) 10, periodType68, chronology71);
        org.joda.time.PeriodType periodType73 = periodType68.withDaysRemoved();
        org.joda.time.Period period74 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration42, periodType73);
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime1, (org.joda.time.ReadableInstant) dateTime35, periodType73);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant19 and dateTime20", (instant19.compareTo(dateTime20) == 0) == instant19.equals(dateTime20));
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0770");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime4 = instant3.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone5 = null;
        org.joda.time.DateTime dateTime6 = dateTime4.withZoneRetainFields(dateTimeZone5);
        org.joda.time.Instant instant8 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime9 = instant8.toDateTime();
        org.joda.time.DateTime.Property property10 = dateTime9.era();
        org.joda.time.DateTime dateTime11 = dateTime9.withTimeAtStartOfDay();
        org.joda.time.Duration duration14 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration14, readableInstant15, periodType16);
        mutablePeriod17.setMonths((int) '4');
        org.joda.time.DateTime dateTime20 = dateTime9.plus((org.joda.time.ReadablePeriod) mutablePeriod17);
        org.joda.time.DateTime dateTime22 = dateTime9.minusWeeks((int) (byte) 1);
        int int23 = dateTime6.compareTo((org.joda.time.ReadableInstant) dateTime9);
        org.joda.time.DateTime.Property property24 = dateTime9.minuteOfHour();
        org.joda.time.DateTime dateTime26 = dateTime9.withYear(1969);
        org.joda.time.Chronology chronology27 = dateTime26.getChronology();
        org.joda.time.DateTimeField dateTimeField28 = chronology27.dayOfMonth();
        org.joda.time.DurationField durationField29 = chronology27.minutes();
        org.joda.time.DateTime dateTime30 = dateTime1.toDateTime(chronology27);
        org.joda.time.DateTime dateTime32 = dateTime1.plusMillis(6);
        org.joda.time.Instant instant34 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime35 = instant34.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone36 = null;
        org.joda.time.DateTime dateTime37 = dateTime35.withZoneRetainFields(dateTimeZone36);
        org.joda.time.Instant instant39 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime40 = instant39.toDateTime();
        org.joda.time.DateTime.Property property41 = dateTime40.era();
        org.joda.time.DateTime dateTime42 = dateTime40.withTimeAtStartOfDay();
        org.joda.time.Duration duration45 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.PeriodType periodType47 = null;
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration45, readableInstant46, periodType47);
        mutablePeriod48.setMonths((int) '4');
        org.joda.time.DateTime dateTime51 = dateTime40.plus((org.joda.time.ReadablePeriod) mutablePeriod48);
        org.joda.time.DateTime dateTime53 = dateTime40.minusWeeks((int) (byte) 1);
        int int54 = dateTime37.compareTo((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.DateTime.Property property55 = dateTime40.minuteOfHour();
        org.joda.time.DateTime dateTime57 = dateTime40.withYear(1969);
        org.joda.time.Chronology chronology58 = dateTime57.getChronology();
        org.joda.time.DateTimeField dateTimeField59 = chronology58.year();
        org.joda.time.DateTimeField dateTimeField60 = chronology58.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField61 = chronology58.year();
        org.joda.time.DateTimeZone dateTimeZone62 = chronology58.getZone();
        org.joda.time.DateTime dateTime63 = dateTime32.withChronology(chronology58);
        org.joda.time.DurationField durationField64 = chronology58.days();
        org.joda.time.DateTimeField dateTimeField65 = chronology58.minuteOfHour();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant3 and dateTime4", (instant3.compareTo(dateTime4) == 0) == instant3.equals(dateTime4));
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0771");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        int int4 = dateTime2.getWeekOfWeekyear();
        int int5 = dateTime2.getMonthOfYear();
        int int6 = dateTime2.getDayOfWeek();
        org.joda.time.DateTime dateTime8 = dateTime2.plus(4190400000L);
        org.joda.time.DateTime dateTime10 = dateTime8.withYearOfCentury((int) (short) 10);
        java.lang.String str11 = dateTime8.toString();
        org.joda.time.DateTime dateTime12 = dateTime8.withEarlierOffsetAtOverlap();
        org.joda.time.DateTimeFieldType dateTimeFieldType13 = org.joda.time.DateTimeFieldType.weekyear();
        boolean boolean14 = dateTime12.isSupported(dateTimeFieldType13);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes18 = minutes16.minus((int) (short) -1);
        boolean boolean19 = minutes15.isGreaterThan(minutes16);
        org.joda.time.Minutes minutes20 = null;
        org.joda.time.Minutes minutes21 = minutes16.minus(minutes20);
        org.joda.time.Minutes minutes23 = minutes16.plus((int) (short) 1);
        org.joda.time.Minutes minutes25 = minutes23.plus((int) (short) 1);
        org.joda.time.Duration duration26 = minutes25.toStandardDuration();
        org.joda.time.Instant instant28 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime29 = instant28.toDateTime();
        org.joda.time.DateTime.Property property30 = dateTime29.era();
        org.joda.time.DateTime dateTime31 = dateTime29.withTimeAtStartOfDay();
        org.joda.time.Duration duration34 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration34, readableInstant35, periodType36);
        mutablePeriod37.setMonths((int) '4');
        org.joda.time.DateTime dateTime40 = dateTime29.plus((org.joda.time.ReadablePeriod) mutablePeriod37);
        int int41 = dateTime29.getMinuteOfDay();
        org.joda.time.DateTime dateTime43 = dateTime29.withMillisOfSecond((int) '#');
        org.joda.time.PeriodType periodType44 = null;
        org.joda.time.Period period45 = duration26.toPeriodFrom((org.joda.time.ReadableInstant) dateTime43, periodType44);
        org.joda.time.Period period47 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period49 = period47.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Duration duration51 = period49.toDurationTo(readableInstant50);
        org.joda.time.Duration duration54 = duration51.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Period period56 = duration54.toPeriodFrom(readableInstant55);
        org.joda.time.Instant instant58 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime59 = instant58.toDateTime();
        org.joda.time.DateTime.Property property60 = dateTime59.era();
        org.joda.time.Duration duration63 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration66 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period67 = duration66.toPeriod();
        org.joda.time.Duration duration69 = duration66.plus((long) (byte) 0);
        org.joda.time.Instant instant71 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime72 = instant71.toDateTime();
        boolean boolean74 = dateTime72.isEqual(10L);
        org.joda.time.PeriodType periodType77 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType77, chronology78);
        org.joda.time.PeriodType periodType80 = periodType77.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration69, (org.joda.time.ReadableInstant) dateTime72, periodType80);
        org.joda.time.Period period82 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime59, (org.joda.time.ReadableDuration) duration63, periodType80);
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.Period period84 = duration54.toPeriod(periodType80, chronology83);
        org.joda.time.PeriodType periodType85 = periodType80.withHoursRemoved();
        org.joda.time.PeriodType periodType86 = periodType85.withMinutesRemoved();
        org.joda.time.Period period87 = duration26.toPeriod(periodType86);
        org.joda.time.MutablePeriod mutablePeriod88 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime12, (org.joda.time.ReadableDuration) duration26);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0772");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant3 = instant1.minus(100L);
        org.joda.time.Instant instant5 = instant3.plus((long) 100);
        org.joda.time.Instant instant7 = instant3.withMillis((long) (byte) 1);
        org.joda.time.Period period9 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period11 = period9.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration13 = period11.toDurationTo(readableInstant12);
        org.joda.time.Duration duration16 = duration13.withDurationAdded((long) '#', 0);
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant20 = instant18.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime21 = instant18.toMutableDateTimeISO();
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period23 = duration16.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime21, periodType22);
        org.joda.time.Instant instant24 = instant7.minus((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Instant instant25 = instant7.toInstant();
        org.joda.time.Instant instant27 = instant25.withMillis((long) 1);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) instant27, readableInstant28);
        org.joda.time.Period period31 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period33 = period31.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Duration duration35 = period33.toDurationTo(readableInstant34);
        org.joda.time.Duration duration38 = duration35.withDurationAdded((long) '#', 0);
        org.joda.time.Duration duration41 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period42 = duration41.toPeriod();
        org.joda.time.Duration duration44 = duration41.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = duration41.toPeriodTo(readableInstant45);
        org.joda.time.Weeks weeks47 = period46.toStandardWeeks();
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = period46.get(durationFieldType48);
        int int50 = period46.getWeeks();
        org.joda.time.Duration duration51 = period46.toStandardDuration();
        int int52 = duration35.compareTo((org.joda.time.ReadableDuration) duration51);
        org.joda.time.Instant instant53 = instant27.minus((org.joda.time.ReadableDuration) duration35);
        org.joda.time.DateTimeFieldType dateTimeFieldType54 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.DateTime dateTime56 = new org.joda.time.DateTime(chronology55);
        org.joda.time.DateTime.Property property57 = dateTime56.yearOfEra();
        org.joda.time.Interval interval58 = property57.toInterval();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.DateTime dateTime60 = new org.joda.time.DateTime(chronology59);
        org.joda.time.DateTime.Property property61 = dateTime60.yearOfEra();
        org.joda.time.Interval interval62 = property61.toInterval();
        boolean boolean63 = interval58.contains((org.joda.time.ReadableInterval) interval62);
        org.joda.time.Chronology chronology64 = interval62.getChronology();
        org.joda.time.DurationField durationField65 = chronology64.weeks();
        org.joda.time.DateTimeField dateTimeField66 = chronology64.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField67 = chronology64.yearOfEra();
        org.joda.time.DateTimeField dateTimeField68 = dateTimeFieldType54.getField(chronology64);
        org.joda.time.Period period69 = duration35.toPeriod(chronology64);
        org.joda.time.Instant instant71 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime72 = instant71.toDateTime();
        org.joda.time.DateTime.Property property73 = dateTime72.era();
        org.joda.time.DateTime dateTime74 = dateTime72.withTimeAtStartOfDay();
        org.joda.time.Instant instant75 = dateTime72.toInstant();
        org.joda.time.DateMidnight dateMidnight76 = dateTime72.toDateMidnight();
        org.joda.time.YearMonthDay yearMonthDay77 = dateTime72.toYearMonthDay();
        org.joda.time.Period period78 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, (org.joda.time.ReadableInstant) dateTime72);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and mutableDateTime21", (instant1.compareTo(mutableDateTime21) == 0) == instant1.equals(mutableDateTime21));
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0773");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.millisOfDay();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.hourOfDay();
        org.joda.time.DateTimeField dateTimeField29 = chronology25.clockhourOfHalfday();
        org.joda.time.DateTimeField dateTimeField30 = chronology25.year();
        java.lang.String str31 = chronology25.toString();
        org.joda.time.DateTimeField dateTimeField32 = chronology25.minuteOfDay();
        org.joda.time.Duration duration35 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds36 = duration35.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration37 = null;
        boolean boolean38 = duration35.isEqual(readableDuration37);
        org.joda.time.Duration duration40 = duration35.minus((long) 1);
        org.joda.time.Duration duration42 = duration40.minus((long) '4');
        org.joda.time.Instant instant44 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime45 = instant44.toDateTime();
        org.joda.time.DateTime.Property property46 = dateTime45.era();
        org.joda.time.Duration duration49 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration52 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period53 = duration52.toPeriod();
        org.joda.time.Duration duration55 = duration52.plus((long) (byte) 0);
        org.joda.time.Instant instant57 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime58 = instant57.toDateTime();
        boolean boolean60 = dateTime58.isEqual(10L);
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType63, chronology64);
        org.joda.time.PeriodType periodType66 = periodType63.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration55, (org.joda.time.ReadableInstant) dateTime58, periodType66);
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime45, (org.joda.time.ReadableDuration) duration49, periodType66);
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, (org.joda.time.ReadableInstant) dateTime45, periodType69);
        org.joda.time.TimeOfDay timeOfDay71 = dateTime45.toTimeOfDay();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.DateTime dateTime73 = timeOfDay71.toDateTime(readableInstant72);
        org.joda.time.Instant instant75 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant77 = instant75.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime78 = instant75.toMutableDateTimeISO();
        org.joda.time.DateTime dateTime79 = timeOfDay71.toDateTime((org.joda.time.ReadableInstant) instant75);
        org.joda.time.DateTimeField dateTimeField81 = timeOfDay71.getField(2);
        int int82 = dateTimeField32.getMaximumValue((org.joda.time.ReadablePartial) timeOfDay71);
        boolean boolean83 = dateTimeField32.isLenient();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0774");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = duration2.toPeriodTo(readableInstant6);
        org.joda.time.Duration duration9 = duration2.withMillis((long) (short) 0);
        org.joda.time.Duration duration12 = duration2.withDurationAdded((long) 1, (int) ' ');
        org.joda.time.Instant instant14 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant14.toDateTime();
        boolean boolean17 = dateTime15.isEqual(10L);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, (org.joda.time.ReadableInstant) dateTime15, periodType18);
        java.lang.Object obj20 = null;
        org.joda.time.Instant instant21 = new org.joda.time.Instant(obj20);
        org.joda.time.DateTimeZone dateTimeZone22 = instant21.getZone();
        org.joda.time.DateTime dateTime23 = dateTime15.toDateTime(dateTimeZone22);
        org.joda.time.MutableDateTime mutableDateTime24 = dateTime23.toMutableDateTimeISO();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant14 and dateTime15", (instant14.compareTo(dateTime15) == 0) == instant14.equals(dateTime15));
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0775");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.Interval interval7 = property6.toInterval();
        boolean boolean8 = interval3.contains((org.joda.time.ReadableInterval) interval7);
        java.lang.String str9 = interval3.toString();
        long long10 = interval3.getEndMillis();
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone14 = null;
        org.joda.time.DateTime dateTime15 = dateTime13.withZoneRetainFields(dateTimeZone14);
        org.joda.time.Instant instant17 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime18 = instant17.toDateTime();
        org.joda.time.DateTime.Property property19 = dateTime18.era();
        org.joda.time.DateTime dateTime20 = dateTime18.withTimeAtStartOfDay();
        org.joda.time.Duration duration23 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, readableInstant24, periodType25);
        mutablePeriod26.setMonths((int) '4');
        org.joda.time.DateTime dateTime29 = dateTime18.plus((org.joda.time.ReadablePeriod) mutablePeriod26);
        org.joda.time.DateTime dateTime31 = dateTime18.minusWeeks((int) (byte) 1);
        int int32 = dateTime15.compareTo((org.joda.time.ReadableInstant) dateTime18);
        org.joda.time.DateTime.Property property33 = dateTime18.minuteOfHour();
        org.joda.time.DateTime dateTime35 = dateTime18.withYear(1969);
        org.joda.time.Chronology chronology36 = dateTime35.getChronology();
        boolean boolean37 = interval3.isBefore((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Days days38 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval3);
        org.joda.time.Period period39 = new org.joda.time.Period((java.lang.Object) days38);
        org.joda.time.Weeks weeks40 = days38.toStandardWeeks();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime13", (instant12.compareTo(dateTime13) == 0) == instant12.equals(dateTime13));
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0776");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes21 = minutes19.minus((int) (short) -1);
        boolean boolean22 = minutes18.isGreaterThan(minutes19);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        boolean boolean24 = minutes18.isLessThan(minutes23);
        org.joda.time.DateTime dateTime25 = dateTime8.plus((org.joda.time.ReadablePeriod) minutes18);
        org.joda.time.DateTime.Property property26 = dateTime25.year();
        org.joda.time.DateTime.Property property27 = dateTime25.secondOfMinute();
        org.joda.time.DurationField durationField28 = property27.getLeapDurationField();
        int int29 = property27.getMaximumValueOverall();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.DateTime dateTime31 = new org.joda.time.DateTime(chronology30);
        org.joda.time.DateTime.Property property32 = dateTime31.yearOfEra();
        org.joda.time.Interval interval33 = property32.toInterval();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime(chronology34);
        org.joda.time.DateTime.Property property36 = dateTime35.yearOfEra();
        org.joda.time.Interval interval37 = property36.toInterval();
        boolean boolean38 = interval33.contains((org.joda.time.ReadableInterval) interval37);
        java.lang.String str39 = interval33.toString();
        long long40 = interval33.getEndMillis();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval33);
        org.joda.time.Instant instant43 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime44 = instant43.toDateTime();
        org.joda.time.DateTime.Property property45 = dateTime44.era();
        int int46 = dateTime44.getWeekOfWeekyear();
        int int47 = dateTime44.getMonthOfYear();
        boolean boolean48 = interval33.isBefore((org.joda.time.ReadableInstant) dateTime44);
        int int49 = property27.compareTo((org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.LocalTime localTime50 = dateTime44.toLocalTime();
        org.joda.time.Duration duration53 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period54 = duration53.toPeriod();
        org.joda.time.Duration duration56 = duration53.plus((long) (byte) 0);
        org.joda.time.Instant instant58 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime59 = instant58.toDateTime();
        boolean boolean61 = dateTime59.isEqual(10L);
        org.joda.time.PeriodType periodType64 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType64, chronology65);
        org.joda.time.PeriodType periodType67 = periodType64.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration56, (org.joda.time.ReadableInstant) dateTime59, periodType67);
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes70 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes72 = minutes70.minus((int) (short) -1);
        boolean boolean73 = minutes69.isGreaterThan(minutes70);
        org.joda.time.Minutes minutes74 = org.joda.time.Minutes.TWO;
        boolean boolean75 = minutes69.isLessThan(minutes74);
        org.joda.time.DateTime dateTime76 = dateTime59.plus((org.joda.time.ReadablePeriod) minutes69);
        org.joda.time.DateTime.Property property77 = dateTime76.year();
        org.joda.time.DateTime.Property property78 = dateTime76.secondOfMinute();
        org.joda.time.DateTimeFieldType dateTimeFieldType79 = property78.getFieldType();
        java.lang.String str80 = dateTimeFieldType79.getName();
        boolean boolean81 = localTime50.isSupported(dateTimeFieldType79);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0777");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property16 = dateTime15.monthOfYear();
        org.joda.time.DateTime.Property property17 = dateTime15.weekyear();
        org.joda.time.DateTime dateTime18 = dateTime15.toDateTime();
        org.joda.time.DateTime dateTime20 = dateTime15.plusHours((int) 'u');
        org.joda.time.Instant instant22 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime23 = instant22.toDateTime();
        org.joda.time.DateTime.Property property24 = dateTime23.era();
        org.joda.time.ReadablePartial readablePartial25 = null;
        org.joda.time.DateTime dateTime26 = dateTime23.withFields(readablePartial25);
        org.joda.time.DateTime dateTime28 = dateTime23.withYearOfEra(292278993);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime20, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes33 = minutes31.minus((int) (short) -1);
        boolean boolean34 = minutes30.isGreaterThan(minutes31);
        org.joda.time.Minutes minutes35 = null;
        org.joda.time.Minutes minutes36 = minutes31.minus(minutes35);
        int int37 = minutes31.getMinutes();
        org.joda.time.MutablePeriod mutablePeriod38 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes40 = minutes31.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes41 = minutes29.plus(minutes31);
        org.joda.time.Instant instant43 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime44 = instant43.toDateTime();
        org.joda.time.DateTime.Property property45 = dateTime44.era();
        org.joda.time.DateTime dateTime46 = dateTime44.withTimeAtStartOfDay();
        org.joda.time.Instant instant47 = dateTime44.toInstant();
        org.joda.time.TimeOfDay timeOfDay48 = dateTime44.toTimeOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType49 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.DateTimeField dateTimeField51 = dateTimeFieldType49.getField(chronology50);
        long long54 = dateTimeField51.add(0L, (long) (short) 1);
        long long56 = dateTimeField51.roundHalfCeiling((long) 2);
        org.joda.time.Instant instant58 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime59 = instant58.toDateTime();
        org.joda.time.DateTime.Property property60 = dateTime59.era();
        org.joda.time.Instant instant62 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant64 = instant62.minus(100L);
        org.joda.time.Instant instant66 = instant64.plus((long) 100);
        org.joda.time.Instant instant68 = instant64.withMillis((long) (byte) 1);
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime59, (org.joda.time.ReadableInstant) instant64);
        org.joda.time.LocalTime localTime70 = dateTime59.toLocalTime();
        org.joda.time.Duration duration74 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.PeriodType periodType76 = null;
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration74, readableInstant75, periodType76);
        mutablePeriod77.setMonths((int) '4');
        org.joda.time.Period period80 = mutablePeriod77.toPeriod();
        int[] intArray81 = period80.getValues();
        int[] intArray83 = dateTimeField51.addWrapField((org.joda.time.ReadablePartial) localTime70, 0, intArray81, 3);
        org.joda.time.Minutes minutes84 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadablePartial) timeOfDay48, (org.joda.time.ReadablePartial) localTime70);
        org.joda.time.Minutes minutes85 = org.joda.time.Minutes.ONE;
        org.joda.time.Minutes minutes86 = minutes84.minus(minutes85);
        org.joda.time.DurationFieldType durationFieldType87 = minutes86.getFieldType();
        org.joda.time.Minutes minutes88 = minutes41.plus(minutes86);
        org.joda.time.Hours hours89 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) minutes88);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0778");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        org.joda.time.DateTime.Property property21 = dateTime20.era();
        org.joda.time.DateTime dateTime22 = dateTime20.withTimeAtStartOfDay();
        org.joda.time.Instant instant23 = dateTime20.toInstant();
        org.joda.time.DateTime dateTime25 = dateTime20.withMillis((long) '4');
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.Instant instant28 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime29 = instant28.toDateTime();
        org.joda.time.TimeOfDay timeOfDay30 = dateTime29.toTimeOfDay();
        org.joda.time.DateTime dateTime31 = dateTime20.withFields((org.joda.time.ReadablePartial) timeOfDay30);
        org.joda.time.Instant instant33 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime34 = instant33.toDateTime();
        org.joda.time.DateTime.Property property35 = dateTime34.era();
        org.joda.time.DateTime dateTime36 = property35.withMinimumValue();
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.DateTime dateTime39 = new org.joda.time.DateTime(chronology38);
        org.joda.time.DateTime.Property property40 = dateTime39.yearOfEra();
        org.joda.time.Interval interval41 = property40.toInterval();
        mutablePeriod37.add((org.joda.time.ReadableInterval) interval41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval41);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0779");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime.Property property23 = dateTime7.weekyear();
        org.joda.time.DateTime dateTime24 = property23.withMaximumValue();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0780");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant3, periodType4);
        org.joda.time.Days days6 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType7 = org.joda.time.DurationFieldType.minutes();
        int int8 = days6.get(durationFieldType7);
        mutablePeriod5.add(durationFieldType7, 8);
        mutablePeriod5.addMillis((int) (byte) 1);
        org.joda.time.Period period13 = mutablePeriod5.toPeriod();
        mutablePeriod5.setYears((int) (byte) 10);
        mutablePeriod5.setDays((int) '4');
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.DateTime dateTime21 = new org.joda.time.DateTime(chronology20);
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime24 = instant23.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone25 = null;
        org.joda.time.DateTime dateTime26 = dateTime24.withZoneRetainFields(dateTimeZone25);
        org.joda.time.Instant instant28 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime29 = instant28.toDateTime();
        org.joda.time.DateTime.Property property30 = dateTime29.era();
        org.joda.time.DateTime dateTime31 = dateTime29.withTimeAtStartOfDay();
        org.joda.time.Duration duration34 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration34, readableInstant35, periodType36);
        mutablePeriod37.setMonths((int) '4');
        org.joda.time.DateTime dateTime40 = dateTime29.plus((org.joda.time.ReadablePeriod) mutablePeriod37);
        org.joda.time.DateTime dateTime42 = dateTime29.minusWeeks((int) (byte) 1);
        int int43 = dateTime26.compareTo((org.joda.time.ReadableInstant) dateTime29);
        org.joda.time.DateTime.Property property44 = dateTime29.minuteOfHour();
        org.joda.time.DateTime dateTime46 = dateTime29.withYear(1969);
        org.joda.time.Chronology chronology47 = dateTime46.getChronology();
        org.joda.time.DateTimeField dateTimeField48 = chronology47.dayOfMonth();
        org.joda.time.DurationField durationField49 = chronology47.minutes();
        org.joda.time.DateTime dateTime50 = dateTime21.toDateTime(chronology47);
        org.joda.time.DateTimeField dateTimeField51 = chronology47.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField52 = chronology47.clockhourOfHalfday();
        org.joda.time.DateTime dateTime53 = org.joda.time.DateTime.now(chronology47);
        org.joda.time.DurationField durationField54 = chronology47.months();
        org.joda.time.DateTimeField dateTimeField55 = chronology47.centuryOfEra();
        mutablePeriod5.setPeriod(11L, 0L, chronology47);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant23 and dateTime24", (instant23.compareTo(dateTime24) == 0) == instant23.equals(dateTime24));
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0781");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime dateTime22 = dateTime4.toDateTimeISO();
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant26 = instant24.minus(100L);
        java.lang.String str27 = instant26.toString();
        org.joda.time.Duration duration30 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period31 = duration30.toPeriod();
        org.joda.time.Duration duration33 = duration30.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = duration30.toPeriodTo(readableInstant34);
        org.joda.time.Duration duration37 = duration30.withMillis((long) (short) 0);
        org.joda.time.Instant instant38 = instant26.plus((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) instant26);
        org.joda.time.DateTime dateTime41 = dateTime22.withCenturyOfEra(321);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime22", (instant1.compareTo(dateTime22) == 0) == instant1.equals(dateTime22));
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0782");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = property3.withMinimumValue();
        int int5 = property3.getMaximumValueOverall();
        java.util.Locale locale6 = java.util.Locale.ENGLISH;
        java.lang.String str7 = locale6.getScript();
        java.lang.String str8 = locale6.getDisplayCountry();
        int int9 = property3.getMaximumShortTextLength(locale6);
        org.joda.time.DateTime dateTime10 = property3.withMaximumValue();
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone14 = null;
        org.joda.time.DateTime dateTime15 = dateTime13.withZoneRetainFields(dateTimeZone14);
        org.joda.time.DateTime.Property property16 = dateTime15.weekOfWeekyear();
        org.joda.time.Duration duration19 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration19, readableInstant20, periodType21);
        org.joda.time.DateTime dateTime23 = dateTime15.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.DateTime dateTime25 = dateTime15.withYearOfEra(9);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.weeksBetween((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.DateTime dateTime28 = dateTime25.minusSeconds(1969);
        java.lang.Object obj29 = null;
        boolean boolean30 = dateTime25.equals(obj29);
        org.joda.time.DateTime dateTime32 = dateTime25.plusMonths(1970);
        org.joda.time.DateTime dateTime34 = dateTime32.withCenturyOfEra(69);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0783");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.Instant instant5 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant7 = instant5.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime8 = instant5.toMutableDateTimeISO();
        org.joda.time.Period period9 = duration2.toPeriodTo((org.joda.time.ReadableInstant) instant5);
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.DateTime dateTime14 = dateTime12.withTimeAtStartOfDay();
        org.joda.time.Duration duration17 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration17, readableInstant18, periodType19);
        mutablePeriod20.setMonths((int) '4');
        org.joda.time.DateTime dateTime23 = dateTime12.plus((org.joda.time.ReadablePeriod) mutablePeriod20);
        org.joda.time.DateTime dateTime25 = dateTime12.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property26 = dateTime25.monthOfYear();
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType31, chronology32);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1L, (long) 10, periodType31, chronology34);
        org.joda.time.PeriodType periodType36 = periodType31.withDaysRemoved();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, (org.joda.time.ReadableInstant) dateTime25, periodType31);
        org.joda.time.DateTime.Property property38 = dateTime25.centuryOfEra();
        java.util.Locale locale41 = new java.util.Locale("en_US", "P11W");
        int int42 = property38.getMaximumShortTextLength(locale41);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant5 and mutableDateTime8", (instant5.compareTo(mutableDateTime8) == 0) == instant5.equals(mutableDateTime8));
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0784");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property16 = dateTime15.monthOfYear();
        org.joda.time.DateTime.Property property17 = dateTime15.weekyear();
        org.joda.time.DateTime dateTime18 = dateTime15.toDateTime();
        org.joda.time.DateTime dateTime20 = dateTime15.plusHours((int) 'u');
        org.joda.time.Instant instant22 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime23 = instant22.toDateTime();
        org.joda.time.DateTime.Property property24 = dateTime23.era();
        org.joda.time.ReadablePartial readablePartial25 = null;
        org.joda.time.DateTime dateTime26 = dateTime23.withFields(readablePartial25);
        org.joda.time.DateTime dateTime28 = dateTime23.withYearOfEra(292278993);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime20, (org.joda.time.ReadableInstant) dateTime23);
        int int30 = dateTime20.getMonthOfYear();
        org.joda.time.DateTime.Property property31 = dateTime20.year();
        org.joda.time.DateTime dateTime32 = property31.withMinimumValue();
        boolean boolean34 = dateTime32.isBefore(28314719L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0785");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration4 = null;
        boolean boolean5 = duration2.isEqual(readableDuration4);
        org.joda.time.Duration duration7 = duration2.minus((long) 1);
        org.joda.time.Duration duration9 = duration7.minus((long) '4');
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Duration duration22 = duration19.plus((long) (byte) 0);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType30, chronology31);
        org.joda.time.PeriodType periodType33 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, (org.joda.time.ReadableInstant) dateTime25, periodType33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime12, (org.joda.time.ReadableDuration) duration16, periodType33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime12, periodType36);
        org.joda.time.Duration duration39 = duration7.minus((long) 7);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int50 = mutablePeriod49.getDays();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.DateTime dateTime54 = new org.joda.time.DateTime(chronology53);
        org.joda.time.DateTime.Property property55 = dateTime54.yearOfEra();
        org.joda.time.Interval interval56 = property55.toInterval();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.DateTime dateTime58 = new org.joda.time.DateTime(chronology57);
        org.joda.time.DateTime.Property property59 = dateTime58.yearOfEra();
        org.joda.time.Interval interval60 = property59.toInterval();
        boolean boolean61 = interval56.contains((org.joda.time.ReadableInterval) interval60);
        org.joda.time.Chronology chronology62 = interval60.getChronology();
        mutablePeriod49.setPeriod((long) 'u', (long) 1969, chronology62);
        org.joda.time.Period period64 = new org.joda.time.Period((long) (byte) 100, chronology62);
        org.joda.time.Period period65 = duration39.toPeriod(chronology62);
        org.joda.time.DateTimeField dateTimeField66 = chronology62.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField67 = chronology62.monthOfYear();
        org.joda.time.DurationField durationField68 = chronology62.weeks();
        org.joda.time.Instant instant70 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime71 = instant70.toDateTime();
        org.joda.time.DateTime.Property property72 = dateTime71.era();
        org.joda.time.DateTime dateTime73 = dateTime71.withTimeAtStartOfDay();
        org.joda.time.LocalTime localTime74 = dateTime73.toLocalTime();
        long long76 = chronology62.set((org.joda.time.ReadablePartial) localTime74, 1672657200000L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime12", (instant11.compareTo(dateTime12) == 0) == instant11.equals(dateTime12));
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0786");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        java.lang.Object obj14 = null;
        org.joda.time.Instant instant15 = new org.joda.time.Instant(obj14);
        org.joda.time.DateTimeZone dateTimeZone16 = instant15.getZone();
        java.lang.String str17 = dateTimeZone16.toString();
        int int19 = dateTimeZone16.getOffset(1L);
        boolean boolean21 = dateTimeZone16.isStandardOffset(0L);
        org.joda.time.DateTime dateTime22 = dateTime2.withZoneRetainFields(dateTimeZone16);
        org.joda.time.DateTime dateTime24 = dateTime22.plusYears(1969);
        org.joda.time.DateTime dateTime26 = dateTime24.minusWeeks(1439);
        org.joda.time.Instant instant28 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime29 = instant28.toDateTime();
        org.joda.time.DateTime.Property property30 = dateTime29.era();
        org.joda.time.DateTime dateTime31 = dateTime29.withTimeAtStartOfDay();
        org.joda.time.Duration duration34 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration34, readableInstant35, periodType36);
        mutablePeriod37.setMonths((int) '4');
        org.joda.time.DateTime dateTime40 = dateTime29.plus((org.joda.time.ReadablePeriod) mutablePeriod37);
        org.joda.time.LocalDate localDate41 = dateTime29.toLocalDate();
        int int42 = localDate41.size();
        org.joda.time.DateTime dateTime43 = dateTime26.withFields((org.joda.time.ReadablePartial) localDate41);
        java.lang.String str44 = localDate41.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0787");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.DateMidnight dateMidnight6 = dateTime2.toDateMidnight();
        org.joda.time.DateTime dateTime9 = dateTime2.withDurationAdded(0L, (int) 'a');
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period13 = duration12.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray14 = period13.getFieldTypes();
        org.joda.time.Period period16 = period13.minusYears((int) (byte) 1);
        org.joda.time.Period period18 = period13.plusMonths((int) (byte) 0);
        int int19 = period13.size();
        org.joda.time.Period period21 = period13.plusYears(100);
        org.joda.time.Period period23 = period13.minusSeconds(292278993);
        org.joda.time.Duration duration26 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration26, readableInstant27, periodType28);
        mutablePeriod29.addDays((int) (short) 100);
        org.joda.time.DurationFieldType durationFieldType32 = org.joda.time.DurationFieldType.days();
        mutablePeriod29.add(durationFieldType32, 8);
        boolean boolean35 = period13.isSupported(durationFieldType32);
        org.joda.time.DateTime dateTime37 = dateTime2.withFieldAdded(durationFieldType32, (-2147483648));
        org.joda.time.Instant instant39 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime40 = instant39.toDateTime();
        org.joda.time.DateTime.Property property41 = dateTime40.era();
        org.joda.time.DateTime dateTime42 = property41.withMinimumValue();
        int int43 = property41.getMaximumValueOverall();
        java.util.Locale locale44 = java.util.Locale.ENGLISH;
        java.lang.String str45 = locale44.getScript();
        java.lang.String str46 = locale44.getDisplayCountry();
        int int47 = property41.getMaximumShortTextLength(locale44);
        org.joda.time.DateTime dateTime48 = property41.withMaximumValue();
        org.joda.time.LocalTime localTime49 = dateTime48.toLocalTime();
        org.joda.time.DateTimeZone dateTimeZone50 = dateTime48.getZone();
        int int52 = dateTimeZone50.getOffsetFromLocal(0L);
        org.joda.time.DateTime dateTime53 = new org.joda.time.DateTime(dateTimeZone50);
        int int54 = dateTime37.compareTo((org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.DateTime dateTime56 = dateTime53.minusDays((-10));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0788");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.Interval interval7 = property6.toInterval();
        boolean boolean8 = interval3.contains((org.joda.time.ReadableInterval) interval7);
        java.lang.String str9 = interval7.toString();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.DateTime dateTime11 = new org.joda.time.DateTime(chronology10);
        org.joda.time.DateTime.Property property12 = dateTime11.yearOfEra();
        org.joda.time.Interval interval13 = property12.toInterval();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.DateTime dateTime15 = new org.joda.time.DateTime(chronology14);
        org.joda.time.DateTime.Property property16 = dateTime15.yearOfEra();
        org.joda.time.Interval interval17 = property16.toInterval();
        boolean boolean18 = interval13.contains((org.joda.time.ReadableInterval) interval17);
        boolean boolean19 = interval7.isBefore((org.joda.time.ReadableInterval) interval17);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.DateTime dateTime21 = new org.joda.time.DateTime(chronology20);
        org.joda.time.DateTime.Property property22 = dateTime21.yearOfEra();
        org.joda.time.Interval interval23 = property22.toInterval();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.DateTime dateTime25 = new org.joda.time.DateTime(chronology24);
        org.joda.time.DateTime.Property property26 = dateTime25.yearOfEra();
        org.joda.time.Interval interval27 = property26.toInterval();
        boolean boolean28 = interval23.contains((org.joda.time.ReadableInterval) interval27);
        java.lang.String str29 = interval23.toString();
        long long30 = interval23.getEndMillis();
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime33 = instant32.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone34 = null;
        org.joda.time.DateTime dateTime35 = dateTime33.withZoneRetainFields(dateTimeZone34);
        org.joda.time.Instant instant37 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime38 = instant37.toDateTime();
        org.joda.time.DateTime.Property property39 = dateTime38.era();
        org.joda.time.DateTime dateTime40 = dateTime38.withTimeAtStartOfDay();
        org.joda.time.Duration duration43 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.PeriodType periodType45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration43, readableInstant44, periodType45);
        mutablePeriod46.setMonths((int) '4');
        org.joda.time.DateTime dateTime49 = dateTime38.plus((org.joda.time.ReadablePeriod) mutablePeriod46);
        org.joda.time.DateTime dateTime51 = dateTime38.minusWeeks((int) (byte) 1);
        int int52 = dateTime35.compareTo((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.DateTime.Property property53 = dateTime38.minuteOfHour();
        org.joda.time.DateTime dateTime55 = dateTime38.withYear(1969);
        org.joda.time.Chronology chronology56 = dateTime55.getChronology();
        boolean boolean57 = interval23.isBefore((org.joda.time.ReadableInstant) dateTime55);
        boolean boolean58 = interval17.contains((org.joda.time.ReadableInterval) interval23);
        long long59 = interval17.getStartMillis();
        org.joda.time.Days days60 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval17);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant32 and dateTime33", (instant32.compareTo(dateTime33) == 0) == instant32.equals(dateTime33));
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0789");
        org.joda.time.Period period3 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period5 = period3.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration7 = period5.toDurationTo(readableInstant6);
        org.joda.time.Duration duration10 = duration7.withDurationAdded((long) '#', 0);
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant14 = instant12.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime15 = instant12.toMutableDateTimeISO();
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period17 = duration10.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime15, periodType16);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(chronology18);
        org.joda.time.DateTime.Property property20 = dateTime19.yearOfEra();
        org.joda.time.Interval interval21 = property20.toInterval();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.DateTime dateTime23 = new org.joda.time.DateTime(chronology22);
        org.joda.time.DateTime.Property property24 = dateTime23.yearOfEra();
        org.joda.time.Interval interval25 = property24.toInterval();
        boolean boolean26 = interval21.contains((org.joda.time.ReadableInterval) interval25);
        org.joda.time.Chronology chronology27 = interval25.getChronology();
        org.joda.time.DurationField durationField28 = chronology27.weeks();
        org.joda.time.DateTime dateTime29 = new org.joda.time.DateTime(chronology27);
        org.joda.time.DurationField durationField30 = chronology27.centuries();
        org.joda.time.DurationField durationField31 = chronology27.days();
        org.joda.time.DateTimeField dateTimeField32 = chronology27.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField33 = chronology27.secondOfDay();
        org.joda.time.DateTimeField dateTimeField34 = chronology27.weekyear();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1104537600031L, (long) (-10), periodType16, chronology27);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and mutableDateTime15", (instant12.compareTo(mutableDateTime15) == 0) == instant12.equals(mutableDateTime15));
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0790");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period3 = period1.minusMonths((int) (short) 10);
        org.joda.time.Period period5 = period3.withSeconds((int) '4');
        org.joda.time.Duration duration8 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration8, readableInstant9, periodType10);
        org.joda.time.Days days12 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.minutes();
        int int14 = days12.get(durationFieldType13);
        mutablePeriod11.add(durationFieldType13, 8);
        int int17 = mutablePeriod11.getHours();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(chronology18);
        org.joda.time.DateTime.Property property20 = dateTime19.yearOfEra();
        org.joda.time.Interval interval21 = property20.toInterval();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.DateTime dateTime23 = new org.joda.time.DateTime(chronology22);
        org.joda.time.DateTime.Property property24 = dateTime23.yearOfEra();
        org.joda.time.Interval interval25 = property24.toInterval();
        boolean boolean26 = interval21.contains((org.joda.time.ReadableInterval) interval25);
        java.lang.String str27 = interval21.toString();
        mutablePeriod11.add((org.joda.time.ReadableInterval) interval21);
        int int29 = mutablePeriod11.getMillis();
        mutablePeriod11.setPeriod((long) (byte) 10);
        mutablePeriod11.addDays((-27349920));
        org.joda.time.Period period34 = period5.plus((org.joda.time.ReadablePeriod) mutablePeriod11);
        org.joda.time.Period period36 = period5.plusHours((-1));
        org.joda.time.Duration duration39 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period40 = duration39.toPeriod();
        org.joda.time.Duration duration42 = duration39.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = duration39.toPeriodTo(readableInstant43);
        org.joda.time.Duration duration46 = duration39.withMillis((long) (short) 0);
        org.joda.time.Duration duration49 = duration39.withDurationAdded((long) 1, (int) ' ');
        org.joda.time.Instant instant51 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime52 = instant51.toDateTime();
        boolean boolean54 = dateTime52.isEqual(10L);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, (org.joda.time.ReadableInstant) dateTime52, periodType55);
        org.joda.time.DateTime dateTime58 = dateTime52.minusSeconds((int) 'a');
        org.joda.time.DurationFieldType durationFieldType59 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant61 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime62 = instant61.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone63 = null;
        org.joda.time.DateTime dateTime64 = dateTime62.withZoneRetainFields(dateTimeZone63);
        org.joda.time.Instant instant66 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime67 = instant66.toDateTime();
        org.joda.time.DateTime.Property property68 = dateTime67.era();
        org.joda.time.DateTime dateTime69 = dateTime67.withTimeAtStartOfDay();
        org.joda.time.Duration duration72 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.PeriodType periodType74 = null;
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration72, readableInstant73, periodType74);
        mutablePeriod75.setMonths((int) '4');
        org.joda.time.DateTime dateTime78 = dateTime67.plus((org.joda.time.ReadablePeriod) mutablePeriod75);
        org.joda.time.DateTime dateTime80 = dateTime67.minusWeeks((int) (byte) 1);
        int int81 = dateTime64.compareTo((org.joda.time.ReadableInstant) dateTime67);
        org.joda.time.DateTime.Property property82 = dateTime67.minuteOfHour();
        org.joda.time.DateTime dateTime84 = dateTime67.withYear(1969);
        org.joda.time.Chronology chronology85 = dateTime84.getChronology();
        org.joda.time.DurationField durationField86 = durationFieldType59.getField(chronology85);
        org.joda.time.DateTime dateTime88 = dateTime58.withFieldAdded(durationFieldType59, 86399);
        int int89 = period36.get(durationFieldType59);
        java.lang.String str90 = durationFieldType59.getName();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant51 and dateTime52", (instant51.compareTo(dateTime52) == 0) == instant51.equals(dateTime52));
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0791");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.Duration duration20 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period21 = duration20.toPeriod();
        org.joda.time.Duration duration23 = duration20.plus((long) (byte) 0);
        org.joda.time.Duration duration24 = duration20.toDuration();
        org.joda.time.Duration duration25 = duration5.minus((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration28 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period29 = duration28.toPeriod();
        org.joda.time.Duration duration31 = duration28.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = duration28.toPeriodTo(readableInstant32);
        org.joda.time.Days days34 = duration28.toStandardDays();
        org.joda.time.Duration duration37 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period38 = duration37.toPeriod();
        org.joda.time.Duration duration40 = duration37.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = duration37.toPeriodTo(readableInstant41);
        org.joda.time.Duration duration44 = duration37.withMillis((long) (short) 0);
        org.joda.time.Duration duration45 = duration28.minus((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableDuration readableDuration46 = null;
        boolean boolean47 = duration44.isLongerThan(readableDuration46);
        boolean boolean48 = duration20.isEqual((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration51 = duration20.withDurationAdded((long) (-120), 4);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0792");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.Interval interval7 = property6.toInterval();
        boolean boolean8 = interval3.contains((org.joda.time.ReadableInterval) interval7);
        java.lang.Object obj9 = null;
        org.joda.time.Instant instant10 = new org.joda.time.Instant(obj9);
        org.joda.time.DateTimeZone dateTimeZone11 = instant10.getZone();
        java.lang.String str12 = dateTimeZone11.toString();
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(dateTimeZone11);
        boolean boolean14 = interval3.contains((org.joda.time.ReadableInstant) dateTime13);
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTime.Property property18 = dateTime17.era();
        boolean boolean19 = interval3.contains((org.joda.time.ReadableInstant) dateTime17);
        org.joda.time.MutableInterval mutableInterval20 = interval3.toMutableInterval();
        org.joda.time.Chronology chronology21 = interval3.getChronology();
        long long22 = interval3.getStartMillis();
        org.joda.time.Duration duration25 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period26 = duration25.toPeriod();
        org.joda.time.Duration duration28 = duration25.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = duration25.toPeriodTo(readableInstant29);
        org.joda.time.Duration duration33 = duration25.withDurationAdded((long) (short) -1, (int) (byte) 100);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType36, chronology37);
        org.joda.time.PeriodType periodType39 = periodType36.withWeeksRemoved();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration33.toPeriod(periodType39, chronology40);
        org.joda.time.Duration duration44 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period45 = duration44.toPeriod();
        org.joda.time.Duration duration47 = duration44.plus((long) (byte) 0);
        org.joda.time.Instant instant49 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime50 = instant49.toDateTime();
        boolean boolean52 = dateTime50.isEqual(10L);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType55, chronology56);
        org.joda.time.PeriodType periodType58 = periodType55.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration47, (org.joda.time.ReadableInstant) dateTime50, periodType58);
        org.joda.time.Instant instant61 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime62 = instant61.toDateTime();
        org.joda.time.DateTime.Property property63 = dateTime62.era();
        org.joda.time.DateTime dateTime64 = dateTime62.withTimeAtStartOfDay();
        org.joda.time.Instant instant65 = dateTime62.toInstant();
        org.joda.time.DateTime dateTime67 = dateTime62.withMillis((long) '4');
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime50, (org.joda.time.ReadableInstant) dateTime62);
        int int69 = dateTime62.getYear();
        org.joda.time.DateTime.Property property70 = dateTime62.dayOfWeek();
        org.joda.time.PeriodType periodType71 = org.joda.time.PeriodType.dayTime();
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration33, (org.joda.time.ReadableInstant) dateTime62, periodType71);
        boolean boolean73 = interval3.contains((org.joda.time.ReadableInstant) dateTime62);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant10", (dateTime1.compareTo(instant10) == 0) == dateTime1.equals(instant10));
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0793");
        java.lang.Object obj0 = null;
        org.joda.time.Instant instant1 = new org.joda.time.Instant(obj0);
        org.joda.time.DateTimeZone dateTimeZone2 = instant1.getZone();
        java.lang.String str3 = dateTimeZone2.toString();
        int int5 = dateTimeZone2.getOffset(1L);
        boolean boolean7 = dateTimeZone2.isStandardOffset(0L);
        java.lang.String str9 = dateTimeZone2.getNameKey((long) 1);
        org.joda.time.DateTime dateTime10 = new org.joda.time.DateTime(dateTimeZone2);
        org.joda.time.DateTime.Property property11 = dateTime10.secondOfDay();
        org.joda.time.Instant instant13 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime14 = instant13.toDateTime();
        org.joda.time.DateTime.Property property15 = dateTime14.era();
        org.joda.time.DateTime dateTime16 = property15.withMinimumValue();
        int int17 = property15.getMaximumValueOverall();
        java.util.Locale locale18 = java.util.Locale.ENGLISH;
        java.lang.String str19 = locale18.getScript();
        java.lang.String str20 = locale18.getDisplayCountry();
        int int21 = property15.getMaximumShortTextLength(locale18);
        org.joda.time.DateTime dateTime22 = property15.withMaximumValue();
        org.joda.time.DateTime dateTime23 = dateTime22.withLaterOffsetAtOverlap();
        org.joda.time.Instant instant25 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant27 = instant25.minus(100L);
        java.lang.String str28 = instant27.toString();
        org.joda.time.Duration duration31 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period32 = duration31.toPeriod();
        org.joda.time.Duration duration34 = duration31.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = duration31.toPeriodTo(readableInstant35);
        org.joda.time.Duration duration38 = duration31.withMillis((long) (short) 0);
        org.joda.time.Instant instant39 = instant27.plus((org.joda.time.ReadableDuration) duration31);
        org.joda.time.DateTime dateTime41 = dateTime22.withDurationAdded((org.joda.time.ReadableDuration) duration31, 2);
        org.joda.time.DateTime dateTime43 = dateTime41.plus((long) 3);
        org.joda.time.DateTime dateTime45 = dateTime41.withMinuteOfHour((int) (short) 1);
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.DateTime dateTime48 = dateTime45.withDurationAdded(readableDuration46, (int) ' ');
        int int49 = dateTime10.compareTo((org.joda.time.ReadableInstant) dateTime48);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant13 and dateTime48", (instant13.compareTo(dateTime48) == 0) == instant13.equals(dateTime48));
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0794");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.DateTime dateTime29 = dateTime25.withCenturyOfEra((int) (byte) 1);
        boolean boolean30 = dateTime7.isAfter((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.DateTime dateTime31 = dateTime25.withEarlierOffsetAtOverlap();
        org.joda.time.Instant instant33 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime34 = instant33.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone35 = null;
        org.joda.time.DateTime dateTime36 = dateTime34.withZoneRetainFields(dateTimeZone35);
        org.joda.time.Instant instant38 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime39 = instant38.toDateTime();
        org.joda.time.DateTime.Property property40 = dateTime39.era();
        org.joda.time.DateTime dateTime41 = dateTime39.withTimeAtStartOfDay();
        org.joda.time.Duration duration44 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.PeriodType periodType46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration44, readableInstant45, periodType46);
        mutablePeriod47.setMonths((int) '4');
        org.joda.time.DateTime dateTime50 = dateTime39.plus((org.joda.time.ReadablePeriod) mutablePeriod47);
        org.joda.time.DateTime dateTime52 = dateTime39.minusWeeks((int) (byte) 1);
        int int53 = dateTime36.compareTo((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.DateTime.Property property54 = dateTime39.minuteOfHour();
        org.joda.time.DateTime dateTime56 = dateTime39.withYear(1969);
        org.joda.time.Chronology chronology57 = dateTime56.getChronology();
        org.joda.time.DateTime.Property property58 = dateTime56.dayOfMonth();
        org.joda.time.DurationField durationField59 = property58.getRangeDurationField();
        org.joda.time.DateTime dateTime60 = property58.getDateTime();
        org.joda.time.DateTime dateTime62 = property58.addToCopy(11);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.Minutes minutes64 = null;
        boolean boolean65 = minutes63.isLessThan(minutes64);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0795");
        java.lang.Object obj0 = null;
        org.joda.time.Instant instant1 = new org.joda.time.Instant(obj0);
        org.joda.time.DateTimeZone dateTimeZone2 = instant1.getZone();
        java.lang.String str3 = dateTimeZone2.toString();
        java.lang.String str5 = dateTimeZone2.getName((long) 10);
        java.lang.String str7 = dateTimeZone2.getName((long) 8);
        java.lang.String str9 = dateTimeZone2.getShortName(181025280000000000L);
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant13 = instant11.minus(100L);
        org.joda.time.DateTimeZone dateTimeZone14 = instant13.getZone();
        long long16 = dateTimeZone14.nextTransition(43200000L);
        long long18 = dateTimeZone2.getMillisKeepLocal(dateTimeZone14, 43200000L);
        java.lang.String str19 = dateTimeZone2.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType21 = org.joda.time.DateTimeFieldType.weekOfWeekyear();
        org.joda.time.DurationFieldType durationFieldType22 = dateTimeFieldType21.getRangeDurationType();
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone26 = null;
        org.joda.time.DateTime dateTime27 = dateTime25.withZoneRetainFields(dateTimeZone26);
        org.joda.time.Instant instant29 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime30 = instant29.toDateTime();
        org.joda.time.DateTime.Property property31 = dateTime30.era();
        org.joda.time.DateTime dateTime32 = dateTime30.withTimeAtStartOfDay();
        org.joda.time.Duration duration35 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration35, readableInstant36, periodType37);
        mutablePeriod38.setMonths((int) '4');
        org.joda.time.DateTime dateTime41 = dateTime30.plus((org.joda.time.ReadablePeriod) mutablePeriod38);
        org.joda.time.DateTime dateTime43 = dateTime30.minusWeeks((int) (byte) 1);
        int int44 = dateTime27.compareTo((org.joda.time.ReadableInstant) dateTime30);
        org.joda.time.DateTime.Property property45 = dateTime30.minuteOfHour();
        org.joda.time.DateTime dateTime47 = dateTime30.withYear(1969);
        org.joda.time.Chronology chronology48 = dateTime47.getChronology();
        org.joda.time.DateTimeField dateTimeField49 = chronology48.dayOfMonth();
        org.joda.time.DurationField durationField50 = chronology48.minutes();
        org.joda.time.DateTimeField dateTimeField51 = dateTimeFieldType21.getField(chronology48);
        org.joda.time.Instant instant53 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime54 = instant53.toDateTime();
        org.joda.time.DateTime.Property property55 = dateTime54.era();
        org.joda.time.DateTime dateTime56 = dateTime54.withTimeAtStartOfDay();
        org.joda.time.Duration duration59 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.PeriodType periodType61 = null;
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration59, readableInstant60, periodType61);
        mutablePeriod62.setMonths((int) '4');
        org.joda.time.DateTime dateTime65 = dateTime54.plus((org.joda.time.ReadablePeriod) mutablePeriod62);
        org.joda.time.DateTime dateTime67 = dateTime54.withMillisOfDay(4);
        org.joda.time.format.PeriodPrinter periodPrinter69 = null;
        org.joda.time.format.PeriodParser periodParser70 = null;
        org.joda.time.format.PeriodFormatter periodFormatter71 = new org.joda.time.format.PeriodFormatter(periodPrinter69, periodParser70);
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.format.PeriodFormatter periodFormatter73 = periodFormatter71.withParseType(periodType72);
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType78, chronology79);
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod(1L, (long) 10, periodType78, chronology81);
        org.joda.time.PeriodType periodType83 = periodType78.withDaysRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter84 = periodFormatter73.withParseType(periodType83);
        java.util.Locale locale86 = java.util.Locale.forLanguageTag("1");
        org.joda.time.format.PeriodFormatter periodFormatter87 = periodFormatter73.withLocale(locale86);
        java.lang.String str88 = dateTime67.toString("1", locale86);
        int int89 = dateTimeField51.getMaximumTextLength(locale86);
        java.lang.String str90 = dateTimeZone2.getShortName(292278993L, locale86);
        java.lang.String str91 = locale86.getCountry();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime25", (instant11.compareTo(dateTime25) == 0) == instant11.equals(dateTime25));
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0796");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property16 = dateTime15.monthOfYear();
        org.joda.time.DateTime.Property property17 = dateTime15.weekyear();
        org.joda.time.DateTime dateTime18 = dateTime15.toDateTime();
        int int19 = dateTime15.getSecondOfDay();
        org.joda.time.DateTime.Property property20 = dateTime15.weekyear();
        org.joda.time.DateTime dateTime22 = dateTime15.withEra((int) (short) 1);
        org.joda.time.DateTime dateTime24 = dateTime22.withYearOfEra(2);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0797");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType3, chronology4);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) (short) 0, periodType3, chronology6);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((long) (short) 10, periodType9);
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant13 = instant12.toInstant();
        org.joda.time.DateTime dateTime14 = instant13.toDateTimeISO();
        org.joda.time.Duration duration15 = period10.toDurationFrom((org.joda.time.ReadableInstant) dateTime14);
        org.joda.time.Duration duration18 = new org.joda.time.Duration((-1L), (long) 23);
        org.joda.time.Period period20 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period22 = period20.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration24 = period22.toDurationTo(readableInstant23);
        org.joda.time.Duration duration27 = duration24.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = duration27.toPeriodFrom(readableInstant28);
        org.joda.time.Duration duration30 = duration18.minus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration15.plus((org.joda.time.ReadableDuration) duration18);
        mutablePeriod7.add((org.joda.time.ReadableDuration) duration18);
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int45 = mutablePeriod44.getDays();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.DateTime dateTime49 = new org.joda.time.DateTime(chronology48);
        org.joda.time.DateTime.Property property50 = dateTime49.yearOfEra();
        org.joda.time.Interval interval51 = property50.toInterval();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.DateTime dateTime53 = new org.joda.time.DateTime(chronology52);
        org.joda.time.DateTime.Property property54 = dateTime53.yearOfEra();
        org.joda.time.Interval interval55 = property54.toInterval();
        boolean boolean56 = interval51.contains((org.joda.time.ReadableInterval) interval55);
        org.joda.time.Chronology chronology57 = interval55.getChronology();
        mutablePeriod44.setPeriod((long) 'u', (long) 1969, chronology57);
        org.joda.time.Period period59 = new org.joda.time.Period((long) (byte) 100, chronology57);
        mutablePeriod7.setPeriod((long) 1, (long) 69, chronology57);
        org.joda.time.DateTimeField dateTimeField61 = chronology57.year();
        org.joda.time.DurationField durationField62 = chronology57.seconds();
        java.lang.Object obj63 = null;
        org.joda.time.Instant instant64 = new org.joda.time.Instant(obj63);
        org.joda.time.DateTimeZone dateTimeZone65 = instant64.getZone();
        java.lang.String str66 = dateTimeZone65.toString();
        int int68 = dateTimeZone65.getOffset(1L);
        boolean boolean70 = dateTimeZone65.isStandardOffset(0L);
        java.lang.String str72 = dateTimeZone65.getNameKey((long) 1);
        long long76 = dateTimeZone65.convertLocalToUTC(1512000000L, true, (long) (byte) 10);
        java.lang.String str78 = dateTimeZone65.getName((long) (-2147483648));
        org.joda.time.Chronology chronology79 = chronology57.withZone(dateTimeZone65);
        java.util.Locale locale81 = java.util.Locale.ENGLISH;
        java.lang.String str82 = locale81.getScript();
        java.lang.String str83 = locale81.getDisplayCountry();
        java.lang.String str84 = dateTimeZone65.getShortName(120L, locale81);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime14", (instant12.compareTo(dateTime14) == 0) == instant12.equals(dateTime14));
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0798");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.minus((int) (short) -1);
        boolean boolean6 = minutes2.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes7 = null;
        org.joda.time.Minutes minutes8 = minutes3.minus(minutes7);
        org.joda.time.Minutes minutes10 = minutes3.plus((int) (short) 1);
        org.joda.time.PeriodType periodType11 = minutes10.getPeriodType();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        boolean boolean13 = minutes10.isLessThan(minutes12);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes17 = minutes15.minus((int) (short) -1);
        boolean boolean18 = minutes14.isGreaterThan(minutes15);
        org.joda.time.Minutes minutes19 = null;
        org.joda.time.Minutes minutes20 = minutes15.minus(minutes19);
        org.joda.time.Minutes minutes22 = minutes15.plus((int) (short) 1);
        org.joda.time.PeriodType periodType23 = minutes22.getPeriodType();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        boolean boolean25 = minutes22.isLessThan(minutes24);
        org.joda.time.DurationFieldType durationFieldType26 = minutes22.getFieldType();
        boolean boolean27 = minutes10.isLessThan(minutes22);
        org.joda.time.PeriodType periodType28 = minutes10.getPeriodType();
        org.joda.time.Instant instant30 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime31 = instant30.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone32 = null;
        org.joda.time.DateTime dateTime33 = dateTime31.withZoneRetainFields(dateTimeZone32);
        org.joda.time.Instant instant35 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime36 = instant35.toDateTime();
        org.joda.time.DateTime.Property property37 = dateTime36.era();
        org.joda.time.DateTime dateTime38 = dateTime36.withTimeAtStartOfDay();
        org.joda.time.Duration duration41 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.PeriodType periodType43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration41, readableInstant42, periodType43);
        mutablePeriod44.setMonths((int) '4');
        org.joda.time.DateTime dateTime47 = dateTime36.plus((org.joda.time.ReadablePeriod) mutablePeriod44);
        org.joda.time.DateTime dateTime49 = dateTime36.minusWeeks((int) (byte) 1);
        int int50 = dateTime33.compareTo((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.DateTime.Property property51 = dateTime36.minuteOfHour();
        org.joda.time.DateTime dateTime53 = dateTime36.withYear(1969);
        org.joda.time.Chronology chronology54 = dateTime53.getChronology();
        org.joda.time.DateTimeField dateTimeField55 = chronology54.year();
        org.joda.time.DateTimeField dateTimeField56 = chronology54.millisOfDay();
        org.joda.time.DateTimeField dateTimeField57 = chronology54.hourOfDay();
        org.joda.time.DateTimeField dateTimeField58 = chronology54.clockhourOfHalfday();
        org.joda.time.Period period59 = new org.joda.time.Period(27969129L, 4518853044L, periodType28, chronology54);
        int int60 = period59.getDays();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant30 and dateTime31", (instant30.compareTo(dateTime31) == 0) == instant30.equals(dateTime31));
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0799");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.DateMidnight dateMidnight6 = dateTime2.toDateMidnight();
        int int7 = dateMidnight6.getDayOfYear();
        boolean boolean8 = dateMidnight6.isAfterNow();
        org.joda.time.Instant instant9 = dateMidnight6.toInstant();
        org.joda.time.MutableDateTime mutableDateTime10 = instant9.toMutableDateTime();
        org.joda.time.DateTime dateTime11 = instant9.toDateTimeISO();
        org.joda.time.DateTime.Property property12 = dateTime11.monthOfYear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0800");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.DateTime.Property property5 = dateTime4.weekOfWeekyear();
        org.joda.time.Duration duration8 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration8, readableInstant9, periodType10);
        org.joda.time.DateTime dateTime12 = dateTime4.plus((org.joda.time.ReadableDuration) duration8);
        int int13 = dateTime12.getDayOfYear();
        int int14 = dateTime12.getYearOfEra();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0801");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.forID("UTC");
        org.joda.time.MutableDateTime mutableDateTime18 = dateTime2.toMutableDateTime(dateTimeZone17);
        org.joda.time.DateTime dateTime19 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int34 = mutablePeriod33.getDays();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.DateTime dateTime38 = new org.joda.time.DateTime(chronology37);
        org.joda.time.DateTime.Property property39 = dateTime38.yearOfEra();
        org.joda.time.Interval interval40 = property39.toInterval();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.DateTime dateTime42 = new org.joda.time.DateTime(chronology41);
        org.joda.time.DateTime.Property property43 = dateTime42.yearOfEra();
        org.joda.time.Interval interval44 = property43.toInterval();
        boolean boolean45 = interval40.contains((org.joda.time.ReadableInterval) interval44);
        org.joda.time.Chronology chronology46 = interval44.getChronology();
        mutablePeriod33.setPeriod((long) 'u', (long) 1969, chronology46);
        org.joda.time.DateTimeField dateTimeField48 = chronology46.hourOfHalfday();
        org.joda.time.DateTime dateTime49 = new org.joda.time.DateTime(100, 9, 23, (int) (short) 1, 5, chronology46);
        boolean boolean50 = dateTime2.isBefore((org.joda.time.ReadableInstant) dateTime49);
        org.joda.time.DateTime.Property property51 = dateTime49.secondOfMinute();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0802");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration4 = null;
        boolean boolean5 = duration2.isEqual(readableDuration4);
        org.joda.time.Duration duration7 = duration2.minus((long) 1);
        org.joda.time.Duration duration9 = duration7.minus((long) '4');
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Duration duration22 = duration19.plus((long) (byte) 0);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType30, chronology31);
        org.joda.time.PeriodType periodType33 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, (org.joda.time.ReadableInstant) dateTime25, periodType33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime12, (org.joda.time.ReadableDuration) duration16, periodType33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime12, periodType36);
        org.joda.time.Duration duration39 = duration7.minus((long) 7);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int50 = mutablePeriod49.getDays();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.DateTime dateTime54 = new org.joda.time.DateTime(chronology53);
        org.joda.time.DateTime.Property property55 = dateTime54.yearOfEra();
        org.joda.time.Interval interval56 = property55.toInterval();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.DateTime dateTime58 = new org.joda.time.DateTime(chronology57);
        org.joda.time.DateTime.Property property59 = dateTime58.yearOfEra();
        org.joda.time.Interval interval60 = property59.toInterval();
        boolean boolean61 = interval56.contains((org.joda.time.ReadableInterval) interval60);
        org.joda.time.Chronology chronology62 = interval60.getChronology();
        mutablePeriod49.setPeriod((long) 'u', (long) 1969, chronology62);
        org.joda.time.Period period64 = new org.joda.time.Period((long) (byte) 100, chronology62);
        org.joda.time.Period period65 = duration39.toPeriod(chronology62);
        org.joda.time.DateTimeField dateTimeField66 = chronology62.weekyearOfCentury();
        long long68 = dateTimeField66.roundHalfCeiling((long) 100);
        long long70 = dateTimeField66.roundHalfCeiling(17536739580000L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime12", (instant11.compareTo(dateTime12) == 0) == instant11.equals(dateTime12));
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0803");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        int int14 = dateTime2.getMinuteOfDay();
        org.joda.time.DateTime dateTime16 = dateTime2.withMillisOfSecond((int) '#');
        org.joda.time.DateTime dateTime18 = dateTime16.plusWeeks(0);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0804");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = property3.withMinimumValue();
        int int5 = property3.getMaximumValueOverall();
        java.util.Locale locale6 = java.util.Locale.ENGLISH;
        java.lang.String str7 = locale6.getScript();
        java.lang.String str8 = locale6.getDisplayCountry();
        int int9 = property3.getMaximumShortTextLength(locale6);
        org.joda.time.DateTime dateTime10 = property3.withMaximumValue();
        org.joda.time.LocalTime localTime11 = dateTime10.toLocalTime();
        org.joda.time.Instant instant13 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant15 = instant13.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime16 = instant13.toMutableDateTimeISO();
        java.lang.Object obj17 = null;
        org.joda.time.Instant instant18 = new org.joda.time.Instant(obj17);
        boolean boolean19 = mutableDateTime16.isAfter((org.joda.time.ReadableInstant) instant18);
        boolean boolean20 = localTime11.equals((java.lang.Object) mutableDateTime16);
        org.joda.time.Duration duration24 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds25 = duration24.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration26 = null;
        boolean boolean27 = duration24.isEqual(readableDuration26);
        org.joda.time.Duration duration29 = duration24.minus((long) 1);
        org.joda.time.Duration duration31 = duration29.minus((long) '4');
        org.joda.time.Instant instant33 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime34 = instant33.toDateTime();
        org.joda.time.DateTime.Property property35 = dateTime34.era();
        org.joda.time.Duration duration38 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration41 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period42 = duration41.toPeriod();
        org.joda.time.Duration duration44 = duration41.plus((long) (byte) 0);
        org.joda.time.Instant instant46 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime47 = instant46.toDateTime();
        boolean boolean49 = dateTime47.isEqual(10L);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType52, chronology53);
        org.joda.time.PeriodType periodType55 = periodType52.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration44, (org.joda.time.ReadableInstant) dateTime47, periodType55);
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime34, (org.joda.time.ReadableDuration) duration38, periodType55);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, (org.joda.time.ReadableInstant) dateTime34, periodType58);
        org.joda.time.Duration duration61 = duration29.minus((long) 7);
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int72 = mutablePeriod71.getDays();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.DateTime dateTime76 = new org.joda.time.DateTime(chronology75);
        org.joda.time.DateTime.Property property77 = dateTime76.yearOfEra();
        org.joda.time.Interval interval78 = property77.toInterval();
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.DateTime dateTime80 = new org.joda.time.DateTime(chronology79);
        org.joda.time.DateTime.Property property81 = dateTime80.yearOfEra();
        org.joda.time.Interval interval82 = property81.toInterval();
        boolean boolean83 = interval78.contains((org.joda.time.ReadableInterval) interval82);
        org.joda.time.Chronology chronology84 = interval82.getChronology();
        mutablePeriod71.setPeriod((long) 'u', (long) 1969, chronology84);
        org.joda.time.Period period86 = new org.joda.time.Period((long) (byte) 100, chronology84);
        org.joda.time.Period period87 = duration61.toPeriod(chronology84);
        org.joda.time.DateTimeField dateTimeField88 = chronology84.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField89 = chronology84.monthOfYear();
        org.joda.time.DurationField durationField90 = chronology84.weeks();
        org.joda.time.DateTimeField dateTimeField91 = chronology84.dayOfYear();
        org.joda.time.DateTime dateTime92 = new org.joda.time.DateTime((long) 0, chronology84);
        int int93 = dateTime92.getMillisOfDay();
        org.joda.time.DateTime dateTime94 = localTime11.toDateTime((org.joda.time.ReadableInstant) dateTime92);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0805");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.Interval interval7 = property6.toInterval();
        boolean boolean8 = interval3.contains((org.joda.time.ReadableInterval) interval7);
        java.lang.Object obj9 = null;
        org.joda.time.Instant instant10 = new org.joda.time.Instant(obj9);
        org.joda.time.DateTimeZone dateTimeZone11 = instant10.getZone();
        java.lang.String str12 = dateTimeZone11.toString();
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(dateTimeZone11);
        boolean boolean14 = interval3.contains((org.joda.time.ReadableInstant) dateTime13);
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTime.Property property18 = dateTime17.era();
        boolean boolean19 = interval3.contains((org.joda.time.ReadableInstant) dateTime17);
        org.joda.time.Period period20 = interval3.toPeriod();
        org.joda.time.Duration duration23 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period24 = duration23.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray25 = period24.getFieldTypes();
        int int26 = period24.getMinutes();
        org.joda.time.Period period28 = period24.withDays((int) ' ');
        org.joda.time.PeriodType periodType29 = period28.getPeriodType();
        org.joda.time.Period period30 = interval3.toPeriod(periodType29);
        org.joda.time.Period period31 = period30.toPeriod();
        org.joda.time.Period period33 = period31.plusDays(2022);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant10", (dateTime1.compareTo(instant10) == 0) == dateTime1.equals(instant10));
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0806");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant3 = instant1.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime4 = instant1.toMutableDateTimeISO();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.DateTime dateTime6 = new org.joda.time.DateTime(chronology5);
        org.joda.time.DateTime.Property property7 = dateTime6.yearOfEra();
        org.joda.time.DateTime.Property property8 = dateTime6.weekOfWeekyear();
        boolean boolean9 = mutableDateTime4.isBefore((org.joda.time.ReadableInstant) dateTime6);
        org.joda.time.DateTime.Property property10 = dateTime6.dayOfWeek();
        org.joda.time.DateTime dateTime12 = property10.addToCopy(86399999);
        org.joda.time.Duration duration15 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period16 = duration15.toPeriod();
        org.joda.time.Duration duration18 = duration15.plus((long) (byte) 0);
        org.joda.time.Instant instant20 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime21 = instant20.toDateTime();
        boolean boolean23 = dateTime21.isEqual(10L);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType26, chronology27);
        org.joda.time.PeriodType periodType29 = periodType26.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration18, (org.joda.time.ReadableInstant) dateTime21, periodType29);
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime33 = instant32.toDateTime();
        org.joda.time.DateTime.Property property34 = dateTime33.era();
        org.joda.time.DateTime dateTime35 = dateTime33.withTimeAtStartOfDay();
        org.joda.time.Instant instant36 = dateTime33.toInstant();
        org.joda.time.DateTime dateTime38 = dateTime33.withMillis((long) '4');
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime21, (org.joda.time.ReadableInstant) dateTime33);
        int int40 = dateTime33.getYear();
        org.joda.time.DateTime.Property property41 = dateTime33.dayOfWeek();
        org.joda.time.DateTimeZone dateTimeZone42 = null;
        org.joda.time.DateTime dateTime43 = dateTime33.toDateTime(dateTimeZone42);
        boolean boolean44 = dateTime12.isEqual((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Instant instant47 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime48 = instant47.toDateTime();
        org.joda.time.DateTime.Property property49 = dateTime48.era();
        org.joda.time.MutableDateTime mutableDateTime50 = dateTime48.toMutableDateTime();
        org.joda.time.DateTime.Property property51 = dateTime48.minuteOfDay();
        int int52 = property51.getMinimumValue();
        org.joda.time.DateTime dateTime53 = property51.roundFloorCopy();
        org.joda.time.DateTime dateTime54 = property51.roundHalfFloorCopy();
        org.joda.time.Instant instant56 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime57 = instant56.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone58 = null;
        org.joda.time.DateTime dateTime59 = dateTime57.withZoneRetainFields(dateTimeZone58);
        org.joda.time.DateTime.Property property60 = dateTime59.weekOfWeekyear();
        java.lang.String str61 = property60.getAsText();
        java.util.Locale locale62 = java.util.Locale.ITALY;
        java.util.Locale locale66 = new java.util.Locale("", "hi!", "hi!");
        java.lang.String str67 = locale62.getDisplayCountry(locale66);
        java.lang.String str68 = locale66.getDisplayVariant();
        java.util.Locale locale69 = java.util.Locale.ENGLISH;
        java.lang.String str70 = locale66.getDisplayVariant(locale69);
        int int71 = property60.getMaximumTextLength(locale66);
        int int72 = property51.getMaximumShortTextLength(locale66);
        java.lang.String str73 = dateTime12.toString("\u5348\u524d", locale66);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and mutableDateTime4", (instant1.compareTo(mutableDateTime4) == 0) == instant1.equals(mutableDateTime4));
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0807");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration4 = null;
        boolean boolean5 = duration2.isEqual(readableDuration4);
        org.joda.time.Duration duration7 = duration2.minus((long) 1);
        org.joda.time.Duration duration9 = duration7.minus((long) '4');
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Duration duration22 = duration19.plus((long) (byte) 0);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType30, chronology31);
        org.joda.time.PeriodType periodType33 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, (org.joda.time.ReadableInstant) dateTime25, periodType33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime12, (org.joda.time.ReadableDuration) duration16, periodType33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime12, periodType36);
        org.joda.time.TimeOfDay timeOfDay38 = dateTime12.toTimeOfDay();
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime12, readableDuration39);
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = org.joda.time.DateTimeFieldType.year();
        java.lang.String str42 = dateTimeFieldType41.getName();
        int int43 = dateTime12.get(dateTimeFieldType41);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime25", (instant11.compareTo(dateTime25) == 0) == instant11.equals(dateTime25));
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0808");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime dateTime22 = dateTime4.toDateTimeISO();
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant26 = instant24.minus(100L);
        java.lang.String str27 = instant26.toString();
        org.joda.time.Duration duration30 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period31 = duration30.toPeriod();
        org.joda.time.Duration duration33 = duration30.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = duration30.toPeriodTo(readableInstant34);
        org.joda.time.Duration duration37 = duration30.withMillis((long) (short) 0);
        org.joda.time.Instant instant38 = instant26.plus((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) instant26);
        org.joda.time.Instant instant41 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime42 = instant41.toDateTime();
        org.joda.time.DateTime.Property property43 = dateTime42.era();
        org.joda.time.DateTime dateTime44 = dateTime42.withTimeAtStartOfDay();
        org.joda.time.Duration duration47 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.PeriodType periodType49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration47, readableInstant48, periodType49);
        mutablePeriod50.setMonths((int) '4');
        org.joda.time.DateTime dateTime53 = dateTime42.plus((org.joda.time.ReadablePeriod) mutablePeriod50);
        org.joda.time.DateTime dateTime55 = dateTime42.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property56 = dateTime55.monthOfYear();
        org.joda.time.DateTime.Property property57 = dateTime55.weekyear();
        org.joda.time.DateTime dateTime58 = dateTime55.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone60 = org.joda.time.DateTimeZone.forOffsetHours(0);
        org.joda.time.DateTime dateTime61 = dateTime58.withZone(dateTimeZone60);
        org.joda.time.Instant instant63 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime64 = instant63.toDateTime();
        org.joda.time.DateTime.Property property65 = dateTime64.era();
        org.joda.time.DateTime dateTime66 = dateTime64.withTimeAtStartOfDay();
        org.joda.time.Instant instant67 = dateTime64.toInstant();
        org.joda.time.DateMidnight dateMidnight68 = dateTime64.toDateMidnight();
        int int69 = dateMidnight68.getDayOfYear();
        boolean boolean70 = dateMidnight68.isAfterNow();
        org.joda.time.Instant instant71 = dateMidnight68.toInstant();
        boolean boolean72 = dateTime61.isEqual((org.joda.time.ReadableInstant) dateMidnight68);
        boolean boolean73 = instant26.isBefore((org.joda.time.ReadableInstant) dateTime61);
        org.joda.time.DateTime.Property property74 = dateTime61.yearOfCentury();
        int int75 = dateTime61.getMinuteOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0809");
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType4, chronology5);
        org.joda.time.PeriodType periodType7 = periodType4.withWeeksRemoved();
        org.joda.time.PeriodType periodType8 = periodType7.withSecondsRemoved();
        org.joda.time.PeriodType periodType9 = periodType8.withWeeksRemoved();
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone13 = null;
        org.joda.time.DateTime dateTime14 = dateTime12.withZoneRetainFields(dateTimeZone13);
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTime.Property property18 = dateTime17.era();
        org.joda.time.DateTime dateTime19 = dateTime17.withTimeAtStartOfDay();
        org.joda.time.Duration duration22 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, readableInstant23, periodType24);
        mutablePeriod25.setMonths((int) '4');
        org.joda.time.DateTime dateTime28 = dateTime17.plus((org.joda.time.ReadablePeriod) mutablePeriod25);
        org.joda.time.DateTime dateTime30 = dateTime17.minusWeeks((int) (byte) 1);
        int int31 = dateTime14.compareTo((org.joda.time.ReadableInstant) dateTime17);
        org.joda.time.DateTime.Property property32 = dateTime17.minuteOfHour();
        org.joda.time.DateTime dateTime34 = dateTime17.withYear(1969);
        org.joda.time.Chronology chronology35 = dateTime34.getChronology();
        org.joda.time.DateTimeField dateTimeField36 = chronology35.year();
        org.joda.time.DateTimeField dateTimeField37 = chronology35.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField38 = chronology35.year();
        org.joda.time.Period period39 = new org.joda.time.Period((long) (byte) 100, (long) 'a', periodType9, chronology35);
        org.joda.time.PeriodType periodType40 = periodType9.withYearsRemoved();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime12", (instant11.compareTo(dateTime12) == 0) == instant11.equals(dateTime12));
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0810");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property16 = dateTime15.monthOfYear();
        org.joda.time.DateTime.Property property17 = dateTime15.weekyear();
        org.joda.time.DateTime dateTime18 = dateTime15.toDateTime();
        int int19 = dateTime15.getSecondOfDay();
        org.joda.time.DateTime.Property property20 = dateTime15.weekyear();
        java.lang.Object obj21 = null;
        org.joda.time.Instant instant22 = new org.joda.time.Instant(obj21);
        org.joda.time.DateTimeZone dateTimeZone23 = instant22.getZone();
        java.lang.String str24 = dateTimeZone23.toString();
        org.joda.time.DateTime dateTime25 = new org.joda.time.DateTime(dateTimeZone23);
        java.util.Locale locale27 = java.util.Locale.JAPANESE;
        java.lang.String str28 = locale27.getDisplayScript();
        java.lang.String str29 = dateTimeZone23.getShortName(100L, locale27);
        java.lang.String str30 = locale27.getDisplayLanguage();
        java.lang.String str31 = locale27.getISO3Language();
        java.util.Calendar calendar32 = dateTime15.toCalendar(locale27);
        java.util.Locale.setDefault(locale27);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0811");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime5 = dateTime2.withMillis(1640995200000L);
        org.joda.time.Duration duration7 = new org.joda.time.Duration(432000000L);
        java.lang.String str8 = duration7.toString();
        org.joda.time.Instant instant10 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime11 = instant10.toDateTime();
        org.joda.time.DateTime.Property property12 = dateTime11.era();
        org.joda.time.DateTime dateTime13 = dateTime11.withTimeAtStartOfDay();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration16, readableInstant17, periodType18);
        mutablePeriod19.setMonths((int) '4');
        org.joda.time.DateTime dateTime22 = dateTime11.plus((org.joda.time.ReadablePeriod) mutablePeriod19);
        java.lang.Object obj23 = null;
        org.joda.time.Instant instant24 = new org.joda.time.Instant(obj23);
        org.joda.time.DateTimeZone dateTimeZone25 = instant24.getZone();
        java.lang.String str26 = dateTimeZone25.toString();
        int int28 = dateTimeZone25.getOffset(1L);
        boolean boolean30 = dateTimeZone25.isStandardOffset(0L);
        org.joda.time.DateTime dateTime31 = dateTime11.withZoneRetainFields(dateTimeZone25);
        org.joda.time.DateTime dateTime33 = dateTime31.plusYears(1969);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType38, chronology39);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(1L, (long) 10, periodType38, chronology41);
        org.joda.time.PeriodType periodType43 = periodType38.withDaysRemoved();
        org.joda.time.Period period44 = duration7.toPeriodTo((org.joda.time.ReadableInstant) dateTime33, periodType38);
        org.joda.time.Period period45 = duration7.toPeriod();
        org.joda.time.Duration duration48 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period49 = duration48.toPeriod();
        org.joda.time.Duration duration51 = duration48.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = duration48.toPeriodTo(readableInstant52);
        org.joda.time.Duration duration55 = duration48.minus(43200000L);
        org.joda.time.Duration duration56 = duration7.minus((org.joda.time.ReadableDuration) duration48);
        org.joda.time.DateTime dateTime57 = dateTime5.plus((org.joda.time.ReadableDuration) duration7);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0812");
        java.lang.Object obj0 = null;
        org.joda.time.Instant instant1 = new org.joda.time.Instant(obj0);
        org.joda.time.DateTimeZone dateTimeZone2 = instant1.getZone();
        java.lang.String str3 = dateTimeZone2.toString();
        java.lang.String str5 = dateTimeZone2.getName((long) 10);
        java.lang.String str7 = dateTimeZone2.getName((long) 8);
        long long11 = dateTimeZone2.convertLocalToUTC((long) 31, false, (-3676492805054399977L));
        org.joda.time.Instant instant13 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime14 = instant13.toDateTime();
        org.joda.time.DateTime.Property property15 = dateTime14.era();
        org.joda.time.DateTime dateTime16 = dateTime14.withTimeAtStartOfDay();
        org.joda.time.Duration duration19 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration19, readableInstant20, periodType21);
        mutablePeriod22.setMonths((int) '4');
        org.joda.time.DateTime dateTime25 = dateTime14.plus((org.joda.time.ReadablePeriod) mutablePeriod22);
        org.joda.time.DateTime dateTime27 = dateTime14.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property28 = dateTime27.monthOfYear();
        org.joda.time.DateTime.Property property29 = dateTime27.weekyear();
        java.lang.Object obj30 = null;
        org.joda.time.Instant instant31 = new org.joda.time.Instant(obj30);
        org.joda.time.DateTimeZone dateTimeZone32 = instant31.getZone();
        java.lang.String str33 = dateTimeZone32.toString();
        java.lang.String str35 = dateTimeZone32.getName((long) 10);
        java.lang.String str37 = dateTimeZone32.getName((long) 8);
        int int39 = dateTimeZone32.getOffsetFromLocal((long) (short) -1);
        org.joda.time.DateTime dateTime40 = dateTime27.withZone(dateTimeZone32);
        org.joda.time.DateTime.Property property41 = dateTime40.weekOfWeekyear();
        org.joda.time.LocalDateTime localDateTime42 = dateTime40.toLocalDateTime();
        int int43 = dateTime40.getMonthOfYear();
        org.joda.time.DateTime.Property property44 = dateTime40.millisOfDay();
        int int45 = dateTimeZone2.getOffset((org.joda.time.ReadableInstant) dateTime40);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant13 and dateTime14", (instant13.compareTo(dateTime14) == 0) == instant13.equals(dateTime14));
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0813");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.DateTime dateTime29 = dateTime25.withCenturyOfEra((int) (byte) 1);
        boolean boolean30 = dateTime7.isAfter((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime33 = instant32.toDateTime();
        org.joda.time.DateTime.Property property34 = dateTime33.era();
        org.joda.time.DateTime dateTime35 = dateTime33.withTimeAtStartOfDay();
        org.joda.time.Duration duration38 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration38, readableInstant39, periodType40);
        mutablePeriod41.setMonths((int) '4');
        org.joda.time.DateTime dateTime44 = dateTime33.plus((org.joda.time.ReadablePeriod) mutablePeriod41);
        org.joda.time.DateTime dateTime46 = dateTime33.minusWeeks((int) (byte) 1);
        long long47 = dateTime33.getMillis();
        org.joda.time.DurationFieldType durationFieldType48 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant50 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime51 = instant50.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone52 = null;
        org.joda.time.DateTime dateTime53 = dateTime51.withZoneRetainFields(dateTimeZone52);
        org.joda.time.Instant instant55 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime56 = instant55.toDateTime();
        org.joda.time.DateTime.Property property57 = dateTime56.era();
        org.joda.time.DateTime dateTime58 = dateTime56.withTimeAtStartOfDay();
        org.joda.time.Duration duration61 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.PeriodType periodType63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration61, readableInstant62, periodType63);
        mutablePeriod64.setMonths((int) '4');
        org.joda.time.DateTime dateTime67 = dateTime56.plus((org.joda.time.ReadablePeriod) mutablePeriod64);
        org.joda.time.DateTime dateTime69 = dateTime56.minusWeeks((int) (byte) 1);
        int int70 = dateTime53.compareTo((org.joda.time.ReadableInstant) dateTime56);
        org.joda.time.DateTime.Property property71 = dateTime56.minuteOfHour();
        org.joda.time.DateTime dateTime73 = dateTime56.withYear(1969);
        org.joda.time.Chronology chronology74 = dateTime73.getChronology();
        org.joda.time.DurationField durationField75 = durationFieldType48.getField(chronology74);
        org.joda.time.DateTime dateTime76 = dateTime33.toDateTime(chronology74);
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.weeksBetween((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.DateTime.Property property78 = dateTime25.dayOfWeek();
        java.util.Locale locale79 = java.util.Locale.UK;
        java.lang.String str80 = locale79.getDisplayScript();
        int int81 = property78.getMaximumTextLength(locale79);
        org.joda.time.DateTime dateTime82 = property78.withMaximumValue();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0814");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.TimeOfDay timeOfDay6 = dateTime2.toTimeOfDay();
        org.joda.time.Instant instant8 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime9 = instant8.toDateTime();
        org.joda.time.DateTime.Property property10 = dateTime9.era();
        org.joda.time.DateTime dateTime11 = dateTime9.withTimeAtStartOfDay();
        org.joda.time.Instant instant12 = dateTime9.toInstant();
        org.joda.time.DateMidnight dateMidnight13 = dateTime9.toDateMidnight();
        org.joda.time.DateTime dateTime16 = dateTime9.withDurationAdded(0L, (int) 'a');
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) dateTime16);
        org.joda.time.DateTime.Property property18 = dateTime2.year();
        org.joda.time.DateTime.Property property19 = dateTime2.yearOfCentury();
        int int20 = dateTime2.getWeekyear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime9", (instant1.compareTo(dateTime9) == 0) == instant1.equals(dateTime9));
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0815");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 11, periodType1);
        org.joda.time.Duration duration5 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period6 = duration5.toPeriod();
        org.joda.time.Duration duration8 = duration5.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = duration5.toPeriodTo(readableInstant9);
        org.joda.time.Duration duration12 = duration5.withMillis((long) (short) 0);
        org.joda.time.Duration duration15 = duration5.withDurationAdded((long) 1, (int) ' ');
        org.joda.time.Chronology chronology16 = null;
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration5, chronology16);
        org.joda.time.Minutes minutes18 = duration5.toStandardMinutes();
        org.joda.time.Instant instant20 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime21 = instant20.toDateTime();
        org.joda.time.DateTime.Property property22 = dateTime21.era();
        org.joda.time.DateTime dateTime23 = dateTime21.withTimeAtStartOfDay();
        org.joda.time.Instant instant24 = dateTime21.toInstant();
        org.joda.time.TimeOfDay timeOfDay25 = dateTime21.toTimeOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType26 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.DateTimeField dateTimeField28 = dateTimeFieldType26.getField(chronology27);
        long long31 = dateTimeField28.add(0L, (long) (short) 1);
        long long33 = dateTimeField28.roundHalfCeiling((long) 2);
        org.joda.time.Instant instant35 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime36 = instant35.toDateTime();
        org.joda.time.DateTime.Property property37 = dateTime36.era();
        org.joda.time.Instant instant39 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant41 = instant39.minus(100L);
        org.joda.time.Instant instant43 = instant41.plus((long) 100);
        org.joda.time.Instant instant45 = instant41.withMillis((long) (byte) 1);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime36, (org.joda.time.ReadableInstant) instant41);
        org.joda.time.LocalTime localTime47 = dateTime36.toLocalTime();
        org.joda.time.Duration duration51 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.PeriodType periodType53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration51, readableInstant52, periodType53);
        mutablePeriod54.setMonths((int) '4');
        org.joda.time.Period period57 = mutablePeriod54.toPeriod();
        int[] intArray58 = period57.getValues();
        int[] intArray60 = dateTimeField28.addWrapField((org.joda.time.ReadablePartial) localTime47, 0, intArray58, 3);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadablePartial) timeOfDay25, (org.joda.time.ReadablePartial) localTime47);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.ONE;
        org.joda.time.Minutes minutes63 = minutes61.minus(minutes62);
        org.joda.time.Minutes minutes64 = minutes18.minus(minutes62);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant20 and dateTime21", (instant20.compareTo(dateTime21) == 0) == instant20.equals(dateTime21));
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0816");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        org.joda.time.DateTime.Property property21 = dateTime20.era();
        org.joda.time.DateTime dateTime22 = dateTime20.withTimeAtStartOfDay();
        org.joda.time.Instant instant23 = dateTime20.toInstant();
        org.joda.time.DateTime dateTime25 = dateTime20.withMillis((long) '4');
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableInstant) dateTime20);
        int int27 = dateTime20.getYear();
        org.joda.time.DateTime.Property property28 = dateTime20.dayOfWeek();
        org.joda.time.DateTime dateTime30 = dateTime20.plusWeeks(25985711);
        org.joda.time.DateTime dateTime32 = dateTime20.minusYears((int) (byte) -1);
        org.joda.time.DateTime dateTime34 = dateTime20.withCenturyOfEra(1800);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0817");
        org.joda.time.DurationFieldType durationFieldType0 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant2 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime3 = instant2.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone4 = null;
        org.joda.time.DateTime dateTime5 = dateTime3.withZoneRetainFields(dateTimeZone4);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        org.joda.time.DateTime.Property property9 = dateTime8.era();
        org.joda.time.DateTime dateTime10 = dateTime8.withTimeAtStartOfDay();
        org.joda.time.Duration duration13 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration13, readableInstant14, periodType15);
        mutablePeriod16.setMonths((int) '4');
        org.joda.time.DateTime dateTime19 = dateTime8.plus((org.joda.time.ReadablePeriod) mutablePeriod16);
        org.joda.time.DateTime dateTime21 = dateTime8.minusWeeks((int) (byte) 1);
        int int22 = dateTime5.compareTo((org.joda.time.ReadableInstant) dateTime8);
        org.joda.time.DateTime.Property property23 = dateTime8.minuteOfHour();
        org.joda.time.DateTime dateTime25 = dateTime8.withYear(1969);
        org.joda.time.Chronology chronology26 = dateTime25.getChronology();
        org.joda.time.DurationField durationField27 = durationFieldType0.getField(chronology26);
        org.joda.time.DateTimeField dateTimeField28 = chronology26.hourOfDay();
        org.joda.time.DurationField durationField29 = chronology26.months();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime3", (instant2.compareTo(dateTime3) == 0) == instant2.equals(dateTime3));
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0818");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.Instant instant2 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime3 = instant2.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone4 = null;
        org.joda.time.DateTime dateTime5 = dateTime3.withZoneRetainFields(dateTimeZone4);
        java.util.Locale locale7 = new java.util.Locale("+00:00");
        boolean boolean8 = dateTime3.equals((java.lang.Object) "+00:00");
        org.joda.time.Instant instant10 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime11 = instant10.toDateTime();
        org.joda.time.DateTime.Property property12 = dateTime11.era();
        org.joda.time.DateTime dateTime13 = dateTime11.withTimeAtStartOfDay();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration16, readableInstant17, periodType18);
        mutablePeriod19.setMonths((int) '4');
        org.joda.time.DateTime dateTime22 = dateTime11.plus((org.joda.time.ReadablePeriod) mutablePeriod19);
        org.joda.time.DateTime dateTime24 = dateTime11.withMillisOfDay(4);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType29, chronology30);
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((-1L), (long) 100, periodType29);
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime3, (org.joda.time.ReadableInstant) dateTime11, periodType29);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime(chronology34);
        org.joda.time.DateTime.Property property36 = dateTime35.yearOfEra();
        org.joda.time.Interval interval37 = property36.toInterval();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.DateTime dateTime39 = new org.joda.time.DateTime(chronology38);
        org.joda.time.DateTime.Property property40 = dateTime39.yearOfEra();
        org.joda.time.Interval interval41 = property40.toInterval();
        boolean boolean42 = interval37.contains((org.joda.time.ReadableInterval) interval41);
        org.joda.time.Chronology chronology43 = interval41.getChronology();
        org.joda.time.MutableDateTime mutableDateTime44 = dateTime11.toMutableDateTime(chronology43);
        boolean boolean45 = dateTimeFieldType0.isSupported(chronology43);
        java.lang.String str46 = dateTimeFieldType0.getName();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime3", (instant2.compareTo(dateTime3) == 0) == instant2.equals(dateTime3));
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0819");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.DateTime.Property property18 = dateTime8.yearOfEra();
        int int19 = dateTime8.getDayOfMonth();
        org.joda.time.Instant instant20 = dateTime8.toInstant();
        org.joda.time.DateTime.Property property21 = dateTime8.millisOfDay();
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant25 = instant23.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime26 = instant23.toMutableDateTimeISO();
        java.lang.Object obj27 = null;
        org.joda.time.Instant instant28 = new org.joda.time.Instant(obj27);
        boolean boolean29 = mutableDateTime26.isAfter((org.joda.time.ReadableInstant) instant28);
        org.joda.time.Instant instant31 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant32 = instant31.toInstant();
        org.joda.time.DateTime dateTime33 = instant32.toDateTimeISO();
        org.joda.time.DateTime dateTime34 = dateTime33.withLaterOffsetAtOverlap();
        int int35 = instant28.compareTo((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Instant instant38 = instant28.withDurationAdded((long) (byte) 10, (-1));
        org.joda.time.Instant instant40 = instant38.minus((long) 35);
        org.joda.time.Duration duration41 = new org.joda.time.Duration((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableInstant) instant40);
        org.joda.time.DateTime dateTime43 = dateTime8.minusMonths(2922789);
        org.joda.time.DateTime dateTime45 = dateTime43.withHourOfDay(12);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0820");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.DateTime dateTime6 = dateTime2.withCenturyOfEra((int) (byte) 1);
        org.joda.time.DateTimeFieldType dateTimeFieldType7 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.DateTimeField dateTimeField9 = dateTimeFieldType7.getField(chronology8);
        long long12 = dateTimeField9.add(0L, (long) (short) 1);
        long long15 = dateTimeField9.add(1L, (-1));
        int int16 = dateTime2.get(dateTimeField9);
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime19 = instant18.toDateTime();
        org.joda.time.DateTime.Property property20 = dateTime19.era();
        org.joda.time.DateTime dateTime21 = dateTime19.withTimeAtStartOfDay();
        org.joda.time.Duration duration24 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration24, readableInstant25, periodType26);
        mutablePeriod27.setMonths((int) '4');
        org.joda.time.DateTime dateTime30 = dateTime19.plus((org.joda.time.ReadablePeriod) mutablePeriod27);
        org.joda.time.DateTime dateTime32 = dateTime19.minusWeeks((int) (byte) 1);
        long long33 = dateTime19.getMillis();
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime37 = instant36.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone38 = null;
        org.joda.time.DateTime dateTime39 = dateTime37.withZoneRetainFields(dateTimeZone38);
        org.joda.time.Instant instant41 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime42 = instant41.toDateTime();
        org.joda.time.DateTime.Property property43 = dateTime42.era();
        org.joda.time.DateTime dateTime44 = dateTime42.withTimeAtStartOfDay();
        org.joda.time.Duration duration47 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.PeriodType periodType49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration47, readableInstant48, periodType49);
        mutablePeriod50.setMonths((int) '4');
        org.joda.time.DateTime dateTime53 = dateTime42.plus((org.joda.time.ReadablePeriod) mutablePeriod50);
        org.joda.time.DateTime dateTime55 = dateTime42.minusWeeks((int) (byte) 1);
        int int56 = dateTime39.compareTo((org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.DateTime.Property property57 = dateTime42.minuteOfHour();
        org.joda.time.DateTime dateTime59 = dateTime42.withYear(1969);
        org.joda.time.Chronology chronology60 = dateTime59.getChronology();
        org.joda.time.DurationField durationField61 = durationFieldType34.getField(chronology60);
        org.joda.time.DateTime dateTime62 = dateTime19.toDateTime(chronology60);
        org.joda.time.DateTime dateTime63 = dateTime2.toDateTime(chronology60);
        org.joda.time.DateTime dateTime64 = org.joda.time.DateTime.now(chronology60);
        org.joda.time.DurationField durationField65 = chronology60.seconds();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0821");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.DateTime dateTime7 = dateTime2.withMillis((long) '4');
        org.joda.time.DateTime.Property property8 = dateTime7.weekOfWeekyear();
        int int9 = property8.get();
        org.joda.time.DateTime dateTime11 = property8.addWrapFieldToCopy((-19));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0822");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.Interval interval7 = property6.toInterval();
        boolean boolean8 = interval3.contains((org.joda.time.ReadableInterval) interval7);
        java.lang.Object obj9 = null;
        org.joda.time.Instant instant10 = new org.joda.time.Instant(obj9);
        org.joda.time.DateTimeZone dateTimeZone11 = instant10.getZone();
        java.lang.String str12 = dateTimeZone11.toString();
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(dateTimeZone11);
        boolean boolean14 = interval3.contains((org.joda.time.ReadableInstant) dateTime13);
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTime.Property property18 = dateTime17.era();
        boolean boolean19 = interval3.contains((org.joda.time.ReadableInstant) dateTime17);
        org.joda.time.MutableInterval mutableInterval20 = interval3.toMutableInterval();
        long long21 = interval3.getEndMillis();
        long long22 = interval3.toDurationMillis();
        org.joda.time.DateTime dateTime23 = interval3.getEnd();
        org.joda.time.Instant instant25 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime26 = instant25.toDateTime();
        org.joda.time.DateTime.Property property27 = dateTime26.era();
        org.joda.time.DateTime dateTime28 = dateTime26.withTimeAtStartOfDay();
        org.joda.time.Duration duration31 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.PeriodType periodType33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration31, readableInstant32, periodType33);
        mutablePeriod34.setMonths((int) '4');
        org.joda.time.DateTime dateTime37 = dateTime26.plus((org.joda.time.ReadablePeriod) mutablePeriod34);
        org.joda.time.DateTime dateTime39 = dateTime26.minusWeeks((int) (byte) 1);
        org.joda.time.DateTimeZone dateTimeZone41 = org.joda.time.DateTimeZone.forID("UTC");
        org.joda.time.MutableDateTime mutableDateTime42 = dateTime26.toMutableDateTime(dateTimeZone41);
        org.joda.time.DateTime dateTime43 = dateTime26.withTimeAtStartOfDay();
        boolean boolean44 = interval3.isBefore((org.joda.time.ReadableInstant) dateTime26);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant10", (dateTime1.compareTo(instant10) == 0) == dateTime1.equals(instant10));
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0823");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.DateTimeField dateTimeField8 = dateTimeFieldType6.getField(chronology7);
        org.joda.time.DurationFieldType durationFieldType9 = dateTimeFieldType6.getRangeDurationType();
        org.joda.time.DateTime.Property property10 = dateTime2.property(dateTimeFieldType6);
        int int11 = dateTime2.getDayOfYear();
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType18, chronology19);
        org.joda.time.PeriodType periodType21 = periodType18.withWeeksRemoved();
        org.joda.time.PeriodType periodType22 = periodType21.withSecondsRemoved();
        org.joda.time.PeriodType periodType23 = periodType22.withWeeksRemoved();
        org.joda.time.Instant instant25 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime26 = instant25.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone27 = null;
        org.joda.time.DateTime dateTime28 = dateTime26.withZoneRetainFields(dateTimeZone27);
        org.joda.time.Instant instant30 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime31 = instant30.toDateTime();
        org.joda.time.DateTime.Property property32 = dateTime31.era();
        org.joda.time.DateTime dateTime33 = dateTime31.withTimeAtStartOfDay();
        org.joda.time.Duration duration36 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.PeriodType periodType38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration36, readableInstant37, periodType38);
        mutablePeriod39.setMonths((int) '4');
        org.joda.time.DateTime dateTime42 = dateTime31.plus((org.joda.time.ReadablePeriod) mutablePeriod39);
        org.joda.time.DateTime dateTime44 = dateTime31.minusWeeks((int) (byte) 1);
        int int45 = dateTime28.compareTo((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.DateTime.Property property46 = dateTime31.minuteOfHour();
        org.joda.time.DateTime dateTime48 = dateTime31.withYear(1969);
        org.joda.time.Chronology chronology49 = dateTime48.getChronology();
        org.joda.time.DateTimeField dateTimeField50 = chronology49.year();
        org.joda.time.DateTimeField dateTimeField51 = chronology49.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField52 = chronology49.year();
        org.joda.time.Period period53 = new org.joda.time.Period((long) (byte) 100, (long) 'a', periodType23, chronology49);
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((long) '#', chronology49);
        org.joda.time.DateTime dateTime55 = new org.joda.time.DateTime(12000L, chronology49);
        org.joda.time.DateTime dateTime56 = dateTime2.withChronology(chronology49);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime26", (instant1.compareTo(dateTime26) == 0) == instant1.equals(dateTime26));
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0824");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        int int4 = dateTime2.getWeekOfWeekyear();
        int int5 = dateTime2.getMonthOfYear();
        int int6 = dateTime2.getDayOfWeek();
        org.joda.time.DateTime dateTime8 = dateTime2.plus(4190400000L);
        org.joda.time.DateTime dateTime10 = dateTime8.withYearOfCentury((int) (short) 10);
        java.lang.String str11 = dateTime8.toString();
        org.joda.time.Instant instant13 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant14 = instant13.toInstant();
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTime.Property property18 = dateTime17.era();
        org.joda.time.DateTime dateTime19 = dateTime17.withTimeAtStartOfDay();
        org.joda.time.Duration duration22 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, readableInstant23, periodType24);
        mutablePeriod25.setMonths((int) '4');
        org.joda.time.DateTime dateTime28 = dateTime17.plus((org.joda.time.ReadablePeriod) mutablePeriod25);
        org.joda.time.LocalDate localDate29 = dateTime17.toLocalDate();
        int int30 = instant13.compareTo((org.joda.time.ReadableInstant) dateTime17);
        org.joda.time.DateTime dateTime32 = dateTime17.withSecondOfMinute(0);
        org.joda.time.Duration duration35 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds36 = duration35.toStandardSeconds();
        org.joda.time.Instant instant38 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant40 = instant38.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime41 = instant38.toMutableDateTimeISO();
        org.joda.time.Period period42 = duration35.toPeriodTo((org.joda.time.ReadableInstant) instant38);
        org.joda.time.Instant instant44 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime45 = instant44.toDateTime();
        org.joda.time.DateTime.Property property46 = dateTime45.era();
        org.joda.time.DateTime dateTime47 = dateTime45.withTimeAtStartOfDay();
        org.joda.time.Duration duration50 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.PeriodType periodType52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration50, readableInstant51, periodType52);
        mutablePeriod53.setMonths((int) '4');
        org.joda.time.DateTime dateTime56 = dateTime45.plus((org.joda.time.ReadablePeriod) mutablePeriod53);
        org.joda.time.DateTime dateTime58 = dateTime45.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property59 = dateTime58.monthOfYear();
        org.joda.time.PeriodType periodType64 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType64, chronology65);
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod(1L, (long) 10, periodType64, chronology67);
        org.joda.time.PeriodType periodType69 = periodType64.withDaysRemoved();
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, (org.joda.time.ReadableInstant) dateTime58, periodType64);
        org.joda.time.Instant instant72 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant73 = instant72.toInstant();
        org.joda.time.DateTime dateTime74 = instant73.toDateTimeISO();
        org.joda.time.Period period75 = duration35.toPeriodTo((org.joda.time.ReadableInstant) dateTime74);
        org.joda.time.DateTimeFieldType dateTimeFieldType76 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        int int77 = dateTime74.get(dateTimeFieldType76);
        int int78 = dateTime32.get(dateTimeFieldType76);
        boolean boolean79 = dateTime8.isSupported(dateTimeFieldType76);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0825");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(432000000L);
        java.lang.String str2 = duration1.toString();
        org.joda.time.Instant instant4 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime5 = instant4.toDateTime();
        org.joda.time.DateTime.Property property6 = dateTime5.era();
        org.joda.time.DateTime dateTime7 = dateTime5.withTimeAtStartOfDay();
        org.joda.time.Duration duration10 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, readableInstant11, periodType12);
        mutablePeriod13.setMonths((int) '4');
        org.joda.time.DateTime dateTime16 = dateTime5.plus((org.joda.time.ReadablePeriod) mutablePeriod13);
        java.lang.Object obj17 = null;
        org.joda.time.Instant instant18 = new org.joda.time.Instant(obj17);
        org.joda.time.DateTimeZone dateTimeZone19 = instant18.getZone();
        java.lang.String str20 = dateTimeZone19.toString();
        int int22 = dateTimeZone19.getOffset(1L);
        boolean boolean24 = dateTimeZone19.isStandardOffset(0L);
        org.joda.time.DateTime dateTime25 = dateTime5.withZoneRetainFields(dateTimeZone19);
        org.joda.time.DateTime dateTime27 = dateTime25.plusYears(1969);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType32, chronology33);
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(1L, (long) 10, periodType32, chronology35);
        org.joda.time.PeriodType periodType37 = periodType32.withDaysRemoved();
        org.joda.time.Period period38 = duration1.toPeriodTo((org.joda.time.ReadableInstant) dateTime27, periodType32);
        org.joda.time.Instant instant40 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime41 = instant40.toDateTime();
        org.joda.time.DateTime.Property property42 = dateTime41.era();
        org.joda.time.DateTime dateTime43 = dateTime41.withTimeAtStartOfDay();
        org.joda.time.Instant instant44 = dateTime41.toInstant();
        org.joda.time.DateTime dateTime46 = dateTime41.withMillis((long) '4');
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.standard();
        org.joda.time.Period period48 = duration1.toPeriodTo((org.joda.time.ReadableInstant) dateTime41, periodType47);
        org.joda.time.PeriodType periodType49 = periodType47.withMinutesRemoved();
        org.joda.time.PeriodType periodType50 = periodType49.withYearsRemoved();
        org.joda.time.PeriodType periodType51 = periodType50.withWeeksRemoved();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant4 and dateTime5", (instant4.compareTo(dateTime5) == 0) == instant4.equals(dateTime5));
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0826");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.era();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.secondOfDay();
        org.joda.time.Chronology chronology29 = chronology25.withUTC();
        org.joda.time.DateTimeField dateTimeField30 = chronology25.weekyear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0827");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period3 = period1.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration5 = period3.toDurationTo(readableInstant4);
        org.joda.time.Duration duration8 = duration5.withDurationAdded((long) '#', 0);
        org.joda.time.Duration duration11 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds12 = duration11.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration13 = null;
        boolean boolean14 = duration11.isEqual(readableDuration13);
        boolean boolean15 = duration8.isEqual(readableDuration13);
        long long16 = duration8.getMillis();
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime19 = instant18.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone20 = null;
        org.joda.time.DateTime dateTime21 = dateTime19.withZone(dateTimeZone20);
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime24 = instant23.toDateTime();
        org.joda.time.DateTime.Property property25 = dateTime24.era();
        org.joda.time.DateTime dateTime26 = dateTime24.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType27 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean28 = dateTime24.isSupported(dateTimeFieldType27);
        org.joda.time.DateTime.Property property29 = dateTime19.property(dateTimeFieldType27);
        org.joda.time.DateTime dateTime30 = dateTime19.withTimeAtStartOfDay();
        int int31 = dateTime19.getSecondOfMinute();
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, (org.joda.time.ReadableInstant) dateTime19);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant18 and dateTime19", (instant18.compareTo(dateTime19) == 0) == instant18.equals(dateTime19));
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0828");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.DateTime dateTime4 = interval3.getStart();
        int int5 = dateTime4.getYear();
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant9 = instant7.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime10 = instant7.toMutableDateTimeISO();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.DateTime dateTime12 = new org.joda.time.DateTime(chronology11);
        org.joda.time.DateTime.Property property13 = dateTime12.yearOfEra();
        org.joda.time.DateTime.Property property14 = dateTime12.weekOfWeekyear();
        boolean boolean15 = mutableDateTime10.isBefore((org.joda.time.ReadableInstant) dateTime12);
        org.joda.time.DateTime dateTime17 = dateTime12.withMillisOfDay(0);
        org.joda.time.Duration duration18 = new org.joda.time.Duration((org.joda.time.ReadableInstant) dateTime4, (org.joda.time.ReadableInstant) dateTime12);
        org.joda.time.Duration duration21 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds22 = duration21.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration23 = null;
        boolean boolean24 = duration21.isEqual(readableDuration23);
        org.joda.time.Duration duration26 = duration21.minus((long) 1);
        org.joda.time.Duration duration28 = duration26.minus((long) '4');
        org.joda.time.Instant instant30 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime31 = instant30.toDateTime();
        org.joda.time.DateTime.Property property32 = dateTime31.era();
        org.joda.time.Duration duration35 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration38 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period39 = duration38.toPeriod();
        org.joda.time.Duration duration41 = duration38.plus((long) (byte) 0);
        org.joda.time.Instant instant43 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime44 = instant43.toDateTime();
        boolean boolean46 = dateTime44.isEqual(10L);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType49, chronology50);
        org.joda.time.PeriodType periodType52 = periodType49.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration41, (org.joda.time.ReadableInstant) dateTime44, periodType52);
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration35, periodType52);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, (org.joda.time.ReadableInstant) dateTime31, periodType55);
        org.joda.time.Duration duration58 = duration26.minus((long) 7);
        boolean boolean59 = duration18.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and mutableDateTime10", (instant7.compareTo(mutableDateTime10) == 0) == instant7.equals(mutableDateTime10));
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0829");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = duration2.toPeriodTo(readableInstant6);
        org.joda.time.Duration duration10 = duration2.withDurationAdded((long) (short) -1, (int) (byte) 100);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration10.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period22 = duration21.toPeriod();
        org.joda.time.Duration duration24 = duration21.plus((long) (byte) 0);
        org.joda.time.Instant instant26 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime27 = instant26.toDateTime();
        boolean boolean29 = dateTime27.isEqual(10L);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType32, chronology33);
        org.joda.time.PeriodType periodType35 = periodType32.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration24, (org.joda.time.ReadableInstant) dateTime27, periodType35);
        org.joda.time.Instant instant38 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime39 = instant38.toDateTime();
        org.joda.time.DateTime.Property property40 = dateTime39.era();
        org.joda.time.DateTime dateTime41 = dateTime39.withTimeAtStartOfDay();
        org.joda.time.Instant instant42 = dateTime39.toInstant();
        org.joda.time.DateTime dateTime44 = dateTime39.withMillis((long) '4');
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) dateTime39);
        int int46 = dateTime39.getYear();
        org.joda.time.DateTime.Property property47 = dateTime39.dayOfWeek();
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.dayTime();
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime39, periodType48);
        mutablePeriod49.setWeeks(0);
        org.joda.time.MutablePeriod mutablePeriod52 = mutablePeriod49.toMutablePeriod();
        mutablePeriod49.setPeriod((long) 120);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant26 and dateTime27", (instant26.compareTo(dateTime27) == 0) == instant26.equals(dateTime27));
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0830");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours((int) (byte) 0);
        org.joda.time.Hours hours4 = hours2.minus((int) (short) 10);
        boolean boolean5 = hours0.isGreaterThan(hours4);
        org.joda.time.Period period7 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period9 = period7.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Duration duration11 = period9.toDurationTo(readableInstant10);
        org.joda.time.Instant instant13 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime14 = instant13.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone15 = null;
        org.joda.time.DateTime dateTime16 = dateTime14.withZoneRetainFields(dateTimeZone15);
        org.joda.time.DateTime.Property property17 = dateTime16.weekOfWeekyear();
        org.joda.time.Duration duration20 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration20, readableInstant21, periodType22);
        org.joda.time.DateTime dateTime24 = dateTime16.plus((org.joda.time.ReadableDuration) duration20);
        boolean boolean25 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration28 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration28, readableInstant29, periodType30);
        long long32 = duration28.getStandardSeconds();
        org.joda.time.Duration duration34 = duration20.withDurationAdded((org.joda.time.ReadableDuration) duration28, 10);
        org.joda.time.Period period35 = duration34.toPeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period35);
        org.joda.time.Hours hours37 = hours0.minus(hours36);
        org.joda.time.Hours hours38 = org.joda.time.Hours.MIN_VALUE;
        org.joda.time.Hours hours40 = hours38.dividedBy(169);
        org.joda.time.Hours hours42 = hours40.plus((int) (short) 1);
        boolean boolean43 = hours36.isLessThan(hours40);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant13 and dateTime14", (instant13.compareTo(dateTime14) == 0) == instant13.equals(dateTime14));
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0831");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.hourOfHalfday();
        java.lang.Object obj28 = null;
        org.joda.time.Instant instant29 = new org.joda.time.Instant(obj28);
        org.joda.time.DateTimeZone dateTimeZone30 = instant29.getZone();
        java.lang.String str31 = dateTimeZone30.toString();
        int int33 = dateTimeZone30.getOffset(1L);
        boolean boolean35 = dateTimeZone30.isStandardOffset(0L);
        java.lang.String str37 = dateTimeZone30.getNameKey((long) 1);
        java.util.Locale locale39 = java.util.Locale.FRENCH;
        java.lang.String str40 = dateTimeZone30.getName((long) (byte) 10, locale39);
        java.util.TimeZone timeZone41 = dateTimeZone30.toTimeZone();
        org.joda.time.DateTime dateTime42 = org.joda.time.DateTime.now(dateTimeZone30);
        org.joda.time.Chronology chronology43 = chronology25.withZone(dateTimeZone30);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0832");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period3 = period1.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration5 = period3.toDurationTo(readableInstant4);
        org.joda.time.Duration duration8 = duration5.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = duration8.toPeriodFrom(readableInstant9);
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTime.Property property14 = dateTime13.era();
        org.joda.time.Duration duration17 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration20 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period21 = duration20.toPeriod();
        org.joda.time.Duration duration23 = duration20.plus((long) (byte) 0);
        org.joda.time.Instant instant25 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime26 = instant25.toDateTime();
        boolean boolean28 = dateTime26.isEqual(10L);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType31, chronology32);
        org.joda.time.PeriodType periodType34 = periodType31.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, (org.joda.time.ReadableInstant) dateTime26, periodType34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime13, (org.joda.time.ReadableDuration) duration17, periodType34);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration8.toPeriod(periodType34, chronology37);
        org.joda.time.Instant instant40 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime41 = instant40.toDateTime();
        org.joda.time.DateTime.Property property42 = dateTime41.era();
        org.joda.time.DateTime dateTime43 = dateTime41.withTimeAtStartOfDay();
        org.joda.time.Duration duration46 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.PeriodType periodType48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration46, readableInstant47, periodType48);
        mutablePeriod49.setMonths((int) '4');
        org.joda.time.DateTime dateTime52 = dateTime41.plus((org.joda.time.ReadablePeriod) mutablePeriod49);
        org.joda.time.DateTime dateTime54 = dateTime41.minusWeeks((int) (byte) 1);
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, (org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.DateTime.Property property56 = dateTime41.minuteOfDay();
        org.joda.time.Duration duration59 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds60 = duration59.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration61 = null;
        boolean boolean62 = duration59.isEqual(readableDuration61);
        org.joda.time.Duration duration64 = duration59.minus((long) 1);
        org.joda.time.Duration duration66 = duration64.minus((long) '4');
        org.joda.time.Instant instant68 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime69 = instant68.toDateTime();
        org.joda.time.DateTime.Property property70 = dateTime69.era();
        org.joda.time.Duration duration73 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration76 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period77 = duration76.toPeriod();
        org.joda.time.Duration duration79 = duration76.plus((long) (byte) 0);
        org.joda.time.Instant instant81 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime82 = instant81.toDateTime();
        boolean boolean84 = dateTime82.isEqual(10L);
        org.joda.time.PeriodType periodType87 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology88 = null;
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType87, chronology88);
        org.joda.time.PeriodType periodType90 = periodType87.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod91 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration79, (org.joda.time.ReadableInstant) dateTime82, periodType90);
        org.joda.time.Period period92 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime69, (org.joda.time.ReadableDuration) duration73, periodType90);
        org.joda.time.PeriodType periodType93 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period94 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration64, (org.joda.time.ReadableInstant) dateTime69, periodType93);
        java.lang.String str95 = period94.toString();
        org.joda.time.Duration duration96 = period94.toStandardDuration();
        org.joda.time.Period period98 = period94.minusDays(9);
        org.joda.time.DateTime dateTime99 = dateTime41.plus((org.joda.time.ReadablePeriod) period94);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime13", (instant12.compareTo(dateTime13) == 0) == instant12.equals(dateTime13));
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0833");
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType5, chronology6);
        org.joda.time.PeriodType periodType8 = periodType5.withWeeksRemoved();
        org.joda.time.PeriodType periodType9 = periodType8.withSecondsRemoved();
        org.joda.time.PeriodType periodType10 = periodType9.withWeeksRemoved();
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone14 = null;
        org.joda.time.DateTime dateTime15 = dateTime13.withZoneRetainFields(dateTimeZone14);
        org.joda.time.Instant instant17 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime18 = instant17.toDateTime();
        org.joda.time.DateTime.Property property19 = dateTime18.era();
        org.joda.time.DateTime dateTime20 = dateTime18.withTimeAtStartOfDay();
        org.joda.time.Duration duration23 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, readableInstant24, periodType25);
        mutablePeriod26.setMonths((int) '4');
        org.joda.time.DateTime dateTime29 = dateTime18.plus((org.joda.time.ReadablePeriod) mutablePeriod26);
        org.joda.time.DateTime dateTime31 = dateTime18.minusWeeks((int) (byte) 1);
        int int32 = dateTime15.compareTo((org.joda.time.ReadableInstant) dateTime18);
        org.joda.time.DateTime.Property property33 = dateTime18.minuteOfHour();
        org.joda.time.DateTime dateTime35 = dateTime18.withYear(1969);
        org.joda.time.Chronology chronology36 = dateTime35.getChronology();
        org.joda.time.DateTimeField dateTimeField37 = chronology36.year();
        org.joda.time.DateTimeField dateTimeField38 = chronology36.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField39 = chronology36.year();
        org.joda.time.Period period40 = new org.joda.time.Period((long) (byte) 100, (long) 'a', periodType10, chronology36);
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((long) '#', chronology36);
        org.joda.time.Hours hours42 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours43.multipliedBy(0);
        org.joda.time.Hours hours47 = hours43.dividedBy(69);
        org.joda.time.Hours hours48 = org.joda.time.Hours.MIN_VALUE;
        boolean boolean49 = hours47.isGreaterThan(hours48);
        org.joda.time.Hours hours50 = hours42.plus(hours48);
        mutablePeriod41.setPeriod((org.joda.time.ReadablePeriod) hours50);
        org.joda.time.MutablePeriod mutablePeriod52 = hours50.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType53 = hours50.getFieldType();
        org.joda.time.DurationFieldType durationFieldType54 = hours50.getFieldType();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime13", (instant12.compareTo(dateTime13) == 0) == instant12.equals(dateTime13));
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0834");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.DateTime dateTime6 = dateTime2.withWeekOfWeekyear(8);
        org.joda.time.DateTime dateTime8 = dateTime2.plusDays(100);
        org.joda.time.LocalTime localTime9 = dateTime2.toLocalTime();
        org.joda.time.DateTime.Property property10 = dateTime2.dayOfWeek();
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTime.Property property14 = dateTime13.era();
        org.joda.time.DateTime dateTime15 = dateTime13.withTimeAtStartOfDay();
        org.joda.time.Duration duration18 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration18, readableInstant19, periodType20);
        mutablePeriod21.setMonths((int) '4');
        org.joda.time.DateTime dateTime24 = dateTime13.plus((org.joda.time.ReadablePeriod) mutablePeriod21);
        org.joda.time.DateTime dateTime26 = dateTime13.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property27 = dateTime26.monthOfYear();
        org.joda.time.DateTime.Property property28 = dateTime26.weekyear();
        java.lang.Object obj29 = null;
        org.joda.time.Instant instant30 = new org.joda.time.Instant(obj29);
        org.joda.time.DateTimeZone dateTimeZone31 = instant30.getZone();
        java.lang.String str32 = dateTimeZone31.toString();
        java.lang.String str34 = dateTimeZone31.getName((long) 10);
        java.lang.String str36 = dateTimeZone31.getName((long) 8);
        int int38 = dateTimeZone31.getOffsetFromLocal((long) (short) -1);
        org.joda.time.DateTime dateTime39 = dateTime26.withZone(dateTimeZone31);
        java.lang.String str40 = dateTimeZone31.getID();
        java.lang.String str41 = dateTimeZone31.toString();
        org.joda.time.DateTime dateTime42 = dateTime2.withZone(dateTimeZone31);
        org.joda.time.DateTime dateTime44 = dateTime42.plusMinutes((int) (byte) 100);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0835");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTimeField dateTimeField2 = dateTimeFieldType0.getField(chronology1);
        long long5 = dateTimeField2.add(0L, (long) (short) 1);
        boolean boolean7 = dateTimeField2.isLeap(10L);
        int int8 = dateTimeField2.getMinimumValue();
        long long10 = dateTimeField2.roundHalfEven((long) (byte) 1);
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTime.Property property14 = dateTime13.era();
        org.joda.time.DateTime dateTime15 = dateTime13.withTimeAtStartOfDay();
        org.joda.time.LocalTime localTime16 = dateTime15.toLocalTime();
        java.util.Locale locale18 = java.util.Locale.UK;
        java.lang.String str19 = locale18.getDisplayScript();
        java.lang.String str20 = dateTimeField2.getAsText((org.joda.time.ReadablePartial) localTime16, 0, locale18);
        org.joda.time.Instant instant22 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant24 = instant22.minus(100L);
        java.lang.String str25 = instant24.toString();
        org.joda.time.Duration duration28 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period29 = duration28.toPeriod();
        org.joda.time.Duration duration31 = duration28.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = duration28.toPeriodTo(readableInstant32);
        org.joda.time.Duration duration35 = duration28.withMillis((long) (short) 0);
        org.joda.time.Instant instant36 = instant24.plus((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.DateTime dateTime38 = new org.joda.time.DateTime(chronology37);
        org.joda.time.DateTime.Property property39 = dateTime38.yearOfEra();
        org.joda.time.Interval interval40 = property39.toInterval();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.DateTime dateTime42 = new org.joda.time.DateTime(chronology41);
        org.joda.time.DateTime.Property property43 = dateTime42.yearOfEra();
        org.joda.time.Interval interval44 = property43.toInterval();
        boolean boolean45 = interval40.contains((org.joda.time.ReadableInterval) interval44);
        org.joda.time.Chronology chronology46 = interval44.getChronology();
        org.joda.time.DurationField durationField47 = chronology46.weeks();
        org.joda.time.DateTimeField dateTimeField48 = chronology46.minuteOfHour();
        org.joda.time.Instant instant50 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime51 = instant50.toDateTime();
        org.joda.time.TimeOfDay timeOfDay52 = dateTime51.toTimeOfDay();
        int int53 = dateTimeField48.getMinimumValue((org.joda.time.ReadablePartial) timeOfDay52);
        java.lang.String str54 = dateTimeField48.toString();
        int int55 = instant24.get(dateTimeField48);
        org.joda.time.Instant instant57 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime58 = instant57.toDateTime();
        org.joda.time.TimeOfDay timeOfDay59 = dateTime58.toTimeOfDay();
        int int60 = dateTimeField48.getMinimumValue((org.joda.time.ReadablePartial) timeOfDay59);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadablePartial) localTime16, (org.joda.time.ReadablePartial) timeOfDay59);
        org.joda.time.Instant instant63 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime64 = instant63.toDateTime();
        org.joda.time.TimeOfDay timeOfDay65 = dateTime64.toTimeOfDay();
        org.joda.time.Instant instant67 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime68 = instant67.toDateTime();
        org.joda.time.DateTime.Property property69 = dateTime68.era();
        org.joda.time.DateTime dateTime70 = property69.withMinimumValue();
        int int71 = property69.getMaximumValueOverall();
        java.util.Locale locale72 = java.util.Locale.ENGLISH;
        java.lang.String str73 = locale72.getScript();
        java.lang.String str74 = locale72.getDisplayCountry();
        int int75 = property69.getMaximumShortTextLength(locale72);
        org.joda.time.DateTime dateTime76 = property69.withMaximumValue();
        org.joda.time.LocalTime localTime77 = dateTime76.toLocalTime();
        org.joda.time.Instant instant79 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime80 = instant79.toDateTime();
        boolean boolean82 = dateTime80.isEqual(10L);
        org.joda.time.DateTime dateTime84 = dateTime80.withWeekOfWeekyear(8);
        org.joda.time.DateTime dateTime86 = dateTime80.plusDays(100);
        org.joda.time.LocalTime localTime87 = dateTime80.toLocalTime();
        org.joda.time.Period period88 = new org.joda.time.Period((org.joda.time.ReadablePartial) localTime77, (org.joda.time.ReadablePartial) localTime87);
        org.joda.time.Period period89 = org.joda.time.Period.fieldDifference((org.joda.time.ReadablePartial) timeOfDay65, (org.joda.time.ReadablePartial) localTime87);
        org.joda.time.Days days90 = org.joda.time.Days.daysBetween((org.joda.time.ReadablePartial) timeOfDay59, (org.joda.time.ReadablePartial) localTime87);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime13", (instant12.compareTo(dateTime13) == 0) == instant12.equals(dateTime13));
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0836");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.DateTime dateTime6 = dateTime2.withWeekOfWeekyear(8);
        org.joda.time.DateTime dateTime8 = dateTime2.plusDays(100);
        org.joda.time.DateTime dateTime10 = dateTime2.withMonthOfYear((int) (byte) 10);
        org.joda.time.Duration duration13 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period14 = duration13.toPeriod();
        org.joda.time.Duration duration16 = duration13.plus((long) (byte) 0);
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime19 = instant18.toDateTime();
        boolean boolean21 = dateTime19.isEqual(10L);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType24, chronology25);
        org.joda.time.PeriodType periodType27 = periodType24.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration16, (org.joda.time.ReadableInstant) dateTime19, periodType27);
        org.joda.time.DateTime.Property property29 = dateTime19.yearOfEra();
        org.joda.time.DateTime.Property property30 = dateTime19.dayOfYear();
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime33 = instant32.toDateTime();
        org.joda.time.DateTime.Property property34 = dateTime33.era();
        org.joda.time.DateTime dateTime35 = property34.withMinimumValue();
        int int36 = property34.getMaximumValueOverall();
        java.util.Locale locale37 = java.util.Locale.ENGLISH;
        java.lang.String str38 = locale37.getScript();
        java.lang.String str39 = locale37.getDisplayCountry();
        int int40 = property34.getMaximumShortTextLength(locale37);
        org.joda.time.DateTime dateTime41 = property34.withMaximumValue();
        org.joda.time.LocalTime localTime42 = dateTime41.toLocalTime();
        org.joda.time.DateTimeZone dateTimeZone43 = dateTime41.getZone();
        int int45 = dateTimeZone43.getOffsetFromLocal(0L);
        org.joda.time.DateTime dateTime46 = new org.joda.time.DateTime(dateTimeZone43);
        org.joda.time.DateTime dateTime47 = dateTime19.withZone(dateTimeZone43);
        org.joda.time.PeriodType periodType48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime19, periodType48);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0837");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZone(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean11 = dateTime7.isSupported(dateTimeFieldType10);
        org.joda.time.DateTime.Property property12 = dateTime2.property(dateTimeFieldType10);
        org.joda.time.DateTime dateTime13 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.DateTime dateTime15 = dateTime13.minusSeconds((int) '#');
        long long16 = dateTime15.getMillis();
        org.joda.time.DateTime dateTime18 = dateTime15.withMillis(0L);
        org.joda.time.Instant instant20 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant22 = instant20.minus(100L);
        org.joda.time.Instant instant24 = instant22.plus((long) 100);
        boolean boolean25 = instant22.isBeforeNow();
        org.joda.time.DateTime dateTime26 = instant22.toDateTimeISO();
        org.joda.time.Instant instant27 = instant22.toInstant();
        org.joda.time.Instant instant29 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant31 = instant29.minus(100L);
        java.lang.String str32 = instant31.toString();
        org.joda.time.Duration duration35 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period36 = duration35.toPeriod();
        org.joda.time.Duration duration38 = duration35.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = duration35.toPeriodTo(readableInstant39);
        org.joda.time.Duration duration42 = duration35.withMillis((long) (short) 0);
        org.joda.time.Instant instant43 = instant31.plus((org.joda.time.ReadableDuration) duration35);
        org.joda.time.DateTimeFieldType dateTimeFieldType44 = org.joda.time.DateTimeFieldType.yearOfEra();
        boolean boolean45 = instant31.isSupported(dateTimeFieldType44);
        boolean boolean46 = instant22.isSupported(dateTimeFieldType44);
        org.joda.time.DateTime dateTime48 = dateTime18.withField(dateTimeFieldType44, 432);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0838");
        org.joda.time.Duration duration3 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds4 = duration3.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration5 = null;
        boolean boolean6 = duration3.isEqual(readableDuration5);
        org.joda.time.Duration duration8 = duration3.minus((long) 1);
        org.joda.time.Duration duration10 = duration8.minus((long) '4');
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTime.Property property14 = dateTime13.era();
        org.joda.time.Duration duration17 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration20 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period21 = duration20.toPeriod();
        org.joda.time.Duration duration23 = duration20.plus((long) (byte) 0);
        org.joda.time.Instant instant25 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime26 = instant25.toDateTime();
        boolean boolean28 = dateTime26.isEqual(10L);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType31, chronology32);
        org.joda.time.PeriodType periodType34 = periodType31.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, (org.joda.time.ReadableInstant) dateTime26, periodType34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime13, (org.joda.time.ReadableDuration) duration17, periodType34);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, (org.joda.time.ReadableInstant) dateTime13, periodType37);
        org.joda.time.Duration duration40 = duration8.minus((long) 7);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int51 = mutablePeriod50.getDays();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.DateTime dateTime55 = new org.joda.time.DateTime(chronology54);
        org.joda.time.DateTime.Property property56 = dateTime55.yearOfEra();
        org.joda.time.Interval interval57 = property56.toInterval();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.DateTime dateTime59 = new org.joda.time.DateTime(chronology58);
        org.joda.time.DateTime.Property property60 = dateTime59.yearOfEra();
        org.joda.time.Interval interval61 = property60.toInterval();
        boolean boolean62 = interval57.contains((org.joda.time.ReadableInterval) interval61);
        org.joda.time.Chronology chronology63 = interval61.getChronology();
        mutablePeriod50.setPeriod((long) 'u', (long) 1969, chronology63);
        org.joda.time.Period period65 = new org.joda.time.Period((long) (byte) 100, chronology63);
        org.joda.time.Period period66 = duration40.toPeriod(chronology63);
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod(10L, chronology63);
        mutablePeriod67.addWeeks((int) 'u');
        mutablePeriod67.addMinutes((int) ' ');
        mutablePeriod67.clear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime13", (instant12.compareTo(dateTime13) == 0) == instant12.equals(dateTime13));
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0839");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(100, (-100), 2022, 9, 1439, (-1), (int) (short) 1, 6);
        mutablePeriod8.setYears(1970);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.DateTime dateTime12 = new org.joda.time.DateTime(chronology11);
        org.joda.time.DateTime.Property property13 = dateTime12.yearOfEra();
        org.joda.time.Interval interval14 = property13.toInterval();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.DateTime dateTime16 = new org.joda.time.DateTime(chronology15);
        org.joda.time.DateTime.Property property17 = dateTime16.yearOfEra();
        org.joda.time.Interval interval18 = property17.toInterval();
        boolean boolean19 = interval14.contains((org.joda.time.ReadableInterval) interval18);
        java.lang.Object obj20 = null;
        org.joda.time.Instant instant21 = new org.joda.time.Instant(obj20);
        org.joda.time.DateTimeZone dateTimeZone22 = instant21.getZone();
        java.lang.String str23 = dateTimeZone22.toString();
        org.joda.time.DateTime dateTime24 = new org.joda.time.DateTime(dateTimeZone22);
        boolean boolean25 = interval14.contains((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.Instant instant27 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime28 = instant27.toDateTime();
        org.joda.time.DateTime.Property property29 = dateTime28.era();
        boolean boolean30 = interval14.contains((org.joda.time.ReadableInstant) dateTime28);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval14);
        org.joda.time.DurationFieldType durationFieldType32 = seconds31.getFieldType();
        mutablePeriod8.set(durationFieldType32, (int) 'u');
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime16 and instant21", (dateTime16.compareTo(instant21) == 0) == dateTime16.equals(instant21));
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0840");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.TimeOfDay timeOfDay6 = dateTime2.toTimeOfDay();
        org.joda.time.DateTime.Property property7 = dateTime2.millisOfSecond();
        int int8 = property7.getMaximumValueOverall();
        org.joda.time.DurationField durationField9 = property7.getLeapDurationField();
        org.joda.time.DateTime dateTime10 = property7.roundCeilingCopy();
        int int11 = dateTime10.getDayOfYear();
        org.joda.time.DateTime dateTime13 = dateTime10.plusMillis((-59));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime10", (instant1.compareTo(dateTime10) == 0) == instant1.equals(dateTime10));
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0841");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.DateTime dateTime7 = dateTime2.withMillis((long) '4');
        org.joda.time.Instant instant9 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime10 = instant9.toDateTime();
        boolean boolean12 = dateTime10.isEqual(10L);
        org.joda.time.DateTime dateTime14 = dateTime10.withWeekOfWeekyear(8);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime7, (org.joda.time.ReadableInstant) dateTime14);
        org.joda.time.Instant instant17 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime18 = instant17.toDateTime();
        org.joda.time.DateTime.Property property19 = dateTime18.era();
        org.joda.time.DateTime dateTime20 = dateTime18.withTimeAtStartOfDay();
        org.joda.time.Duration duration23 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, readableInstant24, periodType25);
        mutablePeriod26.setMonths((int) '4');
        org.joda.time.DateTime dateTime29 = dateTime18.plus((org.joda.time.ReadablePeriod) mutablePeriod26);
        org.joda.time.DateTime dateTime31 = dateTime18.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property32 = dateTime31.monthOfYear();
        org.joda.time.DateTime.Property property33 = dateTime31.weekyear();
        org.joda.time.DateTime dateTime34 = dateTime31.toDateTime();
        org.joda.time.DateTime dateTime36 = dateTime31.plusHours((int) 'u');
        org.joda.time.Instant instant38 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime39 = instant38.toDateTime();
        org.joda.time.DateTime.Property property40 = dateTime39.era();
        org.joda.time.ReadablePartial readablePartial41 = null;
        org.joda.time.DateTime dateTime42 = dateTime39.withFields(readablePartial41);
        org.joda.time.DateTime dateTime44 = dateTime39.withYearOfEra(292278993);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime36, (org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.Minutes minutes46 = minutes15.minus(minutes45);
        org.joda.time.Duration duration49 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period50 = duration49.toPeriod();
        org.joda.time.Duration duration52 = duration49.plus((long) (byte) 0);
        org.joda.time.Instant instant54 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime55 = instant54.toDateTime();
        boolean boolean57 = dateTime55.isEqual(10L);
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType60, chronology61);
        org.joda.time.PeriodType periodType63 = periodType60.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration52, (org.joda.time.ReadableInstant) dateTime55, periodType63);
        org.joda.time.Instant instant66 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime67 = instant66.toDateTime();
        org.joda.time.DateTime.Property property68 = dateTime67.era();
        org.joda.time.DateTime dateTime69 = dateTime67.withTimeAtStartOfDay();
        org.joda.time.Instant instant70 = dateTime67.toInstant();
        org.joda.time.DateTime dateTime72 = dateTime67.withMillis((long) '4');
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime55, (org.joda.time.ReadableInstant) dateTime67);
        org.joda.time.Instant instant75 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime76 = instant75.toDateTime();
        org.joda.time.TimeOfDay timeOfDay77 = dateTime76.toTimeOfDay();
        org.joda.time.DateTime dateTime78 = dateTime67.withFields((org.joda.time.ReadablePartial) timeOfDay77);
        org.joda.time.Instant instant80 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime81 = instant80.toDateTime();
        org.joda.time.DateTime.Property property82 = dateTime81.era();
        org.joda.time.DateTime dateTime83 = property82.withMinimumValue();
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime78, (org.joda.time.ReadableInstant) dateTime83);
        mutablePeriod84.addDays(10);
        org.joda.time.DurationFieldType durationFieldType88 = mutablePeriod84.getFieldType(0);
        int int89 = minutes46.get(durationFieldType88);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0842");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        java.lang.Object obj14 = null;
        org.joda.time.Instant instant15 = new org.joda.time.Instant(obj14);
        org.joda.time.DateTimeZone dateTimeZone16 = instant15.getZone();
        java.lang.String str17 = dateTimeZone16.toString();
        int int19 = dateTimeZone16.getOffset(1L);
        boolean boolean21 = dateTimeZone16.isStandardOffset(0L);
        org.joda.time.DateTime dateTime22 = dateTime2.withZoneRetainFields(dateTimeZone16);
        org.joda.time.DateTime dateTime24 = dateTime22.plusYears(1969);
        org.joda.time.DateTime dateTime26 = dateTime24.minusWeeks(1439);
        org.joda.time.DateTime dateTime28 = dateTime26.minusYears(0);
        org.joda.time.Duration duration31 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration31.toPeriod(chronology32);
        java.lang.String str34 = duration31.toString();
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime37 = instant36.toDateTime();
        org.joda.time.DateTime.Property property38 = dateTime37.era();
        org.joda.time.DateTime dateTime39 = dateTime37.withTimeAtStartOfDay();
        org.joda.time.Duration duration42 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.PeriodType periodType44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration42, readableInstant43, periodType44);
        mutablePeriod45.setMonths((int) '4');
        org.joda.time.DateTime dateTime48 = dateTime37.plus((org.joda.time.ReadablePeriod) mutablePeriod45);
        org.joda.time.DateTime dateTime50 = dateTime37.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property51 = dateTime50.monthOfYear();
        org.joda.time.DateTime.Property property52 = dateTime50.weekyear();
        org.joda.time.DateTime dateTime53 = dateTime50.toDateTime();
        org.joda.time.DateTime dateTime55 = dateTime50.plusHours((int) 'u');
        org.joda.time.Instant instant57 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime58 = instant57.toDateTime();
        org.joda.time.DateTime.Property property59 = dateTime58.era();
        org.joda.time.ReadablePartial readablePartial60 = null;
        org.joda.time.DateTime dateTime61 = dateTime58.withFields(readablePartial60);
        org.joda.time.DateTime dateTime63 = dateTime58.withYearOfEra(292278993);
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime55, (org.joda.time.ReadableInstant) dateTime58);
        int int65 = dateTime55.getMonthOfYear();
        org.joda.time.DateTime dateTime66 = dateTime55.withTimeAtStartOfDay();
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.yearWeekDayTime();
        org.joda.time.Period period68 = duration31.toPeriodTo((org.joda.time.ReadableInstant) dateTime55, periodType67);
        boolean boolean69 = dateTime26.equals((java.lang.Object) period68);
        org.joda.time.Duration duration72 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.PeriodType periodType74 = null;
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration72, readableInstant73, periodType74);
        org.joda.time.Duration duration78 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.PeriodType periodType80 = null;
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration78, readableInstant79, periodType80);
        boolean boolean82 = duration72.isLongerThan((org.joda.time.ReadableDuration) duration78);
        org.joda.time.Duration duration85 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period86 = duration85.toPeriod();
        org.joda.time.Duration duration88 = duration85.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant89 = null;
        org.joda.time.Period period90 = duration85.toPeriodTo(readableInstant89);
        org.joda.time.Duration duration92 = duration85.minus(43200000L);
        org.joda.time.Duration duration94 = duration78.withDurationAdded((org.joda.time.ReadableDuration) duration85, (int) ' ');
        org.joda.time.Duration duration95 = duration85.toDuration();
        org.joda.time.Minutes minutes96 = duration85.toStandardMinutes();
        org.joda.time.Period period97 = period68.minus((org.joda.time.ReadablePeriod) minutes96);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0843");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        java.lang.Object obj14 = null;
        org.joda.time.Instant instant15 = new org.joda.time.Instant(obj14);
        org.joda.time.DateTimeZone dateTimeZone16 = instant15.getZone();
        java.lang.String str17 = dateTimeZone16.toString();
        int int19 = dateTimeZone16.getOffset(1L);
        boolean boolean21 = dateTimeZone16.isStandardOffset(0L);
        org.joda.time.DateTime dateTime22 = dateTime2.withZoneRetainFields(dateTimeZone16);
        org.joda.time.DateTime dateTime24 = dateTime22.plusYears(1969);
        org.joda.time.DateTime dateTime26 = dateTime24.minusWeeks(1439);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType28 = periodType27.withMonthsRemoved();
        org.joda.time.Duration duration31 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period32 = duration31.toPeriod();
        org.joda.time.Duration duration34 = duration31.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = duration31.toPeriodTo(readableInstant35);
        org.joda.time.Weeks weeks37 = period36.toStandardWeeks();
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = period36.get(durationFieldType38);
        int int40 = period36.getWeeks();
        org.joda.time.Duration duration41 = period36.toStandardDuration();
        boolean boolean42 = periodType28.equals((java.lang.Object) duration41);
        long long43 = duration41.getMillis();
        org.joda.time.DateTime dateTime44 = dateTime24.minus((org.joda.time.ReadableDuration) duration41);
        java.util.GregorianCalendar gregorianCalendar45 = dateTime24.toGregorianCalendar();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0844");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZone(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean11 = dateTime7.isSupported(dateTimeFieldType10);
        org.joda.time.DateTime.Property property12 = dateTime2.property(dateTimeFieldType10);
        org.joda.time.DateTime dateTime13 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds17 = duration16.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration18 = null;
        boolean boolean19 = duration16.isEqual(readableDuration18);
        org.joda.time.Duration duration21 = duration16.minus((long) 1);
        org.joda.time.Duration duration23 = duration21.minus((long) '4');
        org.joda.time.Duration duration24 = duration21.toDuration();
        org.joda.time.Period period26 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period28 = period26.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration30 = period28.toDurationTo(readableInstant29);
        org.joda.time.Duration duration33 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds34 = duration33.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration35 = null;
        boolean boolean36 = duration33.isEqual(readableDuration35);
        org.joda.time.Duration duration38 = duration33.minus((long) 1);
        org.joda.time.Duration duration40 = duration38.minus((long) '4');
        org.joda.time.Instant instant42 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime43 = instant42.toDateTime();
        org.joda.time.DateTime.Property property44 = dateTime43.era();
        org.joda.time.Duration duration47 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration50 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period51 = duration50.toPeriod();
        org.joda.time.Duration duration53 = duration50.plus((long) (byte) 0);
        org.joda.time.Instant instant55 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime56 = instant55.toDateTime();
        boolean boolean58 = dateTime56.isEqual(10L);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType61, chronology62);
        org.joda.time.PeriodType periodType64 = periodType61.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration53, (org.joda.time.ReadableInstant) dateTime56, periodType64);
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime43, (org.joda.time.ReadableDuration) duration47, periodType64);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, (org.joda.time.ReadableInstant) dateTime43, periodType67);
        boolean boolean69 = duration30.isEqual((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.DateTime dateTime71 = new org.joda.time.DateTime(chronology70);
        org.joda.time.DateTime.Property property72 = dateTime71.yearOfEra();
        org.joda.time.Interval interval73 = property72.toInterval();
        java.util.Locale locale74 = java.util.Locale.KOREAN;
        java.lang.String str75 = property72.getAsText(locale74);
        boolean boolean76 = duration30.equals((java.lang.Object) property72);
        boolean boolean77 = duration24.isEqual((org.joda.time.ReadableDuration) duration30);
        org.joda.time.DateTime dateTime79 = dateTime13.withDurationAdded((org.joda.time.ReadableDuration) duration24, 6);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0845");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration4 = null;
        boolean boolean5 = duration2.isEqual(readableDuration4);
        org.joda.time.Duration duration7 = duration2.minus((long) 1);
        org.joda.time.Duration duration9 = duration7.minus((long) '4');
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Duration duration22 = duration19.plus((long) (byte) 0);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType30, chronology31);
        org.joda.time.PeriodType periodType33 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, (org.joda.time.ReadableInstant) dateTime25, periodType33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime12, (org.joda.time.ReadableDuration) duration16, periodType33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime12, periodType36);
        org.joda.time.Duration duration39 = duration7.minus((long) 7);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int50 = mutablePeriod49.getDays();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.DateTime dateTime54 = new org.joda.time.DateTime(chronology53);
        org.joda.time.DateTime.Property property55 = dateTime54.yearOfEra();
        org.joda.time.Interval interval56 = property55.toInterval();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.DateTime dateTime58 = new org.joda.time.DateTime(chronology57);
        org.joda.time.DateTime.Property property59 = dateTime58.yearOfEra();
        org.joda.time.Interval interval60 = property59.toInterval();
        boolean boolean61 = interval56.contains((org.joda.time.ReadableInterval) interval60);
        org.joda.time.Chronology chronology62 = interval60.getChronology();
        mutablePeriod49.setPeriod((long) 'u', (long) 1969, chronology62);
        org.joda.time.Period period64 = new org.joda.time.Period((long) (byte) 100, chronology62);
        org.joda.time.Period period65 = duration39.toPeriod(chronology62);
        org.joda.time.DateTimeField dateTimeField66 = chronology62.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField67 = chronology62.monthOfYear();
        org.joda.time.DateTimeField dateTimeField68 = chronology62.hourOfHalfday();
        int int70 = dateTimeField68.getMaximumValue((-1298798110310400001L));
        java.util.Locale locale71 = java.util.Locale.JAPAN;
        java.util.Locale locale75 = new java.util.Locale("1969-12-31T23:59:59.899Z", "P0W", "hourOfHalfday");
        java.lang.String str76 = locale75.toLanguageTag();
        java.lang.String str77 = locale71.getDisplayLanguage(locale75);
        int int78 = dateTimeField68.getMaximumShortTextLength(locale71);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime12", (instant11.compareTo(dateTime12) == 0) == instant11.equals(dateTime12));
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0846");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period3 = period1.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration5 = period3.toDurationTo(readableInstant4);
        org.joda.time.Duration duration8 = duration5.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = duration8.toPeriodFrom(readableInstant9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.ONE;
        org.joda.time.MutablePeriod mutablePeriod12 = seconds11.toMutablePeriod();
        org.joda.time.Duration duration13 = seconds11.toStandardDuration();
        org.joda.time.Instant instant15 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime16 = instant15.toDateTime();
        org.joda.time.DateTime.Property property17 = dateTime16.era();
        org.joda.time.DateTime dateTime18 = dateTime16.withTimeAtStartOfDay();
        org.joda.time.Instant instant19 = dateTime16.toInstant();
        org.joda.time.DateMidnight dateMidnight20 = dateTime16.toDateMidnight();
        int int21 = dateMidnight20.getDayOfYear();
        boolean boolean22 = dateMidnight20.isAfterNow();
        org.joda.time.Instant instant23 = dateMidnight20.toInstant();
        org.joda.time.MutableDateTime mutableDateTime24 = instant23.toMutableDateTime();
        org.joda.time.Interval interval25 = duration13.toIntervalTo((org.joda.time.ReadableInstant) mutableDateTime24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration13.toIntervalFrom(readableInstant26);
        boolean boolean28 = duration8.isEqual((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableDuration readableDuration29 = null;
        boolean boolean30 = duration8.isEqual(readableDuration29);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant15 and dateTime16", (instant15.compareTo(dateTime16) == 0) == instant15.equals(dateTime16));
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0847");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.DateMidnight dateMidnight6 = dateTime2.toDateMidnight();
        int int7 = dateTime2.getEra();
        org.joda.time.DateTime dateTime9 = dateTime2.withWeekyear(0);
        org.joda.time.DateTime dateTime10 = dateTime9.withEarlierOffsetAtOverlap();
        org.joda.time.DateTime dateTime12 = dateTime10.plusMinutes((int) ' ');
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0848");
        org.joda.time.DurationFieldType durationFieldType0 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant2 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime3 = instant2.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone4 = null;
        org.joda.time.DateTime dateTime5 = dateTime3.withZoneRetainFields(dateTimeZone4);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        org.joda.time.DateTime.Property property9 = dateTime8.era();
        org.joda.time.DateTime dateTime10 = dateTime8.withTimeAtStartOfDay();
        org.joda.time.Duration duration13 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration13, readableInstant14, periodType15);
        mutablePeriod16.setMonths((int) '4');
        org.joda.time.DateTime dateTime19 = dateTime8.plus((org.joda.time.ReadablePeriod) mutablePeriod16);
        org.joda.time.DateTime dateTime21 = dateTime8.minusWeeks((int) (byte) 1);
        int int22 = dateTime5.compareTo((org.joda.time.ReadableInstant) dateTime8);
        org.joda.time.DateTime.Property property23 = dateTime8.minuteOfHour();
        org.joda.time.DateTime dateTime25 = dateTime8.withYear(1969);
        org.joda.time.Chronology chronology26 = dateTime25.getChronology();
        org.joda.time.DurationField durationField27 = durationFieldType0.getField(chronology26);
        int int29 = durationField27.getValue((long) 2);
        long long32 = durationField27.add((long) 70, 12);
        java.lang.String str33 = durationField27.getName();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime3", (instant2.compareTo(dateTime3) == 0) == instant2.equals(dateTime3));
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0849");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.DateTime dateTime26 = dateTime24.withSecondOfMinute(1);
        int int27 = dateTime26.getEra();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0850");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.Interval interval7 = property6.toInterval();
        boolean boolean8 = interval3.contains((org.joda.time.ReadableInterval) interval7);
        java.lang.String str9 = interval3.toString();
        long long10 = interval3.getEndMillis();
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone14 = null;
        org.joda.time.DateTime dateTime15 = dateTime13.withZoneRetainFields(dateTimeZone14);
        org.joda.time.Instant instant17 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime18 = instant17.toDateTime();
        org.joda.time.DateTime.Property property19 = dateTime18.era();
        org.joda.time.DateTime dateTime20 = dateTime18.withTimeAtStartOfDay();
        org.joda.time.Duration duration23 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, readableInstant24, periodType25);
        mutablePeriod26.setMonths((int) '4');
        org.joda.time.DateTime dateTime29 = dateTime18.plus((org.joda.time.ReadablePeriod) mutablePeriod26);
        org.joda.time.DateTime dateTime31 = dateTime18.minusWeeks((int) (byte) 1);
        int int32 = dateTime15.compareTo((org.joda.time.ReadableInstant) dateTime18);
        org.joda.time.DateTime.Property property33 = dateTime18.minuteOfHour();
        org.joda.time.DateTime dateTime35 = dateTime18.withYear(1969);
        org.joda.time.Chronology chronology36 = dateTime35.getChronology();
        boolean boolean37 = interval3.isBefore((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Duration duration40 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period41 = duration40.toPeriod();
        org.joda.time.Duration duration43 = duration40.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = duration40.toPeriodTo(readableInstant44);
        org.joda.time.Instant instant47 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant49 = instant47.minus(100L);
        java.lang.String str50 = instant49.toString();
        org.joda.time.Duration duration53 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period54 = duration53.toPeriod();
        org.joda.time.Duration duration56 = duration53.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = duration53.toPeriodTo(readableInstant57);
        org.joda.time.Duration duration61 = duration53.withDurationAdded((long) (short) -1, (int) (byte) 100);
        org.joda.time.PeriodType periodType64 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType64, chronology65);
        org.joda.time.PeriodType periodType67 = periodType64.withWeeksRemoved();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.Period period69 = duration61.toPeriod(periodType67, chronology68);
        org.joda.time.Period period70 = duration40.toPeriodFrom((org.joda.time.ReadableInstant) instant49, periodType67);
        org.joda.time.Period period71 = interval3.toPeriod(periodType67);
        int int72 = period71.getMillis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime13", (instant12.compareTo(dateTime13) == 0) == instant12.equals(dateTime13));
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0851");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTimeField dateTimeField2 = dateTimeFieldType0.getField(chronology1);
        long long5 = dateTimeField2.add(0L, (long) (short) 1);
        boolean boolean7 = dateTimeField2.isLeap(10L);
        int int8 = dateTimeField2.getMinimumValue();
        long long10 = dateTimeField2.roundHalfEven((long) (byte) 1);
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTime.Property property14 = dateTime13.era();
        org.joda.time.DateTime dateTime15 = dateTime13.withTimeAtStartOfDay();
        org.joda.time.LocalTime localTime16 = dateTime15.toLocalTime();
        java.util.Locale locale18 = java.util.Locale.UK;
        java.lang.String str19 = locale18.getDisplayScript();
        java.lang.String str20 = dateTimeField2.getAsText((org.joda.time.ReadablePartial) localTime16, 0, locale18);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.DateTime dateTime22 = new org.joda.time.DateTime(chronology21);
        org.joda.time.DateTime.Property property23 = dateTime22.yearOfEra();
        org.joda.time.Interval interval24 = property23.toInterval();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.DateTime dateTime26 = new org.joda.time.DateTime(chronology25);
        org.joda.time.DateTime.Property property27 = dateTime26.yearOfEra();
        org.joda.time.Interval interval28 = property27.toInterval();
        boolean boolean29 = interval24.contains((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Chronology chronology30 = interval28.getChronology();
        org.joda.time.DurationField durationField31 = chronology30.weeks();
        org.joda.time.DateTimeField dateTimeField32 = chronology30.minuteOfHour();
        org.joda.time.Instant instant34 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime35 = instant34.toDateTime();
        org.joda.time.TimeOfDay timeOfDay36 = dateTime35.toTimeOfDay();
        int int37 = dateTimeField32.getMinimumValue((org.joda.time.ReadablePartial) timeOfDay36);
        org.joda.time.Hours hours38 = org.joda.time.Hours.hoursBetween((org.joda.time.ReadablePartial) localTime16, (org.joda.time.ReadablePartial) timeOfDay36);
        org.joda.time.Instant instant40 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime41 = instant40.toDateTime();
        org.joda.time.DateTime.Property property42 = dateTime41.era();
        org.joda.time.DateTime dateTime43 = property42.withMinimumValue();
        int int44 = property42.getMaximumValueOverall();
        java.util.Locale locale45 = java.util.Locale.ENGLISH;
        java.lang.String str46 = locale45.getScript();
        java.lang.String str47 = locale45.getDisplayCountry();
        int int48 = property42.getMaximumShortTextLength(locale45);
        org.joda.time.DateTime dateTime49 = property42.withMaximumValue();
        org.joda.time.LocalTime localTime50 = dateTime49.toLocalTime();
        org.joda.time.Instant instant52 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant54 = instant52.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime55 = instant52.toMutableDateTimeISO();
        java.lang.Object obj56 = null;
        org.joda.time.Instant instant57 = new org.joda.time.Instant(obj56);
        boolean boolean58 = mutableDateTime55.isAfter((org.joda.time.ReadableInstant) instant57);
        boolean boolean59 = localTime50.equals((java.lang.Object) mutableDateTime55);
        org.joda.time.Chronology chronology60 = localTime50.getChronology();
        org.joda.time.Period period61 = org.joda.time.Period.fieldDifference((org.joda.time.ReadablePartial) localTime16, (org.joda.time.ReadablePartial) localTime50);
        org.joda.time.DateTimeFieldType dateTimeFieldType62 = null;
        boolean boolean63 = localTime50.isSupported(dateTimeFieldType62);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime13", (instant12.compareTo(dateTime13) == 0) == instant12.equals(dateTime13));
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0852");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.Duration duration5 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period6 = duration5.toPeriod();
        org.joda.time.Duration duration8 = duration5.plus((long) (byte) 0);
        org.joda.time.Minutes minutes9 = duration5.toStandardMinutes();
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType11 = periodType10.withMinutesRemoved();
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableInstant) instant1, (org.joda.time.ReadableDuration) duration5, periodType10);
        org.joda.time.Duration duration13 = duration5.toDuration();
        org.joda.time.Instant instant15 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime16 = instant15.toDateTime();
        org.joda.time.DateTime.Property property17 = dateTime16.era();
        org.joda.time.DateTime dateTime18 = dateTime16.withTimeAtStartOfDay();
        org.joda.time.Duration duration21 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration21, readableInstant22, periodType23);
        mutablePeriod24.setMonths((int) '4');
        org.joda.time.DateTime dateTime27 = dateTime16.plus((org.joda.time.ReadablePeriod) mutablePeriod24);
        java.lang.Object obj28 = null;
        org.joda.time.Instant instant29 = new org.joda.time.Instant(obj28);
        org.joda.time.DateTimeZone dateTimeZone30 = instant29.getZone();
        java.lang.String str31 = dateTimeZone30.toString();
        int int33 = dateTimeZone30.getOffset(1L);
        boolean boolean35 = dateTimeZone30.isStandardOffset(0L);
        org.joda.time.DateTime dateTime36 = dateTime16.withZoneRetainFields(dateTimeZone30);
        org.joda.time.DateTime dateTime38 = dateTime36.plusYears(1969);
        org.joda.time.DateTime dateTime40 = dateTime38.minusWeeks(1439);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType42 = periodType41.withMonthsRemoved();
        org.joda.time.Duration duration45 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period46 = duration45.toPeriod();
        org.joda.time.Duration duration48 = duration45.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = duration45.toPeriodTo(readableInstant49);
        org.joda.time.Weeks weeks51 = period50.toStandardWeeks();
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = period50.get(durationFieldType52);
        int int54 = period50.getWeeks();
        org.joda.time.Duration duration55 = period50.toStandardDuration();
        boolean boolean56 = periodType42.equals((java.lang.Object) duration55);
        long long57 = duration55.getMillis();
        org.joda.time.DateTime dateTime58 = dateTime38.minus((org.joda.time.ReadableDuration) duration55);
        java.lang.String str59 = duration55.toString();
        boolean boolean60 = duration13.isEqual((org.joda.time.ReadableDuration) duration55);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0853");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = property3.withMinimumValue();
        int int5 = property3.getMaximumValueOverall();
        java.util.Locale locale6 = java.util.Locale.ENGLISH;
        java.lang.String str7 = locale6.getScript();
        java.lang.String str8 = locale6.getDisplayCountry();
        int int9 = property3.getMaximumShortTextLength(locale6);
        org.joda.time.DateTime dateTime10 = property3.withMaximumValue();
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone14 = null;
        org.joda.time.DateTime dateTime15 = dateTime13.withZoneRetainFields(dateTimeZone14);
        org.joda.time.DateTime.Property property16 = dateTime15.weekOfWeekyear();
        org.joda.time.Duration duration19 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration19, readableInstant20, periodType21);
        org.joda.time.DateTime dateTime23 = dateTime15.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.DateTime dateTime25 = dateTime15.withYearOfEra(9);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.weeksBetween((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.Duration duration29 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period30 = duration29.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray31 = period30.getFieldTypes();
        int int32 = period30.getMinutes();
        org.joda.time.Weeks weeks33 = period30.toStandardWeeks();
        boolean boolean34 = weeks26.isGreaterThan(weeks33);
        org.joda.time.Weeks weeks36 = weeks26.plus(0);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) weeks36);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0854");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.DateTime dateTime7 = dateTime2.withMillis((long) '4');
        java.lang.Object obj8 = null;
        org.joda.time.Instant instant9 = new org.joda.time.Instant(obj8);
        org.joda.time.DateTimeZone dateTimeZone10 = instant9.getZone();
        java.lang.String str11 = dateTimeZone10.toString();
        int int13 = dateTimeZone10.getOffset(1L);
        boolean boolean15 = dateTimeZone10.isStandardOffset(0L);
        org.joda.time.DateTime dateTime16 = dateTime2.withZoneRetainFields(dateTimeZone10);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Duration duration22 = duration19.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = duration19.toPeriodTo(readableInstant23);
        org.joda.time.Duration duration26 = duration19.minus(43200000L);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime16, (org.joda.time.ReadableDuration) duration26);
        java.util.Locale locale30 = new java.util.Locale("PT3S", "ISOChronology[UTC]");
        java.util.Calendar calendar31 = dateTime16.toCalendar(locale30);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0855");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = duration2.toPeriodTo(readableInstant6);
        org.joda.time.Duration duration9 = duration2.withMillis((long) (short) 0);
        org.joda.time.Duration duration12 = duration2.withDurationAdded((long) 1, (int) ' ');
        org.joda.time.Instant instant14 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant14.toDateTime();
        boolean boolean17 = dateTime15.isEqual(10L);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, (org.joda.time.ReadableInstant) dateTime15, periodType18);
        long long20 = dateTime15.getMillis();
        org.joda.time.Instant instant21 = dateTime15.toInstant();
        org.joda.time.DateTime dateTime23 = dateTime15.plus(1645514015L);
        org.joda.time.Instant instant25 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime26 = instant25.toDateTime();
        org.joda.time.DateTime.Property property27 = dateTime26.secondOfMinute();
        boolean boolean28 = dateTime15.equals((java.lang.Object) property27);
        org.joda.time.DateTime dateTime30 = dateTime15.plusMillis(2);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant14 and dateTime26", (instant14.compareTo(dateTime26) == 0) == instant14.equals(dateTime26));
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0856");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 'u');
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Minutes minutes5 = duration4.toStandardMinutes();
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType9, chronology10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((long) (short) 0, periodType9, chronology12);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) (short) 10, periodType15);
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant19 = instant18.toInstant();
        org.joda.time.DateTime dateTime20 = instant19.toDateTimeISO();
        org.joda.time.Duration duration21 = period16.toDurationFrom((org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.Duration duration24 = new org.joda.time.Duration((-1L), (long) 23);
        org.joda.time.Period period26 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period28 = period26.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration30 = period28.toDurationTo(readableInstant29);
        org.joda.time.Duration duration33 = duration30.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = duration33.toPeriodFrom(readableInstant34);
        org.joda.time.Duration duration36 = duration24.minus((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration37 = duration21.plus((org.joda.time.ReadableDuration) duration24);
        mutablePeriod13.add((org.joda.time.ReadableDuration) duration24);
        boolean boolean39 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        long long40 = duration4.getMillis();
        boolean boolean41 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant18 and dateTime20", (instant18.compareTo(dateTime20) == 0) == instant18.equals(dateTime20));
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0857");
        org.joda.time.DurationFieldType durationFieldType0 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant2 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime3 = instant2.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone4 = null;
        org.joda.time.DateTime dateTime5 = dateTime3.withZoneRetainFields(dateTimeZone4);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        org.joda.time.DateTime.Property property9 = dateTime8.era();
        org.joda.time.DateTime dateTime10 = dateTime8.withTimeAtStartOfDay();
        org.joda.time.Duration duration13 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration13, readableInstant14, periodType15);
        mutablePeriod16.setMonths((int) '4');
        org.joda.time.DateTime dateTime19 = dateTime8.plus((org.joda.time.ReadablePeriod) mutablePeriod16);
        org.joda.time.DateTime dateTime21 = dateTime8.minusWeeks((int) (byte) 1);
        int int22 = dateTime5.compareTo((org.joda.time.ReadableInstant) dateTime8);
        org.joda.time.DateTime.Property property23 = dateTime8.minuteOfHour();
        org.joda.time.DateTime dateTime25 = dateTime8.withYear(1969);
        org.joda.time.Chronology chronology26 = dateTime25.getChronology();
        org.joda.time.DurationField durationField27 = durationFieldType0.getField(chronology26);
        int int29 = durationField27.getValue((long) 2);
        long long32 = durationField27.add((long) 70, 12);
        boolean boolean33 = durationField27.isPrecise();
        long long36 = durationField27.getMillis(1969, (long) 19);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime3", (instant2.compareTo(dateTime3) == 0) == instant2.equals(dateTime3));
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0858");
        org.joda.time.Duration duration3 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration3, readableInstant4, periodType5);
        org.joda.time.Days days7 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType8 = org.joda.time.DurationFieldType.minutes();
        int int9 = days7.get(durationFieldType8);
        mutablePeriod6.add(durationFieldType8, 8);
        org.joda.time.ReadablePeriod readablePeriod12 = null;
        mutablePeriod6.add(readablePeriod12);
        int int14 = mutablePeriod6.getMonths();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.DateTime dateTime16 = new org.joda.time.DateTime(chronology15);
        org.joda.time.DateTime.Property property17 = dateTime16.yearOfEra();
        org.joda.time.Interval interval18 = property17.toInterval();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.DateTime dateTime20 = new org.joda.time.DateTime(chronology19);
        org.joda.time.DateTime.Property property21 = dateTime20.yearOfEra();
        org.joda.time.Interval interval22 = property21.toInterval();
        boolean boolean23 = interval18.contains((org.joda.time.ReadableInterval) interval22);
        mutablePeriod6.setPeriod((org.joda.time.ReadableInterval) interval18);
        org.joda.time.DurationFieldType durationFieldType26 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant28 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime29 = instant28.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone30 = null;
        org.joda.time.DateTime dateTime31 = dateTime29.withZoneRetainFields(dateTimeZone30);
        org.joda.time.Instant instant33 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime34 = instant33.toDateTime();
        org.joda.time.DateTime.Property property35 = dateTime34.era();
        org.joda.time.DateTime dateTime36 = dateTime34.withTimeAtStartOfDay();
        org.joda.time.Duration duration39 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.PeriodType periodType41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration39, readableInstant40, periodType41);
        mutablePeriod42.setMonths((int) '4');
        org.joda.time.DateTime dateTime45 = dateTime34.plus((org.joda.time.ReadablePeriod) mutablePeriod42);
        org.joda.time.DateTime dateTime47 = dateTime34.minusWeeks((int) (byte) 1);
        int int48 = dateTime31.compareTo((org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.DateTime.Property property49 = dateTime34.minuteOfHour();
        org.joda.time.DateTime dateTime51 = dateTime34.withYear(1969);
        org.joda.time.Chronology chronology52 = dateTime51.getChronology();
        org.joda.time.DurationField durationField53 = durationFieldType26.getField(chronology52);
        mutablePeriod6.add((-43199999L), chronology52);
        org.joda.time.DurationField durationField55 = chronology52.millis();
        org.joda.time.DurationField durationField56 = chronology52.months();
        org.joda.time.DateTime dateTime57 = new org.joda.time.DateTime((long) 69, chronology52);
        org.joda.time.DateTimeField dateTimeField58 = chronology52.minuteOfDay();
        org.joda.time.DurationField durationField59 = chronology52.months();
        org.joda.time.DateTime dateTime60 = org.joda.time.DateTime.now(chronology52);
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType65, chronology66);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod(1L, (long) 10, periodType65, chronology68);
        int int70 = mutablePeriod69.getWeeks();
        mutablePeriod69.setYears(11);
        int[] intArray75 = chronology52.get((org.joda.time.ReadablePeriod) mutablePeriod69, (long) 433, (-26179201L));
        org.joda.time.DateTimeField dateTimeField76 = chronology52.yearOfEra();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant28 and dateTime29", (instant28.compareTo(dateTime29) == 0) == instant28.equals(dateTime29));
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0859");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(chronology2);
        org.joda.time.DateTime.Property property4 = dateTime3.yearOfEra();
        org.joda.time.Interval interval5 = property4.toInterval();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.DateTime dateTime7 = new org.joda.time.DateTime(chronology6);
        org.joda.time.DateTime.Property property8 = dateTime7.yearOfEra();
        org.joda.time.Interval interval9 = property8.toInterval();
        boolean boolean10 = interval5.contains((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Chronology chronology11 = interval9.getChronology();
        org.joda.time.DurationField durationField12 = chronology11.weeks();
        org.joda.time.DateTimeField dateTimeField13 = chronology11.minuteOfDay();
        org.joda.time.DurationField durationField14 = chronology11.days();
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTime.Property property18 = dateTime17.era();
        org.joda.time.DateTime dateTime19 = property18.withMinimumValue();
        int int20 = property18.getMaximumValueOverall();
        java.util.Locale locale21 = java.util.Locale.ENGLISH;
        java.lang.String str22 = locale21.getScript();
        java.lang.String str23 = locale21.getDisplayCountry();
        int int24 = property18.getMaximumShortTextLength(locale21);
        org.joda.time.DateTime dateTime25 = property18.withMaximumValue();
        org.joda.time.LocalTime localTime26 = dateTime25.toLocalTime();
        long long28 = chronology11.set((org.joda.time.ReadablePartial) localTime26, (long) (byte) 10);
        org.joda.time.DurationField durationField29 = chronology11.millis();
        org.joda.time.DateTimeField dateTimeField30 = chronology11.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField31 = chronology11.millisOfSecond();
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) (-2147483647), 8380845299L, chronology11);
        org.joda.time.DateTimeField dateTimeField33 = chronology11.dayOfYear();
        org.joda.time.DurationField durationField34 = chronology11.seconds();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant16 and dateTime17", (instant16.compareTo(dateTime17) == 0) == instant16.equals(dateTime17));
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0860");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.Interval interval7 = property6.toInterval();
        boolean boolean8 = interval3.contains((org.joda.time.ReadableInterval) interval7);
        org.joda.time.Chronology chronology9 = interval7.getChronology();
        org.joda.time.DurationField durationField10 = chronology9.weeks();
        org.joda.time.DateTime dateTime11 = new org.joda.time.DateTime(chronology9);
        org.joda.time.DurationField durationField12 = chronology9.centuries();
        org.joda.time.DurationField durationField13 = chronology9.days();
        org.joda.time.DateTimeField dateTimeField14 = chronology9.dayOfWeek();
        org.joda.time.DurationField durationField15 = chronology9.minutes();
        long long18 = durationField15.getDifferenceAsLong((-43199999L), (long) 365);
        org.joda.time.Duration duration21 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period22 = duration21.toPeriod();
        org.joda.time.Duration duration24 = duration21.plus((long) (byte) 0);
        org.joda.time.Instant instant26 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime27 = instant26.toDateTime();
        boolean boolean29 = dateTime27.isEqual(10L);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType32, chronology33);
        org.joda.time.PeriodType periodType35 = periodType32.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration24, (org.joda.time.ReadableInstant) dateTime27, periodType35);
        org.joda.time.Instant instant38 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime39 = instant38.toDateTime();
        org.joda.time.DateTime.Property property40 = dateTime39.era();
        org.joda.time.DateTime dateTime41 = dateTime39.withTimeAtStartOfDay();
        org.joda.time.Instant instant42 = dateTime39.toInstant();
        org.joda.time.DateTime dateTime44 = dateTime39.withMillis((long) '4');
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.Instant instant47 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime48 = instant47.toDateTime();
        org.joda.time.TimeOfDay timeOfDay49 = dateTime48.toTimeOfDay();
        org.joda.time.DateTime dateTime50 = dateTime39.withFields((org.joda.time.ReadablePartial) timeOfDay49);
        org.joda.time.DateTime.Property property51 = dateTime50.millisOfSecond();
        org.joda.time.DurationField durationField52 = property51.getDurationField();
        int int53 = durationField15.compareTo(durationField52);
        int int56 = durationField52.getDifference(141022L, (long) (byte) 10);
        long long59 = durationField52.subtract(1645514015L, 19);
        long long62 = durationField52.getValueAsLong(0L, 1645514135644L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant26 and dateTime27", (instant26.compareTo(dateTime27) == 0) == instant26.equals(dateTime27));
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0861");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.DateTime dateTime6 = dateTime2.withCenturyOfEra((int) (byte) 1);
        org.joda.time.Instant instant8 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime9 = instant8.toDateTime();
        org.joda.time.DateTime.Property property10 = dateTime9.era();
        org.joda.time.DateTime dateTime11 = dateTime9.withTimeAtStartOfDay();
        org.joda.time.Duration duration14 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration14, readableInstant15, periodType16);
        mutablePeriod17.setMonths((int) '4');
        org.joda.time.DateTime dateTime20 = dateTime9.plus((org.joda.time.ReadablePeriod) mutablePeriod17);
        java.lang.Object obj21 = null;
        org.joda.time.Instant instant22 = new org.joda.time.Instant(obj21);
        org.joda.time.DateTimeZone dateTimeZone23 = instant22.getZone();
        java.lang.String str24 = dateTimeZone23.toString();
        int int26 = dateTimeZone23.getOffset(1L);
        boolean boolean28 = dateTimeZone23.isStandardOffset(0L);
        org.joda.time.DateTime dateTime29 = dateTime9.withZoneRetainFields(dateTimeZone23);
        org.joda.time.Instant instant30 = dateTime29.toInstant();
        boolean boolean31 = dateTime6.isAfter((org.joda.time.ReadableInstant) instant30);
        org.joda.time.Instant instant33 = instant30.withMillis((long) 1969);
        org.joda.time.Duration duration36 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Minutes minutes37 = duration36.toStandardMinutes();
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType41, chronology42);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((long) (short) 0, periodType41, chronology44);
        org.joda.time.PeriodType periodType47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((long) (short) 10, periodType47);
        org.joda.time.Instant instant50 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant51 = instant50.toInstant();
        org.joda.time.DateTime dateTime52 = instant51.toDateTimeISO();
        org.joda.time.Duration duration53 = period48.toDurationFrom((org.joda.time.ReadableInstant) dateTime52);
        org.joda.time.Duration duration56 = new org.joda.time.Duration((-1L), (long) 23);
        org.joda.time.Period period58 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period60 = period58.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Duration duration62 = period60.toDurationTo(readableInstant61);
        org.joda.time.Duration duration65 = duration62.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Period period67 = duration65.toPeriodFrom(readableInstant66);
        org.joda.time.Duration duration68 = duration56.minus((org.joda.time.ReadableDuration) duration65);
        org.joda.time.Duration duration69 = duration53.plus((org.joda.time.ReadableDuration) duration56);
        mutablePeriod45.add((org.joda.time.ReadableDuration) duration56);
        boolean boolean71 = duration36.isLongerThan((org.joda.time.ReadableDuration) duration56);
        long long72 = duration36.getMillis();
        org.joda.time.Instant instant73 = instant30.minus((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Instant instant75 = instant30.minus((long) (-27349920));
        org.joda.time.Chronology chronology76 = instant30.getChronology();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0862");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.LocalDate localDate14 = dateTime2.toLocalDate();
        org.joda.time.DateTime dateTime16 = dateTime2.plusSeconds(248400000);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.DateTime dateTime18 = new org.joda.time.DateTime(chronology17);
        org.joda.time.DateTime.Property property19 = dateTime18.yearOfEra();
        org.joda.time.Instant instant20 = dateTime18.toInstant();
        boolean boolean21 = dateTime16.isAfter((org.joda.time.ReadableInstant) dateTime18);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0863");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.year();
        org.joda.time.DurationField durationField29 = chronology25.eras();
        org.joda.time.DateTimeZone dateTimeZone30 = chronology25.getZone();
        int int32 = dateTimeZone30.getStandardOffset(17536739580000L);
        java.lang.String str34 = dateTimeZone30.getNameKey((long) (byte) 100);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0864");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property16 = dateTime15.monthOfYear();
        org.joda.time.DateTime.Property property17 = dateTime15.weekyear();
        org.joda.time.DateTime dateTime18 = dateTime15.toDateTime();
        org.joda.time.DateTime dateTime20 = dateTime15.plusHours((int) 'u');
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.ONE;
        org.joda.time.MutablePeriod mutablePeriod22 = seconds21.toMutablePeriod();
        org.joda.time.Duration duration23 = seconds21.toStandardDuration();
        org.joda.time.Instant instant25 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime26 = instant25.toDateTime();
        org.joda.time.DateTime.Property property27 = dateTime26.era();
        org.joda.time.DateTime dateTime28 = dateTime26.withTimeAtStartOfDay();
        org.joda.time.Instant instant29 = dateTime26.toInstant();
        org.joda.time.DateMidnight dateMidnight30 = dateTime26.toDateMidnight();
        int int31 = dateMidnight30.getDayOfYear();
        boolean boolean32 = dateMidnight30.isAfterNow();
        org.joda.time.Instant instant33 = dateMidnight30.toInstant();
        org.joda.time.MutableDateTime mutableDateTime34 = instant33.toMutableDateTime();
        org.joda.time.Interval interval35 = duration23.toIntervalTo((org.joda.time.ReadableInstant) mutableDateTime34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Interval interval37 = duration23.toIntervalFrom(readableInstant36);
        long long38 = duration23.getStandardSeconds();
        org.joda.time.DateTime dateTime39 = dateTime20.plus((org.joda.time.ReadableDuration) duration23);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0865");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.Interval interval7 = property6.toInterval();
        boolean boolean8 = interval3.contains((org.joda.time.ReadableInterval) interval7);
        java.lang.String str9 = interval3.toString();
        long long10 = interval3.getEndMillis();
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone14 = null;
        org.joda.time.DateTime dateTime15 = dateTime13.withZoneRetainFields(dateTimeZone14);
        org.joda.time.Instant instant17 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime18 = instant17.toDateTime();
        org.joda.time.DateTime.Property property19 = dateTime18.era();
        org.joda.time.DateTime dateTime20 = dateTime18.withTimeAtStartOfDay();
        org.joda.time.Duration duration23 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, readableInstant24, periodType25);
        mutablePeriod26.setMonths((int) '4');
        org.joda.time.DateTime dateTime29 = dateTime18.plus((org.joda.time.ReadablePeriod) mutablePeriod26);
        org.joda.time.DateTime dateTime31 = dateTime18.minusWeeks((int) (byte) 1);
        int int32 = dateTime15.compareTo((org.joda.time.ReadableInstant) dateTime18);
        org.joda.time.DateTime.Property property33 = dateTime18.minuteOfHour();
        org.joda.time.DateTime dateTime35 = dateTime18.withYear(1969);
        org.joda.time.Chronology chronology36 = dateTime35.getChronology();
        boolean boolean37 = interval3.isBefore((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Days days38 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval3);
        int int39 = days38.size();
        org.joda.time.Days days40 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType41 = org.joda.time.DurationFieldType.minutes();
        int int42 = days40.get(durationFieldType41);
        org.joda.time.MutablePeriod mutablePeriod43 = days40.toMutablePeriod();
        org.joda.time.Days days45 = days40.multipliedBy((int) (byte) 1);
        int int46 = days45.size();
        org.joda.time.Days days47 = days38.minus(days45);
        org.joda.time.Weeks weeks48 = days38.toStandardWeeks();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime13", (instant12.compareTo(dateTime13) == 0) == instant12.equals(dateTime13));
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0866");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(chronology2);
        org.joda.time.Instant instant5 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime6 = instant5.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone7 = null;
        org.joda.time.DateTime dateTime8 = dateTime6.withZoneRetainFields(dateTimeZone7);
        org.joda.time.Instant instant10 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime11 = instant10.toDateTime();
        org.joda.time.DateTime.Property property12 = dateTime11.era();
        org.joda.time.DateTime dateTime13 = dateTime11.withTimeAtStartOfDay();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration16, readableInstant17, periodType18);
        mutablePeriod19.setMonths((int) '4');
        org.joda.time.DateTime dateTime22 = dateTime11.plus((org.joda.time.ReadablePeriod) mutablePeriod19);
        org.joda.time.DateTime dateTime24 = dateTime11.minusWeeks((int) (byte) 1);
        int int25 = dateTime8.compareTo((org.joda.time.ReadableInstant) dateTime11);
        org.joda.time.DateTime.Property property26 = dateTime11.minuteOfHour();
        org.joda.time.DateTime dateTime28 = dateTime11.withYear(1969);
        org.joda.time.Chronology chronology29 = dateTime28.getChronology();
        org.joda.time.DateTimeField dateTimeField30 = chronology29.dayOfMonth();
        org.joda.time.DurationField durationField31 = chronology29.minutes();
        org.joda.time.DateTime dateTime32 = dateTime3.toDateTime(chronology29);
        org.joda.time.DateTimeField dateTimeField33 = chronology29.hourOfHalfday();
        org.joda.time.Period period34 = new org.joda.time.Period(1L, periodType1, chronology29);
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime37 = instant36.toDateTime();
        org.joda.time.DateTime.Property property38 = dateTime37.era();
        org.joda.time.DateTime dateTime39 = dateTime37.withTimeAtStartOfDay();
        org.joda.time.Instant instant40 = dateTime37.toInstant();
        org.joda.time.TimeOfDay timeOfDay41 = dateTime37.toTimeOfDay();
        org.joda.time.Instant instant43 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime44 = instant43.toDateTime();
        org.joda.time.DateTime.Property property45 = dateTime44.era();
        org.joda.time.DateTime dateTime46 = dateTime44.withTimeAtStartOfDay();
        org.joda.time.Instant instant47 = dateTime44.toInstant();
        org.joda.time.DateMidnight dateMidnight48 = dateTime44.toDateMidnight();
        org.joda.time.DateTime dateTime51 = dateTime44.withDurationAdded(0L, (int) 'a');
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime37, (org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.DateTime.Property property53 = dateTime37.secondOfDay();
        org.joda.time.DateTime dateTime55 = property53.addToCopy((int) '4');
        org.joda.time.DateTime dateTime57 = property53.addToCopy((long) 100);
        boolean boolean58 = period34.equals((java.lang.Object) dateTime57);
        org.joda.time.Seconds seconds59 = period34.toStandardSeconds();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant5 and dateTime6", (instant5.compareTo(dateTime6) == 0) == instant5.equals(dateTime6));
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0867");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.ReadablePartial readablePartial4 = null;
        org.joda.time.DateTime dateTime5 = dateTime2.withFields(readablePartial4);
        org.joda.time.DateTime dateTime7 = dateTime2.withYearOfEra(292278993);
        org.joda.time.DateTime.Property property8 = dateTime7.year();
        int int9 = dateTime7.getYear();
        org.joda.time.DateTime dateTime11 = dateTime7.plusMinutes(9);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0868");
        java.lang.Object obj0 = null;
        org.joda.time.Instant instant1 = new org.joda.time.Instant(obj0);
        org.joda.time.DateTimeZone dateTimeZone2 = instant1.getZone();
        org.joda.time.Duration duration5 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period6 = duration5.toPeriod();
        org.joda.time.Duration duration8 = duration5.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = duration5.toPeriodTo(readableInstant9);
        org.joda.time.Duration duration12 = duration5.withMillis((long) (short) 0);
        org.joda.time.Duration duration15 = duration5.withDurationAdded((long) 1, (int) ' ');
        org.joda.time.Instant instant17 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime18 = instant17.toDateTime();
        boolean boolean20 = dateTime18.isEqual(10L);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, (org.joda.time.ReadableInstant) dateTime18, periodType21);
        org.joda.time.DateTime dateTime24 = dateTime18.minusSeconds((int) 'a');
        org.joda.time.DateTime dateTime26 = dateTime18.withMinuteOfHour(0);
        int int27 = dateTimeZone2.getOffset((org.joda.time.ReadableInstant) dateTime18);
        org.joda.time.DateTime dateTime29 = dateTime18.withMillisOfSecond((int) (byte) 100);
        java.lang.Object obj30 = null;
        org.joda.time.Instant instant31 = new org.joda.time.Instant(obj30);
        org.joda.time.DateTimeZone dateTimeZone32 = instant31.getZone();
        java.lang.String str33 = dateTimeZone32.toString();
        long long35 = dateTimeZone32.nextTransition((long) (short) 100);
        org.joda.time.DateTime dateTime36 = dateTime18.withZone(dateTimeZone32);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks39 = weeks37.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.weeks(1970);
        org.joda.time.Weeks weeks42 = weeks41.negated();
        boolean boolean43 = weeks39.isGreaterThan(weeks42);
        org.joda.time.Weeks weeks44 = weeks39.negated();
        org.joda.time.DateTime dateTime46 = dateTime36.withPeriodAdded((org.joda.time.ReadablePeriod) weeks39, 97);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant17 and dateTime18", (instant17.compareTo(dateTime18) == 0) == instant17.equals(dateTime18));
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0869");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime dateTime22 = dateTime4.toDateTimeISO();
        int int23 = dateTime22.getYearOfCentury();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime22", (instant1.compareTo(dateTime22) == 0) == instant1.equals(dateTime22));
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0870");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant3, periodType4);
        org.joda.time.Days days6 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType7 = org.joda.time.DurationFieldType.minutes();
        int int8 = days6.get(durationFieldType7);
        mutablePeriod5.add(durationFieldType7, 8);
        org.joda.time.ReadablePeriod readablePeriod11 = null;
        mutablePeriod5.add(readablePeriod11);
        int int13 = mutablePeriod5.getMillis();
        org.joda.time.Chronology chronology15 = null;
        mutablePeriod5.add((long) 8, chronology15);
        mutablePeriod5.setMillis(1439);
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.Instant instant21 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant23 = instant21.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime24 = instant21.toMutableDateTimeISO();
        java.lang.Object obj25 = null;
        org.joda.time.Instant instant26 = new org.joda.time.Instant(obj25);
        boolean boolean27 = mutableDateTime24.isAfter((org.joda.time.ReadableInstant) instant26);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType30, chronology31);
        org.joda.time.PeriodType periodType33 = periodType30.withWeeksRemoved();
        org.joda.time.PeriodType periodType34 = periodType33.withSecondsRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(readableDuration19, (org.joda.time.ReadableInstant) instant26, periodType33);
        org.joda.time.Duration duration38 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period39 = duration38.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray40 = period39.getFieldTypes();
        org.joda.time.Period period42 = period39.minusYears((int) (byte) 1);
        org.joda.time.Period period44 = period39.plusMonths((int) (byte) 0);
        int int45 = period39.size();
        org.joda.time.Period period47 = period39.plusYears(100);
        org.joda.time.Period period49 = period39.minusSeconds(292278993);
        org.joda.time.Duration duration52 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.PeriodType periodType54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration52, readableInstant53, periodType54);
        mutablePeriod55.addDays((int) (short) 100);
        org.joda.time.DurationFieldType durationFieldType58 = org.joda.time.DurationFieldType.days();
        mutablePeriod55.add(durationFieldType58, 8);
        boolean boolean61 = period39.isSupported(durationFieldType58);
        org.joda.time.Chronology chronology62 = null;
        boolean boolean63 = durationFieldType58.isSupported(chronology62);
        boolean boolean64 = periodType33.isSupported(durationFieldType58);
        mutablePeriod5.add(durationFieldType58, 1);
        mutablePeriod5.addMillis(1439);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant21 and mutableDateTime24", (instant21.compareTo(mutableDateTime24) == 0) == instant21.equals(mutableDateTime24));
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0871");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property16 = dateTime15.monthOfYear();
        org.joda.time.DateTime.Property property17 = dateTime15.weekyear();
        org.joda.time.DateTime dateTime18 = dateTime15.toDateTime();
        boolean boolean19 = dateTime15.isBeforeNow();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0872");
        java.lang.Object obj0 = null;
        org.joda.time.Instant instant1 = new org.joda.time.Instant(obj0);
        org.joda.time.DateTimeZone dateTimeZone2 = instant1.getZone();
        java.lang.String str3 = dateTimeZone2.toString();
        int int5 = dateTimeZone2.getOffset(1L);
        boolean boolean7 = dateTimeZone2.isStandardOffset(0L);
        java.lang.String str9 = dateTimeZone2.getNameKey((long) 1);
        java.util.Locale locale11 = java.util.Locale.FRENCH;
        java.lang.String str12 = dateTimeZone2.getName((long) (byte) 10, locale11);
        java.util.TimeZone timeZone13 = dateTimeZone2.toTimeZone();
        org.joda.time.DateTime dateTime14 = org.joda.time.DateTime.now(dateTimeZone2);
        boolean boolean16 = dateTime14.isAfter(35L);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration19, readableInstant20, periodType21);
        mutablePeriod22.setMillis((int) (short) 1);
        mutablePeriod22.setDays(100);
        org.joda.time.Instant instant28 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant30 = instant28.minus(100L);
        org.joda.time.Instant instant32 = instant30.plus((long) 100);
        boolean boolean33 = instant30.isBeforeNow();
        org.joda.time.Instant instant35 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime36 = instant35.toDateTime();
        org.joda.time.DateTime.Property property37 = dateTime36.era();
        int int38 = dateTime36.getWeekOfWeekyear();
        int int39 = dateTime36.getMonthOfYear();
        int int40 = dateTime36.getDayOfWeek();
        org.joda.time.DateTime dateTime42 = dateTime36.plus(4190400000L);
        org.joda.time.DateTime dateTime44 = dateTime42.withYearOfCentury((int) (short) 10);
        org.joda.time.DateTime.Property property45 = dateTime44.centuryOfEra();
        mutablePeriod22.setPeriod((org.joda.time.ReadableInstant) instant30, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.DateTime dateTime47 = dateTime14.plus((org.joda.time.ReadablePeriod) mutablePeriod22);
        org.joda.time.LocalDate localDate48 = dateTime47.toLocalDate();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant28 and dateTime36", (instant28.compareTo(dateTime36) == 0) == instant28.equals(dateTime36));
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0873");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.DateTime.Property property5 = dateTime2.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField6 = property5.getField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0874");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration4 = null;
        boolean boolean5 = duration2.isEqual(readableDuration4);
        org.joda.time.Duration duration7 = duration2.minus((long) 1);
        org.joda.time.Duration duration9 = duration7.minus((long) '4');
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Duration duration22 = duration19.plus((long) (byte) 0);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType30, chronology31);
        org.joda.time.PeriodType periodType33 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, (org.joda.time.ReadableInstant) dateTime25, periodType33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime12, (org.joda.time.ReadableDuration) duration16, periodType33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime12, periodType36);
        org.joda.time.Duration duration39 = duration7.minus((long) 7);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int50 = mutablePeriod49.getDays();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.DateTime dateTime54 = new org.joda.time.DateTime(chronology53);
        org.joda.time.DateTime.Property property55 = dateTime54.yearOfEra();
        org.joda.time.Interval interval56 = property55.toInterval();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.DateTime dateTime58 = new org.joda.time.DateTime(chronology57);
        org.joda.time.DateTime.Property property59 = dateTime58.yearOfEra();
        org.joda.time.Interval interval60 = property59.toInterval();
        boolean boolean61 = interval56.contains((org.joda.time.ReadableInterval) interval60);
        org.joda.time.Chronology chronology62 = interval60.getChronology();
        mutablePeriod49.setPeriod((long) 'u', (long) 1969, chronology62);
        org.joda.time.Period period64 = new org.joda.time.Period((long) (byte) 100, chronology62);
        org.joda.time.Period period65 = duration39.toPeriod(chronology62);
        org.joda.time.DateTimeField dateTimeField66 = chronology62.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField67 = chronology62.monthOfYear();
        org.joda.time.DurationField durationField68 = chronology62.weeks();
        org.joda.time.DurationField durationField69 = chronology62.days();
        org.joda.time.DateTimeField dateTimeField70 = chronology62.dayOfWeek();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime12", (instant11.compareTo(dateTime12) == 0) == instant11.equals(dateTime12));
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0875");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.DateTime.Property property5 = dateTime4.weekOfWeekyear();
        int int6 = property5.get();
        org.joda.time.DateTime dateTime7 = property5.getDateTime();
        org.joda.time.DateTime dateTime8 = property5.roundHalfEvenCopy();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0876");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.withMillisOfDay(4);
        org.joda.time.DateTime dateTime16 = dateTime15.toDateTime();
        org.joda.time.Period period18 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period20 = period18.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration22 = period20.toDurationTo(readableInstant21);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone26 = null;
        org.joda.time.DateTime dateTime27 = dateTime25.withZoneRetainFields(dateTimeZone26);
        org.joda.time.DateTime.Property property28 = dateTime27.weekOfWeekyear();
        org.joda.time.Duration duration31 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.PeriodType periodType33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration31, readableInstant32, periodType33);
        org.joda.time.DateTime dateTime35 = dateTime27.plus((org.joda.time.ReadableDuration) duration31);
        boolean boolean36 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Duration duration39 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.PeriodType periodType41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration39, readableInstant40, periodType41);
        long long43 = duration39.getStandardSeconds();
        org.joda.time.Duration duration45 = duration31.withDurationAdded((org.joda.time.ReadableDuration) duration39, 10);
        org.joda.time.Instant instant47 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime48 = instant47.toDateTime();
        java.util.TimeZone timeZone49 = null;
        org.joda.time.DateTimeZone dateTimeZone50 = org.joda.time.DateTimeZone.forTimeZone(timeZone49);
        org.joda.time.MutableDateTime mutableDateTime51 = dateTime48.toMutableDateTime(dateTimeZone50);
        org.joda.time.DateTime dateTime53 = dateTime48.minusHours(97);
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration45, (org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.DateTime dateTime56 = new org.joda.time.DateTime(chronology55);
        org.joda.time.Instant instant58 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime59 = instant58.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone60 = null;
        org.joda.time.DateTime dateTime61 = dateTime59.withZoneRetainFields(dateTimeZone60);
        org.joda.time.Instant instant63 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime64 = instant63.toDateTime();
        org.joda.time.DateTime.Property property65 = dateTime64.era();
        org.joda.time.DateTime dateTime66 = dateTime64.withTimeAtStartOfDay();
        org.joda.time.Duration duration69 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.PeriodType periodType71 = null;
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration69, readableInstant70, periodType71);
        mutablePeriod72.setMonths((int) '4');
        org.joda.time.DateTime dateTime75 = dateTime64.plus((org.joda.time.ReadablePeriod) mutablePeriod72);
        org.joda.time.DateTime dateTime77 = dateTime64.minusWeeks((int) (byte) 1);
        int int78 = dateTime61.compareTo((org.joda.time.ReadableInstant) dateTime64);
        org.joda.time.DateTime.Property property79 = dateTime64.minuteOfHour();
        org.joda.time.DateTime dateTime81 = dateTime64.withYear(1969);
        org.joda.time.Chronology chronology82 = dateTime81.getChronology();
        org.joda.time.DateTimeField dateTimeField83 = chronology82.dayOfMonth();
        org.joda.time.DurationField durationField84 = chronology82.minutes();
        org.joda.time.DateTime dateTime85 = dateTime56.toDateTime(chronology82);
        org.joda.time.DateTime dateTime87 = dateTime56.plusMillis(6);
        int int88 = dateTime87.getCenturyOfEra();
        org.joda.time.Period period89 = duration45.toPeriodFrom((org.joda.time.ReadableInstant) dateTime87);
        org.joda.time.DateTime dateTime91 = dateTime16.withDurationAdded((org.joda.time.ReadableDuration) duration45, 720);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0877");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.LocalDate localDate14 = dateTime2.toLocalDate();
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTime.Property property18 = dateTime17.era();
        org.joda.time.DateTime dateTime19 = dateTime17.withTimeAtStartOfDay();
        org.joda.time.Instant instant20 = dateTime17.toInstant();
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant20);
        org.joda.time.Seconds seconds22 = seconds21.negated();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0878");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZone(dateTimeZone3);
        org.joda.time.DateTime dateTime6 = dateTime4.minusSeconds(999);
        org.joda.time.DateTime dateTime8 = dateTime4.minusMinutes(169);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.ONE;
        org.joda.time.DurationFieldType durationFieldType10 = seconds9.getFieldType();
        org.joda.time.Hours hours11 = seconds9.toStandardHours();
        org.joda.time.DateTime dateTime12 = dateTime4.minus((org.joda.time.ReadablePeriod) seconds9);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime4", (instant1.compareTo(dateTime4) == 0) == instant1.equals(dateTime4));
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0879");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime dateTime22 = dateTime4.toDateTimeISO();
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant26 = instant24.minus(100L);
        java.lang.String str27 = instant26.toString();
        org.joda.time.Duration duration30 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period31 = duration30.toPeriod();
        org.joda.time.Duration duration33 = duration30.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = duration30.toPeriodTo(readableInstant34);
        org.joda.time.Duration duration37 = duration30.withMillis((long) (short) 0);
        org.joda.time.Instant instant38 = instant26.plus((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) instant26);
        org.joda.time.DateTime dateTime41 = dateTime22.withWeekOfWeekyear(7);
        org.joda.time.DateTime dateTime44 = dateTime41.withDurationAdded((long) (-2), 5);
        org.joda.time.DateTime dateTime46 = dateTime44.plusYears(86399);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0880");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.DateTime dateTime4 = interval3.getStart();
        org.joda.time.DateTime dateTime5 = dateTime4.toDateTimeISO();
        org.joda.time.DateTime dateTime7 = dateTime4.minusMonths(59);
        org.joda.time.Duration duration10 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds11 = duration10.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration12 = null;
        boolean boolean13 = duration10.isEqual(readableDuration12);
        org.joda.time.Duration duration15 = duration10.minus((long) 1);
        org.joda.time.Duration duration17 = duration15.minus((long) '4');
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        org.joda.time.DateTime.Property property21 = dateTime20.era();
        org.joda.time.Duration duration24 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration27 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period28 = duration27.toPeriod();
        org.joda.time.Duration duration30 = duration27.plus((long) (byte) 0);
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime33 = instant32.toDateTime();
        boolean boolean35 = dateTime33.isEqual(10L);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType38, chronology39);
        org.joda.time.PeriodType periodType41 = periodType38.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration30, (org.joda.time.ReadableInstant) dateTime33, periodType41);
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime20, (org.joda.time.ReadableDuration) duration24, periodType41);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, (org.joda.time.ReadableInstant) dateTime20, periodType44);
        org.joda.time.TimeOfDay timeOfDay46 = dateTime20.toTimeOfDay();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.DateTime dateTime48 = timeOfDay46.toDateTime(readableInstant47);
        int int49 = timeOfDay46.size();
        org.joda.time.Chronology chronology50 = timeOfDay46.getChronology();
        org.joda.time.Instant instant52 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime53 = instant52.toDateTime();
        boolean boolean55 = dateTime53.isEqual(10L);
        org.joda.time.DateTime dateTime57 = dateTime53.withCenturyOfEra((int) (byte) 1);
        org.joda.time.Instant instant59 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime60 = instant59.toDateTime();
        boolean boolean62 = dateTime60.isEqual(10L);
        org.joda.time.DateTime dateTime64 = dateTime60.withCenturyOfEra((int) (byte) 1);
        org.joda.time.DateTimeFieldType dateTimeFieldType65 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.DateTimeField dateTimeField67 = dateTimeFieldType65.getField(chronology66);
        long long70 = dateTimeField67.add(0L, (long) (short) 1);
        long long73 = dateTimeField67.add(1L, (-1));
        int int74 = dateTime60.get(dateTimeField67);
        boolean boolean75 = dateTime57.isAfter((org.joda.time.ReadableInstant) dateTime60);
        org.joda.time.DateTimeFieldType dateTimeFieldType76 = org.joda.time.DateTimeFieldType.minuteOfHour();
        boolean boolean77 = dateTime60.isSupported(dateTimeFieldType76);
        int int78 = timeOfDay46.get(dateTimeFieldType76);
        org.joda.time.DateTime dateTime79 = dateTime7.withFields((org.joda.time.ReadablePartial) timeOfDay46);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant19 and dateTime20", (instant19.compareTo(dateTime20) == 0) == instant19.equals(dateTime20));
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0881");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        java.util.Locale locale6 = new java.util.Locale("+00:00");
        boolean boolean7 = dateTime2.equals((java.lang.Object) "+00:00");
        org.joda.time.Instant instant9 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime10 = instant9.toDateTime();
        org.joda.time.DateTime.Property property11 = dateTime10.era();
        org.joda.time.DateTime dateTime12 = dateTime10.withTimeAtStartOfDay();
        org.joda.time.Duration duration15 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration15, readableInstant16, periodType17);
        mutablePeriod18.setMonths((int) '4');
        org.joda.time.DateTime dateTime21 = dateTime10.plus((org.joda.time.ReadablePeriod) mutablePeriod18);
        org.joda.time.DateTime dateTime23 = dateTime10.withMillisOfDay(4);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType28, chronology29);
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((-1L), (long) 100, periodType28);
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) dateTime10, periodType28);
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.DateTime dateTime34 = new org.joda.time.DateTime(chronology33);
        org.joda.time.DateTime.Property property35 = dateTime34.yearOfEra();
        org.joda.time.Interval interval36 = property35.toInterval();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.DateTime dateTime38 = new org.joda.time.DateTime(chronology37);
        org.joda.time.DateTime.Property property39 = dateTime38.yearOfEra();
        org.joda.time.Interval interval40 = property39.toInterval();
        boolean boolean41 = interval36.contains((org.joda.time.ReadableInterval) interval40);
        org.joda.time.Chronology chronology42 = interval40.getChronology();
        org.joda.time.MutableDateTime mutableDateTime43 = dateTime10.toMutableDateTime(chronology42);
        org.joda.time.DateTimeField dateTimeField44 = chronology42.hourOfHalfday();
        int int46 = dateTimeField44.get(128770560000000019L);
        long long48 = dateTimeField44.roundHalfFloor(128770560000000019L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0882");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property16 = dateTime15.monthOfYear();
        org.joda.time.DateTime.Property property17 = dateTime15.weekyear();
        org.joda.time.DateTime dateTime18 = dateTime15.toDateTime();
        int int19 = dateTime15.getSecondOfDay();
        org.joda.time.DateTime dateTime21 = dateTime15.minus((long) (short) 100);
        java.lang.Object obj22 = null;
        org.joda.time.Instant instant23 = new org.joda.time.Instant(obj22);
        org.joda.time.DateTimeZone dateTimeZone24 = instant23.getZone();
        java.lang.String str25 = dateTimeZone24.toString();
        boolean boolean27 = dateTimeZone24.isStandardOffset((long) '4');
        org.joda.time.Instant instant29 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime30 = instant29.toDateTime();
        org.joda.time.DateTime.Property property31 = dateTime30.era();
        org.joda.time.DateTime dateTime32 = dateTime30.withTimeAtStartOfDay();
        org.joda.time.Duration duration35 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration35, readableInstant36, periodType37);
        mutablePeriod38.setMonths((int) '4');
        org.joda.time.DateTime dateTime41 = dateTime30.plus((org.joda.time.ReadablePeriod) mutablePeriod38);
        org.joda.time.DateTime dateTime43 = dateTime30.minusWeeks((int) (byte) 1);
        org.joda.time.DateTimeZone dateTimeZone45 = org.joda.time.DateTimeZone.forID("UTC");
        org.joda.time.MutableDateTime mutableDateTime46 = dateTime30.toMutableDateTime(dateTimeZone45);
        java.lang.String str47 = dateTimeZone45.toString();
        long long49 = dateTimeZone24.getMillisKeepLocal(dateTimeZone45, 1L);
        boolean boolean51 = dateTimeZone45.isStandardOffset(0L);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.DateTime dateTime54 = new org.joda.time.DateTime(chronology53);
        org.joda.time.DateTime.Property property55 = dateTime54.yearOfEra();
        org.joda.time.Interval interval56 = property55.toInterval();
        java.util.Locale locale57 = java.util.Locale.KOREAN;
        java.lang.String str58 = property55.getAsText(locale57);
        java.util.Set<java.lang.String> strSet59 = locale57.getUnicodeLocaleAttributes();
        java.util.Set<java.lang.Character> charSet60 = locale57.getExtensionKeys();
        java.lang.String str61 = dateTimeZone45.getName((long) 1970, locale57);
        org.joda.time.DateTime dateTime62 = dateTime21.withZoneRetainFields(dateTimeZone45);
        boolean boolean63 = dateTime21.isBeforeNow();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0883");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        int int22 = dateTime4.getDayOfWeek();
        org.joda.time.DateTime dateTime23 = dateTime4.withLaterOffsetAtOverlap();
        org.joda.time.Instant instant25 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime26 = instant25.toDateTime();
        org.joda.time.DateTime.Property property27 = dateTime26.secondOfMinute();
        int int28 = dateTime26.getDayOfYear();
        org.joda.time.Instant instant30 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime31 = instant30.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone32 = null;
        org.joda.time.DateTime dateTime33 = dateTime31.withZone(dateTimeZone32);
        org.joda.time.Instant instant35 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime36 = instant35.toDateTime();
        org.joda.time.DateTime.Property property37 = dateTime36.era();
        org.joda.time.DateTime dateTime38 = dateTime36.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType39 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean40 = dateTime36.isSupported(dateTimeFieldType39);
        org.joda.time.DateTime.Property property41 = dateTime31.property(dateTimeFieldType39);
        boolean boolean42 = dateTime26.isSupported(dateTimeFieldType39);
        org.joda.time.DateTime.Property property43 = dateTime4.property(dateTimeFieldType39);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime4", (instant1.compareTo(dateTime4) == 0) == instant1.equals(dateTime4));
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0884");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.Instant instant5 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant7 = instant5.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime8 = instant5.toMutableDateTimeISO();
        org.joda.time.Period period9 = duration2.toPeriodTo((org.joda.time.ReadableInstant) instant5);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType14, chronology15);
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int26 = mutablePeriod25.getDays();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.DateTime dateTime30 = new org.joda.time.DateTime(chronology29);
        org.joda.time.DateTime.Property property31 = dateTime30.yearOfEra();
        org.joda.time.Interval interval32 = property31.toInterval();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.DateTime dateTime34 = new org.joda.time.DateTime(chronology33);
        org.joda.time.DateTime.Property property35 = dateTime34.yearOfEra();
        org.joda.time.Interval interval36 = property35.toInterval();
        boolean boolean37 = interval32.contains((org.joda.time.ReadableInterval) interval36);
        org.joda.time.Chronology chronology38 = interval36.getChronology();
        mutablePeriod25.setPeriod((long) 'u', (long) 1969, chronology38);
        org.joda.time.DateTimeField dateTimeField40 = chronology38.millisOfDay();
        org.joda.time.DateTimeField dateTimeField41 = chronology38.yearOfCentury();
        org.joda.time.Duration duration44 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds45 = duration44.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration46 = null;
        boolean boolean47 = duration44.isEqual(readableDuration46);
        org.joda.time.Duration duration49 = duration44.minus((long) 1);
        org.joda.time.Duration duration51 = duration49.minus((long) '4');
        org.joda.time.Instant instant53 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime54 = instant53.toDateTime();
        org.joda.time.DateTime.Property property55 = dateTime54.era();
        org.joda.time.Duration duration58 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration61 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period62 = duration61.toPeriod();
        org.joda.time.Duration duration64 = duration61.plus((long) (byte) 0);
        org.joda.time.Instant instant66 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime67 = instant66.toDateTime();
        boolean boolean69 = dateTime67.isEqual(10L);
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType72, chronology73);
        org.joda.time.PeriodType periodType75 = periodType72.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration64, (org.joda.time.ReadableInstant) dateTime67, periodType75);
        org.joda.time.Period period77 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime54, (org.joda.time.ReadableDuration) duration58, periodType75);
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period79 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, (org.joda.time.ReadableInstant) dateTime54, periodType78);
        org.joda.time.TimeOfDay timeOfDay80 = dateTime54.toTimeOfDay();
        int[] intArray82 = chronology38.get((org.joda.time.ReadablePartial) timeOfDay80, (long) (-1));
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(0L, (long) 59, periodType14, chronology38);
        org.joda.time.Period period84 = period9.withFields((org.joda.time.ReadablePeriod) mutablePeriod83);
        int int85 = period84.getMillis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant5 and mutableDateTime8", (instant5.compareTo(mutableDateTime8) == 0) == instant5.equals(mutableDateTime8));
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0885");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration4 = null;
        boolean boolean5 = duration2.isEqual(readableDuration4);
        org.joda.time.Duration duration7 = duration2.minus((long) 1);
        org.joda.time.Duration duration9 = duration7.minus((long) '4');
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Duration duration22 = duration19.plus((long) (byte) 0);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType30, chronology31);
        org.joda.time.PeriodType periodType33 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, (org.joda.time.ReadableInstant) dateTime25, periodType33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime12, (org.joda.time.ReadableDuration) duration16, periodType33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime12, periodType36);
        org.joda.time.TimeOfDay timeOfDay38 = dateTime12.toTimeOfDay();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.DateTime dateTime40 = timeOfDay38.toDateTime(readableInstant39);
        java.util.Date date41 = dateTime40.toDate();
        org.joda.time.DateTime dateTime43 = dateTime40.plusSeconds(1969);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.ONE;
        org.joda.time.DurationFieldType durationFieldType45 = seconds44.getFieldType();
        org.joda.time.PeriodType periodType46 = seconds44.getPeriodType();
        org.joda.time.DateTime dateTime47 = dateTime43.minus((org.joda.time.ReadablePeriod) seconds44);
        int int48 = dateTime47.getSecondOfMinute();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime12", (instant11.compareTo(dateTime12) == 0) == instant11.equals(dateTime12));
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0886");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant3 = instant1.minus(100L);
        org.joda.time.Instant instant5 = instant3.plus((long) 100);
        org.joda.time.Instant instant7 = instant3.withMillis((long) (byte) 1);
        org.joda.time.Period period9 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period11 = period9.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration13 = period11.toDurationTo(readableInstant12);
        org.joda.time.Duration duration16 = duration13.withDurationAdded((long) '#', 0);
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant20 = instant18.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime21 = instant18.toMutableDateTimeISO();
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period23 = duration16.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime21, periodType22);
        org.joda.time.Instant instant24 = instant7.minus((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Instant instant25 = instant7.toInstant();
        org.joda.time.DateTime dateTime26 = instant25.toDateTime();
        int int27 = dateTime26.getWeekyear();
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        org.joda.time.Instant instant39 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime40 = instant39.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone41 = null;
        org.joda.time.DateTime dateTime42 = dateTime40.withZoneRetainFields(dateTimeZone41);
        org.joda.time.Instant instant44 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime45 = instant44.toDateTime();
        org.joda.time.DateTime.Property property46 = dateTime45.era();
        org.joda.time.DateTime dateTime47 = dateTime45.withTimeAtStartOfDay();
        org.joda.time.Duration duration50 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.PeriodType periodType52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration50, readableInstant51, periodType52);
        mutablePeriod53.setMonths((int) '4');
        org.joda.time.DateTime dateTime56 = dateTime45.plus((org.joda.time.ReadablePeriod) mutablePeriod53);
        org.joda.time.DateTime dateTime58 = dateTime45.minusWeeks((int) (byte) 1);
        int int59 = dateTime42.compareTo((org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.DateTime.Property property60 = dateTime45.minuteOfHour();
        org.joda.time.DateTime dateTime62 = dateTime45.withYear(1969);
        org.joda.time.Chronology chronology63 = dateTime62.getChronology();
        org.joda.time.DateTimeField dateTimeField64 = chronology63.year();
        org.joda.time.DateTimeField dateTimeField65 = chronology63.millisOfDay();
        java.lang.String str66 = chronology63.toString();
        mutablePeriod36.setPeriod((long) 70, chronology63);
        org.joda.time.DurationField durationField68 = chronology63.months();
        org.joda.time.DurationField durationField69 = chronology63.centuries();
        boolean boolean70 = dateTime26.equals((java.lang.Object) chronology63);
        org.joda.time.DurationField durationField71 = chronology63.days();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and mutableDateTime21", (instant1.compareTo(mutableDateTime21) == 0) == instant1.equals(mutableDateTime21));
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0887");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.year();
        org.joda.time.DurationField durationField29 = chronology25.eras();
        org.joda.time.DateTimeField dateTimeField30 = chronology25.dayOfYear();
        int int32 = dateTimeField30.get((long) (-19));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0888");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(31536000000L);
        org.joda.time.Instant instant3 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime4 = instant3.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone5 = null;
        org.joda.time.DateTime dateTime6 = dateTime4.withZoneRetainFields(dateTimeZone5);
        java.util.Locale locale8 = new java.util.Locale("+00:00");
        boolean boolean9 = dateTime4.equals((java.lang.Object) "+00:00");
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) '#', (long) 'u');
        org.joda.time.DateTime dateTime13 = dateTime4.minus((org.joda.time.ReadableDuration) duration12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.yearWeekDayTime();
        org.joda.time.PeriodType periodType15 = periodType14.withDaysRemoved();
        org.joda.time.PeriodType periodType16 = periodType14.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime13, periodType16);
        int int18 = mutablePeriod17.getWeeks();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant3 and dateTime4", (instant3.compareTo(dateTime4) == 0) == instant3.equals(dateTime4));
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0889");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        org.joda.time.DateTime.Property property21 = dateTime20.era();
        org.joda.time.DateTime dateTime22 = dateTime20.withTimeAtStartOfDay();
        org.joda.time.Instant instant23 = dateTime20.toInstant();
        org.joda.time.DateTime dateTime25 = dateTime20.withMillis((long) '4');
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes30 = minutes28.minus((int) (short) -1);
        boolean boolean31 = minutes27.isGreaterThan(minutes28);
        org.joda.time.Minutes minutes32 = null;
        org.joda.time.Minutes minutes33 = minutes28.minus(minutes32);
        org.joda.time.Minutes minutes35 = minutes28.plus((int) (short) 1);
        org.joda.time.PeriodType periodType36 = minutes35.getPeriodType();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        boolean boolean38 = minutes35.isLessThan(minutes37);
        org.joda.time.Minutes minutes39 = minutes26.plus(minutes35);
        org.joda.time.Duration duration42 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.PeriodType periodType44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration42, readableInstant43, periodType44);
        mutablePeriod45.addDays((int) (short) 100);
        org.joda.time.DurationFieldType durationFieldType48 = org.joda.time.DurationFieldType.days();
        mutablePeriod45.add(durationFieldType48, 8);
        boolean boolean51 = minutes39.isSupported(durationFieldType48);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0890");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.DateTime dateTime6 = dateTime2.withWeekOfWeekyear(8);
        org.joda.time.DateTime dateTime8 = dateTime2.plusDays(100);
        org.joda.time.LocalTime localTime9 = dateTime2.toLocalTime();
        java.lang.Object obj10 = null;
        org.joda.time.Instant instant11 = new org.joda.time.Instant(obj10);
        org.joda.time.DateTimeZone dateTimeZone12 = instant11.getZone();
        java.lang.String str13 = dateTimeZone12.toString();
        java.lang.String str15 = dateTimeZone12.getName((long) 10);
        java.lang.String str17 = dateTimeZone12.getName((long) 8);
        long long21 = dateTimeZone12.convertLocalToUTC((long) 59, true, 141022L);
        boolean boolean22 = localTime9.equals((java.lang.Object) dateTimeZone12);
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = org.joda.time.DateTimeFieldType.secondOfDay();
        boolean boolean24 = localTime9.isSupported(dateTimeFieldType23);
        org.joda.time.Instant instant26 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime27 = instant26.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone28 = null;
        org.joda.time.DateTime dateTime29 = dateTime27.withZoneRetainFields(dateTimeZone28);
        org.joda.time.Instant instant31 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime32 = instant31.toDateTime();
        org.joda.time.DateTime.Property property33 = dateTime32.era();
        org.joda.time.DateTime dateTime34 = dateTime32.withTimeAtStartOfDay();
        org.joda.time.Duration duration37 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.PeriodType periodType39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration37, readableInstant38, periodType39);
        mutablePeriod40.setMonths((int) '4');
        org.joda.time.DateTime dateTime43 = dateTime32.plus((org.joda.time.ReadablePeriod) mutablePeriod40);
        org.joda.time.DateTime dateTime45 = dateTime32.minusWeeks((int) (byte) 1);
        int int46 = dateTime29.compareTo((org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.DateTime.Property property47 = dateTime32.minuteOfHour();
        org.joda.time.DateTime dateTime49 = dateTime32.withYear(1969);
        boolean boolean51 = dateTime49.isAfter((long) (short) -1);
        org.joda.time.LocalTime localTime52 = dateTime49.toLocalTime();
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.DateTimeField dateTimeField55 = dateTimeFieldType53.getField(chronology54);
        long long58 = dateTimeField55.add(0L, (long) (short) 1);
        long long60 = dateTimeField55.roundHalfCeiling((long) 2);
        org.joda.time.Instant instant62 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime63 = instant62.toDateTime();
        org.joda.time.DateTime.Property property64 = dateTime63.era();
        org.joda.time.Instant instant66 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant68 = instant66.minus(100L);
        org.joda.time.Instant instant70 = instant68.plus((long) 100);
        org.joda.time.Instant instant72 = instant68.withMillis((long) (byte) 1);
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime63, (org.joda.time.ReadableInstant) instant68);
        org.joda.time.LocalTime localTime74 = dateTime63.toLocalTime();
        org.joda.time.Duration duration78 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.PeriodType periodType80 = null;
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration78, readableInstant79, periodType80);
        mutablePeriod81.setMonths((int) '4');
        org.joda.time.Period period84 = mutablePeriod81.toPeriod();
        int[] intArray85 = period84.getValues();
        int[] intArray87 = dateTimeField55.addWrapField((org.joda.time.ReadablePartial) localTime74, 0, intArray85, 3);
        int int88 = localTime52.compareTo((org.joda.time.ReadablePartial) localTime74);
        org.joda.time.Period period89 = org.joda.time.Period.fieldDifference((org.joda.time.ReadablePartial) localTime9, (org.joda.time.ReadablePartial) localTime52);
        int int90 = localTime52.size();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0891");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int9 = mutablePeriod8.getDays();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        org.joda.time.DateTime.Property property14 = dateTime13.yearOfEra();
        org.joda.time.Interval interval15 = property14.toInterval();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.DateTime dateTime17 = new org.joda.time.DateTime(chronology16);
        org.joda.time.DateTime.Property property18 = dateTime17.yearOfEra();
        org.joda.time.Interval interval19 = property18.toInterval();
        boolean boolean20 = interval15.contains((org.joda.time.ReadableInterval) interval19);
        org.joda.time.Chronology chronology21 = interval19.getChronology();
        mutablePeriod8.setPeriod((long) 'u', (long) 1969, chronology21);
        org.joda.time.DateTimeField dateTimeField23 = chronology21.millisOfDay();
        org.joda.time.DateTimeField dateTimeField24 = chronology21.yearOfCentury();
        org.joda.time.Duration duration27 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds28 = duration27.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration29 = null;
        boolean boolean30 = duration27.isEqual(readableDuration29);
        org.joda.time.Duration duration32 = duration27.minus((long) 1);
        org.joda.time.Duration duration34 = duration32.minus((long) '4');
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime37 = instant36.toDateTime();
        org.joda.time.DateTime.Property property38 = dateTime37.era();
        org.joda.time.Duration duration41 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration44 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period45 = duration44.toPeriod();
        org.joda.time.Duration duration47 = duration44.plus((long) (byte) 0);
        org.joda.time.Instant instant49 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime50 = instant49.toDateTime();
        boolean boolean52 = dateTime50.isEqual(10L);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType55, chronology56);
        org.joda.time.PeriodType periodType58 = periodType55.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration47, (org.joda.time.ReadableInstant) dateTime50, periodType58);
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime37, (org.joda.time.ReadableDuration) duration41, periodType58);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, (org.joda.time.ReadableInstant) dateTime37, periodType61);
        org.joda.time.TimeOfDay timeOfDay63 = dateTime37.toTimeOfDay();
        int[] intArray65 = chronology21.get((org.joda.time.ReadablePartial) timeOfDay63, (long) (-1));
        org.joda.time.DateTimeField dateTimeField66 = chronology21.secondOfMinute();
        boolean boolean67 = dateTimeField66.isSupported();
        long long69 = dateTimeField66.roundHalfEven((long) 19);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant36 and dateTime37", (instant36.compareTo(dateTime37) == 0) == instant36.equals(dateTime37));
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0892");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = duration2.toPeriodTo(readableInstant6);
        org.joda.time.Duration duration10 = duration2.withDurationAdded((long) (short) -1, (int) (byte) 100);
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant14 = instant12.minus(100L);
        org.joda.time.Instant instant16 = instant14.plus((long) 100);
        org.joda.time.Instant instant18 = instant14.withMillis((long) (byte) 1);
        org.joda.time.Period period20 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period22 = period20.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration24 = period22.toDurationTo(readableInstant23);
        org.joda.time.Duration duration27 = duration24.withDurationAdded((long) '#', 0);
        org.joda.time.Instant instant29 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant31 = instant29.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime32 = instant29.toMutableDateTimeISO();
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period34 = duration27.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime32, periodType33);
        org.joda.time.Instant instant35 = instant18.minus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Instant instant36 = instant18.toInstant();
        org.joda.time.Instant instant38 = instant36.withMillis((long) 1);
        org.joda.time.Instant instant40 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime41 = instant40.toDateTime();
        org.joda.time.DateTime.Property property42 = dateTime41.era();
        org.joda.time.DateTime dateTime43 = dateTime41.withTimeAtStartOfDay();
        org.joda.time.Duration duration46 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.PeriodType periodType48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration46, readableInstant47, periodType48);
        mutablePeriod49.setMonths((int) '4');
        org.joda.time.DateTime dateTime52 = dateTime41.plus((org.joda.time.ReadablePeriod) mutablePeriod49);
        org.joda.time.DateTime dateTime54 = dateTime41.withMillisOfDay(4);
        org.joda.time.DateTimeZone dateTimeZone55 = dateTime41.getZone();
        org.joda.time.DateTime dateTime56 = instant38.toDateTime(dateTimeZone55);
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, (org.joda.time.ReadableInstant) dateTime56);
        int int58 = dateTime56.getDayOfYear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and mutableDateTime32", (instant12.compareTo(mutableDateTime32) == 0) == instant12.equals(mutableDateTime32));
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0893");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType3 = periodType2.withMonthsRemoved();
        org.joda.time.Instant instant5 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime6 = instant5.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone7 = null;
        org.joda.time.DateTime dateTime8 = dateTime6.withZoneRetainFields(dateTimeZone7);
        org.joda.time.Instant instant10 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime11 = instant10.toDateTime();
        org.joda.time.DateTime.Property property12 = dateTime11.era();
        org.joda.time.DateTime dateTime13 = dateTime11.withTimeAtStartOfDay();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration16, readableInstant17, periodType18);
        mutablePeriod19.setMonths((int) '4');
        org.joda.time.DateTime dateTime22 = dateTime11.plus((org.joda.time.ReadablePeriod) mutablePeriod19);
        org.joda.time.DateTime dateTime24 = dateTime11.minusWeeks((int) (byte) 1);
        int int25 = dateTime8.compareTo((org.joda.time.ReadableInstant) dateTime11);
        org.joda.time.DateTime.Property property26 = dateTime11.minuteOfHour();
        org.joda.time.DateTime dateTime28 = dateTime11.withYear(1969);
        org.joda.time.Chronology chronology29 = dateTime28.getChronology();
        org.joda.time.DateTimeField dateTimeField30 = chronology29.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField31 = chronology29.era();
        org.joda.time.DateTimeField dateTimeField32 = chronology29.secondOfDay();
        org.joda.time.Chronology chronology33 = chronology29.withUTC();
        org.joda.time.DateTimeField dateTimeField34 = chronology29.monthOfYear();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((-27349920L), (long) (-292275054), periodType2, chronology29);
        org.joda.time.Duration duration38 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds39 = duration38.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration40 = null;
        boolean boolean41 = duration38.isEqual(readableDuration40);
        org.joda.time.Duration duration43 = duration38.minus((long) 1);
        org.joda.time.Duration duration45 = duration43.minus((long) '4');
        org.joda.time.Instant instant47 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime48 = instant47.toDateTime();
        org.joda.time.DateTime.Property property49 = dateTime48.era();
        org.joda.time.Duration duration52 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration55 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period56 = duration55.toPeriod();
        org.joda.time.Duration duration58 = duration55.plus((long) (byte) 0);
        org.joda.time.Instant instant60 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime61 = instant60.toDateTime();
        boolean boolean63 = dateTime61.isEqual(10L);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType66, chronology67);
        org.joda.time.PeriodType periodType69 = periodType66.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration58, (org.joda.time.ReadableInstant) dateTime61, periodType69);
        org.joda.time.Period period71 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime48, (org.joda.time.ReadableDuration) duration52, periodType69);
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, (org.joda.time.ReadableInstant) dateTime48, periodType72);
        org.joda.time.TimeOfDay timeOfDay74 = dateTime48.toTimeOfDay();
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.DateTime dateTime76 = timeOfDay74.toDateTime(readableInstant75);
        org.joda.time.Instant instant78 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant80 = instant78.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime81 = instant78.toMutableDateTimeISO();
        org.joda.time.DateTime dateTime82 = timeOfDay74.toDateTime((org.joda.time.ReadableInstant) instant78);
        org.joda.time.DateTimeField dateTimeField84 = timeOfDay74.getField(2);
        long long86 = chronology29.set((org.joda.time.ReadablePartial) timeOfDay74, (long) 1800);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant5 and dateTime6", (instant5.compareTo(dateTime6) == 0) == instant5.equals(dateTime6));
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0894");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = duration2.toPeriod(chronology3);
        org.joda.time.Period period6 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period8 = period6.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration10 = period8.toDurationTo(readableInstant9);
        org.joda.time.Duration duration11 = duration2.minus((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        org.joda.time.DateTime.Property property14 = dateTime13.yearOfEra();
        org.joda.time.Interval interval15 = property14.toInterval();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.DateTime dateTime17 = new org.joda.time.DateTime(chronology16);
        org.joda.time.DateTime.Property property18 = dateTime17.yearOfEra();
        org.joda.time.Interval interval19 = property18.toInterval();
        boolean boolean20 = interval15.contains((org.joda.time.ReadableInterval) interval19);
        org.joda.time.Chronology chronology21 = interval19.getChronology();
        org.joda.time.DurationField durationField22 = chronology21.weeks();
        org.joda.time.DateTime dateTime23 = new org.joda.time.DateTime(chronology21);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes27 = minutes25.minus((int) (short) -1);
        boolean boolean28 = minutes24.isGreaterThan(minutes25);
        org.joda.time.Minutes minutes29 = null;
        org.joda.time.Minutes minutes30 = minutes25.minus(minutes29);
        int int31 = minutes25.getMinutes();
        org.joda.time.DateTime dateTime33 = dateTime23.withPeriodAdded((org.joda.time.ReadablePeriod) minutes25, 19);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.DateTime dateTime35 = dateTime23.toDateTime(chronology34);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.DateTimeField dateTimeField38 = dateTimeFieldType36.getField(chronology37);
        org.joda.time.DurationFieldType durationFieldType39 = dateTimeFieldType36.getRangeDurationType();
        org.joda.time.DateTime dateTime41 = dateTime35.withFieldAdded(durationFieldType39, (-100));
        org.joda.time.DateTime.Property property42 = dateTime41.dayOfWeek();
        org.joda.time.Period period44 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period46 = period44.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Duration duration48 = period46.toDurationTo(readableInstant47);
        org.joda.time.Duration duration51 = duration48.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = duration51.toPeriodFrom(readableInstant52);
        org.joda.time.Instant instant55 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime56 = instant55.toDateTime();
        org.joda.time.DateTime.Property property57 = dateTime56.era();
        org.joda.time.Duration duration60 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration63 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period64 = duration63.toPeriod();
        org.joda.time.Duration duration66 = duration63.plus((long) (byte) 0);
        org.joda.time.Instant instant68 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime69 = instant68.toDateTime();
        boolean boolean71 = dateTime69.isEqual(10L);
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType74, chronology75);
        org.joda.time.PeriodType periodType77 = periodType74.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration66, (org.joda.time.ReadableInstant) dateTime69, periodType77);
        org.joda.time.Period period79 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime56, (org.joda.time.ReadableDuration) duration60, periodType77);
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.Period period81 = duration51.toPeriod(periodType77, chronology80);
        org.joda.time.PeriodType periodType82 = periodType77.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration11, (org.joda.time.ReadableInstant) dateTime41, periodType82);
        org.joda.time.DateMidnight dateMidnight84 = dateTime41.toDateMidnight();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant55 and dateTime56", (instant55.compareTo(dateTime56) == 0) == instant55.equals(dateTime56));
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0895");
        org.joda.time.Duration duration3 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration3, readableInstant4, periodType5);
        org.joda.time.Days days7 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType8 = org.joda.time.DurationFieldType.minutes();
        int int9 = days7.get(durationFieldType8);
        mutablePeriod6.add(durationFieldType8, 8);
        org.joda.time.ReadablePeriod readablePeriod12 = null;
        mutablePeriod6.add(readablePeriod12);
        int int14 = mutablePeriod6.getMonths();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.DateTime dateTime16 = new org.joda.time.DateTime(chronology15);
        org.joda.time.DateTime.Property property17 = dateTime16.yearOfEra();
        org.joda.time.Interval interval18 = property17.toInterval();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.DateTime dateTime20 = new org.joda.time.DateTime(chronology19);
        org.joda.time.DateTime.Property property21 = dateTime20.yearOfEra();
        org.joda.time.Interval interval22 = property21.toInterval();
        boolean boolean23 = interval18.contains((org.joda.time.ReadableInterval) interval22);
        mutablePeriod6.setPeriod((org.joda.time.ReadableInterval) interval18);
        org.joda.time.DurationFieldType durationFieldType26 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant28 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime29 = instant28.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone30 = null;
        org.joda.time.DateTime dateTime31 = dateTime29.withZoneRetainFields(dateTimeZone30);
        org.joda.time.Instant instant33 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime34 = instant33.toDateTime();
        org.joda.time.DateTime.Property property35 = dateTime34.era();
        org.joda.time.DateTime dateTime36 = dateTime34.withTimeAtStartOfDay();
        org.joda.time.Duration duration39 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.PeriodType periodType41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration39, readableInstant40, periodType41);
        mutablePeriod42.setMonths((int) '4');
        org.joda.time.DateTime dateTime45 = dateTime34.plus((org.joda.time.ReadablePeriod) mutablePeriod42);
        org.joda.time.DateTime dateTime47 = dateTime34.minusWeeks((int) (byte) 1);
        int int48 = dateTime31.compareTo((org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.DateTime.Property property49 = dateTime34.minuteOfHour();
        org.joda.time.DateTime dateTime51 = dateTime34.withYear(1969);
        org.joda.time.Chronology chronology52 = dateTime51.getChronology();
        org.joda.time.DurationField durationField53 = durationFieldType26.getField(chronology52);
        mutablePeriod6.add((-43199999L), chronology52);
        org.joda.time.DurationField durationField55 = chronology52.millis();
        org.joda.time.DurationField durationField56 = chronology52.months();
        org.joda.time.DateTime dateTime57 = new org.joda.time.DateTime((long) 69, chronology52);
        org.joda.time.DateTimeField dateTimeField58 = chronology52.minuteOfDay();
        org.joda.time.DurationField durationField59 = chronology52.halfdays();
        int int62 = durationField59.getValue(0L, 100L);
        long long65 = durationField59.subtract((-820800059L), (long) (short) 0);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant28 and dateTime29", (instant28.compareTo(dateTime29) == 0) == instant28.equals(dateTime29));
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0896");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = org.joda.time.DateTimeFieldType.weekyearOfCentury();
        org.joda.time.Duration duration27 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.PeriodType periodType29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration27, readableInstant28, periodType29);
        org.joda.time.Days days31 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType32 = org.joda.time.DurationFieldType.minutes();
        int int33 = days31.get(durationFieldType32);
        mutablePeriod30.add(durationFieldType32, 8);
        org.joda.time.ReadablePeriod readablePeriod36 = null;
        mutablePeriod30.add(readablePeriod36);
        int int38 = mutablePeriod30.getMonths();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.DateTime dateTime40 = new org.joda.time.DateTime(chronology39);
        org.joda.time.DateTime.Property property41 = dateTime40.yearOfEra();
        org.joda.time.Interval interval42 = property41.toInterval();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.DateTime dateTime44 = new org.joda.time.DateTime(chronology43);
        org.joda.time.DateTime.Property property45 = dateTime44.yearOfEra();
        org.joda.time.Interval interval46 = property45.toInterval();
        boolean boolean47 = interval42.contains((org.joda.time.ReadableInterval) interval46);
        mutablePeriod30.setPeriod((org.joda.time.ReadableInterval) interval42);
        org.joda.time.DurationFieldType durationFieldType50 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant52 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime53 = instant52.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone54 = null;
        org.joda.time.DateTime dateTime55 = dateTime53.withZoneRetainFields(dateTimeZone54);
        org.joda.time.Instant instant57 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime58 = instant57.toDateTime();
        org.joda.time.DateTime.Property property59 = dateTime58.era();
        org.joda.time.DateTime dateTime60 = dateTime58.withTimeAtStartOfDay();
        org.joda.time.Duration duration63 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.PeriodType periodType65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration63, readableInstant64, periodType65);
        mutablePeriod66.setMonths((int) '4');
        org.joda.time.DateTime dateTime69 = dateTime58.plus((org.joda.time.ReadablePeriod) mutablePeriod66);
        org.joda.time.DateTime dateTime71 = dateTime58.minusWeeks((int) (byte) 1);
        int int72 = dateTime55.compareTo((org.joda.time.ReadableInstant) dateTime58);
        org.joda.time.DateTime.Property property73 = dateTime58.minuteOfHour();
        org.joda.time.DateTime dateTime75 = dateTime58.withYear(1969);
        org.joda.time.Chronology chronology76 = dateTime75.getChronology();
        org.joda.time.DurationField durationField77 = durationFieldType50.getField(chronology76);
        mutablePeriod30.add((-43199999L), chronology76);
        org.joda.time.DurationField durationField79 = chronology76.millis();
        org.joda.time.DurationField durationField80 = chronology76.months();
        org.joda.time.DateTime dateTime81 = new org.joda.time.DateTime((long) 69, chronology76);
        org.joda.time.DateTimeField dateTimeField82 = chronology76.minuteOfDay();
        org.joda.time.DurationField durationField83 = chronology76.months();
        org.joda.time.DateTime dateTime84 = org.joda.time.DateTime.now(chronology76);
        org.joda.time.DateTimeField dateTimeField85 = dateTimeFieldType23.getField(chronology76);
        int int86 = dateTime7.get(dateTimeFieldType23);
        org.joda.time.DurationFieldType durationFieldType87 = dateTimeFieldType23.getDurationType();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0897");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        org.joda.time.DateTime.Property property21 = dateTime20.era();
        org.joda.time.DateTime dateTime22 = dateTime20.withTimeAtStartOfDay();
        org.joda.time.Instant instant23 = dateTime20.toInstant();
        org.joda.time.DateTime dateTime25 = dateTime20.withMillis((long) '4');
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.DateTime dateTime28 = dateTime20.minusMillis((-1));
        org.joda.time.DateTime dateTime30 = dateTime28.withMillis((long) (byte) -1);
        int int31 = dateTime28.getYear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0898");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant3 = instant1.minus(100L);
        org.joda.time.Instant instant5 = instant3.plus((long) 100);
        org.joda.time.Instant instant7 = instant3.withMillis((long) (byte) 1);
        org.joda.time.Chronology chronology8 = instant3.getChronology();
        org.joda.time.Instant instant10 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime11 = instant10.toDateTime();
        boolean boolean13 = dateTime11.isEqual(10L);
        org.joda.time.DateTime dateTime15 = dateTime11.withCenturyOfEra((int) (byte) 1);
        org.joda.time.DateTimeFieldType dateTimeFieldType16 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.DateTimeField dateTimeField18 = dateTimeFieldType16.getField(chronology17);
        long long21 = dateTimeField18.add(0L, (long) (short) 1);
        long long24 = dateTimeField18.add(1L, (-1));
        int int25 = dateTime11.get(dateTimeField18);
        org.joda.time.Instant instant27 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime28 = instant27.toDateTime();
        org.joda.time.DateTime.Property property29 = dateTime28.era();
        org.joda.time.DateTime dateTime30 = dateTime28.withTimeAtStartOfDay();
        org.joda.time.Duration duration33 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration33, readableInstant34, periodType35);
        mutablePeriod36.setMonths((int) '4');
        org.joda.time.DateTime dateTime39 = dateTime28.plus((org.joda.time.ReadablePeriod) mutablePeriod36);
        org.joda.time.DateTime dateTime41 = dateTime28.minusWeeks((int) (byte) 1);
        long long42 = dateTime28.getMillis();
        org.joda.time.DurationFieldType durationFieldType43 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant45 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime46 = instant45.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone47 = null;
        org.joda.time.DateTime dateTime48 = dateTime46.withZoneRetainFields(dateTimeZone47);
        org.joda.time.Instant instant50 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime51 = instant50.toDateTime();
        org.joda.time.DateTime.Property property52 = dateTime51.era();
        org.joda.time.DateTime dateTime53 = dateTime51.withTimeAtStartOfDay();
        org.joda.time.Duration duration56 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.PeriodType periodType58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration56, readableInstant57, periodType58);
        mutablePeriod59.setMonths((int) '4');
        org.joda.time.DateTime dateTime62 = dateTime51.plus((org.joda.time.ReadablePeriod) mutablePeriod59);
        org.joda.time.DateTime dateTime64 = dateTime51.minusWeeks((int) (byte) 1);
        int int65 = dateTime48.compareTo((org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.DateTime.Property property66 = dateTime51.minuteOfHour();
        org.joda.time.DateTime dateTime68 = dateTime51.withYear(1969);
        org.joda.time.Chronology chronology69 = dateTime68.getChronology();
        org.joda.time.DurationField durationField70 = durationFieldType43.getField(chronology69);
        org.joda.time.DateTime dateTime71 = dateTime28.toDateTime(chronology69);
        org.joda.time.DateTime dateTime72 = dateTime11.toDateTime(chronology69);
        org.joda.time.DateTime dateTime73 = org.joda.time.DateTime.now(chronology69);
        org.joda.time.DateTimeFieldType dateTimeFieldType74 = org.joda.time.DateTimeFieldType.yearOfEra();
        int int75 = dateTime73.get(dateTimeFieldType74);
        boolean boolean76 = instant3.isSupported(dateTimeFieldType74);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime11", (instant1.compareTo(dateTime11) == 0) == instant1.equals(dateTime11));
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0899");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.DateTime.Property property5 = dateTime4.weekOfWeekyear();
        java.lang.String str6 = property5.getAsText();
        java.util.Locale locale7 = java.util.Locale.ITALY;
        java.util.Locale locale11 = new java.util.Locale("", "hi!", "hi!");
        java.lang.String str12 = locale7.getDisplayCountry(locale11);
        java.lang.String str13 = locale11.getDisplayVariant();
        java.util.Locale locale14 = java.util.Locale.ENGLISH;
        java.lang.String str15 = locale11.getDisplayVariant(locale14);
        int int16 = property5.getMaximumTextLength(locale11);
        org.joda.time.DateTime dateTime17 = property5.roundHalfEvenCopy();
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        org.joda.time.DateTime.Property property21 = dateTime20.era();
        org.joda.time.DateTime dateTime22 = dateTime20.withTimeAtStartOfDay();
        org.joda.time.Duration duration25 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration25, readableInstant26, periodType27);
        mutablePeriod28.setMonths((int) '4');
        org.joda.time.DateTime dateTime31 = dateTime20.plus((org.joda.time.ReadablePeriod) mutablePeriod28);
        org.joda.time.DateTime dateTime33 = dateTime20.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property34 = dateTime33.monthOfYear();
        org.joda.time.DateTime.Property property35 = dateTime33.weekyear();
        java.lang.Object obj36 = null;
        org.joda.time.Instant instant37 = new org.joda.time.Instant(obj36);
        org.joda.time.DateTimeZone dateTimeZone38 = instant37.getZone();
        java.lang.String str39 = dateTimeZone38.toString();
        java.lang.String str41 = dateTimeZone38.getName((long) 10);
        java.lang.String str43 = dateTimeZone38.getName((long) 8);
        int int45 = dateTimeZone38.getOffsetFromLocal((long) (short) -1);
        org.joda.time.DateTime dateTime46 = dateTime33.withZone(dateTimeZone38);
        org.joda.time.DateTime.Property property47 = dateTime46.weekOfWeekyear();
        org.joda.time.LocalDateTime localDateTime48 = dateTime46.toLocalDateTime();
        int int49 = dateTime46.getMonthOfYear();
        org.joda.time.DateTime.Property property50 = dateTime46.millisOfDay();
        int int51 = property5.compareTo((org.joda.time.ReadableInstant) dateTime46);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0900");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        java.util.Locale locale6 = new java.util.Locale("+00:00");
        boolean boolean7 = dateTime2.equals((java.lang.Object) "+00:00");
        org.joda.time.Instant instant9 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime10 = instant9.toDateTime();
        org.joda.time.DateTime.Property property11 = dateTime10.era();
        org.joda.time.DateTime dateTime12 = dateTime10.withTimeAtStartOfDay();
        org.joda.time.Duration duration15 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration15, readableInstant16, periodType17);
        mutablePeriod18.setMonths((int) '4');
        org.joda.time.DateTime dateTime21 = dateTime10.plus((org.joda.time.ReadablePeriod) mutablePeriod18);
        java.lang.Object obj22 = null;
        org.joda.time.Instant instant23 = new org.joda.time.Instant(obj22);
        org.joda.time.DateTimeZone dateTimeZone24 = instant23.getZone();
        java.lang.String str25 = dateTimeZone24.toString();
        int int27 = dateTimeZone24.getOffset(1L);
        boolean boolean29 = dateTimeZone24.isStandardOffset(0L);
        org.joda.time.DateTime dateTime30 = dateTime10.withZoneRetainFields(dateTimeZone24);
        org.joda.time.DateTime dateTime31 = new org.joda.time.DateTime(dateTimeZone24);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.weeksBetween((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) dateTime31);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0901");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant3, periodType4);
        org.joda.time.Days days6 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType7 = org.joda.time.DurationFieldType.minutes();
        int int8 = days6.get(durationFieldType7);
        mutablePeriod5.add(durationFieldType7, 8);
        int int11 = mutablePeriod5.getHours();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        org.joda.time.DateTime.Property property14 = dateTime13.yearOfEra();
        org.joda.time.Interval interval15 = property14.toInterval();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.DateTime dateTime17 = new org.joda.time.DateTime(chronology16);
        org.joda.time.DateTime.Property property18 = dateTime17.yearOfEra();
        org.joda.time.Interval interval19 = property18.toInterval();
        boolean boolean20 = interval15.contains((org.joda.time.ReadableInterval) interval19);
        java.lang.String str21 = interval15.toString();
        mutablePeriod5.add((org.joda.time.ReadableInterval) interval15);
        int int23 = mutablePeriod5.getMillis();
        mutablePeriod5.setPeriod((long) (byte) 10);
        mutablePeriod5.addSeconds(100);
        org.joda.time.Instant instant30 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime31 = instant30.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone32 = null;
        org.joda.time.DateTime dateTime33 = dateTime31.withZoneRetainFields(dateTimeZone32);
        org.joda.time.Instant instant35 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime36 = instant35.toDateTime();
        org.joda.time.DateTime.Property property37 = dateTime36.era();
        org.joda.time.DateTime dateTime38 = dateTime36.withTimeAtStartOfDay();
        org.joda.time.Duration duration41 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.PeriodType periodType43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration41, readableInstant42, periodType43);
        mutablePeriod44.setMonths((int) '4');
        org.joda.time.DateTime dateTime47 = dateTime36.plus((org.joda.time.ReadablePeriod) mutablePeriod44);
        org.joda.time.DateTime dateTime49 = dateTime36.minusWeeks((int) (byte) 1);
        int int50 = dateTime33.compareTo((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.DateTime.Property property51 = dateTime36.minuteOfHour();
        org.joda.time.DateTime dateTime53 = dateTime36.withYear(1969);
        org.joda.time.Chronology chronology54 = dateTime53.getChronology();
        org.joda.time.DateTimeField dateTimeField55 = chronology54.year();
        org.joda.time.DateTimeField dateTimeField56 = chronology54.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField57 = chronology54.year();
        mutablePeriod5.add(38716L, chronology54);
        org.joda.time.DateTimeField dateTimeField59 = chronology54.era();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant30 and dateTime31", (instant30.compareTo(dateTime31) == 0) == instant30.equals(dateTime31));
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0902");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.DateTime.Property property18 = dateTime8.yearOfEra();
        java.util.GregorianCalendar gregorianCalendar19 = dateTime8.toGregorianCalendar();
        org.joda.time.DateTime dateTime21 = dateTime8.minusMillis((int) (short) -1);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.DateTime dateTime23 = new org.joda.time.DateTime(chronology22);
        org.joda.time.DateTime.Property property24 = dateTime23.yearOfEra();
        org.joda.time.DateTime.Property property25 = dateTime23.weekOfWeekyear();
        org.joda.time.DateTime.Property property26 = dateTime23.hourOfDay();
        int int27 = dateTime23.getMillisOfDay();
        boolean boolean28 = dateTime8.isBefore((org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration31 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period32 = duration31.toPeriod();
        org.joda.time.Duration duration35 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period36 = duration35.toPeriod();
        boolean boolean37 = duration31.isEqual((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardSeconds((long) (-292275054));
        org.joda.time.Duration duration40 = duration31.plus((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration41 = duration31.toDuration();
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType45, chronology46);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((long) (short) 0, periodType45, chronology48);
        org.joda.time.DurationFieldType durationFieldType50 = org.joda.time.DurationFieldType.minutes();
        int int51 = periodType45.indexOf(durationFieldType50);
        org.joda.time.PeriodType periodType52 = periodType45.withYearsRemoved();
        org.joda.time.PeriodType periodType53 = periodType45.withSecondsRemoved();
        org.joda.time.PeriodType periodType54 = periodType45.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableDuration) duration41, periodType45);
        org.joda.time.DateTime.Property property56 = dateTime23.hourOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0903");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        java.util.Locale locale4 = java.util.Locale.KOREAN;
        java.lang.String str5 = property2.getAsText(locale4);
        java.lang.String str6 = property2.getAsText();
        int int7 = property2.getMinimumValueOverall();
        org.joda.time.Instant instant9 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime10 = instant9.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone11 = null;
        org.joda.time.DateTime dateTime12 = dateTime10.withZoneRetainFields(dateTimeZone11);
        org.joda.time.Instant instant14 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant14.toDateTime();
        org.joda.time.DateTime.Property property16 = dateTime15.era();
        org.joda.time.DateTime dateTime17 = dateTime15.withTimeAtStartOfDay();
        org.joda.time.Duration duration20 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration20, readableInstant21, periodType22);
        mutablePeriod23.setMonths((int) '4');
        org.joda.time.DateTime dateTime26 = dateTime15.plus((org.joda.time.ReadablePeriod) mutablePeriod23);
        org.joda.time.DateTime dateTime28 = dateTime15.minusWeeks((int) (byte) 1);
        int int29 = dateTime12.compareTo((org.joda.time.ReadableInstant) dateTime15);
        org.joda.time.DateTime dateTime30 = dateTime12.toDateTimeISO();
        org.joda.time.DateTime dateTime32 = dateTime12.withDayOfYear(8);
        org.joda.time.DateTimeFieldType dateTimeFieldType33 = org.joda.time.DateTimeFieldType.monthOfYear();
        int int34 = dateTime12.get(dateTimeFieldType33);
        int int35 = property2.compareTo((org.joda.time.ReadableInstant) dateTime12);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime12", (instant9.compareTo(dateTime12) == 0) == instant9.equals(dateTime12));
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0904");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = duration2.toPeriodTo(readableInstant6);
        org.joda.time.Duration duration9 = duration2.withMillis((long) (short) 0);
        org.joda.time.Duration duration12 = duration2.withDurationAdded((long) 1, (int) ' ');
        org.joda.time.Instant instant14 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant14.toDateTime();
        boolean boolean17 = dateTime15.isEqual(10L);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, (org.joda.time.ReadableInstant) dateTime15, periodType18);
        org.joda.time.DateTime dateTime21 = dateTime15.minusSeconds((int) 'a');
        org.joda.time.DurationFieldType durationFieldType22 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone26 = null;
        org.joda.time.DateTime dateTime27 = dateTime25.withZoneRetainFields(dateTimeZone26);
        org.joda.time.Instant instant29 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime30 = instant29.toDateTime();
        org.joda.time.DateTime.Property property31 = dateTime30.era();
        org.joda.time.DateTime dateTime32 = dateTime30.withTimeAtStartOfDay();
        org.joda.time.Duration duration35 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration35, readableInstant36, periodType37);
        mutablePeriod38.setMonths((int) '4');
        org.joda.time.DateTime dateTime41 = dateTime30.plus((org.joda.time.ReadablePeriod) mutablePeriod38);
        org.joda.time.DateTime dateTime43 = dateTime30.minusWeeks((int) (byte) 1);
        int int44 = dateTime27.compareTo((org.joda.time.ReadableInstant) dateTime30);
        org.joda.time.DateTime.Property property45 = dateTime30.minuteOfHour();
        org.joda.time.DateTime dateTime47 = dateTime30.withYear(1969);
        org.joda.time.Chronology chronology48 = dateTime47.getChronology();
        org.joda.time.DurationField durationField49 = durationFieldType22.getField(chronology48);
        org.joda.time.DateTime dateTime51 = dateTime21.withFieldAdded(durationFieldType22, 86399);
        org.joda.time.DateTime dateTime53 = dateTime21.plusMinutes((-102267));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant14 and dateTime15", (instant14.compareTo(dateTime15) == 0) == instant14.equals(dateTime15));
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0905");
        org.joda.time.Duration duration3 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds4 = duration3.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration5 = null;
        boolean boolean6 = duration3.isEqual(readableDuration5);
        org.joda.time.Duration duration8 = duration3.minus((long) 1);
        org.joda.time.Duration duration10 = duration8.minus((long) '4');
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTime.Property property14 = dateTime13.era();
        org.joda.time.Duration duration17 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration20 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period21 = duration20.toPeriod();
        org.joda.time.Duration duration23 = duration20.plus((long) (byte) 0);
        org.joda.time.Instant instant25 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime26 = instant25.toDateTime();
        boolean boolean28 = dateTime26.isEqual(10L);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType31, chronology32);
        org.joda.time.PeriodType periodType34 = periodType31.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, (org.joda.time.ReadableInstant) dateTime26, periodType34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime13, (org.joda.time.ReadableDuration) duration17, periodType34);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, (org.joda.time.ReadableInstant) dateTime13, periodType37);
        org.joda.time.Duration duration40 = duration8.minus((long) 7);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int51 = mutablePeriod50.getDays();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.DateTime dateTime55 = new org.joda.time.DateTime(chronology54);
        org.joda.time.DateTime.Property property56 = dateTime55.yearOfEra();
        org.joda.time.Interval interval57 = property56.toInterval();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.DateTime dateTime59 = new org.joda.time.DateTime(chronology58);
        org.joda.time.DateTime.Property property60 = dateTime59.yearOfEra();
        org.joda.time.Interval interval61 = property60.toInterval();
        boolean boolean62 = interval57.contains((org.joda.time.ReadableInterval) interval61);
        org.joda.time.Chronology chronology63 = interval61.getChronology();
        mutablePeriod50.setPeriod((long) 'u', (long) 1969, chronology63);
        org.joda.time.Period period65 = new org.joda.time.Period((long) (byte) 100, chronology63);
        org.joda.time.Period period66 = duration40.toPeriod(chronology63);
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod(10L, chronology63);
        mutablePeriod67.setPeriod((long) 12);
        mutablePeriod67.clear();
        mutablePeriod67.setYears((int) 'u');
        int int73 = mutablePeriod67.getDays();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime13", (instant12.compareTo(dateTime13) == 0) == instant12.equals(dateTime13));
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0906");
        org.joda.time.Instant instant2 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime3 = instant2.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone4 = null;
        org.joda.time.DateTime dateTime5 = dateTime3.withZoneRetainFields(dateTimeZone4);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        org.joda.time.DateTime.Property property9 = dateTime8.era();
        org.joda.time.DateTime dateTime10 = dateTime8.withTimeAtStartOfDay();
        org.joda.time.Duration duration13 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration13, readableInstant14, periodType15);
        mutablePeriod16.setMonths((int) '4');
        org.joda.time.DateTime dateTime19 = dateTime8.plus((org.joda.time.ReadablePeriod) mutablePeriod16);
        org.joda.time.DateTime dateTime21 = dateTime8.minusWeeks((int) (byte) 1);
        int int22 = dateTime5.compareTo((org.joda.time.ReadableInstant) dateTime8);
        org.joda.time.DateTime.Property property23 = dateTime8.minuteOfHour();
        org.joda.time.DateTime dateTime25 = dateTime8.withYear(1969);
        org.joda.time.Chronology chronology26 = dateTime25.getChronology();
        org.joda.time.DurationField durationField27 = chronology26.halfdays();
        org.joda.time.DateTimeField dateTimeField28 = chronology26.halfdayOfDay();
        org.joda.time.DateTimeField dateTimeField29 = chronology26.halfdayOfDay();
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(10L, chronology26);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime3", (instant2.compareTo(dateTime3) == 0) == instant2.equals(dateTime3));
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0907");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField29 = chronology25.year();
        org.joda.time.Chronology chronology30 = chronology25.withUTC();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0908");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.Interval interval7 = property6.toInterval();
        boolean boolean8 = interval3.contains((org.joda.time.ReadableInterval) interval7);
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.DateTime dateTime10 = new org.joda.time.DateTime(chronology9);
        org.joda.time.DateTime.Property property11 = dateTime10.yearOfEra();
        org.joda.time.Interval interval12 = property11.toInterval();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.DateTime dateTime14 = new org.joda.time.DateTime(chronology13);
        org.joda.time.DateTime.Property property15 = dateTime14.yearOfEra();
        org.joda.time.Interval interval16 = property15.toInterval();
        boolean boolean17 = interval12.contains((org.joda.time.ReadableInterval) interval16);
        boolean boolean18 = interval7.contains((org.joda.time.ReadableInterval) interval12);
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (short) 10, (int) (byte) 0, 100);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.DateTime dateTime25 = new org.joda.time.DateTime(chronology24);
        org.joda.time.DateTime.Property property26 = dateTime25.yearOfEra();
        org.joda.time.Interval interval27 = property26.toInterval();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.DateTime dateTime29 = new org.joda.time.DateTime(chronology28);
        org.joda.time.DateTime.Property property30 = dateTime29.yearOfEra();
        org.joda.time.Interval interval31 = property30.toInterval();
        boolean boolean32 = interval27.contains((org.joda.time.ReadableInterval) interval31);
        java.lang.String str33 = interval31.toString();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime(chronology34);
        org.joda.time.DateTime.Property property36 = dateTime35.yearOfEra();
        org.joda.time.Interval interval37 = property36.toInterval();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.DateTime dateTime39 = new org.joda.time.DateTime(chronology38);
        org.joda.time.DateTime.Property property40 = dateTime39.yearOfEra();
        org.joda.time.Interval interval41 = property40.toInterval();
        boolean boolean42 = interval37.contains((org.joda.time.ReadableInterval) interval41);
        boolean boolean43 = interval31.isBefore((org.joda.time.ReadableInterval) interval41);
        mutablePeriod23.setPeriod((org.joda.time.ReadableInterval) interval41);
        boolean boolean45 = interval7.contains((org.joda.time.ReadableInterval) interval41);
        org.joda.time.Chronology chronology46 = interval41.getChronology();
        org.joda.time.DateTime dateTime47 = interval41.getStart();
        org.joda.time.Instant instant49 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime50 = instant49.toDateTime();
        org.joda.time.DateTime.Property property51 = dateTime50.era();
        org.joda.time.ReadablePartial readablePartial52 = null;
        org.joda.time.DateTime dateTime53 = dateTime50.withFields(readablePartial52);
        org.joda.time.DateMidnight dateMidnight54 = dateTime53.toDateMidnight();
        org.joda.time.Chronology chronology55 = dateMidnight54.getChronology();
        org.joda.time.Duration duration56 = new org.joda.time.Duration((org.joda.time.ReadableInstant) dateTime47, (org.joda.time.ReadableInstant) dateMidnight54);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant49 and dateTime50", (instant49.compareTo(dateTime50) == 0) == instant49.equals(dateTime50));
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0909");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.Instant instant5 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant7 = instant5.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime8 = instant5.toMutableDateTimeISO();
        org.joda.time.Period period9 = duration2.toPeriodTo((org.joda.time.ReadableInstant) instant5);
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.DateTime dateTime14 = dateTime12.withTimeAtStartOfDay();
        org.joda.time.Duration duration17 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration17, readableInstant18, periodType19);
        mutablePeriod20.setMonths((int) '4');
        org.joda.time.DateTime dateTime23 = dateTime12.plus((org.joda.time.ReadablePeriod) mutablePeriod20);
        org.joda.time.DateTime dateTime25 = dateTime12.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property26 = dateTime25.monthOfYear();
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType31, chronology32);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1L, (long) 10, periodType31, chronology34);
        org.joda.time.PeriodType periodType36 = periodType31.withDaysRemoved();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, (org.joda.time.ReadableInstant) dateTime25, periodType31);
        org.joda.time.Duration duration40 = duration2.withDurationAdded(525600L, 28995);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant5 and mutableDateTime8", (instant5.compareTo(mutableDateTime8) == 0) == instant5.equals(mutableDateTime8));
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0910");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration4 = null;
        boolean boolean5 = duration2.isEqual(readableDuration4);
        org.joda.time.Duration duration7 = duration2.minus((long) 1);
        org.joda.time.Duration duration9 = duration7.minus((long) '4');
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Duration duration22 = duration19.plus((long) (byte) 0);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType30, chronology31);
        org.joda.time.PeriodType periodType33 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, (org.joda.time.ReadableInstant) dateTime25, periodType33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime12, (org.joda.time.ReadableDuration) duration16, periodType33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime12, periodType36);
        org.joda.time.TimeOfDay timeOfDay38 = dateTime12.toTimeOfDay();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.DateTime dateTime40 = timeOfDay38.toDateTime(readableInstant39);
        org.joda.time.YearMonthDay yearMonthDay41 = dateTime40.toYearMonthDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime12", (instant11.compareTo(dateTime12) == 0) == instant11.equals(dateTime12));
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0911");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZone(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean11 = dateTime7.isSupported(dateTimeFieldType10);
        org.joda.time.DateTime.Property property12 = dateTime2.property(dateTimeFieldType10);
        org.joda.time.DateTime dateTime13 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds17 = duration16.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration18 = null;
        boolean boolean19 = duration16.isEqual(readableDuration18);
        org.joda.time.Duration duration21 = duration16.minus((long) 1);
        org.joda.time.Duration duration23 = duration21.minus((long) '4');
        org.joda.time.Duration duration24 = duration21.toDuration();
        org.joda.time.Duration duration26 = new org.joda.time.Duration(432000000L);
        java.lang.String str27 = duration26.toString();
        boolean boolean28 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.DateTime dateTime30 = dateTime13.withDurationAdded((org.joda.time.ReadableDuration) duration21, 7);
        org.joda.time.DateTime dateTime32 = dateTime30.plusWeeks(292278993);
        org.joda.time.MutableDateTime mutableDateTime33 = dateTime32.toMutableDateTime();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0912");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant3 = instant1.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime4 = instant1.toMutableDateTimeISO();
        java.lang.Object obj5 = null;
        org.joda.time.Instant instant6 = new org.joda.time.Instant(obj5);
        boolean boolean7 = mutableDateTime4.isAfter((org.joda.time.ReadableInstant) instant6);
        org.joda.time.Instant instant9 = instant6.withMillis((long) 8);
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        boolean boolean14 = dateTime12.isEqual(10L);
        org.joda.time.DateTime dateTime16 = dateTime12.withCenturyOfEra((int) (byte) 1);
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime19 = instant18.toDateTime();
        boolean boolean21 = dateTime19.isEqual(10L);
        org.joda.time.DateTime dateTime23 = dateTime19.withCenturyOfEra((int) (byte) 1);
        org.joda.time.DateTimeFieldType dateTimeFieldType24 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.DateTimeField dateTimeField26 = dateTimeFieldType24.getField(chronology25);
        long long29 = dateTimeField26.add(0L, (long) (short) 1);
        long long32 = dateTimeField26.add(1L, (-1));
        int int33 = dateTime19.get(dateTimeField26);
        boolean boolean34 = dateTime16.isAfter((org.joda.time.ReadableInstant) dateTime19);
        org.joda.time.Period period36 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period38 = period36.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration40 = period38.toDurationTo(readableInstant39);
        org.joda.time.Duration duration43 = duration40.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = duration43.toPeriodFrom(readableInstant44);
        org.joda.time.DateTime dateTime46 = dateTime16.plus((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableInstant) instant9, (org.joda.time.ReadableDuration) duration43);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and mutableDateTime4", (instant1.compareTo(mutableDateTime4) == 0) == instant1.equals(mutableDateTime4));
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0913");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.Instant instant15 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant16 = instant15.toInstant();
        boolean boolean17 = dateTime2.isEqual((org.joda.time.ReadableInstant) instant16);
        org.joda.time.DateTime dateTime18 = instant16.toDateTime();
        org.joda.time.Instant instant19 = dateTime18.toInstant();
        org.joda.time.Duration duration22 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period23 = duration22.toPeriod();
        org.joda.time.Duration duration25 = duration22.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = duration22.toPeriodTo(readableInstant26);
        org.joda.time.Duration duration29 = duration22.withMillis((long) (short) 0);
        org.joda.time.Duration duration32 = duration22.withDurationAdded((long) 1, (int) ' ');
        org.joda.time.Instant instant34 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime35 = instant34.toDateTime();
        boolean boolean37 = dateTime35.isEqual(10L);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, (org.joda.time.ReadableInstant) dateTime35, periodType38);
        java.lang.Object obj40 = null;
        org.joda.time.Instant instant41 = new org.joda.time.Instant(obj40);
        org.joda.time.DateTimeZone dateTimeZone42 = instant41.getZone();
        org.joda.time.DateTime dateTime43 = dateTime35.toDateTime(dateTimeZone42);
        boolean boolean44 = dateTime18.isEqual((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.DateTime.Property property45 = dateTime18.secondOfMinute();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0914");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime5 = dateTime2.withMillis(1640995200000L);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType9, chronology10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((long) (short) 0, periodType9, chronology12);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) (short) 10, periodType15);
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant19 = instant18.toInstant();
        org.joda.time.DateTime dateTime20 = instant19.toDateTimeISO();
        org.joda.time.Duration duration21 = period16.toDurationFrom((org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.Duration duration24 = new org.joda.time.Duration((-1L), (long) 23);
        org.joda.time.Period period26 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period28 = period26.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration30 = period28.toDurationTo(readableInstant29);
        org.joda.time.Duration duration33 = duration30.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = duration33.toPeriodFrom(readableInstant34);
        org.joda.time.Duration duration36 = duration24.minus((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration37 = duration21.plus((org.joda.time.ReadableDuration) duration24);
        mutablePeriod13.add((org.joda.time.ReadableDuration) duration24);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int51 = mutablePeriod50.getDays();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.DateTime dateTime55 = new org.joda.time.DateTime(chronology54);
        org.joda.time.DateTime.Property property56 = dateTime55.yearOfEra();
        org.joda.time.Interval interval57 = property56.toInterval();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.DateTime dateTime59 = new org.joda.time.DateTime(chronology58);
        org.joda.time.DateTime.Property property60 = dateTime59.yearOfEra();
        org.joda.time.Interval interval61 = property60.toInterval();
        boolean boolean62 = interval57.contains((org.joda.time.ReadableInterval) interval61);
        org.joda.time.Chronology chronology63 = interval61.getChronology();
        mutablePeriod50.setPeriod((long) 'u', (long) 1969, chronology63);
        org.joda.time.Period period65 = new org.joda.time.Period((long) (byte) 100, chronology63);
        mutablePeriod13.setPeriod((long) 1, (long) 69, chronology63);
        org.joda.time.DateTimeField dateTimeField67 = chronology63.year();
        org.joda.time.format.PeriodPrinter periodPrinter69 = null;
        org.joda.time.format.PeriodParser periodParser70 = null;
        org.joda.time.format.PeriodFormatter periodFormatter71 = new org.joda.time.format.PeriodFormatter(periodPrinter69, periodParser70);
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.format.PeriodFormatter periodFormatter73 = periodFormatter71.withParseType(periodType72);
        java.util.Locale locale74 = periodFormatter71.getLocale();
        java.util.Locale locale75 = java.util.Locale.ITALY;
        java.lang.String str76 = locale75.getScript();
        org.joda.time.format.PeriodFormatter periodFormatter77 = periodFormatter71.withLocale(locale75);
        java.util.Locale locale78 = locale75.stripExtensions();
        java.lang.String str79 = dateTimeField67.getAsText(31536000000L, locale78);
        int int80 = dateTime2.get(dateTimeField67);
        int int81 = dateTime2.getWeekyear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime20", (instant1.compareTo(dateTime20) == 0) == instant1.equals(dateTime20));
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0915");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant3 = instant1.minus(100L);
        org.joda.time.Instant instant5 = instant3.plus((long) 100);
        org.joda.time.Instant instant7 = instant3.withMillis((long) (byte) 1);
        org.joda.time.Period period9 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period11 = period9.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration13 = period11.toDurationTo(readableInstant12);
        org.joda.time.Duration duration16 = duration13.withDurationAdded((long) '#', 0);
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant20 = instant18.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime21 = instant18.toMutableDateTimeISO();
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period23 = duration16.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime21, periodType22);
        org.joda.time.Instant instant24 = instant7.minus((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Instant instant25 = instant7.toInstant();
        org.joda.time.Instant instant26 = instant7.toInstant();
        org.joda.time.Instant instant28 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime29 = instant28.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone30 = null;
        org.joda.time.DateTime dateTime31 = dateTime29.withZoneRetainFields(dateTimeZone30);
        org.joda.time.Instant instant33 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime34 = instant33.toDateTime();
        org.joda.time.DateTime.Property property35 = dateTime34.era();
        org.joda.time.DateTime dateTime36 = dateTime34.withTimeAtStartOfDay();
        org.joda.time.Duration duration39 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.PeriodType periodType41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration39, readableInstant40, periodType41);
        mutablePeriod42.setMonths((int) '4');
        org.joda.time.DateTime dateTime45 = dateTime34.plus((org.joda.time.ReadablePeriod) mutablePeriod42);
        org.joda.time.DateTime dateTime47 = dateTime34.minusWeeks((int) (byte) 1);
        int int48 = dateTime31.compareTo((org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.DateTime.Property property49 = dateTime34.minuteOfHour();
        org.joda.time.DateTime dateTime51 = dateTime34.withYear(1969);
        boolean boolean53 = dateTime51.isAfter((long) (short) -1);
        org.joda.time.LocalTime localTime54 = dateTime51.toLocalTime();
        org.joda.time.Hours hours55 = org.joda.time.Hours.hoursBetween((org.joda.time.ReadableInstant) instant26, (org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.DateTime dateTime57 = new org.joda.time.DateTime(chronology56);
        org.joda.time.DateTime.Property property58 = dateTime57.yearOfEra();
        org.joda.time.DateTime.Property property59 = dateTime57.weekOfWeekyear();
        org.joda.time.DateTime dateTime61 = dateTime57.minusSeconds((int) 'u');
        boolean boolean62 = dateTime61.isBeforeNow();
        boolean boolean64 = dateTime61.isEqual(0L);
        int int65 = dateTime61.getHourOfDay();
        java.lang.Object obj66 = null;
        org.joda.time.Instant instant67 = new org.joda.time.Instant(obj66);
        org.joda.time.DateTimeZone dateTimeZone68 = instant67.getZone();
        org.joda.time.Duration duration69 = new org.joda.time.Duration((org.joda.time.ReadableInstant) dateTime61, (org.joda.time.ReadableInstant) instant67);
        org.joda.time.Instant instant70 = instant26.plus((org.joda.time.ReadableDuration) duration69);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and mutableDateTime21", (instant1.compareTo(mutableDateTime21) == 0) == instant1.equals(mutableDateTime21));
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0916");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZone(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean11 = dateTime7.isSupported(dateTimeFieldType10);
        org.joda.time.DateTime.Property property12 = dateTime2.property(dateTimeFieldType10);
        org.joda.time.DateTime dateTime13 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.DateTime dateTime15 = dateTime13.minusSeconds((int) '#');
        long long16 = dateTime15.getMillis();
        org.joda.time.DateTime dateTime18 = dateTime15.minusMinutes((int) (short) 1);
        org.joda.time.Instant instant20 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime21 = instant20.toDateTime();
        org.joda.time.DateTime.Property property22 = dateTime21.era();
        org.joda.time.DateTime dateTime23 = dateTime21.withTimeAtStartOfDay();
        org.joda.time.Duration duration26 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration26, readableInstant27, periodType28);
        mutablePeriod29.setMonths((int) '4');
        org.joda.time.DateTime dateTime32 = dateTime21.plus((org.joda.time.ReadablePeriod) mutablePeriod29);
        org.joda.time.DateTime dateTime34 = dateTime21.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property35 = dateTime34.monthOfYear();
        org.joda.time.DateTime.Property property36 = dateTime34.weekyear();
        java.lang.Object obj37 = null;
        org.joda.time.Instant instant38 = new org.joda.time.Instant(obj37);
        org.joda.time.DateTimeZone dateTimeZone39 = instant38.getZone();
        java.lang.String str40 = dateTimeZone39.toString();
        java.lang.String str42 = dateTimeZone39.getName((long) 10);
        java.lang.String str44 = dateTimeZone39.getName((long) 8);
        int int46 = dateTimeZone39.getOffsetFromLocal((long) (short) -1);
        org.joda.time.DateTime dateTime47 = dateTime34.withZone(dateTimeZone39);
        java.lang.String str48 = dateTimeZone39.getID();
        java.lang.String str50 = dateTimeZone39.getName((long) 'x');
        boolean boolean51 = dateTimeZone39.isFixed();
        java.util.TimeZone timeZone52 = dateTimeZone39.toTimeZone();
        org.joda.time.DateTimeZone dateTimeZone53 = org.joda.time.DateTimeZone.forTimeZone(timeZone52);
        org.joda.time.MutableDateTime mutableDateTime54 = dateTime15.toMutableDateTime(dateTimeZone53);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0917");
        org.joda.time.Period period2 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period4 = period2.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration6 = period4.toDurationTo(readableInstant5);
        org.joda.time.Duration duration9 = duration6.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = duration9.toPeriodFrom(readableInstant10);
        org.joda.time.Instant instant13 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime14 = instant13.toDateTime();
        org.joda.time.DateTime.Property property15 = dateTime14.era();
        org.joda.time.Duration duration18 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration21 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period22 = duration21.toPeriod();
        org.joda.time.Duration duration24 = duration21.plus((long) (byte) 0);
        org.joda.time.Instant instant26 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime27 = instant26.toDateTime();
        boolean boolean29 = dateTime27.isEqual(10L);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType32, chronology33);
        org.joda.time.PeriodType periodType35 = periodType32.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration24, (org.joda.time.ReadableInstant) dateTime27, periodType35);
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime14, (org.joda.time.ReadableDuration) duration18, periodType35);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration9.toPeriod(periodType35, chronology38);
        org.joda.time.PeriodType periodType40 = periodType35.withHoursRemoved();
        org.joda.time.PeriodType periodType41 = periodType40.withMinutesRemoved();
        org.joda.time.Period period42 = new org.joda.time.Period((-48534346800000L), periodType40);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant13 and dateTime14", (instant13.compareTo(dateTime14) == 0) == instant13.equals(dateTime14));
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0918");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        java.lang.Object obj14 = null;
        org.joda.time.Instant instant15 = new org.joda.time.Instant(obj14);
        org.joda.time.DateTimeZone dateTimeZone16 = instant15.getZone();
        java.lang.String str17 = dateTimeZone16.toString();
        int int19 = dateTimeZone16.getOffset(1L);
        boolean boolean21 = dateTimeZone16.isStandardOffset(0L);
        org.joda.time.DateTime dateTime22 = dateTime2.withZoneRetainFields(dateTimeZone16);
        org.joda.time.DateTime dateTime24 = dateTime22.plusYears(1969);
        org.joda.time.DateTime dateTime26 = dateTime24.minusWeeks(1439);
        org.joda.time.Instant instant28 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime29 = instant28.toDateTime();
        org.joda.time.DateTime.Property property30 = dateTime29.era();
        org.joda.time.DateTime dateTime31 = dateTime29.withTimeAtStartOfDay();
        org.joda.time.Duration duration34 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration34, readableInstant35, periodType36);
        mutablePeriod37.setMonths((int) '4');
        org.joda.time.DateTime dateTime40 = dateTime29.plus((org.joda.time.ReadablePeriod) mutablePeriod37);
        org.joda.time.LocalDate localDate41 = dateTime29.toLocalDate();
        int int42 = localDate41.size();
        org.joda.time.DateTime dateTime43 = dateTime26.withFields((org.joda.time.ReadablePartial) localDate41);
        org.joda.time.Duration duration46 = new org.joda.time.Duration((long) ' ', (long) ' ');
        long long47 = duration46.getMillis();
        org.joda.time.DateTime dateTime48 = dateTime43.plus((org.joda.time.ReadableDuration) duration46);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0919");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.DateTime dateTime7 = dateTime2.withMillis((long) '4');
        org.joda.time.Instant instant9 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime10 = instant9.toDateTime();
        boolean boolean12 = dateTime10.isEqual(10L);
        org.joda.time.DateTime dateTime14 = dateTime10.withWeekOfWeekyear(8);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime7, (org.joda.time.ReadableInstant) dateTime14);
        org.joda.time.Period period17 = org.joda.time.Period.seconds((int) (short) 0);
        org.joda.time.Period period18 = period17.normalizedStandard();
        org.joda.time.Period period19 = period17.normalizedStandard();
        org.joda.time.DateTime dateTime21 = dateTime14.withPeriodAdded((org.joda.time.ReadablePeriod) period19, (int) 'u');
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime24 = instant23.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone25 = null;
        org.joda.time.DateTime dateTime26 = dateTime24.withZoneRetainFields(dateTimeZone25);
        java.util.Locale locale28 = new java.util.Locale("+00:00");
        boolean boolean29 = dateTime24.equals((java.lang.Object) "+00:00");
        org.joda.time.Instant instant31 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime32 = instant31.toDateTime();
        org.joda.time.DateTime.Property property33 = dateTime32.era();
        org.joda.time.DateTime dateTime34 = dateTime32.withTimeAtStartOfDay();
        org.joda.time.Duration duration37 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.PeriodType periodType39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration37, readableInstant38, periodType39);
        mutablePeriod40.setMonths((int) '4');
        org.joda.time.DateTime dateTime43 = dateTime32.plus((org.joda.time.ReadablePeriod) mutablePeriod40);
        org.joda.time.DateTime dateTime45 = dateTime32.withMillisOfDay(4);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType50, chronology51);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((-1L), (long) 100, periodType50);
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime24, (org.joda.time.ReadableInstant) dateTime32, periodType50);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.DateTime dateTime56 = new org.joda.time.DateTime(chronology55);
        org.joda.time.DateTime.Property property57 = dateTime56.yearOfEra();
        org.joda.time.Interval interval58 = property57.toInterval();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.DateTime dateTime60 = new org.joda.time.DateTime(chronology59);
        org.joda.time.DateTime.Property property61 = dateTime60.yearOfEra();
        org.joda.time.Interval interval62 = property61.toInterval();
        boolean boolean63 = interval58.contains((org.joda.time.ReadableInterval) interval62);
        org.joda.time.Chronology chronology64 = interval62.getChronology();
        org.joda.time.MutableDateTime mutableDateTime65 = dateTime32.toMutableDateTime(chronology64);
        org.joda.time.DateTimeField dateTimeField66 = chronology64.hourOfHalfday();
        org.joda.time.DateTime dateTime67 = org.joda.time.DateTime.now(chronology64);
        boolean boolean68 = dateTime14.isEqual((org.joda.time.ReadableInstant) dateTime67);
        org.joda.time.DateTime.Property property69 = dateTime67.millisOfDay();
        org.joda.time.DateTimeField dateTimeField70 = property69.getField();
        org.joda.time.DateTime dateTime72 = property69.addToCopy((long) 437);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0920");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = duration2.toPeriodTo(readableInstant6);
        org.joda.time.Duration duration9 = duration2.withMillis((long) (short) 0);
        org.joda.time.Duration duration12 = duration2.withDurationAdded((long) 1, (int) ' ');
        org.joda.time.Instant instant14 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant14.toDateTime();
        boolean boolean17 = dateTime15.isEqual(10L);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, (org.joda.time.ReadableInstant) dateTime15, periodType18);
        java.lang.Object obj20 = null;
        org.joda.time.Instant instant21 = new org.joda.time.Instant(obj20);
        org.joda.time.DateTimeZone dateTimeZone22 = instant21.getZone();
        org.joda.time.DateTime dateTime23 = dateTime15.toDateTime(dateTimeZone22);
        org.joda.time.DateTime dateTime25 = dateTime23.withSecondOfMinute(7);
        int int26 = dateTime25.getSecondOfMinute();
        org.joda.time.DateTime dateTime28 = dateTime25.minusMillis((int) (byte) 100);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant14 and dateTime15", (instant14.compareTo(dateTime15) == 0) == instant14.equals(dateTime15));
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0921");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property16 = dateTime15.monthOfYear();
        org.joda.time.DateTime.Property property17 = dateTime15.weekyear();
        org.joda.time.DateTime dateTime18 = dateTime15.toDateTime();
        org.joda.time.DateTime dateTime20 = dateTime15.plusHours((int) 'u');
        org.joda.time.Instant instant22 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime23 = instant22.toDateTime();
        org.joda.time.DateTime.Property property24 = dateTime23.era();
        org.joda.time.ReadablePartial readablePartial25 = null;
        org.joda.time.DateTime dateTime26 = dateTime23.withFields(readablePartial25);
        org.joda.time.DateTime dateTime28 = dateTime23.withYearOfEra(292278993);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime20, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Weeks weeks30 = minutes29.toStandardWeeks();
        org.joda.time.Period period31 = minutes29.toPeriod();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0922");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTimeField dateTimeField2 = dateTimeFieldType0.getField(chronology1);
        long long5 = dateTimeField2.add(0L, (long) (short) 1);
        long long7 = dateTimeField2.roundHalfCeiling((long) 2);
        org.joda.time.DurationField durationField8 = dateTimeField2.getLeapDurationField();
        long long10 = dateTimeField2.roundHalfFloor((-1L));
        org.joda.time.Duration duration13 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds14 = duration13.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration15 = null;
        boolean boolean16 = duration13.isEqual(readableDuration15);
        org.joda.time.Duration duration18 = duration13.minus((long) 1);
        org.joda.time.Duration duration20 = duration18.minus((long) '4');
        org.joda.time.Instant instant22 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime23 = instant22.toDateTime();
        org.joda.time.DateTime.Property property24 = dateTime23.era();
        org.joda.time.Duration duration27 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration30 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period31 = duration30.toPeriod();
        org.joda.time.Duration duration33 = duration30.plus((long) (byte) 0);
        org.joda.time.Instant instant35 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime36 = instant35.toDateTime();
        boolean boolean38 = dateTime36.isEqual(10L);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType41, chronology42);
        org.joda.time.PeriodType periodType44 = periodType41.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration33, (org.joda.time.ReadableInstant) dateTime36, periodType44);
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableDuration) duration27, periodType44);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, (org.joda.time.ReadableInstant) dateTime23, periodType47);
        org.joda.time.TimeOfDay timeOfDay49 = dateTime23.toTimeOfDay();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.DateTime dateTime51 = timeOfDay49.toDateTime(readableInstant50);
        org.joda.time.Instant instant53 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant55 = instant53.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime56 = instant53.toMutableDateTimeISO();
        org.joda.time.DateTime dateTime57 = timeOfDay49.toDateTime((org.joda.time.ReadableInstant) instant53);
        int int58 = timeOfDay49.size();
        org.joda.time.Instant instant61 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime62 = instant61.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone63 = null;
        org.joda.time.DateTime dateTime64 = dateTime62.withZoneRetainFields(dateTimeZone63);
        org.joda.time.Instant instant66 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime67 = instant66.toDateTime();
        org.joda.time.DateTime.Property property68 = dateTime67.era();
        org.joda.time.DateTime dateTime69 = dateTime67.withTimeAtStartOfDay();
        org.joda.time.Duration duration72 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.PeriodType periodType74 = null;
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration72, readableInstant73, periodType74);
        mutablePeriod75.setMonths((int) '4');
        org.joda.time.DateTime dateTime78 = dateTime67.plus((org.joda.time.ReadablePeriod) mutablePeriod75);
        org.joda.time.DateTime dateTime80 = dateTime67.minusWeeks((int) (byte) 1);
        int int81 = dateTime64.compareTo((org.joda.time.ReadableInstant) dateTime67);
        org.joda.time.DateTime.Property property82 = dateTime67.minuteOfHour();
        org.joda.time.DateTime dateTime84 = dateTime67.withYear(1969);
        org.joda.time.Chronology chronology85 = dateTime84.getChronology();
        org.joda.time.DateTimeField dateTimeField86 = chronology85.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField87 = chronology85.era();
        org.joda.time.DateTimeField dateTimeField88 = chronology85.secondOfDay();
        java.util.Locale locale90 = java.util.Locale.JAPANESE;
        java.lang.String str91 = dateTimeField88.getAsShortText(1, locale90);
        java.lang.String str92 = dateTimeField2.getAsShortText((org.joda.time.ReadablePartial) timeOfDay49, 0, locale90);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant22 and dateTime23", (instant22.compareTo(dateTime23) == 0) == instant22.equals(dateTime23));
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0923");
        org.joda.time.DurationFieldType durationFieldType0 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant2 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime3 = instant2.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone4 = null;
        org.joda.time.DateTime dateTime5 = dateTime3.withZoneRetainFields(dateTimeZone4);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        org.joda.time.DateTime.Property property9 = dateTime8.era();
        org.joda.time.DateTime dateTime10 = dateTime8.withTimeAtStartOfDay();
        org.joda.time.Duration duration13 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration13, readableInstant14, periodType15);
        mutablePeriod16.setMonths((int) '4');
        org.joda.time.DateTime dateTime19 = dateTime8.plus((org.joda.time.ReadablePeriod) mutablePeriod16);
        org.joda.time.DateTime dateTime21 = dateTime8.minusWeeks((int) (byte) 1);
        int int22 = dateTime5.compareTo((org.joda.time.ReadableInstant) dateTime8);
        org.joda.time.DateTime.Property property23 = dateTime8.minuteOfHour();
        org.joda.time.DateTime dateTime25 = dateTime8.withYear(1969);
        org.joda.time.Chronology chronology26 = dateTime25.getChronology();
        org.joda.time.DurationField durationField27 = durationFieldType0.getField(chronology26);
        int int29 = durationField27.getValue((long) 2);
        long long32 = durationField27.add((long) 70, 12);
        boolean boolean33 = durationField27.isPrecise();
        long long36 = durationField27.getMillis(101, (long) 366);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime3", (instant2.compareTo(dateTime3) == 0) == instant2.equals(dateTime3));
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0924");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        long long16 = dateTime2.getMillis();
        org.joda.time.DurationFieldType durationFieldType17 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone21 = null;
        org.joda.time.DateTime dateTime22 = dateTime20.withZoneRetainFields(dateTimeZone21);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        org.joda.time.DateTime.Property property26 = dateTime25.era();
        org.joda.time.DateTime dateTime27 = dateTime25.withTimeAtStartOfDay();
        org.joda.time.Duration duration30 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration30, readableInstant31, periodType32);
        mutablePeriod33.setMonths((int) '4');
        org.joda.time.DateTime dateTime36 = dateTime25.plus((org.joda.time.ReadablePeriod) mutablePeriod33);
        org.joda.time.DateTime dateTime38 = dateTime25.minusWeeks((int) (byte) 1);
        int int39 = dateTime22.compareTo((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.DateTime.Property property40 = dateTime25.minuteOfHour();
        org.joda.time.DateTime dateTime42 = dateTime25.withYear(1969);
        org.joda.time.Chronology chronology43 = dateTime42.getChronology();
        org.joda.time.DurationField durationField44 = durationFieldType17.getField(chronology43);
        org.joda.time.DateTime dateTime45 = dateTime2.toDateTime(chronology43);
        org.joda.time.LocalDate localDate46 = dateTime45.toLocalDate();
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.ONE;
        org.joda.time.MutablePeriod mutablePeriod48 = seconds47.toMutablePeriod();
        org.joda.time.Duration duration49 = seconds47.toStandardDuration();
        org.joda.time.Instant instant51 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime52 = instant51.toDateTime();
        org.joda.time.DateTime.Property property53 = dateTime52.era();
        org.joda.time.DateTime dateTime54 = dateTime52.withTimeAtStartOfDay();
        org.joda.time.Instant instant55 = dateTime52.toInstant();
        org.joda.time.DateMidnight dateMidnight56 = dateTime52.toDateMidnight();
        int int57 = dateMidnight56.getDayOfYear();
        boolean boolean58 = dateMidnight56.isAfterNow();
        org.joda.time.Instant instant59 = dateMidnight56.toInstant();
        org.joda.time.MutableDateTime mutableDateTime60 = instant59.toMutableDateTime();
        org.joda.time.Interval interval61 = duration49.toIntervalTo((org.joda.time.ReadableInstant) mutableDateTime60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Interval interval63 = duration49.toIntervalFrom(readableInstant62);
        org.joda.time.DateTime dateTime64 = dateTime45.minus((org.joda.time.ReadableDuration) duration49);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime45", (instant1.compareTo(dateTime45) == 0) == instant1.equals(dateTime45));
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0925");
        org.joda.time.Duration duration3 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds4 = duration3.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration5 = null;
        boolean boolean6 = duration3.isEqual(readableDuration5);
        org.joda.time.Duration duration8 = duration3.minus((long) 1);
        org.joda.time.Duration duration10 = duration8.minus((long) '4');
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTime.Property property14 = dateTime13.era();
        org.joda.time.Duration duration17 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration20 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period21 = duration20.toPeriod();
        org.joda.time.Duration duration23 = duration20.plus((long) (byte) 0);
        org.joda.time.Instant instant25 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime26 = instant25.toDateTime();
        boolean boolean28 = dateTime26.isEqual(10L);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType31, chronology32);
        org.joda.time.PeriodType periodType34 = periodType31.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, (org.joda.time.ReadableInstant) dateTime26, periodType34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime13, (org.joda.time.ReadableDuration) duration17, periodType34);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, (org.joda.time.ReadableInstant) dateTime13, periodType37);
        org.joda.time.Duration duration40 = duration8.minus((long) 7);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int51 = mutablePeriod50.getDays();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.DateTime dateTime55 = new org.joda.time.DateTime(chronology54);
        org.joda.time.DateTime.Property property56 = dateTime55.yearOfEra();
        org.joda.time.Interval interval57 = property56.toInterval();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.DateTime dateTime59 = new org.joda.time.DateTime(chronology58);
        org.joda.time.DateTime.Property property60 = dateTime59.yearOfEra();
        org.joda.time.Interval interval61 = property60.toInterval();
        boolean boolean62 = interval57.contains((org.joda.time.ReadableInterval) interval61);
        org.joda.time.Chronology chronology63 = interval61.getChronology();
        mutablePeriod50.setPeriod((long) 'u', (long) 1969, chronology63);
        org.joda.time.Period period65 = new org.joda.time.Period((long) (byte) 100, chronology63);
        org.joda.time.Period period66 = duration40.toPeriod(chronology63);
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod(10L, chronology63);
        org.joda.time.DateTimeField dateTimeField68 = chronology63.clockhourOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime13", (instant12.compareTo(dateTime13) == 0) == instant12.equals(dateTime13));
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0926");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.Instant instant15 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant16 = instant15.toInstant();
        boolean boolean17 = dateTime2.isEqual((org.joda.time.ReadableInstant) instant16);
        org.joda.time.Instant instant19 = instant16.withMillis((long) (-2147483648));
        long long20 = instant16.getMillis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0927");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.Duration duration20 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period21 = duration20.toPeriod();
        org.joda.time.Duration duration23 = duration20.plus((long) (byte) 0);
        org.joda.time.Duration duration24 = duration20.toDuration();
        org.joda.time.Duration duration25 = duration5.minus((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration28 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration28, readableInstant29, periodType30);
        org.joda.time.Duration duration34 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration34, readableInstant35, periodType36);
        boolean boolean38 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Period period39 = duration34.toPeriod();
        boolean boolean40 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration43 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds44 = duration43.toStandardSeconds();
        org.joda.time.Instant instant46 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant48 = instant46.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime49 = instant46.toMutableDateTimeISO();
        org.joda.time.Period period50 = duration43.toPeriodTo((org.joda.time.ReadableInstant) instant46);
        org.joda.time.Instant instant52 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime53 = instant52.toDateTime();
        org.joda.time.DateTime.Property property54 = dateTime53.era();
        org.joda.time.DateTime dateTime55 = dateTime53.withTimeAtStartOfDay();
        org.joda.time.Duration duration58 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.PeriodType periodType60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration58, readableInstant59, periodType60);
        mutablePeriod61.setMonths((int) '4');
        org.joda.time.DateTime dateTime64 = dateTime53.plus((org.joda.time.ReadablePeriod) mutablePeriod61);
        org.joda.time.DateTime dateTime66 = dateTime53.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property67 = dateTime66.monthOfYear();
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType72, chronology73);
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod(1L, (long) 10, periodType72, chronology75);
        org.joda.time.PeriodType periodType77 = periodType72.withDaysRemoved();
        org.joda.time.Period period78 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, (org.joda.time.ReadableInstant) dateTime66, periodType72);
        org.joda.time.Instant instant80 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant81 = instant80.toInstant();
        org.joda.time.DateTime dateTime82 = instant81.toDateTimeISO();
        org.joda.time.Period period83 = duration43.toPeriodTo((org.joda.time.ReadableInstant) dateTime82);
        org.joda.time.Duration duration84 = duration43.toDuration();
        org.joda.time.Duration duration85 = duration84.toDuration();
        boolean boolean86 = duration34.isEqual((org.joda.time.ReadableDuration) duration85);
        long long87 = duration34.getStandardSeconds();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0928");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Period period6 = duration5.toPeriod();
        org.joda.time.Duration duration8 = duration5.withMillis((long) 1969);
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.DateTime dateTime10 = new org.joda.time.DateTime(chronology9);
        org.joda.time.DateTime.Property property11 = dateTime10.yearOfEra();
        org.joda.time.Interval interval12 = property11.toInterval();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.DateTime dateTime14 = new org.joda.time.DateTime(chronology13);
        org.joda.time.DateTime.Property property15 = dateTime14.yearOfEra();
        org.joda.time.Interval interval16 = property15.toInterval();
        boolean boolean17 = interval12.contains((org.joda.time.ReadableInterval) interval16);
        java.lang.Object obj18 = null;
        org.joda.time.Instant instant19 = new org.joda.time.Instant(obj18);
        org.joda.time.DateTimeZone dateTimeZone20 = instant19.getZone();
        java.lang.String str21 = dateTimeZone20.toString();
        org.joda.time.DateTime dateTime22 = new org.joda.time.DateTime(dateTimeZone20);
        boolean boolean23 = interval12.contains((org.joda.time.ReadableInstant) dateTime22);
        org.joda.time.Duration duration26 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds27 = duration26.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration28 = null;
        boolean boolean29 = duration26.isEqual(readableDuration28);
        org.joda.time.Duration duration31 = duration26.minus((long) 1);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration26.toPeriod(chronology32);
        org.joda.time.DateTime dateTime34 = dateTime22.plus((org.joda.time.ReadableDuration) duration26);
        boolean boolean35 = duration8.equals((java.lang.Object) dateTime34);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime10 and instant19", (dateTime10.compareTo(instant19) == 0) == dateTime10.equals(instant19));
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0929");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.Instant instant15 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant16 = instant15.toInstant();
        boolean boolean17 = dateTime2.isEqual((org.joda.time.ReadableInstant) instant16);
        org.joda.time.Instant instant19 = instant16.plus((long) '4');
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0930");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property16 = dateTime15.monthOfYear();
        org.joda.time.DateTimeZone dateTimeZone17 = dateTime15.getZone();
        int int19 = dateTimeZone17.getStandardOffset((long) 9);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0931");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant3, periodType4);
        org.joda.time.Days days6 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType7 = org.joda.time.DurationFieldType.minutes();
        int int8 = days6.get(durationFieldType7);
        mutablePeriod5.add(durationFieldType7, 8);
        org.joda.time.ReadablePeriod readablePeriod11 = null;
        mutablePeriod5.add(readablePeriod11);
        int int13 = mutablePeriod5.getMonths();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.DateTime dateTime15 = new org.joda.time.DateTime(chronology14);
        org.joda.time.DateTime.Property property16 = dateTime15.yearOfEra();
        org.joda.time.Interval interval17 = property16.toInterval();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(chronology18);
        org.joda.time.DateTime.Property property20 = dateTime19.yearOfEra();
        org.joda.time.Interval interval21 = property20.toInterval();
        boolean boolean22 = interval17.contains((org.joda.time.ReadableInterval) interval21);
        mutablePeriod5.setPeriod((org.joda.time.ReadableInterval) interval17);
        org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant27 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime28 = instant27.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone29 = null;
        org.joda.time.DateTime dateTime30 = dateTime28.withZoneRetainFields(dateTimeZone29);
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime33 = instant32.toDateTime();
        org.joda.time.DateTime.Property property34 = dateTime33.era();
        org.joda.time.DateTime dateTime35 = dateTime33.withTimeAtStartOfDay();
        org.joda.time.Duration duration38 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration38, readableInstant39, periodType40);
        mutablePeriod41.setMonths((int) '4');
        org.joda.time.DateTime dateTime44 = dateTime33.plus((org.joda.time.ReadablePeriod) mutablePeriod41);
        org.joda.time.DateTime dateTime46 = dateTime33.minusWeeks((int) (byte) 1);
        int int47 = dateTime30.compareTo((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.DateTime.Property property48 = dateTime33.minuteOfHour();
        org.joda.time.DateTime dateTime50 = dateTime33.withYear(1969);
        org.joda.time.Chronology chronology51 = dateTime50.getChronology();
        org.joda.time.DurationField durationField52 = durationFieldType25.getField(chronology51);
        mutablePeriod5.add((-43199999L), chronology51);
        org.joda.time.MutablePeriod mutablePeriod54 = mutablePeriod5.toMutablePeriod();
        mutablePeriod54.setHours(1311);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant27 and dateTime28", (instant27.compareTo(dateTime28) == 0) == instant27.equals(dateTime28));
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0932");
        org.joda.time.Duration duration3 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration3, readableInstant4, periodType5);
        mutablePeriod6.setMillis((int) (short) 1);
        int int9 = mutablePeriod6.getSeconds();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.DurationFieldType durationFieldType11 = weeks10.getFieldType();
        mutablePeriod6.add(durationFieldType11, (int) (byte) 0);
        mutablePeriod6.addMonths(0);
        org.joda.time.DateTimeFieldType dateTimeFieldType16 = org.joda.time.DateTimeFieldType.weekOfWeekyear();
        org.joda.time.DurationFieldType durationFieldType17 = dateTimeFieldType16.getRangeDurationType();
        int int18 = mutablePeriod6.get(durationFieldType17);
        org.joda.time.Instant instant20 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime21 = instant20.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone22 = null;
        org.joda.time.DateTime dateTime23 = dateTime21.withZoneRetainFields(dateTimeZone22);
        org.joda.time.Instant instant25 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime26 = instant25.toDateTime();
        org.joda.time.DateTime.Property property27 = dateTime26.era();
        org.joda.time.DateTime dateTime28 = dateTime26.withTimeAtStartOfDay();
        org.joda.time.Duration duration31 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.PeriodType periodType33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration31, readableInstant32, periodType33);
        mutablePeriod34.setMonths((int) '4');
        org.joda.time.DateTime dateTime37 = dateTime26.plus((org.joda.time.ReadablePeriod) mutablePeriod34);
        org.joda.time.DateTime dateTime39 = dateTime26.minusWeeks((int) (byte) 1);
        int int40 = dateTime23.compareTo((org.joda.time.ReadableInstant) dateTime26);
        org.joda.time.DateTime.Property property41 = dateTime26.minuteOfHour();
        org.joda.time.DateTime dateTime43 = dateTime26.withYear(1969);
        org.joda.time.Chronology chronology44 = dateTime43.getChronology();
        org.joda.time.DateTimeField dateTimeField45 = chronology44.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField46 = chronology44.era();
        org.joda.time.DateTimeField dateTimeField47 = chronology44.hourOfHalfday();
        org.joda.time.DurationField durationField48 = durationFieldType17.getField(chronology44);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((long) 2, chronology44);
        mutablePeriod49.addYears(31);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant20 and dateTime21", (instant20.compareTo(dateTime21) == 0) == instant20.equals(dateTime21));
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0933");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.weekyearOfCentury();
        org.joda.time.Duration duration4 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, readableInstant5, periodType6);
        org.joda.time.Days days8 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType9 = org.joda.time.DurationFieldType.minutes();
        int int10 = days8.get(durationFieldType9);
        mutablePeriod7.add(durationFieldType9, 8);
        org.joda.time.ReadablePeriod readablePeriod13 = null;
        mutablePeriod7.add(readablePeriod13);
        int int15 = mutablePeriod7.getMonths();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.DateTime dateTime17 = new org.joda.time.DateTime(chronology16);
        org.joda.time.DateTime.Property property18 = dateTime17.yearOfEra();
        org.joda.time.Interval interval19 = property18.toInterval();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.DateTime dateTime21 = new org.joda.time.DateTime(chronology20);
        org.joda.time.DateTime.Property property22 = dateTime21.yearOfEra();
        org.joda.time.Interval interval23 = property22.toInterval();
        boolean boolean24 = interval19.contains((org.joda.time.ReadableInterval) interval23);
        mutablePeriod7.setPeriod((org.joda.time.ReadableInterval) interval19);
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant29 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime30 = instant29.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone31 = null;
        org.joda.time.DateTime dateTime32 = dateTime30.withZoneRetainFields(dateTimeZone31);
        org.joda.time.Instant instant34 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime35 = instant34.toDateTime();
        org.joda.time.DateTime.Property property36 = dateTime35.era();
        org.joda.time.DateTime dateTime37 = dateTime35.withTimeAtStartOfDay();
        org.joda.time.Duration duration40 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.PeriodType periodType42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration40, readableInstant41, periodType42);
        mutablePeriod43.setMonths((int) '4');
        org.joda.time.DateTime dateTime46 = dateTime35.plus((org.joda.time.ReadablePeriod) mutablePeriod43);
        org.joda.time.DateTime dateTime48 = dateTime35.minusWeeks((int) (byte) 1);
        int int49 = dateTime32.compareTo((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.DateTime.Property property50 = dateTime35.minuteOfHour();
        org.joda.time.DateTime dateTime52 = dateTime35.withYear(1969);
        org.joda.time.Chronology chronology53 = dateTime52.getChronology();
        org.joda.time.DurationField durationField54 = durationFieldType27.getField(chronology53);
        mutablePeriod7.add((-43199999L), chronology53);
        org.joda.time.DurationField durationField56 = chronology53.millis();
        org.joda.time.DurationField durationField57 = chronology53.months();
        org.joda.time.DateTime dateTime58 = new org.joda.time.DateTime((long) 69, chronology53);
        org.joda.time.DateTimeField dateTimeField59 = chronology53.minuteOfDay();
        org.joda.time.DurationField durationField60 = chronology53.months();
        org.joda.time.DateTime dateTime61 = org.joda.time.DateTime.now(chronology53);
        org.joda.time.DateTimeField dateTimeField62 = dateTimeFieldType0.getField(chronology53);
        org.joda.time.DurationField durationField63 = chronology53.days();
        org.joda.time.Instant instant65 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant67 = instant65.minus(100L);
        org.joda.time.DateTimeZone dateTimeZone68 = instant67.getZone();
        java.lang.Object obj69 = null;
        org.joda.time.Instant instant70 = new org.joda.time.Instant(obj69);
        org.joda.time.DateTimeZone dateTimeZone71 = instant70.getZone();
        boolean boolean72 = dateTimeZone71.isFixed();
        org.joda.time.DateTimeZone.setDefault(dateTimeZone71);
        long long75 = dateTimeZone68.getMillisKeepLocal(dateTimeZone71, (-625L));
        org.joda.time.Chronology chronology76 = chronology53.withZone(dateTimeZone71);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant29 and dateTime30", (instant29.compareTo(dateTime30) == 0) == instant29.equals(dateTime30));
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0934");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = seconds0.getFieldType();
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period5 = duration4.toPeriod();
        org.joda.time.Duration duration7 = duration4.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration4.toPeriodTo(readableInstant8);
        org.joda.time.Duration duration12 = duration4.withDurationAdded((long) (short) -1, (int) (byte) 100);
        org.joda.time.Seconds seconds13 = duration12.toStandardSeconds();
        org.joda.time.Seconds seconds14 = seconds0.plus(seconds13);
        org.joda.time.Duration duration15 = seconds14.toStandardDuration();
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.ONE;
        org.joda.time.DurationFieldType durationFieldType17 = seconds16.getFieldType();
        org.joda.time.PeriodType periodType18 = seconds16.getPeriodType();
        org.joda.time.Seconds seconds19 = seconds14.plus(seconds16);
        org.joda.time.DurationFieldType durationFieldType20 = seconds14.getFieldType();
        org.joda.time.Instant instant22 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime23 = instant22.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone24 = null;
        org.joda.time.DateTime dateTime25 = dateTime23.withZoneRetainFields(dateTimeZone24);
        org.joda.time.Instant instant27 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime28 = instant27.toDateTime();
        org.joda.time.DateTime.Property property29 = dateTime28.era();
        org.joda.time.DateTime dateTime30 = dateTime28.withTimeAtStartOfDay();
        org.joda.time.Duration duration33 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration33, readableInstant34, periodType35);
        mutablePeriod36.setMonths((int) '4');
        org.joda.time.DateTime dateTime39 = dateTime28.plus((org.joda.time.ReadablePeriod) mutablePeriod36);
        org.joda.time.DateTime dateTime41 = dateTime28.minusWeeks((int) (byte) 1);
        int int42 = dateTime25.compareTo((org.joda.time.ReadableInstant) dateTime28);
        org.joda.time.DateTime.Property property43 = dateTime28.minuteOfHour();
        org.joda.time.DateTime dateTime45 = dateTime28.withYear(1969);
        org.joda.time.Chronology chronology46 = dateTime45.getChronology();
        org.joda.time.DateTimeField dateTimeField47 = chronology46.year();
        org.joda.time.DateTimeField dateTimeField48 = chronology46.era();
        org.joda.time.DateTimeField dateTimeField49 = chronology46.dayOfYear();
        org.joda.time.DurationField durationField50 = chronology46.hours();
        org.joda.time.DurationField durationField51 = durationFieldType20.getField(chronology46);
        org.joda.time.DurationField durationField52 = chronology46.eras();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField52, durationField50, and durationField51", !(durationField52.compareTo(durationField50) == 0) || (Math.signum(durationField52.compareTo(durationField51)) == Math.signum(durationField50.compareTo(durationField51))));
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0935");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.DateTime.Property property18 = dateTime8.yearOfEra();
        java.util.GregorianCalendar gregorianCalendar19 = dateTime8.toGregorianCalendar();
        org.joda.time.DateTime dateTime21 = dateTime8.minusMillis((int) (short) -1);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.DateTime dateTime23 = new org.joda.time.DateTime(chronology22);
        org.joda.time.DateTime.Property property24 = dateTime23.yearOfEra();
        org.joda.time.DateTime.Property property25 = dateTime23.weekOfWeekyear();
        org.joda.time.DateTime.Property property26 = dateTime23.hourOfDay();
        int int27 = dateTime23.getMillisOfDay();
        boolean boolean28 = dateTime8.isBefore((org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration31 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period32 = duration31.toPeriod();
        org.joda.time.Duration duration35 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period36 = duration35.toPeriod();
        boolean boolean37 = duration31.isEqual((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardSeconds((long) (-292275054));
        org.joda.time.Duration duration40 = duration31.plus((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration41 = duration31.toDuration();
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType45, chronology46);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((long) (short) 0, periodType45, chronology48);
        org.joda.time.DurationFieldType durationFieldType50 = org.joda.time.DurationFieldType.minutes();
        int int51 = periodType45.indexOf(durationFieldType50);
        org.joda.time.PeriodType periodType52 = periodType45.withYearsRemoved();
        org.joda.time.PeriodType periodType53 = periodType45.withSecondsRemoved();
        org.joda.time.PeriodType periodType54 = periodType45.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableDuration) duration41, periodType45);
        mutablePeriod55.setYears(9);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0936");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period3 = period1.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration5 = period3.toDurationTo(readableInstant4);
        org.joda.time.Duration duration8 = duration5.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = duration8.toPeriodFrom(readableInstant9);
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTime.Property property14 = dateTime13.era();
        org.joda.time.Duration duration17 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration20 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period21 = duration20.toPeriod();
        org.joda.time.Duration duration23 = duration20.plus((long) (byte) 0);
        org.joda.time.Instant instant25 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime26 = instant25.toDateTime();
        boolean boolean28 = dateTime26.isEqual(10L);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType31, chronology32);
        org.joda.time.PeriodType periodType34 = periodType31.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, (org.joda.time.ReadableInstant) dateTime26, periodType34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime13, (org.joda.time.ReadableDuration) duration17, periodType34);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration8.toPeriod(periodType34, chronology37);
        org.joda.time.Instant instant40 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime41 = instant40.toDateTime();
        org.joda.time.DateTime.Property property42 = dateTime41.era();
        org.joda.time.DateTime dateTime43 = dateTime41.withTimeAtStartOfDay();
        org.joda.time.Duration duration46 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.PeriodType periodType48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration46, readableInstant47, periodType48);
        mutablePeriod49.setMonths((int) '4');
        org.joda.time.DateTime dateTime52 = dateTime41.plus((org.joda.time.ReadablePeriod) mutablePeriod49);
        org.joda.time.DateTime dateTime54 = dateTime41.minusWeeks((int) (byte) 1);
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, (org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.Period period57 = period55.plusSeconds(31);
        int int58 = period55.getMinutes();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime13", (instant12.compareTo(dateTime13) == 0) == instant12.equals(dateTime13));
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0937");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.era();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField29 = chronology25.yearOfCentury();
        org.joda.time.DurationField durationField30 = chronology25.minutes();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0938");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period3 = period1.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration5 = period3.toDurationTo(readableInstant4);
        org.joda.time.Duration duration8 = duration5.withDurationAdded((long) '#', 0);
        org.joda.time.Duration duration11 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds12 = duration11.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration13 = null;
        boolean boolean14 = duration11.isEqual(readableDuration13);
        boolean boolean15 = duration8.isEqual(readableDuration13);
        long long16 = duration8.getMillis();
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((long) (short) 10, periodType18);
        org.joda.time.Instant instant21 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant22 = instant21.toInstant();
        org.joda.time.DateTime dateTime23 = instant22.toDateTimeISO();
        org.joda.time.Duration duration24 = period19.toDurationFrom((org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration27 = new org.joda.time.Duration((-1L), (long) 23);
        org.joda.time.Period period29 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period31 = period29.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Duration duration33 = period31.toDurationTo(readableInstant32);
        org.joda.time.Duration duration36 = duration33.withDurationAdded((long) '#', 0);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = duration36.toPeriodFrom(readableInstant37);
        org.joda.time.Duration duration39 = duration27.minus((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Duration duration40 = duration24.plus((org.joda.time.ReadableDuration) duration27);
        boolean boolean41 = duration8.isEqual((org.joda.time.ReadableDuration) duration40);
        org.joda.time.Duration duration44 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.PeriodType periodType46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration44, readableInstant45, periodType46);
        mutablePeriod47.setMillis((int) (short) 1);
        org.joda.time.Duration duration52 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period53 = duration52.toPeriod();
        org.joda.time.Duration duration55 = duration52.plus((long) (byte) 0);
        org.joda.time.Duration duration56 = duration52.toDuration();
        org.joda.time.Instant instant58 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime59 = instant58.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone60 = null;
        org.joda.time.DateTime dateTime61 = dateTime59.withZoneRetainFields(dateTimeZone60);
        org.joda.time.Instant instant63 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime64 = instant63.toDateTime();
        org.joda.time.DateTime.Property property65 = dateTime64.era();
        org.joda.time.DateTime dateTime66 = dateTime64.withTimeAtStartOfDay();
        org.joda.time.Duration duration69 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.PeriodType periodType71 = null;
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration69, readableInstant70, periodType71);
        mutablePeriod72.setMonths((int) '4');
        org.joda.time.DateTime dateTime75 = dateTime64.plus((org.joda.time.ReadablePeriod) mutablePeriod72);
        org.joda.time.DateTime dateTime77 = dateTime64.minusWeeks((int) (byte) 1);
        int int78 = dateTime61.compareTo((org.joda.time.ReadableInstant) dateTime64);
        org.joda.time.DateTime.Property property79 = dateTime64.minuteOfHour();
        org.joda.time.DateTime dateTime81 = dateTime64.withYear(1969);
        org.joda.time.Chronology chronology82 = dateTime81.getChronology();
        org.joda.time.DateTimeField dateTimeField83 = chronology82.year();
        org.joda.time.DateTimeField dateTimeField84 = chronology82.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField85 = chronology82.centuryOfEra();
        mutablePeriod47.setPeriod((org.joda.time.ReadableDuration) duration52, chronology82);
        org.joda.time.Duration duration87 = duration40.plus((org.joda.time.ReadableDuration) duration52);
        java.lang.String str88 = duration87.toString();
        java.lang.String str89 = duration87.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant21 and dateTime23", (instant21.compareTo(dateTime23) == 0) == instant21.equals(dateTime23));
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0939");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.withMillisOfDay(4);
        org.joda.time.DateTimeZone dateTimeZone16 = dateTime2.getZone();
        int int17 = dateTime2.getEra();
        org.joda.time.DateTime dateTime19 = dateTime2.plusMonths((-100));
        org.joda.time.DateTime.Property property20 = dateTime19.dayOfMonth();
        org.joda.time.Instant instant22 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime23 = instant22.toDateTime();
        org.joda.time.DateTime.Property property24 = dateTime23.era();
        org.joda.time.DateTime dateTime25 = dateTime23.withTimeAtStartOfDay();
        org.joda.time.Duration duration28 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration28, readableInstant29, periodType30);
        mutablePeriod31.setMonths((int) '4');
        org.joda.time.DateTime dateTime34 = dateTime23.plus((org.joda.time.ReadablePeriod) mutablePeriod31);
        org.joda.time.LocalDate localDate35 = dateTime23.toLocalDate();
        int int36 = localDate35.size();
        org.joda.time.Instant instant38 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime39 = instant38.toDateTime();
        org.joda.time.DateTime.Property property40 = dateTime39.era();
        org.joda.time.DateTime dateTime41 = dateTime39.withTimeAtStartOfDay();
        org.joda.time.Duration duration44 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.PeriodType periodType46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration44, readableInstant45, periodType46);
        mutablePeriod47.setMonths((int) '4');
        org.joda.time.DateTime dateTime50 = dateTime39.plus((org.joda.time.ReadablePeriod) mutablePeriod47);
        org.joda.time.LocalDate localDate51 = dateTime39.toLocalDate();
        int int52 = localDate35.compareTo((org.joda.time.ReadablePartial) localDate51);
        org.joda.time.DateTime dateTime53 = dateTime19.withFields((org.joda.time.ReadablePartial) localDate35);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0940");
        org.joda.time.Duration duration4 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, readableInstant5, periodType6);
        mutablePeriod7.setMillis((int) (short) 1);
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period13 = duration12.toPeriod();
        org.joda.time.Duration duration15 = duration12.plus((long) (byte) 0);
        org.joda.time.Duration duration16 = duration12.toDuration();
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime19 = instant18.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone20 = null;
        org.joda.time.DateTime dateTime21 = dateTime19.withZoneRetainFields(dateTimeZone20);
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime24 = instant23.toDateTime();
        org.joda.time.DateTime.Property property25 = dateTime24.era();
        org.joda.time.DateTime dateTime26 = dateTime24.withTimeAtStartOfDay();
        org.joda.time.Duration duration29 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.PeriodType periodType31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration29, readableInstant30, periodType31);
        mutablePeriod32.setMonths((int) '4');
        org.joda.time.DateTime dateTime35 = dateTime24.plus((org.joda.time.ReadablePeriod) mutablePeriod32);
        org.joda.time.DateTime dateTime37 = dateTime24.minusWeeks((int) (byte) 1);
        int int38 = dateTime21.compareTo((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.DateTime.Property property39 = dateTime24.minuteOfHour();
        org.joda.time.DateTime dateTime41 = dateTime24.withYear(1969);
        org.joda.time.Chronology chronology42 = dateTime41.getChronology();
        org.joda.time.DateTimeField dateTimeField43 = chronology42.year();
        org.joda.time.DateTimeField dateTimeField44 = chronology42.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField45 = chronology42.centuryOfEra();
        mutablePeriod7.setPeriod((org.joda.time.ReadableDuration) duration12, chronology42);
        org.joda.time.Period period47 = new org.joda.time.Period((-18849023999324L), 172800000L, chronology42);
        org.joda.time.DurationField durationField48 = chronology42.weeks();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant18 and dateTime19", (instant18.compareTo(dateTime19) == 0) == instant18.equals(dateTime19));
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0941");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.TimeOfDay timeOfDay6 = dateTime2.toTimeOfDay();
        org.joda.time.Instant instant8 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime9 = instant8.toDateTime();
        org.joda.time.DateTime.Property property10 = dateTime9.era();
        org.joda.time.DateTime dateTime11 = dateTime9.withTimeAtStartOfDay();
        org.joda.time.Instant instant12 = dateTime9.toInstant();
        org.joda.time.DateMidnight dateMidnight13 = dateTime9.toDateMidnight();
        org.joda.time.DateTime dateTime16 = dateTime9.withDurationAdded(0L, (int) 'a');
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) dateTime16);
        org.joda.time.DateTime dateTime19 = dateTime16.plusWeeks(49);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0942");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.Interval interval7 = property6.toInterval();
        boolean boolean8 = interval3.contains((org.joda.time.ReadableInterval) interval7);
        java.lang.String str9 = interval3.toString();
        long long10 = interval3.getEndMillis();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval3);
        org.joda.time.Instant instant13 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime14 = instant13.toDateTime();
        org.joda.time.DateTime.Property property15 = dateTime14.era();
        int int16 = dateTime14.getWeekOfWeekyear();
        int int17 = dateTime14.getMonthOfYear();
        boolean boolean18 = interval3.isBefore((org.joda.time.ReadableInstant) dateTime14);
        org.joda.time.DateTime dateTime19 = dateTime14.withEarlierOffsetAtOverlap();
        int int20 = dateTime14.getDayOfWeek();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant13 and dateTime14", (instant13.compareTo(dateTime14) == 0) == instant13.equals(dateTime14));
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0943");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        boolean boolean4 = dateTime2.isEqual(10L);
        org.joda.time.DateTime dateTime6 = dateTime2.withCenturyOfEra((int) (byte) 1);
        org.joda.time.DateTimeFieldType dateTimeFieldType7 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.DateTimeField dateTimeField9 = dateTimeFieldType7.getField(chronology8);
        long long12 = dateTimeField9.add(0L, (long) (short) 1);
        long long15 = dateTimeField9.add(1L, (-1));
        int int16 = dateTime2.get(dateTimeField9);
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime19 = instant18.toDateTime();
        org.joda.time.DateTime.Property property20 = dateTime19.era();
        org.joda.time.DateTime dateTime21 = dateTime19.withTimeAtStartOfDay();
        org.joda.time.Duration duration24 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration24, readableInstant25, periodType26);
        mutablePeriod27.setMonths((int) '4');
        org.joda.time.DateTime dateTime30 = dateTime19.plus((org.joda.time.ReadablePeriod) mutablePeriod27);
        org.joda.time.DateTime dateTime32 = dateTime19.minusWeeks((int) (byte) 1);
        long long33 = dateTime19.getMillis();
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime37 = instant36.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone38 = null;
        org.joda.time.DateTime dateTime39 = dateTime37.withZoneRetainFields(dateTimeZone38);
        org.joda.time.Instant instant41 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime42 = instant41.toDateTime();
        org.joda.time.DateTime.Property property43 = dateTime42.era();
        org.joda.time.DateTime dateTime44 = dateTime42.withTimeAtStartOfDay();
        org.joda.time.Duration duration47 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.PeriodType periodType49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration47, readableInstant48, periodType49);
        mutablePeriod50.setMonths((int) '4');
        org.joda.time.DateTime dateTime53 = dateTime42.plus((org.joda.time.ReadablePeriod) mutablePeriod50);
        org.joda.time.DateTime dateTime55 = dateTime42.minusWeeks((int) (byte) 1);
        int int56 = dateTime39.compareTo((org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.DateTime.Property property57 = dateTime42.minuteOfHour();
        org.joda.time.DateTime dateTime59 = dateTime42.withYear(1969);
        org.joda.time.Chronology chronology60 = dateTime59.getChronology();
        org.joda.time.DurationField durationField61 = durationFieldType34.getField(chronology60);
        org.joda.time.DateTime dateTime62 = dateTime19.toDateTime(chronology60);
        org.joda.time.DateTime dateTime63 = dateTime2.toDateTime(chronology60);
        org.joda.time.DateTimeField dateTimeField64 = chronology60.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField65 = chronology60.centuryOfEra();
        long long68 = dateTimeField65.add(31449599999L, (int) (byte) 100);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0944");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property16 = dateTime15.monthOfYear();
        org.joda.time.DateTime.Property property17 = dateTime15.weekyear();
        java.lang.Object obj18 = null;
        org.joda.time.Instant instant19 = new org.joda.time.Instant(obj18);
        org.joda.time.DateTimeZone dateTimeZone20 = instant19.getZone();
        java.lang.String str21 = dateTimeZone20.toString();
        java.lang.String str23 = dateTimeZone20.getName((long) 10);
        java.lang.String str25 = dateTimeZone20.getName((long) 8);
        int int27 = dateTimeZone20.getOffsetFromLocal((long) (short) -1);
        org.joda.time.DateTime dateTime28 = dateTime15.withZone(dateTimeZone20);
        java.lang.String str29 = dateTimeZone20.getID();
        java.lang.String str31 = dateTimeZone20.getName((long) 'x');
        boolean boolean32 = dateTimeZone20.isFixed();
        java.util.TimeZone timeZone33 = dateTimeZone20.toTimeZone();
        org.joda.time.DateTimeZone dateTimeZone34 = org.joda.time.DateTimeZone.forTimeZone(timeZone33);
        long long37 = dateTimeZone34.adjustOffset(1972L, true);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0945");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (short) 10, periodType1);
        org.joda.time.Instant instant4 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant5 = instant4.toInstant();
        org.joda.time.DateTime dateTime6 = instant5.toDateTimeISO();
        org.joda.time.Duration duration7 = period2.toDurationFrom((org.joda.time.ReadableInstant) dateTime6);
        org.joda.time.Period period9 = period2.plusMonths(1969);
        org.joda.time.Period period11 = period9.minusMillis(86399);
        org.joda.time.Period period13 = period9.minusHours(23);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant4 and dateTime6", (instant4.compareTo(dateTime6) == 0) == instant4.equals(dateTime6));
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0946");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.millisOfDay();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.hourOfDay();
        org.joda.time.DateTimeField dateTimeField29 = chronology25.clockhourOfHalfday();
        org.joda.time.DateTimeField dateTimeField30 = chronology25.year();
        int int32 = dateTimeField30.getLeapAmount((-43200000L));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0947");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.DateTime.Property property18 = dateTime8.yearOfEra();
        int int19 = dateTime8.getDayOfMonth();
        org.joda.time.Instant instant20 = dateTime8.toInstant();
        org.joda.time.DateTime.Property property21 = dateTime8.millisOfDay();
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant25 = instant23.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime26 = instant23.toMutableDateTimeISO();
        java.lang.Object obj27 = null;
        org.joda.time.Instant instant28 = new org.joda.time.Instant(obj27);
        boolean boolean29 = mutableDateTime26.isAfter((org.joda.time.ReadableInstant) instant28);
        org.joda.time.Instant instant31 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant32 = instant31.toInstant();
        org.joda.time.DateTime dateTime33 = instant32.toDateTimeISO();
        org.joda.time.DateTime dateTime34 = dateTime33.withLaterOffsetAtOverlap();
        int int35 = instant28.compareTo((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Instant instant38 = instant28.withDurationAdded((long) (byte) 10, (-1));
        org.joda.time.Instant instant40 = instant38.minus((long) 35);
        org.joda.time.Duration duration41 = new org.joda.time.Duration((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableInstant) instant40);
        org.joda.time.DateTime dateTime43 = dateTime8.minusMonths(2922789);
        int int44 = dateTime43.getYearOfEra();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0948");
        java.util.Locale locale0 = java.util.Locale.CHINA;
        java.util.Locale locale1 = java.util.Locale.GERMAN;
        java.lang.String str2 = locale0.getDisplayCountry(locale1);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime(chronology3);
        org.joda.time.DateTime.Property property5 = dateTime4.yearOfEra();
        int int6 = property5.getMaximumValue();
        java.lang.Object obj7 = null;
        org.joda.time.Instant instant8 = new org.joda.time.Instant(obj7);
        org.joda.time.DateTimeZone dateTimeZone9 = instant8.getZone();
        java.lang.String str10 = dateTimeZone9.toString();
        org.joda.time.DateTime dateTime11 = new org.joda.time.DateTime(dateTimeZone9);
        java.util.Locale locale13 = java.util.Locale.JAPANESE;
        java.lang.String str14 = locale13.getDisplayScript();
        java.lang.String str15 = dateTimeZone9.getShortName(100L, locale13);
        java.lang.String str16 = locale13.getScript();
        java.lang.String str17 = property5.getAsText(locale13);
        java.lang.String str18 = locale0.getDisplayScript(locale13);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime4 and instant8", (dateTime4.compareTo(instant8) == 0) == dateTime4.equals(instant8));
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0949");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.millisOfDay();
        java.util.Locale locale29 = null;
        java.lang.String str30 = dateTimeField27.getAsText(70, locale29);
        long long33 = dateTimeField27.getDifferenceAsLong(248399899L, 0L);
        long long35 = dateTimeField27.roundFloor((long) 292278993);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0950");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        org.joda.time.DateTime.Property property21 = dateTime20.era();
        org.joda.time.DateTime dateTime22 = dateTime20.withTimeAtStartOfDay();
        org.joda.time.Instant instant23 = dateTime20.toInstant();
        org.joda.time.DateTime dateTime25 = dateTime20.withMillis((long) '4');
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.DateTime dateTime28 = dateTime20.minusMillis((-1));
        boolean boolean30 = dateTime20.isAfter((long) 8);
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant34 = instant32.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime35 = instant32.toMutableDateTimeISO();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.DateTime dateTime37 = new org.joda.time.DateTime(chronology36);
        org.joda.time.DateTime.Property property38 = dateTime37.yearOfEra();
        org.joda.time.DateTime.Property property39 = dateTime37.weekOfWeekyear();
        boolean boolean40 = mutableDateTime35.isBefore((org.joda.time.ReadableInstant) dateTime37);
        org.joda.time.DateTime.Property property41 = dateTime37.dayOfWeek();
        boolean boolean42 = property41.isLeap();
        org.joda.time.DateTime dateTime43 = property41.roundHalfCeilingCopy();
        org.joda.time.Period period45 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period47 = period45.minusMonths((int) (short) 10);
        org.joda.time.Period period49 = period47.withSeconds((int) '4');
        org.joda.time.Period period50 = period49.negated();
        org.joda.time.DateTime dateTime51 = dateTime43.minus((org.joda.time.ReadablePeriod) period50);
        org.joda.time.DateTime.Property property52 = dateTime43.hourOfDay();
        int int53 = dateTime20.compareTo((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.DateTime.Property property54 = dateTime20.secondOfMinute();
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.PeriodType periodType56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime20, readableInstant55, periodType56);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0951");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        org.joda.time.DateTime.Property property21 = dateTime20.era();
        org.joda.time.DateTime dateTime22 = dateTime20.withTimeAtStartOfDay();
        org.joda.time.Instant instant23 = dateTime20.toInstant();
        org.joda.time.DateTime dateTime25 = dateTime20.withMillis((long) '4');
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.DateTime dateTime28 = dateTime20.toDateTime(chronology27);
        org.joda.time.DateTime dateTime30 = dateTime28.plusWeeks(53);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0952");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration4 = null;
        boolean boolean5 = duration2.isEqual(readableDuration4);
        org.joda.time.Duration duration7 = duration2.minus((long) 1);
        org.joda.time.Duration duration9 = duration7.minus((long) '4');
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Duration duration22 = duration19.plus((long) (byte) 0);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType30, chronology31);
        org.joda.time.PeriodType periodType33 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, (org.joda.time.ReadableInstant) dateTime25, periodType33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime12, (org.joda.time.ReadableDuration) duration16, periodType33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime12, periodType36);
        org.joda.time.TimeOfDay timeOfDay38 = dateTime12.toTimeOfDay();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.DateTime dateTime40 = timeOfDay38.toDateTime(readableInstant39);
        org.joda.time.DateTime dateTime41 = dateTime40.withLaterOffsetAtOverlap();
        org.joda.time.DateTime dateTime43 = dateTime40.withYearOfCentury(5);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime12", (instant11.compareTo(dateTime12) == 0) == instant11.equals(dateTime12));
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0953");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(chronology2);
        org.joda.time.DateTime.Property property4 = dateTime3.yearOfEra();
        org.joda.time.Interval interval5 = property4.toInterval();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.DateTime dateTime7 = new org.joda.time.DateTime(chronology6);
        org.joda.time.DateTime.Property property8 = dateTime7.yearOfEra();
        org.joda.time.Interval interval9 = property8.toInterval();
        boolean boolean10 = interval5.contains((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Chronology chronology11 = interval9.getChronology();
        org.joda.time.DurationField durationField12 = chronology11.weeks();
        org.joda.time.DateTimeField dateTimeField13 = chronology11.minuteOfDay();
        org.joda.time.DurationField durationField14 = chronology11.days();
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTime.Property property18 = dateTime17.era();
        org.joda.time.DateTime dateTime19 = property18.withMinimumValue();
        int int20 = property18.getMaximumValueOverall();
        java.util.Locale locale21 = java.util.Locale.ENGLISH;
        java.lang.String str22 = locale21.getScript();
        java.lang.String str23 = locale21.getDisplayCountry();
        int int24 = property18.getMaximumShortTextLength(locale21);
        org.joda.time.DateTime dateTime25 = property18.withMaximumValue();
        org.joda.time.LocalTime localTime26 = dateTime25.toLocalTime();
        long long28 = chronology11.set((org.joda.time.ReadablePartial) localTime26, (long) (byte) 10);
        org.joda.time.DurationField durationField29 = chronology11.millis();
        org.joda.time.DateTimeField dateTimeField30 = chronology11.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField31 = chronology11.millisOfSecond();
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) (-2147483647), 8380845299L, chronology11);
        mutablePeriod32.setPeriod((int) 'a', 2922789, 9, 3, 0, 19, 366, 8);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant16 and dateTime17", (instant16.compareTo(dateTime17) == 0) == instant16.equals(dateTime17));
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0954");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.DateTime dateTime29 = dateTime25.withCenturyOfEra((int) (byte) 1);
        boolean boolean30 = dateTime7.isAfter((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime33 = instant32.toDateTime();
        org.joda.time.DateTime.Property property34 = dateTime33.era();
        org.joda.time.DateTime dateTime35 = dateTime33.withTimeAtStartOfDay();
        org.joda.time.Duration duration38 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration38, readableInstant39, periodType40);
        mutablePeriod41.setMonths((int) '4');
        org.joda.time.DateTime dateTime44 = dateTime33.plus((org.joda.time.ReadablePeriod) mutablePeriod41);
        org.joda.time.DateTime dateTime46 = dateTime33.minusWeeks((int) (byte) 1);
        long long47 = dateTime33.getMillis();
        org.joda.time.DurationFieldType durationFieldType48 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant50 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime51 = instant50.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone52 = null;
        org.joda.time.DateTime dateTime53 = dateTime51.withZoneRetainFields(dateTimeZone52);
        org.joda.time.Instant instant55 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime56 = instant55.toDateTime();
        org.joda.time.DateTime.Property property57 = dateTime56.era();
        org.joda.time.DateTime dateTime58 = dateTime56.withTimeAtStartOfDay();
        org.joda.time.Duration duration61 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.PeriodType periodType63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration61, readableInstant62, periodType63);
        mutablePeriod64.setMonths((int) '4');
        org.joda.time.DateTime dateTime67 = dateTime56.plus((org.joda.time.ReadablePeriod) mutablePeriod64);
        org.joda.time.DateTime dateTime69 = dateTime56.minusWeeks((int) (byte) 1);
        int int70 = dateTime53.compareTo((org.joda.time.ReadableInstant) dateTime56);
        org.joda.time.DateTime.Property property71 = dateTime56.minuteOfHour();
        org.joda.time.DateTime dateTime73 = dateTime56.withYear(1969);
        org.joda.time.Chronology chronology74 = dateTime73.getChronology();
        org.joda.time.DurationField durationField75 = durationFieldType48.getField(chronology74);
        org.joda.time.DateTime dateTime76 = dateTime33.toDateTime(chronology74);
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.weeksBetween((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Instant instant79 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime80 = instant79.toDateTime();
        boolean boolean82 = dateTime80.isEqual(10L);
        org.joda.time.DateTime dateTime84 = dateTime80.withWeekOfWeekyear(8);
        int int85 = dateTime25.compareTo((org.joda.time.ReadableInstant) dateTime80);
        org.joda.time.DateTime dateTime87 = dateTime25.plusWeeks((int) (short) 0);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0955");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.DateTime dateTime7 = dateTime2.withMillis((long) '4');
        org.joda.time.Instant instant9 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime10 = instant9.toDateTime();
        boolean boolean12 = dateTime10.isEqual(10L);
        org.joda.time.DateTime dateTime14 = dateTime10.withWeekOfWeekyear(8);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime7, (org.joda.time.ReadableInstant) dateTime14);
        org.joda.time.Period period17 = org.joda.time.Period.seconds((int) (short) 0);
        org.joda.time.Period period18 = period17.normalizedStandard();
        org.joda.time.Period period19 = period17.normalizedStandard();
        org.joda.time.DateTime dateTime21 = dateTime14.withPeriodAdded((org.joda.time.ReadablePeriod) period19, (int) 'u');
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime24 = instant23.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone25 = null;
        org.joda.time.DateTime dateTime26 = dateTime24.withZoneRetainFields(dateTimeZone25);
        java.util.Locale locale28 = new java.util.Locale("+00:00");
        boolean boolean29 = dateTime24.equals((java.lang.Object) "+00:00");
        org.joda.time.Instant instant31 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime32 = instant31.toDateTime();
        org.joda.time.DateTime.Property property33 = dateTime32.era();
        org.joda.time.DateTime dateTime34 = dateTime32.withTimeAtStartOfDay();
        org.joda.time.Duration duration37 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.PeriodType periodType39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration37, readableInstant38, periodType39);
        mutablePeriod40.setMonths((int) '4');
        org.joda.time.DateTime dateTime43 = dateTime32.plus((org.joda.time.ReadablePeriod) mutablePeriod40);
        org.joda.time.DateTime dateTime45 = dateTime32.withMillisOfDay(4);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType50, chronology51);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((-1L), (long) 100, periodType50);
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime24, (org.joda.time.ReadableInstant) dateTime32, periodType50);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.DateTime dateTime56 = new org.joda.time.DateTime(chronology55);
        org.joda.time.DateTime.Property property57 = dateTime56.yearOfEra();
        org.joda.time.Interval interval58 = property57.toInterval();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.DateTime dateTime60 = new org.joda.time.DateTime(chronology59);
        org.joda.time.DateTime.Property property61 = dateTime60.yearOfEra();
        org.joda.time.Interval interval62 = property61.toInterval();
        boolean boolean63 = interval58.contains((org.joda.time.ReadableInterval) interval62);
        org.joda.time.Chronology chronology64 = interval62.getChronology();
        org.joda.time.MutableDateTime mutableDateTime65 = dateTime32.toMutableDateTime(chronology64);
        org.joda.time.DateTimeField dateTimeField66 = chronology64.hourOfHalfday();
        org.joda.time.DateTime dateTime67 = org.joda.time.DateTime.now(chronology64);
        boolean boolean68 = dateTime14.isEqual((org.joda.time.ReadableInstant) dateTime67);
        org.joda.time.DateTime.Property property69 = dateTime67.millisOfDay();
        java.lang.String str70 = property69.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0956");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.minuteOfDay();
        org.joda.time.Duration duration30 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds31 = duration30.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration32 = null;
        boolean boolean33 = duration30.isEqual(readableDuration32);
        org.joda.time.Duration duration35 = duration30.minus((long) 1);
        org.joda.time.Duration duration37 = duration35.minus((long) '4');
        org.joda.time.Instant instant39 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime40 = instant39.toDateTime();
        org.joda.time.DateTime.Property property41 = dateTime40.era();
        org.joda.time.Duration duration44 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration47 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period48 = duration47.toPeriod();
        org.joda.time.Duration duration50 = duration47.plus((long) (byte) 0);
        org.joda.time.Instant instant52 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime53 = instant52.toDateTime();
        boolean boolean55 = dateTime53.isEqual(10L);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType58, chronology59);
        org.joda.time.PeriodType periodType61 = periodType58.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration50, (org.joda.time.ReadableInstant) dateTime53, periodType61);
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime40, (org.joda.time.ReadableDuration) duration44, periodType61);
        org.joda.time.PeriodType periodType64 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, (org.joda.time.ReadableInstant) dateTime40, periodType64);
        org.joda.time.TimeOfDay timeOfDay66 = dateTime40.toTimeOfDay();
        int int68 = timeOfDay66.getValue(2);
        java.util.Locale locale70 = java.util.Locale.getDefault();
        java.lang.String str71 = dateTimeField27.getAsText((org.joda.time.ReadablePartial) timeOfDay66, (-102267), locale70);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0957");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.millisOfDay();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.hourOfDay();
        org.joda.time.DateTimeZone dateTimeZone29 = chronology25.getZone();
        org.joda.time.DateTimeField dateTimeField30 = chronology25.weekOfWeekyear();
        int int33 = dateTimeField30.getDifference((long) 2022, (long) (-1));
        java.lang.String str35 = dateTimeField30.getAsShortText(63808214400000L);
        int int37 = dateTimeField30.get((long) 1969);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0958");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant3, periodType4);
        mutablePeriod5.setMonths((int) '4');
        org.joda.time.Period period8 = mutablePeriod5.toPeriod();
        org.joda.time.ReadableInterval readableInterval9 = null;
        mutablePeriod5.setPeriod(readableInterval9);
        mutablePeriod5.setWeeks(69);
        org.joda.time.Duration duration14 = new org.joda.time.Duration(432000000L);
        java.lang.String str15 = duration14.toString();
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration14);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.yearWeekDayTime();
        int int18 = periodType17.size();
        org.joda.time.PeriodType periodType19 = periodType17.withMillisRemoved();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((long) (short) 1, (long) 8, chronology22);
        org.joda.time.Instant instant27 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime28 = instant27.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone29 = null;
        org.joda.time.DateTime dateTime30 = dateTime28.withZoneRetainFields(dateTimeZone29);
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime33 = instant32.toDateTime();
        org.joda.time.DateTime.Property property34 = dateTime33.era();
        org.joda.time.DateTime dateTime35 = dateTime33.withTimeAtStartOfDay();
        org.joda.time.Duration duration38 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration38, readableInstant39, periodType40);
        mutablePeriod41.setMonths((int) '4');
        org.joda.time.DateTime dateTime44 = dateTime33.plus((org.joda.time.ReadablePeriod) mutablePeriod41);
        org.joda.time.DateTime dateTime46 = dateTime33.minusWeeks((int) (byte) 1);
        int int47 = dateTime30.compareTo((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.DateTime.Property property48 = dateTime33.minuteOfHour();
        org.joda.time.DateTime dateTime50 = dateTime33.withYear(1969);
        org.joda.time.Chronology chronology51 = dateTime50.getChronology();
        org.joda.time.DateTimeField dateTimeField52 = chronology51.year();
        org.joda.time.DateTimeField dateTimeField53 = chronology51.weekOfWeekyear();
        mutablePeriod23.setPeriod(43199999L, (-1855204655L), chronology51);
        org.joda.time.Period period55 = duration14.toPeriod(periodType19, chronology51);
        org.joda.time.DateTimeField dateTimeField56 = chronology51.millisOfSecond();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant27 and dateTime28", (instant27.compareTo(dateTime28) == 0) == instant27.equals(dateTime28));
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0959");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.centuryOfEra();
        org.joda.time.Duration duration31 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period32 = duration31.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray33 = period32.getFieldTypes();
        int int34 = period32.getMinutes();
        org.joda.time.Period period36 = period32.withDays((int) ' ');
        org.joda.time.Period period38 = period32.plusWeeks(10);
        org.joda.time.Period period40 = period32.minusMillis((int) (short) 1);
        int[] intArray43 = chronology25.get((org.joda.time.ReadablePeriod) period32, 2678400000L, 31536000000L);
        org.joda.time.DateTimeField dateTimeField44 = chronology25.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField45 = chronology25.millisOfDay();
        org.joda.time.DateTimeField dateTimeField46 = chronology25.hourOfHalfday();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0960");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.millisOfDay();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.hourOfDay();
        org.joda.time.DateTimeField dateTimeField29 = chronology25.clockhourOfHalfday();
        org.joda.time.DateTimeField dateTimeField30 = chronology25.year();
        java.lang.String str31 = chronology25.toString();
        org.joda.time.DurationField durationField32 = chronology25.months();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0961");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTimeField dateTimeField2 = dateTimeFieldType0.getField(chronology1);
        long long5 = dateTimeField2.add(0L, (long) (short) 1);
        org.joda.time.ReadablePartial readablePartial6 = null;
        int int7 = dateTimeField2.getMinimumValue(readablePartial6);
        long long10 = dateTimeField2.getDifferenceAsLong((long) (short) -1, (long) 10);
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = dateTimeField2.getType();
        long long13 = dateTimeField2.remainder(432000000L);
        int int14 = dateTimeField2.getMaximumValue();
        boolean boolean15 = dateTimeField2.isSupported();
        org.joda.time.Instant instant17 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime18 = instant17.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone19 = null;
        org.joda.time.DateTime dateTime20 = dateTime18.withZoneRetainFields(dateTimeZone19);
        org.joda.time.Instant instant22 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime23 = instant22.toDateTime();
        org.joda.time.DateTime.Property property24 = dateTime23.era();
        org.joda.time.DateTime dateTime25 = dateTime23.withTimeAtStartOfDay();
        org.joda.time.Duration duration28 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration28, readableInstant29, periodType30);
        mutablePeriod31.setMonths((int) '4');
        org.joda.time.DateTime dateTime34 = dateTime23.plus((org.joda.time.ReadablePeriod) mutablePeriod31);
        org.joda.time.DateTime dateTime36 = dateTime23.minusWeeks((int) (byte) 1);
        int int37 = dateTime20.compareTo((org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.DateTime.Property property38 = dateTime23.minuteOfHour();
        org.joda.time.DateTime dateTime40 = dateTime23.withYear(1969);
        boolean boolean42 = dateTime40.isAfter((long) (short) -1);
        org.joda.time.LocalTime localTime43 = dateTime40.toLocalTime();
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.DateTimeField dateTimeField47 = dateTimeFieldType45.getField(chronology46);
        long long50 = dateTimeField47.add(0L, (long) (short) 1);
        boolean boolean52 = dateTimeField47.isLeap(10L);
        int int54 = dateTimeField47.get((-1L));
        long long56 = dateTimeField47.remainder((long) (byte) 0);
        java.util.Locale locale57 = java.util.Locale.ITALY;
        int int58 = dateTimeField47.getMaximumShortTextLength(locale57);
        java.lang.String str59 = locale57.getCountry();
        java.lang.String str60 = dateTimeField2.getAsShortText((org.joda.time.ReadablePartial) localTime43, 0, locale57);
        org.joda.time.Period period62 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period64 = period62.minusMonths((int) (short) 10);
        org.joda.time.DurationFieldType durationFieldType65 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Period period67 = period62.withFieldAdded(durationFieldType65, (int) (short) 100);
        org.joda.time.Period period69 = period62.minusMillis((int) (byte) 10);
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.DateTime dateTime71 = new org.joda.time.DateTime(chronology70);
        org.joda.time.DateTime.Property property72 = dateTime71.yearOfEra();
        org.joda.time.Interval interval73 = property72.toInterval();
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.DateTime dateTime75 = new org.joda.time.DateTime(chronology74);
        org.joda.time.DateTime.Property property76 = dateTime75.yearOfEra();
        org.joda.time.Interval interval77 = property76.toInterval();
        boolean boolean78 = interval73.contains((org.joda.time.ReadableInterval) interval77);
        org.joda.time.Chronology chronology79 = interval77.getChronology();
        org.joda.time.DurationField durationField80 = chronology79.weeks();
        org.joda.time.DurationFieldType durationFieldType81 = durationField80.getType();
        org.joda.time.Period period83 = period62.withField(durationFieldType81, 19);
        org.joda.time.Period period85 = period62.plusDays(2);
        org.joda.time.PeriodType periodType86 = period62.getPeriodType();
        boolean boolean87 = localTime43.equals((java.lang.Object) period62);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant17 and dateTime18", (instant17.compareTo(dateTime18) == 0) == instant17.equals(dateTime18));
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0962");
        org.joda.time.Instant instant2 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime3 = instant2.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone4 = null;
        org.joda.time.DateTime dateTime5 = dateTime3.withZoneRetainFields(dateTimeZone4);
        java.util.Locale locale7 = new java.util.Locale("+00:00");
        boolean boolean8 = dateTime3.equals((java.lang.Object) "+00:00");
        org.joda.time.Instant instant10 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime11 = instant10.toDateTime();
        org.joda.time.DateTime.Property property12 = dateTime11.era();
        org.joda.time.DateTime dateTime13 = dateTime11.withTimeAtStartOfDay();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration16, readableInstant17, periodType18);
        mutablePeriod19.setMonths((int) '4');
        org.joda.time.DateTime dateTime22 = dateTime11.plus((org.joda.time.ReadablePeriod) mutablePeriod19);
        org.joda.time.DateTime dateTime24 = dateTime11.withMillisOfDay(4);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType29, chronology30);
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((-1L), (long) 100, periodType29);
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime3, (org.joda.time.ReadableInstant) dateTime11, periodType29);
        boolean boolean35 = dateTime11.isEqual(0L);
        org.joda.time.DateTimeZone dateTimeZone36 = dateTime11.getZone();
        long long38 = dateTimeZone36.previousTransition((-43200000L));
        org.joda.time.DateTime dateTime39 = new org.joda.time.DateTime((long) 'x', dateTimeZone36);
        long long40 = dateTime39.getMillis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime3", (instant2.compareTo(dateTime3) == 0) == instant2.equals(dateTime3));
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0963");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (short) 1, (long) 8, chronology2);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period11 = duration10.toPeriod();
        org.joda.time.Duration duration13 = duration10.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = duration10.toPeriodTo(readableInstant14);
        org.joda.time.Duration duration18 = duration10.withDurationAdded((long) (short) -1, (int) (byte) 100);
        org.joda.time.Seconds seconds19 = duration18.toStandardSeconds();
        org.joda.time.Seconds seconds20 = seconds6.plus(seconds19);
        org.joda.time.Duration duration21 = seconds20.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.secondsIn(readableInterval22);
        org.joda.time.Seconds seconds25 = seconds23.plus((int) (byte) -1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds27 = seconds25.plus(seconds26);
        org.joda.time.Duration duration28 = seconds25.toStandardDuration();
        boolean boolean29 = seconds20.isGreaterThan(seconds25);
        org.joda.time.PeriodType periodType30 = seconds25.getPeriodType();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.DateTime dateTime32 = new org.joda.time.DateTime(chronology31);
        org.joda.time.DateTime.Property property33 = dateTime32.yearOfEra();
        org.joda.time.Interval interval34 = property33.toInterval();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.DateTime dateTime36 = new org.joda.time.DateTime(chronology35);
        org.joda.time.DateTime.Property property37 = dateTime36.yearOfEra();
        org.joda.time.Interval interval38 = property37.toInterval();
        boolean boolean39 = interval34.contains((org.joda.time.ReadableInterval) interval38);
        org.joda.time.Chronology chronology40 = interval38.getChronology();
        org.joda.time.DurationField durationField41 = chronology40.weeks();
        org.joda.time.DateTimeField dateTimeField42 = chronology40.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField43 = chronology40.yearOfEra();
        org.joda.time.DateTimeField dateTimeField44 = chronology40.yearOfEra();
        org.joda.time.Period period45 = new org.joda.time.Period(1009151999990L, periodType30, chronology40);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.DateTime dateTime47 = new org.joda.time.DateTime(chronology46);
        org.joda.time.DateTime.Property property48 = dateTime47.yearOfEra();
        org.joda.time.Interval interval49 = property48.toInterval();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.DateTime dateTime51 = new org.joda.time.DateTime(chronology50);
        org.joda.time.DateTime.Property property52 = dateTime51.yearOfEra();
        org.joda.time.Interval interval53 = property52.toInterval();
        boolean boolean54 = interval49.contains((org.joda.time.ReadableInterval) interval53);
        java.lang.Object obj55 = null;
        org.joda.time.Instant instant56 = new org.joda.time.Instant(obj55);
        org.joda.time.DateTimeZone dateTimeZone57 = instant56.getZone();
        java.lang.String str58 = dateTimeZone57.toString();
        org.joda.time.DateTime dateTime59 = new org.joda.time.DateTime(dateTimeZone57);
        boolean boolean60 = interval49.contains((org.joda.time.ReadableInstant) dateTime59);
        org.joda.time.Instant instant62 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime63 = instant62.toDateTime();
        org.joda.time.DateTime.Property property64 = dateTime63.era();
        boolean boolean65 = interval49.contains((org.joda.time.ReadableInstant) dateTime63);
        org.joda.time.MutableInterval mutableInterval66 = interval49.toMutableInterval();
        org.joda.time.Chronology chronology67 = interval49.getChronology();
        org.joda.time.DateTimeField dateTimeField68 = chronology67.era();
        org.joda.time.DateTimeField dateTimeField69 = chronology67.secondOfDay();
        org.joda.time.Instant instant71 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime72 = instant71.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone73 = null;
        org.joda.time.DateTime dateTime74 = dateTime72.withZone(dateTimeZone73);
        org.joda.time.Instant instant76 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime77 = instant76.toDateTime();
        org.joda.time.DateTime.Property property78 = dateTime77.era();
        org.joda.time.DateTime dateTime79 = dateTime77.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType80 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean81 = dateTime77.isSupported(dateTimeFieldType80);
        org.joda.time.DateTime.Property property82 = dateTime72.property(dateTimeFieldType80);
        org.joda.time.DateTimeZone dateTimeZone83 = dateTime72.getZone();
        org.joda.time.LocalDateTime localDateTime84 = dateTime72.toLocalDateTime();
        java.lang.Object obj85 = null;
        org.joda.time.Instant instant86 = new org.joda.time.Instant(obj85);
        org.joda.time.DateTimeZone dateTimeZone87 = instant86.getZone();
        java.lang.String str88 = dateTimeZone87.toString();
        org.joda.time.DateTime dateTime89 = new org.joda.time.DateTime(dateTimeZone87);
        java.util.Locale locale91 = java.util.Locale.JAPANESE;
        java.lang.String str92 = locale91.getDisplayScript();
        java.lang.String str93 = dateTimeZone87.getShortName(100L, locale91);
        java.lang.String str94 = dateTimeField69.getAsShortText((org.joda.time.ReadablePartial) localDateTime84, locale91);
        int[] intArray96 = chronology40.get((org.joda.time.ReadablePartial) localDateTime84, (-638082143280000L));
        mutablePeriod3.setPeriod((long) (-27349920), chronology40);
        org.joda.time.DateTimeField dateTimeField98 = chronology40.minuteOfHour();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime32 and instant56", (dateTime32.compareTo(instant56) == 0) == dateTime32.equals(instant56));
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0964");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTimeField dateTimeField2 = dateTimeFieldType0.getField(chronology1);
        long long5 = dateTimeField2.add(0L, (long) (short) 1);
        org.joda.time.ReadablePartial readablePartial6 = null;
        int int7 = dateTimeField2.getMinimumValue(readablePartial6);
        long long10 = dateTimeField2.getDifferenceAsLong((long) (short) -1, (long) 10);
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = dateTimeField2.getType();
        java.lang.String str13 = dateTimeField2.getAsText((long) 1);
        long long16 = dateTimeField2.getDifferenceAsLong((long) (short) 10, (long) 1972);
        java.lang.String str17 = dateTimeField2.getName();
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        boolean boolean22 = dateTime20.isEqual(10L);
        org.joda.time.DateTime dateTime24 = dateTime20.withWeekOfWeekyear(8);
        org.joda.time.DateTime dateTime26 = dateTime20.plusDays(100);
        org.joda.time.LocalTime localTime27 = dateTime20.toLocalTime();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.DateTime dateTime29 = new org.joda.time.DateTime(chronology28);
        org.joda.time.DateTime.Property property30 = dateTime29.yearOfEra();
        int int31 = property30.getMaximumValue();
        java.lang.Object obj32 = null;
        org.joda.time.Instant instant33 = new org.joda.time.Instant(obj32);
        org.joda.time.DateTimeZone dateTimeZone34 = instant33.getZone();
        java.lang.String str35 = dateTimeZone34.toString();
        org.joda.time.DateTime dateTime36 = new org.joda.time.DateTime(dateTimeZone34);
        java.util.Locale locale38 = java.util.Locale.JAPANESE;
        java.lang.String str39 = locale38.getDisplayScript();
        java.lang.String str40 = dateTimeZone34.getShortName(100L, locale38);
        java.lang.String str41 = locale38.getScript();
        java.lang.String str42 = property30.getAsText(locale38);
        java.lang.String str43 = dateTimeField2.getAsShortText((org.joda.time.ReadablePartial) localTime27, locale38);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant19 and dateTime20", (instant19.compareTo(dateTime20) == 0) == instant19.equals(dateTime20));
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0965");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant3 = instant1.minus(100L);
        java.lang.String str4 = instant3.toString();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period8 = duration7.toPeriod();
        org.joda.time.Duration duration10 = duration7.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = duration7.toPeriodTo(readableInstant11);
        org.joda.time.Duration duration14 = duration7.withMillis((long) (short) 0);
        org.joda.time.Instant instant15 = instant3.plus((org.joda.time.ReadableDuration) duration7);
        java.lang.String str16 = duration7.toString();
        org.joda.time.Instant instant18 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime19 = instant18.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone20 = null;
        org.joda.time.DateTime dateTime21 = dateTime19.withZoneRetainFields(dateTimeZone20);
        org.joda.time.Instant instant23 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime24 = instant23.toDateTime();
        org.joda.time.DateTime.Property property25 = dateTime24.era();
        org.joda.time.DateTime dateTime26 = dateTime24.withTimeAtStartOfDay();
        org.joda.time.Duration duration29 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.PeriodType periodType31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration29, readableInstant30, periodType31);
        mutablePeriod32.setMonths((int) '4');
        org.joda.time.DateTime dateTime35 = dateTime24.plus((org.joda.time.ReadablePeriod) mutablePeriod32);
        org.joda.time.DateTime dateTime37 = dateTime24.minusWeeks((int) (byte) 1);
        int int38 = dateTime21.compareTo((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.DateTime dateTime39 = dateTime21.toDateTimeISO();
        org.joda.time.Interval interval40 = duration7.toIntervalTo((org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.Instant instant42 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime43 = instant42.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone44 = null;
        org.joda.time.DateTime dateTime45 = dateTime43.withZoneRetainFields(dateTimeZone44);
        java.util.Locale locale47 = new java.util.Locale("+00:00");
        boolean boolean48 = dateTime43.equals((java.lang.Object) "+00:00");
        org.joda.time.Instant instant50 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime51 = instant50.toDateTime();
        org.joda.time.DateTime.Property property52 = dateTime51.era();
        org.joda.time.DateTime dateTime53 = dateTime51.withTimeAtStartOfDay();
        org.joda.time.Duration duration56 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.PeriodType periodType58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration56, readableInstant57, periodType58);
        mutablePeriod59.setMonths((int) '4');
        org.joda.time.DateTime dateTime62 = dateTime51.plus((org.joda.time.ReadablePeriod) mutablePeriod59);
        org.joda.time.DateTime dateTime64 = dateTime51.withMillisOfDay(4);
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType69, chronology70);
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((-1L), (long) 100, periodType69);
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime43, (org.joda.time.ReadableInstant) dateTime51, periodType69);
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.DateTime dateTime75 = new org.joda.time.DateTime(chronology74);
        org.joda.time.DateTime.Property property76 = dateTime75.yearOfEra();
        org.joda.time.Interval interval77 = property76.toInterval();
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.DateTime dateTime79 = new org.joda.time.DateTime(chronology78);
        org.joda.time.DateTime.Property property80 = dateTime79.yearOfEra();
        org.joda.time.Interval interval81 = property80.toInterval();
        boolean boolean82 = interval77.contains((org.joda.time.ReadableInterval) interval81);
        org.joda.time.Chronology chronology83 = interval81.getChronology();
        org.joda.time.MutableDateTime mutableDateTime84 = dateTime51.toMutableDateTime(chronology83);
        boolean boolean85 = interval40.contains((org.joda.time.ReadableInstant) dateTime51);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime19", (instant1.compareTo(dateTime19) == 0) == instant1.equals(dateTime19));
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0966");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration4 = null;
        boolean boolean5 = duration2.isEqual(readableDuration4);
        org.joda.time.Duration duration7 = duration2.minus((long) 1);
        org.joda.time.Duration duration9 = duration7.minus((long) '4');
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Duration duration22 = duration19.plus((long) (byte) 0);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType30, chronology31);
        org.joda.time.PeriodType periodType33 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, (org.joda.time.ReadableInstant) dateTime25, periodType33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime12, (org.joda.time.ReadableDuration) duration16, periodType33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime12, periodType36);
        org.joda.time.Duration duration39 = duration7.minus((long) 7);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int50 = mutablePeriod49.getDays();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.DateTime dateTime54 = new org.joda.time.DateTime(chronology53);
        org.joda.time.DateTime.Property property55 = dateTime54.yearOfEra();
        org.joda.time.Interval interval56 = property55.toInterval();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.DateTime dateTime58 = new org.joda.time.DateTime(chronology57);
        org.joda.time.DateTime.Property property59 = dateTime58.yearOfEra();
        org.joda.time.Interval interval60 = property59.toInterval();
        boolean boolean61 = interval56.contains((org.joda.time.ReadableInterval) interval60);
        org.joda.time.Chronology chronology62 = interval60.getChronology();
        mutablePeriod49.setPeriod((long) 'u', (long) 1969, chronology62);
        org.joda.time.Period period64 = new org.joda.time.Period((long) (byte) 100, chronology62);
        org.joda.time.Period period65 = duration39.toPeriod(chronology62);
        org.joda.time.DateTimeField dateTimeField66 = chronology62.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField67 = chronology62.monthOfYear();
        org.joda.time.PeriodType periodType69 = null;
        org.joda.time.Period period70 = new org.joda.time.Period((long) (short) 10, periodType69);
        org.joda.time.Instant instant72 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant73 = instant72.toInstant();
        org.joda.time.DateTime dateTime74 = instant73.toDateTimeISO();
        org.joda.time.Duration duration75 = period70.toDurationFrom((org.joda.time.ReadableInstant) dateTime74);
        org.joda.time.Period period77 = period70.plusMonths(1969);
        org.joda.time.Period period79 = period77.withMinutes(2);
        org.joda.time.Period period81 = period77.minusMonths((-1));
        int[] intArray83 = chronology62.get((org.joda.time.ReadablePeriod) period77, 100L);
        long long87 = chronology62.add((long) (-10), 31536000000L, (int) ' ');
        org.joda.time.DateTimeField dateTimeField88 = chronology62.minuteOfHour();
        boolean boolean89 = dateTimeField88.isLenient();
        boolean boolean90 = dateTimeField88.isLenient();
        java.util.Locale locale91 = null;
        int int92 = dateTimeField88.getMaximumShortTextLength(locale91);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime12", (instant11.compareTo(dateTime12) == 0) == instant11.equals(dateTime12));
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0967");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = duration2.toPeriodTo(readableInstant6);
        org.joda.time.Duration duration9 = duration2.withMillis((long) (short) 0);
        java.lang.String str10 = duration9.toString();
        org.joda.time.Duration duration11 = duration9.toDuration();
        long long12 = duration9.getMillis();
        org.joda.time.Instant instant14 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant16 = instant14.minus(100L);
        org.joda.time.Instant instant18 = instant16.plus((long) 100);
        org.joda.time.Instant instant20 = instant16.withMillis((long) (byte) 1);
        org.joda.time.Instant instant23 = instant16.withDurationAdded((long) '4', (int) 'a');
        org.joda.time.Duration duration26 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period27 = duration26.toPeriod();
        org.joda.time.Duration duration29 = duration26.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = duration26.toPeriodTo(readableInstant30);
        org.joda.time.Duration duration33 = duration26.withMillis((long) (short) 0);
        org.joda.time.Duration duration36 = duration26.withDurationAdded((long) 1, (int) ' ');
        org.joda.time.Instant instant38 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime39 = instant38.toDateTime();
        boolean boolean41 = dateTime39.isEqual(10L);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, (org.joda.time.ReadableInstant) dateTime39, periodType42);
        java.lang.Object obj44 = null;
        org.joda.time.Instant instant45 = new org.joda.time.Instant(obj44);
        org.joda.time.DateTimeZone dateTimeZone46 = instant45.getZone();
        org.joda.time.DateTime dateTime47 = dateTime39.toDateTime(dateTimeZone46);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) instant23, (org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration9, (org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.DateTime.Property property50 = dateTime47.dayOfYear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant14 and dateTime39", (instant14.compareTo(dateTime39) == 0) == instant14.equals(dateTime39));
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0968");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.secondOfMinute();
        int int4 = dateTime2.getDayOfYear();
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone8 = null;
        org.joda.time.DateTime dateTime9 = dateTime7.withZone(dateTimeZone8);
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.DateTime dateTime14 = dateTime12.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType15 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean16 = dateTime12.isSupported(dateTimeFieldType15);
        org.joda.time.DateTime.Property property17 = dateTime7.property(dateTimeFieldType15);
        boolean boolean18 = dateTime2.isSupported(dateTimeFieldType15);
        org.joda.time.DateTime dateTime20 = dateTime2.minusSeconds(0);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime7", (instant1.compareTo(dateTime7) == 0) == instant1.equals(dateTime7));
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0969");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        boolean boolean10 = dateTime8.isEqual(10L);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime8, periodType16);
        org.joda.time.Duration duration20 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period21 = duration20.toPeriod();
        org.joda.time.Duration duration23 = duration20.plus((long) (byte) 0);
        org.joda.time.Duration duration24 = duration20.toDuration();
        org.joda.time.Duration duration25 = duration5.minus((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration28 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration28, readableInstant29, periodType30);
        org.joda.time.Duration duration34 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration34, readableInstant35, periodType36);
        boolean boolean38 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Period period39 = duration34.toPeriod();
        boolean boolean40 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration43 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds44 = duration43.toStandardSeconds();
        org.joda.time.Instant instant46 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant48 = instant46.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime49 = instant46.toMutableDateTimeISO();
        org.joda.time.Period period50 = duration43.toPeriodTo((org.joda.time.ReadableInstant) instant46);
        org.joda.time.Instant instant52 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime53 = instant52.toDateTime();
        org.joda.time.DateTime.Property property54 = dateTime53.era();
        org.joda.time.DateTime dateTime55 = dateTime53.withTimeAtStartOfDay();
        org.joda.time.Duration duration58 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.PeriodType periodType60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration58, readableInstant59, periodType60);
        mutablePeriod61.setMonths((int) '4');
        org.joda.time.DateTime dateTime64 = dateTime53.plus((org.joda.time.ReadablePeriod) mutablePeriod61);
        org.joda.time.DateTime dateTime66 = dateTime53.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property67 = dateTime66.monthOfYear();
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType72, chronology73);
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod(1L, (long) 10, periodType72, chronology75);
        org.joda.time.PeriodType periodType77 = periodType72.withDaysRemoved();
        org.joda.time.Period period78 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, (org.joda.time.ReadableInstant) dateTime66, periodType72);
        org.joda.time.Instant instant80 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant81 = instant80.toInstant();
        org.joda.time.DateTime dateTime82 = instant81.toDateTimeISO();
        org.joda.time.Period period83 = duration43.toPeriodTo((org.joda.time.ReadableInstant) dateTime82);
        org.joda.time.Duration duration84 = duration43.toDuration();
        org.joda.time.Duration duration85 = duration84.toDuration();
        boolean boolean86 = duration34.isEqual((org.joda.time.ReadableDuration) duration85);
        org.joda.time.Instant instant87 = org.joda.time.Instant.now();
        org.joda.time.Instant instant89 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime90 = instant89.toDateTime();
        boolean boolean92 = dateTime90.isEqual(10L);
        org.joda.time.DateTime dateTime94 = dateTime90.withCenturyOfEra((int) (byte) 1);
        int int95 = instant87.compareTo((org.joda.time.ReadableInstant) dateTime90);
        org.joda.time.MutablePeriod mutablePeriod96 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration85, (org.joda.time.ReadableInstant) instant87);
        long long97 = duration85.getStandardHours();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0970");
        java.lang.Object obj0 = null;
        org.joda.time.Instant instant1 = new org.joda.time.Instant(obj0);
        org.joda.time.DateTimeZone dateTimeZone2 = instant1.getZone();
        org.joda.time.Duration duration5 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period6 = duration5.toPeriod();
        org.joda.time.Duration duration8 = duration5.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = duration5.toPeriodTo(readableInstant9);
        org.joda.time.Duration duration12 = duration5.withMillis((long) (short) 0);
        org.joda.time.Duration duration15 = duration5.withDurationAdded((long) 1, (int) ' ');
        org.joda.time.Instant instant17 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime18 = instant17.toDateTime();
        boolean boolean20 = dateTime18.isEqual(10L);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, (org.joda.time.ReadableInstant) dateTime18, periodType21);
        org.joda.time.DateTime dateTime24 = dateTime18.minusSeconds((int) 'a');
        org.joda.time.DateTime dateTime26 = dateTime18.withMinuteOfHour(0);
        int int27 = dateTimeZone2.getOffset((org.joda.time.ReadableInstant) dateTime18);
        org.joda.time.DateTime dateTime29 = dateTime18.withMillisOfSecond((int) (byte) 100);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.DateTime dateTime31 = new org.joda.time.DateTime(chronology30);
        org.joda.time.DateTime.Property property32 = dateTime31.yearOfEra();
        org.joda.time.Interval interval33 = property32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getStart();
        org.joda.time.DateTime dateTime35 = dateTime34.toDateTimeISO();
        org.joda.time.DateTimeZone dateTimeZone36 = dateTime35.getZone();
        long long39 = dateTimeZone36.adjustOffset((long) (-1), true);
        org.joda.time.DateTime dateTime40 = dateTime29.withZoneRetainFields(dateTimeZone36);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime31", (instant1.compareTo(dateTime31) == 0) == instant1.equals(dateTime31));
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0971");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant3, periodType4);
        mutablePeriod5.setMillis((int) (short) 1);
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.DateTime dateTime10 = new org.joda.time.DateTime(chronology9);
        org.joda.time.DateTime.Property property11 = dateTime10.yearOfEra();
        org.joda.time.Interval interval12 = property11.toInterval();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.DateTime dateTime14 = new org.joda.time.DateTime(chronology13);
        org.joda.time.DateTime.Property property15 = dateTime14.yearOfEra();
        org.joda.time.Interval interval16 = property15.toInterval();
        boolean boolean17 = interval12.contains((org.joda.time.ReadableInterval) interval16);
        org.joda.time.Chronology chronology18 = interval16.getChronology();
        org.joda.time.DurationField durationField19 = chronology18.weeks();
        org.joda.time.DateTimeField dateTimeField20 = chronology18.minuteOfDay();
        org.joda.time.DurationField durationField21 = chronology18.seconds();
        mutablePeriod5.add(3599999000L, chronology18);
        org.joda.time.DateTimeField dateTimeField23 = chronology18.weekyear();
        org.joda.time.Instant instant25 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant27 = instant25.minus(100L);
        org.joda.time.DateTimeZone dateTimeZone28 = instant27.getZone();
        long long30 = dateTimeZone28.nextTransition(43200000L);
        java.util.Locale.Category category32 = java.util.Locale.Category.FORMAT;
        org.joda.time.Instant instant34 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime35 = instant34.toDateTime();
        org.joda.time.DateTime.Property property36 = dateTime35.era();
        org.joda.time.DateTime dateTime37 = property36.withMinimumValue();
        int int38 = property36.getMaximumValueOverall();
        java.util.Locale locale39 = java.util.Locale.ITALY;
        java.util.Locale locale43 = new java.util.Locale("", "hi!", "hi!");
        java.lang.String str44 = locale39.getDisplayCountry(locale43);
        java.lang.String str45 = locale43.getDisplayVariant();
        int int46 = property36.getMaximumShortTextLength(locale43);
        java.util.Locale.setDefault(category32, locale43);
        java.lang.String str48 = dateTimeZone28.getShortName((long) (-1), locale43);
        org.joda.time.Instant instant50 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant52 = instant50.minus(100L);
        org.joda.time.Instant instant54 = instant52.plus((long) 100);
        org.joda.time.Instant instant56 = instant52.withMillis((long) (byte) 1);
        org.joda.time.Instant instant59 = instant52.withDurationAdded((long) '4', (int) 'a');
        org.joda.time.Duration duration62 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period63 = duration62.toPeriod();
        org.joda.time.Duration duration65 = duration62.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Period period67 = duration62.toPeriodTo(readableInstant66);
        org.joda.time.Duration duration69 = duration62.withMillis((long) (short) 0);
        org.joda.time.Duration duration72 = duration62.withDurationAdded((long) 1, (int) ' ');
        org.joda.time.Instant instant74 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime75 = instant74.toDateTime();
        boolean boolean77 = dateTime75.isEqual(10L);
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period79 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration72, (org.joda.time.ReadableInstant) dateTime75, periodType78);
        java.lang.Object obj80 = null;
        org.joda.time.Instant instant81 = new org.joda.time.Instant(obj80);
        org.joda.time.DateTimeZone dateTimeZone82 = instant81.getZone();
        org.joda.time.DateTime dateTime83 = dateTime75.toDateTime(dateTimeZone82);
        org.joda.time.Seconds seconds84 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) instant59, (org.joda.time.ReadableInstant) dateTime83);
        java.lang.Object obj85 = null;
        org.joda.time.Instant instant86 = new org.joda.time.Instant(obj85);
        org.joda.time.DateTimeZone dateTimeZone87 = instant86.getZone();
        java.lang.String str88 = dateTimeZone87.toString();
        org.joda.time.DateTime dateTime89 = new org.joda.time.DateTime(dateTimeZone87);
        boolean boolean90 = instant59.isBefore((org.joda.time.ReadableInstant) dateTime89);
        org.joda.time.LocalDateTime localDateTime91 = dateTime89.toLocalDateTime();
        boolean boolean92 = dateTimeZone28.isLocalDateTimeGap(localDateTime91);
        org.joda.time.MutablePeriod mutablePeriod95 = new org.joda.time.MutablePeriod((long) (short) 10, (long) (byte) 0);
        int int96 = mutablePeriod95.getDays();
        int[] intArray97 = mutablePeriod95.getValues();
        int int98 = dateTimeField23.getMinimumValue((org.joda.time.ReadablePartial) localDateTime91, intArray97);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant25 and dateTime35", (instant25.compareTo(dateTime35) == 0) == instant25.equals(dateTime35));
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0972");
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType5, chronology6);
        org.joda.time.Period period8 = new org.joda.time.Period((long) 11, 0L, periodType5);
        java.lang.String str9 = periodType5.getName();
        org.joda.time.PeriodType periodType10 = periodType5.withMonthsRemoved();
        org.joda.time.Instant instant12 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime13 = instant12.toDateTime();
        org.joda.time.DateTime.Property property14 = dateTime13.era();
        org.joda.time.DateTime dateTime15 = dateTime13.withTimeAtStartOfDay();
        org.joda.time.Duration duration18 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration18, readableInstant19, periodType20);
        mutablePeriod21.setMonths((int) '4');
        org.joda.time.DateTime dateTime24 = dateTime13.plus((org.joda.time.ReadablePeriod) mutablePeriod21);
        org.joda.time.DateTime dateTime26 = dateTime13.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property27 = dateTime26.monthOfYear();
        org.joda.time.DateTime.Property property28 = dateTime26.weekyear();
        org.joda.time.DateMidnight dateMidnight29 = dateTime26.toDateMidnight();
        org.joda.time.Instant instant31 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime32 = instant31.toDateTime();
        boolean boolean34 = dateTime32.isEqual(10L);
        org.joda.time.DateTime dateTime36 = dateTime32.withCenturyOfEra((int) (byte) 1);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.DateTimeField dateTimeField39 = dateTimeFieldType37.getField(chronology38);
        long long42 = dateTimeField39.add(0L, (long) (short) 1);
        long long45 = dateTimeField39.add(1L, (-1));
        int int46 = dateTime32.get(dateTimeField39);
        org.joda.time.Instant instant48 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime49 = instant48.toDateTime();
        org.joda.time.DateTime.Property property50 = dateTime49.era();
        org.joda.time.DateTime dateTime51 = dateTime49.withTimeAtStartOfDay();
        org.joda.time.Duration duration54 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.PeriodType periodType56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration54, readableInstant55, periodType56);
        mutablePeriod57.setMonths((int) '4');
        org.joda.time.DateTime dateTime60 = dateTime49.plus((org.joda.time.ReadablePeriod) mutablePeriod57);
        org.joda.time.DateTime dateTime62 = dateTime49.minusWeeks((int) (byte) 1);
        long long63 = dateTime49.getMillis();
        org.joda.time.DurationFieldType durationFieldType64 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant66 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime67 = instant66.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone68 = null;
        org.joda.time.DateTime dateTime69 = dateTime67.withZoneRetainFields(dateTimeZone68);
        org.joda.time.Instant instant71 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime72 = instant71.toDateTime();
        org.joda.time.DateTime.Property property73 = dateTime72.era();
        org.joda.time.DateTime dateTime74 = dateTime72.withTimeAtStartOfDay();
        org.joda.time.Duration duration77 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.PeriodType periodType79 = null;
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration77, readableInstant78, periodType79);
        mutablePeriod80.setMonths((int) '4');
        org.joda.time.DateTime dateTime83 = dateTime72.plus((org.joda.time.ReadablePeriod) mutablePeriod80);
        org.joda.time.DateTime dateTime85 = dateTime72.minusWeeks((int) (byte) 1);
        int int86 = dateTime69.compareTo((org.joda.time.ReadableInstant) dateTime72);
        org.joda.time.DateTime.Property property87 = dateTime72.minuteOfHour();
        org.joda.time.DateTime dateTime89 = dateTime72.withYear(1969);
        org.joda.time.Chronology chronology90 = dateTime89.getChronology();
        org.joda.time.DurationField durationField91 = durationFieldType64.getField(chronology90);
        org.joda.time.DateTime dateTime92 = dateTime49.toDateTime(chronology90);
        org.joda.time.DateTime dateTime93 = dateTime32.toDateTime(chronology90);
        org.joda.time.DateTime dateTime94 = dateTime26.withChronology(chronology90);
        org.joda.time.MutablePeriod mutablePeriod95 = new org.joda.time.MutablePeriod((long) (byte) -1, periodType10, chronology90);
        org.joda.time.MutablePeriod mutablePeriod96 = new org.joda.time.MutablePeriod(periodType10);
        org.joda.time.Period period97 = mutablePeriod96.toPeriod();
        org.joda.time.Period period99 = period97.multipliedBy(26075160);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime13", (instant12.compareTo(dateTime13) == 0) == instant12.equals(dateTime13));
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0973");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours2 = hours0.multipliedBy(0);
        org.joda.time.Hours hours4 = hours0.dividedBy(69);
        org.joda.time.Period period5 = hours0.toPeriod();
        org.joda.time.Period period7 = period5.minusSeconds(11);
        org.joda.time.Period period9 = period5.minusWeeks(69);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.DateTime dateTime11 = new org.joda.time.DateTime(chronology10);
        org.joda.time.DateTime.Property property12 = dateTime11.yearOfEra();
        org.joda.time.Interval interval13 = property12.toInterval();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.DateTime dateTime15 = new org.joda.time.DateTime(chronology14);
        org.joda.time.DateTime.Property property16 = dateTime15.yearOfEra();
        org.joda.time.Interval interval17 = property16.toInterval();
        boolean boolean18 = interval13.contains((org.joda.time.ReadableInterval) interval17);
        java.lang.Object obj19 = null;
        org.joda.time.Instant instant20 = new org.joda.time.Instant(obj19);
        org.joda.time.DateTimeZone dateTimeZone21 = instant20.getZone();
        java.lang.String str22 = dateTimeZone21.toString();
        org.joda.time.DateTime dateTime23 = new org.joda.time.DateTime(dateTimeZone21);
        boolean boolean24 = interval13.contains((org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Instant instant26 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime27 = instant26.toDateTime();
        org.joda.time.DateTime.Property property28 = dateTime27.era();
        boolean boolean29 = interval13.contains((org.joda.time.ReadableInstant) dateTime27);
        org.joda.time.Period period30 = interval13.toPeriod();
        org.joda.time.Duration duration33 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period34 = duration33.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray35 = period34.getFieldTypes();
        int int36 = period34.getMinutes();
        org.joda.time.Period period38 = period34.withDays((int) ' ');
        org.joda.time.PeriodType periodType39 = period38.getPeriodType();
        org.joda.time.Period period40 = interval13.toPeriod(periodType39);
        org.joda.time.Period period42 = period40.minusSeconds((int) 'x');
        org.joda.time.Period period43 = period9.withFields((org.joda.time.ReadablePeriod) period40);
        org.joda.time.DateTimeFieldType dateTimeFieldType44 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.DateTimeField dateTimeField46 = dateTimeFieldType44.getField(chronology45);
        long long49 = dateTimeField46.add(0L, (long) (short) 1);
        org.joda.time.ReadablePartial readablePartial50 = null;
        int int51 = dateTimeField46.getMinimumValue(readablePartial50);
        org.joda.time.DateTimeFieldType dateTimeFieldType52 = dateTimeField46.getType();
        org.joda.time.DurationFieldType durationFieldType53 = dateTimeFieldType52.getRangeDurationType();
        org.joda.time.Period period55 = period43.withField(durationFieldType53, (-8));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime11 and instant20", (dateTime11.compareTo(instant20) == 0) == dateTime11.equals(instant20));
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0974");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTimeField dateTimeField2 = dateTimeFieldType0.getField(chronology1);
        long long5 = dateTimeField2.add(0L, (long) (short) 1);
        long long8 = dateTimeField2.add(1L, (-1));
        long long11 = dateTimeField2.addWrapField(100L, 10);
        org.joda.time.DateTimeFieldType dateTimeFieldType12 = dateTimeField2.getType();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) (short) 1, (long) 8, chronology15);
        org.joda.time.Instant instant20 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime21 = instant20.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone22 = null;
        org.joda.time.DateTime dateTime23 = dateTime21.withZoneRetainFields(dateTimeZone22);
        org.joda.time.Instant instant25 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime26 = instant25.toDateTime();
        org.joda.time.DateTime.Property property27 = dateTime26.era();
        org.joda.time.DateTime dateTime28 = dateTime26.withTimeAtStartOfDay();
        org.joda.time.Duration duration31 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.PeriodType periodType33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration31, readableInstant32, periodType33);
        mutablePeriod34.setMonths((int) '4');
        org.joda.time.DateTime dateTime37 = dateTime26.plus((org.joda.time.ReadablePeriod) mutablePeriod34);
        org.joda.time.DateTime dateTime39 = dateTime26.minusWeeks((int) (byte) 1);
        int int40 = dateTime23.compareTo((org.joda.time.ReadableInstant) dateTime26);
        org.joda.time.DateTime.Property property41 = dateTime26.minuteOfHour();
        org.joda.time.DateTime dateTime43 = dateTime26.withYear(1969);
        org.joda.time.Chronology chronology44 = dateTime43.getChronology();
        org.joda.time.DateTimeField dateTimeField45 = chronology44.year();
        org.joda.time.DateTimeField dateTimeField46 = chronology44.weekOfWeekyear();
        mutablePeriod16.setPeriod(43199999L, (-1855204655L), chronology44);
        org.joda.time.DateTimeField dateTimeField48 = dateTimeFieldType12.getField(chronology44);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant20 and dateTime21", (instant20.compareTo(dateTime21) == 0) == instant20.equals(dateTime21));
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0975");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        boolean boolean27 = dateTime25.isEqual(10L);
        org.joda.time.DateTime dateTime29 = dateTime25.withCenturyOfEra((int) (byte) 1);
        boolean boolean30 = dateTime7.isAfter((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime33 = instant32.toDateTime();
        org.joda.time.DateTime.Property property34 = dateTime33.era();
        org.joda.time.DateTime dateTime35 = dateTime33.withTimeAtStartOfDay();
        org.joda.time.Duration duration38 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration38, readableInstant39, periodType40);
        mutablePeriod41.setMonths((int) '4');
        org.joda.time.DateTime dateTime44 = dateTime33.plus((org.joda.time.ReadablePeriod) mutablePeriod41);
        org.joda.time.DateTime dateTime46 = dateTime33.minusWeeks((int) (byte) 1);
        long long47 = dateTime33.getMillis();
        org.joda.time.DurationFieldType durationFieldType48 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant50 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime51 = instant50.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone52 = null;
        org.joda.time.DateTime dateTime53 = dateTime51.withZoneRetainFields(dateTimeZone52);
        org.joda.time.Instant instant55 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime56 = instant55.toDateTime();
        org.joda.time.DateTime.Property property57 = dateTime56.era();
        org.joda.time.DateTime dateTime58 = dateTime56.withTimeAtStartOfDay();
        org.joda.time.Duration duration61 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.PeriodType periodType63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration61, readableInstant62, periodType63);
        mutablePeriod64.setMonths((int) '4');
        org.joda.time.DateTime dateTime67 = dateTime56.plus((org.joda.time.ReadablePeriod) mutablePeriod64);
        org.joda.time.DateTime dateTime69 = dateTime56.minusWeeks((int) (byte) 1);
        int int70 = dateTime53.compareTo((org.joda.time.ReadableInstant) dateTime56);
        org.joda.time.DateTime.Property property71 = dateTime56.minuteOfHour();
        org.joda.time.DateTime dateTime73 = dateTime56.withYear(1969);
        org.joda.time.Chronology chronology74 = dateTime73.getChronology();
        org.joda.time.DurationField durationField75 = durationFieldType48.getField(chronology74);
        org.joda.time.DateTime dateTime76 = dateTime33.toDateTime(chronology74);
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.weeksBetween((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime33);
        java.util.Locale locale78 = java.util.Locale.ITALY;
        java.util.Locale locale82 = new java.util.Locale("", "hi!", "hi!");
        java.lang.String str83 = locale78.getDisplayCountry(locale82);
        java.lang.String str84 = locale82.getDisplayVariant();
        java.util.Locale locale85 = java.util.Locale.ENGLISH;
        java.lang.String str86 = locale82.getDisplayVariant(locale85);
        java.lang.String str87 = locale82.toLanguageTag();
        java.util.Calendar calendar88 = dateTime25.toCalendar(locale82);
        org.joda.time.DateTime dateTime90 = dateTime25.minusHours((-100));
        org.joda.time.Duration duration93 = new org.joda.time.Duration((long) '#', (long) 4);
        org.joda.time.MutablePeriod mutablePeriod94 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableDuration) duration93);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0976");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime7 = instant6.toDateTime();
        org.joda.time.DateTime.Property property8 = dateTime7.era();
        org.joda.time.DateTime dateTime9 = dateTime7.withTimeAtStartOfDay();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13, periodType14);
        mutablePeriod15.setMonths((int) '4');
        org.joda.time.DateTime dateTime18 = dateTime7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DateTime dateTime20 = dateTime7.minusWeeks((int) (byte) 1);
        int int21 = dateTime4.compareTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.DateTime.Property property22 = dateTime7.minuteOfHour();
        org.joda.time.DateTime dateTime24 = dateTime7.withYear(1969);
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.year();
        org.joda.time.DateTimeField dateTimeField27 = chronology25.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField28 = chronology25.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField29 = chronology25.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField30 = chronology25.minuteOfDay();
        org.joda.time.DurationField durationField31 = chronology25.centuries();
        long long34 = durationField31.getMillis((long) 433, 17038080020972L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0977");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant3, periodType4);
        mutablePeriod5.setMillis((int) (short) 1);
        int int8 = mutablePeriod5.getSeconds();
        mutablePeriod5.addYears(2);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.DateTime dateTime12 = new org.joda.time.DateTime(chronology11);
        org.joda.time.DateTime.Property property13 = dateTime12.yearOfEra();
        org.joda.time.DateTime.Property property14 = dateTime12.weekOfWeekyear();
        org.joda.time.Interval interval15 = property14.toInterval();
        org.joda.time.Instant instant17 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime18 = instant17.toDateTime();
        org.joda.time.DateTime.Property property19 = dateTime18.era();
        org.joda.time.DateTime dateTime20 = dateTime18.withTimeAtStartOfDay();
        org.joda.time.Instant instant21 = dateTime18.toInstant();
        org.joda.time.TimeOfDay timeOfDay22 = dateTime18.toTimeOfDay();
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        org.joda.time.DateTime.Property property26 = dateTime25.era();
        org.joda.time.DateTime dateTime27 = dateTime25.withTimeAtStartOfDay();
        org.joda.time.Instant instant28 = dateTime25.toInstant();
        org.joda.time.DateMidnight dateMidnight29 = dateTime25.toDateMidnight();
        org.joda.time.DateTime dateTime32 = dateTime25.withDurationAdded(0L, (int) 'a');
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime18, (org.joda.time.ReadableInstant) dateTime32);
        boolean boolean35 = dateTime18.isEqual(1672531200000L);
        org.joda.time.DateTime dateTime37 = dateTime18.plusWeeks((-2147483648));
        boolean boolean38 = interval15.isBefore((org.joda.time.ReadableInstant) dateTime18);
        long long39 = interval15.getStartMillis();
        mutablePeriod5.setPeriod((org.joda.time.ReadableInterval) interval15);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant17 and dateTime18", (instant17.compareTo(dateTime18) == 0) == instant17.equals(dateTime18));
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0978");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.DateTime dateTime15 = dateTime2.minusWeeks((int) (byte) 1);
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.forID("UTC");
        org.joda.time.MutableDateTime mutableDateTime18 = dateTime2.toMutableDateTime(dateTimeZone17);
        org.joda.time.DateTime dateTime19 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.DateTime.Property property20 = dateTime19.weekOfWeekyear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0979");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTimeField dateTimeField2 = dateTimeFieldType0.getField(chronology1);
        long long5 = dateTimeField2.add(0L, (long) (short) 1);
        long long7 = dateTimeField2.roundHalfCeiling((long) 2);
        org.joda.time.DurationField durationField8 = dateTimeField2.getDurationField();
        long long10 = durationField8.getMillis((int) '4');
        long long13 = durationField8.add((long) (short) 10, 0L);
        long long16 = durationField8.getDifferenceAsLong(0L, (long) (byte) 1);
        long long18 = durationField8.getMillis((long) (short) 10);
        org.joda.time.Duration duration22 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, readableInstant23, periodType24);
        org.joda.time.Days days26 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.minutes();
        int int28 = days26.get(durationFieldType27);
        mutablePeriod25.add(durationFieldType27, 8);
        org.joda.time.ReadablePeriod readablePeriod31 = null;
        mutablePeriod25.add(readablePeriod31);
        int int33 = mutablePeriod25.getMonths();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime(chronology34);
        org.joda.time.DateTime.Property property36 = dateTime35.yearOfEra();
        org.joda.time.Interval interval37 = property36.toInterval();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.DateTime dateTime39 = new org.joda.time.DateTime(chronology38);
        org.joda.time.DateTime.Property property40 = dateTime39.yearOfEra();
        org.joda.time.Interval interval41 = property40.toInterval();
        boolean boolean42 = interval37.contains((org.joda.time.ReadableInterval) interval41);
        mutablePeriod25.setPeriod((org.joda.time.ReadableInterval) interval37);
        org.joda.time.DurationFieldType durationFieldType45 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant47 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime48 = instant47.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone49 = null;
        org.joda.time.DateTime dateTime50 = dateTime48.withZoneRetainFields(dateTimeZone49);
        org.joda.time.Instant instant52 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime53 = instant52.toDateTime();
        org.joda.time.DateTime.Property property54 = dateTime53.era();
        org.joda.time.DateTime dateTime55 = dateTime53.withTimeAtStartOfDay();
        org.joda.time.Duration duration58 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.PeriodType periodType60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration58, readableInstant59, periodType60);
        mutablePeriod61.setMonths((int) '4');
        org.joda.time.DateTime dateTime64 = dateTime53.plus((org.joda.time.ReadablePeriod) mutablePeriod61);
        org.joda.time.DateTime dateTime66 = dateTime53.minusWeeks((int) (byte) 1);
        int int67 = dateTime50.compareTo((org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.DateTime.Property property68 = dateTime53.minuteOfHour();
        org.joda.time.DateTime dateTime70 = dateTime53.withYear(1969);
        org.joda.time.Chronology chronology71 = dateTime70.getChronology();
        org.joda.time.DurationField durationField72 = durationFieldType45.getField(chronology71);
        mutablePeriod25.add((-43199999L), chronology71);
        org.joda.time.DurationField durationField74 = chronology71.millis();
        org.joda.time.DurationField durationField75 = chronology71.months();
        org.joda.time.DateTime dateTime76 = new org.joda.time.DateTime((long) 69, chronology71);
        org.joda.time.DateTimeField dateTimeField77 = chronology71.minuteOfDay();
        org.joda.time.DurationField durationField78 = chronology71.months();
        org.joda.time.Instant instant80 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime81 = instant80.toDateTime();
        org.joda.time.TimeOfDay timeOfDay82 = dateTime81.toTimeOfDay();
        int[] intArray84 = chronology71.get((org.joda.time.ReadablePartial) timeOfDay82, (long) 86399);
        long long88 = chronology71.add(0L, 86400467L, (int) 'a');
        org.joda.time.DurationField durationField89 = chronology71.weeks();
        int int90 = durationField8.compareTo(durationField89);
        org.joda.time.DurationFieldType durationFieldType91 = durationField8.getType();
        java.lang.String str92 = durationField8.getName();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant47 and dateTime48", (instant47.compareTo(dateTime48) == 0) == instant47.equals(dateTime48));
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0980");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.Instant instant5 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant7 = instant5.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime8 = instant5.toMutableDateTimeISO();
        org.joda.time.Period period9 = duration2.toPeriodTo((org.joda.time.ReadableInstant) instant5);
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.DateTime dateTime14 = dateTime12.withTimeAtStartOfDay();
        org.joda.time.Duration duration17 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration17, readableInstant18, periodType19);
        mutablePeriod20.setMonths((int) '4');
        org.joda.time.DateTime dateTime23 = dateTime12.plus((org.joda.time.ReadablePeriod) mutablePeriod20);
        org.joda.time.DateTime dateTime25 = dateTime12.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property26 = dateTime25.monthOfYear();
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType31, chronology32);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1L, (long) 10, periodType31, chronology34);
        org.joda.time.PeriodType periodType36 = periodType31.withDaysRemoved();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, (org.joda.time.ReadableInstant) dateTime25, periodType31);
        org.joda.time.DateTime dateTime39 = dateTime25.minusMonths((int) 'a');
        long long40 = dateTime25.getMillis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant5 and mutableDateTime8", (instant5.compareTo(mutableDateTime8) == 0) == instant5.equals(mutableDateTime8));
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0981");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTimeField dateTimeField2 = dateTimeFieldType0.getField(chronology1);
        long long5 = dateTimeField2.add(0L, (long) (short) 1);
        org.joda.time.ReadablePartial readablePartial6 = null;
        int int7 = dateTimeField2.getMinimumValue(readablePartial6);
        org.joda.time.DateTimeFieldType dateTimeFieldType8 = dateTimeField2.getType();
        org.joda.time.Instant instant10 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime11 = instant10.toDateTime();
        org.joda.time.DateTime.Property property12 = dateTime11.era();
        org.joda.time.DateTime dateTime13 = dateTime11.withTimeAtStartOfDay();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration16, readableInstant17, periodType18);
        mutablePeriod19.setMonths((int) '4');
        org.joda.time.DateTime dateTime22 = dateTime11.plus((org.joda.time.ReadablePeriod) mutablePeriod19);
        org.joda.time.LocalDate localDate23 = dateTime11.toLocalDate();
        int int24 = localDate23.size();
        int int25 = dateTimeField2.getMinimumValue((org.joda.time.ReadablePartial) localDate23);
        org.joda.time.Duration duration28 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds29 = duration28.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration30 = null;
        boolean boolean31 = duration28.isEqual(readableDuration30);
        org.joda.time.Duration duration33 = duration28.minus((long) 1);
        org.joda.time.Duration duration35 = duration33.minus((long) '4');
        org.joda.time.Instant instant37 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime38 = instant37.toDateTime();
        org.joda.time.DateTime.Property property39 = dateTime38.era();
        org.joda.time.Duration duration42 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration45 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period46 = duration45.toPeriod();
        org.joda.time.Duration duration48 = duration45.plus((long) (byte) 0);
        org.joda.time.Instant instant50 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime51 = instant50.toDateTime();
        boolean boolean53 = dateTime51.isEqual(10L);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MutablePeriod mutablePeriod58 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType56, chronology57);
        org.joda.time.PeriodType periodType59 = periodType56.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration48, (org.joda.time.ReadableInstant) dateTime51, periodType59);
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime38, (org.joda.time.ReadableDuration) duration42, periodType59);
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, (org.joda.time.ReadableInstant) dateTime38, periodType62);
        org.joda.time.TimeOfDay timeOfDay64 = dateTime38.toTimeOfDay();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.DateTime dateTime66 = timeOfDay64.toDateTime(readableInstant65);
        int int67 = timeOfDay64.size();
        org.joda.time.Chronology chronology68 = timeOfDay64.getChronology();
        org.joda.time.Instant instant70 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant72 = instant70.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime73 = instant70.toMutableDateTimeISO();
        org.joda.time.DateTimeFieldType dateTimeFieldType74 = org.joda.time.DateTimeFieldType.weekyearOfCentury();
        int int75 = mutableDateTime73.get(dateTimeFieldType74);
        int int76 = mutableDateTime73.getYearOfEra();
        int int77 = mutableDateTime73.getWeekOfWeekyear();
        org.joda.time.DateTime dateTime78 = timeOfDay64.toDateTime((org.joda.time.ReadableInstant) mutableDateTime73);
        org.joda.time.TimeOfDay timeOfDay79 = dateTime78.toTimeOfDay();
        org.joda.time.Duration duration82 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant83 = null;
        org.joda.time.PeriodType periodType84 = null;
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration82, readableInstant83, periodType84);
        mutablePeriod85.setMonths((int) '4');
        org.joda.time.Period period88 = mutablePeriod85.toPeriod();
        int[] intArray89 = period88.getValues();
        int int90 = dateTimeField2.getMinimumValue((org.joda.time.ReadablePartial) timeOfDay79, intArray89);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant10 and dateTime11", (instant10.compareTo(dateTime11) == 0) == instant10.equals(dateTime11));
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0982");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(0, (int) 'a', 1, 100, (int) (byte) 10, 0, (int) (short) -1, (int) (byte) -1);
        int int9 = mutablePeriod8.getDays();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        org.joda.time.DateTime.Property property14 = dateTime13.yearOfEra();
        org.joda.time.Interval interval15 = property14.toInterval();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.DateTime dateTime17 = new org.joda.time.DateTime(chronology16);
        org.joda.time.DateTime.Property property18 = dateTime17.yearOfEra();
        org.joda.time.Interval interval19 = property18.toInterval();
        boolean boolean20 = interval15.contains((org.joda.time.ReadableInterval) interval19);
        org.joda.time.Chronology chronology21 = interval19.getChronology();
        mutablePeriod8.setPeriod((long) 'u', (long) 1969, chronology21);
        org.joda.time.DateTimeField dateTimeField23 = chronology21.millisOfDay();
        org.joda.time.DateTimeField dateTimeField24 = chronology21.yearOfCentury();
        org.joda.time.Duration duration27 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds28 = duration27.toStandardSeconds();
        org.joda.time.ReadableDuration readableDuration29 = null;
        boolean boolean30 = duration27.isEqual(readableDuration29);
        org.joda.time.Duration duration32 = duration27.minus((long) 1);
        org.joda.time.Duration duration34 = duration32.minus((long) '4');
        org.joda.time.Instant instant36 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime37 = instant36.toDateTime();
        org.joda.time.DateTime.Property property38 = dateTime37.era();
        org.joda.time.Duration duration41 = new org.joda.time.Duration((long) 0, (long) (byte) 100);
        org.joda.time.Duration duration44 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period45 = duration44.toPeriod();
        org.joda.time.Duration duration47 = duration44.plus((long) (byte) 0);
        org.joda.time.Instant instant49 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime50 = instant49.toDateTime();
        boolean boolean52 = dateTime50.isEqual(10L);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType55, chronology56);
        org.joda.time.PeriodType periodType58 = periodType55.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration47, (org.joda.time.ReadableInstant) dateTime50, periodType58);
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime37, (org.joda.time.ReadableDuration) duration41, periodType58);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, (org.joda.time.ReadableInstant) dateTime37, periodType61);
        org.joda.time.TimeOfDay timeOfDay63 = dateTime37.toTimeOfDay();
        int[] intArray65 = chronology21.get((org.joda.time.ReadablePartial) timeOfDay63, (long) (-1));
        org.joda.time.DateTimeField dateTimeField66 = chronology21.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField67 = chronology21.millisOfDay();
        org.joda.time.Duration duration70 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.PeriodType periodType72 = null;
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration70, readableInstant71, periodType72);
        mutablePeriod73.setMonths((int) '4');
        org.joda.time.Period period77 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period79 = period77.minusMonths((int) (short) 10);
        org.joda.time.DurationFieldType durationFieldType80 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Period period82 = period77.withFieldAdded(durationFieldType80, (int) (short) 100);
        mutablePeriod73.set(durationFieldType80, (int) '4');
        int[] intArray86 = chronology21.get((org.joda.time.ReadablePeriod) mutablePeriod73, (long) 1970);
        mutablePeriod73.addMinutes(1800);
        mutablePeriod73.setPeriod(4190399999L, 123811200001L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant36 and dateTime37", (instant36.compareTo(dateTime37) == 0) == instant36.equals(dateTime37));
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0983");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = duration2.toPeriodTo(readableInstant6);
        org.joda.time.Duration duration9 = duration2.withMillis((long) (short) 0);
        java.lang.String str10 = duration9.toString();
        org.joda.time.Duration duration11 = duration9.toDuration();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearWeekDayTime();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration11, readableInstant12, periodType13);
        org.joda.time.Hours hours15 = org.joda.time.Hours.FIVE;
        org.joda.time.Hours hours16 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours17 = hours15.plus(hours16);
        org.joda.time.Duration duration18 = hours15.toStandardDuration();
        org.joda.time.Duration duration21 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration21, readableInstant22, periodType23);
        mutablePeriod24.setMillis((int) (short) 1);
        mutablePeriod24.setDays(100);
        org.joda.time.Instant instant30 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant32 = instant30.minus(100L);
        org.joda.time.Instant instant34 = instant32.plus((long) 100);
        boolean boolean35 = instant32.isBeforeNow();
        org.joda.time.Instant instant37 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime38 = instant37.toDateTime();
        org.joda.time.DateTime.Property property39 = dateTime38.era();
        int int40 = dateTime38.getWeekOfWeekyear();
        int int41 = dateTime38.getMonthOfYear();
        int int42 = dateTime38.getDayOfWeek();
        org.joda.time.DateTime dateTime44 = dateTime38.plus(4190400000L);
        org.joda.time.DateTime dateTime46 = dateTime44.withYearOfCentury((int) (short) 10);
        org.joda.time.DateTime.Property property47 = dateTime46.centuryOfEra();
        mutablePeriod24.setPeriod((org.joda.time.ReadableInstant) instant32, (org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.MutableDateTime mutableDateTime49 = instant32.toMutableDateTime();
        org.joda.time.Period period50 = duration18.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime49);
        org.joda.time.Period period52 = org.joda.time.Period.millis((int) (short) -1);
        org.joda.time.Period period54 = period52.plusWeeks((int) (byte) 1);
        int int55 = period52.size();
        org.joda.time.ReadablePeriod readablePeriod56 = null;
        org.joda.time.Period period57 = period52.minus(readablePeriod56);
        org.joda.time.Period period59 = period52.minusWeeks(2);
        org.joda.time.Period period61 = period59.withHours(1969);
        org.joda.time.PeriodType periodType62 = period61.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod(periodType62);
        org.joda.time.Period period64 = duration11.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime49, periodType62);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant30 and dateTime38", (instant30.compareTo(dateTime38) == 0) == instant30.equals(dateTime38));
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0984");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.Seconds seconds3 = duration2.toStandardSeconds();
        org.joda.time.Instant instant5 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant7 = instant5.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime8 = instant5.toMutableDateTimeISO();
        org.joda.time.Period period9 = duration2.toPeriodTo((org.joda.time.ReadableInstant) instant5);
        org.joda.time.Instant instant11 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime12 = instant11.toDateTime();
        org.joda.time.DateTime.Property property13 = dateTime12.era();
        org.joda.time.DateTime dateTime14 = dateTime12.withTimeAtStartOfDay();
        org.joda.time.Duration duration17 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration17, readableInstant18, periodType19);
        mutablePeriod20.setMonths((int) '4');
        org.joda.time.DateTime dateTime23 = dateTime12.plus((org.joda.time.ReadablePeriod) mutablePeriod20);
        org.joda.time.DateTime dateTime25 = dateTime12.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property26 = dateTime25.monthOfYear();
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType31, chronology32);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1L, (long) 10, periodType31, chronology34);
        org.joda.time.PeriodType periodType36 = periodType31.withDaysRemoved();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, (org.joda.time.ReadableInstant) dateTime25, periodType31);
        org.joda.time.Instant instant39 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant40 = instant39.toInstant();
        org.joda.time.DateTime dateTime41 = instant40.toDateTimeISO();
        org.joda.time.Period period42 = duration2.toPeriodTo((org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.Duration duration43 = duration2.toDuration();
        org.joda.time.Duration duration44 = duration43.toDuration();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardSeconds((long) 1969);
        boolean boolean47 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration48 = duration46.toDuration();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant5 and mutableDateTime8", (instant5.compareTo(mutableDateTime8) == 0) == instant5.equals(mutableDateTime8));
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0985");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Instant instant5 = dateTime2.toInstant();
        org.joda.time.TimeOfDay timeOfDay6 = dateTime2.toTimeOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType7 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.DateTimeField dateTimeField9 = dateTimeFieldType7.getField(chronology8);
        long long12 = dateTimeField9.add(0L, (long) (short) 1);
        long long14 = dateTimeField9.roundHalfCeiling((long) 2);
        org.joda.time.Instant instant16 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime17 = instant16.toDateTime();
        org.joda.time.DateTime.Property property18 = dateTime17.era();
        org.joda.time.Instant instant20 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant22 = instant20.minus(100L);
        org.joda.time.Instant instant24 = instant22.plus((long) 100);
        org.joda.time.Instant instant26 = instant22.withMillis((long) (byte) 1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime17, (org.joda.time.ReadableInstant) instant22);
        org.joda.time.LocalTime localTime28 = dateTime17.toLocalTime();
        org.joda.time.Duration duration32 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration32, readableInstant33, periodType34);
        mutablePeriod35.setMonths((int) '4');
        org.joda.time.Period period38 = mutablePeriod35.toPeriod();
        int[] intArray39 = period38.getValues();
        int[] intArray41 = dateTimeField9.addWrapField((org.joda.time.ReadablePartial) localTime28, 0, intArray39, 3);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadablePartial) timeOfDay6, (org.joda.time.ReadablePartial) localTime28);
        org.joda.time.DateTimeFieldType dateTimeFieldType43 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.DateTimeField dateTimeField45 = dateTimeFieldType43.getField(chronology44);
        long long48 = dateTimeField45.add(0L, (long) (short) 1);
        long long50 = dateTimeField45.roundHalfCeiling((long) 2);
        org.joda.time.Instant instant52 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime53 = instant52.toDateTime();
        org.joda.time.DateTime.Property property54 = dateTime53.era();
        org.joda.time.Instant instant56 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant58 = instant56.minus(100L);
        org.joda.time.Instant instant60 = instant58.plus((long) 100);
        org.joda.time.Instant instant62 = instant58.withMillis((long) (byte) 1);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime53, (org.joda.time.ReadableInstant) instant58);
        org.joda.time.LocalTime localTime64 = dateTime53.toLocalTime();
        org.joda.time.Duration duration68 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.PeriodType periodType70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration68, readableInstant69, periodType70);
        mutablePeriod71.setMonths((int) '4');
        org.joda.time.Period period74 = mutablePeriod71.toPeriod();
        int[] intArray75 = period74.getValues();
        int[] intArray77 = dateTimeField45.addWrapField((org.joda.time.ReadablePartial) localTime64, 0, intArray75, 3);
        org.joda.time.Period period78 = new org.joda.time.Period((org.joda.time.ReadablePartial) timeOfDay6, (org.joda.time.ReadablePartial) localTime64);
        org.joda.time.Instant instant80 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime81 = instant80.toDateTime();
        org.joda.time.DateTime.Property property82 = dateTime81.era();
        org.joda.time.DateTime dateTime83 = dateTime81.withTimeAtStartOfDay();
        org.joda.time.Instant instant84 = dateTime81.toInstant();
        org.joda.time.TimeOfDay timeOfDay85 = dateTime81.toTimeOfDay();
        org.joda.time.PeriodType periodType86 = org.joda.time.PeriodType.days();
        org.joda.time.Period period87 = new org.joda.time.Period((org.joda.time.ReadablePartial) timeOfDay6, (org.joda.time.ReadablePartial) timeOfDay85, periodType86);
        org.joda.time.MutablePeriod mutablePeriod88 = new org.joda.time.MutablePeriod(periodType86);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0986");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        java.util.TimeZone timeZone3 = null;
        org.joda.time.DateTimeZone dateTimeZone4 = org.joda.time.DateTimeZone.forTimeZone(timeZone3);
        org.joda.time.MutableDateTime mutableDateTime5 = dateTime2.toMutableDateTime(dateTimeZone4);
        org.joda.time.Duration duration8 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration8, readableInstant9, periodType10);
        java.lang.String str12 = duration8.toString();
        org.joda.time.Instant instant14 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant16 = instant14.minus(100L);
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, (org.joda.time.ReadableInstant) instant14);
        org.joda.time.Instant instant19 = instant14.withMillis((long) 1970);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant14);
        org.joda.time.DateTime dateTime21 = dateTime2.toDateTime();
        org.joda.time.DateTime dateTime23 = dateTime2.plus((long) 10);
        org.joda.time.Duration duration26 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period27 = duration26.toPeriod();
        org.joda.time.Duration duration29 = duration26.plus((long) (byte) 0);
        org.joda.time.Duration duration32 = new org.joda.time.Duration((-1L), 10L);
        long long33 = duration32.getStandardDays();
        org.joda.time.Duration duration34 = duration29.plus((org.joda.time.ReadableDuration) duration32);
        java.lang.Object obj36 = null;
        org.joda.time.Instant instant37 = new org.joda.time.Instant(obj36);
        org.joda.time.DateTimeZone dateTimeZone38 = instant37.getZone();
        java.lang.String str39 = dateTimeZone38.toString();
        int int41 = dateTimeZone38.getOffset(1L);
        boolean boolean43 = dateTimeZone38.isStandardOffset(0L);
        java.lang.String str45 = dateTimeZone38.getNameKey((long) 1);
        org.joda.time.DateTime dateTime46 = new org.joda.time.DateTime(dateTimeZone38);
        org.joda.time.DateTime dateTime47 = new org.joda.time.DateTime((-1L), dateTimeZone38);
        org.joda.time.Period period49 = org.joda.time.Period.seconds((-1));
        org.joda.time.Period period51 = period49.minusMonths((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Duration duration53 = period51.toDurationTo(readableInstant52);
        org.joda.time.Duration duration56 = duration53.withDurationAdded((long) '#', 0);
        org.joda.time.Instant instant58 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant60 = instant58.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime61 = instant58.toMutableDateTimeISO();
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period63 = duration56.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime61, periodType62);
        org.joda.time.Minutes minutes64 = duration56.toStandardMinutes();
        org.joda.time.DateTime dateTime65 = dateTime47.plus((org.joda.time.ReadableDuration) duration56);
        org.joda.time.DateTimeZone dateTimeZone66 = org.joda.time.DateTimeZone.getDefault();
        org.joda.time.DateTime dateTime67 = new org.joda.time.DateTime((java.lang.Object) dateTime47, dateTimeZone66);
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType70, chronology71);
        org.joda.time.Period period73 = duration29.toPeriodTo((org.joda.time.ReadableInstant) dateTime67, periodType70);
        org.joda.time.DateTime dateTime75 = dateTime23.withDurationAdded((org.joda.time.ReadableDuration) duration29, 1);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0987");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.LocalDate localDate14 = dateTime2.toLocalDate();
        int int15 = localDate14.size();
        org.joda.time.Instant instant17 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime18 = instant17.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone19 = null;
        org.joda.time.DateTime dateTime20 = dateTime18.withZone(dateTimeZone19);
        org.joda.time.Instant instant22 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime23 = instant22.toDateTime();
        org.joda.time.DateTime.Property property24 = dateTime23.era();
        org.joda.time.DateTime dateTime25 = dateTime23.withTimeAtStartOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType26 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean27 = dateTime23.isSupported(dateTimeFieldType26);
        org.joda.time.DateTime.Property property28 = dateTime18.property(dateTimeFieldType26);
        org.joda.time.DateTimeZone dateTimeZone29 = dateTime18.getZone();
        org.joda.time.LocalDate localDate30 = dateTime18.toLocalDate();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.weeksBetween((org.joda.time.ReadablePartial) localDate14, (org.joda.time.ReadablePartial) localDate30);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0988");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime4 = instant3.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone5 = null;
        org.joda.time.DateTime dateTime6 = dateTime4.withZoneRetainFields(dateTimeZone5);
        org.joda.time.Instant instant8 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime9 = instant8.toDateTime();
        org.joda.time.DateTime.Property property10 = dateTime9.era();
        org.joda.time.DateTime dateTime11 = dateTime9.withTimeAtStartOfDay();
        org.joda.time.Duration duration14 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration14, readableInstant15, periodType16);
        mutablePeriod17.setMonths((int) '4');
        org.joda.time.DateTime dateTime20 = dateTime9.plus((org.joda.time.ReadablePeriod) mutablePeriod17);
        org.joda.time.DateTime dateTime22 = dateTime9.minusWeeks((int) (byte) 1);
        int int23 = dateTime6.compareTo((org.joda.time.ReadableInstant) dateTime9);
        org.joda.time.DateTime.Property property24 = dateTime9.minuteOfHour();
        org.joda.time.DateTime dateTime26 = dateTime9.withYear(1969);
        org.joda.time.Chronology chronology27 = dateTime26.getChronology();
        org.joda.time.DateTimeField dateTimeField28 = chronology27.dayOfMonth();
        org.joda.time.DurationField durationField29 = chronology27.minutes();
        org.joda.time.DateTime dateTime30 = dateTime1.toDateTime(chronology27);
        org.joda.time.DateTimeField dateTimeField31 = chronology27.hourOfHalfday();
        long long33 = dateTimeField31.roundHalfFloor((long) (short) 0);
        org.joda.time.DurationField durationField34 = dateTimeField31.getDurationField();
        java.lang.String str36 = dateTimeField31.getAsText(27349920L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant3 and dateTime4", (instant3.compareTo(dateTime4) == 0) == instant3.equals(dateTime4));
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0989");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.Duration duration5 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period6 = duration5.toPeriod();
        org.joda.time.Duration duration8 = duration5.plus((long) (byte) 0);
        org.joda.time.Minutes minutes9 = duration5.toStandardMinutes();
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType11 = periodType10.withMinutesRemoved();
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableInstant) instant1, (org.joda.time.ReadableDuration) duration5, periodType10);
        org.joda.time.MutableDateTime mutableDateTime13 = instant1.toMutableDateTime();
        org.joda.time.Instant instant15 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime16 = instant15.toDateTime();
        org.joda.time.DateTime.Property property17 = dateTime16.era();
        org.joda.time.DateTime dateTime18 = dateTime16.withTimeAtStartOfDay();
        org.joda.time.Duration duration21 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration21, readableInstant22, periodType23);
        mutablePeriod24.setMonths((int) '4');
        org.joda.time.DateTime dateTime27 = dateTime16.plus((org.joda.time.ReadablePeriod) mutablePeriod24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) instant1, (org.joda.time.ReadableInstant) dateTime27);
        boolean boolean30 = instant1.isEqual((long) 676);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime2 and instant15", (dateTime2.compareTo(instant15) == 0) == dateTime2.equals(instant15));
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0990");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant3 = instant1.minus(100L);
        org.joda.time.MutableDateTime mutableDateTime4 = instant1.toMutableDateTimeISO();
        java.lang.Object obj5 = null;
        org.joda.time.Instant instant6 = new org.joda.time.Instant(obj5);
        boolean boolean7 = mutableDateTime4.isAfter((org.joda.time.ReadableInstant) instant6);
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period11 = duration10.toPeriod();
        org.joda.time.Duration duration13 = duration10.plus((long) (byte) 0);
        org.joda.time.Instant instant14 = instant6.minus((org.joda.time.ReadableDuration) duration13);
        org.joda.time.MutableDateTime mutableDateTime15 = instant6.toMutableDateTime();
        org.joda.time.Instant instant17 = instant6.withMillis(17536210964946L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and mutableDateTime4", (instant1.compareTo(mutableDateTime4) == 0) == instant1.equals(mutableDateTime4));
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0991");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime.Property property2 = dateTime1.yearOfEra();
        org.joda.time.Interval interval3 = property2.toInterval();
        org.joda.time.DateTime dateTime4 = interval3.getStart();
        org.joda.time.DateTime dateTime5 = dateTime4.toDateTimeISO();
        org.joda.time.DateTimeZone dateTimeZone6 = dateTime5.getZone();
        org.joda.time.Instant instant8 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime9 = instant8.toDateTime();
        org.joda.time.DateTime.Property property10 = dateTime9.era();
        org.joda.time.DateTime dateTime11 = dateTime9.withTimeAtStartOfDay();
        org.joda.time.Duration duration14 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration14, readableInstant15, periodType16);
        mutablePeriod17.setMonths((int) '4');
        org.joda.time.DateTime dateTime20 = dateTime9.plus((org.joda.time.ReadablePeriod) mutablePeriod17);
        org.joda.time.DateTime dateTime22 = dateTime9.minusWeeks((int) (byte) 1);
        org.joda.time.DateTime.Property property23 = dateTime22.monthOfYear();
        org.joda.time.DateTime.Property property24 = dateTime22.weekyear();
        org.joda.time.DateTime dateTime25 = dateTime22.toDateTime();
        boolean boolean26 = dateTime22.isEqualNow();
        org.joda.time.Chronology chronology27 = dateTime22.getChronology();
        int int28 = dateTimeZone6.getOffset((org.joda.time.ReadableInstant) dateTime22);
        java.lang.Object obj29 = null;
        org.joda.time.Instant instant30 = new org.joda.time.Instant(obj29);
        org.joda.time.DateTimeZone dateTimeZone31 = instant30.getZone();
        java.lang.String str32 = dateTimeZone31.toString();
        org.joda.time.DateTime dateTime33 = new org.joda.time.DateTime(dateTimeZone31);
        org.joda.time.MutableDateTime mutableDateTime34 = dateTime22.toMutableDateTime(dateTimeZone31);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant30", (dateTime1.compareTo(instant30) == 0) == dateTime1.equals(instant30));
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0992");
        java.lang.Object obj0 = null;
        org.joda.time.Instant instant1 = new org.joda.time.Instant(obj0);
        org.joda.time.DateTimeZone dateTimeZone2 = instant1.getZone();
        java.lang.String str3 = dateTimeZone2.toString();
        boolean boolean5 = dateTimeZone2.isStandardOffset((long) '4');
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime8 = instant7.toDateTime();
        org.joda.time.DateTime.Property property9 = dateTime8.era();
        org.joda.time.DateTime dateTime10 = dateTime8.withTimeAtStartOfDay();
        org.joda.time.Duration duration13 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration13, readableInstant14, periodType15);
        mutablePeriod16.setMonths((int) '4');
        org.joda.time.DateTime dateTime19 = dateTime8.plus((org.joda.time.ReadablePeriod) mutablePeriod16);
        org.joda.time.DateTime dateTime21 = dateTime8.minusWeeks((int) (byte) 1);
        org.joda.time.DateTimeZone dateTimeZone23 = org.joda.time.DateTimeZone.forID("UTC");
        org.joda.time.MutableDateTime mutableDateTime24 = dateTime8.toMutableDateTime(dateTimeZone23);
        java.lang.String str25 = dateTimeZone23.toString();
        long long27 = dateTimeZone2.getMillisKeepLocal(dateTimeZone23, 1L);
        int int29 = dateTimeZone2.getOffsetFromLocal((-7152L));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime8", (instant7.compareTo(dateTime8) == 0) == instant7.equals(dateTime8));
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0993");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.DateTime.Property property5 = dateTime4.weekOfWeekyear();
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant9 = instant7.minus(100L);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime4, (org.joda.time.ReadableInstant) instant7);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.minutes(9);
        org.joda.time.DateTimeFieldType dateTimeFieldType13 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.DateTimeField dateTimeField15 = dateTimeFieldType13.getField(chronology14);
        long long18 = dateTimeField15.add(0L, (long) (short) 1);
        long long20 = dateTimeField15.roundHalfCeiling((long) 2);
        org.joda.time.Instant instant22 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime23 = instant22.toDateTime();
        org.joda.time.DateTime.Property property24 = dateTime23.era();
        org.joda.time.Instant instant26 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant28 = instant26.minus(100L);
        org.joda.time.Instant instant30 = instant28.plus((long) 100);
        org.joda.time.Instant instant32 = instant28.withMillis((long) (byte) 1);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) instant28);
        org.joda.time.LocalTime localTime34 = dateTime23.toLocalTime();
        org.joda.time.Duration duration38 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration38, readableInstant39, periodType40);
        mutablePeriod41.setMonths((int) '4');
        org.joda.time.Period period44 = mutablePeriod41.toPeriod();
        int[] intArray45 = period44.getValues();
        int[] intArray47 = dateTimeField15.addWrapField((org.joda.time.ReadablePartial) localTime34, 0, intArray45, 3);
        long long49 = dateTimeField15.roundFloor((long) 12);
        boolean boolean50 = minutes12.equals((java.lang.Object) dateTimeField15);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes54 = minutes52.minus((int) (short) -1);
        boolean boolean55 = minutes51.isGreaterThan(minutes52);
        org.joda.time.Minutes minutes56 = null;
        org.joda.time.Minutes minutes57 = minutes52.minus(minutes56);
        org.joda.time.Minutes minutes59 = minutes52.minus((int) (byte) -1);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes63 = minutes61.minus((int) (short) -1);
        boolean boolean64 = minutes60.isGreaterThan(minutes61);
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.TWO;
        boolean boolean66 = minutes60.isLessThan(minutes65);
        boolean boolean67 = minutes52.isLessThan(minutes60);
        boolean boolean68 = minutes12.isGreaterThan(minutes52);
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes52);
        boolean boolean70 = minutes10.isLessThan(minutes52);
        org.joda.time.Minutes minutes72 = minutes52.minus((-10));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0994");
        java.lang.Object obj0 = null;
        org.joda.time.Instant instant1 = new org.joda.time.Instant(obj0);
        org.joda.time.DateTimeZone dateTimeZone2 = instant1.getZone();
        java.lang.String str3 = dateTimeZone2.toString();
        boolean boolean5 = dateTimeZone2.isStandardOffset((long) '4');
        java.util.TimeZone timeZone6 = dateTimeZone2.toTimeZone();
        java.util.Locale locale7 = java.util.Locale.KOREAN;
        java.lang.Object obj8 = locale7.clone();
        boolean boolean9 = dateTimeZone2.equals(obj8);
        java.lang.String str10 = dateTimeZone2.getID();
        java.lang.String str12 = dateTimeZone2.getNameKey((-625L));
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.DateTime dateTime14 = new org.joda.time.DateTime(chronology13);
        org.joda.time.DateTime.Property property15 = dateTime14.yearOfEra();
        org.joda.time.Interval interval16 = property15.toInterval();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.DateTime dateTime18 = new org.joda.time.DateTime(chronology17);
        org.joda.time.DateTime.Property property19 = dateTime18.yearOfEra();
        org.joda.time.Interval interval20 = property19.toInterval();
        boolean boolean21 = interval16.contains((org.joda.time.ReadableInterval) interval20);
        java.lang.String str22 = interval16.toString();
        long long23 = interval16.getEndMillis();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval16);
        org.joda.time.Instant instant26 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime27 = instant26.toDateTime();
        org.joda.time.DateTime.Property property28 = dateTime27.era();
        int int29 = dateTime27.getWeekOfWeekyear();
        int int30 = dateTime27.getMonthOfYear();
        boolean boolean31 = interval16.isBefore((org.joda.time.ReadableInstant) dateTime27);
        org.joda.time.Instant instant33 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime34 = instant33.toDateTime();
        java.util.TimeZone timeZone35 = null;
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.forTimeZone(timeZone35);
        org.joda.time.MutableDateTime mutableDateTime37 = dateTime34.toMutableDateTime(dateTimeZone36);
        org.joda.time.Duration duration40 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.PeriodType periodType42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration40, readableInstant41, periodType42);
        java.lang.String str44 = duration40.toString();
        org.joda.time.Instant instant46 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant48 = instant46.minus(100L);
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, (org.joda.time.ReadableInstant) instant46);
        org.joda.time.Instant instant51 = instant46.withMillis((long) 1970);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime34, (org.joda.time.ReadableInstant) instant46);
        org.joda.time.DateTime dateTime53 = dateTime34.toDateTime();
        boolean boolean54 = interval16.contains((org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.Chronology chronology55 = interval16.getChronology();
        boolean boolean56 = dateTimeZone2.equals((java.lang.Object) chronology55);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime14", (instant1.compareTo(dateTime14) == 0) == instant1.equals(dateTime14));
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0995");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = duration2.toPeriodTo(readableInstant6);
        org.joda.time.Duration duration9 = duration2.withMillis((long) (short) 0);
        org.joda.time.Duration duration12 = duration2.withDurationAdded((long) 1, (int) ' ');
        org.joda.time.Instant instant14 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant14.toDateTime();
        boolean boolean17 = dateTime15.isEqual(10L);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, (org.joda.time.ReadableInstant) dateTime15, periodType18);
        java.lang.Object obj20 = null;
        org.joda.time.Instant instant21 = new org.joda.time.Instant(obj20);
        org.joda.time.DateTimeZone dateTimeZone22 = instant21.getZone();
        org.joda.time.DateTime dateTime23 = dateTime15.toDateTime(dateTimeZone22);
        org.joda.time.DateTime dateTime24 = dateTime23.toDateTimeISO();
        org.joda.time.Chronology chronology25 = dateTime24.getChronology();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant14 and dateTime15", (instant14.compareTo(dateTime15) == 0) == instant14.equals(dateTime15));
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0996");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.halfdayOfDay();
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTimeField dateTimeField2 = dateTimeFieldType0.getField(chronology1);
        int int4 = dateTimeField2.get((long) 'a');
        org.joda.time.DurationField durationField5 = dateTimeField2.getRangeDurationField();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.DateTime dateTime7 = new org.joda.time.DateTime(chronology6);
        org.joda.time.DateTime.Property property8 = dateTime7.yearOfEra();
        org.joda.time.Interval interval9 = property8.toInterval();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.DateTime dateTime11 = new org.joda.time.DateTime(chronology10);
        org.joda.time.DateTime.Property property12 = dateTime11.yearOfEra();
        org.joda.time.Interval interval13 = property12.toInterval();
        boolean boolean14 = interval9.contains((org.joda.time.ReadableInterval) interval13);
        org.joda.time.Chronology chronology15 = interval13.getChronology();
        org.joda.time.DurationField durationField16 = chronology15.weeks();
        org.joda.time.DateTime dateTime17 = new org.joda.time.DateTime(chronology15);
        org.joda.time.DurationField durationField18 = chronology15.centuries();
        org.joda.time.DurationField durationField19 = chronology15.days();
        org.joda.time.DateTimeField dateTimeField20 = chronology15.dayOfWeek();
        org.joda.time.DurationField durationField21 = chronology15.minutes();
        long long24 = durationField21.getDifferenceAsLong((-43199999L), (long) 365);
        org.joda.time.Duration duration27 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period28 = duration27.toPeriod();
        org.joda.time.Duration duration30 = duration27.plus((long) (byte) 0);
        org.joda.time.Instant instant32 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime33 = instant32.toDateTime();
        boolean boolean35 = dateTime33.isEqual(10L);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType38, chronology39);
        org.joda.time.PeriodType periodType41 = periodType38.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration30, (org.joda.time.ReadableInstant) dateTime33, periodType41);
        org.joda.time.Instant instant44 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime45 = instant44.toDateTime();
        org.joda.time.DateTime.Property property46 = dateTime45.era();
        org.joda.time.DateTime dateTime47 = dateTime45.withTimeAtStartOfDay();
        org.joda.time.Instant instant48 = dateTime45.toInstant();
        org.joda.time.DateTime dateTime50 = dateTime45.withMillis((long) '4');
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.Instant instant53 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime54 = instant53.toDateTime();
        org.joda.time.TimeOfDay timeOfDay55 = dateTime54.toTimeOfDay();
        org.joda.time.DateTime dateTime56 = dateTime45.withFields((org.joda.time.ReadablePartial) timeOfDay55);
        org.joda.time.DateTime.Property property57 = dateTime56.millisOfSecond();
        org.joda.time.DurationField durationField58 = property57.getDurationField();
        int int59 = durationField21.compareTo(durationField58);
        int int60 = durationField5.compareTo(durationField21);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant32 and dateTime33", (instant32.compareTo(dateTime33) == 0) == instant32.equals(dateTime33));
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0997");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.format.PeriodFormatter periodFormatter4 = periodFormatter2.withParseType(periodType3);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((long) 100, 0L, periodType8, chronology9);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((long) (short) 0, periodType8, chronology11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.minutes();
        int int14 = periodType8.indexOf(durationFieldType13);
        org.joda.time.format.PeriodFormatter periodFormatter15 = periodFormatter2.withParseType(periodType8);
        org.joda.time.PeriodType periodType16 = periodType8.withSecondsRemoved();
        org.joda.time.DurationFieldType durationFieldType17 = org.joda.time.DurationFieldType.minutes();
        org.joda.time.Instant instant19 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime20 = instant19.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone21 = null;
        org.joda.time.DateTime dateTime22 = dateTime20.withZoneRetainFields(dateTimeZone21);
        org.joda.time.Instant instant24 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime25 = instant24.toDateTime();
        org.joda.time.DateTime.Property property26 = dateTime25.era();
        org.joda.time.DateTime dateTime27 = dateTime25.withTimeAtStartOfDay();
        org.joda.time.Duration duration30 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration30, readableInstant31, periodType32);
        mutablePeriod33.setMonths((int) '4');
        org.joda.time.DateTime dateTime36 = dateTime25.plus((org.joda.time.ReadablePeriod) mutablePeriod33);
        org.joda.time.DateTime dateTime38 = dateTime25.minusWeeks((int) (byte) 1);
        int int39 = dateTime22.compareTo((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.DateTime.Property property40 = dateTime25.minuteOfHour();
        org.joda.time.DateTime dateTime42 = dateTime25.withYear(1969);
        org.joda.time.Chronology chronology43 = dateTime42.getChronology();
        org.joda.time.DurationField durationField44 = durationFieldType17.getField(chronology43);
        long long47 = durationField44.getValueAsLong((long) 59, (long) 12);
        org.joda.time.DurationFieldType durationFieldType48 = durationField44.getType();
        org.joda.time.Instant instant50 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime51 = instant50.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone52 = null;
        org.joda.time.DateTime dateTime53 = dateTime51.withZoneRetainFields(dateTimeZone52);
        org.joda.time.Instant instant55 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime56 = instant55.toDateTime();
        org.joda.time.DateTime.Property property57 = dateTime56.era();
        org.joda.time.DateTime dateTime58 = dateTime56.withTimeAtStartOfDay();
        org.joda.time.Duration duration61 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.PeriodType periodType63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration61, readableInstant62, periodType63);
        mutablePeriod64.setMonths((int) '4');
        org.joda.time.DateTime dateTime67 = dateTime56.plus((org.joda.time.ReadablePeriod) mutablePeriod64);
        org.joda.time.DateTime dateTime69 = dateTime56.minusWeeks((int) (byte) 1);
        int int70 = dateTime53.compareTo((org.joda.time.ReadableInstant) dateTime56);
        org.joda.time.DateTime.Property property71 = dateTime56.minuteOfHour();
        org.joda.time.DateTime dateTime73 = dateTime56.withYear(1969);
        org.joda.time.Chronology chronology74 = dateTime73.getChronology();
        org.joda.time.DateTimeField dateTimeField75 = chronology74.year();
        org.joda.time.DateTimeField dateTimeField76 = chronology74.era();
        boolean boolean77 = durationFieldType48.isSupported(chronology74);
        int int78 = periodType8.indexOf(durationFieldType48);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant19 and dateTime20", (instant19.compareTo(dateTime20) == 0) == instant19.equals(dateTime20));
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0998");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime2.withZoneRetainFields(dateTimeZone3);
        org.joda.time.DateTime.Property property5 = dateTime4.weekOfWeekyear();
        org.joda.time.Instant instant7 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.Instant instant9 = instant7.minus(100L);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime4, (org.joda.time.ReadableInstant) instant7);
        org.joda.time.DateTimeZone dateTimeZone11 = dateTime4.getZone();
        int int12 = dateTime4.getCenturyOfEra();
        org.joda.time.DateTime.Property property13 = dateTime4.centuryOfEra();
        org.joda.time.DateTime dateTime14 = property13.withMaximumValue();
        org.joda.time.DateTime dateTime16 = dateTime14.plusSeconds(9);
        org.joda.time.DateTime.Property property17 = dateTime16.year();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0999");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.DurationFieldType durationFieldType1 = org.joda.time.DurationFieldType.minutes();
        int int2 = days0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = days0.toMutablePeriod();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime.Property property6 = dateTime5.yearOfEra();
        org.joda.time.Interval interval7 = property6.toInterval();
        mutablePeriod3.add((org.joda.time.ReadableInterval) interval7);
        mutablePeriod3.setPeriod((int) (byte) 10, 1972, (-1), 10, 86399, 31, 7, 4);
        mutablePeriod3.addYears(52);
        org.joda.time.Instant instant22 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime23 = instant22.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone24 = null;
        org.joda.time.DateTime dateTime25 = dateTime23.withZoneRetainFields(dateTimeZone24);
        org.joda.time.Instant instant27 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime28 = instant27.toDateTime();
        org.joda.time.DateTime.Property property29 = dateTime28.era();
        org.joda.time.DateTime dateTime30 = dateTime28.withTimeAtStartOfDay();
        org.joda.time.Duration duration33 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration33, readableInstant34, periodType35);
        mutablePeriod36.setMonths((int) '4');
        org.joda.time.DateTime dateTime39 = dateTime28.plus((org.joda.time.ReadablePeriod) mutablePeriod36);
        org.joda.time.DateTime dateTime41 = dateTime28.minusWeeks((int) (byte) 1);
        int int42 = dateTime25.compareTo((org.joda.time.ReadableInstant) dateTime28);
        org.joda.time.DateTime.Property property43 = dateTime28.minuteOfHour();
        org.joda.time.DateTime dateTime45 = dateTime28.withYear(1969);
        org.joda.time.Chronology chronology46 = dateTime45.getChronology();
        org.joda.time.DateTimeField dateTimeField47 = chronology46.year();
        org.joda.time.DateTimeField dateTimeField48 = chronology46.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField49 = chronology46.dayOfWeek();
        mutablePeriod3.setPeriod(38716L, chronology46);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant22 and dateTime23", (instant22.compareTo(dateTime23) == 0) == instant22.equals(dateTime23));
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test1000");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime2 = instant1.toDateTime();
        org.joda.time.DateTime.Property property3 = dateTime2.era();
        org.joda.time.DateTime dateTime4 = dateTime2.withTimeAtStartOfDay();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8, periodType9);
        mutablePeriod10.setMonths((int) '4');
        org.joda.time.DateTime dateTime13 = dateTime2.plus((org.joda.time.ReadablePeriod) mutablePeriod10);
        java.lang.Object obj14 = null;
        org.joda.time.Instant instant15 = new org.joda.time.Instant(obj14);
        org.joda.time.DateTimeZone dateTimeZone16 = instant15.getZone();
        java.lang.String str17 = dateTimeZone16.toString();
        int int19 = dateTimeZone16.getOffset(1L);
        boolean boolean21 = dateTimeZone16.isStandardOffset(0L);
        org.joda.time.DateTime dateTime22 = dateTime2.withZoneRetainFields(dateTimeZone16);
        org.joda.time.DateTime dateTime24 = dateTime22.plusYears(1969);
        org.joda.time.DateTime dateTime26 = dateTime24.minusWeeks(1439);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType28 = periodType27.withMonthsRemoved();
        org.joda.time.Duration duration31 = new org.joda.time.Duration((long) ' ', (long) ' ');
        org.joda.time.Period period32 = duration31.toPeriod();
        org.joda.time.Duration duration34 = duration31.plus((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = duration31.toPeriodTo(readableInstant35);
        org.joda.time.Weeks weeks37 = period36.toStandardWeeks();
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = period36.get(durationFieldType38);
        int int40 = period36.getWeeks();
        org.joda.time.Duration duration41 = period36.toStandardDuration();
        boolean boolean42 = periodType28.equals((java.lang.Object) duration41);
        long long43 = duration41.getMillis();
        org.joda.time.DateTime dateTime44 = dateTime24.minus((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Instant instant46 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime47 = instant46.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone48 = null;
        org.joda.time.DateTime dateTime49 = dateTime47.withZoneRetainFields(dateTimeZone48);
        org.joda.time.Instant instant51 = new org.joda.time.Instant((long) (byte) -1);
        org.joda.time.DateTime dateTime52 = instant51.toDateTime();
        org.joda.time.DateTime.Property property53 = dateTime52.era();
        org.joda.time.DateTime dateTime54 = dateTime52.withTimeAtStartOfDay();
        org.joda.time.Duration duration57 = new org.joda.time.Duration((-1L), 10L);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.PeriodType periodType59 = null;
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration57, readableInstant58, periodType59);
        mutablePeriod60.setMonths((int) '4');
        org.joda.time.DateTime dateTime63 = dateTime52.plus((org.joda.time.ReadablePeriod) mutablePeriod60);
        org.joda.time.DateTime dateTime65 = dateTime52.minusWeeks((int) (byte) 1);
        int int66 = dateTime49.compareTo((org.joda.time.ReadableInstant) dateTime52);
        org.joda.time.DateTime.Property property67 = dateTime52.minuteOfHour();
        org.joda.time.DateTime dateTime69 = dateTime52.withYear(1969);
        org.joda.time.Chronology chronology70 = dateTime69.getChronology();
        org.joda.time.DateTimeField dateTimeField71 = chronology70.year();
        org.joda.time.MutableDateTime mutableDateTime72 = dateTime44.toMutableDateTime(chronology70);
        org.joda.time.DateTime.Property property73 = dateTime44.hourOfDay();
        int int74 = property73.getMinimumValue();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime2", (instant1.compareTo(dateTime2) == 0) == instant1.equals(dateTime2));
    }
}

